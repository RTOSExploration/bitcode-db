; ModuleID = 'build/96b_neonkey/threads/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct._sfnode, %struct._wait_q_t }
%struct._sflist = type { %struct._sfnode*, %struct._sfnode* }
%struct._sfnode = type { i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.led = type { %struct.gpio_dt_spec, i8 }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct._sfnode }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct._sfnode] }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct._sfnode }
%struct.arm_mpu_region = type { i32, i8*, %struct._sfnode }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct._sfnode, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct._sfnode, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.printk_data_t = type { i8*, i32, i32 }
%struct.__va_list = type { i8* }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct._sfnode, %struct._sfnode }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct._sfnode, %struct._sfnode, %struct._sfnode, %struct._sfnode, %struct._sfnode, %struct._sfnode, %struct._sfnode, i32 }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [86 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [86 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238088 to i8*), void (i8*)* inttoptr (i32 134236553 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238088 to i8*), void (i8*)* inttoptr (i32 134236533 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238088 to i8*), void (i8*)* inttoptr (i32 134236523 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238088 to i8*), void (i8*)* inttoptr (i32 134236623 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238088 to i8*), void (i8*)* inttoptr (i32 134236613 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238088 to i8*), void (i8*)* inttoptr (i32 134236603 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238088 to i8*), void (i8*)* inttoptr (i32 134236593 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238088 to i8*), void (i8*)* inttoptr (i32 134236583 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238088 to i8*), void (i8*)* inttoptr (i32 134236573 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238088 to i8*), void (i8*)* inttoptr (i32 134236563 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238088 to i8*), void (i8*)* inttoptr (i32 134236543 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [43 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_blink0_id to i8*), i8* bitcast (%struct._static_thread_data* @_k_thread_data_blink1_id to i8*), i8* bitcast (%struct._static_thread_data* @_k_thread_data_uart_out_id to i8*), i8* bitcast (%struct.k_fifo* @printk_fifo to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.k_heap* @_system_heap to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@printk_fifo = dso_local global %struct.k_fifo { %struct.k_queue { %struct._sflist zeroinitializer, %struct._sfnode zeroinitializer, %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @printk_fifo to i8*), i64 12) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_fifo* @printk_fifo to i8*), i64 12) to %struct._dnode*) } } } } }, section "._k_queue.static.printk_fifo", align 4, !dbg !25
@.str = private unnamed_addr constant [31 x i8] c"Error: %s device is not ready\0A\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"Error %d: failed to configure pin %d (LED '%d')\0A\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"mem_ptr != 0\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"CMAKE_SOURCE_DIR/src/main.c\00", align 1
@led0 = internal constant %struct.led { %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_19, i8 12, i16 0 }, i8 0 }, align 4, !dbg !395
@led1 = internal constant %struct.led { %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_19, i8 13, i16 0 }, i8 1 }, align 4, !dbg !408
@.str.5 = private unnamed_addr constant [27 x i8] c"Toggled led%d; counter=%d\0A\00", align 1
@_k_thread_obj_blink0_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !385
@_k_thread_stack_blink0_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !380
@.str.6 = private unnamed_addr constant [10 x i8] c"blink0_id\00", align 1
@_k_thread_data_blink0_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_blink0_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_blink0_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @blink0 to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 7, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_blink0_id", align 4, !dbg !216
@blink0_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_blink0_id, align 4, !dbg !368
@_k_thread_obj_blink1_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !389
@_k_thread_stack_blink1_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.1", align 64, !dbg !387
@.str.7 = private unnamed_addr constant [10 x i8] c"blink1_id\00", align 1
@_k_thread_data_blink1_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_blink1_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_blink1_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @blink1 to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 7, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_blink1_id", align 4, !dbg !372
@blink1_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_blink1_id, align 4, !dbg !374
@_k_thread_obj_uart_out_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !393
@_k_thread_stack_uart_out_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.2", align 64, !dbg !391
@.str.8 = private unnamed_addr constant [12 x i8] c"uart_out_id\00", align 1
@_k_thread_data_uart_out_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_uart_out_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_uart_out_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @uart_out to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 7, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_uart_out_id", align 4, !dbg !376
@uart_out_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_uart_out_id, align 4, !dbg !378
@.str.10 = private unnamed_addr constant [42 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio.h\00", align 1
@.str.18 = private unnamed_addr constant [62 x i8] c"(cfg->port_pin_mask & (gpio_port_pins_t)(1UL << (pin))) != 0U\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c"\09Unsupported pin\0A\00", align 1
@.str.20 = private unnamed_addr constant [93 x i8] c"(flags & ((1U << 21) | (1U << 22) | (1U << 23) | (1U << 24) | (1U << 25) | (1U << 26))) == 0\00", align 1
@.str.21 = private unnamed_addr constant [36 x i8] c"\09Interrupt flags are not supported\0A\00", align 1
@.str.22 = private unnamed_addr constant [57 x i8] c"(flags & ((1 << 4) | (1 << 5))) != ((1 << 4) | (1 << 5))\00", align 1
@.str.23 = private unnamed_addr constant [61 x i8] c"\09Pull Up and Pull Down should not be enabled simultaneously\0A\00", align 1
@.str.24 = private unnamed_addr constant [53 x i8] c"(flags & (1U << 17)) != 0 || (flags & (1 << 1)) == 0\00", align 1
@.str.25 = private unnamed_addr constant [82 x i8] c"\09Output needs to be enabled for 'Open Drain', 'Open Source' mode to be supported\0A\00", align 1
@.str.26 = private unnamed_addr constant [51 x i8] c"(flags & (1 << 1)) != 0 || (flags & (1 << 2)) == 0\00", align 1
@.str.27 = private unnamed_addr constant [70 x i8] c"(flags & ((1U << 18) | (1U << 19))) == 0 || (flags & (1U << 17)) != 0\00", align 1
@.str.28 = private unnamed_addr constant [59 x i8] c"\09Output needs to be enabled to be initialized low or high\0A\00", align 1
@.str.29 = private unnamed_addr constant [65 x i8] c"(flags & ((1U << 18) | (1U << 19))) != ((1U << 18) | (1U << 19))\00", align 1
@.str.30 = private unnamed_addr constant [44 x i8] c"\09Output cannot be initialized low and high\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !430
@.str.9 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.10 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.11 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.12 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.13 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.14 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.15 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.16 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.17 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.18 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.19 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !441
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !485
@.str.38 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.39 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.40 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.41 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.44 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.45 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.46 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.47 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.50 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.5.51 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.6.52 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.7.48 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.8.49 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct._sfnode { i32 101384192 } }], align 4, !dbg !514
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !520
@.str.62 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.63 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.64 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.65 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.68 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.69 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !649
@.str.6.70 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.71 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !685
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.80, i32 0, i32 0), %struct._sfnode { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.81, i32 0, i32 0), %struct._sfnode { i32 285933600 } }], align 4, !dbg !695
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !700
@.str.80 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.81 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.84 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.85 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.86 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !720
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !892
@.str.4.82 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !854
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !837
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.82, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !810
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !826
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !856
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !869
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !871
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !873
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !875
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !877
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !879
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !881
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !883
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !885
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !887
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !897
@.str.87 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !924
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1021
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1010
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 -134, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1062
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !917
@.str.98 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1128
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1388
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1358
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1344
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1289
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !915
@.str.1.103 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1390
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1362
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1360
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1306
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !913
@.str.2.104 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1403
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1366
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1364
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1312
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !911
@.str.3.105 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1405
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1370
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1368
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1318
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !909
@.str.4.106 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1407
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1374
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1372
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1324
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !907
@.str.5.107 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1409
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1378
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1376
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1330
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !905
@.str.6.108 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1411
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1382
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1380
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1336
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !903
@.str.7.109 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct._sfnode { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1413
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1386
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1384
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1342
@.str.8.99 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.100 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !919
@.str.115 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1415
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1608
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1569
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1610
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.115, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1560
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1562
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1571
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1579
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1602
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1605
@.str.1.116 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.117 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.3.118 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.4.119 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.87, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !994
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1632
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1741
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1743
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1739
@lock = internal global %struct._sfnode zeroinitializer, align 4, !dbg !1734
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1708
@.str.126 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.127 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.128 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.129 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.130 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.131 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1745
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.98, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1287
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.103, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1304
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.104, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1310
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.105, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1316
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.106, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1322
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.107, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1328
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.108, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1334
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.109, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1340
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1835
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1877
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1880
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1887
@.str.162 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.163 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.2.164 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.3.165 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1894
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2107
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2113
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2120
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2125
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.4.176 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.180, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.181, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.182, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.183, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.184, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.178, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.185, i32 0, i32 0)], align 4, !dbg !2153
@.str.179 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.180 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.181 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.182 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.183 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.184 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.178 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.185 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2267
@.str.8.177 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.188 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.189 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.190 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.191 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.193 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.205 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.206 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.207 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.210 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.211 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.212 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.213 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.216 = private unnamed_addr constant [24 x i8] c"(flags & ~0x3UL) == 0UL\00", align 1
@.str.5.217 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/include/zephyr/sys/sflist.h\00", align 1
@.str.6.218 = private unnamed_addr constant [18 x i8] c"\09flags too large\0A\00", align 1
@.str.7.214 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.215 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct._sfnode zeroinitializer, align 4, !dbg !2280
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2390
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2393
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2395
@.str.225 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.242 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.231 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.249 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.259 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.233 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.254 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.230 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.263 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.264 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.272 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.273 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.274 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.275 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.226 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.227 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.228 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.229 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.232 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.246 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.255 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.256 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2115
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2118
@.str.23.267 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.281 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.282 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.283 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.284 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct._sfnode zeroinitializer, align 4, !dbg !2397
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2427
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2432
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2430
@.str.4.285 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.286 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.287 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.291 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.292 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@kheap__system_heap = dso_local global [256 x i8] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/mempool.c\22.kheap_buf__system_heap", align 8, !dbg !2438
@_system_heap = dso_local global %struct.k_heap { %struct.sys_heap { %struct.z_heap* null, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @kheap__system_heap, i32 0, i32 0), i32 256 }, %struct._wait_q_t zeroinitializer, %struct._sfnode zeroinitializer }, section "._k_heap.static._system_heap", align 4, !dbg !2444
@.str.311 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.312 = private unnamed_addr constant [61 x i8] c"align / sizeof(void *) >= 1 && (align % sizeof(void *)) == 0\00", align 1
@.str.2.313 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/mempool.c\00", align 1
@.str.3.314 = private unnamed_addr constant [45 x i8] c"\09align must be a multiple of sizeof(void *)\0A\00", align 1
@.str.4.315 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.5.316 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1982
@.str.6.317 = private unnamed_addr constant [50 x i8] c"align == 0 || ((uintptr_t)mem & (align - 1)) == 0\00", align 1
@.str.7.318 = private unnamed_addr constant [40 x i8] c"\09misaligned memory at %p (align = %zu)\0A\00", align 1
@.str.329 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2481
@.str.331 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.342 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.333 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.343 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.332 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.334 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.339 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.340 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.341 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.344 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.345 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3173 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3175, !srcloc !3176
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3177, !srcloc !3178
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3179, !srcloc !3180
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3181, !srcloc !3182
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3183, !srcloc !3184
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3185, !srcloc !3186
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3187, !srcloc !3188
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3189, !srcloc !3190
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3191, !srcloc !3192
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3193, !srcloc !3194
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3195, !srcloc !3196
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3197, !srcloc !3198
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3199, !srcloc !3200
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3201, !srcloc !3202
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3203, !srcloc !3204
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3205, !srcloc !3206
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3207, !srcloc !3208
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3209, !srcloc !3210
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3211, !srcloc !3212
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3213, !srcloc !3214
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3215, !srcloc !3216
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3217, !srcloc !3218
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3219, !srcloc !3220
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3221, !srcloc !3222
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3223, !srcloc !3224
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3225, !srcloc !3226
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3227, !srcloc !3228
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3229, !srcloc !3232
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3233, !srcloc !3234
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3235, !srcloc !3236
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3237, !srcloc !3238
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3239, !srcloc !3240
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3241, !srcloc !3242
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3243, !srcloc !3244
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3245, !srcloc !3246
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3247, !srcloc !3248
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3249, !srcloc !3250
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3251, !srcloc !3252
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3253, !srcloc !3254
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3255, !srcloc !3256
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3257, !srcloc !3258
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3259, !srcloc !3260
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3261, !srcloc !3262
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3263, !srcloc !3264
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3265, !srcloc !3266
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3267, !srcloc !3268
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3269, !srcloc !3270
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3271, !srcloc !3272
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3273, !srcloc !3274
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3275, !srcloc !3276
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3277, !srcloc !3278
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3279, !srcloc !3280
  ret void, !dbg !3281
}

; Function Attrs: noinline nounwind optsize
define dso_local void @blink0() #1 !dbg !3284 {
  tail call void @blink(%struct.led* noundef nonnull @led0, i32 noundef 100, i32 noundef 0) #26, !dbg !3285
  ret void, !dbg !3286
}

; Function Attrs: noinline nounwind optsize
define dso_local void @blink(%struct.led* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !3287 {
  %4 = alloca %struct.printk_data_t, align 4
  call void @llvm.dbg.value(metadata %struct.led* %0, metadata !3292, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata i32 %1, metadata !3293, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata i32 %2, metadata !3294, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata %struct.led* %0, metadata !3295, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata i32 0, metadata !3298, metadata !DIExpression()), !dbg !3309
  %5 = getelementptr inbounds %struct.led, %struct.led* %0, i32 0, i32 0, i32 0, !dbg !3310
  %6 = load %struct.device*, %struct.device** %5, align 4, !dbg !3310
  %7 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %6) #26, !dbg !3312
  br i1 %7, label %12, label %8, !dbg !3313

8:                                                ; preds = %3
  %9 = load %struct.device*, %struct.device** %5, align 4, !dbg !3314
  %10 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !3316
  %11 = load i8*, i8** %10, align 4, !dbg !3316
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i32 0, i32 0), i8* noundef %11) #27, !dbg !3317
  br label %43, !dbg !3318

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.led, %struct.led* %0, i32 0, i32 0, !dbg !3319
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %13, metadata !3295, metadata !DIExpression()), !dbg !3309
  %14 = tail call fastcc i32 @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef %13) #26, !dbg !3320
  call void @llvm.dbg.value(metadata i32 %14, metadata !3299, metadata !DIExpression()), !dbg !3309
  %15 = icmp eq i32 %14, 0, !dbg !3321
  %16 = getelementptr inbounds %struct.led, %struct.led* %0, i32 0, i32 0, i32 1
  br i1 %15, label %17, label %26, !dbg !3323

17:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 0, metadata !3298, metadata !DIExpression()), !dbg !3309
  %18 = load %struct.device*, %struct.device** %5, align 4, !dbg !3324
  %19 = load i8, i8* %16, align 4, !dbg !3325
  call fastcc void @gpio_pin_set(%struct.device* noundef %18, i8 noundef zeroext %19, i32 noundef 0) #26, !dbg !3326
  %20 = bitcast %struct.printk_data_t* %4 to i8*, !dbg !3327
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %20) #25, !dbg !3327
  call void @llvm.dbg.declare(metadata %struct.printk_data_t* %4, metadata !3300, metadata !DIExpression()), !dbg !3328
  %21 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %4, i32 0, i32 0, !dbg !3329
  store i8* null, i8** %21, align 4, !dbg !3329
  %22 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %4, i32 0, i32 1, !dbg !3329
  store i32 %2, i32* %22, align 4, !dbg !3329
  %23 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %4, i32 0, i32 2, !dbg !3329
  store i32 0, i32* %23, align 4, !dbg !3329
  call void @llvm.dbg.value(metadata i32 12, metadata !3307, metadata !DIExpression()), !dbg !3330
  %24 = call i8* @k_malloc(i32 noundef 12) #27, !dbg !3331
  call void @llvm.dbg.value(metadata i8* %24, metadata !3308, metadata !DIExpression()), !dbg !3330
  %25 = icmp eq i8* %24, null, !dbg !3332
  br i1 %25, label %32, label %33, !dbg !3335

26:                                               ; preds = %12
  %27 = load i8, i8* %16, align 4, !dbg !3336
  %28 = zext i8 %27 to i32, !dbg !3338
  %29 = getelementptr inbounds %struct.led, %struct.led* %0, i32 0, i32 1, !dbg !3339
  %30 = load i8, i8* %29, align 4, !dbg !3339
  %31 = zext i8 %30 to i32, !dbg !3340
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i32 0, i32 0), i32 noundef %14, i32 noundef %28, i32 noundef %31) #27, !dbg !3341
  br label %43, !dbg !3342

32:                                               ; preds = %33, %17
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0), i32 noundef 79) #27, !dbg !3343
  call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0), i32 noundef 79) #27, !dbg !3343
  unreachable, !dbg !3343

33:                                               ; preds = %17, %33
  %34 = phi i8* [ %41, %33 ], [ %24, %17 ]
  %35 = phi i32 [ %37, %33 ], [ 0, %17 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !3298, metadata !DIExpression()), !dbg !3309
  %36 = call i8* @memcpy(i8* noundef nonnull %34, i8* noundef nonnull %20, i32 noundef 12) #27, !dbg !3345
  call void @k_queue_append(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @printk_fifo, i32 0, i32 0), i8* noundef nonnull %34) #27, !dbg !3346
  call fastcc void @k_msleep(i32 noundef %1) #26, !dbg !3348
  %37 = add nuw nsw i32 %35, 1, !dbg !3349
  call void @llvm.dbg.value(metadata i32 %37, metadata !3298, metadata !DIExpression()), !dbg !3309
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %20) #25, !dbg !3350
  %38 = load %struct.device*, %struct.device** %5, align 4, !dbg !3324
  %39 = load i8, i8* %16, align 4, !dbg !3325
  %40 = and i32 %37, 1, !dbg !3351
  call fastcc void @gpio_pin_set(%struct.device* noundef %38, i8 noundef zeroext %39, i32 noundef %40) #26, !dbg !3326
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %20) #25, !dbg !3327
  call void @llvm.dbg.declare(metadata %struct.printk_data_t* %4, metadata !3300, metadata !DIExpression()), !dbg !3328
  store i8* null, i8** %21, align 4, !dbg !3329
  store i32 %2, i32* %22, align 4, !dbg !3329
  store i32 %37, i32* %23, align 4, !dbg !3329
  call void @llvm.dbg.value(metadata i32 12, metadata !3307, metadata !DIExpression()), !dbg !3330
  %41 = call i8* @k_malloc(i32 noundef 12) #27, !dbg !3331
  call void @llvm.dbg.value(metadata i8* %41, metadata !3308, metadata !DIExpression()), !dbg !3330
  %42 = icmp eq i8* %41, null, !dbg !3332
  br i1 %42, label %32, label %33, !dbg !3335, !llvm.loop !3352

43:                                               ; preds = %26, %8
  ret void, !dbg !3354
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !3355 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3360, metadata !DIExpression()), !dbg !3361
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3362, !srcloc !3364
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) #26, !dbg !3365
  ret i1 %2, !dbg !3366
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0) unnamed_addr #1 !dbg !3367 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !3371, metadata !DIExpression()), !dbg !3373
  call void @llvm.dbg.value(metadata i32 131072, metadata !3372, metadata !DIExpression()), !dbg !3373
  %2 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !3374
  %3 = load %struct.device*, %struct.device** %2, align 4, !dbg !3374
  %4 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !3375
  %5 = load i8, i8* %4, align 4, !dbg !3375
  %6 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !3376
  %7 = load i16, i16* %6, align 2, !dbg !3376
  %8 = zext i16 %7 to i32, !dbg !3377
  %9 = or i32 %8, 131072, !dbg !3378
  %10 = tail call fastcc i32 @gpio_pin_configure(%struct.device* noundef %3, i8 noundef zeroext %5, i32 noundef %9) #26, !dbg !3379
  ret i32 %10, !dbg !3380
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_set(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !3381 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3385, metadata !DIExpression()), !dbg !3392
  call void @llvm.dbg.value(metadata i8 %1, metadata !3386, metadata !DIExpression()), !dbg !3392
  call void @llvm.dbg.value(metadata i32 %2, metadata !3387, metadata !DIExpression()), !dbg !3392
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3393
  %5 = bitcast i8** %4 to %struct._sfnode**, !dbg !3393
  %6 = load %struct._sfnode*, %struct._sfnode** %5, align 4, !dbg !3393
  call void @llvm.dbg.value(metadata %struct._sfnode* %6, metadata !3388, metadata !DIExpression()), !dbg !3392
  call void @llvm.dbg.value(metadata %struct._sfnode* undef, metadata !3390, metadata !DIExpression()), !dbg !3392
  %7 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %6, i32 0, i32 0, !dbg !3394
  %8 = load i32, i32* %7, align 4, !dbg !3394
  %9 = zext i8 %1 to i32, !dbg !3394
  %10 = shl nuw i32 1, %9, !dbg !3394
  %11 = and i32 %8, %10, !dbg !3394
  %12 = icmp eq i32 %11, 0, !dbg !3394
  br i1 %12, label %13, label %14, !dbg !3397

13:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 1296) #27, !dbg !3398
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0)) #27, !dbg !3398
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 1296) #27, !dbg !3398
  unreachable, !dbg !3398

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !3400
  %16 = bitcast i8** %15 to %struct._sfnode**, !dbg !3400
  %17 = load %struct._sfnode*, %struct._sfnode** %16, align 4, !dbg !3400
  call void @llvm.dbg.value(metadata %struct._sfnode* %17, metadata !3390, metadata !DIExpression()), !dbg !3392
  %18 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %17, i32 0, i32 0, !dbg !3401
  %19 = load i32, i32* %18, align 4, !dbg !3401
  %20 = and i32 %19, %10, !dbg !3403
  %21 = icmp eq i32 %20, 0, !dbg !3403
  %22 = icmp eq i32 %2, 0, !dbg !3404
  %23 = zext i1 %22 to i32, !dbg !3404
  %24 = select i1 %21, i32 %2, i32 %23, !dbg !3404
  call void @llvm.dbg.value(metadata i32 %24, metadata !3387, metadata !DIExpression()), !dbg !3392
  tail call fastcc void @gpio_pin_set_raw(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %24) #26, !dbg !3405
  ret void, !dbg !3406
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep(i32 noundef %0) unnamed_addr #1 !dbg !3407 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3411, metadata !DIExpression()), !dbg !3412
  %2 = icmp sgt i32 %0, 0, !dbg !3413
  %3 = select i1 %2, i32 %0, i32 0, !dbg !3413
  %4 = zext i32 %3 to i64, !dbg !3413
  %5 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %4) #26, !dbg !3413
  %6 = insertvalue [1 x i64] poison, i64 %5, 0, !dbg !3414
  tail call fastcc void @k_sleep([1 x i64] %6) #26, !dbg !3414
  ret void, !dbg !3415
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3416 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3421, metadata !DIExpression()), !dbg !3422
  call void @llvm.dbg.value(metadata i64 %0, metadata !3423, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 1000, metadata !3428, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 10000, metadata !3429, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8 1, metadata !3430, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8 0, metadata !3431, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8 1, metadata !3432, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8 0, metadata !3433, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8 1, metadata !3434, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i8 0, metadata !3435, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i64 0, metadata !3436, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i64 0, metadata !3436, metadata !DIExpression()), !dbg !3440
  %2 = mul i64 %0, 10, !dbg !3442
  ret i64 %2, !dbg !3448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3449 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3458, metadata !DIExpression()), !dbg !3459
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3460, !srcloc !3462
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #27, !dbg !3463
  ret void, !dbg !3464
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_set_raw(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !3465 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3467, metadata !DIExpression()), !dbg !3472
  call void @llvm.dbg.value(metadata i8 %1, metadata !3468, metadata !DIExpression()), !dbg !3472
  call void @llvm.dbg.value(metadata i32 %2, metadata !3469, metadata !DIExpression()), !dbg !3472
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3473
  %5 = bitcast i8** %4 to %struct._sfnode**, !dbg !3473
  %6 = load %struct._sfnode*, %struct._sfnode** %5, align 4, !dbg !3473
  call void @llvm.dbg.value(metadata %struct._sfnode* %6, metadata !3470, metadata !DIExpression()), !dbg !3472
  %7 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %6, i32 0, i32 0, !dbg !3474
  %8 = load i32, i32* %7, align 4, !dbg !3474
  %9 = zext i8 %1 to i32, !dbg !3474
  %10 = shl nuw i32 1, %9, !dbg !3474
  %11 = and i32 %8, %10, !dbg !3474
  %12 = icmp eq i32 %11, 0, !dbg !3474
  br i1 %12, label %13, label %14, !dbg !3477

13:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 1255) #27, !dbg !3478
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0)) #27, !dbg !3478
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 1255) #27, !dbg !3478
  unreachable, !dbg !3478

14:                                               ; preds = %3
  %15 = icmp eq i32 %2, 0, !dbg !3480
  br i1 %15, label %18, label %16, !dbg !3482

16:                                               ; preds = %14
  %17 = tail call fastcc i32 @gpio_port_set_bits_raw(%struct.device* noundef nonnull %0, i32 noundef %10) #26, !dbg !3483
  call void @llvm.dbg.value(metadata i32 %17, metadata !3471, metadata !DIExpression()), !dbg !3472
  br label %20, !dbg !3485

18:                                               ; preds = %14
  %19 = tail call fastcc i32 @gpio_port_clear_bits_raw(%struct.device* noundef nonnull %0, i32 noundef %10) #26, !dbg !3486
  call void @llvm.dbg.value(metadata i32 %19, metadata !3471, metadata !DIExpression()), !dbg !3472
  br label %20

20:                                               ; preds = %18, %16
  call void @llvm.dbg.value(metadata i32 undef, metadata !3471, metadata !DIExpression()), !dbg !3472
  ret void, !dbg !3488
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !3489 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3492, metadata !DIExpression()), !dbg !3494
  call void @llvm.dbg.value(metadata i32 %1, metadata !3493, metadata !DIExpression()), !dbg !3494
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3495, !srcloc !3497
  %3 = tail call fastcc i32 @z_impl_gpio_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %1) #26, !dbg !3498
  ret i32 %3, !dbg !3499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !3500 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3502, metadata !DIExpression()), !dbg !3504
  call void @llvm.dbg.value(metadata i32 %1, metadata !3503, metadata !DIExpression()), !dbg !3504
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3505, !srcloc !3507
  %3 = tail call fastcc i32 @z_impl_gpio_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %1) #26, !dbg !3508
  ret i32 %3, !dbg !3509
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_gpio_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !3510 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3512, metadata !DIExpression()), !dbg !3515
  call void @llvm.dbg.value(metadata i32 %1, metadata !3513, metadata !DIExpression()), !dbg !3515
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3516
  %4 = bitcast i8** %3 to %struct.gpio_driver_api**, !dbg !3516
  %5 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %4, align 4, !dbg !3516
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %5, metadata !3514, metadata !DIExpression()), !dbg !3515
  %6 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %5, i32 0, i32 4, !dbg !3517
  %7 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %6, align 4, !dbg !3517
  %8 = tail call i32 %7(%struct.device* noundef %0, i32 noundef %1) #27, !dbg !3518
  ret i32 %8, !dbg !3519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_gpio_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !3520 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3522, metadata !DIExpression()), !dbg !3525
  call void @llvm.dbg.value(metadata i32 %1, metadata !3523, metadata !DIExpression()), !dbg !3525
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3526
  %4 = bitcast i8** %3 to %struct.gpio_driver_api**, !dbg !3526
  %5 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %4, align 4, !dbg !3526
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %5, metadata !3524, metadata !DIExpression()), !dbg !3525
  %6 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %5, i32 0, i32 3, !dbg !3527
  %7 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %6, align 4, !dbg !3527
  %8 = tail call i32 %7(%struct.device* noundef %0, i32 noundef %1) #27, !dbg !3528
  ret i32 %8, !dbg !3529
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !3530 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3532, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.value(metadata i8 %1, metadata !3533, metadata !DIExpression()), !dbg !3535
  call void @llvm.dbg.value(metadata i32 %2, metadata !3534, metadata !DIExpression()), !dbg !3535
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3536, !srcloc !3538
  %4 = tail call fastcc i32 @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #26, !dbg !3539
  ret i32 %4, !dbg !3540
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !3541 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3543, metadata !DIExpression()), !dbg !3549
  call void @llvm.dbg.value(metadata i8 %1, metadata !3544, metadata !DIExpression()), !dbg !3549
  call void @llvm.dbg.value(metadata i32 %2, metadata !3545, metadata !DIExpression()), !dbg !3549
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3550
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !3550
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !3550
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !3546, metadata !DIExpression()), !dbg !3549
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !3551
  %8 = bitcast i8** %7 to %struct._sfnode**, !dbg !3551
  %9 = load %struct._sfnode*, %struct._sfnode** %8, align 4, !dbg !3551
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !3547, metadata !DIExpression()), !dbg !3549
  %10 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !3552
  %11 = bitcast i8** %10 to %struct._sfnode**, !dbg !3552
  %12 = load %struct._sfnode*, %struct._sfnode** %11, align 4, !dbg !3552
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !3548, metadata !DIExpression()), !dbg !3549
  %13 = and i32 %2, 132120576, !dbg !3553
  %14 = icmp eq i32 %13, 0, !dbg !3553
  br i1 %14, label %16, label %15, !dbg !3556

15:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([93 x i8], [93 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 679) #27, !dbg !3557
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21, i32 0, i32 0)) #27, !dbg !3557
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 679) #27, !dbg !3557
  unreachable, !dbg !3557

16:                                               ; preds = %3
  %17 = and i32 %2, 48, !dbg !3559
  %18 = icmp eq i32 %17, 48, !dbg !3559
  br i1 %18, label %19, label %20, !dbg !3562

19:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 683) #27, !dbg !3563
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.23, i32 0, i32 0)) #27, !dbg !3563
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 683) #27, !dbg !3563
  unreachable, !dbg !3563

20:                                               ; preds = %16
  %21 = and i32 %2, 131072, !dbg !3565
  %22 = icmp ne i32 %21, 0, !dbg !3565
  %23 = and i32 %2, 131074, !dbg !3565
  %24 = icmp eq i32 %23, 2, !dbg !3565
  br i1 %24, label %25, label %26, !dbg !3565

25:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 687) #27, !dbg !3568
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([82 x i8], [82 x i8]* @.str.25, i32 0, i32 0)) #27, !dbg !3568
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 687) #27, !dbg !3568
  unreachable, !dbg !3568

26:                                               ; preds = %20
  %27 = and i32 %2, 6, !dbg !3570
  %28 = icmp eq i32 %27, 4, !dbg !3570
  br i1 %28, label %29, label %30, !dbg !3570

29:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.26, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 690) #27, !dbg !3573
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 690) #27, !dbg !3573
  unreachable, !dbg !3573

30:                                               ; preds = %26
  %31 = and i32 %2, 786432, !dbg !3575
  %32 = icmp eq i32 %31, 0, !dbg !3575
  %33 = or i1 %32, %22, !dbg !3575
  br i1 %33, label %35, label %34, !dbg !3575

34:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 694) #27, !dbg !3578
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i32 0, i32 0)) #27, !dbg !3578
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 694) #27, !dbg !3578
  unreachable, !dbg !3578

35:                                               ; preds = %30
  %36 = icmp eq i32 %31, 786432, !dbg !3580
  br i1 %36, label %37, label %38, !dbg !3583

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.29, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 698) #27, !dbg !3584
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30, i32 0, i32 0)) #27, !dbg !3584
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 698) #27, !dbg !3584
  unreachable, !dbg !3584

38:                                               ; preds = %35
  %39 = and i32 %2, 1048577, !dbg !3586
  %40 = icmp ne i32 %39, 1048577, !dbg !3586
  %41 = or i1 %40, %32, !dbg !3586
  %42 = xor i32 %2, 786432, !dbg !3586
  %43 = select i1 %41, i32 %2, i32 %42, !dbg !3586
  call void @llvm.dbg.value(metadata i32 %43, metadata !3545, metadata !DIExpression()), !dbg !3549
  call void @llvm.dbg.value(metadata i32 %43, metadata !3545, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !3549
  %44 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %9, i32 0, i32 0, !dbg !3588
  %45 = load i32, i32* %44, align 4, !dbg !3588
  %46 = zext i8 %1 to i32, !dbg !3588
  %47 = shl nuw i32 1, %46, !dbg !3588
  %48 = and i32 %45, %47, !dbg !3588
  %49 = icmp eq i32 %48, 0, !dbg !3588
  br i1 %49, label %50, label %51, !dbg !3591

50:                                               ; preds = %38
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 709) #27, !dbg !3592
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0)) #27, !dbg !3592
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0), i32 noundef 709) #27, !dbg !3592
  unreachable, !dbg !3592

51:                                               ; preds = %38
  %52 = and i32 %43, 1, !dbg !3594
  %53 = icmp eq i32 %52, 0, !dbg !3596
  br i1 %53, label %58, label %54, !dbg !3597

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %12, i32 0, i32 0, !dbg !3598
  %56 = load i32, i32* %55, align 4, !dbg !3600
  %57 = or i32 %56, %47, !dbg !3600
  store i32 %57, i32* %55, align 4, !dbg !3600
  br label %63, !dbg !3601

58:                                               ; preds = %51
  %59 = xor i32 %47, -1, !dbg !3602
  %60 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %12, i32 0, i32 0, !dbg !3604
  %61 = load i32, i32* %60, align 4, !dbg !3605
  %62 = and i32 %61, %59, !dbg !3605
  store i32 %62, i32* %60, align 4, !dbg !3605
  br label %63

63:                                               ; preds = %58, %54
  %64 = and i32 %43, -1048577, !dbg !3606
  call void @llvm.dbg.value(metadata i32 %64, metadata !3545, metadata !DIExpression()), !dbg !3549
  %65 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !3607
  %66 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %65, align 4, !dbg !3607
  %67 = tail call i32 %66(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %64) #27, !dbg !3608
  ret i32 %67, !dbg !3609
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !3610 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3612, metadata !DIExpression()), !dbg !3613
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !3614
  ret i1 %2, !dbg !3615
}

; Function Attrs: noinline nounwind optsize
define dso_local void @blink1() #1 !dbg !3616 {
  tail call void @blink(%struct.led* noundef nonnull @led1, i32 noundef 1000, i32 noundef 1) #26, !dbg !3617
  ret void, !dbg !3618
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @uart_out() #5 !dbg !3619 {
  br label %1, !dbg !3626

1:                                                ; preds = %0, %1
  %2 = tail call fastcc i8* @k_queue_get() #26, !dbg !3627
  call void @llvm.dbg.value(metadata i8* %2, metadata !3624, metadata !DIExpression()), !dbg !3628
  call void @llvm.dbg.value(metadata i8* %2, metadata !3621, metadata !DIExpression()), !dbg !3629
  %3 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !3630
  %4 = bitcast i8* %3 to i32*, !dbg !3630
  %5 = load i32, i32* %4, align 4, !dbg !3630
  %6 = getelementptr inbounds i8, i8* %2, i32 8, !dbg !3631
  %7 = bitcast i8* %6 to i32*, !dbg !3631
  %8 = load i32, i32* %7, align 4, !dbg !3631
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i32 0, i32 0), i32 noundef %5, i32 noundef %8) #27, !dbg !3632
  tail call void @k_free(i8* noundef %2) #27, !dbg !3633
  br label %1, !dbg !3626, !llvm.loop !3634
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @k_queue_get() unnamed_addr #1 !dbg !3636 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3642, metadata !DIExpression()), !dbg !3643
  call void @llvm.dbg.value(metadata %struct.k_queue* getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @printk_fifo, i32 0, i32 0), metadata !3641, metadata !DIExpression()), !dbg !3643
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3644, !srcloc !3646
  %1 = tail call i8* @z_impl_k_queue_get(%struct.k_queue* noundef getelementptr inbounds (%struct.k_fifo, %struct.k_fifo* @printk_fifo, i32 0, i32 0), [1 x i64] [i64 -1]) #27, !dbg !3647
  ret i8* %1, !dbg !3648
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3649 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3651, metadata !DIExpression()), !dbg !3652
  ret i32 0, !dbg !3653
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !3654 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3658, metadata !DIExpression()), !dbg !3659
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3660
  ret void, !dbg !3661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #7 !dbg !3662 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3665
  ret i8* %1, !dbg !3666
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3667 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3679, metadata !DIExpression()), !dbg !3688
  call void @llvm.dbg.value(metadata i8* %0, metadata !3678, metadata !DIExpression()), !dbg !3688
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3689
  ret void, !dbg !3691
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3696, metadata !DIExpression()), !dbg !3698
  call void @llvm.dbg.value(metadata i8* %1, metadata !3697, metadata !DIExpression()), !dbg !3698
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3699
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !3699
  ret i32 %4, !dbg !3700
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3701 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3713, metadata !DIExpression()), !dbg !3714
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3710, metadata !DIExpression()), !dbg !3714
  call void @llvm.dbg.value(metadata i8* %1, metadata !3711, metadata !DIExpression()), !dbg !3714
  call void @llvm.dbg.value(metadata i8* %2, metadata !3712, metadata !DIExpression()), !dbg !3714
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !3715
  ret void, !dbg !3716
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3717 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3721, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %1, metadata !3722, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 0, metadata !3723, metadata !DIExpression()), !dbg !3724
  %3 = icmp eq i32 %1, 0, !dbg !3725
  br i1 %3, label %13, label %4, !dbg !3728

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3723, metadata !DIExpression()), !dbg !3724
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3729
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3731
  %8 = load i8, i8* %7, align 1, !dbg !3731
  %9 = zext i8 %8 to i32, !dbg !3731
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !3729
  %11 = add nuw i32 %5, 1, !dbg !3732
  call void @llvm.dbg.value(metadata i32 %11, metadata !3723, metadata !DIExpression()), !dbg !3724
  %12 = icmp eq i32 %11, %1, !dbg !3725
  br i1 %12, label %13, label %4, !dbg !3728, !llvm.loop !3733

13:                                               ; preds = %4, %2
  ret void, !dbg !3735
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3736 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3740, metadata !DIExpression()), !dbg !3742
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3743
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3743
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3741, metadata !DIExpression()), !dbg !3744
  call void @llvm.va_start(i8* nonnull %3), !dbg !3745
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3746
  %5 = load i32, i32* %4, align 4, !dbg !3746
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3746
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3746
  call void @llvm.va_end(i8* nonnull %3), !dbg !3747
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3748
  ret void, !dbg !3748
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #8

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3749 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3753, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i32 %1, metadata !3754, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i8* %2, metadata !3755, metadata !DIExpression()), !dbg !3758
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3759
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3759
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3756, metadata !DIExpression()), !dbg !3760
  call void @llvm.va_start(i8* nonnull %5), !dbg !3761
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3762
  %7 = load i32, i32* %6, align 4, !dbg !3762
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3762
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3762
  call void @llvm.dbg.value(metadata i32 %9, metadata !3757, metadata !DIExpression()), !dbg !3758
  call void @llvm.va_end(i8* nonnull %5), !dbg !3763
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3764
  ret i32 %9, !dbg !3765
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3766 {
  %5 = alloca %struct.printk_data_t, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3773, metadata !DIExpression()), !dbg !3780
  call void @llvm.dbg.value(metadata i8* %0, metadata !3770, metadata !DIExpression()), !dbg !3780
  call void @llvm.dbg.value(metadata i32 %1, metadata !3771, metadata !DIExpression()), !dbg !3780
  call void @llvm.dbg.value(metadata i8* %2, metadata !3772, metadata !DIExpression()), !dbg !3780
  %6 = bitcast %struct.printk_data_t* %5 to i8*, !dbg !3781
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3781
  call void @llvm.dbg.declare(metadata %struct.printk_data_t* %5, metadata !3774, metadata !DIExpression()), !dbg !3782
  %7 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %5, i32 0, i32 0, !dbg !3783
  store i8* %0, i8** %7, align 4, !dbg !3783
  %8 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %5, i32 0, i32 1, !dbg !3783
  store i32 %1, i32* %8, align 4, !dbg !3783
  %9 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %5, i32 0, i32 2, !dbg !3783
  store i32 0, i32* %9, align 4, !dbg !3783
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.printk_data_t*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3784
  %10 = load i32, i32* %9, align 4, !dbg !3785
  %11 = load i32, i32* %8, align 4, !dbg !3787
  %12 = icmp slt i32 %10, %11, !dbg !3788
  br i1 %12, label %13, label %15, !dbg !3789

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3790
  store i8 0, i8* %14, align 1, !dbg !3792
  br label %15, !dbg !3793

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3794
  ret i32 %10, !dbg !3795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.printk_data_t* nocapture noundef %1) #9 !dbg !3796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3801, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata %struct.printk_data_t* %1, metadata !3802, metadata !DIExpression()), !dbg !3803
  %3 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %1, i32 0, i32 0, !dbg !3804
  %4 = load i8*, i8** %3, align 4, !dbg !3804
  %5 = icmp eq i8* %4, null, !dbg !3806
  %6 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3807
  br i1 %5, label %12, label %8, !dbg !3808

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %1, i32 0, i32 1, !dbg !3809
  %10 = load i32, i32* %9, align 4, !dbg !3809
  %11 = icmp slt i32 %7, %10, !dbg !3810
  br i1 %11, label %15, label %12, !dbg !3811

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.printk_data_t, %struct.printk_data_t* %1, i32 0, i32 2, !dbg !3812
  %14 = add nsw i32 %7, 1, !dbg !3814
  store i32 %14, i32* %13, align 4, !dbg !3814
  br label %25, !dbg !3815

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3816
  %17 = icmp eq i32 %7, %16, !dbg !3818
  br i1 %17, label %18, label %21, !dbg !3819

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3820
  store i32 %19, i32* %6, align 4, !dbg !3820
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3822
  store i8 0, i8* %20, align 1, !dbg !3823
  br label %25, !dbg !3824

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3825
  %23 = add nsw i32 %7, 1, !dbg !3827
  store i32 %23, i32* %6, align 4, !dbg !3827
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3828
  store i8 %22, i8* %24, align 1, !dbg !3829
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3830
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #5 !dbg !3831 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3836, metadata !DIExpression()), !dbg !3840
  call void @llvm.dbg.value(metadata i8* %1, metadata !3837, metadata !DIExpression()), !dbg !3840
  call void @llvm.dbg.value(metadata i8* %2, metadata !3838, metadata !DIExpression()), !dbg !3840
  call void @llvm.dbg.value(metadata i8* %3, metadata !3839, metadata !DIExpression()), !dbg !3840
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !3841
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !3842
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3843
  unreachable, !dbg !3844
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #10 !dbg !3845 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !3951
  ret %struct.k_thread* %1, !dbg !3952
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3953 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3957, metadata !DIExpression()), !dbg !3958
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3959, !srcloc !3961
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !3962
  ret void, !dbg !3963
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #10 !dbg !3964 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3965, !srcloc !3967
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !3968
  ret %struct.k_thread* %1, !dbg !3969
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !3970 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3981, metadata !DIExpression()), !dbg !3985
  call void @llvm.dbg.value(metadata i8* %1, metadata !3982, metadata !DIExpression()), !dbg !3985
  %3 = icmp eq i8* %1, null, !dbg !3986
  br i1 %3, label %16, label %4, !dbg !3988

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3989
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3989
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3983, metadata !DIExpression()), !dbg !3985
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3990, !range !3991
  call void @llvm.dbg.value(metadata i32 %7, metadata !3984, metadata !DIExpression()), !dbg !3985
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3992
  br i1 %8, label %10, label %9, !dbg !3995

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 176) #27, !dbg !3996
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.12, i32 0, i32 0), i8* noundef nonnull %1) #27, !dbg !3996
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 176) #27, !dbg !3996
  unreachable, !dbg !3996

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3998
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #26, !dbg !3998
  %13 = icmp eq i32 %12, %7, !dbg !3998
  br i1 %13, label %15, label %14, !dbg !4001

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 185) #27, !dbg !4002
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.14, i32 0, i32 0), i8* noundef nonnull %1) #27, !dbg !4002
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 185) #27, !dbg !4002
  unreachable, !dbg !4002

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !4004
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !4005
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !4006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #4 !dbg !4007 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4011, metadata !DIExpression()), !dbg !4015
  call void @llvm.dbg.value(metadata i8* %1, metadata !4012, metadata !DIExpression()), !dbg !4015
  call void @llvm.dbg.value(metadata i8* %1, metadata !4013, metadata !DIExpression()), !dbg !4015
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4016
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4014, metadata !DIExpression()), !dbg !4015
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !4017
  %5 = ptrtoint i8* %4 to i32, !dbg !4018
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !4018
  %7 = sub i32 %5, %6, !dbg !4018
  %8 = lshr i32 %7, 3, !dbg !4019
  ret i32 %8, !dbg !4020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !4021 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4025, metadata !DIExpression()), !dbg !4027
  call void @llvm.dbg.value(metadata i32 %1, metadata !4026, metadata !DIExpression()), !dbg !4027
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4028
  %4 = and i32 %3, 1, !dbg !4029
  %5 = icmp ne i32 %4, 0, !dbg !4028
  ret i1 %5, !dbg !4030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !4031 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4035, metadata !DIExpression()), !dbg !4037
  call void @llvm.dbg.value(metadata i32 %1, metadata !4036, metadata !DIExpression()), !dbg !4037
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4038
  %4 = add i32 %3, %1, !dbg !4039
  ret i32 %4, !dbg !4040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !4041 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4043, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.value(metadata i32 %1, metadata !4044, metadata !DIExpression()), !dbg !4045
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !4046
  %4 = sub i32 %1, %3, !dbg !4047
  ret i32 %4, !dbg !4048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #9 !dbg !4049 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4053, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.value(metadata i32 %1, metadata !4054, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.value(metadata i1 %2, metadata !4055, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4058
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4059
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4056, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4057, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4058
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !4060
  %6 = bitcast i8* %5 to i16*, !dbg !4060
  %7 = load i16, i16* %6, align 2, !dbg !4060
  %8 = and i16 %7, -2, !dbg !4064
  %9 = zext i1 %2 to i16, !dbg !4064
  %10 = or i16 %8, %9, !dbg !4064
  store i16 %10, i16* %6, align 2, !dbg !4060
  ret void, !dbg !4065
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !4066 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4070, metadata !DIExpression()), !dbg !4072
  call void @llvm.dbg.value(metadata i32 %1, metadata !4071, metadata !DIExpression()), !dbg !4072
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4073
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4075
  br i1 %4, label %7, label %5, !dbg !4076

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4077
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4079
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4080
  br label %7, !dbg !4081

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4082
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4084
  br i1 %9, label %13, label %10, !dbg !4085

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !4086
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4088
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !4089
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4090
  call void @llvm.dbg.value(metadata i32 %12, metadata !4071, metadata !DIExpression()), !dbg !4072
  br label %13, !dbg !4091

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4071, metadata !DIExpression()), !dbg !4072
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !4092
  ret void, !dbg !4093
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !4094 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4096, metadata !DIExpression()), !dbg !4101
  call void @llvm.dbg.value(metadata i32 %1, metadata !4097, metadata !DIExpression()), !dbg !4101
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4102, !range !4103
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4104
  call void @llvm.dbg.value(metadata i32 %4, metadata !4098, metadata !DIExpression()), !dbg !4105
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4106
  ret void, !dbg !4107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4108 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4112, metadata !DIExpression()), !dbg !4117
  call void @llvm.dbg.value(metadata i32 %1, metadata !4113, metadata !DIExpression()), !dbg !4117
  call void @llvm.dbg.value(metadata i32 %2, metadata !4114, metadata !DIExpression()), !dbg !4117
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4118
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4119
  %6 = add i32 %5, %4, !dbg !4120
  call void @llvm.dbg.value(metadata i32 %6, metadata !4115, metadata !DIExpression()), !dbg !4117
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4121
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4122
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4123
  ret void, !dbg !4124
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !4125 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4127, metadata !DIExpression()), !dbg !4132
  call void @llvm.dbg.value(metadata i32 %1, metadata !4128, metadata !DIExpression()), !dbg !4132
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4133, !range !4103
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4134
  call void @llvm.dbg.value(metadata i32 %4, metadata !4129, metadata !DIExpression()), !dbg !4135
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4136
  ret void, !dbg !4137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !4138 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4142, metadata !DIExpression()), !dbg !4144
  call void @llvm.dbg.value(metadata i32 %1, metadata !4143, metadata !DIExpression()), !dbg !4144
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4145
  %4 = lshr i32 %3, 1, !dbg !4146
  ret i32 %4, !dbg !4147
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #10 !dbg !4148 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4152, metadata !DIExpression()), !dbg !4155
  call void @llvm.dbg.value(metadata i32 %1, metadata !4153, metadata !DIExpression()), !dbg !4155
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !4156
  %4 = add i32 %1, 1, !dbg !4157
  %5 = sub i32 %4, %3, !dbg !4158
  call void @llvm.dbg.value(metadata i32 %5, metadata !4154, metadata !DIExpression()), !dbg !4155
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !4159, !range !4160
  %7 = sub nsw i32 31, %6, !dbg !4161
  ret i32 %7, !dbg !4162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4163 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4167, metadata !DIExpression()), !dbg !4176
  call void @llvm.dbg.value(metadata i32 %1, metadata !4168, metadata !DIExpression()), !dbg !4176
  call void @llvm.dbg.value(metadata i32 %2, metadata !4169, metadata !DIExpression()), !dbg !4176
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !4170, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4176
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !4177
  %5 = load i32, i32* %4, align 4, !dbg !4177
  %6 = icmp eq i32 %5, 0, !dbg !4178
  br i1 %6, label %7, label %12, !dbg !4179

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4180
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4182
  %10 = load i32, i32* %9, align 4, !dbg !4183
  %11 = or i32 %10, %8, !dbg !4183
  store i32 %11, i32* %9, align 4, !dbg !4183
  store i32 %1, i32* %4, align 4, !dbg !4184
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4185
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4186
  br label %14, !dbg !4187

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !4172, metadata !DIExpression()), !dbg !4188
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !4189, !range !4190
  call void @llvm.dbg.value(metadata i32 %13, metadata !4175, metadata !DIExpression()), !dbg !4188
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !4191
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4192
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !4193
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !4194
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !4195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !4196 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4198, metadata !DIExpression()), !dbg !4201
  call void @llvm.dbg.value(metadata i32 %1, metadata !4199, metadata !DIExpression()), !dbg !4201
  call void @llvm.dbg.value(metadata i32 %2, metadata !4200, metadata !DIExpression()), !dbg !4201
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !4202
  ret void, !dbg !4203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !4204 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4206, metadata !DIExpression()), !dbg !4209
  call void @llvm.dbg.value(metadata i32 %1, metadata !4207, metadata !DIExpression()), !dbg !4209
  call void @llvm.dbg.value(metadata i32 %2, metadata !4208, metadata !DIExpression()), !dbg !4209
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !4210
  ret void, !dbg !4211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #7 !dbg !4212 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4214, metadata !DIExpression()), !dbg !4216
  call void @llvm.dbg.value(metadata i32 %1, metadata !4215, metadata !DIExpression()), !dbg !4216
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !4217
  ret i32 %3, !dbg !4218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4219 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4223, metadata !DIExpression()), !dbg !4228
  call void @llvm.dbg.value(metadata i32 %1, metadata !4224, metadata !DIExpression()), !dbg !4228
  call void @llvm.dbg.value(metadata i32 %2, metadata !4225, metadata !DIExpression()), !dbg !4228
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4229
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4226, metadata !DIExpression()), !dbg !4228
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4227, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4228
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4227, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4228
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4230
  call void @llvm.dbg.value(metadata i8* %5, metadata !4227, metadata !DIExpression()), !dbg !4228
  %6 = bitcast i8* %5 to i16*, !dbg !4231
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4234
  %8 = load i16, i16* %7, align 2, !dbg !4234
  %9 = zext i16 %8 to i32, !dbg !4234
  ret i32 %9, !dbg !4235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #4 !dbg !4236 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4240, metadata !DIExpression()), !dbg !4241
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4242
  ret %struct.chunk_unit_t* %2, !dbg !4243
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #6 !dbg !4244 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4248, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata i32 %1, metadata !4249, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata i32 %2, metadata !4250, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata i32 %3, metadata !4251, metadata !DIExpression()), !dbg !4254
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4255
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !4252, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !4253, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4254
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !4256
  call void @llvm.dbg.value(metadata i8* %6, metadata !4253, metadata !DIExpression()), !dbg !4254
  %7 = trunc i32 %3 to i16, !dbg !4257
  %8 = bitcast i8* %6 to i16*, !dbg !4260
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !4261
  store i16 %7, i16* %9, align 2, !dbg !4262
  ret void, !dbg !4263
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #4 !dbg !4264 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4268, metadata !DIExpression()), !dbg !4269
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !4270
  ret i32 %2, !dbg !4271
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !4272 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4276, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %1, metadata !4277, metadata !DIExpression()), !dbg !4278
  %3 = add i32 %1, 4, !dbg !4279
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !4280
  ret i32 %4, !dbg !4281
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #4 !dbg !4282 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4286, metadata !DIExpression()), !dbg !4287
  %2 = add i32 %0, 7, !dbg !4288
  %3 = lshr i32 %2, 3, !dbg !4289
  ret i32 %3, !dbg !4290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !4291 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4295, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.value(metadata i32 %1, metadata !4296, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.value(metadata i32 %2, metadata !4297, metadata !DIExpression()), !dbg !4298
  %4 = shl i32 %2, 1, !dbg !4299
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !4300
  ret void, !dbg !4301
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !4302 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4304, metadata !DIExpression()), !dbg !4307
  call void @llvm.dbg.value(metadata i32 %1, metadata !4305, metadata !DIExpression()), !dbg !4307
  call void @llvm.dbg.value(metadata i32 %2, metadata !4306, metadata !DIExpression()), !dbg !4307
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !4308
  ret void, !dbg !4309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4310 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4312, metadata !DIExpression()), !dbg !4320
  call void @llvm.dbg.value(metadata i32 %1, metadata !4313, metadata !DIExpression()), !dbg !4320
  call void @llvm.dbg.value(metadata i32 %2, metadata !4314, metadata !DIExpression()), !dbg !4320
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4321
  call void @llvm.dbg.value(metadata %struct._sfnode* %4, metadata !4315, metadata !DIExpression()), !dbg !4320
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4322
  %6 = icmp eq i32 %5, %1, !dbg !4323
  br i1 %6, label %7, label %14, !dbg !4324

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4325
  %9 = xor i32 %8, -1, !dbg !4327
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4328
  %11 = load i32, i32* %10, align 4, !dbg !4329
  %12 = and i32 %11, %9, !dbg !4329
  store i32 %12, i32* %10, align 4, !dbg !4329
  %13 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %4, i32 0, i32 0, !dbg !4330
  store i32 0, i32* %13, align 4, !dbg !4331
  br label %17, !dbg !4332

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4333
  call void @llvm.dbg.value(metadata i32 %15, metadata !4316, metadata !DIExpression()), !dbg !4334
  call void @llvm.dbg.value(metadata i32 %5, metadata !4319, metadata !DIExpression()), !dbg !4334
  %16 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %4, i32 0, i32 0, !dbg !4335
  store i32 %5, i32* %16, align 4, !dbg !4336
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4337
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4338
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #7 !dbg !4340 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4342, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.value(metadata i32 %1, metadata !4343, metadata !DIExpression()), !dbg !4344
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4345
  ret i32 %3, !dbg !4346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #7 !dbg !4347 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4351, metadata !DIExpression()), !dbg !4358
  call void @llvm.dbg.value(metadata i8* %1, metadata !4352, metadata !DIExpression()), !dbg !4358
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4359
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4359
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4353, metadata !DIExpression()), !dbg !4358
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4360
  call void @llvm.dbg.value(metadata i32 %5, metadata !4354, metadata !DIExpression()), !dbg !4358
  %6 = ptrtoint i8* %1 to i32, !dbg !4361
  call void @llvm.dbg.value(metadata i32 %6, metadata !4355, metadata !DIExpression()), !dbg !4358
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4362
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4362
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4363
  call void @llvm.dbg.value(metadata i32 %9, metadata !4356, metadata !DIExpression()), !dbg !4358
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4364
  %11 = shl i32 %10, 3, !dbg !4365
  call void @llvm.dbg.value(metadata i32 %11, metadata !4357, metadata !DIExpression()), !dbg !4358
  %12 = sub i32 %9, %6, !dbg !4366
  %13 = add i32 %12, %11, !dbg !4367
  ret i32 %13, !dbg !4368
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4369 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4373, metadata !DIExpression()), !dbg !4379
  call void @llvm.dbg.value(metadata i32 %1, metadata !4374, metadata !DIExpression()), !dbg !4379
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4380
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4380
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4375, metadata !DIExpression()), !dbg !4379
  %5 = icmp eq i32 %1, 0, !dbg !4381
  br i1 %5, label %19, label %6, !dbg !4383

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4384
  br i1 %7, label %19, label %8, !dbg !4385

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4386, !range !3991
  call void @llvm.dbg.value(metadata i32 %9, metadata !4377, metadata !DIExpression()), !dbg !4379
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4387
  call void @llvm.dbg.value(metadata i32 %10, metadata !4378, metadata !DIExpression()), !dbg !4379
  %11 = icmp eq i32 %10, 0, !dbg !4388
  br i1 %11, label %19, label %12, !dbg !4390

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4391
  %14 = icmp ugt i32 %13, %9, !dbg !4393
  br i1 %14, label %15, label %17, !dbg !4394

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4395
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4397
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4398
  br label %17, !dbg !4399

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4400
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4401
  call void @llvm.dbg.value(metadata i8* %18, metadata !4376, metadata !DIExpression()), !dbg !4379
  br label %19, !dbg !4402

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4379
  ret i8* %20, !dbg !4403
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #7 !dbg !4404 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4408, metadata !DIExpression()), !dbg !4410
  call void @llvm.dbg.value(metadata i32 %1, metadata !4409, metadata !DIExpression()), !dbg !4410
  %3 = lshr i32 %1, 3, !dbg !4411
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4412
  %5 = load i32, i32* %4, align 4, !dbg !4412
  %6 = icmp uge i32 %3, %5, !dbg !4413
  ret i1 %6, !dbg !4414
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4415 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4419, metadata !DIExpression()), !dbg !4434
  call void @llvm.dbg.value(metadata i32 %1, metadata !4420, metadata !DIExpression()), !dbg !4434
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4435
  call void @llvm.dbg.value(metadata i32 %3, metadata !4421, metadata !DIExpression()), !dbg !4434
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4422, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4434
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4436
  %5 = load i32, i32* %4, align 4, !dbg !4436
  %6 = icmp eq i32 %5, 0, !dbg !4437
  br i1 %6, label %19, label %7, !dbg !4438

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4439
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4440
  call void @llvm.dbg.value(metadata i32 %9, metadata !4426, metadata !DIExpression()), !dbg !4440
  call void @llvm.dbg.value(metadata i32 %8, metadata !4427, metadata !DIExpression()), !dbg !4441
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4442
  %11 = icmp ult i32 %10, %1, !dbg !4444
  br i1 %11, label %13, label %12, !dbg !4445

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4446
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4448
  store i32 %14, i32* %4, align 4, !dbg !4449
  %15 = add nsw i32 %9, -1, !dbg !4450
  call void @llvm.dbg.value(metadata i32 %15, metadata !4426, metadata !DIExpression()), !dbg !4440
  %16 = icmp eq i32 %15, 0, !dbg !4450
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4451
  br i1 %18, label %19, label %7, !dbg !4451, !llvm.loop !4452

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4455
  %21 = load i32, i32* %20, align 4, !dbg !4455
  %22 = add nsw i32 %3, 1, !dbg !4456
  %23 = shl nsw i32 -1, %22, !dbg !4456
  %24 = and i32 %21, %23, !dbg !4457
  call void @llvm.dbg.value(metadata i32 %24, metadata !4429, metadata !DIExpression()), !dbg !4434
  %25 = icmp eq i32 %24, 0, !dbg !4458
  br i1 %25, label %30, label %26, !dbg !4459

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4460, !range !4160
  call void @llvm.dbg.value(metadata i32 %27, metadata !4430, metadata !DIExpression()), !dbg !4461
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4462
  %29 = load i32, i32* %28, align 4, !dbg !4462
  call void @llvm.dbg.value(metadata i32 %29, metadata !4433, metadata !DIExpression()), !dbg !4461
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4463
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4434
  ret i32 %31, !dbg !4464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !4465 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4467, metadata !DIExpression()), !dbg !4473
  call void @llvm.dbg.value(metadata i32 %1, metadata !4468, metadata !DIExpression()), !dbg !4473
  call void @llvm.dbg.value(metadata i32 %2, metadata !4469, metadata !DIExpression()), !dbg !4473
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4474
  call void @llvm.dbg.value(metadata i32 %4, metadata !4470, metadata !DIExpression()), !dbg !4473
  %5 = sub i32 %2, %1, !dbg !4475
  call void @llvm.dbg.value(metadata i32 %5, metadata !4471, metadata !DIExpression()), !dbg !4473
  %6 = sub i32 %4, %5, !dbg !4476
  call void @llvm.dbg.value(metadata i32 %6, metadata !4472, metadata !DIExpression()), !dbg !4473
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4477
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4478
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4479
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4480
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4481
  ret void, !dbg !4482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !4483 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4487, metadata !DIExpression()), !dbg !4491
  call void @llvm.dbg.value(metadata i32 %1, metadata !4488, metadata !DIExpression()), !dbg !4491
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4492
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4489, metadata !DIExpression()), !dbg !4491
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4493
  call void @llvm.dbg.value(metadata i8* %4, metadata !4490, metadata !DIExpression()), !dbg !4491
  ret i8* %4, !dbg !4494
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !4495 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4499, metadata !DIExpression()), !dbg !4511
  call void @llvm.dbg.value(metadata i32 %1, metadata !4500, metadata !DIExpression()), !dbg !4511
  call void @llvm.dbg.value(metadata i32 %2, metadata !4501, metadata !DIExpression()), !dbg !4511
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4512
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4512
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4502, metadata !DIExpression()), !dbg !4511
  %6 = sub i32 0, %1, !dbg !4513
  %7 = and i32 %6, %1, !dbg !4514
  call void @llvm.dbg.value(metadata i32 %7, metadata !4504, metadata !DIExpression()), !dbg !4511
  %8 = icmp eq i32 %7, %1, !dbg !4515
  br i1 %8, label %13, label %9, !dbg !4517

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4518
  call void @llvm.dbg.value(metadata i32 %10, metadata !4500, metadata !DIExpression()), !dbg !4511
  %11 = icmp ult i32 %7, 4, !dbg !4520
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4520
  br label %17, !dbg !4520

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4521
  br i1 %14, label %15, label %17, !dbg !4524

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4525
  br label %61, !dbg !4527

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4511
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4528
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4500, metadata !DIExpression()), !dbg !4511
  call void @llvm.dbg.value(metadata i32 %19, metadata !4503, metadata !DIExpression()), !dbg !4511
  call void @llvm.dbg.value(metadata i32 %18, metadata !4504, metadata !DIExpression()), !dbg !4511
  %21 = add i32 %20, -1, !dbg !4529
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !4529, !range !4160
  %23 = icmp ult i32 %22, 2, !dbg !4529
  br i1 %23, label %25, label %24, !dbg !4532

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 324) #27, !dbg !4533
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.16, i32 0, i32 0)) #27, !dbg !4533
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 324) #27, !dbg !4533
  unreachable, !dbg !4533

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !4535
  br i1 %26, label %61, label %27, !dbg !4537

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4538
  br i1 %28, label %61, label %29, !dbg !4539

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !4540
  %31 = add i32 %30, %20, !dbg !4541
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #26, !dbg !4542, !range !3991
  call void @llvm.dbg.value(metadata i32 %32, metadata !4505, metadata !DIExpression()), !dbg !4511
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #26, !dbg !4543
  call void @llvm.dbg.value(metadata i32 %33, metadata !4506, metadata !DIExpression()), !dbg !4511
  %34 = icmp eq i32 %33, 0, !dbg !4544
  br i1 %34, label %61, label %35, !dbg !4546

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #26, !dbg !4547
  call void @llvm.dbg.value(metadata i8* %36, metadata !4507, metadata !DIExpression()), !dbg !4511
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !4548
  %38 = ptrtoint i8* %37 to i32, !dbg !4548
  %39 = add i32 %21, %38, !dbg !4548
  %40 = sub i32 0, %20, !dbg !4548
  %41 = and i32 %39, %40, !dbg !4548
  %42 = inttoptr i32 %41 to i8*, !dbg !4549
  %43 = sub i32 0, %18, !dbg !4550
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !4550
  call void @llvm.dbg.value(metadata i8* %44, metadata !4507, metadata !DIExpression()), !dbg !4511
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !4551
  %46 = ptrtoint i8* %45 to i32, !dbg !4551
  %47 = add i32 %46, 7, !dbg !4551
  %48 = and i32 %47, -8, !dbg !4551
  call void @llvm.dbg.value(metadata i32 %48, metadata !4508, metadata !DIExpression()), !dbg !4511
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #26, !dbg !4552
  call void @llvm.dbg.value(metadata i32 %49, metadata !4509, metadata !DIExpression()), !dbg !4511
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4553
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !4554
  %52 = sub i32 %48, %51, !dbg !4554
  %53 = ashr exact i32 %52, 3, !dbg !4554
  call void @llvm.dbg.value(metadata i32 %53, metadata !4510, metadata !DIExpression()), !dbg !4511
  %54 = icmp ugt i32 %49, %33, !dbg !4555
  br i1 %54, label %55, label %56, !dbg !4557

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #26, !dbg !4558
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #26, !dbg !4560
  br label %56, !dbg !4561

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4562
  %58 = icmp ugt i32 %57, %53, !dbg !4564
  br i1 %58, label %59, label %60, !dbg !4565

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #26, !dbg !4566
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #26, !dbg !4568
  br label %60, !dbg !4569

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #26, !dbg !4570
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !4511
  ret i8* %62, !dbg !4571
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4572 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4576, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i8* %1, metadata !4577, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i32 %2, metadata !4578, metadata !DIExpression()), !dbg !4595
  call void @llvm.dbg.value(metadata i32 %3, metadata !4579, metadata !DIExpression()), !dbg !4595
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4596
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4596
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4580, metadata !DIExpression()), !dbg !4595
  %7 = icmp eq i8* %1, null, !dbg !4597
  br i1 %7, label %8, label %10, !dbg !4599

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4600
  br label %63, !dbg !4602

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4603
  br i1 %11, label %12, label %13, !dbg !4605

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4606
  br label %63, !dbg !4608

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !4609
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !4609, !range !4160
  %16 = icmp ult i32 %15, 2, !dbg !4609
  br i1 %16, label %18, label %17, !dbg !4612

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 393) #27, !dbg !4613
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.16, i32 0, i32 0)) #27, !dbg !4613
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 393) #27, !dbg !4613
  unreachable, !dbg !4613

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4615
  br i1 %19, label %63, label %20, !dbg !4617

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4618, !range !3991
  call void @llvm.dbg.value(metadata i32 %21, metadata !4581, metadata !DIExpression()), !dbg !4595
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !4619
  call void @llvm.dbg.value(metadata i32 %22, metadata !4582, metadata !DIExpression()), !dbg !4595
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !4620
  %24 = ptrtoint i8* %1 to i32, !dbg !4621
  %25 = ptrtoint i8* %23 to i32, !dbg !4621
  %26 = sub i32 %24, %25, !dbg !4621
  call void @llvm.dbg.value(metadata i32 %26, metadata !4583, metadata !DIExpression()), !dbg !4595
  %27 = add i32 %26, %3, !dbg !4622
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #26, !dbg !4623
  call void @llvm.dbg.value(metadata i32 %28, metadata !4584, metadata !DIExpression()), !dbg !4595
  %29 = icmp eq i32 %2, 0, !dbg !4624
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !4625
  br i1 %32, label %33, label %53, !dbg !4625

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !4626
  %35 = icmp eq i32 %28, %34, !dbg !4627
  br i1 %35, label %63, label %36, !dbg !4628

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !4629
  br i1 %37, label %38, label %40, !dbg !4630

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !4631
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #26, !dbg !4633
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #26, !dbg !4634
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #26, !dbg !4635
  br label %63, !dbg !4636

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4637
  br i1 %41, label %53, label %42, !dbg !4638

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4639
  %44 = add i32 %43, %34, !dbg !4640
  %45 = icmp ult i32 %44, %28, !dbg !4641
  br i1 %45, label %53, label %46, !dbg !4642

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !4643
  call void @llvm.dbg.value(metadata i32 %47, metadata !4585, metadata !DIExpression()), !dbg !4644
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4645
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4646
  %49 = icmp ult i32 %47, %48, !dbg !4648
  br i1 %49, label %50, label %52, !dbg !4649

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !4650
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #26, !dbg !4652
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #26, !dbg !4653
  br label %52, !dbg !4654

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #26, !dbg !4655
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #26, !dbg !4656
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4657
  call void @llvm.dbg.value(metadata i8* %54, metadata !4591, metadata !DIExpression()), !dbg !4595
  %55 = icmp eq i8* %54, null, !dbg !4658
  br i1 %55, label %63, label %56, !dbg !4659

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !4660, !range !4103
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #26, !dbg !4661
  %59 = sub i32 %58, %26, !dbg !4662
  call void @llvm.dbg.value(metadata i32 %59, metadata !4592, metadata !DIExpression()), !dbg !4663
  %60 = icmp ult i32 %59, %3, !dbg !4664
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !4664
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #27, !dbg !4665
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4666
  br label %63, !dbg !4667

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !4595
  ret i8* %64, !dbg !4668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !4669 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4673, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.value(metadata i32 %1, metadata !4674, metadata !DIExpression()), !dbg !4675
  %3 = shl i32 %1, 3, !dbg !4676
  %4 = add i32 %3, -4, !dbg !4677
  ret i32 %4, !dbg !4678
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !4679 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4683, metadata !DIExpression()), !dbg !4694
  call void @llvm.dbg.value(metadata i8* %1, metadata !4684, metadata !DIExpression()), !dbg !4694
  call void @llvm.dbg.value(metadata i32 %2, metadata !4685, metadata !DIExpression()), !dbg !4694
  %4 = icmp ult i32 %2, 262144, !dbg !4695
  br i1 %4, label %6, label %5, !dbg !4700

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 491) #27, !dbg !4701
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.18, i32 0, i32 0)) #27, !dbg !4701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 491) #27, !dbg !4701
  unreachable, !dbg !4701

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !4703
  br i1 %7, label %9, label %8, !dbg !4706

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 498) #27, !dbg !4707
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i32 0, i32 0)) #27, !dbg !4707
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 498) #27, !dbg !4707
  unreachable, !dbg !4707

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !4709
  call void @llvm.dbg.value(metadata i32 %10, metadata !4685, metadata !DIExpression()), !dbg !4694
  %11 = ptrtoint i8* %1 to i32, !dbg !4710
  %12 = add i32 %11, 7, !dbg !4710
  %13 = and i32 %12, -8, !dbg !4710
  call void @llvm.dbg.value(metadata i32 %13, metadata !4686, metadata !DIExpression()), !dbg !4694
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !4711
  %15 = ptrtoint i8* %14 to i32, !dbg !4711
  %16 = and i32 %15, -8, !dbg !4711
  call void @llvm.dbg.value(metadata i32 %16, metadata !4687, metadata !DIExpression()), !dbg !4694
  %17 = sub i32 %16, %13, !dbg !4712
  %18 = lshr exact i32 %17, 3, !dbg !4713
  call void @llvm.dbg.value(metadata i32 %18, metadata !4688, metadata !DIExpression()), !dbg !4694
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #26, !dbg !4714
  %20 = icmp ugt i32 %18, %19, !dbg !4714
  br i1 %20, label %22, label %21, !dbg !4717

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 507) #27, !dbg !4718
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i32 0, i32 0)) #27, !dbg !4718
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 507) #27, !dbg !4718
  unreachable, !dbg !4718

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !4720
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !4689, metadata !DIExpression()), !dbg !4694
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4721
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !4722
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !4723
  store i32 %18, i32* %25, align 8, !dbg !4724
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !4725
  store i32 0, i32* %26, align 4, !dbg !4726
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #26, !dbg !4727
  call void @llvm.dbg.value(metadata i32 %27, metadata !4690, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4694
  %28 = shl i32 %27, 2, !dbg !4728
  %29 = add i32 %28, 20, !dbg !4729
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #26, !dbg !4730
  call void @llvm.dbg.value(metadata i32 %30, metadata !4691, metadata !DIExpression()), !dbg !4694
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #26, !dbg !4731
  %32 = add i32 %31, %30, !dbg !4731
  %33 = icmp ugt i32 %32, %18, !dbg !4731
  br i1 %33, label %36, label %34, !dbg !4734

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !4692, metadata !DIExpression()), !dbg !4735
  %35 = icmp slt i32 %27, 0, !dbg !4736
  br i1 %35, label %37, label %39, !dbg !4738

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 524) #27, !dbg !4739
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i32 0, i32 0)) #27, !dbg !4739
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.11, i32 0, i32 0), i32 noundef 524) #27, !dbg !4739
  unreachable, !dbg !4739

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #26, !dbg !4741
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #26, !dbg !4742
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4743
  %38 = sub i32 %18, %30, !dbg !4744
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #26, !dbg !4745
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #26, !dbg !4746
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #26, !dbg !4747
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #26, !dbg !4748
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #26, !dbg !4749
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #26, !dbg !4750
  ret void, !dbg !4751

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !4692, metadata !DIExpression()), !dbg !4735
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !4752
  store i32 0, i32* %41, align 4, !dbg !4754
  %42 = add nuw i32 %40, 1, !dbg !4755
  call void @llvm.dbg.value(metadata i32 %42, metadata !4692, metadata !DIExpression()), !dbg !4735
  %43 = icmp eq i32 %40, %27, !dbg !4736
  br i1 %43, label %37, label %39, !dbg !4738, !llvm.loop !4756
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4758 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4771, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4768, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i8* %1, metadata !4769, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i8* %2, metadata !4770, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i32 %4, metadata !4772, metadata !DIExpression()), !dbg !4899
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4900
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4900
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4773, metadata !DIExpression()), !dbg !4901
  call void @llvm.dbg.value(metadata i32 0, metadata !4777, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i1 undef, metadata !4779, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4899
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4902

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4902

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4903
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4771, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i8* %30, metadata !4770, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i32 %29, metadata !4777, metadata !DIExpression()), !dbg !4899
  %31 = load i8, i8* %30, align 1, !dbg !4904
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4902

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4904
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4905
  call void @llvm.dbg.value(metadata i8* %34, metadata !4770, metadata !DIExpression()), !dbg !4899
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !4905
  call void @llvm.dbg.value(metadata i32 %35, metadata !4781, metadata !DIExpression()), !dbg !4906
  %36 = icmp slt i32 %35, 0, !dbg !4907
  %37 = add i32 %29, 1, !dbg !4905
  call void @llvm.dbg.value(metadata i32 undef, metadata !4777, metadata !DIExpression()), !dbg !4899
  br i1 %36, label %365, label %28, !llvm.loop !4909

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4911
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4786, metadata !DIExpression()), !dbg !4912
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4912
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4831, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4834, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8* %30, metadata !4837, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i32 -1, metadata !4838, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i32 -1, metadata !4839, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8* null, metadata !4840, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8* %14, metadata !4841, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8 0, metadata !4842, metadata !DIExpression()), !dbg !4913
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4914
  call void @llvm.dbg.value(metadata i8* %39, metadata !4770, metadata !DIExpression()), !dbg !4899
  %40 = load i24, i24* %15, align 8, !dbg !4915
  %41 = and i24 %40, 256, !dbg !4915
  %42 = icmp eq i24 %41, 0, !dbg !4915
  br i1 %42, label %51, label %43, !dbg !4917

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4918
  call void @llvm.dbg.value(metadata i8* %44, metadata !4771, metadata !DIExpression()), !dbg !4899
  %45 = bitcast i8* %27 to i32*, !dbg !4918
  %46 = load i32, i32* %45, align 4, !dbg !4918
  call void @llvm.dbg.value(metadata i32 %46, metadata !4838, metadata !DIExpression()), !dbg !4913
  %47 = icmp slt i32 %46, 0, !dbg !4920
  br i1 %47, label %48, label %56, !dbg !4922

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4923
  store i24 %49, i24* %15, align 8, !dbg !4923
  %50 = sub nsw i32 0, %46, !dbg !4925
  call void @llvm.dbg.value(metadata i32 %50, metadata !4838, metadata !DIExpression()), !dbg !4913
  br label %56, !dbg !4926

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4927
  %53 = icmp eq i24 %52, 0, !dbg !4927
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4929
  br label %56, !dbg !4929

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4930
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4913
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4771, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i32 %58, metadata !4838, metadata !DIExpression()), !dbg !4913
  %60 = and i24 %57, 1024, !dbg !4930
  %61 = icmp eq i24 %60, 0, !dbg !4930
  br i1 %61, label %69, label %62, !dbg !4931

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4932
  call void @llvm.dbg.value(metadata i8* %63, metadata !4771, metadata !DIExpression()), !dbg !4899
  %64 = bitcast i8* %59 to i32*, !dbg !4932
  %65 = load i32, i32* %64, align 4, !dbg !4932
  call void @llvm.dbg.value(metadata i32 %65, metadata !4843, metadata !DIExpression()), !dbg !4933
  %66 = icmp slt i32 %65, 0, !dbg !4934
  br i1 %66, label %67, label %74, !dbg !4936

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4937
  store i24 %68, i24* %15, align 8, !dbg !4937
  br label %74, !dbg !4939

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4940
  %71 = icmp eq i24 %70, 0, !dbg !4940
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4942
  br label %74, !dbg !4942

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4943
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4913
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4913
  call void @llvm.dbg.value(metadata i8* %77, metadata !4771, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i32 %76, metadata !4839, metadata !DIExpression()), !dbg !4913
  store i32 0, i32* %16, align 4, !dbg !4944
  store i32 0, i32* %17, align 8, !dbg !4945
  %78 = lshr i24 %75, 16, !dbg !4943
  call void @llvm.dbg.value(metadata i24 %78, metadata !4846, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4913
  %79 = lshr i24 %75, 11, !dbg !4946
  %80 = and i24 %79, 15, !dbg !4946
  %81 = zext i24 %80 to i32, !dbg !4946
  call void @llvm.dbg.value(metadata i32 %81, metadata !4847, metadata !DIExpression()), !dbg !4913
  %82 = trunc i24 %78 to i3, !dbg !4947
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4947

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4948

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4951
  call void @llvm.dbg.value(metadata i8* %85, metadata !4771, metadata !DIExpression()), !dbg !4899
  %86 = bitcast i8* %77 to i32*, !dbg !4951
  %87 = load i32, i32* %86, align 4, !dbg !4951
  %88 = sext i32 %87 to i64, !dbg !4951
  store i64 %88, i64* %20, align 8, !dbg !4953
  br label %115, !dbg !4954

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4955
  call void @llvm.dbg.value(metadata i8* %90, metadata !4771, metadata !DIExpression()), !dbg !4899
  %91 = bitcast i8* %77 to i32*, !dbg !4955
  %92 = load i32, i32* %91, align 4, !dbg !4955
  %93 = sext i32 %92 to i64, !dbg !4955
  store i64 %93, i64* %20, align 8, !dbg !4958
  br label %115, !dbg !4959

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4960
  %96 = add i32 %95, 7, !dbg !4960
  %97 = and i32 %96, -8, !dbg !4960
  %98 = inttoptr i32 %97 to i8*, !dbg !4960
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4960
  call void @llvm.dbg.value(metadata i8* %99, metadata !4771, metadata !DIExpression()), !dbg !4899
  %100 = inttoptr i32 %97 to i64*, !dbg !4960
  %101 = load i64, i64* %100, align 8, !dbg !4960
  store i64 %101, i64* %20, align 8, !dbg !4961
  br label %115, !dbg !4962

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4963
  %104 = add i32 %103, 7, !dbg !4963
  %105 = and i32 %104, -8, !dbg !4963
  %106 = inttoptr i32 %105 to i8*, !dbg !4963
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4963
  call void @llvm.dbg.value(metadata i8* %107, metadata !4771, metadata !DIExpression()), !dbg !4899
  %108 = inttoptr i32 %105 to i64*, !dbg !4963
  %109 = load i64, i64* %108, align 8, !dbg !4963
  store i64 %109, i64* %20, align 8, !dbg !4964
  br label %115, !dbg !4965

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4966
  call void @llvm.dbg.value(metadata i8* %111, metadata !4771, metadata !DIExpression()), !dbg !4899
  %112 = bitcast i8* %77 to i32*, !dbg !4966
  %113 = load i32, i32* %112, align 4, !dbg !4966
  %114 = sext i32 %113 to i64, !dbg !4967
  store i64 %114, i64* %20, align 8, !dbg !4968
  br label %115, !dbg !4969

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4970
  call void @llvm.dbg.value(metadata i8* %117, metadata !4771, metadata !DIExpression()), !dbg !4899
  %118 = trunc i24 %79 to i4, !dbg !4971
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4971

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4972
  %121 = ashr exact i64 %120, 56, !dbg !4972
  store i64 %121, i64* %20, align 8, !dbg !4975
  br label %177, !dbg !4976

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4977
  %124 = ashr exact i64 %123, 48, !dbg !4977
  store i64 %124, i64* %20, align 8, !dbg !4980
  br label %177, !dbg !4981

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4982

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4985
  call void @llvm.dbg.value(metadata i8* %127, metadata !4771, metadata !DIExpression()), !dbg !4899
  %128 = bitcast i8* %77 to i32*, !dbg !4985
  %129 = load i32, i32* %128, align 4, !dbg !4985
  %130 = zext i32 %129 to i64, !dbg !4985
  store i64 %130, i64* %20, align 8, !dbg !4987
  br label %157, !dbg !4988

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4989
  call void @llvm.dbg.value(metadata i8* %132, metadata !4771, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i8* %132, metadata !4771, metadata !DIExpression()), !dbg !4899
  %133 = bitcast i8* %77 to i32*, !dbg !4989
  %134 = load i32, i32* %133, align 4, !dbg !4989
  %135 = zext i32 %134 to i64, !dbg !4989
  store i64 %135, i64* %20, align 8, !dbg !4989
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4991
  %138 = add i32 %137, 7, !dbg !4991
  %139 = and i32 %138, -8, !dbg !4991
  %140 = inttoptr i32 %139 to i8*, !dbg !4991
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4991
  call void @llvm.dbg.value(metadata i8* %141, metadata !4771, metadata !DIExpression()), !dbg !4899
  %142 = inttoptr i32 %139 to i64*, !dbg !4991
  %143 = load i64, i64* %142, align 8, !dbg !4991
  store i64 %143, i64* %20, align 8, !dbg !4992
  br label %157, !dbg !4993

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4994
  %146 = add i32 %145, 7, !dbg !4994
  %147 = and i32 %146, -8, !dbg !4994
  %148 = inttoptr i32 %147 to i8*, !dbg !4994
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4994
  call void @llvm.dbg.value(metadata i8* %149, metadata !4771, metadata !DIExpression()), !dbg !4899
  %150 = inttoptr i32 %147 to i64*, !dbg !4994
  %151 = load i64, i64* %150, align 8, !dbg !4994
  store i64 %151, i64* %20, align 8, !dbg !4995
  br label %157, !dbg !4996

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4997
  call void @llvm.dbg.value(metadata i8* %153, metadata !4771, metadata !DIExpression()), !dbg !4899
  %154 = bitcast i8* %77 to i32*, !dbg !4997
  %155 = load i32, i32* %154, align 4, !dbg !4997
  %156 = zext i32 %155 to i64, !dbg !4998
  store i64 %156, i64* %20, align 8, !dbg !4999
  br label %157, !dbg !5000

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5001
  call void @llvm.dbg.value(metadata i8* %159, metadata !4771, metadata !DIExpression()), !dbg !4899
  %160 = trunc i24 %79 to i4, !dbg !5002
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5002

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5003
  store i64 %162, i64* %20, align 8, !dbg !5006
  br label %177, !dbg !5007

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5008
  store i64 %164, i64* %20, align 8, !dbg !5011
  br label %177, !dbg !5012

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5013
  %167 = add i32 %166, 7, !dbg !5013
  %168 = and i32 %167, -8, !dbg !5013
  %169 = inttoptr i32 %168 to i8*, !dbg !5013
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5013
  call void @llvm.dbg.value(metadata i8* %170, metadata !4771, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i8* %170, metadata !4771, metadata !DIExpression()), !dbg !4899
  %171 = inttoptr i32 %168 to double*, !dbg !5013
  %172 = load double, double* %171, align 8, !dbg !5013
  store double %172, double* %19, align 8, !dbg !5013
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5017
  call void @llvm.dbg.value(metadata i8* %174, metadata !4771, metadata !DIExpression()), !dbg !4899
  %175 = bitcast i8* %77 to i8**, !dbg !5017
  %176 = load i8*, i8** %175, align 4, !dbg !5017
  store i8* %176, i8** %18, align 8, !dbg !5020
  br label %177, !dbg !5021

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4913
  call void @llvm.dbg.value(metadata i8* %178, metadata !4771, metadata !DIExpression()), !dbg !4899
  %179 = and i24 %75, 3, !dbg !5022
  %180 = icmp eq i24 %179, 0, !dbg !5022
  br i1 %180, label %185, label %181, !dbg !5022

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5023
  call void @llvm.dbg.value(metadata i32 %182, metadata !4848, metadata !DIExpression()), !dbg !5024
  %183 = icmp slt i32 %182, 0, !dbg !5025
  %184 = add i32 %182, %29, !dbg !5023
  call void @llvm.dbg.value(metadata i32 undef, metadata !4777, metadata !DIExpression()), !dbg !4899
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5027
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5028

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !5029
  call void @llvm.dbg.value(metadata i32 %188, metadata !4852, metadata !DIExpression()), !dbg !5030
  %189 = icmp slt i32 %188, 0, !dbg !5031
  %190 = add i32 %29, 1, !dbg !5029
  call void @llvm.dbg.value(metadata i32 undef, metadata !4777, metadata !DIExpression()), !dbg !4899
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5033
  call void @llvm.dbg.value(metadata i8* %192, metadata !4840, metadata !DIExpression()), !dbg !4913
  %193 = icmp sgt i32 %76, -1, !dbg !5034
  br i1 %193, label %194, label %196, !dbg !5036

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !5037
  call void @llvm.dbg.value(metadata i32 %195, metadata !4855, metadata !DIExpression()), !dbg !5039
  br label %241, !dbg !5040

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !5041
  call void @llvm.dbg.value(metadata i32 %197, metadata !4855, metadata !DIExpression()), !dbg !5039
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4840, metadata !DIExpression()), !dbg !4913
  %199 = load i64, i64* %20, align 8, !dbg !5043
  %200 = trunc i64 %199 to i8, !dbg !5044
  store i8 %200, i8* %10, align 1, !dbg !5045
  call void @llvm.dbg.value(metadata i8* %23, metadata !4841, metadata !DIExpression()), !dbg !4913
  br label %245, !dbg !5046

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5047
  %203 = icmp eq i24 %202, 0, !dbg !5047
  %204 = trunc i24 %75 to i8, !dbg !5049
  %205 = shl i8 %204, 1, !dbg !5049
  %206 = and i8 %205, 32, !dbg !5049
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5049
  call void @llvm.dbg.value(metadata i8 %207, metadata !4842, metadata !DIExpression()), !dbg !4913
  %208 = load i64, i64* %20, align 8, !dbg !5050
  call void @llvm.dbg.value(metadata i64 %208, metadata !4778, metadata !DIExpression()), !dbg !4899
  %209 = icmp slt i64 %208, 0, !dbg !5051
  br i1 %209, label %210, label %212, !dbg !5053

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4842, metadata !DIExpression()), !dbg !4913
  %211 = sub nsw i64 0, %208, !dbg !5054
  store i64 %211, i64* %20, align 8, !dbg !5056
  br label %212, !dbg !5057

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4913
  call void @llvm.dbg.value(metadata i8 %213, metadata !4842, metadata !DIExpression()), !dbg !4913
  %214 = load i64, i64* %20, align 8, !dbg !5058
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5059
  call void @llvm.dbg.value(metadata i8* %215, metadata !4840, metadata !DIExpression()), !dbg !4913
  br label %216, !dbg !5060

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5061
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5062
  call void @llvm.dbg.value(metadata i8* %218, metadata !4840, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8 %217, metadata !4842, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.label(metadata !4898), !dbg !5063
  %219 = icmp sgt i32 %76, -1, !dbg !5064
  br i1 %219, label %222, label %220, !dbg !5065

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5066
  br label %245, !dbg !5065

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5068
  %224 = sub i32 %22, %223, !dbg !5068
  call void @llvm.dbg.value(metadata i32 %224, metadata !4857, metadata !DIExpression()), !dbg !5069
  %225 = load i24, i24* %15, align 8, !dbg !5070
  %226 = and i24 %225, -65, !dbg !5070
  store i24 %226, i24* %15, align 8, !dbg !5070
  %227 = icmp ugt i32 %76, %224, !dbg !5071
  br i1 %227, label %228, label %245, !dbg !5073

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5074
  store i32 %229, i32* %16, align 4, !dbg !5076
  br label %245, !dbg !5077

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5078
  %232 = icmp eq i8* %231, null, !dbg !5080
  br i1 %232, label %245, label %233, !dbg !5081

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5082
  %235 = zext i32 %234 to i64, !dbg !5082
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5084
  call void @llvm.dbg.value(metadata i8* %236, metadata !4840, metadata !DIExpression()), !dbg !4913
  %237 = load i24, i24* %15, align 8, !dbg !5085
  %238 = or i24 %237, 1048576, !dbg !5085
  store i24 %238, i24* %15, align 8, !dbg !5085
  store i8 120, i8* %21, align 1, !dbg !5086
  br label %216, !dbg !5087

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5088
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5091
  br label %363, !dbg !5092

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5093
  call void @llvm.dbg.value(metadata i32 %242, metadata !4855, metadata !DIExpression()), !dbg !5039
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5094
  call void @llvm.dbg.value(metadata i32 -1, metadata !4839, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i32 %29, metadata !4777, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i8* %192, metadata !4840, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8* %243, metadata !4841, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8 0, metadata !4842, metadata !DIExpression()), !dbg !4913
  %244 = icmp eq i8* %192, null, !dbg !5095
  br i1 %244, label %363, label %245, !dbg !5097, !llvm.loop !4909

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5066
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4860, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4913
  call void @llvm.dbg.value(metadata i32 0, metadata !4861, metadata !DIExpression()), !dbg !4913
  %250 = zext i8 %249 to i32, !dbg !5098
  %251 = icmp eq i8 %249, 0, !dbg !5100
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4860, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4913
  call void @llvm.dbg.value(metadata i32 undef, metadata !4860, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4860, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4913
  call void @llvm.dbg.value(metadata i32 undef, metadata !4860, metadata !DIExpression()), !dbg !4913
  %252 = icmp sgt i32 %58, 0, !dbg !5101
  br i1 %252, label %253, label %302, !dbg !5102

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5066
  %255 = icmp eq i24 %254, 0, !dbg !5066
  %256 = ptrtoint i8* %248 to i32, !dbg !5103
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4860, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4913
  %257 = ptrtoint i8* %247 to i32, !dbg !5103
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4860, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4913
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4860, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4913
  %258 = xor i1 %251, true, !dbg !5104
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4860, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4913
  %259 = sext i1 %258 to i32, !dbg !5104
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4860, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4913
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4860, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4913
  %260 = lshr i24 %246, 19, !dbg !5105
  %261 = and i24 %260, 1, !dbg !5105
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5105
  %263 = zext i24 %262 to i32, !dbg !5105
  %264 = add i32 %257, %259, !dbg !5105
  %265 = add i32 %256, %263, !dbg !5105
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4860, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4913
  %266 = and i24 %246, 4194304, !dbg !5106
  %267 = icmp eq i24 %266, 0, !dbg !5106
  %268 = load i32, i32* %16, align 4, !dbg !5108
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4860, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4913
  call void @llvm.dbg.value(metadata i32 undef, metadata !4860, metadata !DIExpression()), !dbg !4913
  %269 = load i32, i32* %17, align 8, !dbg !5109
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5109
  call void @llvm.dbg.value(metadata i32 undef, metadata !4860, metadata !DIExpression()), !dbg !4913
  %271 = add i32 %264, %58, !dbg !5109
  %272 = add i32 %265, %268, !dbg !5109
  %273 = add i32 %272, %270, !dbg !5110
  %274 = sub i32 %271, %273, !dbg !5110
  call void @llvm.dbg.value(metadata i32 %274, metadata !4838, metadata !DIExpression()), !dbg !4913
  %275 = and i24 %246, 4, !dbg !5111
  %276 = icmp eq i24 %275, 0, !dbg !5111
  br i1 %276, label %277, label %302, !dbg !5112

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4862, metadata !DIExpression()), !dbg !5113
  %278 = and i24 %246, 64, !dbg !5114
  %279 = icmp eq i24 %278, 0, !dbg !5114
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5115
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5115
  %282 = select i1 %279, i32 32, i32 48, !dbg !5115
  br i1 %280, label %287, label %283, !dbg !5115

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !5116
  call void @llvm.dbg.value(metadata i32 %284, metadata !4867, metadata !DIExpression()), !dbg !5117
  %285 = icmp slt i32 %284, 0, !dbg !5118
  %286 = add i32 %29, 1, !dbg !5116
  call void @llvm.dbg.value(metadata i32 undef, metadata !4777, metadata !DIExpression()), !dbg !4899
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4913
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4903
  call void @llvm.dbg.value(metadata i32 %290, metadata !4777, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i8 undef, metadata !4862, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.value(metadata i8 %288, metadata !4842, metadata !DIExpression()), !dbg !4913
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5120
  %292 = add i32 %291, -1, !dbg !5120
  br label %293, !dbg !5120

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5121
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4903
  call void @llvm.dbg.value(metadata i32 %295, metadata !4777, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i32 %294, metadata !4838, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i32 %294, metadata !4838, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4913
  %296 = icmp sgt i32 %294, 0, !dbg !5122
  br i1 %296, label %297, label %302, !dbg !5120

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5123
  call void @llvm.dbg.value(metadata i32 %298, metadata !4838, metadata !DIExpression()), !dbg !4913
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !5124
  call void @llvm.dbg.value(metadata i32 %299, metadata !4873, metadata !DIExpression()), !dbg !5125
  %300 = icmp slt i32 %299, 0, !dbg !5126
  %301 = add i32 %295, 1, !dbg !5124
  call void @llvm.dbg.value(metadata i32 undef, metadata !4777, metadata !DIExpression()), !dbg !4899
  br i1 %300, label %361, label %293, !llvm.loop !5128

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4913
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4913
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4903
  call void @llvm.dbg.value(metadata i32 %305, metadata !4777, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i32 %304, metadata !4838, metadata !DIExpression()), !dbg !4913
  call void @llvm.dbg.value(metadata i8 %303, metadata !4842, metadata !DIExpression()), !dbg !4913
  %306 = icmp eq i8 %303, 0, !dbg !5130
  br i1 %306, label %312, label %307, !dbg !5131

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5132
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !5133
  call void @llvm.dbg.value(metadata i32 %309, metadata !4876, metadata !DIExpression()), !dbg !5134
  %310 = icmp slt i32 %309, 0, !dbg !5135
  %311 = add i32 %305, 1, !dbg !5133
  call void @llvm.dbg.value(metadata i32 undef, metadata !4777, metadata !DIExpression()), !dbg !4899
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4903
  call void @llvm.dbg.value(metadata i32 %313, metadata !4777, metadata !DIExpression()), !dbg !4899
  %314 = lshr i24 %246, 20, !dbg !5137
  %315 = lshr i24 %246, 19, !dbg !5138
  %316 = or i24 %314, %315, !dbg !5139
  %317 = and i24 %316, 1, !dbg !5139
  %318 = icmp eq i24 %317, 0, !dbg !5139
  br i1 %318, label %323, label %319, !dbg !5140

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5141
  call void @llvm.dbg.value(metadata i32 %320, metadata !4880, metadata !DIExpression()), !dbg !5142
  %321 = icmp slt i32 %320, 0, !dbg !5143
  %322 = add i32 %313, 1, !dbg !5141
  call void @llvm.dbg.value(metadata i32 undef, metadata !4777, metadata !DIExpression()), !dbg !4899
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4903
  call void @llvm.dbg.value(metadata i32 %324, metadata !4777, metadata !DIExpression()), !dbg !4899
  %325 = and i24 %246, 1048576, !dbg !5145
  %326 = icmp eq i24 %325, 0, !dbg !5145
  br i1 %326, label %333, label %327, !dbg !5146

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5147
  %329 = zext i8 %328 to i32, !dbg !5147
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !5147
  call void @llvm.dbg.value(metadata i32 %330, metadata !4886, metadata !DIExpression()), !dbg !5148
  %331 = icmp slt i32 %330, 0, !dbg !5149
  %332 = add i32 %324, 1, !dbg !5147
  call void @llvm.dbg.value(metadata i32 undef, metadata !4777, metadata !DIExpression()), !dbg !4899
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4903
  call void @llvm.dbg.value(metadata i32 %334, metadata !4777, metadata !DIExpression()), !dbg !4899
  %335 = load i32, i32* %16, align 4, !dbg !5151
  call void @llvm.dbg.value(metadata i32 %335, metadata !4861, metadata !DIExpression()), !dbg !4913
  br label %336, !dbg !5152

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5153
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4903
  call void @llvm.dbg.value(metadata i32 %338, metadata !4777, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i32 %337, metadata !4861, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4913
  %339 = icmp sgt i32 %337, 0, !dbg !5154
  br i1 %339, label %340, label %345, !dbg !5152

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5155
  call void @llvm.dbg.value(metadata i32 %341, metadata !4861, metadata !DIExpression()), !dbg !4913
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5156
  call void @llvm.dbg.value(metadata i32 %342, metadata !4890, metadata !DIExpression()), !dbg !5157
  %343 = icmp slt i32 %342, 0, !dbg !5158
  %344 = add i32 %338, 1, !dbg !5156
  call void @llvm.dbg.value(metadata i32 undef, metadata !4777, metadata !DIExpression()), !dbg !4899
  br i1 %343, label %361, label %336, !llvm.loop !5160

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5162
  call void @llvm.dbg.value(metadata i32 %346, metadata !4893, metadata !DIExpression()), !dbg !5163
  %347 = icmp slt i32 %346, 0, !dbg !5164
  call void @llvm.dbg.value(metadata i32 undef, metadata !4777, metadata !DIExpression()), !dbg !4899
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5162
  call void @llvm.dbg.value(metadata i32 %349, metadata !4777, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i32 %304, metadata !4838, metadata !DIExpression()), !dbg !4913
  %350 = icmp sgt i32 %304, 0, !dbg !5166
  br i1 %350, label %351, label %363, !dbg !5167

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5167
  %353 = add i32 %352, %338, !dbg !5167
  br label %354, !dbg !5167

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4777, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.value(metadata i32 %355, metadata !4838, metadata !DIExpression()), !dbg !4913
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !5168
  call void @llvm.dbg.value(metadata i32 %356, metadata !4895, metadata !DIExpression()), !dbg !5169
  %357 = icmp slt i32 %356, 0, !dbg !5170
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5172
  call void @llvm.dbg.value(metadata i32 undef, metadata !4777, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4899
  call void @llvm.dbg.value(metadata i32 %359, metadata !4838, metadata !DIExpression()), !dbg !4913
  %360 = icmp sgt i32 %355, 1, !dbg !5166
  br i1 %360, label %354, label %363, !dbg !5167, !llvm.loop !5173

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4777, metadata !DIExpression()), !dbg !4899
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4910
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4903
  call void @llvm.dbg.value(metadata i32 %364, metadata !4777, metadata !DIExpression()), !dbg !4899
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4910
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4899
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5175
  ret i32 %366, !dbg !5175
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5176 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5180, metadata !DIExpression()), !dbg !5182
  call void @llvm.dbg.value(metadata i8* %1, metadata !5181, metadata !DIExpression()), !dbg !5182
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5183
  store i24 0, i24* %3, align 4, !dbg !5183
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5183
  store i8 0, i8* %4, align 1, !dbg !5183
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5183
  store i32 0, i32* %5, align 4, !dbg !5183
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5183
  store i32 0, i32* %6, align 4, !dbg !5183
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5184
  call void @llvm.dbg.value(metadata i8* %7, metadata !5181, metadata !DIExpression()), !dbg !5182
  %8 = load i8, i8* %7, align 1, !dbg !5185
  %9 = icmp eq i8 %8, 37, !dbg !5187
  br i1 %9, label %10, label %12, !dbg !5188

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5189
  call void @llvm.dbg.value(metadata i8* %11, metadata !5181, metadata !DIExpression()), !dbg !5182
  store i8 37, i8* %4, align 1, !dbg !5191
  br label %18, !dbg !5192

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5193
  call void @llvm.dbg.value(metadata i8* %13, metadata !5181, metadata !DIExpression()), !dbg !5182
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5194
  call void @llvm.dbg.value(metadata i8* %14, metadata !5181, metadata !DIExpression()), !dbg !5182
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5195
  call void @llvm.dbg.value(metadata i8* %15, metadata !5181, metadata !DIExpression()), !dbg !5182
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5196
  call void @llvm.dbg.value(metadata i8* %16, metadata !5181, metadata !DIExpression()), !dbg !5182
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5197
  call void @llvm.dbg.value(metadata i8* %17, metadata !5181, metadata !DIExpression()), !dbg !5182
  br label %18, !dbg !5198

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5182
  ret i8* %19, !dbg !5199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5200 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5204, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.value(metadata i8* %1, metadata !5205, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.value(metadata i8* %2, metadata !5206, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.value(metadata i8* %3, metadata !5207, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.value(metadata i32 0, metadata !5208, metadata !DIExpression()), !dbg !5211
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5212

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5213
  call void @llvm.dbg.value(metadata i32 %9, metadata !5208, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.value(metadata i8* %8, metadata !5206, metadata !DIExpression()), !dbg !5211
  %10 = icmp ult i8* %8, %3, !dbg !5214
  br i1 %10, label %11, label %13, !dbg !5215

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5216
  br label %17, !dbg !5215

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5217

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5218
  %16 = icmp eq i8 %15, 0, !dbg !5217
  br i1 %16, label %24, label %17, !dbg !5212

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5216
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5219
  call void @llvm.dbg.value(metadata i8* %19, metadata !5206, metadata !DIExpression()), !dbg !5211
  %20 = zext i8 %18 to i32, !dbg !5220
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !5221
  call void @llvm.dbg.value(metadata i32 %21, metadata !5209, metadata !DIExpression()), !dbg !5222
  %22 = icmp slt i32 %21, 0, !dbg !5223
  %23 = add i32 %9, 1, !dbg !5225
  call void @llvm.dbg.value(metadata i32 undef, metadata !5208, metadata !DIExpression()), !dbg !5211
  br i1 %22, label %24, label %7, !llvm.loop !5226

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5211
  ret i32 %25, !dbg !5228
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5229 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5233, metadata !DIExpression()), !dbg !5243
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5234, metadata !DIExpression()), !dbg !5243
  call void @llvm.dbg.value(metadata i8* %2, metadata !5235, metadata !DIExpression()), !dbg !5243
  call void @llvm.dbg.value(metadata i8* %3, metadata !5236, metadata !DIExpression()), !dbg !5243
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5244
  %6 = load i8, i8* %5, align 1, !dbg !5244
  %7 = zext i8 %6 to i32, !dbg !5245
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5246
  %9 = icmp eq i32 %8, 0, !dbg !5246
  call void @llvm.dbg.value(metadata i1 %9, metadata !5237, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5243
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5247
  call void @llvm.dbg.value(metadata i32 %10, metadata !5238, metadata !DIExpression()), !dbg !5243
  %11 = ptrtoint i8* %3 to i32, !dbg !5248
  %12 = ptrtoint i8* %2 to i32, !dbg !5248
  %13 = sub i32 %11, %12, !dbg !5248
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5249
  call void @llvm.dbg.value(metadata i8* %14, metadata !5240, metadata !DIExpression()), !dbg !5243
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5250

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5243
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5233, metadata !DIExpression()), !dbg !5243
  call void @llvm.dbg.value(metadata i8* %18, metadata !5240, metadata !DIExpression()), !dbg !5243
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5251
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5252
  call void @llvm.dbg.value(metadata i32 %25, metadata !5241, metadata !DIExpression()), !dbg !5253
  %26 = icmp ult i32 %25, 10, !dbg !5254
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5255
  %28 = add i32 %27, %25, !dbg !5253
  %29 = trunc i32 %28 to i8, !dbg !5255
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5256
  call void @llvm.dbg.value(metadata i8* %30, metadata !5240, metadata !DIExpression()), !dbg !5243
  store i8 %29, i8* %30, align 1, !dbg !5257
  call void @llvm.dbg.value(metadata i64 %22, metadata !5233, metadata !DIExpression()), !dbg !5243
  %31 = icmp uge i64 %19, %15, !dbg !5258
  %32 = icmp ugt i8* %30, %2, !dbg !5259
  %33 = and i1 %31, %32, !dbg !5259
  br i1 %33, label %17, label %34, !dbg !5260, !llvm.loop !5261

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5263
  %36 = load i24, i24* %35, align 4, !dbg !5263
  %37 = and i24 %36, 32, !dbg !5263
  %38 = icmp eq i24 %37, 0, !dbg !5263
  br i1 %38, label %44, label %39, !dbg !5265

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5266

40:                                               ; preds = %39
  br label %41, !dbg !5268

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5272
  store i24 %43, i24* %35, align 4, !dbg !5272
  br label %44, !dbg !5273

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5273
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !5274 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5280, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.value(metadata i8* %1, metadata !5281, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.value(metadata i32 %2, metadata !5282, metadata !DIExpression()), !dbg !5283
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5284
  %5 = load i24, i24* %4, align 4, !dbg !5284
  %6 = lshr i24 %5, 11, !dbg !5284
  %7 = and i24 %6, 15, !dbg !5284
  %8 = zext i24 %7 to i32, !dbg !5284
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5285

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5286
  store i32 %2, i32* %10, align 4, !dbg !5288
  br label %28, !dbg !5289

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5290
  store i8 %12, i8* %1, align 1, !dbg !5291
  br label %28, !dbg !5292

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5293
  %15 = bitcast i8* %1 to i16*, !dbg !5294
  store i16 %14, i16* %15, align 2, !dbg !5295
  br label %28, !dbg !5296

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5297
  store i32 %2, i32* %17, align 4, !dbg !5298
  br label %28, !dbg !5299

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5300
  %20 = bitcast i8* %1 to i64*, !dbg !5301
  store i64 %19, i64* %20, align 8, !dbg !5302
  br label %28, !dbg !5303

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5304
  %23 = bitcast i8* %1 to i64*, !dbg !5305
  store i64 %22, i64* %23, align 8, !dbg !5306
  br label %28, !dbg !5307

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5308
  store i32 %2, i32* %25, align 4, !dbg !5309
  br label %28, !dbg !5310

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5311
  store i32 %2, i32* %27, align 4, !dbg !5312
  br label %28, !dbg !5313

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5314
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5318, metadata !DIExpression()), !dbg !5319
  %2 = add i32 %0, -65, !dbg !5320
  %3 = icmp ult i32 %2, 26, !dbg !5321
  %4 = zext i1 %3 to i32, !dbg !5321
  ret i32 %4, !dbg !5322
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5323 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5327, metadata !DIExpression()), !dbg !5328
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5329

2:                                                ; preds = %1
  br label %4, !dbg !5330

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5332

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5333
  ret i32 %5, !dbg !5334
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5335 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5337, metadata !DIExpression()), !dbg !5340
  call void @llvm.dbg.value(metadata i8* %1, metadata !5338, metadata !DIExpression()), !dbg !5340
  call void @llvm.dbg.value(metadata i8 1, metadata !5339, metadata !DIExpression()), !dbg !5340
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5341

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5339, metadata !DIExpression()), !dbg !5340
  call void @llvm.dbg.value(metadata i8* %5, metadata !5338, metadata !DIExpression()), !dbg !5340
  %6 = load i8, i8* %5, align 1, !dbg !5342
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5344

7:                                                ; preds = %4
  br label %11, !dbg !5345

8:                                                ; preds = %4
  br label %11, !dbg !5347

9:                                                ; preds = %4
  br label %11, !dbg !5348

10:                                               ; preds = %4
  br label %11, !dbg !5349

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5350
  %14 = or i24 %13, %12, !dbg !5350
  store i24 %14, i24* %3, align 4, !dbg !5350
  call void @llvm.dbg.value(metadata i8 poison, metadata !5339, metadata !DIExpression()), !dbg !5340
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5338, metadata !DIExpression()), !dbg !5340
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5339, metadata !DIExpression()), !dbg !5340
  call void @llvm.dbg.value(metadata i8* %15, metadata !5338, metadata !DIExpression()), !dbg !5340
  %17 = load i24, i24* %3, align 4, !dbg !5351
  %18 = and i24 %17, 68, !dbg !5353
  %19 = icmp eq i24 %18, 68, !dbg !5353
  br i1 %19, label %20, label %22, !dbg !5353

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5354
  store i24 %21, i24* %3, align 4, !dbg !5354
  br label %22, !dbg !5356

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5357
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5358 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5360, metadata !DIExpression()), !dbg !5364
  call void @llvm.dbg.value(metadata i8* %1, metadata !5361, metadata !DIExpression()), !dbg !5364
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5365
  %5 = load i24, i24* %4, align 4, !dbg !5366
  %6 = or i24 %5, 128, !dbg !5366
  store i24 %6, i24* %4, align 4, !dbg !5366
  call void @llvm.dbg.value(metadata i8* %1, metadata !5361, metadata !DIExpression()), !dbg !5364
  %7 = load i8, i8* %1, align 1, !dbg !5367
  %8 = icmp eq i8 %7, 42, !dbg !5369
  br i1 %8, label %9, label %12, !dbg !5370

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5371
  store i24 %10, i24* %4, align 4, !dbg !5371
  call void @llvm.dbg.value(metadata i8* %1, metadata !5361, metadata !DIExpression()), !dbg !5364
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5373
  call void @llvm.dbg.value(metadata i8* %11, metadata !5361, metadata !DIExpression()), !dbg !5364
  store i8* %11, i8** %3, align 4, !dbg !5373
  br label %29, !dbg !5374

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5362, metadata !DIExpression()), !dbg !5364
  call void @llvm.dbg.value(metadata i8** %3, metadata !5361, metadata !DIExpression(DW_OP_deref)), !dbg !5364
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5375
  call void @llvm.dbg.value(metadata i32 %13, metadata !5363, metadata !DIExpression()), !dbg !5364
  %14 = load i8*, i8** %3, align 4, !dbg !5376
  call void @llvm.dbg.value(metadata i8* %14, metadata !5361, metadata !DIExpression()), !dbg !5364
  %15 = icmp eq i8* %14, %1, !dbg !5378
  br i1 %15, label %29, label %16, !dbg !5379

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5380
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5382
  store i32 %13, i32* %18, align 4, !dbg !5383
  %19 = lshr i32 %13, 31, !dbg !5384
  %20 = lshr i24 %17, 1, !dbg !5385
  %21 = and i24 %20, 1, !dbg !5385
  %22 = zext i24 %21 to i32, !dbg !5385
  %23 = or i32 %19, %22, !dbg !5385
  %24 = trunc i32 %23 to i24, !dbg !5385
  %25 = shl nuw nsw i24 %24, 1, !dbg !5385
  %26 = and i24 %17, -131, !dbg !5385
  %27 = or i24 %26, 128, !dbg !5385
  %28 = or i24 %25, %27, !dbg !5385
  store i24 %28, i24* %4, align 4, !dbg !5385
  br label %29, !dbg !5386

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5364
  ret i8* %30, !dbg !5387
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5388 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5390, metadata !DIExpression()), !dbg !5393
  call void @llvm.dbg.value(metadata i8* %1, metadata !5391, metadata !DIExpression()), !dbg !5393
  %4 = load i8, i8* %1, align 1, !dbg !5394
  %5 = icmp eq i8 %4, 46, !dbg !5395
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5396
  %7 = load i24, i24* %6, align 4, !dbg !5397
  %8 = select i1 %5, i24 512, i24 0, !dbg !5397
  %9 = and i24 %7, -513, !dbg !5397
  %10 = or i24 %9, %8, !dbg !5397
  store i24 %10, i24* %6, align 4, !dbg !5397
  br i1 %5, label %11, label %32, !dbg !5398

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5391, metadata !DIExpression()), !dbg !5393
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5399
  call void @llvm.dbg.value(metadata i8* %12, metadata !5391, metadata !DIExpression()), !dbg !5393
  store i8* %12, i8** %3, align 4, !dbg !5399
  %13 = load i8, i8* %12, align 1, !dbg !5400
  %14 = icmp eq i8 %13, 42, !dbg !5402
  br i1 %14, label %15, label %18, !dbg !5403

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5404
  store i24 %16, i24* %6, align 4, !dbg !5404
  call void @llvm.dbg.value(metadata i8* %12, metadata !5391, metadata !DIExpression()), !dbg !5393
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5406
  call void @llvm.dbg.value(metadata i8* %17, metadata !5391, metadata !DIExpression()), !dbg !5393
  store i8* %17, i8** %3, align 4, !dbg !5406
  br label %32, !dbg !5407

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5391, metadata !DIExpression(DW_OP_deref)), !dbg !5393
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5408
  call void @llvm.dbg.value(metadata i32 %19, metadata !5392, metadata !DIExpression()), !dbg !5393
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5409
  store i32 %19, i32* %20, align 4, !dbg !5410
  %21 = lshr i32 %19, 31, !dbg !5411
  %22 = load i24, i24* %6, align 4, !dbg !5412
  %23 = lshr i24 %22, 1, !dbg !5412
  %24 = and i24 %23, 1, !dbg !5412
  %25 = zext i24 %24 to i32, !dbg !5412
  %26 = or i32 %21, %25, !dbg !5412
  %27 = trunc i32 %26 to i24, !dbg !5412
  %28 = shl nuw nsw i24 %27, 1, !dbg !5412
  %29 = and i24 %22, -3, !dbg !5412
  %30 = or i24 %28, %29, !dbg !5412
  store i24 %30, i24* %6, align 4, !dbg !5412
  %31 = load i8*, i8** %3, align 4, !dbg !5413
  call void @llvm.dbg.value(metadata i8* %31, metadata !5391, metadata !DIExpression()), !dbg !5393
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5393
  ret i8* %33, !dbg !5414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5415 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5417, metadata !DIExpression()), !dbg !5419
  call void @llvm.dbg.value(metadata i8* %1, metadata !5418, metadata !DIExpression()), !dbg !5419
  %3 = load i8, i8* %1, align 1, !dbg !5420
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5421

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5422
  call void @llvm.dbg.value(metadata i8* %5, metadata !5418, metadata !DIExpression()), !dbg !5419
  %6 = load i8, i8* %5, align 1, !dbg !5425
  %7 = icmp eq i8 %6, 104, !dbg !5426
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5427
  %9 = load i24, i24* %8, align 4, !dbg !5427
  %10 = and i24 %9, -30721, !dbg !5427
  br i1 %7, label %11, label %14, !dbg !5428

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5429
  store i24 %12, i24* %8, align 4, !dbg !5429
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5431
  call void @llvm.dbg.value(metadata i8* %13, metadata !5418, metadata !DIExpression()), !dbg !5419
  br label %56, !dbg !5432

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5433
  store i24 %15, i24* %8, align 4, !dbg !5433
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5435
  call void @llvm.dbg.value(metadata i8* %17, metadata !5418, metadata !DIExpression()), !dbg !5419
  %18 = load i8, i8* %17, align 1, !dbg !5437
  %19 = icmp eq i8 %18, 108, !dbg !5438
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5439
  %21 = load i24, i24* %20, align 4, !dbg !5439
  %22 = and i24 %21, -30721, !dbg !5439
  br i1 %19, label %23, label %26, !dbg !5440

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5441
  store i24 %24, i24* %20, align 4, !dbg !5441
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5443
  call void @llvm.dbg.value(metadata i8* %25, metadata !5418, metadata !DIExpression()), !dbg !5419
  br label %56, !dbg !5444

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5445
  store i24 %27, i24* %20, align 4, !dbg !5445
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5447
  %30 = load i24, i24* %29, align 4, !dbg !5448
  %31 = and i24 %30, -30721, !dbg !5448
  %32 = or i24 %31, 10240, !dbg !5448
  store i24 %32, i24* %29, align 4, !dbg !5448
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5449
  call void @llvm.dbg.value(metadata i8* %33, metadata !5418, metadata !DIExpression()), !dbg !5419
  br label %56, !dbg !5450

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5451
  %36 = load i24, i24* %35, align 4, !dbg !5452
  %37 = and i24 %36, -30721, !dbg !5452
  %38 = or i24 %37, 12288, !dbg !5452
  store i24 %38, i24* %35, align 4, !dbg !5452
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5453
  call void @llvm.dbg.value(metadata i8* %39, metadata !5418, metadata !DIExpression()), !dbg !5419
  br label %56, !dbg !5454

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5455
  %42 = load i24, i24* %41, align 4, !dbg !5456
  %43 = and i24 %42, -30721, !dbg !5456
  %44 = or i24 %43, 14336, !dbg !5456
  store i24 %44, i24* %41, align 4, !dbg !5456
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5457
  call void @llvm.dbg.value(metadata i8* %45, metadata !5418, metadata !DIExpression()), !dbg !5419
  br label %56, !dbg !5458

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5459
  %48 = load i24, i24* %47, align 4, !dbg !5460
  %49 = and i24 %48, -30723, !dbg !5460
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5461
  call void @llvm.dbg.value(metadata i8* %50, metadata !5418, metadata !DIExpression()), !dbg !5419
  %51 = or i24 %49, 16386, !dbg !5462
  store i24 %51, i24* %47, align 4, !dbg !5462
  br label %56, !dbg !5463

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5464
  %54 = load i24, i24* %53, align 4, !dbg !5465
  %55 = and i24 %54, -30721, !dbg !5465
  store i24 %55, i24* %53, align 4, !dbg !5465
  br label %56, !dbg !5466

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5418, metadata !DIExpression()), !dbg !5419
  ret i8* %57, !dbg !5467
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5468 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5470, metadata !DIExpression()), !dbg !5475
  call void @llvm.dbg.value(metadata i8* %1, metadata !5471, metadata !DIExpression()), !dbg !5475
  call void @llvm.dbg.value(metadata i8 0, metadata !5472, metadata !DIExpression()), !dbg !5475
  call void @llvm.dbg.value(metadata i8* %1, metadata !5471, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5475
  %3 = load i8, i8* %1, align 1, !dbg !5476
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5477
  store i8 %3, i8* %4, align 1, !dbg !5478
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5479

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5480

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5481
  %9 = load i24, i24* %8, align 4, !dbg !5481
  %10 = and i24 %9, -458753, !dbg !5481
  %11 = or i24 %10, %7, !dbg !5481
  call void @llvm.dbg.label(metadata !5473), !dbg !5482
  %12 = and i24 %9, 30720, !dbg !5483
  %13 = icmp eq i24 %12, 16384, !dbg !5483
  %14 = zext i1 %13 to i24, !dbg !5485
  %15 = or i24 %11, %14, !dbg !5485
  %16 = icmp eq i8 %3, 99, !dbg !5486
  br i1 %16, label %17, label %43, !dbg !5488

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5489
  %19 = icmp ne i24 %18, 0, !dbg !5489
  call void @llvm.dbg.value(metadata i1 %19, metadata !5472, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5475
  br label %43, !dbg !5491

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5492
  %22 = load i24, i24* %21, align 4, !dbg !5493
  %23 = and i24 %22, -458753, !dbg !5493
  %24 = or i24 %23, 262144, !dbg !5493
  call void @llvm.dbg.value(metadata i8 1, metadata !5472, metadata !DIExpression()), !dbg !5475
  br label %43, !dbg !5494

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5497
  %27 = load i24, i24* %26, align 4, !dbg !5498
  %28 = and i24 %27, -458753, !dbg !5498
  %29 = or i24 %28, 196608, !dbg !5498
  %30 = and i24 %27, 30720, !dbg !5499
  %31 = icmp eq i24 %30, 16384, !dbg !5499
  br label %43, !dbg !5501

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5502
  %34 = load i24, i24* %33, align 4, !dbg !5503
  %35 = and i24 %34, -458753, !dbg !5503
  %36 = or i24 %35, 196608, !dbg !5503
  %37 = and i24 %34, 30720, !dbg !5504
  %38 = icmp ne i24 %37, 0, !dbg !5504
  br label %43, !dbg !5506

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5507
  %41 = load i24, i24* %40, align 4, !dbg !5508
  %42 = or i24 %41, 1, !dbg !5508
  br label %43, !dbg !5509

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5510
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5511
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5512
  call void @llvm.dbg.value(metadata i8* %48, metadata !5471, metadata !DIExpression()), !dbg !5475
  call void @llvm.dbg.value(metadata i8 poison, metadata !5472, metadata !DIExpression()), !dbg !5475
  %49 = lshr i24 %44, 1, !dbg !5510
  %50 = and i24 %49, 1, !dbg !5510
  %51 = zext i24 %50 to i32, !dbg !5510
  %52 = or i32 %51, %47, !dbg !5510
  %53 = trunc i32 %52 to i24, !dbg !5510
  %54 = shl nuw nsw i24 %53, 1, !dbg !5510
  %55 = and i24 %44, -3, !dbg !5510
  %56 = or i24 %54, %55, !dbg !5510
  store i24 %56, i24* %46, align 4, !dbg !5510
  ret i8* %48, !dbg !5513
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5514 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5519, metadata !DIExpression()), !dbg !5522
  %2 = load i8*, i8** %0, align 4, !dbg !5523
  call void @llvm.dbg.value(metadata i8* %2, metadata !5520, metadata !DIExpression()), !dbg !5522
  call void @llvm.dbg.value(metadata i32 0, metadata !5521, metadata !DIExpression()), !dbg !5522
  %3 = load i8, i8* %2, align 1, !dbg !5524
  %4 = zext i8 %3 to i32, !dbg !5525
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5526
  %6 = icmp eq i32 %5, 0, !dbg !5527
  br i1 %6, label %19, label %7, !dbg !5527

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5521, metadata !DIExpression()), !dbg !5522
  call void @llvm.dbg.value(metadata i8* %10, metadata !5520, metadata !DIExpression()), !dbg !5522
  %11 = mul i32 %9, 10, !dbg !5528
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5530
  call void @llvm.dbg.value(metadata i8* %12, metadata !5520, metadata !DIExpression()), !dbg !5522
  %13 = add i32 %11, -48, !dbg !5531
  %14 = add i32 %13, %8, !dbg !5532
  call void @llvm.dbg.value(metadata i32 %14, metadata !5521, metadata !DIExpression()), !dbg !5522
  %15 = load i8, i8* %12, align 1, !dbg !5524
  %16 = zext i8 %15 to i32, !dbg !5525
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5526
  %18 = icmp eq i32 %17, 0, !dbg !5527
  br i1 %18, label %19, label %7, !dbg !5527, !llvm.loop !5533

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5522
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5522
  store i8* %20, i8** %0, align 4, !dbg !5535
  ret i32 %21, !dbg !5536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5537 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5539, metadata !DIExpression()), !dbg !5540
  %2 = add i32 %0, -48, !dbg !5541
  %3 = icmp ult i32 %2, 10, !dbg !5542
  %4 = zext i1 %3 to i32, !dbg !5542
  ret i32 %4, !dbg !5543
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5544 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5549, metadata !DIExpression()), !dbg !5551
  call void @llvm.dbg.value(metadata i32 %1, metadata !5550, metadata !DIExpression()), !dbg !5551
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !5552, !srcloc !5554
  ret void, !dbg !5555
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5556 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5558, metadata !DIExpression()), !dbg !5566
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5567
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5567
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5559, metadata !DIExpression()), !dbg !5568
  call void @llvm.va_start(i8* nonnull %3), !dbg !5569
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5570
  %5 = load i32, i32* %4, align 4, !dbg !5570
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5570
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !5570
  call void @llvm.va_end(i8* nonnull %3), !dbg !5571
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5572
  ret void, !dbg !5572
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5573 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,86\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,256\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #25, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_NEONKEY\0A\09.equ\09CONFIG_BOARD_96B_NEONKEY,1\0A\09.type\09CONFIG_BOARD_96B_NEONKEY,%object", ""() #25, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F411XE\0A\09.equ\09CONFIG_SOC_STM32F411XE,1\0A\09.type\09CONFIG_SOC_STM32F411XE,%object", ""() #25, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !5923, !srcloc !5924
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !5925, !srcloc !5926
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !5927, !srcloc !5928
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !5929, !srcloc !5930
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !5931, !srcloc !5932
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !5933, !srcloc !5934
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !5935, !srcloc !5936
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !5937, !srcloc !5938
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !5939, !srcloc !5940
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !5941, !srcloc !5942
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !5943, !srcloc !5944
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !5945, !srcloc !5946
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5947, !srcloc !5948
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !5949, !srcloc !5950
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !5951, !srcloc !5952
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !5953, !srcloc !5954
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !5955, !srcloc !5956
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !5957, !srcloc !5958
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !5959, !srcloc !5960
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !5961, !srcloc !5962
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !5963, !srcloc !5964
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !5965, !srcloc !5966
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !5967, !srcloc !5968
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !5969, !srcloc !5970
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !5971, !srcloc !5972
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !5973, !srcloc !5974
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !5975, !srcloc !5976
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !5977, !srcloc !5978
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !5979, !srcloc !5980
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !5981, !srcloc !5982
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !5983, !srcloc !5984
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !5985, !srcloc !5986
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !5987, !srcloc !5988
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !5989, !srcloc !5990
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5991, !srcloc !5992
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !5993, !srcloc !5994
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5995, !srcloc !5996
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !5997, !srcloc !5998
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !5999, !srcloc !6000
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !6001, !srcloc !6002
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !6003, !srcloc !6004
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !6005, !srcloc !6006
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !6007, !srcloc !6008
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !6009, !srcloc !6010
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !6011, !srcloc !6012
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !6013, !srcloc !6014
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !6015, !srcloc !6016
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !6017, !srcloc !6018
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !6019, !srcloc !6020
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !6021, !srcloc !6022
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !6023, !srcloc !6024
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !6025, !srcloc !6026
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !6027, !srcloc !6028
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !6029, !srcloc !6030
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !6031, !srcloc !6032
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !6033, !srcloc !6034
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !6035, !srcloc !6036
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !6037, !srcloc !6038
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !6039, !srcloc !6040
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !6041, !srcloc !6042
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !6043, !srcloc !6044
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !6045, !srcloc !6046
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !6047, !srcloc !6048
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !6049, !srcloc !6050
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !6051, !srcloc !6052
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !6053, !srcloc !6054
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !6055, !srcloc !6056
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !6057, !srcloc !6058
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !6059, !srcloc !6060
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !6061, !srcloc !6062
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #25, !dbg !6063, !srcloc !6064
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #25, !dbg !6065, !srcloc !6066
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #25, !dbg !6067, !srcloc !6068
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !6069, !srcloc !6070
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !6071, !srcloc !6072
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !6073, !srcloc !6074
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6075, !srcloc !6076
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !6077, !srcloc !6078
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6079, !srcloc !6080
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6081, !srcloc !6082
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !6083, !srcloc !6084
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !6085, !srcloc !6086
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !6087, !srcloc !6088
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !6089, !srcloc !6090
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !6091, !srcloc !6092
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !6093, !srcloc !6094
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !6095, !srcloc !6096
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !6097, !srcloc !6098
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !6099, !srcloc !6100
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !6101, !srcloc !6102
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !6103, !srcloc !6104
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !6105, !srcloc !6106
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !6107, !srcloc !6108
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !6109, !srcloc !6110
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !6111, !srcloc !6112
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !6113, !srcloc !6114
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !6115, !srcloc !6116
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !6117, !srcloc !6118
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !6119, !srcloc !6120
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !6121, !srcloc !6122
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !6123, !srcloc !6124
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !6125, !srcloc !6126
  ret void, !dbg !6127
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6128 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6130, metadata !DIExpression()), !dbg !6132
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !6133
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !6134
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !6135, !srcloc !6144
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6135
  call void @llvm.dbg.value(metadata i32 %3, metadata !6141, metadata !DIExpression()) #25, !dbg !6145
  call void @llvm.dbg.value(metadata i32 undef, metadata !6142, metadata !DIExpression()) #25, !dbg !6145
  call void @llvm.dbg.value(metadata i32 %3, metadata !6131, metadata !DIExpression()), !dbg !6132
  call void @llvm.dbg.value(metadata i32 %3, metadata !6146, metadata !DIExpression()) #25, !dbg !6151
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !6153, !srcloc !6154
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6155
  ret i32 0, !dbg !6156
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6157 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6159
  %2 = or i32 %1, 512, !dbg !6159
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6159
  ret void, !dbg !6160
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6161 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6162
  %2 = or i32 %1, 1024, !dbg !6162
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6162
  ret void, !dbg !6163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6164 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6166, metadata !DIExpression()), !dbg !6167
  ret i32 0, !dbg !6168
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6169 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6218, metadata !DIExpression()), !dbg !6220
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6219, metadata !DIExpression()), !dbg !6220
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !6221
  ret void, !dbg !6222
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6223 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6240, metadata !DIExpression()), !dbg !6243
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6241, metadata !DIExpression()), !dbg !6243
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6244
  %4 = load i32, i32* %3, align 4, !dbg !6244
  call void @llvm.dbg.value(metadata i32 %4, metadata !6242, metadata !DIExpression()), !dbg !6243
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6245
  ret void, !dbg !6246
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !6247 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6251, metadata !DIExpression()), !dbg !6254
  call void @llvm.dbg.value(metadata i8* %0, metadata !6252, metadata !DIExpression()), !dbg !6254
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6255
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !6255
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6253, metadata !DIExpression()), !dbg !6256
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6256
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6257
  %5 = bitcast i8* %4 to i32*, !dbg !6257
  %6 = load i32, i32* %5, align 4, !dbg !6257
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6258
  store i32 %6, i32* %7, align 4, !dbg !6259
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6260
  unreachable, !dbg !6261
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6262 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6265, metadata !DIExpression()), !dbg !6266
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6267
  ret void, !dbg !6268
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6269 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6273, metadata !DIExpression()), !dbg !6274
  %2 = icmp sgt i32 %0, -1, !dbg !6275
  br i1 %2, label %3, label %8, !dbg !6277

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6278, !srcloc !6280
  %4 = and i32 %0, 31, !dbg !6281
  %5 = shl nuw i32 1, %4, !dbg !6282
  %6 = lshr i32 %0, 5, !dbg !6283
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6284
  store volatile i32 %5, i32* %7, align 4, !dbg !6285
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6286, !srcloc !6287
  br label %8, !dbg !6288

8:                                                ; preds = %3, %1
  ret void, !dbg !6289
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6290 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6292, metadata !DIExpression()), !dbg !6293
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6294
  ret void, !dbg !6295
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6296 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6298, metadata !DIExpression()), !dbg !6299
  %2 = icmp sgt i32 %0, -1, !dbg !6300
  br i1 %2, label %3, label %8, !dbg !6302

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6303
  %5 = shl nuw i32 1, %4, !dbg !6305
  %6 = lshr i32 %0, 5, !dbg !6306
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6307
  store volatile i32 %5, i32* %7, align 4, !dbg !6308
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6309, !srcloc !6313
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6314, !srcloc !6317
  br label %8, !dbg !6318

8:                                                ; preds = %3, %1
  ret void, !dbg !6319
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6320 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6324, metadata !DIExpression()), !dbg !6325
  %2 = lshr i32 %0, 5, !dbg !6326
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6327
  %4 = load volatile i32, i32* %3, align 4, !dbg !6327
  %5 = and i32 %0, 31, !dbg !6328
  %6 = shl nuw i32 1, %5, !dbg !6328
  %7 = and i32 %4, %6, !dbg !6329
  ret i32 %7, !dbg !6330
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6331 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6335, metadata !DIExpression()), !dbg !6338
  call void @llvm.dbg.value(metadata i32 %1, metadata !6336, metadata !DIExpression()), !dbg !6338
  call void @llvm.dbg.value(metadata i32 %2, metadata !6337, metadata !DIExpression()), !dbg !6338
  %4 = add i32 %1, 1, !dbg !6339
  call void @llvm.dbg.value(metadata i32 %4, metadata !6336, metadata !DIExpression()), !dbg !6338
  %5 = icmp ult i32 %4, 16, !dbg !6342
  br i1 %5, label %7, label %6, !dbg !6345

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 94) #27, !dbg !6346
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.41, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #27, !dbg !6346
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 94) #27, !dbg !6346
  unreachable, !dbg !6346

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6348
  ret void, !dbg !6349
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6350 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6354, metadata !DIExpression()), !dbg !6356
  call void @llvm.dbg.value(metadata i32 %1, metadata !6355, metadata !DIExpression()), !dbg !6356
  %3 = trunc i32 %1 to i8, !dbg !6357
  %4 = shl i8 %3, 4, !dbg !6357
  %5 = and i32 %0, 15, !dbg !6359
  %6 = add nsw i32 %5, -4, !dbg !6359
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6359
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6359
  %9 = icmp slt i32 %0, 0, !dbg !6359
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6359
  store volatile i8 %4, i8* %10, align 1, !dbg !6357
  ret void, !dbg !6360
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6361 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6363, metadata !DIExpression()), !dbg !6364
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !6365
  ret void, !dbg !6366
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6367 {
  tail call void @z_SysNmiOnReset() #27, !dbg !6369
  tail call void @z_arm_int_exit() #27, !dbg !6370
  ret void, !dbg !6371
}

; Function Attrs: optsize
declare !dbg !6372 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6373 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #5 !dbg !6375 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6377
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6378
  tail call void @z_bss_zero() #27, !dbg !6379
  tail call void @z_data_copy() #27, !dbg !6380
  tail call void @z_arm_interrupt_init() #27, !dbg !6381
  tail call void @z_cstart() #29, !dbg !6382
  unreachable, !dbg !6382
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6383 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6384
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6385, !srcloc !6388
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6389, !srcloc !6392
  ret void, !dbg !6393
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6394 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6395
  %2 = and i32 %1, -15728641, !dbg !6395
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6395
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !6396, !srcloc !6403
  call void @llvm.dbg.value(metadata i32 %3, metadata !6401, metadata !DIExpression()) #25, !dbg !6404
  %4 = and i32 %3, -5, !dbg !6405
  call void @llvm.dbg.value(metadata i32 %4, metadata !6406, metadata !DIExpression()) #25, !dbg !6411
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !6413, !srcloc !6414
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6415, !srcloc !6392
  ret void, !dbg !6417
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6418 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6421, metadata !DIExpression()), !dbg !6422
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6423
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6424
  store i32 %0, i32* %3, align 4, !dbg !6425
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6426
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6427
  store i32 %4, i32* %5, align 4, !dbg !6428
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6429
  %7 = or i32 %6, 268435456, !dbg !6429
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6429
  call void @llvm.dbg.value(metadata i32 0, metadata !6430, metadata !DIExpression()) #25, !dbg !6433
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6435, !srcloc !6436
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6437
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6438
  %10 = load i32, i32* %9, align 4, !dbg !6438
  ret i32 %10, !dbg !6439
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #6 !dbg !6440 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6552, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6553, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.value(metadata i8* %2, metadata !6554, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6555, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.value(metadata i8* %4, metadata !6556, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.value(metadata i8* %5, metadata !6557, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.value(metadata i8* %6, metadata !6558, metadata !DIExpression()), !dbg !6560
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6561
  call void @llvm.dbg.value(metadata i8* %8, metadata !6559, metadata !DIExpression()), !dbg !6560
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6562
  %10 = bitcast i8* %9 to i32*, !dbg !6562
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6563
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6564
  %12 = bitcast i8* %8 to i32*, !dbg !6565
  store i32 %11, i32* %12, align 4, !dbg !6566
  %13 = ptrtoint i8* %4 to i32, !dbg !6567
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6568
  %15 = bitcast i8* %14 to i32*, !dbg !6568
  store i32 %13, i32* %15, align 4, !dbg !6569
  %16 = ptrtoint i8* %5 to i32, !dbg !6570
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6571
  %18 = bitcast i8* %17 to i32*, !dbg !6571
  store i32 %16, i32* %18, align 4, !dbg !6572
  %19 = ptrtoint i8* %6 to i32, !dbg !6573
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6574
  %21 = bitcast i8* %20 to i32*, !dbg !6574
  store i32 %19, i32* %21, align 4, !dbg !6575
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6576
  %23 = bitcast i8* %22 to i32*, !dbg !6576
  store i32 16777216, i32* %23, align 4, !dbg !6577
  %24 = ptrtoint i8* %8 to i32, !dbg !6578
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6579
  store i32 %24, i32* %25, align 8, !dbg !6580
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6581
  store i32 0, i32* %26, align 4, !dbg !6582
  ret void, !dbg !6583
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #7 !dbg !6584 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6589, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.value(metadata i32 %1, metadata !6590, metadata !DIExpression()), !dbg !6595
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6596
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6591, metadata !DIExpression()), !dbg !6595
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6597
  br i1 %4, label %19, label %5, !dbg !6599

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6594, metadata !DIExpression()), !dbg !6595
  %6 = icmp eq i32 %0, -22, !dbg !6600
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6600
  %8 = load i32, i32* %7, align 4, !dbg !6600
  br i1 %6, label %16, label %9, !dbg !6602

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6600
  %11 = icmp ule i32 %10, %0, !dbg !6600
  %12 = icmp ugt i32 %8, %0, !dbg !6600
  %13 = and i1 %12, %11, !dbg !6600
  %14 = icmp ugt i32 %8, %1, !dbg !6600
  %15 = and i1 %14, %13, !dbg !6600
  br i1 %15, label %18, label %19, !dbg !6600

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6600
  br i1 %17, label %18, label %19, !dbg !6602

18:                                               ; preds = %9, %16
  br label %19, !dbg !6603

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6595
  ret i32 %20, !dbg !6605
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #5 !dbg !6606 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6610, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.value(metadata i8* %1, metadata !6611, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6612, metadata !DIExpression()), !dbg !6613
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6614
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !6615
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !6616, !srcloc !6617
  unreachable, !dbg !6618
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6619 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6637, metadata !DIExpression()), !dbg !6647
  call void @llvm.dbg.value(metadata i32 %1, metadata !6638, metadata !DIExpression()), !dbg !6647
  call void @llvm.dbg.value(metadata i32 %2, metadata !6639, metadata !DIExpression()), !dbg !6647
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6640, metadata !DIExpression()), !dbg !6647
  call void @llvm.dbg.value(metadata i32 0, metadata !6641, metadata !DIExpression()), !dbg !6647
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6648
  call void @llvm.dbg.value(metadata i32 %8, metadata !6642, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6647
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6649
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6649
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6650
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #25, !dbg !6650
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6646, metadata !DIExpression()), !dbg !6651
  call void @llvm.dbg.value(metadata i32 0, metadata !6652, metadata !DIExpression()) #25, !dbg !6655
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6657, !srcloc !6658
  call void @llvm.dbg.value(metadata i8* %6, metadata !6644, metadata !DIExpression(DW_OP_deref)), !dbg !6647
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !6659
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6645, metadata !DIExpression()), !dbg !6647
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6660
  br i1 %11, label %12, label %13, !dbg !6663

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.45, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 1057) #27, !dbg !6664
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.47, i32 0, i32 0)) #27, !dbg !6664
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 1057) #27, !dbg !6664
  unreachable, !dbg !6664

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6666
  call void @llvm.dbg.value(metadata i32 %14, metadata !6642, metadata !DIExpression()), !dbg !6647
  call void @llvm.dbg.value(metadata i8* %5, metadata !6643, metadata !DIExpression(DW_OP_deref)), !dbg !6647
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #26, !dbg !6667
  call void @llvm.dbg.value(metadata i32 %15, metadata !6641, metadata !DIExpression()), !dbg !6647
  %16 = load i8, i8* %5, align 1, !dbg !6668, !range !6670
  call void @llvm.dbg.value(metadata i8 %16, metadata !6643, metadata !DIExpression()), !dbg !6647
  %17 = icmp eq i8 %16, 0, !dbg !6668
  br i1 %17, label %18, label %35, !dbg !6671

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6672
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #27, !dbg !6673
  %21 = load i8, i8* %6, align 1, !dbg !6674, !range !6670
  call void @llvm.dbg.value(metadata i8 %21, metadata !6644, metadata !DIExpression()), !dbg !6647
  %22 = icmp eq i8 %21, 0, !dbg !6674
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6676
  %24 = load i32, i32* %23, align 4, !dbg !6676
  br i1 %22, label %30, label %25, !dbg !6677

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6678
  %27 = icmp eq i32 %26, 0, !dbg !6681
  br i1 %27, label %28, label %34, !dbg !6682

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6683
  br label %32, !dbg !6685

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6686
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6676
  br label %34, !dbg !6688

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #27, !dbg !6688
  br label %35, !dbg !6689

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #25, !dbg !6689
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6689
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6689
  ret void, !dbg !6689
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #6 !dbg !6690 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6695, metadata !DIExpression()), !dbg !6701
  call void @llvm.dbg.value(metadata i32 %1, metadata !6696, metadata !DIExpression()), !dbg !6701
  call void @llvm.dbg.value(metadata i32 %2, metadata !6697, metadata !DIExpression()), !dbg !6701
  call void @llvm.dbg.value(metadata i8* %3, metadata !6698, metadata !DIExpression()), !dbg !6701
  call void @llvm.dbg.value(metadata i8 0, metadata !6699, metadata !DIExpression()), !dbg !6701
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6700, metadata !DIExpression()), !dbg !6701
  store i8 0, i8* %3, align 1, !dbg !6702
  %5 = icmp ult i32 %2, -16777216, !dbg !6703
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6705
  br i1 %8, label %16, label %9, !dbg !6705

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6706
  %11 = icmp eq i32 %10, 0, !dbg !6706
  br i1 %11, label %12, label %13, !dbg !6708

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6700, metadata !DIExpression()), !dbg !6701
  store i8 1, i8* %3, align 1, !dbg !6711
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6701
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6700, metadata !DIExpression()), !dbg !6701
  br label %16, !dbg !6714

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6701
  ret %struct.__esf* %17, !dbg !6715
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6716 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6720, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.value(metadata i32 %1, metadata !6721, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.value(metadata i8* %2, metadata !6722, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.value(metadata i32 0, metadata !6723, metadata !DIExpression()), !dbg !6724
  store i8 0, i8* %2, align 1, !dbg !6725
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6726

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !6727
  call void @llvm.dbg.value(metadata i32 %5, metadata !6723, metadata !DIExpression()), !dbg !6724
  br label %11, !dbg !6729

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6730
  call void @llvm.dbg.value(metadata i32 %7, metadata !6723, metadata !DIExpression()), !dbg !6724
  br label %11, !dbg !6731

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6732
  call void @llvm.dbg.value(metadata i32 0, metadata !6723, metadata !DIExpression()), !dbg !6724
  br label %11, !dbg !6733

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !6734
  call void @llvm.dbg.value(metadata i32 0, metadata !6723, metadata !DIExpression()), !dbg !6724
  br label %11, !dbg !6735

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !6736
  br label %11, !dbg !6737

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6738
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6739 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6743, metadata !DIExpression()), !dbg !6746
  call void @llvm.dbg.value(metadata i8* %1, metadata !6744, metadata !DIExpression()), !dbg !6746
  call void @llvm.dbg.value(metadata i32 0, metadata !6745, metadata !DIExpression()), !dbg !6746
  store i8 0, i8* %1, align 1, !dbg !6747
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6748
  %4 = and i32 %3, 2, !dbg !6750
  %5 = icmp eq i32 %4, 0, !dbg !6751
  br i1 %5, label %6, label %35, !dbg !6752

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6753
  %8 = icmp sgt i32 %7, -1, !dbg !6755
  br i1 %8, label %9, label %35, !dbg !6756

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6757
  %11 = and i32 %10, 1073741824, !dbg !6759
  %12 = icmp eq i32 %11, 0, !dbg !6760
  br i1 %12, label %34, label %13, !dbg !6761

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !6762
  br i1 %14, label %15, label %18, !dbg !6765

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6766
  %17 = load i32, i32* %16, align 4, !dbg !6766
  call void @llvm.dbg.value(metadata i32 %17, metadata !6745, metadata !DIExpression()), !dbg !6746
  br label %35, !dbg !6768

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6769
  %20 = and i32 %19, 255, !dbg !6771
  %21 = icmp eq i32 %20, 0, !dbg !6772
  br i1 %21, label %24, label %22, !dbg !6773

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6774
  call void @llvm.dbg.value(metadata i32 %23, metadata !6745, metadata !DIExpression()), !dbg !6746
  br label %35, !dbg !6776

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6777
  %26 = and i32 %25, 65280, !dbg !6779
  %27 = icmp eq i32 %26, 0, !dbg !6780
  br i1 %27, label %29, label %28, !dbg !6781

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6782
  call void @llvm.dbg.value(metadata i32 0, metadata !6745, metadata !DIExpression()), !dbg !6746
  br label %35, !dbg !6784

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6785
  %31 = icmp ult i32 %30, 65536, !dbg !6787
  br i1 %31, label %33, label %32, !dbg !6788

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !6789
  call void @llvm.dbg.value(metadata i32 0, metadata !6745, metadata !DIExpression()), !dbg !6746
  br label %35

33:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.50, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 755) #27, !dbg !6791
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5.51, i32 0, i32 0)) #27, !dbg !6791
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 755) #27, !dbg !6791
  unreachable, !dbg !6791

34:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.50, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 760) #27, !dbg !6796
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.6.52, i32 0, i32 0)) #27, !dbg !6796
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 760) #27, !dbg !6796
  unreachable, !dbg !6796

35:                                               ; preds = %6, %15, %28, %32, %22, %2
  %36 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], !dbg !6746
  call void @llvm.dbg.value(metadata i32 %36, metadata !6745, metadata !DIExpression()), !dbg !6746
  ret i32 %36, !dbg !6801
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6802 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6804, metadata !DIExpression()), !dbg !6817
  call void @llvm.dbg.value(metadata i32 %1, metadata !6805, metadata !DIExpression()), !dbg !6817
  call void @llvm.dbg.value(metadata i8* %2, metadata !6806, metadata !DIExpression()), !dbg !6817
  call void @llvm.dbg.value(metadata i32 0, metadata !6807, metadata !DIExpression()), !dbg !6817
  call void @llvm.dbg.value(metadata i32 -22, metadata !6808, metadata !DIExpression()), !dbg !6817
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6818
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6820
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6822
  %7 = and i32 %6, 2, !dbg !6823
  %8 = icmp eq i32 %7, 0, !dbg !6824
  br i1 %8, label %19, label %9, !dbg !6825

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6826
  call void @llvm.dbg.value(metadata i32 %10, metadata !6809, metadata !DIExpression()), !dbg !6827
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6828
  %12 = and i32 %11, 128, !dbg !6830
  %13 = icmp eq i32 %12, 0, !dbg !6831
  br i1 %13, label %19, label %14, !dbg !6832

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6808, metadata !DIExpression()), !dbg !6817
  %15 = icmp eq i32 %1, 0, !dbg !6833
  br i1 %15, label %19, label %16, !dbg !6836

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6837
  %18 = and i32 %17, -129, !dbg !6837
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6837
  br label %19, !dbg !6839

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6817
  call void @llvm.dbg.value(metadata i32 %20, metadata !6808, metadata !DIExpression()), !dbg !6817
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6840
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6842
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6844
  %24 = and i32 %23, 16, !dbg !6845
  %25 = icmp eq i32 %24, 0, !dbg !6845
  br i1 %25, label %26, label %30, !dbg !6846

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6847
  %28 = and i32 %27, 2, !dbg !6848
  %29 = icmp eq i32 %28, 0, !dbg !6848
  br i1 %29, label %44, label %30, !dbg !6849

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6850
  %32 = and i32 %31, 2048, !dbg !6851
  %33 = icmp eq i32 %32, 0, !dbg !6851
  br i1 %33, label %44, label %34, !dbg !6852

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6853
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #27, !dbg !6854
  call void @llvm.dbg.value(metadata i32 %36, metadata !6812, metadata !DIExpression()), !dbg !6855
  %37 = icmp eq i32 %36, 0, !dbg !6856
  br i1 %37, label %39, label %38, !dbg !6858

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6859, metadata !DIExpression()) #25, !dbg !6862
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #25, !dbg !6865, !srcloc !6866
  call void @llvm.dbg.value(metadata i32 2, metadata !6807, metadata !DIExpression()), !dbg !6817
  br label %44, !dbg !6867

39:                                               ; preds = %34
  %40 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6868
  %41 = and i32 %40, 16, !dbg !6868
  %42 = icmp eq i32 %41, 0, !dbg !6868
  br i1 %42, label %44, label %43, !dbg !6872

43:                                               ; preds = %39
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7.48, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 343) #27, !dbg !6873
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8.49, i32 0, i32 0)) #27, !dbg !6873
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.46, i32 0, i32 0), i32 noundef 343) #27, !dbg !6873
  unreachable, !dbg !6873

44:                                               ; preds = %38, %39, %30, %26
  %45 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %39 ], !dbg !6817
  call void @llvm.dbg.value(metadata i32 %45, metadata !6807, metadata !DIExpression()), !dbg !6817
  %46 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6875
  %47 = and i32 %46, 32, !dbg !6877
  %48 = icmp eq i32 %47, 0, !dbg !6878
  br i1 %48, label %52, label %49, !dbg !6879

49:                                               ; preds = %44
  %50 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6880
  %51 = and i32 %50, -8193, !dbg !6880
  store volatile i32 %51, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6880
  br label %52, !dbg !6882

52:                                               ; preds = %49, %44
  %53 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6883
  %54 = or i32 %53, 255, !dbg !6883
  store volatile i32 %54, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6883
  store i8 0, i8* %2, align 1, !dbg !6884
  ret i32 %45, !dbg !6885
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6886 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6890, metadata !DIExpression()), !dbg !6897
  call void @llvm.dbg.value(metadata i32 %0, metadata !6891, metadata !DIExpression()), !dbg !6897
  call void @llvm.dbg.value(metadata i8* %1, metadata !6892, metadata !DIExpression()), !dbg !6897
  call void @llvm.dbg.value(metadata i32 0, metadata !6893, metadata !DIExpression()), !dbg !6897
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6898
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6900
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6902
  %6 = and i32 %5, 512, !dbg !6903
  %7 = icmp eq i32 %6, 0, !dbg !6903
  br i1 %7, label %18, label %8, !dbg !6904

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6905
  call void @llvm.dbg.value(metadata i32 %9, metadata !6894, metadata !DIExpression()), !dbg !6906
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6907
  %11 = and i32 %10, 32768, !dbg !6909
  %12 = icmp ne i32 %11, 0, !dbg !6910
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6911
  br i1 %14, label %15, label %18, !dbg !6911

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6912
  %17 = and i32 %16, -32769, !dbg !6912
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6912
  br label %18, !dbg !6916

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6917
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6919
  %21 = and i32 %20, 256, !dbg !6921
  %22 = icmp eq i32 %21, 0, !dbg !6922
  br i1 %22, label %23, label %25, !dbg !6923

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6924
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6926
  %27 = or i32 %26, 65280, !dbg !6926
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6926
  store i8 0, i8* %1, align 1, !dbg !6927
  ret void, !dbg !6928
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6929 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6935, metadata !DIExpression()), !dbg !6937
  call void @llvm.dbg.value(metadata i32 0, metadata !6936, metadata !DIExpression()), !dbg !6937
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6938
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6940
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6942
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6944
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6946
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6948
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6950
  %8 = or i32 %7, -65536, !dbg !6950
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6950
  ret void, !dbg !6951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !6952 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6956, metadata !DIExpression()), !dbg !6958
  call void @llvm.dbg.value(metadata i8* %0, metadata !6957, metadata !DIExpression()), !dbg !6958
  store i8 0, i8* %0, align 1, !dbg !6959
  ret void, !dbg !6960
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6961 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6965, metadata !DIExpression()), !dbg !6968
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6969
  %3 = load i32, i32* %2, align 4, !dbg !6969
  %4 = inttoptr i32 %3 to i16*, !dbg !6970
  call void @llvm.dbg.value(metadata i16* %4, metadata !6966, metadata !DIExpression()), !dbg !6968
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6971
  %6 = or i32 %5, 256, !dbg !6971
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6971
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6972, !srcloc !6975
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6976, !srcloc !6979
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6980
  %8 = load i16, i16* %7, align 2, !dbg !6981
  call void @llvm.dbg.value(metadata i16 %8, metadata !6967, metadata !DIExpression()), !dbg !6968
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6982
  %10 = and i32 %9, -257, !dbg !6982
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6982
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6983, !srcloc !6975
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6985, !srcloc !6979
  %11 = icmp eq i16 %8, -8446, !dbg !6987
  ret i1 %11, !dbg !6989
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6990 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6991
  %2 = or i32 %1, 16, !dbg !6991
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6991
  ret void, !dbg !6992
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6993 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6996, metadata !DIExpression()), !dbg !6997
  br label %1, !dbg !6998

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6996, metadata !DIExpression()), !dbg !6997
  tail call fastcc void @__NVIC_SetPriority.55(i32 noundef %2) #26, !dbg !7000
  %3 = add nuw nsw i32 %2, 1, !dbg !7003
  call void @llvm.dbg.value(metadata i32 %3, metadata !6996, metadata !DIExpression()), !dbg !6997
  %4 = icmp eq i32 %3, 86, !dbg !7004
  br i1 %4, label %5, label %1, !dbg !6998, !llvm.loop !7005

5:                                                ; preds = %1
  ret void, !dbg !7007
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.55(i32 noundef %0) unnamed_addr #15 !dbg !7008 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7010, metadata !DIExpression()), !dbg !7012
  call void @llvm.dbg.value(metadata i32 1, metadata !7011, metadata !DIExpression()), !dbg !7012
  %2 = and i32 %0, 15, !dbg !7013
  %3 = add nsw i32 %2, -4, !dbg !7013
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7013
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7013
  %6 = icmp slt i32 %0, 0, !dbg !7013
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7013
  store volatile i8 16, i8* %7, align 1, !dbg !7014
  ret void, !dbg !7016
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7017 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7125, metadata !DIExpression()), !dbg !7126
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7127
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7129
  br i1 %3, label %4, label %12, !dbg !7130

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !7131, !srcloc !7143
  call void @llvm.dbg.value(metadata i32 %5, metadata !7134, metadata !DIExpression()) #25, !dbg !7144
  %6 = icmp eq i32 %5, 0, !dbg !7145
  br i1 %6, label %12, label %7, !dbg !7146

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7147
  %9 = or i32 %8, 268435456, !dbg !7147
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7147
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7149
  %11 = and i32 %10, -32769, !dbg !7149
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7149
  br label %12, !dbg !7150

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !7151
  ret void, !dbg !7152
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7153 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !7154
  ret void, !dbg !7155
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !522 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !629, metadata !DIExpression()), !dbg !7156
  call void @llvm.dbg.value(metadata i8 0, metadata !630, metadata !DIExpression()), !dbg !7156
  call void @llvm.dbg.value(metadata i32 64, metadata !632, metadata !DIExpression()), !dbg !7156
  call void @llvm.dbg.value(metadata i32 undef, metadata !631, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7156
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !7157
  %3 = load i32, i32* %2, align 4, !dbg !7157
  call void @llvm.dbg.value(metadata i32 %3, metadata !631, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7156
  %4 = add i32 %3, -64, !dbg !7159
  call void @llvm.dbg.value(metadata i32 %4, metadata !631, metadata !DIExpression()), !dbg !7156
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7160
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7161
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7162
  call void @llvm.dbg.value(metadata i8 1, metadata !630, metadata !DIExpression()), !dbg !7156
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !7163
  ret void, !dbg !7164
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7165 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7166
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7167, !srcloc !7170
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7171, !srcloc !7174
  ret void, !dbg !7175
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7176 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !7177, !srcloc !7180
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7181
  ret void, !dbg !7182
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7183 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7198, metadata !DIExpression()), !dbg !7202
  call void @llvm.dbg.value(metadata i8 %1, metadata !7199, metadata !DIExpression()), !dbg !7202
  call void @llvm.dbg.value(metadata i32 %2, metadata !7200, metadata !DIExpression()), !dbg !7202
  call void @llvm.dbg.value(metadata i32 %3, metadata !7201, metadata !DIExpression()), !dbg !7202
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7203
  %6 = icmp eq i32 %5, -22, !dbg !7205
  br i1 %6, label %7, label %9, !dbg !7206

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 283) #27, !dbg !7207
  %8 = zext i8 %1 to i32, !dbg !7207
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.65, i32 0, i32 0), i32 noundef %8) #27, !dbg !7207
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 283) #27, !dbg !7207
  unreachable, !dbg !7207

9:                                                ; preds = %4
  ret void, !dbg !7212
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7213 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7218, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.value(metadata i8 %1, metadata !7219, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.value(metadata i32 undef, metadata !7220, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.value(metadata i32 undef, metadata !7221, metadata !DIExpression()), !dbg !7223
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7224
  call void @llvm.dbg.value(metadata i8 %3, metadata !7222, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7223
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7225
  call void @llvm.dbg.value(metadata i32 %4, metadata !7222, metadata !DIExpression()), !dbg !7223
  %5 = trunc i32 %4 to i8, !dbg !7226
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7227
  ret i32 %4, !dbg !7228
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !7229 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7233, metadata !DIExpression()), !dbg !7239
  call void @llvm.dbg.value(metadata i8 %1, metadata !7234, metadata !DIExpression()), !dbg !7239
  call void @llvm.dbg.value(metadata i8 %2, metadata !7235, metadata !DIExpression()), !dbg !7239
  call void @llvm.dbg.value(metadata i1 %3, metadata !7236, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7239
  %5 = zext i8 %2 to i32, !dbg !7240
  call void @llvm.dbg.value(metadata i32 %5, metadata !7238, metadata !DIExpression()), !dbg !7239
  call void @llvm.dbg.value(metadata i32 0, metadata !7237, metadata !DIExpression()), !dbg !7239
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7238, metadata !DIExpression()), !dbg !7239
  call void @llvm.dbg.value(metadata i32 0, metadata !7237, metadata !DIExpression()), !dbg !7239
  %7 = icmp eq i8 %1, 0, !dbg !7241
  br i1 %7, label %29, label %8, !dbg !7244

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7238, metadata !DIExpression()), !dbg !7239
  call void @llvm.dbg.value(metadata i32 %10, metadata !7237, metadata !DIExpression()), !dbg !7239
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7245
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7248
  %13 = load i32, i32* %12, align 4, !dbg !7248
  %14 = icmp eq i32 %13, 0, !dbg !7249
  br i1 %14, label %25, label %15, !dbg !7250

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7251

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7253
  %18 = icmp eq i32 %17, 0, !dbg !7253
  br i1 %18, label %29, label %19, !dbg !7254

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7255
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7256
  call void @llvm.dbg.value(metadata i32 %21, metadata !7238, metadata !DIExpression()), !dbg !7239
  %22 = icmp eq i32 %21, -22, !dbg !7257
  br i1 %22, label %29, label %23, !dbg !7259

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7260
  call void @llvm.dbg.value(metadata i32 %24, metadata !7238, metadata !DIExpression()), !dbg !7239
  br label %25, !dbg !7261

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7239
  call void @llvm.dbg.value(metadata i32 %26, metadata !7238, metadata !DIExpression()), !dbg !7239
  %27 = add nuw nsw i32 %10, 1, !dbg !7262
  call void @llvm.dbg.value(metadata i32 %27, metadata !7237, metadata !DIExpression()), !dbg !7239
  %28 = icmp eq i32 %27, %6, !dbg !7241
  br i1 %28, label %29, label %8, !dbg !7244, !llvm.loop !7263

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7239
  ret i32 %30, !dbg !7265
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7266 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7270, metadata !DIExpression()), !dbg !7272
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7273
  %3 = load i32, i32* %2, align 4, !dbg !7273
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7274, !range !4160
  %5 = icmp ult i32 %4, 2, !dbg !7274
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7275
  br i1 %7, label %8, label %15, !dbg !7275

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7276
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7277
  %11 = load i32, i32* %10, align 4, !dbg !7277
  %12 = and i32 %11, %9, !dbg !7278
  %13 = icmp eq i32 %12, 0, !dbg !7279
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7271, metadata !DIExpression()), !dbg !7272
  ret i32 %16, !dbg !7280
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7281 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7285, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7286, metadata !DIExpression()), !dbg !7288
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7289
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !7289
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7287, metadata !DIExpression()), !dbg !7290
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7291
  %6 = load i32, i32* %5, align 4, !dbg !7291
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7292
  store i32 %6, i32* %7, align 4, !dbg !7293
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7294
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7295
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7296
  %11 = load i32, i32* %10, align 4, !dbg !7296
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct._sfnode* noundef nonnull %8, %struct._sfnode* noundef nonnull %9, i32 noundef %11) #26, !dbg !7297
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7298
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !7299
  ret i32 %12, !dbg !7300
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct._sfnode* nocapture noundef writeonly %0, %struct._sfnode* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #11 !dbg !7301 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !7308, metadata !DIExpression()), !dbg !7312
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !7309, metadata !DIExpression()), !dbg !7312
  call void @llvm.dbg.value(metadata i32 undef, metadata !7310, metadata !DIExpression()), !dbg !7312
  call void @llvm.dbg.value(metadata i32 %2, metadata !7311, metadata !DIExpression()), !dbg !7312
  %4 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %1, i32 0, i32 0, !dbg !7313
  %5 = load i32, i32* %4, align 4, !dbg !7313
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7314
  %7 = or i32 %6, %5, !dbg !7315
  %8 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !7316
  store i32 %7, i32* %8, align 4, !dbg !7317
  ret void, !dbg !7318
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7319 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7323, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7324, metadata !DIExpression()), !dbg !7325
  %3 = zext i8 %0 to i32, !dbg !7326
  %4 = icmp ugt i8 %0, 7, !dbg !7328
  br i1 %4, label %6, label %5, !dbg !7329

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7330
  br label %6, !dbg !7331

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7325
  ret i32 %7, !dbg !7332
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7333 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7337, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7338, metadata !DIExpression()), !dbg !7339
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7340
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7341
  %4 = load i32, i32* %3, align 4, !dbg !7341
  %5 = and i32 %4, -32, !dbg !7342
  %6 = or i32 %5, %0, !dbg !7343
  %7 = or i32 %6, 16, !dbg !7343
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7344
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7345
  %9 = load i32, i32* %8, align 4, !dbg !7345
  %10 = or i32 %9, 1, !dbg !7346
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7347
  ret void, !dbg !7348
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7349 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7352, metadata !DIExpression()), !dbg !7353
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7354
  ret void, !dbg !7355
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #10 !dbg !7356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7360, metadata !DIExpression()), !dbg !7361
  %2 = icmp ult i32 %0, 33, !dbg !7362
  br i1 %2, label %11, label %3, !dbg !7364

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7365
  br i1 %4, label %11, label %5, !dbg !7367

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7368
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7369, !range !4160
  %8 = mul nsw i32 %7, -2, !dbg !7370
  %9 = add nsw i32 %8, 62, !dbg !7370
  %10 = and i32 %9, 62, !dbg !7371
  br label %11, !dbg !7372

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7361
  ret i32 %12, !dbg !7373
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7374 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7378, metadata !DIExpression()), !dbg !7380
  call void @llvm.dbg.value(metadata i8 %1, metadata !7379, metadata !DIExpression()), !dbg !7380
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7381
  %4 = icmp eq i32 %3, -22, !dbg !7383
  br i1 %4, label %5, label %7, !dbg !7384

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 314) #27, !dbg !7385
  %6 = zext i8 %1 to i32, !dbg !7385
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.68, i32 0, i32 0), i32 noundef %6) #27, !dbg !7385
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 314) #27, !dbg !7385
  unreachable, !dbg !7385

7:                                                ; preds = %2
  ret void, !dbg !7390
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7391 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7395, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.value(metadata i8 %1, metadata !7396, metadata !DIExpression()), !dbg !7402
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7403
  call void @llvm.dbg.value(metadata i8 %3, metadata !7397, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7402
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7404
  call void @llvm.dbg.value(metadata i32 %4, metadata !7397, metadata !DIExpression()), !dbg !7402
  %5 = icmp ne i32 %4, -22, !dbg !7405
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7406
  call void @llvm.dbg.value(metadata i32 %4, metadata !7398, metadata !DIExpression()), !dbg !7407
  br i1 %7, label %8, label %12, !dbg !7406

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7398, metadata !DIExpression()), !dbg !7407
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7408
  %10 = add i32 %9, 1, !dbg !7411
  call void @llvm.dbg.value(metadata i32 %10, metadata !7398, metadata !DIExpression()), !dbg !7407
  %11 = icmp eq i32 %10, 8, !dbg !7412
  br i1 %11, label %12, label %8, !dbg !7413, !llvm.loop !7414

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7416
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7417 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7420, metadata !DIExpression()), !dbg !7421
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7422
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7423
  ret void, !dbg !7424
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7425 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7430
  %2 = icmp ugt i32 %1, 8, !dbg !7432
  br i1 %2, label %3, label %4, !dbg !7433

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 341) #27, !dbg !7434
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.69, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #27, !dbg !7434
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 341) #27, !dbg !7434
  unreachable, !dbg !7434

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7439
  call void @llvm.dbg.value(metadata i32 0, metadata !7429, metadata !DIExpression()), !dbg !7440
  %5 = icmp eq i32 %1, 0, !dbg !7441
  br i1 %5, label %13, label %6, !dbg !7444

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7444

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7429, metadata !DIExpression()), !dbg !7440
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7445
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #26, !dbg !7447
  %11 = add nuw i32 %9, 1, !dbg !7448
  call void @llvm.dbg.value(metadata i32 %11, metadata !7429, metadata !DIExpression()), !dbg !7440
  %12 = icmp eq i32 %11, %1, !dbg !7441
  br i1 %12, label %13, label %8, !dbg !7444, !llvm.loop !7449

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7451
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7452
  tail call void @arm_core_mpu_enable() #26, !dbg !7453
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7454
  %16 = and i32 %15, 65280, !dbg !7454
  %17 = icmp eq i32 %16, 2048, !dbg !7454
  br i1 %17, label %19, label %18, !dbg !7457

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.62, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 435) #27, !dbg !7458
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.71, i32 0, i32 0)) #27, !dbg !7458
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.64, i32 0, i32 0), i32 noundef 435) #27, !dbg !7458
  unreachable, !dbg !7458

19:                                               ; preds = %13
  ret i32 0, !dbg !7460
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7461 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7468, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.value(metadata i8* %1, metadata !7469, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.value(metadata i8* %0, metadata !7470, metadata !DIExpression()), !dbg !7471
  %3 = load i8, i8* %1, align 1, !dbg !7472
  %4 = icmp eq i8 %3, 0, !dbg !7473
  br i1 %4, label %13, label %5, !dbg !7474

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7468, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.value(metadata i8* %8, metadata !7469, metadata !DIExpression()), !dbg !7471
  store i8 %6, i8* %7, align 1, !dbg !7475
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7477
  call void @llvm.dbg.value(metadata i8* %9, metadata !7468, metadata !DIExpression()), !dbg !7471
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7478
  call void @llvm.dbg.value(metadata i8* %10, metadata !7469, metadata !DIExpression()), !dbg !7471
  %11 = load i8, i8* %10, align 1, !dbg !7472
  %12 = icmp eq i8 %11, 0, !dbg !7473
  br i1 %12, label %13, label %5, !dbg !7474, !llvm.loop !7479

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7481
  ret i8* %0, !dbg !7482
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7483 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7487, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.value(metadata i8* %1, metadata !7488, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.value(metadata i32 %2, metadata !7489, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.value(metadata i8* %0, metadata !7490, metadata !DIExpression()), !dbg !7491
  %4 = icmp eq i32 %2, 0, !dbg !7492
  br i1 %4, label %22, label %5, !dbg !7493

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7487, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.value(metadata i32 %7, metadata !7489, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.value(metadata i8* %8, metadata !7488, metadata !DIExpression()), !dbg !7491
  %9 = load i8, i8* %8, align 1, !dbg !7494
  %10 = icmp eq i8 %9, 0, !dbg !7495
  br i1 %10, label %16, label %11, !dbg !7496

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7497
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7499
  call void @llvm.dbg.value(metadata i8* %12, metadata !7488, metadata !DIExpression()), !dbg !7491
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7500
  call void @llvm.dbg.value(metadata i8* %13, metadata !7487, metadata !DIExpression()), !dbg !7491
  %14 = add i32 %7, -1, !dbg !7501
  call void @llvm.dbg.value(metadata i32 %14, metadata !7489, metadata !DIExpression()), !dbg !7491
  %15 = icmp eq i32 %14, 0, !dbg !7492
  br i1 %15, label %22, label %5, !dbg !7493, !llvm.loop !7502

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7487, metadata !DIExpression()), !dbg !7491
  call void @llvm.dbg.value(metadata i32 %18, metadata !7489, metadata !DIExpression()), !dbg !7491
  store i8 0, i8* %17, align 1, !dbg !7504
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7506
  call void @llvm.dbg.value(metadata i8* %19, metadata !7487, metadata !DIExpression()), !dbg !7491
  %20 = add i32 %18, -1, !dbg !7507
  call void @llvm.dbg.value(metadata i32 %20, metadata !7489, metadata !DIExpression()), !dbg !7491
  %21 = icmp eq i32 %20, 0, !dbg !7508
  br i1 %21, label %22, label %16, !dbg !7509, !llvm.loop !7510

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7512
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7513 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7517, metadata !DIExpression()), !dbg !7520
  call void @llvm.dbg.value(metadata i32 %1, metadata !7518, metadata !DIExpression()), !dbg !7520
  call void @llvm.dbg.value(metadata i32 %1, metadata !7519, metadata !DIExpression()), !dbg !7520
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7521

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7517, metadata !DIExpression()), !dbg !7520
  %6 = load i8, i8* %5, align 1, !dbg !7522
  %7 = icmp eq i8 %6, %3, !dbg !7523
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7524
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7525
  call void @llvm.dbg.value(metadata i8* %10, metadata !7517, metadata !DIExpression()), !dbg !7520
  br i1 %9, label %11, label %4, !dbg !7524, !llvm.loop !7527

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7529
  ret i8* %12, !dbg !7530
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7531 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7533, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata i32 %1, metadata !7534, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata i8* null, metadata !7535, metadata !DIExpression()), !dbg !7536
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7537

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7536
  call void @llvm.dbg.value(metadata i8* %6, metadata !7535, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata i8* %5, metadata !7533, metadata !DIExpression()), !dbg !7536
  %7 = load i8, i8* %5, align 1, !dbg !7538
  %8 = icmp eq i8 %7, %3, !dbg !7541
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7542
  call void @llvm.dbg.value(metadata i8* %9, metadata !7535, metadata !DIExpression()), !dbg !7536
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7543
  call void @llvm.dbg.value(metadata i8* %10, metadata !7533, metadata !DIExpression()), !dbg !7536
  %11 = icmp eq i8 %7, 0, !dbg !7544
  br i1 %11, label %12, label %4, !dbg !7544, !llvm.loop !7545

12:                                               ; preds = %4
  ret i8* %9, !dbg !7547
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7548 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7552, metadata !DIExpression()), !dbg !7554
  call void @llvm.dbg.value(metadata i32 0, metadata !7553, metadata !DIExpression()), !dbg !7554
  %2 = load i8, i8* %0, align 1, !dbg !7555
  %3 = icmp eq i8 %2, 0, !dbg !7556
  br i1 %3, label %11, label %4, !dbg !7557

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7553, metadata !DIExpression()), !dbg !7554
  call void @llvm.dbg.value(metadata i8* %6, metadata !7552, metadata !DIExpression()), !dbg !7554
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7558
  call void @llvm.dbg.value(metadata i8* %7, metadata !7552, metadata !DIExpression()), !dbg !7554
  %8 = add i32 %5, 1, !dbg !7560
  call void @llvm.dbg.value(metadata i32 %8, metadata !7553, metadata !DIExpression()), !dbg !7554
  %9 = load i8, i8* %7, align 1, !dbg !7555
  %10 = icmp eq i8 %9, 0, !dbg !7556
  br i1 %10, label %11, label %4, !dbg !7557, !llvm.loop !7561

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7554
  ret i32 %12, !dbg !7563
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7564 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7568, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i32 %1, metadata !7569, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i32 0, metadata !7570, metadata !DIExpression()), !dbg !7571
  %3 = load i8, i8* %0, align 1, !dbg !7572
  %4 = icmp ne i8 %3, 0, !dbg !7573
  %5 = icmp ne i32 %1, 0, !dbg !7574
  %6 = and i1 %4, %5, !dbg !7574
  br i1 %6, label %7, label %16, !dbg !7575

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7570, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i8* %9, metadata !7568, metadata !DIExpression()), !dbg !7571
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7576
  call void @llvm.dbg.value(metadata i8* %10, metadata !7568, metadata !DIExpression()), !dbg !7571
  %11 = add nuw i32 %8, 1, !dbg !7578
  call void @llvm.dbg.value(metadata i32 %11, metadata !7570, metadata !DIExpression()), !dbg !7571
  %12 = load i8, i8* %10, align 1, !dbg !7572
  %13 = icmp ne i8 %12, 0, !dbg !7573
  %14 = icmp ult i32 %11, %1, !dbg !7574
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7574
  br i1 %15, label %7, label %16, !dbg !7575, !llvm.loop !7579

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7571
  ret i32 %17, !dbg !7581
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7582 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7586, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.value(metadata i8* %1, metadata !7587, metadata !DIExpression()), !dbg !7588
  %3 = load i8, i8* %0, align 1, !dbg !7589
  %4 = load i8, i8* %1, align 1, !dbg !7590
  %5 = icmp ne i8 %3, %4, !dbg !7591
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7592
  br i1 %7, label %18, label %8, !dbg !7592

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7587, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.value(metadata i8* %10, metadata !7586, metadata !DIExpression()), !dbg !7588
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7593
  call void @llvm.dbg.value(metadata i8* %11, metadata !7586, metadata !DIExpression()), !dbg !7588
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7595
  call void @llvm.dbg.value(metadata i8* %12, metadata !7587, metadata !DIExpression()), !dbg !7588
  %13 = load i8, i8* %11, align 1, !dbg !7589
  %14 = load i8, i8* %12, align 1, !dbg !7590
  %15 = icmp ne i8 %13, %14, !dbg !7591
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7592
  br i1 %17, label %18, label %8, !dbg !7592, !llvm.loop !7596

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7589
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7590
  %21 = zext i8 %19 to i32, !dbg !7599
  %22 = zext i8 %20 to i32, !dbg !7600
  %23 = sub nsw i32 %21, %22, !dbg !7601
  ret i32 %23, !dbg !7602
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7603 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7607, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata i8* %1, metadata !7608, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata i32 %2, metadata !7609, metadata !DIExpression()), !dbg !7610
  %4 = icmp eq i32 %2, 0, !dbg !7611
  br i1 %4, label %23, label %5, !dbg !7611

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7609, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata i8* %7, metadata !7608, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.value(metadata i8* %8, metadata !7607, metadata !DIExpression()), !dbg !7610
  %9 = load i8, i8* %8, align 1, !dbg !7612
  %10 = load i8, i8* %7, align 1, !dbg !7613
  %11 = icmp ne i8 %9, %10, !dbg !7614
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7615
  br i1 %13, label %19, label %14, !dbg !7615

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7616
  call void @llvm.dbg.value(metadata i8* %15, metadata !7607, metadata !DIExpression()), !dbg !7610
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7618
  call void @llvm.dbg.value(metadata i8* %16, metadata !7608, metadata !DIExpression()), !dbg !7610
  %17 = add i32 %6, -1, !dbg !7619
  call void @llvm.dbg.value(metadata i32 %17, metadata !7609, metadata !DIExpression()), !dbg !7610
  %18 = icmp eq i32 %17, 0, !dbg !7611
  br i1 %18, label %23, label %5, !dbg !7611, !llvm.loop !7620

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7623
  %21 = zext i8 %10 to i32, !dbg !7624
  %22 = sub nsw i32 %20, %21, !dbg !7625
  br label %23, !dbg !7626

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7626
  ret i32 %24, !dbg !7627
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7628 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7633, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i8* %1, metadata !7634, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i8** %2, metadata !7635, metadata !DIExpression()), !dbg !7638
  %4 = icmp eq i8* %0, null, !dbg !7639
  br i1 %4, label %5, label %7, !dbg !7639

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7640
  br label %7, !dbg !7639

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7639
  call void @llvm.dbg.value(metadata i8* %8, metadata !7636, metadata !DIExpression()), !dbg !7638
  %9 = load i8, i8* %8, align 1, !dbg !7641
  %10 = icmp eq i8 %9, 0, !dbg !7641
  br i1 %10, label %33, label %11, !dbg !7642

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7636, metadata !DIExpression()), !dbg !7638
  %14 = zext i8 %12 to i32, !dbg !7641
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !7643
  %16 = icmp eq i8* %15, null, !dbg !7642
  br i1 %16, label %21, label %17, !dbg !7644

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7645
  call void @llvm.dbg.value(metadata i8* %18, metadata !7636, metadata !DIExpression()), !dbg !7638
  %19 = load i8, i8* %18, align 1, !dbg !7641
  %20 = icmp eq i8 %19, 0, !dbg !7641
  br i1 %20, label %33, label %11, !dbg !7642, !llvm.loop !7647

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7637, metadata !DIExpression()), !dbg !7638
  %24 = zext i8 %22 to i32, !dbg !7649
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !7650
  %26 = icmp eq i8* %25, null, !dbg !7651
  br i1 %26, label %27, label %31, !dbg !7652

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7653
  call void @llvm.dbg.value(metadata i8* %28, metadata !7637, metadata !DIExpression()), !dbg !7638
  %29 = load i8, i8* %28, align 1, !dbg !7649
  %30 = icmp eq i8 %29, 0, !dbg !7649
  br i1 %30, label %33, label %21, !dbg !7655, !llvm.loop !7656

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7658
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7661
  br label %33, !dbg !7662

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7638
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7638
  store i8* %34, i8** %2, align 4, !dbg !7638
  ret i8* %35, !dbg !7663
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7664 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7666, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.value(metadata i8* %1, metadata !7667, metadata !DIExpression()), !dbg !7668
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7669
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7670
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !7671
  ret i8* %0, !dbg !7672
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7673 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7675, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata i8* %1, metadata !7676, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata i32 %2, metadata !7677, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata i8* %0, metadata !7678, metadata !DIExpression()), !dbg !7680
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7681
  call void @llvm.dbg.value(metadata i32 %4, metadata !7679, metadata !DIExpression()), !dbg !7680
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7682
  call void @llvm.dbg.value(metadata i8* %5, metadata !7675, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata i8* %1, metadata !7676, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata i32 %2, metadata !7677, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata i32 %2, metadata !7677, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7680
  %6 = icmp eq i32 %2, 0, !dbg !7683
  br i1 %6, label %18, label %7, !dbg !7684

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7685
  call void @llvm.dbg.value(metadata i8* %9, metadata !7675, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata i8* %10, metadata !7676, metadata !DIExpression()), !dbg !7680
  %12 = load i8, i8* %10, align 1, !dbg !7686
  %13 = icmp eq i8 %12, 0, !dbg !7687
  br i1 %13, label %18, label %14, !dbg !7688

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7689
  call void @llvm.dbg.value(metadata i8* %15, metadata !7676, metadata !DIExpression()), !dbg !7680
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7691
  call void @llvm.dbg.value(metadata i8* %16, metadata !7675, metadata !DIExpression()), !dbg !7680
  store i8 %12, i8* %9, align 1, !dbg !7692
  call void @llvm.dbg.value(metadata i32 %11, metadata !7677, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.value(metadata i32 %11, metadata !7677, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7680
  %17 = icmp eq i32 %11, 0, !dbg !7683
  br i1 %17, label %18, label %7, !dbg !7684, !llvm.loop !7693

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7680
  store i8 0, i8* %19, align 1, !dbg !7695
  ret i8* %0, !dbg !7696
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7697 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7701, metadata !DIExpression()), !dbg !7706
  call void @llvm.dbg.value(metadata i8* %1, metadata !7702, metadata !DIExpression()), !dbg !7706
  call void @llvm.dbg.value(metadata i32 %2, metadata !7703, metadata !DIExpression()), !dbg !7706
  call void @llvm.dbg.value(metadata i8* %0, metadata !7704, metadata !DIExpression()), !dbg !7706
  call void @llvm.dbg.value(metadata i8* %1, metadata !7705, metadata !DIExpression()), !dbg !7706
  %4 = icmp eq i32 %2, 0, !dbg !7707
  br i1 %4, label %31, label %5, !dbg !7709

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7705, metadata !DIExpression()), !dbg !7706
  call void @llvm.dbg.value(metadata i8* %0, metadata !7704, metadata !DIExpression()), !dbg !7706
  call void @llvm.dbg.value(metadata i32 %2, metadata !7703, metadata !DIExpression()), !dbg !7706
  %6 = add i32 %2, -1, !dbg !7710
  call void @llvm.dbg.value(metadata i32 %6, metadata !7703, metadata !DIExpression()), !dbg !7706
  %7 = icmp eq i32 %6, 0, !dbg !7711
  br i1 %7, label %23, label %8, !dbg !7712

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7713
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7713
  br label %11, !dbg !7713

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7705, metadata !DIExpression()), !dbg !7706
  call void @llvm.dbg.value(metadata i8* %14, metadata !7704, metadata !DIExpression()), !dbg !7706
  %15 = load i8, i8* %14, align 1, !dbg !7714
  %16 = load i8, i8* %13, align 1, !dbg !7715
  %17 = icmp eq i8 %15, %16, !dbg !7716
  br i1 %17, label %18, label %23, !dbg !7713

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7717
  call void @llvm.dbg.value(metadata i8* %19, metadata !7704, metadata !DIExpression()), !dbg !7706
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7719
  call void @llvm.dbg.value(metadata i8* %20, metadata !7705, metadata !DIExpression()), !dbg !7706
  call void @llvm.dbg.value(metadata i32 %12, metadata !7703, metadata !DIExpression()), !dbg !7706
  %21 = add i32 %12, -1, !dbg !7710
  call void @llvm.dbg.value(metadata i32 %21, metadata !7703, metadata !DIExpression()), !dbg !7706
  %22 = icmp eq i32 %21, 0, !dbg !7711
  br i1 %22, label %23, label %11, !dbg !7712, !llvm.loop !7720

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7706
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7706
  %26 = load i8, i8* %24, align 1, !dbg !7722
  %27 = zext i8 %26 to i32, !dbg !7722
  %28 = load i8, i8* %25, align 1, !dbg !7723
  %29 = zext i8 %28 to i32, !dbg !7723
  %30 = sub nsw i32 %27, %29, !dbg !7724
  br label %31, !dbg !7725

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7706
  ret i32 %32, !dbg !7726
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7727 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7731, metadata !DIExpression()), !dbg !7736
  call void @llvm.dbg.value(metadata i8* %1, metadata !7732, metadata !DIExpression()), !dbg !7736
  call void @llvm.dbg.value(metadata i32 %2, metadata !7733, metadata !DIExpression()), !dbg !7736
  call void @llvm.dbg.value(metadata i8* %0, metadata !7734, metadata !DIExpression()), !dbg !7736
  call void @llvm.dbg.value(metadata i8* %1, metadata !7735, metadata !DIExpression()), !dbg !7736
  %4 = ptrtoint i8* %0 to i32, !dbg !7737
  %5 = ptrtoint i8* %1 to i32, !dbg !7737
  %6 = sub i32 %4, %5, !dbg !7737
  %7 = icmp ult i32 %6, %2, !dbg !7739
  br i1 %7, label %10, label %8, !dbg !7740

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7735, metadata !DIExpression()), !dbg !7736
  call void @llvm.dbg.value(metadata i8* %0, metadata !7734, metadata !DIExpression()), !dbg !7736
  call void @llvm.dbg.value(metadata i32 %2, metadata !7733, metadata !DIExpression()), !dbg !7736
  %9 = icmp eq i32 %2, 0, !dbg !7741
  br i1 %9, label %26, label %17, !dbg !7743

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7733, metadata !DIExpression()), !dbg !7736
  %12 = add i32 %11, -1, !dbg !7744
  call void @llvm.dbg.value(metadata i32 %12, metadata !7733, metadata !DIExpression()), !dbg !7736
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7747
  %14 = load i8, i8* %13, align 1, !dbg !7747
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7748
  store i8 %14, i8* %15, align 1, !dbg !7749
  %16 = icmp eq i32 %12, 0, !dbg !7750
  br i1 %16, label %26, label %10, !dbg !7751, !llvm.loop !7752

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7735, metadata !DIExpression()), !dbg !7736
  call void @llvm.dbg.value(metadata i8* %19, metadata !7734, metadata !DIExpression()), !dbg !7736
  call void @llvm.dbg.value(metadata i32 %20, metadata !7733, metadata !DIExpression()), !dbg !7736
  %21 = load i8, i8* %18, align 1, !dbg !7754
  store i8 %21, i8* %19, align 1, !dbg !7756
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7757
  call void @llvm.dbg.value(metadata i8* %22, metadata !7734, metadata !DIExpression()), !dbg !7736
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7758
  call void @llvm.dbg.value(metadata i8* %23, metadata !7735, metadata !DIExpression()), !dbg !7736
  %24 = add i32 %20, -1, !dbg !7759
  call void @llvm.dbg.value(metadata i32 %24, metadata !7733, metadata !DIExpression()), !dbg !7736
  %25 = icmp eq i32 %24, 0, !dbg !7741
  br i1 %25, label %26, label %17, !dbg !7743, !llvm.loop !7760

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7762
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7763 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7769, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.value(metadata i8* %1, metadata !7770, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.value(metadata i32 %2, metadata !7771, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.value(metadata i8* %0, metadata !7772, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.value(metadata i8* %1, metadata !7773, metadata !DIExpression()), !dbg !7774
  %4 = icmp eq i32 %2, 0, !dbg !7775
  br i1 %4, label %14, label %5, !dbg !7776

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7773, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.value(metadata i8* %7, metadata !7772, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.value(metadata i32 %8, metadata !7771, metadata !DIExpression()), !dbg !7774
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7777
  call void @llvm.dbg.value(metadata i8* %9, metadata !7773, metadata !DIExpression()), !dbg !7774
  %10 = load i8, i8* %6, align 1, !dbg !7779
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7780
  call void @llvm.dbg.value(metadata i8* %11, metadata !7772, metadata !DIExpression()), !dbg !7774
  store i8 %10, i8* %7, align 1, !dbg !7781
  %12 = add i32 %8, -1, !dbg !7782
  call void @llvm.dbg.value(metadata i32 %12, metadata !7771, metadata !DIExpression()), !dbg !7774
  %13 = icmp eq i32 %12, 0, !dbg !7775
  br i1 %13, label %14, label %5, !dbg !7776, !llvm.loop !7783

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7785
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7786 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7790, metadata !DIExpression()), !dbg !7795
  call void @llvm.dbg.value(metadata i32 %1, metadata !7791, metadata !DIExpression()), !dbg !7795
  call void @llvm.dbg.value(metadata i32 %2, metadata !7792, metadata !DIExpression()), !dbg !7795
  call void @llvm.dbg.value(metadata i8* %0, metadata !7793, metadata !DIExpression()), !dbg !7795
  %4 = trunc i32 %1 to i8, !dbg !7796
  call void @llvm.dbg.value(metadata i8 %4, metadata !7794, metadata !DIExpression()), !dbg !7795
  call void @llvm.dbg.value(metadata i32 %2, metadata !7792, metadata !DIExpression()), !dbg !7795
  call void @llvm.dbg.value(metadata i8* %0, metadata !7793, metadata !DIExpression()), !dbg !7795
  %5 = icmp eq i32 %2, 0, !dbg !7797
  br i1 %5, label %12, label %6, !dbg !7798

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7792, metadata !DIExpression()), !dbg !7795
  call void @llvm.dbg.value(metadata i8* %8, metadata !7793, metadata !DIExpression()), !dbg !7795
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7799
  call void @llvm.dbg.value(metadata i8* %9, metadata !7793, metadata !DIExpression()), !dbg !7795
  store i8 %4, i8* %8, align 1, !dbg !7801
  %10 = add i32 %7, -1, !dbg !7802
  call void @llvm.dbg.value(metadata i32 %10, metadata !7792, metadata !DIExpression()), !dbg !7795
  %11 = icmp eq i32 %10, 0, !dbg !7797
  br i1 %11, label %12, label %6, !dbg !7798, !llvm.loop !7803

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7805
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7806 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7810, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i32 %1, metadata !7811, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i32 %2, metadata !7812, metadata !DIExpression()), !dbg !7816
  %4 = icmp eq i32 %2, 0, !dbg !7817
  br i1 %4, label %17, label %5, !dbg !7818

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7819

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7820
  call void @llvm.dbg.value(metadata i8* %9, metadata !7813, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.value(metadata i32 %8, metadata !7812, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i8* %9, metadata !7813, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7820
  %10 = load i8, i8* %9, align 1, !dbg !7821
  %11 = icmp eq i8 %10, %6, !dbg !7824
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7825
  call void @llvm.dbg.value(metadata i8* %12, metadata !7813, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.value(metadata i32 %13, metadata !7812, metadata !DIExpression()), !dbg !7816
  br i1 %15, label %16, label %7, !dbg !7825, !llvm.loop !7826

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7828

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7816
  ret i8* %19, !dbg !7829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #6 !dbg !7830 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7832, metadata !DIExpression()), !dbg !7833
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7834
  ret void, !dbg !7835
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !7836 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7838, metadata !DIExpression()), !dbg !7839
  ret i32 -1, !dbg !7840
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7841 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7845, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.value(metadata i32* %1, metadata !7846, metadata !DIExpression()), !dbg !7847
  %3 = ptrtoint i32* %1 to i32, !dbg !7848
  %4 = and i32 %3, -2, !dbg !7848
  %5 = icmp eq i32 %4, 2, !dbg !7848
  br i1 %5, label %6, label %9, !dbg !7848

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7849
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !7849
  br label %9, !dbg !7850

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7850
  ret i32 %10, !dbg !7851
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7852 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7854, metadata !DIExpression()), !dbg !7856
  call void @llvm.dbg.value(metadata i32* %1, metadata !7855, metadata !DIExpression()), !dbg !7856
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7857
  ret i32 %3, !dbg !7858
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7859 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7862, metadata !DIExpression()), !dbg !7864
  call void @llvm.dbg.value(metadata i32* %1, metadata !7863, metadata !DIExpression()), !dbg !7864
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7865, !srcloc !7867
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7868
  ret i32 %3, !dbg !7869
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7870 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7875, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.value(metadata i32* %1, metadata !7876, metadata !DIExpression()), !dbg !7879
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7880
  call void @llvm.dbg.value(metadata i32 %3, metadata !7877, metadata !DIExpression()), !dbg !7879
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !7881
  call void @llvm.dbg.value(metadata i32 %4, metadata !7878, metadata !DIExpression()), !dbg !7879
  %5 = icmp ne i32 %3, %4, !dbg !7882
  %6 = sext i1 %5 to i32, !dbg !7883
  ret i32 %6, !dbg !7884
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7885 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7889, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.value(metadata i32 %1, metadata !7890, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.value(metadata i32 %2, metadata !7891, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.value(metadata i32* %3, metadata !7892, metadata !DIExpression()), !dbg !7893
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7894
  ret i32 %5, !dbg !7895
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7896 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7898, metadata !DIExpression()), !dbg !7902
  call void @llvm.dbg.value(metadata i32 %1, metadata !7899, metadata !DIExpression()), !dbg !7902
  call void @llvm.dbg.value(metadata i32 %2, metadata !7900, metadata !DIExpression()), !dbg !7902
  call void @llvm.dbg.value(metadata i32* %3, metadata !7901, metadata !DIExpression()), !dbg !7902
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7903, !srcloc !7905
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7906
  ret i32 %5, !dbg !7907
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7908 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7910, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i32 %1, metadata !7911, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i32 %2, metadata !7912, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i32* %3, metadata !7913, metadata !DIExpression()), !dbg !7918
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7919
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7921
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7921
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7921
  br i1 %11, label %33, label %12, !dbg !7921

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7918
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7918
  call void @llvm.dbg.value(metadata i8* %14, metadata !7916, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i32 %13, metadata !7914, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i32 %1, metadata !7915, metadata !DIExpression()), !dbg !7918
  br label %15, !dbg !7922

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7924
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7918
  call void @llvm.dbg.value(metadata i8* %17, metadata !7916, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.value(metadata i32 %16, metadata !7915, metadata !DIExpression()), !dbg !7918
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7925
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7928
  call void @llvm.dbg.value(metadata i8* %19, metadata !7916, metadata !DIExpression()), !dbg !7918
  %20 = load i8, i8* %17, align 1, !dbg !7929
  %21 = zext i8 %20 to i32, !dbg !7930
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !7925
  %23 = icmp eq i32 %22, -1, !dbg !7931
  br i1 %23, label %30, label %24, !dbg !7932

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7933
  call void @llvm.dbg.value(metadata i32 %25, metadata !7915, metadata !DIExpression()), !dbg !7918
  %26 = icmp eq i32 %25, 0, !dbg !7934
  br i1 %26, label %27, label %15, !dbg !7935, !llvm.loop !7936

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7938
  call void @llvm.dbg.value(metadata i32 %28, metadata !7914, metadata !DIExpression()), !dbg !7918
  %29 = icmp eq i32 %28, 0, !dbg !7939
  br i1 %29, label %30, label %12, !dbg !7940, !llvm.loop !7941

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7918
  call void @llvm.dbg.value(metadata i32 %31, metadata !7914, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.label(metadata !7917), !dbg !7944
  %32 = sub i32 %2, %31, !dbg !7945
  br label %33, !dbg !7946

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7918
  ret i32 %34, !dbg !7947
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7948 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7952, metadata !DIExpression()), !dbg !7953
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7954
  %3 = icmp eq i32 %2, -1, !dbg !7956
  br i1 %3, label %8, label %4, !dbg !7957

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7958
  %6 = icmp eq i32 %5, -1, !dbg !7959
  %7 = sext i1 %6 to i32, !dbg !7958
  br label %8, !dbg !7960

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7953
  ret i32 %9, !dbg !7961
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7962 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7964, metadata !DIExpression()), !dbg !7965
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !7966
  ret void, !dbg !7967
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7968 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7972, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32 %1, metadata !7973, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7974, metadata !DIExpression()), !dbg !7978
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7979
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7979
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7979
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7975, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32 %0, metadata !7977, metadata !DIExpression()), !dbg !7978
  %7 = icmp slt i32 %0, %1, !dbg !7980
  br i1 %7, label %8, label %22, !dbg !7983

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7977, metadata !DIExpression()), !dbg !7978
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !7984
  %11 = icmp eq i32 %10, 0, !dbg !7984
  br i1 %11, label %19, label %12, !dbg !7987

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !7988
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7990
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7990
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7992
  br i1 %15, label %19, label %16, !dbg !7993

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7994
  %18 = load i8*, i8** %17, align 4, !dbg !7994
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !7995
  br label %19, !dbg !7996

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7997
  call void @llvm.dbg.value(metadata i32 %20, metadata !7977, metadata !DIExpression()), !dbg !7978
  %21 = icmp eq i32 %20, %1, !dbg !7980
  br i1 %21, label %22, label %8, !dbg !7983, !llvm.loop !7998

22:                                               ; preds = %19, %3
  ret void, !dbg !8000
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !8001 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8003, metadata !DIExpression()), !dbg !8004
  %2 = shl nuw i32 1, %0, !dbg !8005
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !8008
  ret i32 %3, !dbg !8009
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8010 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8014, metadata !DIExpression()), !dbg !8015
  %2 = shl nuw i32 1, %0, !dbg !8016
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !8019
  ret void, !dbg !8020
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8021 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8024, metadata !DIExpression()), !dbg !8025
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8026
  ret void, !dbg !8027
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8028 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8030, metadata !DIExpression()), !dbg !8031
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8032
  %3 = and i32 %2, %0, !dbg !8032
  %4 = icmp eq i32 %3, %0, !dbg !8033
  %5 = zext i1 %4 to i32, !dbg !8033
  ret i32 %5, !dbg !8034
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8035 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8037, metadata !DIExpression()), !dbg !8038
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !8039
  ret void, !dbg !8040
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8041 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8043, metadata !DIExpression()), !dbg !8044
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !8045
  ret void, !dbg !8046
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8047 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8049, metadata !DIExpression()), !dbg !8050
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !8051
  ret void, !dbg !8052
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8053 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8055, metadata !DIExpression()), !dbg !8056
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !8057
  ret void, !dbg !8058
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8059 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8061, metadata !DIExpression()), !dbg !8062
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !8063
  ret void, !dbg !8064
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8065 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8067, metadata !DIExpression()), !dbg !8068
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !8069
  ret void, !dbg !8070
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8071 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8073, metadata !DIExpression()), !dbg !8074
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !8075
  ret void, !dbg !8076
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8077 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8079, metadata !DIExpression()), !dbg !8080
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !8081
  ret void, !dbg !8082
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8083 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8085, metadata !DIExpression()), !dbg !8086
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !8087
  ret void, !dbg !8088
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8089 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8091, metadata !DIExpression()), !dbg !8092
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !8093
  ret void, !dbg !8094
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8095 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8097, metadata !DIExpression()), !dbg !8098
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !8099
  ret i32 0, !dbg !8100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !858 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !862, metadata !DIExpression()), !dbg !8101
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !8102
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !8104
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !8106
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !8108
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !8110
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !8112
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !8114
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !8116
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !8118
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !8120
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !8122
  ret void, !dbg !8124
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8125 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8127, metadata !DIExpression()), !dbg !8129
  call void @llvm.dbg.value(metadata i32 0, metadata !8128, metadata !DIExpression()), !dbg !8129
  call void @llvm.dbg.value(metadata i32 undef, metadata !8128, metadata !DIExpression()), !dbg !8129
  %2 = lshr i32 6684671, %0, !dbg !8130
  %3 = and i32 %2, 1, !dbg !8130
  %4 = or i32 %3, %0, !dbg !8132
  %5 = icmp eq i32 %4, 0, !dbg !8132
  br i1 %5, label %6, label %7, !dbg !8132

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.84, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.85, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.86, i32 0, i32 0), i32 noundef 123) #27, !dbg !8133
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.86, i32 0, i32 0), i32 noundef 123) #27, !dbg !8133
  unreachable, !dbg !8133

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8138
  %9 = load i32, i32* %8, align 4, !dbg !8138
  call void @llvm.dbg.value(metadata i32 %9, metadata !8128, metadata !DIExpression()), !dbg !8129
  %10 = shl nuw i32 1, %0, !dbg !8139
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #26, !dbg !8140
  tail call void @arch_irq_enable(i32 noundef %9) #27, !dbg !8141
  ret void, !dbg !8142
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8143 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8145, metadata !DIExpression()), !dbg !8146
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8147
  %3 = or i32 %2, %0, !dbg !8147
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8147
  ret void, !dbg !8148
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8151, metadata !DIExpression()), !dbg !8152
  %2 = icmp slt i32 %0, 32, !dbg !8153
  br i1 %2, label %3, label %5, !dbg !8155

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8156
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !8158
  br label %5, !dbg !8159

5:                                                ; preds = %1, %3
  ret void, !dbg !8160
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8163, metadata !DIExpression()), !dbg !8164
  %2 = xor i32 %0, -1, !dbg !8165
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8165
  %4 = and i32 %3, %2, !dbg !8165
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8165
  ret void, !dbg !8166
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8171, metadata !DIExpression()), !dbg !8173
  call void @llvm.dbg.value(metadata i32 %1, metadata !8172, metadata !DIExpression()), !dbg !8173
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8174

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8175
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !8177
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !8178
  br label %11, !dbg !8179

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8180
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !8181
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !8182
  br label %11, !dbg !8183

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8184
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !8185
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !8186
  br label %11, !dbg !8187

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8188
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !8189
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !8190
  br label %11, !dbg !8191

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8192
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8193 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8195, metadata !DIExpression()), !dbg !8196
  %2 = xor i32 %0, -1, !dbg !8197
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8197
  %4 = and i32 %3, %2, !dbg !8197
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8197
  ret void, !dbg !8198
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8201, metadata !DIExpression()), !dbg !8202
  %2 = xor i32 %0, -1, !dbg !8203
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8203
  %4 = and i32 %3, %2, !dbg !8203
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8203
  ret void, !dbg !8204
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8207, metadata !DIExpression()), !dbg !8208
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8209
  %3 = or i32 %2, %0, !dbg !8209
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8209
  ret void, !dbg !8210
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8211 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8213, metadata !DIExpression()), !dbg !8214
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8215
  %3 = or i32 %2, %0, !dbg !8215
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8215
  ret void, !dbg !8216
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !8217 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8221, metadata !DIExpression()), !dbg !8227
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8222, metadata !DIExpression()), !dbg !8227
  call void @llvm.dbg.value(metadata i8* %2, metadata !8223, metadata !DIExpression()), !dbg !8227
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8224, metadata !DIExpression()), !dbg !8227
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8226, metadata !DIExpression()), !dbg !8227
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8228
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8228
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8230
  br i1 %6, label %7, label %9, !dbg !8231

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8232
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8233
  store i8* %2, i8** %8, align 4, !dbg !8234
  br label %9, !dbg !8235

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8227
  ret i32 %10, !dbg !8236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #6 !dbg !8237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8239, metadata !DIExpression()), !dbg !8242
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !8240, metadata !DIExpression()), !dbg !8242
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8241, metadata !DIExpression()), !dbg !8242
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8243
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8244
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8245
  store i8* null, i8** %3, align 4, !dbg !8246
  ret void, !dbg !8247
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8248 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8250, metadata !DIExpression()), !dbg !8255
  call void @llvm.dbg.value(metadata i8* %1, metadata !8251, metadata !DIExpression()), !dbg !8255
  call void @llvm.dbg.value(metadata i8* %1, metadata !8252, metadata !DIExpression()), !dbg !8255
  %3 = bitcast i8* %1 to i32*, !dbg !8256
  %4 = load i32, i32* %3, align 4, !dbg !8256
  %5 = add i32 %4, -169, !dbg !8256
  %6 = icmp ult i32 %5, -121, !dbg !8256
  br i1 %6, label %15, label %7, !dbg !8258

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8259
  %9 = inttoptr i32 %8 to i32*, !dbg !8260
  call void @llvm.dbg.value(metadata i32* %9, metadata !8253, metadata !DIExpression()), !dbg !8255
  %10 = load volatile i32, i32* %9, align 4, !dbg !8261
  call void @llvm.dbg.value(metadata i32 %10, metadata !8254, metadata !DIExpression()), !dbg !8255
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8262
  %12 = bitcast i8* %11 to i32*, !dbg !8262
  %13 = load i32, i32* %12, align 4, !dbg !8262
  %14 = or i32 %13, %10, !dbg !8263
  call void @llvm.dbg.value(metadata i32 %14, metadata !8254, metadata !DIExpression()), !dbg !8255
  store volatile i32 %14, i32* %9, align 4, !dbg !8264
  br label %15, !dbg !8265

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8255
  ret i32 %16, !dbg !8266
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8267 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8269, metadata !DIExpression()), !dbg !8274
  call void @llvm.dbg.value(metadata i8* %1, metadata !8270, metadata !DIExpression()), !dbg !8274
  call void @llvm.dbg.value(metadata i8* %1, metadata !8271, metadata !DIExpression()), !dbg !8274
  %3 = bitcast i8* %1 to i32*, !dbg !8275
  %4 = load i32, i32* %3, align 4, !dbg !8275
  %5 = add i32 %4, -169, !dbg !8275
  %6 = icmp ult i32 %5, -121, !dbg !8275
  br i1 %6, label %16, label %7, !dbg !8277

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8278
  %9 = inttoptr i32 %8 to i32*, !dbg !8279
  call void @llvm.dbg.value(metadata i32* %9, metadata !8272, metadata !DIExpression()), !dbg !8274
  %10 = load volatile i32, i32* %9, align 4, !dbg !8280
  call void @llvm.dbg.value(metadata i32 %10, metadata !8273, metadata !DIExpression()), !dbg !8274
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8281
  %12 = bitcast i8* %11 to i32*, !dbg !8281
  %13 = load i32, i32* %12, align 4, !dbg !8281
  %14 = xor i32 %13, -1, !dbg !8282
  %15 = and i32 %10, %14, !dbg !8283
  call void @llvm.dbg.value(metadata i32 %15, metadata !8273, metadata !DIExpression()), !dbg !8274
  store volatile i32 %15, i32* %9, align 4, !dbg !8284
  br label %16, !dbg !8285

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8274
  ret i32 %17, !dbg !8286
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8287 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8289, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i8* %1, metadata !8290, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i32* %2, metadata !8291, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i8* %1, metadata !8292, metadata !DIExpression()), !dbg !8297
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8298
  call void @llvm.dbg.value(metadata i32 %4, metadata !8293, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i32 undef, metadata !8294, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i32 undef, metadata !8295, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i32 %4, metadata !8296, metadata !DIExpression()), !dbg !8297
  %5 = bitcast i8* %1 to i32*, !dbg !8299
  %6 = load i32, i32* %5, align 4, !dbg !8299
  switch i32 %6, label %18 [
    i32 48, label %16
    i32 52, label %16
    i32 56, label %16
    i32 64, label %7
    i32 68, label %9
    i32 168, label %16
    i32 6, label %16
    i32 1, label %11
    i32 4, label %14
    i32 5, label %15
  ], !dbg !8300

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !8301
  call void @llvm.dbg.value(metadata i32 %8, metadata !8294, metadata !DIExpression()), !dbg !8297
  br label %16, !dbg !8302

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #26, !dbg !8304
  call void @llvm.dbg.value(metadata i32 %10, metadata !8295, metadata !DIExpression()), !dbg !8297
  br label %16, !dbg !8305

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #27, !dbg !8306
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12) #26, !dbg !8307
  br label %16, !dbg !8308

14:                                               ; preds = %3
  br label %16, !dbg !8309

15:                                               ; preds = %3
  br label %16, !dbg !8310

16:                                               ; preds = %3, %3, %3, %3, %3, %15, %14, %11, %9, %7
  %17 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ 0, %14 ], [ 32000, %15 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %17, i32* %2, align 4, !dbg !8311
  br label %18, !dbg !8312

18:                                               ; preds = %16, %3
  %19 = phi i32 [ -134, %3 ], [ 0, %16 ], !dbg !8297
  ret i32 %19, !dbg !8312
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8313 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8315, metadata !DIExpression()), !dbg !8323
  call void @llvm.dbg.value(metadata i8* %1, metadata !8316, metadata !DIExpression()), !dbg !8323
  call void @llvm.dbg.value(metadata i8* %2, metadata !8317, metadata !DIExpression()), !dbg !8323
  call void @llvm.dbg.value(metadata i8* %1, metadata !8318, metadata !DIExpression()), !dbg !8323
  %4 = bitcast i8* %1 to i32*, !dbg !8324
  %5 = load i32, i32* %4, align 4, !dbg !8324
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8325
  call void @llvm.dbg.value(metadata i32 %6, metadata !8322, metadata !DIExpression()), !dbg !8323
  %7 = icmp slt i32 %6, 0, !dbg !8326
  br i1 %7, label %22, label %8, !dbg !8328

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8318, metadata !DIExpression()), !dbg !8323
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8329
  %10 = bitcast i8* %9 to i32*, !dbg !8329
  %11 = load i32, i32* %10, align 4, !dbg !8329
  %12 = lshr i32 %11, 16, !dbg !8329
  %13 = and i32 %12, 7, !dbg !8329
  %14 = lshr i32 %11, 8, !dbg !8330
  %15 = and i32 %14, 31, !dbg !8330
  %16 = shl i32 %13, %15, !dbg !8331
  call void @llvm.dbg.value(metadata i32 %16, metadata !8321, metadata !DIExpression()), !dbg !8323
  %17 = and i32 %11, 255, !dbg !8332
  %18 = or i32 %17, 1073887232, !dbg !8333
  %19 = inttoptr i32 %18 to i32*, !dbg !8334
  call void @llvm.dbg.value(metadata i32* %19, metadata !8319, metadata !DIExpression()), !dbg !8323
  %20 = load volatile i32, i32* %19, align 4, !dbg !8335
  call void @llvm.dbg.value(metadata i32 %20, metadata !8320, metadata !DIExpression()), !dbg !8323
  %21 = or i32 %16, %20, !dbg !8336
  call void @llvm.dbg.value(metadata i32 %21, metadata !8320, metadata !DIExpression()), !dbg !8323
  store volatile i32 %21, i32* %19, align 4, !dbg !8337
  br label %22, !dbg !8338

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8323
  ret i32 %23, !dbg !8339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !8340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8344, metadata !DIExpression()), !dbg !8346
  call void @llvm.dbg.value(metadata i32 0, metadata !8345, metadata !DIExpression()), !dbg !8346
  %2 = add i32 %0, -1, !dbg !8347
  %3 = icmp ult i32 %2, 6, !dbg !8347
  br i1 %3, label %4, label %7, !dbg !8347

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8347
  %6 = load i32, i32* %5, align 4, !dbg !8347
  call void @llvm.dbg.value(metadata i32 %6, metadata !8345, metadata !DIExpression()), !dbg !8346
  br label %7, !dbg !8348

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8346
  ret i32 %8, !dbg !8349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !8350 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8354, metadata !DIExpression()), !dbg !8356
  call void @llvm.dbg.value(metadata i32 %1, metadata !8355, metadata !DIExpression()), !dbg !8356
  %3 = udiv i32 %0, %1, !dbg !8357
  ret i32 %3, !dbg !8358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0) unnamed_addr #4 !dbg !8359 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8363, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata i32 16, metadata !8364, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata i32 336, metadata !8365, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata i32 4, metadata !8366, metadata !DIExpression()), !dbg !8367
  %2 = mul i32 %0, 336, !dbg !8368
  %3 = lshr i32 %2, 6, !dbg !8369
  ret i32 %3, !dbg !8370
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8371 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8373, metadata !DIExpression()), !dbg !8376
  tail call void @config_enable_default_clocks() #27, !dbg !8377
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !8378
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8378
  %4 = lshr i32 %3, 4, !dbg !8378
  %5 = and i32 %4, 15, !dbg !8378
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8378
  %7 = load i8, i8* %6, align 1, !dbg !8378
  %8 = zext i8 %7 to i32, !dbg !8378
  %9 = lshr i32 %2, %8, !dbg !8378
  call void @llvm.dbg.value(metadata i32 %9, metadata !8374, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8375, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8376
  %10 = icmp ult i32 %9, 84000000, !dbg !8379
  br i1 %10, label %11, label %13, !dbg !8381

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !8382
  br label %13, !dbg !8384

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8385
  tail call fastcc void @set_up_plls() #26, !dbg !8386
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8387
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8390
  br label %14, !dbg !8391

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8392
  %16 = icmp eq i32 %15, 8, !dbg !8393
  br i1 %16, label %17, label %14, !dbg !8391, !llvm.loop !8394

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8396
  br i1 %18, label %19, label %21, !dbg !8398

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !8399
  br label %21, !dbg !8401

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8402
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8403
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8404
  ret i32 0, !dbg !8405
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8406 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8408
  %2 = and i32 %1, 240, !dbg !8408
  ret i32 %2, !dbg !8409
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8410 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8411
  %2 = icmp eq i32 %1, 1, !dbg !8415
  br i1 %2, label %7, label %3, !dbg !8416

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8417
  br label %4, !dbg !8419

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8420
  %6 = icmp eq i32 %5, 1, !dbg !8421
  br i1 %6, label %7, label %4, !dbg !8419, !llvm.loop !8422

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8424
  br label %8, !dbg !8427

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8428
  %10 = icmp eq i32 %9, 1, !dbg !8429
  br i1 %10, label %11, label %8, !dbg !8427, !llvm.loop !8430

11:                                               ; preds = %8
  ret void, !dbg !8432
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8433 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8434
  %2 = icmp eq i32 %1, 8, !dbg !8436
  br i1 %2, label %3, label %4, !dbg !8437

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8438
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8440
  br label %4, !dbg !8441

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8442
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8443
  %6 = and i32 %5, -196609, !dbg !8443
  %7 = or i32 %6, 65536, !dbg !8443
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8443
  tail call void @config_pll_sysclock() #27, !dbg !8444
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8445
  br label %8, !dbg !8446

8:                                                ; preds = %8, %4
  %9 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8447
  %10 = icmp eq i32 %9, 1, !dbg !8448
  br i1 %10, label %11, label %8, !dbg !8446, !llvm.loop !8449

11:                                               ; preds = %8
  ret void, !dbg !8451
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8452 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8454, metadata !DIExpression()), !dbg !8455
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8456
  %2 = and i32 %1, -241, !dbg !8456
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8456
  ret void, !dbg !8457
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8458 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8460, metadata !DIExpression()), !dbg !8461
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8462
  %3 = and i32 %2, -4, !dbg !8462
  %4 = or i32 %3, %0, !dbg !8462
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8462
  ret void, !dbg !8463
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8464 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8465
  %2 = and i32 %1, 12, !dbg !8465
  ret i32 %2, !dbg !8466
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8467 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8469, metadata !DIExpression()), !dbg !8470
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8471
  %2 = and i32 %1, -7169, !dbg !8471
  %3 = or i32 %2, 4096, !dbg !8471
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8471
  ret void, !dbg !8472
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8473 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8475, metadata !DIExpression()), !dbg !8476
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8477
  %2 = and i32 %1, -57345, !dbg !8477
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8477
  ret void, !dbg !8478
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8479 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8480
  %2 = icmp eq i32 %1, 1, !dbg !8482
  br i1 %2, label %7, label %3, !dbg !8483

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8484
  br label %4, !dbg !8486

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8487
  %6 = icmp eq i32 %5, 1, !dbg !8488
  br i1 %6, label %7, label %4, !dbg !8486, !llvm.loop !8489

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8491
  br label %8, !dbg !8492

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8493
  %10 = icmp eq i32 %9, 0, !dbg !8494
  br i1 %10, label %11, label %8, !dbg !8492, !llvm.loop !8495

11:                                               ; preds = %8
  ret void, !dbg !8497
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8498 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8499
  %2 = and i32 %1, -16777217, !dbg !8499
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8499
  ret void, !dbg !8500
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8501 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8502
  %2 = or i32 %1, 16777216, !dbg !8502
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8502
  ret void, !dbg !8503
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8504 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8505
  %2 = lshr i32 %1, 25, !dbg !8506
  %3 = and i32 %2, 1, !dbg !8506
  ret i32 %3, !dbg !8507
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8508 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8509
  %2 = lshr i32 %1, 1, !dbg !8510
  %3 = and i32 %2, 1, !dbg !8510
  ret i32 %3, !dbg !8511
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8512 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8513
  %2 = or i32 %1, 1, !dbg !8513
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8513
  ret void, !dbg !8514
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8515 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8516
  %2 = or i32 %1, 1, !dbg !8516
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8516
  ret void, !dbg !8517
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8518 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8519
  %2 = lshr i32 %1, 1, !dbg !8520
  %3 = and i32 %2, 1, !dbg !8520
  ret i32 %3, !dbg !8521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !8522 {
  ret i32 16000000, !dbg !8524
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8527 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8528
  ret void, !dbg !8529
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8530 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8534, metadata !DIExpression()), !dbg !8538
  call void @llvm.dbg.value(metadata i32 16, metadata !8535, metadata !DIExpression()), !dbg !8538
  call void @llvm.dbg.value(metadata i32 336, metadata !8536, metadata !DIExpression()), !dbg !8538
  call void @llvm.dbg.value(metadata i32 65536, metadata !8537, metadata !DIExpression()), !dbg !8538
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8539
  %2 = and i32 %1, -4227072, !dbg !8539
  %3 = or i32 %2, 21520, !dbg !8539
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8539
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8540
  %5 = and i32 %4, -196609, !dbg !8540
  %6 = or i32 %5, 65536, !dbg !8540
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8540
  ret void, !dbg !8541
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8542 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !8543
  ret void, !dbg !8544
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8545 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8548, metadata !DIExpression()), !dbg !8550
  %2 = bitcast i32* %1 to i8*, !dbg !8551
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8551
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8549, metadata !DIExpression()), !dbg !8552
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8553
  %4 = or i32 %3, 268435456, !dbg !8553
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8553
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8554
  %6 = and i32 %5, 268435456, !dbg !8554
  store volatile i32 %6, i32* %1, align 4, !dbg !8555
  %7 = load volatile i32, i32* %1, align 4, !dbg !8556
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8557
  ret void, !dbg !8557
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8558 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8560, metadata !DIExpression()), !dbg !8561
  %2 = tail call fastcc zeroext i1 @device_is_ready.96() #26, !dbg !8562
  br i1 %2, label %3, label %4, !dbg !8564

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !8565
  br label %4, !dbg !8566

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8561
  ret i32 %5, !dbg !8567
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.96() unnamed_addr #1 !dbg !8568 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8572, metadata !DIExpression()), !dbg !8573
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8574, !srcloc !8576
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.97() #26, !dbg !8577
  ret i1 %1, !dbg !8578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8579 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !8580
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !8581
  ret void, !dbg !8582
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8585, metadata !DIExpression()), !dbg !8586
  %2 = icmp eq i32 %0, 10, !dbg !8587
  br i1 %2, label %3, label %4, !dbg !8589

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !8590
  br label %4, !dbg !8592

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8593
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !8594
  ret i32 %0, !dbg !8595
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8596 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8599, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata i8 %0, metadata !8600, metadata !DIExpression()), !dbg !8601
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8602, !srcloc !8604
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !8605
  ret void, !dbg !8606
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8607 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8609, metadata !DIExpression()), !dbg !8612
  call void @llvm.dbg.value(metadata i8 %0, metadata !8610, metadata !DIExpression()), !dbg !8612
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8613
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8611, metadata !DIExpression()), !dbg !8612
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8614
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8614
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #27, !dbg !8615
  ret void, !dbg !8616
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.97() unnamed_addr #1 !dbg !8617 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !8619, metadata !DIExpression()), !dbg !8620
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #27, !dbg !8621
  ret i1 %1, !dbg !8622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !8623 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8670, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8671, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8672, metadata !DIExpression()), !dbg !8673
  ret void, !dbg !8674
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8675 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8677, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata i8 %1, metadata !8678, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata i32 %2, metadata !8679, metadata !DIExpression()), !dbg !8682
  %5 = bitcast i32* %4 to i8*, !dbg !8683
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8683
  call void @llvm.dbg.value(metadata i32* %4, metadata !8681, metadata !DIExpression(DW_OP_deref)), !dbg !8682
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !8684
  call void @llvm.dbg.value(metadata i32 %6, metadata !8680, metadata !DIExpression()), !dbg !8682
  %7 = icmp eq i32 %6, 0, !dbg !8685
  br i1 %7, label %8, label %31, !dbg !8687

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8680, metadata !DIExpression()), !dbg !8682
  %9 = and i32 %2, 131072, !dbg !8688
  %10 = icmp eq i32 %9, 0, !dbg !8690
  br i1 %10, label %28, label %11, !dbg !8691

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8692
  %13 = icmp eq i32 %12, 0, !dbg !8695
  br i1 %13, label %18, label %14, !dbg !8696

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8697
  %16 = shl nuw i32 1, %15, !dbg !8697
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !8699
  br label %25, !dbg !8700

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8701
  %20 = icmp eq i32 %19, 0, !dbg !8703
  %21 = zext i8 %1 to i32, !dbg !8682
  br i1 %20, label %25, label %22, !dbg !8704

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8705
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !8707
  br label %25, !dbg !8708

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8709
  %27 = load i32, i32* %4, align 4, !dbg !8710
  call void @llvm.dbg.value(metadata i32 %30, metadata !8681, metadata !DIExpression()), !dbg !8682
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !8711
  br label %31, !dbg !8712

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8709
  %30 = load i32, i32* %4, align 4, !dbg !8710
  call void @llvm.dbg.value(metadata i32 %30, metadata !8681, metadata !DIExpression()), !dbg !8682
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !8711
  call void @llvm.dbg.value(metadata i32 0, metadata !8680, metadata !DIExpression()), !dbg !8682
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8713
  ret i32 %6, !dbg !8713
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8714 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8718, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.value(metadata i32* %1, metadata !8719, metadata !DIExpression()), !dbg !8723
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8724
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8724
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8724
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8720, metadata !DIExpression()), !dbg !8723
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8725
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8725
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8725
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8722, metadata !DIExpression()), !dbg !8723
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !8726
  store i32 %9, i32* %1, align 4, !dbg !8727
  ret i32 0, !dbg !8728
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8729 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8731, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i32 %1, metadata !8732, metadata !DIExpression()), !dbg !8737
  call void @llvm.dbg.value(metadata i32 %2, metadata !8733, metadata !DIExpression()), !dbg !8737
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8738
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8738
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8738
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8734, metadata !DIExpression()), !dbg !8737
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8739
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8739
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8739
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8735, metadata !DIExpression()), !dbg !8737
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !8740
  call void @llvm.dbg.value(metadata i32 %10, metadata !8736, metadata !DIExpression()), !dbg !8737
  %11 = xor i32 %1, -1, !dbg !8741
  %12 = and i32 %10, %11, !dbg !8742
  %13 = and i32 %2, %1, !dbg !8743
  %14 = or i32 %12, %13, !dbg !8744
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !8745
  ret i32 0, !dbg !8746
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8747 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8749, metadata !DIExpression()), !dbg !8753
  call void @llvm.dbg.value(metadata i32 %1, metadata !8750, metadata !DIExpression()), !dbg !8753
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8754
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8754
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8754
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8751, metadata !DIExpression()), !dbg !8753
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8755
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8755
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8755
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8752, metadata !DIExpression()), !dbg !8753
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8756
  store volatile i32 %1, i32* %9, align 4, !dbg !8756
  ret i32 0, !dbg !8757
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8758 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8760, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.value(metadata i32 %1, metadata !8761, metadata !DIExpression()), !dbg !8764
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8765
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8765
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8765
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8762, metadata !DIExpression()), !dbg !8764
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8766
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8766
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8766
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8763, metadata !DIExpression()), !dbg !8764
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !8767
  ret i32 0, !dbg !8768
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8769 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8771, metadata !DIExpression()), !dbg !8775
  call void @llvm.dbg.value(metadata i32 %1, metadata !8772, metadata !DIExpression()), !dbg !8775
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8776
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8776
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8776
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8773, metadata !DIExpression()), !dbg !8775
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8777
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8777
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8777
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8774, metadata !DIExpression()), !dbg !8775
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8778
  %10 = load volatile i32, i32* %9, align 4, !dbg !8778
  %11 = xor i32 %10, %1, !dbg !8778
  store volatile i32 %11, i32* %9, align 4, !dbg !8778
  ret i32 0, !dbg !8779
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8780 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8782, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.value(metadata i8 %1, metadata !8783, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.value(metadata i32 %2, metadata !8784, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.value(metadata i32 %3, metadata !8785, metadata !DIExpression()), !dbg !8792
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8793
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8793
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8793
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8786, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.value(metadata i8* undef, metadata !8787, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.value(metadata i32 0, metadata !8789, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.value(metadata i32 0, metadata !8790, metadata !DIExpression()), !dbg !8792
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8794

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8795
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !8799
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8800
  %12 = load i32, i32* %11, align 4, !dbg !8800
  %13 = icmp eq i32 %10, %12, !dbg !8801
  br i1 %13, label %14, label %29, !dbg !8802

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !8803
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !8805
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !8806
  br label %29, !dbg !8807

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8808
  %17 = load i8*, i8** %16, align 4, !dbg !8808
  call void @llvm.dbg.value(metadata i8* %17, metadata !8787, metadata !DIExpression()), !dbg !8792
  %18 = zext i8 %1 to i32, !dbg !8809
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !8811
  %20 = icmp eq i32 %19, 0, !dbg !8812
  br i1 %20, label %21, label %29, !dbg !8813

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8814
  %23 = load i32, i32* %22, align 4, !dbg !8814
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !8815
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8816

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8789, metadata !DIExpression()), !dbg !8792
  br label %27, !dbg !8817

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8789, metadata !DIExpression()), !dbg !8792
  br label %27, !dbg !8819

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8789, metadata !DIExpression()), !dbg !8792
  br label %27, !dbg !8820

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8792
  call void @llvm.dbg.value(metadata i32 %28, metadata !8789, metadata !DIExpression()), !dbg !8792
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !8821
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !8822
  br label %29, !dbg !8822

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8792
  call void @llvm.dbg.value(metadata i32 %30, metadata !8790, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.label(metadata !8791), !dbg !8823
  ret i32 %30, !dbg !8824
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !8825 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8827, metadata !DIExpression()), !dbg !8831
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8828, metadata !DIExpression()), !dbg !8831
  call void @llvm.dbg.value(metadata i1 %2, metadata !8829, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8831
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8832
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8832
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8832
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8830, metadata !DIExpression()), !dbg !8831
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8833
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !8834
  ret i32 %8, !dbg !8835
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !8836 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8842, metadata !DIExpression()), !dbg !8845
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8843, metadata !DIExpression()), !dbg !8845
  call void @llvm.dbg.value(metadata i1 %2, metadata !8844, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8845
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !8846
  br i1 %4, label %5, label %6, !dbg !8849

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.99, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 42) #27, !dbg !8850
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0)) #27, !dbg !8850
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 42) #27, !dbg !8850
  unreachable, !dbg !8850

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !8852
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !8852
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !8852
  br i1 %9, label %10, label %11, !dbg !8855

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.99, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 43) #27, !dbg !8856
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i32 0, i32 0)) #27, !dbg !8856
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 43) #27, !dbg !8856
  unreachable, !dbg !8856

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !8858
  br i1 %12, label %18, label %13, !dbg !8860

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8861
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #26, !dbg !8864
  %16 = or i1 %15, %2, !dbg !8865
  %17 = select i1 %16, i32 0, i32 -22, !dbg !8865
  br i1 %2, label %19, label %21, !dbg !8865

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !8866

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8867
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #26, !dbg !8870
  br label %21, !dbg !8871

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !8845
  ret i32 %22, !dbg !8872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !8873 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8877, metadata !DIExpression()), !dbg !8878
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8879
  %3 = icmp eq %struct._snode* %2, null, !dbg !8879
  ret i1 %3, !dbg !8879
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !8880 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8884, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8885, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8886, metadata !DIExpression()), !dbg !8888
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8889
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8887, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8886, metadata !DIExpression()), !dbg !8888
  %4 = icmp eq %struct._snode* %3, null, !dbg !8891
  br i1 %4, label %15, label %5, !dbg !8889

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8887, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8886, metadata !DIExpression()), !dbg !8888
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8893
  br i1 %6, label %9, label %11, !dbg !8896

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8887, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8886, metadata !DIExpression()), !dbg !8888
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8893
  br i1 %8, label %9, label %11, !dbg !8896, !llvm.loop !8897

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !8898
  br label %15, !dbg !8898

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8887, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8886, metadata !DIExpression()), !dbg !8888
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !8891
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8887, metadata !DIExpression()), !dbg !8888
  %14 = icmp eq %struct._snode* %13, null, !dbg !8891
  br i1 %14, label %15, label %7, !dbg !8889, !llvm.loop !8897

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !8901 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8905, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8906, metadata !DIExpression()), !dbg !8907
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8908
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !8908
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !8908
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8909
  %5 = icmp eq %struct._snode* %4, null, !dbg !8909
  br i1 %5, label %6, label %8, !dbg !8908

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8911
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !8911
  br label %8, !dbg !8911

8:                                                ; preds = %6, %2
  ret void, !dbg !8908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !8913 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8917, metadata !DIExpression()), !dbg !8918
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8919
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8919
  ret %struct._snode* %3, !dbg !8920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !8921 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8925, metadata !DIExpression()), !dbg !8927
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8926, metadata !DIExpression()), !dbg !8927
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8928
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8929
  ret void, !dbg !8930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !8931 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8933, metadata !DIExpression()), !dbg !8935
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8934, metadata !DIExpression()), !dbg !8935
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8936
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8937
  ret void, !dbg !8938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !8939 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8941, metadata !DIExpression()), !dbg !8942
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8943
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8943
  ret %struct._snode* %3, !dbg !8944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #6 !dbg !8945 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8947, metadata !DIExpression()), !dbg !8949
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8948, metadata !DIExpression()), !dbg !8949
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8950
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8951
  ret void, !dbg !8952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !8953 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8957, metadata !DIExpression()), !dbg !8960
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8958, metadata !DIExpression()), !dbg !8960
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8959, metadata !DIExpression()), !dbg !8960
  %4 = icmp eq %struct._snode* %1, null, !dbg !8961
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !8963
  br i1 %4, label %6, label %11, !dbg !8964

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !8965
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8967
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8967
  br i1 %8, label %9, label %15, !dbg !8965

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8969
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !8969
  br label %15, !dbg !8969

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !8971
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8973
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8973
  br i1 %13, label %14, label %15, !dbg !8971

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !8975
  br label %15, !dbg !8975

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !8964
  ret void, !dbg !8964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #7 !dbg !8977 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8981, metadata !DIExpression()), !dbg !8982
  %2 = icmp eq %struct._snode* %0, null, !dbg !8983
  br i1 %2, label %5, label %3, !dbg !8983

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !8983
  br label %5, !dbg !8983

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8983
  ret %struct._snode* %6, !dbg !8983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !8984 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8986, metadata !DIExpression()), !dbg !8987
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !8988
  ret %struct._snode* %2, !dbg !8988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !8989 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8991, metadata !DIExpression()), !dbg !8992
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8993
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8993
  ret %struct._snode* %3, !dbg !8994
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !8995 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8997, metadata !DIExpression()), !dbg !9000
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !9001, !range !9002
  call void @llvm.dbg.value(metadata i32 %2, metadata !8998, metadata !DIExpression()), !dbg !9000
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !9003
  call void @llvm.dbg.value(metadata i32 %3, metadata !8999, metadata !DIExpression()), !dbg !9000
  ret i32 %3, !dbg !9004
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9005 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9007, metadata !DIExpression()), !dbg !9010
  call void @llvm.dbg.value(metadata i8* %1, metadata !9008, metadata !DIExpression()), !dbg !9010
  call void @llvm.dbg.value(metadata i8* %1, metadata !9009, metadata !DIExpression()), !dbg !9010
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9011
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9011
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9012
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9012
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9012
  %8 = shl nuw i32 1, %0, !dbg !9013
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !9014
  ret void, !dbg !9015
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9016 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9020, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.value(metadata i32 %1, metadata !9021, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9022, metadata !DIExpression()), !dbg !9026
  %4 = bitcast i64* %3 to i8*, !dbg !9027
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9027
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9024, metadata !DIExpression()), !dbg !9026
  store i64 70368744177732, i64* %3, align 8, !dbg !9028
  call void @llvm.dbg.value(metadata i64* %3, metadata !9024, metadata !DIExpression(DW_OP_deref)), !dbg !9026
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !9029
  call void @llvm.dbg.value(metadata i32 %5, metadata !9025, metadata !DIExpression()), !dbg !9026
  %6 = icmp eq i32 %5, 0, !dbg !9030
  br i1 %6, label %7, label %8, !dbg !9032

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !9033
  br label %8, !dbg !9034

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !9035
  ret void, !dbg !9035
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9036 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9038, metadata !DIExpression()), !dbg !9041
  call void @llvm.dbg.value(metadata i8* %0, metadata !9039, metadata !DIExpression()), !dbg !9041
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9042
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9040, metadata !DIExpression()), !dbg !9041
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9043
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9043
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #27, !dbg !9044
  ret i32 %5, !dbg !9045
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9046 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9048, metadata !DIExpression()), !dbg !9051
  call void @llvm.dbg.value(metadata i32 %1, metadata !9049, metadata !DIExpression()), !dbg !9051
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !9052
  call void @llvm.dbg.value(metadata i32 %3, metadata !9050, metadata !DIExpression()), !dbg !9051
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !9053
  ret void, !dbg !9054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !9055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9059, metadata !DIExpression()), !dbg !9060
  %2 = sdiv i32 %0, 4, !dbg !9061
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9062
  %6 = add nsw i32 %5, 16, !dbg !9063
  %7 = shl i32 15, %6, !dbg !9064
  %8 = or i32 %7, %2, !dbg !9065
  ret i32 %8, !dbg !9066
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9067 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9071, metadata !DIExpression()), !dbg !9073
  call void @llvm.dbg.value(metadata i32 %1, metadata !9072, metadata !DIExpression()), !dbg !9073
  %3 = and i32 %1, 255, !dbg !9074
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9074
  %5 = load volatile i32, i32* %4, align 4, !dbg !9074
  %6 = lshr i32 %1, 16, !dbg !9074
  %7 = xor i32 %6, -1, !dbg !9074
  %8 = and i32 %5, %7, !dbg !9074
  call void @llvm.dbg.value(metadata i32 %6, metadata !9075, metadata !DIExpression()) #25, !dbg !9079
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9081, !srcloc !9082
  call void @llvm.dbg.value(metadata i32 %9, metadata !9078, metadata !DIExpression()) #25, !dbg !9079
  call void @llvm.dbg.value(metadata i32 %9, metadata !9083, metadata !DIExpression()) #25, !dbg !9088
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !9090, !range !4160
  %11 = shl i32 %0, %10, !dbg !9074
  %12 = or i32 %11, %8, !dbg !9074
  store volatile i32 %12, i32* %4, align 4, !dbg !9074
  ret void, !dbg !9091
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9092 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9096, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9097, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.value(metadata i32 %2, metadata !9098, metadata !DIExpression()), !dbg !9101
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9102
  %5 = icmp eq %struct._snode* %4, null, !dbg !9102
  br i1 %5, label %24, label %6, !dbg !9102

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !9104
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9100, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9099, metadata !DIExpression()), !dbg !9101
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9105
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9105
  %12 = load i32, i32* %11, align 4, !dbg !9105
  %13 = and i32 %12, %2, !dbg !9109
  %14 = icmp eq i32 %13, 0, !dbg !9109
  br i1 %14, label %22, label %15, !dbg !9110

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9111
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9111
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9111
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9111
  br i1 %19, label %20, label %21, !dbg !9115

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.99, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.100, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 77) #27, !dbg !9116
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i32 0, i32 0)) #27, !dbg !9116
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 77) #27, !dbg !9116
  unreachable, !dbg !9116

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #27, !dbg !9118
  br label %22, !dbg !9119

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9099, metadata !DIExpression()), !dbg !9101
  %23 = icmp eq %struct._snode* %8, null, !dbg !9120
  br i1 %23, label %24, label %6, !dbg !9120

24:                                               ; preds = %22, %3
  ret void, !dbg !9121
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9122 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9124, metadata !DIExpression()), !dbg !9125
  %2 = and i32 %0, 255, !dbg !9126
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9126
  %4 = load volatile i32, i32* %3, align 4, !dbg !9126
  %5 = lshr i32 %0, 16, !dbg !9126
  %6 = and i32 %4, %5, !dbg !9126
  call void @llvm.dbg.value(metadata i32 %5, metadata !9075, metadata !DIExpression()) #25, !dbg !9127
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !9129, !srcloc !9082
  call void @llvm.dbg.value(metadata i32 %7, metadata !9078, metadata !DIExpression()) #25, !dbg !9127
  call void @llvm.dbg.value(metadata i32 %7, metadata !9083, metadata !DIExpression()) #25, !dbg !9130
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9132, !range !4160
  %9 = lshr i32 %6, %8, !dbg !9133
  ret i32 %9, !dbg !9134
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9135 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9140, metadata !DIExpression()), !dbg !9142
  call void @llvm.dbg.value(metadata i32 %1, metadata !9141, metadata !DIExpression()), !dbg !9142
  %3 = shl i32 %1, 16, !dbg !9143
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9143
  store volatile i32 %3, i32* %4, align 4, !dbg !9143
  ret void, !dbg !9144
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9145 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9149, metadata !DIExpression()), !dbg !9150
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9151
  %3 = load volatile i32, i32* %2, align 4, !dbg !9151
  ret i32 %3, !dbg !9152
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9153 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9155, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.value(metadata i32 %1, metadata !9156, metadata !DIExpression()), !dbg !9157
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9158
  store volatile i32 %1, i32* %3, align 4, !dbg !9158
  ret void, !dbg !9159
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9160 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9162, metadata !DIExpression()), !dbg !9163
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9164
  %3 = load volatile i32, i32* %2, align 4, !dbg !9164
  ret i32 %3, !dbg !9165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !9166 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9170, metadata !DIExpression()), !dbg !9172
  call void @llvm.dbg.value(metadata i32* %1, metadata !9171, metadata !DIExpression()), !dbg !9172
  %3 = and i32 %0, 131072, !dbg !9173
  %4 = icmp eq i32 %3, 0, !dbg !9175
  br i1 %4, label %22, label %5, !dbg !9176

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9177
  %6 = and i32 %0, 2, !dbg !9179
  %7 = icmp eq i32 %6, 0, !dbg !9181
  br i1 %7, label %11, label %8, !dbg !9182

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9183
  %10 = icmp eq i32 %9, 0, !dbg !9183
  br i1 %10, label %33, label %11, !dbg !9186

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9187
  store i32 %12, i32* %1, align 4, !dbg !9187
  %13 = and i32 %0, 16, !dbg !9188
  %14 = icmp eq i32 %13, 0, !dbg !9190
  br i1 %14, label %17, label %15, !dbg !9191

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9192
  br label %31, !dbg !9194

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9195
  %19 = icmp eq i32 %18, 0, !dbg !9197
  br i1 %19, label %33, label %20, !dbg !9198

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9199
  br label %31, !dbg !9201

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9202
  %24 = icmp eq i32 %23, 0, !dbg !9204
  br i1 %24, label %31, label %25, !dbg !9205

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9206
  %27 = icmp eq i32 %26, 0, !dbg !9209
  br i1 %27, label %28, label %31, !dbg !9210

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9211
  br label %33, !dbg !9212

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9172
  ret i32 %34, !dbg !9212
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9213 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9217, metadata !DIExpression()), !dbg !9228
  call void @llvm.dbg.value(metadata i32 %1, metadata !9218, metadata !DIExpression()), !dbg !9228
  call void @llvm.dbg.value(metadata i32 %2, metadata !9219, metadata !DIExpression()), !dbg !9228
  call void @llvm.dbg.value(metadata i32 %3, metadata !9220, metadata !DIExpression()), !dbg !9228
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9229
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9229
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9229
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9221, metadata !DIExpression()), !dbg !9228
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9230
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9230
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9230
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9222, metadata !DIExpression()), !dbg !9228
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !9231
  call void @llvm.dbg.value(metadata i32 %11, metadata !9223, metadata !DIExpression()), !dbg !9228
  %12 = and i32 %2, 48, !dbg !9232
  call void @llvm.dbg.value(metadata i32 %12, metadata !9224, metadata !DIExpression()), !dbg !9228
  call void @llvm.dbg.value(metadata i32 %2, metadata !9225, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9228
  call void @llvm.dbg.value(metadata i32 %2, metadata !9226, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9228
  call void @llvm.dbg.value(metadata i32 %2, metadata !9227, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9228
  %13 = lshr i32 %2, 6, !dbg !9233
  %14 = and i32 %13, 1, !dbg !9233
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !9234
  %15 = lshr i32 %2, 7, !dbg !9235
  %16 = and i32 %15, 3, !dbg !9235
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !9236
  %17 = lshr i32 %2, 9, !dbg !9237
  %18 = and i32 %17, 3, !dbg !9237
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !9238
  %19 = icmp eq i32 %12, 32, !dbg !9239
  br i1 %19, label %20, label %24, !dbg !9241

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9242
  br i1 %21, label %22, label %23, !dbg !9245

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9246
  br label %24, !dbg !9248

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9249
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9251
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !9252
  ret void, !dbg !9253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !9254 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9256, metadata !DIExpression()), !dbg !9258
  %2 = shl nuw i32 1, %0, !dbg !9259
  call void @llvm.dbg.value(metadata i32 %2, metadata !9257, metadata !DIExpression()), !dbg !9258
  ret i32 %2, !dbg !9260
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9261 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9265, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.value(metadata i32 %1, metadata !9266, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.value(metadata i32 %2, metadata !9267, metadata !DIExpression()), !dbg !9268
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9269
  %5 = load volatile i32, i32* %4, align 4, !dbg !9269
  %6 = xor i32 %1, -1, !dbg !9269
  %7 = and i32 %5, %6, !dbg !9269
  %8 = mul i32 %2, %1, !dbg !9269
  %9 = or i32 %7, %8, !dbg !9269
  store volatile i32 %9, i32* %4, align 4, !dbg !9269
  ret void, !dbg !9270
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9271 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9273, metadata !DIExpression()), !dbg !9276
  call void @llvm.dbg.value(metadata i32 %1, metadata !9274, metadata !DIExpression()), !dbg !9276
  call void @llvm.dbg.value(metadata i32 %2, metadata !9275, metadata !DIExpression()), !dbg !9276
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9277
  %5 = load volatile i32, i32* %4, align 4, !dbg !9277
  call void @llvm.dbg.value(metadata i32 %1, metadata !9075, metadata !DIExpression()) #25, !dbg !9278
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9280, !srcloc !9082
  call void @llvm.dbg.value(metadata i32 %6, metadata !9078, metadata !DIExpression()) #25, !dbg !9278
  call void @llvm.dbg.value(metadata i32 %6, metadata !9083, metadata !DIExpression()) #25, !dbg !9281
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9283, !range !4160
  %8 = shl nuw nsw i32 %7, 1, !dbg !9277
  %9 = shl i32 3, %8, !dbg !9277
  %10 = xor i32 %9, -1, !dbg !9277
  %11 = and i32 %5, %10, !dbg !9277
  call void @llvm.dbg.value(metadata i32 %1, metadata !9075, metadata !DIExpression()) #25, !dbg !9284
  call void @llvm.dbg.value(metadata i32 %6, metadata !9078, metadata !DIExpression()) #25, !dbg !9284
  call void @llvm.dbg.value(metadata i32 %6, metadata !9083, metadata !DIExpression()) #25, !dbg !9286
  %12 = shl i32 %2, %8, !dbg !9277
  %13 = or i32 %11, %12, !dbg !9277
  store volatile i32 %13, i32* %4, align 4, !dbg !9277
  ret void, !dbg !9288
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9289 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9291, metadata !DIExpression()), !dbg !9294
  call void @llvm.dbg.value(metadata i32 %1, metadata !9292, metadata !DIExpression()), !dbg !9294
  call void @llvm.dbg.value(metadata i32 %2, metadata !9293, metadata !DIExpression()), !dbg !9294
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9295
  %5 = load volatile i32, i32* %4, align 4, !dbg !9295
  call void @llvm.dbg.value(metadata i32 %1, metadata !9075, metadata !DIExpression()) #25, !dbg !9296
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9298, !srcloc !9082
  call void @llvm.dbg.value(metadata i32 %6, metadata !9078, metadata !DIExpression()) #25, !dbg !9296
  call void @llvm.dbg.value(metadata i32 %6, metadata !9083, metadata !DIExpression()) #25, !dbg !9299
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9301, !range !4160
  %8 = shl nuw nsw i32 %7, 1, !dbg !9295
  %9 = shl i32 3, %8, !dbg !9295
  %10 = xor i32 %9, -1, !dbg !9295
  %11 = and i32 %5, %10, !dbg !9295
  call void @llvm.dbg.value(metadata i32 %1, metadata !9075, metadata !DIExpression()) #25, !dbg !9302
  call void @llvm.dbg.value(metadata i32 %6, metadata !9078, metadata !DIExpression()) #25, !dbg !9302
  call void @llvm.dbg.value(metadata i32 %6, metadata !9083, metadata !DIExpression()) #25, !dbg !9304
  %12 = shl i32 %2, %8, !dbg !9295
  %13 = or i32 %11, %12, !dbg !9295
  store volatile i32 %13, i32* %4, align 4, !dbg !9295
  ret void, !dbg !9306
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9307 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9309, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %1, metadata !9310, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %2, metadata !9311, metadata !DIExpression()), !dbg !9312
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9313
  %5 = load volatile i32, i32* %4, align 4, !dbg !9313
  call void @llvm.dbg.value(metadata i32 %1, metadata !9075, metadata !DIExpression()) #25, !dbg !9314
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9316, !srcloc !9082
  call void @llvm.dbg.value(metadata i32 %6, metadata !9078, metadata !DIExpression()) #25, !dbg !9314
  call void @llvm.dbg.value(metadata i32 %6, metadata !9083, metadata !DIExpression()) #25, !dbg !9317
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9319, !range !4160
  %8 = shl nuw nsw i32 %7, 2, !dbg !9313
  %9 = shl i32 15, %8, !dbg !9313
  %10 = xor i32 %9, -1, !dbg !9313
  %11 = and i32 %5, %10, !dbg !9313
  call void @llvm.dbg.value(metadata i32 %1, metadata !9075, metadata !DIExpression()) #25, !dbg !9320
  call void @llvm.dbg.value(metadata i32 %6, metadata !9078, metadata !DIExpression()) #25, !dbg !9320
  call void @llvm.dbg.value(metadata i32 %6, metadata !9083, metadata !DIExpression()) #25, !dbg !9322
  %12 = shl i32 %2, %8, !dbg !9313
  %13 = or i32 %11, %12, !dbg !9313
  store volatile i32 %13, i32* %4, align 4, !dbg !9313
  ret void, !dbg !9324
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9325 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9327, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.value(metadata i32 %1, metadata !9328, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.value(metadata i32 %2, metadata !9329, metadata !DIExpression()), !dbg !9330
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9331
  %5 = load volatile i32, i32* %4, align 4, !dbg !9331
  %6 = lshr i32 %1, 8, !dbg !9331
  call void @llvm.dbg.value(metadata i32 %6, metadata !9075, metadata !DIExpression()) #25, !dbg !9332
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9334, !srcloc !9082
  call void @llvm.dbg.value(metadata i32 %7, metadata !9078, metadata !DIExpression()) #25, !dbg !9332
  call void @llvm.dbg.value(metadata i32 %7, metadata !9083, metadata !DIExpression()) #25, !dbg !9335
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9337, !range !4160
  %9 = shl nuw nsw i32 %8, 2, !dbg !9331
  %10 = shl i32 15, %9, !dbg !9331
  %11 = xor i32 %10, -1, !dbg !9331
  %12 = and i32 %5, %11, !dbg !9331
  call void @llvm.dbg.value(metadata i32 %6, metadata !9075, metadata !DIExpression()) #25, !dbg !9338
  call void @llvm.dbg.value(metadata i32 %7, metadata !9078, metadata !DIExpression()) #25, !dbg !9338
  call void @llvm.dbg.value(metadata i32 %7, metadata !9083, metadata !DIExpression()) #25, !dbg !9340
  %13 = shl i32 %2, %9, !dbg !9331
  %14 = or i32 %12, %13, !dbg !9331
  store volatile i32 %14, i32* %4, align 4, !dbg !9331
  ret void, !dbg !9342
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9343 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9345, metadata !DIExpression()), !dbg !9348
  call void @llvm.dbg.value(metadata i32 %1, metadata !9346, metadata !DIExpression()), !dbg !9348
  call void @llvm.dbg.value(metadata i32 %2, metadata !9347, metadata !DIExpression()), !dbg !9348
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9349
  %5 = load volatile i32, i32* %4, align 4, !dbg !9349
  call void @llvm.dbg.value(metadata i32 %1, metadata !9075, metadata !DIExpression()) #25, !dbg !9350
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9352, !srcloc !9082
  call void @llvm.dbg.value(metadata i32 %6, metadata !9078, metadata !DIExpression()) #25, !dbg !9350
  call void @llvm.dbg.value(metadata i32 %6, metadata !9083, metadata !DIExpression()) #25, !dbg !9353
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9355, !range !4160
  %8 = shl nuw nsw i32 %7, 1, !dbg !9349
  %9 = shl i32 3, %8, !dbg !9349
  %10 = xor i32 %9, -1, !dbg !9349
  %11 = and i32 %5, %10, !dbg !9349
  call void @llvm.dbg.value(metadata i32 %1, metadata !9075, metadata !DIExpression()) #25, !dbg !9356
  call void @llvm.dbg.value(metadata i32 %6, metadata !9078, metadata !DIExpression()) #25, !dbg !9356
  call void @llvm.dbg.value(metadata i32 %6, metadata !9083, metadata !DIExpression()) #25, !dbg !9358
  %12 = shl i32 %2, %8, !dbg !9349
  %13 = or i32 %11, %12, !dbg !9349
  store volatile i32 %13, i32* %4, align 4, !dbg !9349
  ret void, !dbg !9360
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9361 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9363, metadata !DIExpression()), !dbg !9366
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9367
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9367
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9367
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9364, metadata !DIExpression()), !dbg !9366
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9368
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9369
  %6 = tail call fastcc zeroext i1 @device_is_ready.111() #26, !dbg !9370
  br i1 %6, label %7, label %11, !dbg !9372

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !9373
  call void @llvm.dbg.value(metadata i32 %8, metadata !9365, metadata !DIExpression()), !dbg !9366
  %9 = icmp slt i32 %8, 0, !dbg !9374
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9376
  br label %11, !dbg !9376

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9366
  ret i32 %12, !dbg !9377
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.111() unnamed_addr #1 !dbg !9378 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9382, metadata !DIExpression()), !dbg !9383
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9384, !srcloc !9386
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.112() #26, !dbg !9387
  ret i1 %1, !dbg !9388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9389 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9393, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.value(metadata i8 1, metadata !9394, metadata !DIExpression()), !dbg !9398
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9399
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9399
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9399
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9395, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.value(metadata i32 0, metadata !9396, metadata !DIExpression()), !dbg !9398
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9397, metadata !DIExpression()), !dbg !9398
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9400
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9403
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !9404
  call void @llvm.dbg.value(metadata i32 %7, metadata !9396, metadata !DIExpression()), !dbg !9398
  ret i32 %7, !dbg !9405
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.112() unnamed_addr #1 !dbg !9406 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9408, metadata !DIExpression()), !dbg !9409
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #27, !dbg !9410
  ret i1 %1, !dbg !9411
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9412 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9416, metadata !DIExpression()), !dbg !9424
  call void @llvm.dbg.value(metadata i32 %1, metadata !9417, metadata !DIExpression()), !dbg !9424
  call void @llvm.dbg.value(metadata i32 %2, metadata !9418, metadata !DIExpression()), !dbg !9424
  call void @llvm.dbg.value(metadata i32 %3, metadata !9419, metadata !DIExpression()), !dbg !9424
  call void @llvm.dbg.value(metadata i32 0, metadata !9420, metadata !DIExpression()), !dbg !9424
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !9425
  %5 = icmp eq i32 %3, 17, !dbg !9426
  br i1 %5, label %6, label %14, !dbg !9427

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9428
  call void @llvm.dbg.value(metadata i32 %7, metadata !9421, metadata !DIExpression()), !dbg !9429
  %8 = icmp eq i32 %7, 0, !dbg !9430
  %9 = shl nuw i32 1, %1, !dbg !9432
  br i1 %8, label %12, label %10, !dbg !9433

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9434
  br label %14, !dbg !9436

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9437
  br label %14, !dbg !9440

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9441
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9442 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9444, metadata !DIExpression()), !dbg !9448
  call void @llvm.dbg.value(metadata i8* %1, metadata !9445, metadata !DIExpression()), !dbg !9448
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9449
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9449
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9449
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9446, metadata !DIExpression()), !dbg !9448
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9450
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9450
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !9452
  %9 = icmp eq i32 %8, 0, !dbg !9452
  br i1 %9, label %12, label %10, !dbg !9453

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9454
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !9456
  br label %12, !dbg !9457

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9458
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9460
  %15 = icmp eq i32 %14, 0, !dbg !9460
  br i1 %15, label %19, label %16, !dbg !9461

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9462
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !9463
  store i8 %18, i8* %1, align 1, !dbg !9464
  br label %19, !dbg !9465

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9448
  ret i32 %20, !dbg !9466
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9467 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9469, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata i8 %1, metadata !9470, metadata !DIExpression()), !dbg !9473
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9474
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9474
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9474
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9471, metadata !DIExpression()), !dbg !9473
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9475

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9476
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9479
  %10 = icmp eq i32 %9, 0, !dbg !9479
  br i1 %10, label %18, label %11, !dbg !9480

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9481, !srcloc !9488
  call void @llvm.dbg.value(metadata i32 undef, metadata !9484, metadata !DIExpression()) #25, !dbg !9489
  call void @llvm.dbg.value(metadata i32 undef, metadata !9485, metadata !DIExpression()) #25, !dbg !9489
  call void @llvm.dbg.value(metadata i32 undef, metadata !9472, metadata !DIExpression()), !dbg !9473
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9490
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9492
  %15 = icmp eq i32 %14, 0, !dbg !9492
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9481
  br i1 %15, label %17, label %19, !dbg !9493

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9484, metadata !DIExpression()) #25, !dbg !9489
  call void @llvm.dbg.value(metadata i32 %16, metadata !9472, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.value(metadata i32 undef, metadata !9494, metadata !DIExpression()) #25, !dbg !9497
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !9499, !srcloc !9500
  br label %18, !dbg !9501

18:                                               ; preds = %17, %7
  br label %7, !dbg !9476, !llvm.loop !9502

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9481
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9504
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !9505
  call void @llvm.dbg.value(metadata i32 %20, metadata !9494, metadata !DIExpression()) #25, !dbg !9506
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !9508, !srcloc !9500
  ret void, !dbg !9509
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9510 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9512, metadata !DIExpression()), !dbg !9515
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9516
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9516
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9516
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9513, metadata !DIExpression()), !dbg !9515
  call void @llvm.dbg.value(metadata i32 0, metadata !9514, metadata !DIExpression()), !dbg !9515
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9517
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9517
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9519
  %8 = icmp ne i32 %7, 0, !dbg !9519
  %9 = zext i1 %8 to i32, !dbg !9520
  call void @llvm.dbg.value(metadata i32 %9, metadata !9514, metadata !DIExpression()), !dbg !9515
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9521
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9523
  %12 = icmp eq i32 %11, 0, !dbg !9523
  %13 = or i32 %9, 2, !dbg !9524
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9524
  call void @llvm.dbg.value(metadata i32 %14, metadata !9514, metadata !DIExpression()), !dbg !9515
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9525
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !9527
  %17 = icmp eq i32 %16, 0, !dbg !9527
  %18 = or i32 %14, 4, !dbg !9528
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9528
  call void @llvm.dbg.value(metadata i32 %19, metadata !9514, metadata !DIExpression()), !dbg !9515
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9529
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !9531
  %22 = icmp eq i32 %21, 0, !dbg !9531
  %23 = or i32 %19, 8, !dbg !9532
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9532
  call void @llvm.dbg.value(metadata i32 %24, metadata !9514, metadata !DIExpression()), !dbg !9515
  %25 = and i32 %24, 8, !dbg !9533
  %26 = icmp eq i32 %25, 0, !dbg !9533
  br i1 %26, label %29, label %27, !dbg !9535

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9536
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !9538
  br label %29, !dbg !9539

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9540
  %31 = icmp eq i32 %30, 0, !dbg !9540
  br i1 %31, label %34, label %32, !dbg !9542

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9543
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !9545
  br label %34, !dbg !9546

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9547
  %36 = icmp eq i32 %35, 0, !dbg !9547
  br i1 %36, label %39, label %37, !dbg !9549

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9550
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !9552
  br label %39, !dbg !9553

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9554
  %41 = icmp eq i32 %40, 0, !dbg !9554
  br i1 %41, label %44, label %42, !dbg !9556

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9557
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !9559
  br label %44, !dbg !9560

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9561
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !9562
  ret i32 %24, !dbg !9563
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9564 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9566, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9567, metadata !DIExpression()), !dbg !9575
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9576
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9576
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9576
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9568, metadata !DIExpression()), !dbg !9575
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9577
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9577
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9577
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9569, metadata !DIExpression()), !dbg !9575
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9578
  %10 = load i8, i8* %9, align 4, !dbg !9578
  %11 = zext i8 %10 to i32, !dbg !9579
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !9580
  call void @llvm.dbg.value(metadata i32 %12, metadata !9571, metadata !DIExpression()), !dbg !9575
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9581
  %14 = load i8, i8* %13, align 1, !dbg !9581
  %15 = zext i8 %14 to i32, !dbg !9582
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !9583
  call void @llvm.dbg.value(metadata i32 %16, metadata !9572, metadata !DIExpression()), !dbg !9575
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9584
  %18 = load i8, i8* %17, align 2, !dbg !9584
  %19 = zext i8 %18 to i32, !dbg !9585
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !9586
  call void @llvm.dbg.value(metadata i32 %20, metadata !9573, metadata !DIExpression()), !dbg !9575
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9587
  %22 = load i8, i8* %21, align 1, !dbg !9587
  %23 = zext i8 %22 to i32, !dbg !9588
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !9589
  call void @llvm.dbg.value(metadata i32 %24, metadata !9574, metadata !DIExpression()), !dbg !9575
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9590

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9592
  br i1 %26, label %69, label %27, !dbg !9594

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9595

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9596
  br i1 %29, label %65, label %30, !dbg !9596

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9598
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9575
  br i1 %31, label %38, label %34, !dbg !9600

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9601
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !9601

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9604
  br i1 %37, label %38, label %69, !dbg !9605

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9606
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !9607
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !9608
  %41 = icmp eq i32 %12, %40, !dbg !9610
  br i1 %41, label %43, label %42, !dbg !9611

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !9612
  br label %43, !dbg !9614

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !9615
  %45 = icmp eq i32 %16, %44, !dbg !9617
  br i1 %45, label %47, label %46, !dbg !9618

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !9619
  br label %47, !dbg !9621

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !9622
  %49 = icmp eq i32 %20, %48, !dbg !9624
  br i1 %49, label %51, label %50, !dbg !9625

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !9626
  br label %51, !dbg !9628

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !9629
  %53 = icmp eq i32 %24, %52, !dbg !9631
  br i1 %53, label %55, label %54, !dbg !9632

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !9633
  br label %55, !dbg !9635

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9636
  %57 = load i32, i32* %56, align 4, !dbg !9636
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9638
  %59 = load i32, i32* %58, align 4, !dbg !9638
  %60 = icmp eq i32 %57, %59, !dbg !9639
  br i1 %60, label %63, label %61, !dbg !9640

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !9641
  %62 = load i32, i32* %56, align 4, !dbg !9643
  store i32 %62, i32* %58, align 4, !dbg !9644
  br label %63, !dbg !9645

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9646
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !9647
  br label %69, !dbg !9648

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9596
  %67 = and i8 %66, 1, !dbg !9596
  %68 = icmp eq i8 %67, 0, !dbg !9596
  br i1 %68, label %30, label %69, !dbg !9596

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9575
  ret i32 %70, !dbg !9649
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9650 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9652, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9653, metadata !DIExpression()), !dbg !9655
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9656
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9656
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9656
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9654, metadata !DIExpression()), !dbg !9655
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9657
  %7 = load i32, i32* %6, align 4, !dbg !9657
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9658
  store i32 %7, i32* %8, align 4, !dbg !9659
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9660, !range !9661
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !9662
  %11 = trunc i32 %10 to i8, !dbg !9662
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9663
  store i8 %11, i8* %12, align 4, !dbg !9664
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !9665, !range !9666
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !9667
  %15 = trunc i32 %14 to i8, !dbg !9667
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9668
  store i8 %15, i8* %16, align 1, !dbg !9669
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !9670
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9671, !range !9661
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !9672
  %20 = trunc i32 %19 to i8, !dbg !9672
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9673
  store i8 %20, i8* %21, align 2, !dbg !9674
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !9675, !range !9676
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !9677
  %24 = trunc i32 %23 to i8, !dbg !9677
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9678
  store i8 %24, i8* %25, align 1, !dbg !9679
  ret i32 0, !dbg !9680
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9681 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9685, metadata !DIExpression()), !dbg !9687
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9688
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9688
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9688
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9686, metadata !DIExpression()), !dbg !9687
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9689
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9689
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !9690
  ret i32 %7, !dbg !9691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !9692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9696, metadata !DIExpression()), !dbg !9697
  %2 = icmp eq i32 %0, 1024, !dbg !9698
  %3 = select i1 %2, i32 2, i32 0, !dbg !9698
  %4 = icmp eq i32 %0, 1536, !dbg !9698
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9698
  ret i32 %5, !dbg !9699
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9700 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9702, metadata !DIExpression()), !dbg !9704
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9705
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9705
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9705
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9703, metadata !DIExpression()), !dbg !9704
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9706
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9706
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !9707
  ret i32 %7, !dbg !9708
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #10 !dbg !9709 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9713, metadata !DIExpression()), !dbg !9714
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9715
  %3 = icmp ult i32 %2, 4, !dbg !9715
  br i1 %3, label %4, label %7, !dbg !9715

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9715
  %6 = load i32, i32* %5, align 4, !dbg !9715
  br label %7, !dbg !9715

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9716
  ret i32 %8, !dbg !9718
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9719 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9721, metadata !DIExpression()), !dbg !9723
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9724
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9724
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9724
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9722, metadata !DIExpression()), !dbg !9723
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9725
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9725
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !9726
  ret i32 %7, !dbg !9727
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9728 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9732, metadata !DIExpression()), !dbg !9734
  call void @llvm.dbg.value(metadata i32 %1, metadata !9733, metadata !DIExpression()), !dbg !9734
  %3 = icmp eq i32 %0, 4096, !dbg !9735
  %4 = icmp eq i32 %1, 0, !dbg !9735
  %5 = select i1 %4, i32 4, i32 3, !dbg !9735
  %6 = select i1 %4, i32 3, i32 2, !dbg !9735
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9735
  ret i32 %7, !dbg !9736
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9737 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9739, metadata !DIExpression()), !dbg !9741
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9742
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9742
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9742
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9740, metadata !DIExpression()), !dbg !9741
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9743
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9743
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !9744
  ret i32 %7, !dbg !9745
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !9746 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9750, metadata !DIExpression()), !dbg !9751
  %2 = icmp eq i32 %0, 768, !dbg !9752
  %3 = zext i1 %2 to i32, !dbg !9751
  ret i32 %3, !dbg !9754
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9755 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9760, metadata !DIExpression()), !dbg !9761
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9762
  %3 = load volatile i32, i32* %2, align 4, !dbg !9762
  %4 = and i32 %3, 768, !dbg !9762
  ret i32 %4, !dbg !9763
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9764 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9766, metadata !DIExpression()), !dbg !9767
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9768
  %3 = load volatile i32, i32* %2, align 4, !dbg !9768
  %4 = and i32 %3, 4096, !dbg !9768
  ret i32 %4, !dbg !9769
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9770 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9772, metadata !DIExpression()), !dbg !9773
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9774
  %3 = load volatile i32, i32* %2, align 4, !dbg !9774
  %4 = and i32 %3, 12288, !dbg !9774
  ret i32 %4, !dbg !9775
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9776 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9778, metadata !DIExpression()), !dbg !9779
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9780
  %3 = load volatile i32, i32* %2, align 4, !dbg !9780
  %4 = and i32 %3, 1536, !dbg !9780
  ret i32 %4, !dbg !9781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !9782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9786, metadata !DIExpression()), !dbg !9787
  %2 = icmp eq i32 %0, 2, !dbg !9788
  %3 = select i1 %2, i32 1024, i32 0, !dbg !9788
  %4 = icmp eq i32 %0, 1, !dbg !9788
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !9788
  ret i32 %5, !dbg !9789
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !9790 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9794, metadata !DIExpression()), !dbg !9795
  %2 = icmp ult i32 %0, 3, !dbg !9796
  br i1 %2, label %3, label %6, !dbg !9796

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !9796
  %5 = load i32, i32* %4, align 4, !dbg !9796
  br label %6, !dbg !9796

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !9797
  ret i32 %7, !dbg !9799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9800 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9804, metadata !DIExpression()), !dbg !9806
  call void @llvm.dbg.value(metadata i32 %1, metadata !9805, metadata !DIExpression()), !dbg !9806
  %3 = icmp eq i32 %0, 4, !dbg !9807
  %4 = icmp eq i32 %1, 0, !dbg !9807
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9807
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9807
  ret i32 %6, !dbg !9808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !9809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9813, metadata !DIExpression()), !dbg !9814
  %2 = icmp eq i32 %0, 1, !dbg !9815
  %3 = select i1 %2, i32 768, i32 0, !dbg !9814
  ret i32 %3, !dbg !9817
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9818 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9822, metadata !DIExpression()), !dbg !9823
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9824
  %3 = load volatile i32, i32* %2, align 4, !dbg !9824
  %4 = and i32 %3, -8193, !dbg !9824
  store volatile i32 %4, i32* %2, align 4, !dbg !9824
  ret void, !dbg !9825
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9826 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9830, metadata !DIExpression()), !dbg !9833
  call void @llvm.dbg.value(metadata i32 %1, metadata !9831, metadata !DIExpression()), !dbg !9833
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9834
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9834
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9834
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9832, metadata !DIExpression()), !dbg !9833
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9835
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9835
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9836
  ret void, !dbg !9837
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9838 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9840, metadata !DIExpression()), !dbg !9843
  call void @llvm.dbg.value(metadata i32 %1, metadata !9841, metadata !DIExpression()), !dbg !9843
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9844
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9844
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9844
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9842, metadata !DIExpression()), !dbg !9843
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9845
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9845
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9846
  ret void, !dbg !9847
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9848 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9850, metadata !DIExpression()), !dbg !9853
  call void @llvm.dbg.value(metadata i32 %1, metadata !9851, metadata !DIExpression()), !dbg !9853
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9854
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9854
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9854
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9852, metadata !DIExpression()), !dbg !9853
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9855
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9855
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9856
  ret void, !dbg !9857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9858 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9860, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.value(metadata i32 %1, metadata !9861, metadata !DIExpression()), !dbg !9863
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9864
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9864
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9864
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9862, metadata !DIExpression()), !dbg !9863
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9865
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9865
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9866
  ret void, !dbg !9867
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9868 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9870, metadata !DIExpression()), !dbg !9875
  call void @llvm.dbg.value(metadata i32 %1, metadata !9871, metadata !DIExpression()), !dbg !9875
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9876
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9876
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9876
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9872, metadata !DIExpression()), !dbg !9875
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9877
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !9877
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !9877
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !9873, metadata !DIExpression()), !dbg !9875
  %10 = bitcast i32* %3 to i8*, !dbg !9878
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !9878
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !9879
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !9879
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !9883
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9883
  %15 = load i8*, i8** %14, align 4, !dbg !9883
  call void @llvm.dbg.value(metadata i32* %3, metadata !9874, metadata !DIExpression(DW_OP_deref)), !dbg !9875
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !9884
  %17 = icmp slt i32 %16, 0, !dbg !9885
  br i1 %17, label %28, label %18, !dbg !9886

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9887
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9887
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !9888
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9889
  %22 = load i32, i32* %3, align 4, !dbg !9890
  call void @llvm.dbg.value(metadata i32 %22, metadata !9874, metadata !DIExpression()), !dbg !9875
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !9891
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9892
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 2, !dbg !9892
  %25 = load volatile i32, i32* %24, align 4, !dbg !9892
  %26 = icmp ugt i32 %25, 16, !dbg !9892
  br i1 %26, label %28, label %27, !dbg !9895

27:                                               ; preds = %18
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.117, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.118, i32 0, i32 0), i32 noundef 190) #27, !dbg !9896
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.119, i32 0, i32 0)) #27, !dbg !9896
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.118, i32 0, i32 0), i32 noundef 190) #27, !dbg !9896
  unreachable, !dbg !9896

28:                                               ; preds = %18, %2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !9898
  ret void, !dbg !9898
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9899 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9901, metadata !DIExpression()), !dbg !9902
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9903
  %3 = load volatile i32, i32* %2, align 4, !dbg !9903
  %4 = or i32 %3, 8192, !dbg !9903
  store volatile i32 %4, i32* %2, align 4, !dbg !9903
  ret void, !dbg !9904
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !9905 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9907, metadata !DIExpression()), !dbg !9911
  call void @llvm.dbg.value(metadata i8* %1, metadata !9908, metadata !DIExpression()), !dbg !9911
  call void @llvm.dbg.value(metadata i32* %2, metadata !9909, metadata !DIExpression()), !dbg !9911
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9912
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !9912
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !9912
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !9910, metadata !DIExpression()), !dbg !9911
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !9913
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !9913
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !9915
  br i1 %9, label %12, label %10, !dbg !9916

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !9917
  br label %12, !dbg !9918

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !9911
  ret i32 %13, !dbg !9919
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9920 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9924, metadata !DIExpression()), !dbg !9926
  call void @llvm.dbg.value(metadata i32 0, metadata !9925, metadata !DIExpression()), !dbg !9926
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9927
  %3 = load volatile i32, i32* %2, align 4, !dbg !9927
  %4 = and i32 %3, -32769, !dbg !9927
  store volatile i32 %4, i32* %2, align 4, !dbg !9927
  ret void, !dbg !9928
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9929 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9933, metadata !DIExpression()), !dbg !9937
  call void @llvm.dbg.value(metadata i32 %1, metadata !9934, metadata !DIExpression()), !dbg !9937
  call void @llvm.dbg.value(metadata i32 0, metadata !9935, metadata !DIExpression()), !dbg !9937
  call void @llvm.dbg.value(metadata i32 %2, metadata !9936, metadata !DIExpression()), !dbg !9937
  %4 = zext i32 %1 to i64, !dbg !9938
  %5 = mul nuw nsw i64 %4, 25, !dbg !9938
  %6 = zext i32 %2 to i64, !dbg !9938
  %7 = shl nuw nsw i64 %6, 2, !dbg !9938
  %8 = udiv i64 %5, %7, !dbg !9938
  %9 = trunc i64 %8 to i32, !dbg !9938
  %10 = udiv i32 %9, 100, !dbg !9938
  %11 = shl nuw nsw i32 %10, 4, !dbg !9938
  %12 = mul i32 %10, -100, !dbg !9938
  %13 = add i32 %12, %9, !dbg !9938
  %14 = shl i32 %13, 4, !dbg !9938
  %15 = add i32 %14, 50, !dbg !9938
  %16 = udiv i32 %15, 100, !dbg !9938
  %17 = and i32 %16, 240, !dbg !9938
  %18 = add nuw nsw i32 %17, %11, !dbg !9938
  %19 = and i32 %16, 15, !dbg !9938
  %20 = and i32 %18, 65520, !dbg !9941
  %21 = or i32 %20, %19, !dbg !9941
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !9942
  store volatile i32 %21, i32* %22, align 4, !dbg !9943
  ret void, !dbg !9944
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9945 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9947, metadata !DIExpression()), !dbg !9949
  call void @llvm.dbg.value(metadata i32 %1, metadata !9948, metadata !DIExpression()), !dbg !9949
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9950
  %4 = load volatile i32, i32* %3, align 4, !dbg !9950
  %5 = and i32 %4, -769, !dbg !9950
  %6 = or i32 %5, %1, !dbg !9950
  store volatile i32 %6, i32* %3, align 4, !dbg !9950
  ret void, !dbg !9951
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9952 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9954, metadata !DIExpression()), !dbg !9956
  call void @llvm.dbg.value(metadata i32 %1, metadata !9955, metadata !DIExpression()), !dbg !9956
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9957
  %4 = load volatile i32, i32* %3, align 4, !dbg !9957
  %5 = and i32 %4, -4097, !dbg !9957
  %6 = or i32 %5, %1, !dbg !9957
  store volatile i32 %6, i32* %3, align 4, !dbg !9957
  ret void, !dbg !9958
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9959 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9961, metadata !DIExpression()), !dbg !9963
  call void @llvm.dbg.value(metadata i32 %1, metadata !9962, metadata !DIExpression()), !dbg !9963
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9964
  %4 = load volatile i32, i32* %3, align 4, !dbg !9964
  %5 = and i32 %4, -12289, !dbg !9964
  %6 = or i32 %5, %1, !dbg !9964
  store volatile i32 %6, i32* %3, align 4, !dbg !9964
  ret void, !dbg !9965
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9966 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9968, metadata !DIExpression()), !dbg !9970
  call void @llvm.dbg.value(metadata i32 %1, metadata !9969, metadata !DIExpression()), !dbg !9970
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9971
  %4 = load volatile i32, i32* %3, align 4, !dbg !9971
  %5 = and i32 %4, -1537, !dbg !9971
  %6 = or i32 %5, %1, !dbg !9971
  store volatile i32 %6, i32* %3, align 4, !dbg !9971
  ret void, !dbg !9972
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9973 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9975, metadata !DIExpression()), !dbg !9976
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9977
  %3 = load volatile i32, i32* %2, align 4, !dbg !9977
  %4 = lshr i32 %3, 3, !dbg !9978
  %5 = and i32 %4, 1, !dbg !9978
  ret i32 %5, !dbg !9979
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9980 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9982, metadata !DIExpression()), !dbg !9983
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9984
  %3 = load volatile i32, i32* %2, align 4, !dbg !9984
  %4 = and i32 %3, 1, !dbg !9984
  ret i32 %4, !dbg !9985
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9986 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9988, metadata !DIExpression()), !dbg !9989
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9990
  %3 = load volatile i32, i32* %2, align 4, !dbg !9990
  %4 = lshr i32 %3, 1, !dbg !9991
  %5 = and i32 %4, 1, !dbg !9991
  ret i32 %5, !dbg !9992
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9993 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9995, metadata !DIExpression()), !dbg !9996
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9997
  %3 = load volatile i32, i32* %2, align 4, !dbg !9997
  %4 = lshr i32 %3, 8, !dbg !9998
  %5 = and i32 %4, 1, !dbg !9998
  ret i32 %5, !dbg !9999
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10000 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10002, metadata !DIExpression()), !dbg !10003
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10004
  store volatile i32 -257, i32* %2, align 4, !dbg !10004
  ret void, !dbg !10005
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10006 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10008, metadata !DIExpression()), !dbg !10010
  %3 = bitcast i32* %2 to i8*, !dbg !10011
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10011
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10009, metadata !DIExpression()), !dbg !10012
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10013
  %5 = load volatile i32, i32* %4, align 4, !dbg !10013
  store volatile i32 %5, i32* %2, align 4, !dbg !10014
  %6 = load volatile i32, i32* %2, align 4, !dbg !10015
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10016
  %8 = load volatile i32, i32* %7, align 4, !dbg !10016
  store volatile i32 %8, i32* %2, align 4, !dbg !10017
  %9 = load volatile i32, i32* %2, align 4, !dbg !10018
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10019
  ret void, !dbg !10019
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10020 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10022, metadata !DIExpression()), !dbg !10024
  %3 = bitcast i32* %2 to i8*, !dbg !10025
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10025
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10023, metadata !DIExpression()), !dbg !10026
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10027
  %5 = load volatile i32, i32* %4, align 4, !dbg !10027
  store volatile i32 %5, i32* %2, align 4, !dbg !10028
  %6 = load volatile i32, i32* %2, align 4, !dbg !10029
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10030
  %8 = load volatile i32, i32* %7, align 4, !dbg !10030
  store volatile i32 %8, i32* %2, align 4, !dbg !10031
  %9 = load volatile i32, i32* %2, align 4, !dbg !10032
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10033
  ret void, !dbg !10033
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10034 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10036, metadata !DIExpression()), !dbg !10038
  %3 = bitcast i32* %2 to i8*, !dbg !10039
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10039
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10037, metadata !DIExpression()), !dbg !10040
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10041
  %5 = load volatile i32, i32* %4, align 4, !dbg !10041
  store volatile i32 %5, i32* %2, align 4, !dbg !10042
  %6 = load volatile i32, i32* %2, align 4, !dbg !10043
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10044
  %8 = load volatile i32, i32* %7, align 4, !dbg !10044
  store volatile i32 %8, i32* %2, align 4, !dbg !10045
  %9 = load volatile i32, i32* %2, align 4, !dbg !10046
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10047
  ret void, !dbg !10047
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10048 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10050, metadata !DIExpression()), !dbg !10052
  %3 = bitcast i32* %2 to i8*, !dbg !10053
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10053
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10051, metadata !DIExpression()), !dbg !10054
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10055
  %5 = load volatile i32, i32* %4, align 4, !dbg !10055
  store volatile i32 %5, i32* %2, align 4, !dbg !10056
  %6 = load volatile i32, i32* %2, align 4, !dbg !10057
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10058
  %8 = load volatile i32, i32* %7, align 4, !dbg !10058
  store volatile i32 %8, i32* %2, align 4, !dbg !10059
  %9 = load volatile i32, i32* %2, align 4, !dbg !10060
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10061
  ret void, !dbg !10061
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10062 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10064, metadata !DIExpression()), !dbg !10065
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10066
  %3 = load volatile i32, i32* %2, align 4, !dbg !10066
  %4 = lshr i32 %3, 7, !dbg !10067
  %5 = and i32 %4, 1, !dbg !10067
  ret i32 %5, !dbg !10068
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10069 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10073, metadata !DIExpression()), !dbg !10075
  call void @llvm.dbg.value(metadata i8 %1, metadata !10074, metadata !DIExpression()), !dbg !10075
  %3 = zext i8 %1 to i32, !dbg !10076
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10077
  store volatile i32 %3, i32* %4, align 4, !dbg !10078
  ret void, !dbg !10079
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10080 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10082, metadata !DIExpression()), !dbg !10083
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10084
  %3 = load volatile i32, i32* %2, align 4, !dbg !10084
  %4 = lshr i32 %3, 5, !dbg !10085
  %5 = and i32 %4, 1, !dbg !10085
  ret i32 %5, !dbg !10086
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10087 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10091, metadata !DIExpression()), !dbg !10092
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10093
  %3 = load volatile i32, i32* %2, align 4, !dbg !10093
  %4 = trunc i32 %3 to i8, !dbg !10094
  ret i8 %4, !dbg !10095
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10096 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10098, metadata !DIExpression()), !dbg !10104
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10105
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10105
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10105
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10099, metadata !DIExpression()), !dbg !10104
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10106
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10106
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10106
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10100, metadata !DIExpression()), !dbg !10104
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !10107
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10108
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10108
  %10 = tail call fastcc zeroext i1 @device_is_ready.121(%struct.device* noundef %9) #26, !dbg !10110
  br i1 %10, label %11, label %49, !dbg !10111

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10112
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10113
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10113
  %15 = load i8*, i8** %14, align 4, !dbg !10113
  %16 = tail call fastcc i32 @clock_control_on.122(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !10114
  call void @llvm.dbg.value(metadata i32 %16, metadata !10103, metadata !DIExpression()), !dbg !10104
  %17 = icmp eq i32 %16, 0, !dbg !10115
  br i1 %17, label %18, label %49, !dbg !10117

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10118
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10118
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !10119
  call void @llvm.dbg.value(metadata i32 %21, metadata !10103, metadata !DIExpression()), !dbg !10104
  %22 = icmp slt i32 %21, 0, !dbg !10120
  br i1 %22, label %49, label %23, !dbg !10122

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10123
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10123
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !10124
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10125
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !10126
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10127
  %28 = load i32, i32* %27, align 4, !dbg !10127
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10129

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10101, metadata !DIExpression()), !dbg !10104
  call void @llvm.dbg.value(metadata i32 4096, metadata !10102, metadata !DIExpression()), !dbg !10104
  br label %31, !dbg !10130

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10101, metadata !DIExpression()), !dbg !10104
  call void @llvm.dbg.value(metadata i32 0, metadata !10102, metadata !DIExpression()), !dbg !10104
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10133
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10133
  call void @llvm.dbg.value(metadata i32 %33, metadata !10102, metadata !DIExpression()), !dbg !10104
  call void @llvm.dbg.value(metadata i32 %32, metadata !10101, metadata !DIExpression()), !dbg !10104
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10134
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !10135
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10136
  %36 = load i8, i8* %35, align 4, !dbg !10136, !range !6670
  %37 = icmp eq i8 %36, 0, !dbg !10136
  br i1 %37, label %39, label %38, !dbg !10138

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !10139
  br label %39, !dbg !10141

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10142
  %41 = load i32, i32* %40, align 4, !dbg !10142
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !10143
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10144
  %43 = load i8, i8* %42, align 4, !dbg !10144, !range !6670
  %44 = icmp eq i8 %43, 0, !dbg !10144
  br i1 %44, label %47, label %45, !dbg !10146

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10147
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !10149
  br label %47, !dbg !10150

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10151
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !10152
  br label %49, !dbg !10153

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10104
  ret i32 %50, !dbg !10154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10155 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10159, metadata !DIExpression()), !dbg !10163
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10164
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10164
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10164
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10160, metadata !DIExpression()), !dbg !10163
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10161, metadata !DIExpression()), !dbg !10163
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10165
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10166
  ret void, !dbg !10167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.121(%struct.device* noundef %0) unnamed_addr #1 !dbg !10168 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10172, metadata !DIExpression()), !dbg !10173
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10174, !srcloc !10176
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.123(%struct.device* noundef %0) #26, !dbg !10177
  ret i1 %2, !dbg !10178
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.122(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10179 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10181, metadata !DIExpression()), !dbg !10184
  call void @llvm.dbg.value(metadata i8* %1, metadata !10182, metadata !DIExpression()), !dbg !10184
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10185
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10185
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10185
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10183, metadata !DIExpression()), !dbg !10184
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10186
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10186
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !10187
  ret i32 %8, !dbg !10188
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10189 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10193, metadata !DIExpression()), !dbg !10197
  call void @llvm.dbg.value(metadata i8 0, metadata !10194, metadata !DIExpression()), !dbg !10197
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10198
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10198
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10196, metadata !DIExpression(DW_OP_deref)), !dbg !10197
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !10199
  call void @llvm.dbg.value(metadata i32 %4, metadata !10195, metadata !DIExpression()), !dbg !10197
  %5 = icmp slt i32 %4, 0, !dbg !10200
  br i1 %5, label %9, label %6, !dbg !10202

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10203
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10196, metadata !DIExpression()), !dbg !10197
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !10204
  br label %9, !dbg !10205

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10197
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10206
  ret i32 %10, !dbg !10206
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10207 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10209, metadata !DIExpression()), !dbg !10213
  call void @llvm.dbg.value(metadata i32 12, metadata !10210, metadata !DIExpression()), !dbg !10213
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10214

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10215, metadata !DIExpression()) #25, !dbg !10221
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10224, !srcloc !10225
  call void @llvm.dbg.value(metadata i32 %4, metadata !10220, metadata !DIExpression()) #25, !dbg !10221
  %5 = or i32 %4, 12, !dbg !10226
  call void @llvm.dbg.value(metadata i32 %5, metadata !10211, metadata !DIExpression()), !dbg !10227
  call void @llvm.dbg.value(metadata i32 %5, metadata !10228, metadata !DIExpression()) #25, !dbg !10235
  call void @llvm.dbg.value(metadata i32* %2, metadata !10233, metadata !DIExpression()) #25, !dbg !10235
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10237, !srcloc !10238
  call void @llvm.dbg.value(metadata i32 %6, metadata !10234, metadata !DIExpression()) #25, !dbg !10235
  %7 = icmp eq i32 %6, 0, !dbg !10214
  br i1 %7, label %8, label %3, !dbg !10226, !llvm.loop !10239

8:                                                ; preds = %3
  ret void, !dbg !10240
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10241 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10243, metadata !DIExpression()), !dbg !10247
  call void @llvm.dbg.value(metadata i32 %1, metadata !10244, metadata !DIExpression()), !dbg !10247
  call void @llvm.dbg.value(metadata i32 %2, metadata !10245, metadata !DIExpression()), !dbg !10247
  call void @llvm.dbg.value(metadata i32 0, metadata !10246, metadata !DIExpression()), !dbg !10247
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10248
  %5 = load volatile i32, i32* %4, align 4, !dbg !10248
  %6 = and i32 %5, -5633, !dbg !10248
  %7 = or i32 %2, %1, !dbg !10248
  %8 = or i32 %7, %6, !dbg !10248
  store volatile i32 %8, i32* %4, align 4, !dbg !10248
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10249
  %10 = load volatile i32, i32* %9, align 4, !dbg !10249
  %11 = and i32 %10, -12289, !dbg !10249
  store volatile i32 %11, i32* %9, align 4, !dbg !10249
  ret void, !dbg !10250
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10251 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10253, metadata !DIExpression()), !dbg !10254
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10255
  %3 = load volatile i32, i32* %2, align 4, !dbg !10255
  %4 = or i32 %3, 8, !dbg !10255
  store volatile i32 %4, i32* %2, align 4, !dbg !10255
  ret void, !dbg !10256
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10257 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10261, metadata !DIExpression()), !dbg !10264
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10262, metadata !DIExpression()), !dbg !10264
  call void @llvm.dbg.value(metadata i32 0, metadata !10263, metadata !DIExpression()), !dbg !10264
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10265
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10265
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10266
  %5 = load i8, i8* %4, align 4, !dbg !10266
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !10267
  ret i32 %6, !dbg !10268
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.123(%struct.device* noundef %0) unnamed_addr #1 !dbg !10269 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10271, metadata !DIExpression()), !dbg !10272
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10273
  ret i1 %2, !dbg !10274
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10275 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10277, metadata !DIExpression()), !dbg !10278
  tail call fastcc void @__NVIC_SetPriority.125() #26, !dbg !10279
  store i32 8399, i32* @last_load, align 4, !dbg !10280
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10281
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10282
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10283
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10284
  %3 = or i32 %2, 7, !dbg !10284
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10284
  ret i32 0, !dbg !10285
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.125() unnamed_addr #15 !dbg !10286 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10288, metadata !DIExpression()), !dbg !10290
  call void @llvm.dbg.value(metadata i32 1, metadata !10289, metadata !DIExpression()), !dbg !10290
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10291
  ret void, !dbg !10294
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10295 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10297, metadata !DIExpression()), !dbg !10299
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !10300
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10301
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10302
  %5 = add i32 %4, %3, !dbg !10302
  store i32 %5, i32* @cycle_count, align 4, !dbg !10302
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10303
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10304
  %7 = sub i32 %5, %6, !dbg !10307
  %8 = udiv i32 %7, 8400, !dbg !10308
  call void @llvm.dbg.value(metadata i32 %8, metadata !10298, metadata !DIExpression()), !dbg !10299
  %9 = mul nuw i32 %8, 8400, !dbg !10309
  %10 = add i32 %9, %6, !dbg !10310
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10310
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !10311
  tail call void @z_arm_int_exit() #27, !dbg !10312
  ret void, !dbg !10313
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10314 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10319
  call void @llvm.dbg.value(metadata i32 %1, metadata !10316, metadata !DIExpression()), !dbg !10320
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10321
  call void @llvm.dbg.value(metadata i32 %2, metadata !10317, metadata !DIExpression()), !dbg !10320
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10322
  call void @llvm.dbg.value(metadata i32 %3, metadata !10318, metadata !DIExpression()), !dbg !10320
  %4 = and i32 %2, 65536, !dbg !10323
  %5 = icmp ne i32 %4, 0, !dbg !10323
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10325
  %8 = load i32, i32* @last_load, align 4, !dbg !10320
  br i1 %7, label %9, label %13, !dbg !10325

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10326
  %11 = add i32 %10, %8, !dbg !10326
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10326
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10328
  br label %13, !dbg !10329

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10330
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10331
  %16 = add i32 %14, %15, !dbg !10332
  ret i32 %16, !dbg !10333
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10334 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10338, metadata !DIExpression()), !dbg !10351
  call void @llvm.dbg.value(metadata i1 %1, metadata !10339, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10351
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10352
  br i1 %4, label %5, label %8, !dbg !10352

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10354
  %7 = and i32 %6, -2, !dbg !10354
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10354
  store i32 -16777216, i32* @last_load, align 4, !dbg !10356
  br label %60, !dbg !10357

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10358
  call void @llvm.dbg.value(metadata i32 %9, metadata !10343, metadata !DIExpression()), !dbg !10351
  br i1 %3, label %18, label %10, !dbg !10359

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10359
  call void @llvm.dbg.value(metadata i32 undef, metadata !10338, metadata !DIExpression()), !dbg !10351
  %12 = icmp slt i32 %11, 1, !dbg !10360
  br i1 %12, label %18, label %13, !dbg !10360

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10360
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10360
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10360
  %17 = add nuw nsw i32 %16, 8399, !dbg !10360
  br label %18, !dbg !10360

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10338, metadata !DIExpression()), !dbg !10351
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10361, metadata !DIExpression()) #25, !dbg !10368
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10370, !srcloc !10376
  call void @llvm.dbg.value(metadata i32 undef, metadata !10373, metadata !DIExpression()) #25, !dbg !10377
  call void @llvm.dbg.value(metadata i32 undef, metadata !10374, metadata !DIExpression()) #25, !dbg !10377
  call void @llvm.dbg.value(metadata i32 undef, metadata !10367, metadata !DIExpression()) #25, !dbg !10368
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10378
  br i1 %21, label %23, label %22, !dbg !10381

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.126, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.128, i32 0, i32 0), i32 noundef 148) #27, !dbg !10382
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.129, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10382
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.128, i32 0, i32 0), i32 noundef 148) #27, !dbg !10382
  unreachable, !dbg !10382

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10370
  call void @llvm.dbg.value(metadata i32 %24, metadata !10373, metadata !DIExpression()) #25, !dbg !10377
  call void @llvm.dbg.value(metadata i32 %24, metadata !10367, metadata !DIExpression()) #25, !dbg !10368
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10384
  call void @llvm.dbg.value(metadata i32 %24, metadata !10344, metadata !DIExpression()), !dbg !10351
  %25 = tail call fastcc i32 @elapsed() #26, !dbg !10385
  call void @llvm.dbg.value(metadata i32 %25, metadata !10349, metadata !DIExpression()), !dbg !10351
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10386
  call void @llvm.dbg.value(metadata i32 %26, metadata !10341, metadata !DIExpression()), !dbg !10351
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10387
  %28 = add i32 %27, %25, !dbg !10387
  store i32 %28, i32* @cycle_count, align 4, !dbg !10387
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10388
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10389
  %30 = sub i32 %28, %29, !dbg !10390
  call void @llvm.dbg.value(metadata i32 %30, metadata !10350, metadata !DIExpression()), !dbg !10351
  %31 = icmp slt i32 %30, 0, !dbg !10391
  br i1 %31, label %41, label %32, !dbg !10393

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10340, metadata !DIExpression()), !dbg !10351
  call void @llvm.dbg.value(metadata i32 undef, metadata !10340, metadata !DIExpression()), !dbg !10351
  %33 = add nuw i32 %19, %30, !dbg !10394
  %34 = urem i32 %33, 8400, !dbg !10396
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10340, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10351
  %35 = sub nuw nsw i32 %19, %34, !dbg !10397
  call void @llvm.dbg.value(metadata i32 %35, metadata !10340, metadata !DIExpression()), !dbg !10351
  %36 = icmp ugt i32 %35, 1024, !dbg !10398
  br i1 %36, label %37, label %39, !dbg !10398

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10340, metadata !DIExpression()), !dbg !10351
  %38 = icmp ugt i32 %35, 16766400, !dbg !10399
  br i1 %38, label %41, label %39, !dbg !10401

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10402
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10403
  call void @llvm.dbg.value(metadata i32 %43, metadata !10342, metadata !DIExpression()), !dbg !10351
  %44 = add nsw i32 %42, -1, !dbg !10404
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10405
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10406
  %45 = icmp ult i32 %26, %43, !dbg !10407
  br i1 %45, label %46, label %51, !dbg !10409

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10410
  %48 = add i32 %26, %9, !dbg !10412
  %49 = sub i32 %48, %43, !dbg !10413
  %50 = add i32 %49, %47, !dbg !10410
  br label %55, !dbg !10414

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10415
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10417
  %54 = add i32 %52, %53, !dbg !10417
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10418
  store i32 %56, i32* @cycle_count, align 4, !dbg !10418
  call void @llvm.dbg.value(metadata i32 undef, metadata !10419, metadata !DIExpression()) #25, !dbg !10425
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10424, metadata !DIExpression()) #25, !dbg !10425
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10427
  br i1 %57, label %59, label %58, !dbg !10430

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.126, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.128, i32 0, i32 0), i32 noundef 194) #27, !dbg !10431
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.131, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10431
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.128, i32 0, i32 0), i32 noundef 194) #27, !dbg !10431
  unreachable, !dbg !10431

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10419, metadata !DIExpression()) #25, !dbg !10425
  call void @llvm.dbg.value(metadata i32 %24, metadata !10433, metadata !DIExpression()) #25, !dbg !10436
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #25, !dbg !10438, !srcloc !10439
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10440
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10441 {
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10361, metadata !DIExpression()) #25, !dbg !10445
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10447, !srcloc !10376
  call void @llvm.dbg.value(metadata i32 undef, metadata !10373, metadata !DIExpression()) #25, !dbg !10449
  call void @llvm.dbg.value(metadata i32 undef, metadata !10374, metadata !DIExpression()) #25, !dbg !10449
  call void @llvm.dbg.value(metadata i32 undef, metadata !10367, metadata !DIExpression()) #25, !dbg !10445
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10450
  br i1 %2, label %4, label %3, !dbg !10451

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.126, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.128, i32 0, i32 0), i32 noundef 148) #27, !dbg !10452
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.129, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10452
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.128, i32 0, i32 0), i32 noundef 148) #27, !dbg !10452
  unreachable, !dbg !10452

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10373, metadata !DIExpression()) #25, !dbg !10449
  call void @llvm.dbg.value(metadata i32 undef, metadata !10367, metadata !DIExpression()) #25, !dbg !10445
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10453
  call void @llvm.dbg.value(metadata i32 undef, metadata !10443, metadata !DIExpression()), !dbg !10454
  %5 = tail call fastcc i32 @elapsed() #26, !dbg !10455
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10456
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10457
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10444, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10454
  call void @llvm.dbg.value(metadata i32 undef, metadata !10419, metadata !DIExpression()) #25, !dbg !10458
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10424, metadata !DIExpression()) #25, !dbg !10458
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10460
  br i1 %8, label %10, label %9, !dbg !10461

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.126, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.128, i32 0, i32 0), i32 noundef 194) #27, !dbg !10462
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.131, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10462
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.128, i32 0, i32 0), i32 noundef 194) #27, !dbg !10462
  unreachable, !dbg !10462

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10463
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10444, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10454
  %12 = sub i32 %11, %7, !dbg !10464
  call void @llvm.dbg.value(metadata i32 %12, metadata !10444, metadata !DIExpression()), !dbg !10454
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10447
  call void @llvm.dbg.value(metadata i32 %13, metadata !10373, metadata !DIExpression()) #25, !dbg !10449
  call void @llvm.dbg.value(metadata i32 %13, metadata !10367, metadata !DIExpression()) #25, !dbg !10445
  call void @llvm.dbg.value(metadata i32 %13, metadata !10443, metadata !DIExpression()), !dbg !10454
  call void @llvm.dbg.value(metadata i32 undef, metadata !10419, metadata !DIExpression()) #25, !dbg !10458
  call void @llvm.dbg.value(metadata i32 undef, metadata !10433, metadata !DIExpression()) #25, !dbg !10465
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !10467, !srcloc !10439
  %14 = udiv i32 %12, 8400, !dbg !10468
  ret i32 %14, !dbg !10469
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10470 {
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10361, metadata !DIExpression()) #25, !dbg !10474
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10476, !srcloc !10376
  call void @llvm.dbg.value(metadata i32 undef, metadata !10373, metadata !DIExpression()) #25, !dbg !10478
  call void @llvm.dbg.value(metadata i32 undef, metadata !10374, metadata !DIExpression()) #25, !dbg !10478
  call void @llvm.dbg.value(metadata i32 undef, metadata !10367, metadata !DIExpression()) #25, !dbg !10474
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10479
  br i1 %2, label %4, label %3, !dbg !10480

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.126, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.128, i32 0, i32 0), i32 noundef 148) #27, !dbg !10481
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.129, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10481
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.128, i32 0, i32 0), i32 noundef 148) #27, !dbg !10481
  unreachable, !dbg !10481

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10373, metadata !DIExpression()) #25, !dbg !10478
  call void @llvm.dbg.value(metadata i32 undef, metadata !10367, metadata !DIExpression()) #25, !dbg !10474
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10482
  call void @llvm.dbg.value(metadata i32 undef, metadata !10472, metadata !DIExpression()), !dbg !10483
  %5 = tail call fastcc i32 @elapsed() #26, !dbg !10484
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10485
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10473, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10483
  call void @llvm.dbg.value(metadata i32 undef, metadata !10419, metadata !DIExpression()) #25, !dbg !10486
  call void @llvm.dbg.value(metadata %struct._sfnode* @lock, metadata !10424, metadata !DIExpression()) #25, !dbg !10486
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @lock) #27, !dbg !10488
  br i1 %7, label %9, label %8, !dbg !10489

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.126, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.128, i32 0, i32 0), i32 noundef 194) #27, !dbg !10490
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.131, i32 0, i32 0), %struct._sfnode* noundef nonnull @lock) #27, !dbg !10490
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.128, i32 0, i32 0), i32 noundef 194) #27, !dbg !10490
  unreachable, !dbg !10490

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10491
  call void @llvm.dbg.value(metadata i32 %10, metadata !10473, metadata !DIExpression()), !dbg !10483
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10476
  call void @llvm.dbg.value(metadata i32 %11, metadata !10373, metadata !DIExpression()) #25, !dbg !10478
  call void @llvm.dbg.value(metadata i32 %11, metadata !10367, metadata !DIExpression()) #25, !dbg !10474
  call void @llvm.dbg.value(metadata i32 %11, metadata !10472, metadata !DIExpression()), !dbg !10483
  call void @llvm.dbg.value(metadata i32 undef, metadata !10419, metadata !DIExpression()) #25, !dbg !10486
  call void @llvm.dbg.value(metadata i32 undef, metadata !10433, metadata !DIExpression()) #25, !dbg !10492
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !10494, !srcloc !10439
  ret i32 %10, !dbg !10495
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10496 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10497
  %2 = icmp eq i32 %1, -16777216, !dbg !10499
  br i1 %2, label %3, label %6, !dbg !10500

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10501
  %5 = or i32 %4, 1, !dbg !10501
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10501
  br label %6, !dbg !10503

6:                                                ; preds = %3, %0
  ret void, !dbg !10504
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10505 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10506
  %2 = and i32 %1, -2, !dbg !10506
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10506
  ret void, !dbg !10507
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !10508 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10534, metadata !DIExpression()), !dbg !10537
  call void @llvm.dbg.value(metadata i8 %1, metadata !10535, metadata !DIExpression()), !dbg !10537
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10536, metadata !DIExpression()), !dbg !10537
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10538
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10538
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10537
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10539
  %8 = load i8, i8* %6, align 4, !dbg !10540
  %9 = zext i8 %8 to i32, !dbg !10541
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10541
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10542
  br i1 %11, label %18, label %24, !dbg !10543

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10537
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10539
  %14 = load i8, i8* %6, align 4, !dbg !10540
  %15 = zext i8 %14 to i32, !dbg !10541
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10541
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10542
  br i1 %17, label %18, label %24, !dbg !10543, !llvm.loop !10544

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10546
  %21 = load i8, i8* %20, align 1, !dbg !10546
  %22 = icmp eq i8 %21, %1, !dbg !10549
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10550
  br i1 %22, label %24, label %12, !dbg !10551

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10537
  ret i32 %25, !dbg !10552
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10553 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10564, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.value(metadata i8 %1, metadata !10565, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.value(metadata i32 %2, metadata !10566, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.value(metadata i32 0, metadata !10569, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.value(metadata i32 0, metadata !10570, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.value(metadata i8 0, metadata !10571, metadata !DIExpression()), !dbg !10581
  %4 = icmp eq i8 %1, 0, !dbg !10582
  br i1 %4, label %35, label %5, !dbg !10583

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10582
  br label %9, !dbg !10583

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10571, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.value(metadata i32 %29, metadata !10569, metadata !DIExpression()), !dbg !10580
  %8 = icmp eq i32 %34, %6, !dbg !10582
  br i1 %8, label %35, label %9, !dbg !10583, !llvm.loop !10584

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10571, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.value(metadata i32 %11, metadata !10569, metadata !DIExpression()), !dbg !10580
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10586
  %13 = load i32, i32* %12, align 4, !dbg !10586
  call void @llvm.dbg.value(metadata i32 %13, metadata !10568, metadata !DIExpression()), !dbg !10580
  %14 = and i32 %13, 31, !dbg !10587
  %15 = icmp ult i32 %14, 16, !dbg !10588
  br i1 %15, label %16, label %20, !dbg !10589

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10590
  %18 = load i32, i32* %17, align 4, !dbg !10590
  %19 = or i32 %18, 32, !dbg !10592
  call void @llvm.dbg.value(metadata i32 %19, metadata !10569, metadata !DIExpression()), !dbg !10580
  br label %28, !dbg !10593

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10594

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10595
  %23 = load i32, i32* %22, align 4, !dbg !10595
  call void @llvm.dbg.value(metadata i32 %23, metadata !10573, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10596
  %24 = lshr i32 %23, 7, !dbg !10597
  %25 = and i32 %24, 16, !dbg !10597
  %26 = or i32 %25, %23, !dbg !10597
  call void @llvm.dbg.value(metadata i32 %26, metadata !10569, metadata !DIExpression()), !dbg !10580
  br label %28, !dbg !10598

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !10580
  call void @llvm.dbg.value(metadata i32 %29, metadata !10569, metadata !DIExpression()), !dbg !10580
  %30 = lshr i32 %13, 5, !dbg !10599
  %31 = and i32 %30, 255, !dbg !10599
  call void @llvm.dbg.value(metadata i32 %31, metadata !10567, metadata !DIExpression()), !dbg !10580
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !10600
  call void @llvm.dbg.value(metadata i32 %32, metadata !10570, metadata !DIExpression()), !dbg !10580
  %33 = icmp slt i32 %32, 0, !dbg !10601
  %34 = add nuw nsw i32 %10, 1, !dbg !10603
  call void @llvm.dbg.value(metadata i32 %34, metadata !10571, metadata !DIExpression()), !dbg !10581
  br i1 %33, label %35, label %7, !dbg !10604

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10605
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10610, metadata !DIExpression()), !dbg !10614
  call void @llvm.dbg.value(metadata i32 %1, metadata !10611, metadata !DIExpression()), !dbg !10614
  call void @llvm.dbg.value(metadata i32 %2, metadata !10612, metadata !DIExpression()), !dbg !10614
  %4 = icmp ugt i32 %0, 175, !dbg !10615
  br i1 %4, label %16, label %5, !dbg !10617

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10618
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10619
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10619
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10613, metadata !DIExpression()), !dbg !10614
  %9 = add nsw i32 %6, -8, !dbg !10620
  %10 = icmp ult i32 %9, 3, !dbg !10620
  br i1 %10, label %16, label %11, !dbg !10622

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.136(%struct.device* noundef %8) #26, !dbg !10623
  br i1 %12, label %13, label %16, !dbg !10624

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !10625
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !10626
  br label %16, !dbg !10627

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !10614
  ret i32 %17, !dbg !10628
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.136(%struct.device* noundef %0) unnamed_addr #1 !dbg !10629 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10633, metadata !DIExpression()), !dbg !10634
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10635, !srcloc !10637
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.137(%struct.device* noundef %0) #26, !dbg !10638
  ret i1 %2, !dbg !10639
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.137(%struct.device* noundef %0) unnamed_addr #1 !dbg !10640 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10642, metadata !DIExpression()), !dbg !10643
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10644
  ret i1 %2, !dbg !10645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !10646 {
  ret void, !dbg !10647
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !10648 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10650, metadata !DIExpression()), !dbg !10655
  call void @llvm.dbg.value(metadata i32 0, metadata !10651, metadata !DIExpression()), !dbg !10655
  call void @llvm.dbg.value(metadata i32 2, metadata !10652, metadata !DIExpression()), !dbg !10655
  call void @llvm.dbg.value(metadata i32 0, metadata !10653, metadata !DIExpression()), !dbg !10655
  call void @llvm.dbg.value(metadata i32 2, metadata !10654, metadata !DIExpression()), !dbg !10655
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10656
  %2 = and i32 %1, 12, !dbg !10657
  call void @llvm.dbg.value(metadata i32 %2, metadata !10650, metadata !DIExpression()), !dbg !10655
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !10658

3:                                                ; preds = %0
  br label %21, !dbg !10659

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10661
  call void @llvm.dbg.value(metadata i32 %5, metadata !10653, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10655
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10662
  %7 = and i32 %6, 63, !dbg !10663
  call void @llvm.dbg.value(metadata i32 %7, metadata !10654, metadata !DIExpression()), !dbg !10655
  %8 = and i32 %5, 4194304, !dbg !10664
  %9 = icmp eq i32 %8, 0, !dbg !10664
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !10666
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10666
  %13 = lshr i32 %12, 6, !dbg !10666
  %14 = and i32 %13, 511, !dbg !10666
  %15 = mul i32 %14, %11, !dbg !10666
  call void @llvm.dbg.value(metadata i32 %15, metadata !10651, metadata !DIExpression()), !dbg !10655
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10667
  %17 = lshr i32 %16, 15, !dbg !10668
  %18 = and i32 %17, 6, !dbg !10668
  %19 = add nuw nsw i32 %18, 2, !dbg !10668
  call void @llvm.dbg.value(metadata i32 %19, metadata !10652, metadata !DIExpression()), !dbg !10655
  %20 = udiv i32 %15, %19, !dbg !10669
  br label %21, !dbg !10670

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !10671
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10672
  %24 = lshr i32 %23, 4, !dbg !10673
  %25 = and i32 %24, 15, !dbg !10673
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !10674
  %27 = load i8, i8* %26, align 1, !dbg !10674
  %28 = zext i8 %27 to i32, !dbg !10674
  call void @llvm.dbg.value(metadata i32 %28, metadata !10650, metadata !DIExpression()), !dbg !10655
  %29 = lshr i32 %22, %28, !dbg !10675
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !10675
  ret void, !dbg !10676
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !10677 {
  ret i32 0, !dbg !10682
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !10683 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10709, metadata !DIExpression()), !dbg !10720
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10721
  br i1 %3, label %311, label %4, !dbg !10723

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10724
  %6 = load i32, i32* %5, align 4, !dbg !10724
  %7 = and i32 %6, 1, !dbg !10726
  %8 = icmp eq i32 %7, 0, !dbg !10727
  br i1 %8, label %66, label %9, !dbg !10728

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10729
  %11 = and i32 %10, 12, !dbg !10729
  %12 = icmp eq i32 %11, 4, !dbg !10732
  br i1 %12, label %21, label %13, !dbg !10733

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10734
  %15 = and i32 %14, 12, !dbg !10734
  %16 = icmp eq i32 %15, 8, !dbg !10735
  br i1 %16, label %17, label %29, !dbg !10736

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10737
  %19 = and i32 %18, 4194304, !dbg !10738
  %20 = icmp eq i32 %19, 0, !dbg !10739
  br i1 %20, label %29, label %21, !dbg !10740

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10741
  %23 = and i32 %22, 131072, !dbg !10741
  %24 = icmp eq i32 %23, 0, !dbg !10741
  br i1 %24, label %66, label %25, !dbg !10744

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10745
  %27 = load i32, i32* %26, align 4, !dbg !10745
  %28 = icmp eq i32 %27, 0, !dbg !10746
  br i1 %28, label %311, label %66, !dbg !10747

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10748
  %31 = load i32, i32* %30, align 4, !dbg !10748
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !10752

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10753
  %34 = or i32 %33, 65536, !dbg !10753
  br label %45, !dbg !10753

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10755
  %37 = or i32 %36, 262144, !dbg !10755
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10755
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10755
  %39 = or i32 %38, 65536, !dbg !10755
  br label %45, !dbg !10755

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10758
  %42 = and i32 %41, -65537, !dbg !10758
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10758
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10758
  %44 = and i32 %43, -262145, !dbg !10758
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10760
  %47 = load i32, i32* %30, align 4, !dbg !10761
  %48 = icmp eq i32 %47, 0, !dbg !10763
  %49 = tail call i32 @HAL_GetTick() #27, !dbg !10764
  call void @llvm.dbg.value(metadata i32 %49, metadata !10710, metadata !DIExpression()), !dbg !10720
  call void @llvm.dbg.value(metadata i32 %49, metadata !10710, metadata !DIExpression()), !dbg !10720
  br i1 %48, label %58, label %50, !dbg !10765

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10766
  %52 = and i32 %51, 131072, !dbg !10768
  %53 = icmp eq i32 %52, 0, !dbg !10768
  br i1 %53, label %54, label %66, !dbg !10769

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #27, !dbg !10770
  %56 = sub i32 %55, %49, !dbg !10773
  %57 = icmp ugt i32 %56, 100, !dbg !10774
  br i1 %57, label %311, label %50, !dbg !10775, !llvm.loop !10776

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10778
  %60 = and i32 %59, 131072, !dbg !10778
  %61 = icmp eq i32 %60, 0, !dbg !10778
  br i1 %61, label %66, label %62, !dbg !10780

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !10781
  %64 = sub i32 %63, %49, !dbg !10784
  %65 = icmp ugt i32 %64, 100, !dbg !10785
  br i1 %65, label %311, label %58, !dbg !10786, !llvm.loop !10787

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !10789
  %68 = and i32 %67, 2, !dbg !10791
  %69 = icmp eq i32 %68, 0, !dbg !10792
  br i1 %69, label %121, label %70, !dbg !10793

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10794
  %72 = and i32 %71, 12, !dbg !10794
  %73 = icmp eq i32 %72, 0, !dbg !10797
  br i1 %73, label %82, label %74, !dbg !10798

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10799
  %76 = and i32 %75, 12, !dbg !10799
  %77 = icmp eq i32 %76, 8, !dbg !10800
  br i1 %77, label %78, label %90, !dbg !10801

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10802
  %80 = and i32 %79, 4194304, !dbg !10803
  %81 = icmp eq i32 %80, 0, !dbg !10804
  br i1 %81, label %82, label %90, !dbg !10805

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10806
  %84 = and i32 %83, 2, !dbg !10806
  %85 = icmp eq i32 %84, 0, !dbg !10806
  br i1 %85, label %114, label %86, !dbg !10809

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10810
  %88 = load i32, i32* %87, align 4, !dbg !10810
  %89 = icmp eq i32 %88, 1, !dbg !10811
  br i1 %89, label %114, label %311, !dbg !10812

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10813
  %92 = load i32, i32* %91, align 4, !dbg !10813
  %93 = icmp eq i32 %92, 0, !dbg !10816
  br i1 %93, label %104, label %94, !dbg !10817

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10818
  %95 = tail call i32 @HAL_GetTick() #27, !dbg !10820
  call void @llvm.dbg.value(metadata i32 %95, metadata !10710, metadata !DIExpression()), !dbg !10720
  br label %96, !dbg !10821

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10822
  %98 = and i32 %97, 2, !dbg !10823
  %99 = icmp eq i32 %98, 0, !dbg !10823
  br i1 %99, label %100, label %114, !dbg !10821

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #27, !dbg !10824
  %102 = sub i32 %101, %95, !dbg !10827
  %103 = icmp ugt i32 %102, 2, !dbg !10828
  br i1 %103, label %311, label %96, !dbg !10829, !llvm.loop !10830

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10832
  %105 = tail call i32 @HAL_GetTick() #27, !dbg !10834
  call void @llvm.dbg.value(metadata i32 %105, metadata !10710, metadata !DIExpression()), !dbg !10720
  br label %106, !dbg !10835

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10836
  %108 = and i32 %107, 2, !dbg !10836
  %109 = icmp eq i32 %108, 0, !dbg !10836
  br i1 %109, label %121, label %110, !dbg !10835

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !10837
  %112 = sub i32 %111, %105, !dbg !10840
  %113 = icmp ugt i32 %112, 2, !dbg !10841
  br i1 %113, label %311, label %106, !dbg !10842, !llvm.loop !10843

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10845
  %116 = and i32 %115, -249, !dbg !10845
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10845
  %118 = load i32, i32* %117, align 4, !dbg !10845
  %119 = shl i32 %118, 3, !dbg !10845
  %120 = or i32 %119, %116, !dbg !10845
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10845
  br label %121, !dbg !10846

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !10846
  %123 = and i32 %122, 8, !dbg !10848
  %124 = icmp eq i32 %123, 0, !dbg !10849
  br i1 %124, label %149, label %125, !dbg !10850

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10851
  %127 = load i32, i32* %126, align 4, !dbg !10851
  %128 = icmp eq i32 %127, 0, !dbg !10854
  br i1 %128, label %139, label %129, !dbg !10855

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10856
  %130 = tail call i32 @HAL_GetTick() #27, !dbg !10858
  call void @llvm.dbg.value(metadata i32 %130, metadata !10710, metadata !DIExpression()), !dbg !10720
  br label %131, !dbg !10859

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10860
  %133 = and i32 %132, 2, !dbg !10861
  %134 = icmp eq i32 %133, 0, !dbg !10861
  br i1 %134, label %135, label %149, !dbg !10859

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #27, !dbg !10862
  %137 = sub i32 %136, %130, !dbg !10865
  %138 = icmp ugt i32 %137, 2, !dbg !10866
  br i1 %138, label %311, label %131, !dbg !10867, !llvm.loop !10868

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10870
  %140 = tail call i32 @HAL_GetTick() #27, !dbg !10872
  call void @llvm.dbg.value(metadata i32 %140, metadata !10710, metadata !DIExpression()), !dbg !10720
  br label %141, !dbg !10873

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10874
  %143 = and i32 %142, 2, !dbg !10874
  %144 = icmp eq i32 %143, 0, !dbg !10874
  br i1 %144, label %149, label %145, !dbg !10873

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !10875
  %147 = sub i32 %146, %140, !dbg !10878
  %148 = icmp ugt i32 %147, 2, !dbg !10879
  br i1 %148, label %311, label %141, !dbg !10880, !llvm.loop !10881

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !10883
  %151 = and i32 %150, 4, !dbg !10884
  %152 = icmp eq i32 %151, 0, !dbg !10885
  br i1 %152, label %221, label %153, !dbg !10886

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !10712, metadata !DIExpression()), !dbg !10887
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10888
  %155 = and i32 %154, 268435456, !dbg !10888
  %156 = icmp eq i32 %155, 0, !dbg !10888
  br i1 %156, label %157, label %164, !dbg !10889

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !10890
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !10890
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10716, metadata !DIExpression()), !dbg !10890
  store volatile i32 0, i32* %2, align 4, !dbg !10890
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10890
  %160 = or i32 %159, 268435456, !dbg !10890
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10890
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10890
  %162 = and i32 %161, 268435456, !dbg !10890
  store volatile i32 %162, i32* %2, align 4, !dbg !10890
  %163 = load volatile i32, i32* %2, align 4, !dbg !10890
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !10891
  call void @llvm.dbg.value(metadata i32 1, metadata !10712, metadata !DIExpression()), !dbg !10887
  br label %164, !dbg !10892

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !10712, metadata !DIExpression()), !dbg !10887
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10893
  %166 = and i32 %165, 256, !dbg !10893
  %167 = icmp eq i32 %166, 0, !dbg !10893
  br i1 %167, label %168, label %180, !dbg !10895

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10896
  %170 = or i32 %169, 256, !dbg !10896
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10896
  %171 = tail call i32 @HAL_GetTick() #27, !dbg !10898
  call void @llvm.dbg.value(metadata i32 %171, metadata !10710, metadata !DIExpression()), !dbg !10720
  br label %172, !dbg !10899

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10900
  %174 = and i32 %173, 256, !dbg !10900
  %175 = icmp eq i32 %174, 0, !dbg !10900
  br i1 %175, label %176, label %180, !dbg !10899

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #27, !dbg !10901
  %178 = sub i32 %177, %171, !dbg !10904
  %179 = icmp ugt i32 %178, 2, !dbg !10905
  br i1 %179, label %311, label %172, !dbg !10906, !llvm.loop !10907

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10909
  %182 = load i32, i32* %181, align 4, !dbg !10909
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !10912

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10913
  %185 = or i32 %184, 1, !dbg !10913
  br label %196, !dbg !10913

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10915
  %188 = or i32 %187, 4, !dbg !10915
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10915
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10915
  %190 = or i32 %189, 1, !dbg !10915
  br label %196, !dbg !10915

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10918
  %193 = and i32 %192, -2, !dbg !10918
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10918
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10918
  %195 = and i32 %194, -5, !dbg !10918
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10920
  %198 = load i32, i32* %181, align 4, !dbg !10921
  %199 = icmp eq i32 %198, 0, !dbg !10923
  %200 = tail call i32 @HAL_GetTick() #27, !dbg !10924
  call void @llvm.dbg.value(metadata i32 %200, metadata !10710, metadata !DIExpression()), !dbg !10720
  call void @llvm.dbg.value(metadata i32 %200, metadata !10710, metadata !DIExpression()), !dbg !10720
  br i1 %199, label %209, label %201, !dbg !10925

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10926
  %203 = and i32 %202, 2, !dbg !10928
  %204 = icmp eq i32 %203, 0, !dbg !10928
  br i1 %204, label %205, label %217, !dbg !10929

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !10930
  %207 = sub i32 %206, %200, !dbg !10933
  %208 = icmp ugt i32 %207, 5000, !dbg !10934
  br i1 %208, label %311, label %201, !dbg !10935, !llvm.loop !10936

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10938
  %211 = and i32 %210, 2, !dbg !10938
  %212 = icmp eq i32 %211, 0, !dbg !10938
  br i1 %212, label %217, label %213, !dbg !10940

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #27, !dbg !10941
  %215 = sub i32 %214, %200, !dbg !10944
  %216 = icmp ugt i32 %215, 5000, !dbg !10945
  br i1 %216, label %311, label %209, !dbg !10946, !llvm.loop !10947

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !10949

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10950
  %220 = and i32 %219, -268435457, !dbg !10950
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10950
  br label %221, !dbg !10953

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !10954
  %223 = load i32, i32* %222, align 4, !dbg !10954
  %224 = icmp eq i32 %223, 0, !dbg !10956
  br i1 %224, label %310, label %225, !dbg !10957

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10958
  %227 = and i32 %226, 12, !dbg !10958
  %228 = icmp eq i32 %227, 8, !dbg !10961
  br i1 %228, label %277, label %229, !dbg !10962

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !10963
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10966
  %231 = tail call i32 @HAL_GetTick() #27, !dbg !10966
  call void @llvm.dbg.value(metadata i32 %231, metadata !10710, metadata !DIExpression()), !dbg !10720
  call void @llvm.dbg.value(metadata i32 %231, metadata !10710, metadata !DIExpression()), !dbg !10720
  br i1 %230, label %232, label %269, !dbg !10967

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10968
  %234 = and i32 %233, 33554432, !dbg !10968
  %235 = icmp eq i32 %234, 0, !dbg !10968
  br i1 %235, label %240, label %236, !dbg !10970

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #27, !dbg !10971
  %238 = sub i32 %237, %231, !dbg !10974
  %239 = icmp ugt i32 %238, 2, !dbg !10975
  br i1 %239, label %311, label %232, !dbg !10976, !llvm.loop !10977

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !10979
  %242 = load i32, i32* %241, align 4, !dbg !10979
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !10979
  %244 = load i32, i32* %243, align 4, !dbg !10979
  %245 = or i32 %244, %242, !dbg !10979
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !10979
  %247 = load i32, i32* %246, align 4, !dbg !10979
  %248 = shl i32 %247, 6, !dbg !10979
  %249 = or i32 %245, %248, !dbg !10979
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !10979
  %251 = load i32, i32* %250, align 4, !dbg !10979
  %252 = shl i32 %251, 15, !dbg !10979
  %253 = add i32 %252, -65536, !dbg !10979
  %254 = and i32 %253, -65536, !dbg !10979
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !10979
  %256 = load i32, i32* %255, align 4, !dbg !10979
  %257 = shl i32 %256, 24, !dbg !10979
  %258 = or i32 %249, %257, !dbg !10979
  %259 = or i32 %258, %254, !dbg !10979
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10979
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !10980
  %260 = tail call i32 @HAL_GetTick() #27, !dbg !10981
  call void @llvm.dbg.value(metadata i32 %260, metadata !10710, metadata !DIExpression()), !dbg !10720
  br label %261, !dbg !10982

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10983
  %263 = and i32 %262, 33554432, !dbg !10984
  %264 = icmp eq i32 %263, 0, !dbg !10984
  br i1 %264, label %265, label %310, !dbg !10982

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #27, !dbg !10985
  %267 = sub i32 %266, %260, !dbg !10988
  %268 = icmp ugt i32 %267, 2, !dbg !10989
  br i1 %268, label %311, label %261, !dbg !10990, !llvm.loop !10991

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10993
  %271 = and i32 %270, 33554432, !dbg !10993
  %272 = icmp eq i32 %271, 0, !dbg !10993
  br i1 %272, label %310, label %273, !dbg !10995

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #27, !dbg !10996
  %275 = sub i32 %274, %231, !dbg !10999
  %276 = icmp ugt i32 %275, 2, !dbg !11000
  br i1 %276, label %311, label %269, !dbg !11001, !llvm.loop !11002

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11004
  br i1 %278, label %311, label %279, !dbg !11007

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11008
  call void @llvm.dbg.value(metadata i32 %280, metadata !10711, metadata !DIExpression()), !dbg !10720
  %281 = and i32 %280, 4194304, !dbg !11010
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11012
  %283 = load i32, i32* %282, align 4, !dbg !11012
  %284 = icmp eq i32 %281, %283, !dbg !11013
  br i1 %284, label %285, label %311, !dbg !11014

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11015
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11016
  %288 = load i32, i32* %287, align 4, !dbg !11016
  %289 = icmp eq i32 %286, %288, !dbg !11017
  br i1 %289, label %290, label %311, !dbg !11018

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11019
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11020
  %293 = load i32, i32* %292, align 4, !dbg !11020
  %294 = shl i32 %293, 6, !dbg !11021
  %295 = icmp eq i32 %291, %294, !dbg !11022
  br i1 %295, label %296, label %311, !dbg !11023

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11024
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11025
  %299 = load i32, i32* %298, align 4, !dbg !11025
  %300 = shl i32 %299, 15, !dbg !11026
  %301 = add i32 %300, -65536, !dbg !11026
  %302 = and i32 %301, -65536, !dbg !11026
  %303 = icmp eq i32 %297, %302, !dbg !11027
  br i1 %303, label %304, label %311, !dbg !11028

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11029
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11030
  %307 = load i32, i32* %306, align 4, !dbg !11030
  %308 = shl i32 %307, 24, !dbg !11031
  %309 = icmp eq i32 %305, %308, !dbg !11032
  br i1 %309, label %310, label %311, !dbg !11033

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !11034

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !10720
  ret i32 %312, !dbg !11035
}

; Function Attrs: optsize
declare !dbg !11036 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11038 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11051, metadata !DIExpression()), !dbg !11054
  call void @llvm.dbg.value(metadata i32 %1, metadata !11052, metadata !DIExpression()), !dbg !11054
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11055
  br i1 %3, label %115, label %4, !dbg !11057

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11058
  %6 = and i32 %5, 7, !dbg !11058
  %7 = icmp ult i32 %6, %1, !dbg !11060
  br i1 %7, label %8, label %13, !dbg !11061

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11062
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11062
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11064
  %11 = and i32 %10, 7, !dbg !11064
  %12 = icmp eq i32 %11, %1, !dbg !11066
  br i1 %12, label %13, label %115, !dbg !11067

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11068
  %15 = load i32, i32* %14, align 4, !dbg !11068
  %16 = and i32 %15, 2, !dbg !11070
  %17 = icmp eq i32 %16, 0, !dbg !11071
  br i1 %17, label %39, label %18, !dbg !11072

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11073
  %20 = icmp eq i32 %19, 0, !dbg !11076
  br i1 %20, label %25, label %21, !dbg !11077

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11078
  %23 = or i32 %22, 7168, !dbg !11078
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11078
  %24 = load i32, i32* %14, align 4, !dbg !11080
  br label %25, !dbg !11082

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11080
  %27 = and i32 %26, 8, !dbg !11083
  %28 = icmp eq i32 %27, 0, !dbg !11084
  br i1 %28, label %32, label %29, !dbg !11085

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11086
  %31 = or i32 %30, 57344, !dbg !11086
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11086
  br label %32, !dbg !11088

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11089
  %34 = and i32 %33, -241, !dbg !11089
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11089
  %36 = load i32, i32* %35, align 4, !dbg !11089
  %37 = or i32 %34, %36, !dbg !11089
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11089
  %38 = load i32, i32* %14, align 4, !dbg !11090
  br label %39, !dbg !11092

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11090
  %41 = and i32 %40, 1, !dbg !11093
  %42 = icmp eq i32 %41, 0, !dbg !11094
  br i1 %42, label %73, label %43, !dbg !11095

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11096
  %45 = load i32, i32* %44, align 4, !dbg !11096
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11099

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11100
  %48 = and i32 %47, 131072, !dbg !11103
  %49 = icmp eq i32 %48, 0, !dbg !11103
  br i1 %49, label %115, label %58, !dbg !11104

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11105
  %52 = and i32 %51, 33554432, !dbg !11109
  %53 = icmp eq i32 %52, 0, !dbg !11109
  br i1 %53, label %115, label %58, !dbg !11110

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11111
  %56 = and i32 %55, 2, !dbg !11114
  %57 = icmp eq i32 %56, 0, !dbg !11114
  br i1 %57, label %115, label %58, !dbg !11115

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11116
  %60 = and i32 %59, -4, !dbg !11116
  %61 = or i32 %60, %45, !dbg !11116
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11116
  %62 = tail call i32 @HAL_GetTick() #27, !dbg !11117
  call void @llvm.dbg.value(metadata i32 %62, metadata !11053, metadata !DIExpression()), !dbg !11054
  br label %63, !dbg !11118

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11119
  %65 = and i32 %64, 12, !dbg !11119
  %66 = load i32, i32* %44, align 4, !dbg !11120
  %67 = shl i32 %66, 2, !dbg !11121
  %68 = icmp eq i32 %65, %67, !dbg !11122
  br i1 %68, label %73, label %69, !dbg !11118

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #27, !dbg !11123
  %71 = sub i32 %70, %62, !dbg !11126
  %72 = icmp ugt i32 %71, 5000, !dbg !11127
  br i1 %72, label %115, label %63, !dbg !11128, !llvm.loop !11129

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11131
  %75 = and i32 %74, 7, !dbg !11131
  %76 = icmp ugt i32 %75, %1, !dbg !11133
  br i1 %76, label %77, label %82, !dbg !11134

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11135
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11135
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11137
  %80 = and i32 %79, 7, !dbg !11137
  %81 = icmp eq i32 %80, %1, !dbg !11139
  br i1 %81, label %82, label %115, !dbg !11140

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11141
  %84 = and i32 %83, 4, !dbg !11143
  %85 = icmp eq i32 %84, 0, !dbg !11144
  br i1 %85, label %93, label %86, !dbg !11145

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11146
  %88 = and i32 %87, -7169, !dbg !11146
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11146
  %90 = load i32, i32* %89, align 4, !dbg !11146
  %91 = or i32 %88, %90, !dbg !11146
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11146
  %92 = load i32, i32* %14, align 4, !dbg !11148
  br label %93, !dbg !11150

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11148
  %95 = and i32 %94, 8, !dbg !11151
  %96 = icmp eq i32 %95, 0, !dbg !11152
  br i1 %96, label %104, label %97, !dbg !11153

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11154
  %99 = and i32 %98, -57345, !dbg !11154
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11154
  %101 = load i32, i32* %100, align 4, !dbg !11154
  %102 = shl i32 %101, 3, !dbg !11154
  %103 = or i32 %102, %99, !dbg !11154
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11154
  br label %104, !dbg !11156

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !11157
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11158
  %107 = lshr i32 %106, 4, !dbg !11159
  %108 = and i32 %107, 15, !dbg !11159
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11160
  %110 = load i8, i8* %109, align 1, !dbg !11160
  %111 = zext i8 %110 to i32, !dbg !11160
  %112 = lshr i32 %105, %111, !dbg !11161
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11162
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11163
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #27, !dbg !11164
  br label %115, !dbg !11165

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11054
  ret i32 %116, !dbg !11166
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11167 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11169, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.value(metadata i32 0, metadata !11170, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.value(metadata i32 0, metadata !11171, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.value(metadata i32 0, metadata !11172, metadata !DIExpression()), !dbg !11173
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11174
  %2 = and i32 %1, 12, !dbg !11175
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11176

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !11172, metadata !DIExpression()), !dbg !11173
  br label %29, !dbg !11177

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11180
  %6 = and i32 %5, 63, !dbg !11182
  call void @llvm.dbg.value(metadata i32 %6, metadata !11169, metadata !DIExpression()), !dbg !11173
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11183
  %8 = and i32 %7, 4194304, !dbg !11183
  %9 = icmp eq i32 %8, 0, !dbg !11185
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11186
  %11 = lshr i32 %10, 6, !dbg !11186
  %12 = and i32 %11, 511, !dbg !11186
  br i1 %9, label %16, label %13, !dbg !11187

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !11188
  %15 = udiv i32 %14, %6, !dbg !11190
  call void @llvm.dbg.value(metadata i32 %15, metadata !11170, metadata !DIExpression()), !dbg !11173
  br label %22, !dbg !11191

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !11192
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !11194
  %19 = zext i32 %6 to i64, !dbg !11195
  %20 = udiv i64 %18, %19, !dbg !11196
  %21 = trunc i64 %20 to i32, !dbg !11197
  call void @llvm.dbg.value(metadata i32 %21, metadata !11170, metadata !DIExpression()), !dbg !11173
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !11186
  call void @llvm.dbg.value(metadata i32 %23, metadata !11170, metadata !DIExpression()), !dbg !11173
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11198
  %25 = lshr i32 %24, 15, !dbg !11199
  %26 = and i32 %25, 6, !dbg !11199
  %27 = add nuw nsw i32 %26, 2, !dbg !11199
  call void @llvm.dbg.value(metadata i32 %27, metadata !11171, metadata !DIExpression()), !dbg !11173
  %28 = udiv i32 %23, %27, !dbg !11200
  call void @llvm.dbg.value(metadata i32 %28, metadata !11172, metadata !DIExpression()), !dbg !11173
  br label %29, !dbg !11201

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !11202
  call void @llvm.dbg.value(metadata i32 %30, metadata !11172, metadata !DIExpression()), !dbg !11173
  ret i32 %30, !dbg !11203
}

; Function Attrs: optsize
declare !dbg !11204 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11207 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11211, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.value(metadata i32 %1, metadata !11212, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.value(metadata i32 %2, metadata !11213, metadata !DIExpression()), !dbg !11231
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11232
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #25, !dbg !11232
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11214, metadata !DIExpression()), !dbg !11233
  %8 = icmp eq i32 %0, 0, !dbg !11234
  br i1 %8, label %9, label %23, !dbg !11235

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11236
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11236
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11224, metadata !DIExpression()), !dbg !11236
  store volatile i32 0, i32* %5, align 4, !dbg !11236
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11236
  %12 = or i32 %11, 1, !dbg !11236
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11236
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11236
  %14 = and i32 %13, 1, !dbg !11236
  store volatile i32 %14, i32* %5, align 4, !dbg !11236
  %15 = load volatile i32, i32* %5, align 4, !dbg !11236
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11237
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11238
  store i32 256, i32* %16, align 4, !dbg !11239
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11240
  store i32 2, i32* %17, align 4, !dbg !11241
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11242
  store i32 3, i32* %18, align 4, !dbg !11243
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11244
  store i32 0, i32* %19, align 4, !dbg !11245
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11246
  store i32 0, i32* %20, align 4, !dbg !11247
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !11248
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11249
  %22 = and i32 %21, -123731969, !dbg !11249
  br label %38, !dbg !11250

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11251
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11251
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11228, metadata !DIExpression()), !dbg !11251
  store volatile i32 0, i32* %6, align 4, !dbg !11251
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11251
  %26 = or i32 %25, 4, !dbg !11251
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11251
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11251
  %28 = and i32 %27, 4, !dbg !11251
  store volatile i32 %28, i32* %6, align 4, !dbg !11251
  %29 = load volatile i32, i32* %6, align 4, !dbg !11251
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11252
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11253
  store i32 512, i32* %30, align 4, !dbg !11254
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11255
  store i32 2, i32* %31, align 4, !dbg !11256
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11257
  store i32 3, i32* %32, align 4, !dbg !11258
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11259
  store i32 0, i32* %33, align 4, !dbg !11260
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11261
  store i32 0, i32* %34, align 4, !dbg !11262
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !11263
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11264
  %36 = and i32 %35, 134217727, !dbg !11264
  %37 = shl i32 %2, 3, !dbg !11264
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11265
  %42 = or i32 %41, %40, !dbg !11265
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11265
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #25, !dbg !11266
  ret void, !dbg !11266
}

; Function Attrs: optsize
declare !dbg !11267 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11271 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11272
  ret void, !dbg !11273
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11274 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11275
  ret void, !dbg !11276
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #7 !dbg !11277 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11278
  ret i32 %1, !dbg !11279
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !11280 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11281
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11282
  %3 = lshr i32 %2, 10, !dbg !11283
  %4 = and i32 %3, 7, !dbg !11283
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11284
  %6 = load i8, i8* %5, align 1, !dbg !11284
  %7 = zext i8 %6 to i32, !dbg !11284
  %8 = lshr i32 %1, %7, !dbg !11285
  ret i32 %8, !dbg !11286
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !11287 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11288
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11289
  %3 = lshr i32 %2, 13, !dbg !11290
  %4 = and i32 %3, 7, !dbg !11290
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11291
  %6 = load i8, i8* %5, align 1, !dbg !11291
  %7 = zext i8 %6 to i32, !dbg !11291
  %8 = lshr i32 %1, %7, !dbg !11292
  ret i32 %8, !dbg !11293
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11294 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11298, metadata !DIExpression()), !dbg !11299
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11300
  store i32 15, i32* %2, align 4, !dbg !11301
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11302
  %4 = and i32 %3, 262144, !dbg !11304
  %5 = icmp eq i32 %4, 0, !dbg !11305
  br i1 %5, label %8, label %6, !dbg !11306

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11307
  store i32 327680, i32* %7, align 4, !dbg !11309
  br label %15, !dbg !11310

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11311
  %10 = and i32 %9, 65536, !dbg !11313
  %11 = icmp eq i32 %10, 0, !dbg !11314
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11315
  br i1 %11, label %14, label %13, !dbg !11316

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11317
  br label %15, !dbg !11319

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11320
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11322
  %17 = and i32 %16, 1, !dbg !11324
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11325
  store i32 %17, i32* %18, align 4, !dbg !11327
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11328
  %20 = lshr i32 %19, 3, !dbg !11329
  %21 = and i32 %20, 31, !dbg !11329
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11330
  store i32 %21, i32* %22, align 4, !dbg !11331
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11332
  %24 = and i32 %23, 4, !dbg !11334
  %25 = icmp eq i32 %24, 0, !dbg !11335
  br i1 %25, label %28, label %26, !dbg !11336

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11337
  store i32 5, i32* %27, align 4, !dbg !11339
  br label %35, !dbg !11340

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11341
  %30 = and i32 %29, 1, !dbg !11343
  %31 = icmp eq i32 %30, 0, !dbg !11344
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11345
  br i1 %31, label %34, label %33, !dbg !11346

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11347
  br label %35, !dbg !11349

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11350
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11352
  %37 = and i32 %36, 1, !dbg !11354
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11355
  store i32 %37, i32* %38, align 4, !dbg !11357
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11358
  %40 = and i32 %39, 16777216, !dbg !11360
  %41 = icmp eq i32 %40, 0, !dbg !11361
  %42 = select i1 %41, i32 1, i32 2, !dbg !11362
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11363
  store i32 %42, i32* %43, align 4, !dbg !11365
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11366
  %45 = and i32 %44, 4194304, !dbg !11367
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11368
  store i32 %45, i32* %46, align 4, !dbg !11369
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11370
  %48 = and i32 %47, 63, !dbg !11371
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11372
  store i32 %48, i32* %49, align 4, !dbg !11373
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11374
  %51 = lshr i32 %50, 6, !dbg !11375
  %52 = and i32 %51, 511, !dbg !11375
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11376
  store i32 %52, i32* %53, align 4, !dbg !11377
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11378
  %55 = shl i32 %54, 1, !dbg !11379
  %56 = and i32 %55, 393216, !dbg !11379
  %57 = add nuw nsw i32 %56, 131072, !dbg !11379
  %58 = lshr exact i32 %57, 16, !dbg !11380
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11381
  store i32 %58, i32* %59, align 4, !dbg !11382
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11383
  %61 = lshr i32 %60, 24, !dbg !11384
  %62 = and i32 %61, 15, !dbg !11384
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11385
  store i32 %62, i32* %63, align 4, !dbg !11386
  ret void, !dbg !11387
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !11388 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11392, metadata !DIExpression()), !dbg !11394
  call void @llvm.dbg.value(metadata i32* %1, metadata !11393, metadata !DIExpression()), !dbg !11394
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11395
  store i32 15, i32* %3, align 4, !dbg !11396
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11397
  %5 = and i32 %4, 3, !dbg !11398
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11399
  store i32 %5, i32* %6, align 4, !dbg !11400
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11401
  %8 = and i32 %7, 240, !dbg !11402
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11403
  store i32 %8, i32* %9, align 4, !dbg !11404
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11405
  %11 = and i32 %10, 7168, !dbg !11406
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11407
  store i32 %11, i32* %12, align 4, !dbg !11408
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11409
  %14 = lshr i32 %13, 3, !dbg !11410
  %15 = and i32 %14, 7168, !dbg !11410
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11411
  store i32 %15, i32* %16, align 4, !dbg !11412
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11413
  %18 = and i32 %17, 7, !dbg !11414
  store i32 %18, i32* %1, align 4, !dbg !11415
  ret void, !dbg !11416
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11417 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11418
  %2 = and i32 %1, 128, !dbg !11418
  %3 = icmp eq i32 %2, 0, !dbg !11418
  br i1 %3, label %5, label %4, !dbg !11420

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !11421
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11423
  br label %5, !dbg !11424

5:                                                ; preds = %4, %0
  ret void, !dbg !11425
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11426 {
  ret void, !dbg !11427
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11428 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11431, metadata !DIExpression()), !dbg !11432
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !11433
  ret void, !dbg !11434
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11435 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11438, metadata !DIExpression()), !dbg !11440
  call void @llvm.dbg.value(metadata i32 1000, metadata !11439, metadata !DIExpression()), !dbg !11440
  %2 = udiv i32 %0, 1000, !dbg !11441
  %3 = add nsw i32 %2, -1, !dbg !11442
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11443
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11444
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11445
  ret void, !dbg !11446
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !11447 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11449, metadata !DIExpression()), !dbg !11451
  %3 = bitcast i32* %2 to i8*, !dbg !11452
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11452
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11450, metadata !DIExpression()), !dbg !11453
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11454
  store volatile i32 %4, i32* %2, align 4, !dbg !11453
  %5 = load volatile i32, i32* %2, align 4, !dbg !11455
  %6 = icmp eq i32 %0, -1, !dbg !11456
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11449, metadata !DIExpression()), !dbg !11451
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11451
  call void @llvm.dbg.value(metadata i32 %8, metadata !11449, metadata !DIExpression()), !dbg !11451
  br label %9, !dbg !11458

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11449, metadata !DIExpression()), !dbg !11451
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11459
  call void @llvm.dbg.value(metadata i32 undef, metadata !11449, metadata !DIExpression()), !dbg !11451
  %12 = shl i32 %11, 15, !dbg !11451
  %13 = ashr i32 %12, 31, !dbg !11451
  %14 = add i32 %13, %10, !dbg !11451
  call void @llvm.dbg.value(metadata i32 %14, metadata !11449, metadata !DIExpression()), !dbg !11451
  %15 = icmp eq i32 %14, 0, !dbg !11458
  br i1 %15, label %16, label %9, !dbg !11458

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11462
  ret void, !dbg !11462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #6 !dbg !11463 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11465, metadata !DIExpression()), !dbg !11466
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11467
  ret void, !dbg !11468
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11469 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11474, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i32 0, metadata !11477, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i32 0, metadata !11478, metadata !DIExpression()), !dbg !11479
  %2 = icmp eq i32 %0, 0, !dbg !11480
  br i1 %2, label %50, label %3, !dbg !11482

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11483
  %5 = icmp eq i32 %4, 49152, !dbg !11486
  br i1 %5, label %6, label %15, !dbg !11487

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !11477, metadata !DIExpression()), !dbg !11479
  %7 = add i32 %0, -64000001, !dbg !11488
  %8 = icmp ult i32 %7, 26000000, !dbg !11488
  br i1 %8, label %15, label %9, !dbg !11488

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !11491
  %11 = select i1 %10, i32 0, i32 3, !dbg !11493
  call void @llvm.dbg.value(metadata i32 %11, metadata !11477, metadata !DIExpression()), !dbg !11479
  %12 = add i32 %0, -30000001, !dbg !11494
  %13 = icmp ult i32 %12, 60000000, !dbg !11494
  %14 = select i1 %13, i32 1, i32 %11, !dbg !11494
  call void @llvm.dbg.value(metadata i32 %14, metadata !11477, metadata !DIExpression()), !dbg !11479
  br label %15, !dbg !11494

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !11479
  call void @llvm.dbg.value(metadata i32 %16, metadata !11477, metadata !DIExpression()), !dbg !11479
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11497
  %18 = icmp eq i32 %17, 32768, !dbg !11499
  br i1 %18, label %19, label %27, !dbg !11500

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !11501
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !11504
  br i1 %22, label %27, label %23, !dbg !11504

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !11505
  %25 = and i1 %24, %21, !dbg !11508
  %26 = select i1 %25, i32 1, i32 %16, !dbg !11508
  call void @llvm.dbg.value(metadata i32 %26, metadata !11477, metadata !DIExpression()), !dbg !11479
  br label %27, !dbg !11508

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !11509
  call void @llvm.dbg.value(metadata i32 %28, metadata !11477, metadata !DIExpression()), !dbg !11479
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11510
  %30 = icmp eq i32 %29, 16384, !dbg !11512
  br i1 %30, label %31, label %39, !dbg !11513

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !11514
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !11517
  br i1 %34, label %39, label %35, !dbg !11517

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !11518
  %37 = select i1 %36, i1 %33, i1 false, !dbg !11521
  %38 = select i1 %37, i32 1, i32 %28, !dbg !11521
  call void @llvm.dbg.value(metadata i32 %38, metadata !11477, metadata !DIExpression()), !dbg !11479
  br label %39, !dbg !11521

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !11509
  call void @llvm.dbg.value(metadata i32 %40, metadata !11477, metadata !DIExpression()), !dbg !11479
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #26, !dbg !11522
  call void @llvm.dbg.value(metadata i32 2, metadata !11475, metadata !DIExpression()), !dbg !11479
  br label %41, !dbg !11523

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !11509
  call void @llvm.dbg.value(metadata i32 %42, metadata !11475, metadata !DIExpression()), !dbg !11479
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !11524
  call void @llvm.dbg.value(metadata i32 %43, metadata !11476, metadata !DIExpression()), !dbg !11479
  %44 = add nsw i32 %42, -1, !dbg !11526
  call void @llvm.dbg.value(metadata i32 %44, metadata !11475, metadata !DIExpression()), !dbg !11479
  %45 = icmp ne i32 %43, %40, !dbg !11527
  %46 = icmp ne i32 %44, 0, !dbg !11528
  %47 = select i1 %45, i1 %46, i1 false, !dbg !11528
  br i1 %47, label %41, label %48, !dbg !11529, !llvm.loop !11530

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !11532
  call void @llvm.dbg.value(metadata i32 %51, metadata !11478, metadata !DIExpression()), !dbg !11479
  ret i32 %51, !dbg !11533
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !11534 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11536
  %2 = and i32 %1, 49152, !dbg !11536
  ret i32 %2, !dbg !11537
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !11538 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11540, metadata !DIExpression()), !dbg !11541
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11542
  %3 = and i32 %2, -8, !dbg !11542
  %4 = or i32 %3, %0, !dbg !11542
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11542
  ret void, !dbg !11543
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !11544 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11545
  %2 = and i32 %1, 7, !dbg !11545
  ret i32 %2, !dbg !11546
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !11547 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11565, metadata !DIExpression()), !dbg !11569
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11566, metadata !DIExpression()), !dbg !11569
  call void @llvm.dbg.value(metadata i32 0, metadata !11567, metadata !DIExpression()), !dbg !11569
  call void @llvm.dbg.value(metadata i32 0, metadata !11568, metadata !DIExpression()), !dbg !11569
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11570
  %4 = icmp eq i32 %3, 0, !dbg !11572
  br i1 %4, label %5, label %21, !dbg !11573

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !11574
  call void @llvm.dbg.value(metadata i32 %6, metadata !11568, metadata !DIExpression()), !dbg !11569
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.146() #26, !dbg !11576
  %8 = icmp eq i32 %7, 1, !dbg !11578
  br i1 %8, label %13, label %9, !dbg !11579

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.147() #26, !dbg !11580
  br label %10, !dbg !11582

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.146() #26, !dbg !11583
  %12 = icmp eq i32 %11, 1, !dbg !11584
  br i1 %12, label %13, label %10, !dbg !11582, !llvm.loop !11585

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11587
  %15 = load i32, i32* %14, align 4, !dbg !11587
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11588
  %17 = load i32, i32* %16, align 4, !dbg !11588
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11589
  %19 = load i32, i32* %18, align 4, !dbg !11589
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.148(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !11590
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !11591
  call void @llvm.dbg.value(metadata i32 %20, metadata !11567, metadata !DIExpression()), !dbg !11569
  br label %21, !dbg !11592

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11593
  call void @llvm.dbg.value(metadata i32 %22, metadata !11567, metadata !DIExpression()), !dbg !11569
  ret i32 %22, !dbg !11594
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !11595 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11599, metadata !DIExpression()), !dbg !11600
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.150() #26, !dbg !11601
  %2 = icmp ne i32 %1, 0, !dbg !11603
  call void @llvm.dbg.value(metadata i1 %2, metadata !11599, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11600
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !11604
  %4 = icmp ne i32 %3, 0, !dbg !11606
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11607
  %6 = zext i1 %5 to i32, !dbg !11607
  call void @llvm.dbg.value(metadata i32 %6, metadata !11599, metadata !DIExpression()), !dbg !11600
  ret i32 %6, !dbg !11608
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #7 !dbg !11609 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11613, metadata !DIExpression()), !dbg !11616
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11614, metadata !DIExpression()), !dbg !11616
  call void @llvm.dbg.value(metadata i32 0, metadata !11615, metadata !DIExpression()), !dbg !11616
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11617
  %4 = load i32, i32* %3, align 4, !dbg !11617
  %5 = and i32 %4, 63, !dbg !11618
  %6 = udiv i32 %0, %5, !dbg !11619
  call void @llvm.dbg.value(metadata i32 %6, metadata !11615, metadata !DIExpression()), !dbg !11616
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11620
  %8 = load i32, i32* %7, align 4, !dbg !11620
  %9 = and i32 %8, 511, !dbg !11621
  %10 = mul i32 %9, %6, !dbg !11622
  call void @llvm.dbg.value(metadata i32 %10, metadata !11615, metadata !DIExpression()), !dbg !11616
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11623
  %12 = load i32, i32* %11, align 4, !dbg !11623
  %13 = lshr i32 %12, 15, !dbg !11624
  %14 = and i32 %13, 131070, !dbg !11624
  %15 = add nuw nsw i32 %14, 2, !dbg !11624
  %16 = udiv i32 %10, %15, !dbg !11625
  call void @llvm.dbg.value(metadata i32 %16, metadata !11615, metadata !DIExpression()), !dbg !11616
  ret i32 %16, !dbg !11626
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.146() unnamed_addr #16 !dbg !11627 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11628
  %2 = lshr i32 %1, 1, !dbg !11629
  %3 = and i32 %2, 1, !dbg !11629
  ret i32 %3, !dbg !11630
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.147() unnamed_addr #15 !dbg !11631 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11632
  %2 = or i32 %1, 1, !dbg !11632
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11632
  ret void, !dbg !11633
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.148(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !11634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11636, metadata !DIExpression()), !dbg !11640
  call void @llvm.dbg.value(metadata i32 %1, metadata !11637, metadata !DIExpression()), !dbg !11640
  call void @llvm.dbg.value(metadata i32 %2, metadata !11638, metadata !DIExpression()), !dbg !11640
  call void @llvm.dbg.value(metadata i32 %3, metadata !11639, metadata !DIExpression()), !dbg !11640
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11641
  %6 = and i32 %5, -4227072, !dbg !11641
  %7 = or i32 %1, %0, !dbg !11641
  %8 = shl i32 %2, 6, !dbg !11641
  %9 = or i32 %7, %8, !dbg !11641
  %10 = or i32 %9, %6, !dbg !11641
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11641
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11642
  %12 = and i32 %11, -196609, !dbg !11642
  %13 = or i32 %12, %3, !dbg !11642
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11642
  ret void, !dbg !11643
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !11644 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11648, metadata !DIExpression()), !dbg !11652
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11649, metadata !DIExpression()), !dbg !11652
  call void @llvm.dbg.value(metadata i32 0, metadata !11650, metadata !DIExpression()), !dbg !11652
  call void @llvm.dbg.value(metadata i32 0, metadata !11651, metadata !DIExpression()), !dbg !11652
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11653
  %4 = load i32, i32* %3, align 4, !dbg !11653
  %5 = lshr i32 %4, 4, !dbg !11653
  %6 = and i32 %5, 15, !dbg !11653
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !11653
  %8 = load i8, i8* %7, align 1, !dbg !11653
  %9 = zext i8 %8 to i32, !dbg !11653
  %10 = lshr i32 %0, %9, !dbg !11653
  call void @llvm.dbg.value(metadata i32 %10, metadata !11651, metadata !DIExpression()), !dbg !11652
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !11654
  %12 = icmp ult i32 %11, %10, !dbg !11656
  br i1 %12, label %13, label %16, !dbg !11657

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11658
  call void @llvm.dbg.value(metadata i32 %14, metadata !11650, metadata !DIExpression()), !dbg !11652
  %15 = icmp eq i32 %14, 0, !dbg !11660
  br i1 %15, label %16, label %30, !dbg !11662

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.149() #26, !dbg !11663
  br label %17, !dbg !11665

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.150() #26, !dbg !11666
  %19 = icmp eq i32 %18, 1, !dbg !11667
  br i1 %19, label %20, label %17, !dbg !11665, !llvm.loop !11668

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !11670
  tail call fastcc void @LL_RCC_SetAHBPrescaler.151(i32 noundef %21) #26, !dbg !11671
  tail call fastcc void @LL_RCC_SetSysClkSource.152() #26, !dbg !11672
  br label %22, !dbg !11673

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.153() #26, !dbg !11674
  %24 = icmp eq i32 %23, 8, !dbg !11675
  br i1 %24, label %25, label %22, !dbg !11673, !llvm.loop !11676

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11678
  %27 = load i32, i32* %26, align 4, !dbg !11678
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.154(i32 noundef %27) #26, !dbg !11679
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11680
  %29 = load i32, i32* %28, align 4, !dbg !11680
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.155(i32 noundef %29) #26, !dbg !11681
  br label %30, !dbg !11682

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !11683
  %33 = icmp ugt i32 %32, %10, !dbg !11685
  br i1 %33, label %34, label %36, !dbg !11686

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11687
  call void @llvm.dbg.value(metadata i32 %35, metadata !11650, metadata !DIExpression()), !dbg !11652
  br label %36, !dbg !11689

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !11652
  call void @llvm.dbg.value(metadata i32 %37, metadata !11650, metadata !DIExpression()), !dbg !11652
  %38 = icmp eq i32 %37, 0, !dbg !11690
  br i1 %38, label %39, label %40, !dbg !11692

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !11693
  br label %40, !dbg !11695

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !11696
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.149() unnamed_addr #15 !dbg !11697 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11698
  %2 = or i32 %1, 16777216, !dbg !11698
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11698
  ret void, !dbg !11699
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.150() unnamed_addr #16 !dbg !11700 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11701
  %2 = lshr i32 %1, 25, !dbg !11702
  %3 = and i32 %2, 1, !dbg !11702
  ret i32 %3, !dbg !11703
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.151(i32 noundef %0) unnamed_addr #15 !dbg !11704 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11706, metadata !DIExpression()), !dbg !11707
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11708
  %3 = and i32 %2, -241, !dbg !11708
  %4 = or i32 %3, %0, !dbg !11708
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11708
  ret void, !dbg !11709
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.152() unnamed_addr #15 !dbg !11710 {
  call void @llvm.dbg.value(metadata i32 2, metadata !11712, metadata !DIExpression()), !dbg !11713
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11714
  %2 = and i32 %1, -4, !dbg !11714
  %3 = or i32 %2, 2, !dbg !11714
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11714
  ret void, !dbg !11715
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.153() unnamed_addr #16 !dbg !11716 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11717
  %2 = and i32 %1, 12, !dbg !11717
  ret i32 %2, !dbg !11718
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.154(i32 noundef %0) unnamed_addr #15 !dbg !11719 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11721, metadata !DIExpression()), !dbg !11722
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11723
  %3 = and i32 %2, -7169, !dbg !11723
  %4 = or i32 %3, %0, !dbg !11723
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11723
  ret void, !dbg !11724
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.155(i32 noundef %0) unnamed_addr #15 !dbg !11725 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11727, metadata !DIExpression()), !dbg !11728
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11729
  %3 = and i32 %2, -57345, !dbg !11729
  %4 = or i32 %3, %0, !dbg !11729
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11729
  ret void, !dbg !11730
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !11731 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11732
  %2 = lshr i32 %1, 27, !dbg !11733
  %3 = and i32 %2, 1, !dbg !11733
  ret i32 %3, !dbg !11734
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !11735 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11739, metadata !DIExpression()), !dbg !11745
  call void @llvm.dbg.value(metadata i32 %1, metadata !11740, metadata !DIExpression()), !dbg !11745
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !11741, metadata !DIExpression()), !dbg !11745
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !11742, metadata !DIExpression()), !dbg !11745
  call void @llvm.dbg.value(metadata i32 0, metadata !11743, metadata !DIExpression()), !dbg !11745
  call void @llvm.dbg.value(metadata i32 0, metadata !11744, metadata !DIExpression()), !dbg !11745
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11746
  %6 = icmp eq i32 %5, 0, !dbg !11748
  br i1 %6, label %7, label %27, !dbg !11749

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !11750
  call void @llvm.dbg.value(metadata i32 %8, metadata !11744, metadata !DIExpression()), !dbg !11745
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !11752
  %10 = icmp eq i32 %9, 1, !dbg !11754
  br i1 %10, label %19, label %11, !dbg !11755

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !11756
  br i1 %12, label %13, label %14, !dbg !11759

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !11760
  br label %15, !dbg !11762

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !11763
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !11765
  br label %16, !dbg !11766

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !11767
  %18 = icmp eq i32 %17, 1, !dbg !11768
  br i1 %18, label %19, label %16, !dbg !11766, !llvm.loop !11769

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !11771
  %21 = load i32, i32* %20, align 4, !dbg !11771
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !11772
  %23 = load i32, i32* %22, align 4, !dbg !11772
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !11773
  %25 = load i32, i32* %24, align 4, !dbg !11773
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.148(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !11774
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !11775
  call void @llvm.dbg.value(metadata i32 %26, metadata !11743, metadata !DIExpression()), !dbg !11745
  br label %27, !dbg !11776

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !11777
  call void @llvm.dbg.value(metadata i32 %28, metadata !11743, metadata !DIExpression()), !dbg !11745
  ret i32 %28, !dbg !11778
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !11779 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11780
  %2 = lshr i32 %1, 17, !dbg !11781
  %3 = and i32 %2, 1, !dbg !11781
  ret i32 %3, !dbg !11782
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !11783 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11784
  %2 = or i32 %1, 262144, !dbg !11784
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11784
  ret void, !dbg !11785
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !11786 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11787
  %2 = and i32 %1, -262145, !dbg !11787
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11787
  ret void, !dbg !11788
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !11789 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11790
  %2 = or i32 %1, 65536, !dbg !11790
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11790
  ret void, !dbg !11791
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !11792 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11795, metadata !DIExpression()), !dbg !11811
  call void @llvm.dbg.value(metadata i32 undef, metadata !11795, metadata !DIExpression()), !dbg !11811
  call void @llvm.dbg.value(metadata i32 undef, metadata !11795, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11811
  ret void, !dbg !11812
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11813 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11817, metadata !DIExpression()), !dbg !11819
  %2 = icmp eq i8* %0, null, !dbg !11820
  br i1 %2, label %29, label %3, !dbg !11822

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11823
  %5 = icmp eq i8 %4, 0, !dbg !11824
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11825
  br i1 %6, label %29, label %8, !dbg !11825

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11818, metadata !DIExpression()), !dbg !11819
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11826

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11818, metadata !DIExpression()), !dbg !11819
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !11828
  br i1 %10, label %11, label %15, !dbg !11833

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11834
  %13 = load i8*, i8** %12, align 4, !dbg !11834
  %14 = icmp eq i8* %13, %0, !dbg !11835
  br i1 %14, label %29, label %15, !dbg !11836

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11837
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11818, metadata !DIExpression()), !dbg !11819
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11838
  br i1 %17, label %7, label %8, !dbg !11839, !llvm.loop !11840

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11818, metadata !DIExpression()), !dbg !11819
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !11842
  br i1 %20, label %21, label %26, !dbg !11846

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11847
  %23 = load i8*, i8** %22, align 4, !dbg !11847
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !11848
  %25 = icmp eq i32 %24, 0, !dbg !11849
  br i1 %25, label %29, label %26, !dbg !11850

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11851
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11818, metadata !DIExpression()), !dbg !11819
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11852
  br i1 %28, label %29, label %18, !dbg !11826, !llvm.loop !11853

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11819
  ret %struct.device* %30, !dbg !11855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #7 !dbg !11856 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11860, metadata !DIExpression()), !dbg !11861
  %2 = icmp eq %struct.device* %0, null, !dbg !11862
  br i1 %2, label %14, label %3, !dbg !11864

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11865
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11865
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11866
  %7 = load i8, i8* %6, align 1, !dbg !11866
  %8 = and i8 %7, 1, !dbg !11866
  %9 = icmp eq i8 %8, 0, !dbg !11866
  br i1 %9, label %14, label %10, !dbg !11867

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11868
  %12 = load i8, i8* %11, align 1, !dbg !11868
  %13 = icmp eq i8 %12, 0, !dbg !11869
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11861
  ret i1 %15, !dbg !11870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #6 !dbg !11871 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11876, metadata !DIExpression()), !dbg !11877
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11878
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11879
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11880 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11888, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11889, metadata !DIExpression()), !dbg !11893
  call void @llvm.dbg.value(metadata i8* %2, metadata !11890, metadata !DIExpression()), !dbg !11893
  %5 = bitcast i32* %4 to i8*, !dbg !11894
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11894
  call void @llvm.dbg.value(metadata i32 0, metadata !11891, metadata !DIExpression()), !dbg !11893
  store i32 0, i32* %4, align 4, !dbg !11895
  call void @llvm.dbg.value(metadata i32* %4, metadata !11891, metadata !DIExpression(DW_OP_deref)), !dbg !11893
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11896
  call void @llvm.dbg.value(metadata i16* %6, metadata !11892, metadata !DIExpression()), !dbg !11893
  %7 = load i32, i32* %4, align 4, !dbg !11897
  call void @llvm.dbg.value(metadata i32 %7, metadata !11891, metadata !DIExpression()), !dbg !11893
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11898
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11899
  ret i32 %8, !dbg !11900
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !11901 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11905, metadata !DIExpression()), !dbg !11911
  call void @llvm.dbg.value(metadata i32* %1, metadata !11906, metadata !DIExpression()), !dbg !11911
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11912
  %4 = load i16*, i16** %3, align 4, !dbg !11912
  call void @llvm.dbg.value(metadata i16* %4, metadata !11907, metadata !DIExpression()), !dbg !11911
  %5 = icmp eq i16* %4, null, !dbg !11913
  br i1 %5, label %14, label %6, !dbg !11914

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11915
  call void @llvm.dbg.value(metadata i32 %7, metadata !11908, metadata !DIExpression()), !dbg !11915
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11916
  %9 = load i16, i16* %8, align 2, !dbg !11916
  %10 = add i16 %9, -32767, !dbg !11917
  %11 = icmp ult i16 %10, 2, !dbg !11917
  %12 = add i32 %7, 1, !dbg !11918
  call void @llvm.dbg.value(metadata i32 %12, metadata !11908, metadata !DIExpression()), !dbg !11915
  br i1 %11, label %13, label %6, !dbg !11917, !llvm.loop !11920

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11923
  br label %14, !dbg !11924

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11925
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11926 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11930, metadata !DIExpression()), !dbg !11941
  call void @llvm.dbg.value(metadata i32 %1, metadata !11931, metadata !DIExpression()), !dbg !11941
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11932, metadata !DIExpression()), !dbg !11941
  call void @llvm.dbg.value(metadata i8* %3, metadata !11933, metadata !DIExpression()), !dbg !11941
  call void @llvm.dbg.value(metadata i32 0, metadata !11934, metadata !DIExpression()), !dbg !11942
  %5 = icmp eq i32 %1, 0, !dbg !11943
  br i1 %5, label %16, label %8, !dbg !11944

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11934, metadata !DIExpression()), !dbg !11942
  %7 = icmp eq i32 %15, %1, !dbg !11943
  br i1 %7, label %16, label %8, !dbg !11944, !llvm.loop !11945

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11934, metadata !DIExpression()), !dbg !11942
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11947
  %11 = load i16, i16* %10, align 2, !dbg !11947
  call void @llvm.dbg.value(metadata i16 %11, metadata !11936, metadata !DIExpression()), !dbg !11948
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !11949
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11939, metadata !DIExpression()), !dbg !11948
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !11950
  call void @llvm.dbg.value(metadata i32 %13, metadata !11940, metadata !DIExpression()), !dbg !11948
  %14 = icmp slt i32 %13, 0, !dbg !11951
  %15 = add nuw i32 %9, 1, !dbg !11953
  call void @llvm.dbg.value(metadata i32 %15, metadata !11934, metadata !DIExpression()), !dbg !11942
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !11955 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11959, metadata !DIExpression()), !dbg !11962
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11960, metadata !DIExpression()), !dbg !11962
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11961, metadata !DIExpression()), !dbg !11962
  %2 = sext i16 %0 to i32, !dbg !11963
  %3 = icmp slt i16 %0, 1, !dbg !11965
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11966
  %6 = add nsw i32 %2, -1, !dbg !11966
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11966
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11966
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11960, metadata !DIExpression()), !dbg !11962
  ret %struct.device* %8, !dbg !11967
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11968 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11970, metadata !DIExpression()), !dbg !11975
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11971, metadata !DIExpression()), !dbg !11975
  call void @llvm.dbg.value(metadata i8* %2, metadata !11972, metadata !DIExpression()), !dbg !11975
  %5 = bitcast i32* %4 to i8*, !dbg !11976
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11976
  call void @llvm.dbg.value(metadata i32 0, metadata !11973, metadata !DIExpression()), !dbg !11975
  store i32 0, i32* %4, align 4, !dbg !11977
  call void @llvm.dbg.value(metadata i32* %4, metadata !11973, metadata !DIExpression(DW_OP_deref)), !dbg !11975
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11978
  call void @llvm.dbg.value(metadata i16* %6, metadata !11974, metadata !DIExpression()), !dbg !11975
  %7 = load i32, i32* %4, align 4, !dbg !11979
  call void @llvm.dbg.value(metadata i32 %7, metadata !11973, metadata !DIExpression()), !dbg !11975
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11980
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11981
  ret i32 %8, !dbg !11982
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !11983 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11985, metadata !DIExpression()), !dbg !11990
  call void @llvm.dbg.value(metadata i32* %1, metadata !11986, metadata !DIExpression()), !dbg !11990
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11991
  %4 = load i16*, i16** %3, align 4, !dbg !11991
  call void @llvm.dbg.value(metadata i16* %4, metadata !11987, metadata !DIExpression()), !dbg !11990
  call void @llvm.dbg.value(metadata i32 0, metadata !11988, metadata !DIExpression()), !dbg !11990
  call void @llvm.dbg.value(metadata i32 0, metadata !11989, metadata !DIExpression()), !dbg !11990
  %5 = icmp eq i16* %4, null, !dbg !11992
  br i1 %5, label %22, label %6, !dbg !11994

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11988, metadata !DIExpression()), !dbg !11990
  call void @llvm.dbg.value(metadata i16* %8, metadata !11987, metadata !DIExpression()), !dbg !11990
  %9 = load i16, i16* %8, align 2, !dbg !11995
  %10 = icmp eq i16 %9, -32768, !dbg !11999
  call void @llvm.dbg.value(metadata i32 undef, metadata !11988, metadata !DIExpression()), !dbg !11990
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12000
  call void @llvm.dbg.value(metadata i16* %11, metadata !11987, metadata !DIExpression()), !dbg !11990
  %12 = zext i1 %10 to i32, !dbg !12001
  %13 = add i32 %7, %12, !dbg !12001
  call void @llvm.dbg.value(metadata i32 %13, metadata !11988, metadata !DIExpression()), !dbg !11990
  %14 = icmp eq i32 %13, 2, !dbg !12002
  br i1 %14, label %15, label %6, !dbg !12003

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !11990
  call void @llvm.dbg.value(metadata i32 %16, metadata !11989, metadata !DIExpression()), !dbg !11990
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12004
  %18 = load i16, i16* %17, align 2, !dbg !12004
  %19 = icmp eq i16 %18, 32767, !dbg !12005
  %20 = add i32 %16, 1, !dbg !12006
  call void @llvm.dbg.value(metadata i32 %20, metadata !11989, metadata !DIExpression()), !dbg !11990
  br i1 %19, label %21, label %15, !dbg !12008, !llvm.loop !12009

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12011
  br label %22, !dbg !12012

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12013
  call void @llvm.dbg.value(metadata i16* %23, metadata !11987, metadata !DIExpression()), !dbg !11990
  ret i16* %23, !dbg !12014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #7 !dbg !12015 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12018
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12019
  ret i32* %2, !dbg !12020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !12021 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12171, metadata !DIExpression()), !dbg !12174
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12172, metadata !DIExpression()), !dbg !12174
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12173, metadata !DIExpression()), !dbg !12174
  ret void, !dbg !12175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12180, metadata !DIExpression()), !dbg !12182
  call void @llvm.dbg.value(metadata i32 %1, metadata !12181, metadata !DIExpression()), !dbg !12182
  ret void, !dbg !12183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12184 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12188, metadata !DIExpression()), !dbg !12190
  call void @llvm.dbg.value(metadata i32 %1, metadata !12189, metadata !DIExpression()), !dbg !12190
  ret void, !dbg !12191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12196, metadata !DIExpression()), !dbg !12198
  call void @llvm.dbg.value(metadata i8* %1, metadata !12197, metadata !DIExpression()), !dbg !12198
  ret i32 -134, !dbg !12199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12200 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12204, metadata !DIExpression()), !dbg !12206
  call void @llvm.dbg.value(metadata i8* %1, metadata !12205, metadata !DIExpression()), !dbg !12206
  ret i32 -134, !dbg !12207
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #5 !dbg !12208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12211, metadata !DIExpression()), !dbg !12212
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12213, !srcloc !12219
  call void @llvm.dbg.value(metadata i32 undef, metadata !12216, metadata !DIExpression()) #25, !dbg !12220
  call void @llvm.dbg.value(metadata i32 undef, metadata !12217, metadata !DIExpression()) #25, !dbg !12220
  br label %3, !dbg !12221

3:                                                ; preds = %3, %1
  br label %3, !dbg !12222, !llvm.loop !12225
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12232, metadata !DIExpression()), !dbg !12234
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12233, metadata !DIExpression()), !dbg !12234
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12235
  unreachable, !dbg !12235
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #5 !dbg !12236 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12238, metadata !DIExpression()), !dbg !12239
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12240
  unreachable, !dbg !12240
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12241 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12243, metadata !DIExpression()), !dbg !12247
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12244, metadata !DIExpression()), !dbg !12247
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12248, !srcloc !12219
  call void @llvm.dbg.value(metadata i32 undef, metadata !12216, metadata !DIExpression()) #25, !dbg !12250
  call void @llvm.dbg.value(metadata i32 undef, metadata !12217, metadata !DIExpression()) #25, !dbg !12250
  call void @llvm.dbg.value(metadata i32 undef, metadata !12245, metadata !DIExpression()), !dbg !12247
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12246, metadata !DIExpression()), !dbg !12247
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !12251
  %4 = icmp eq i32 %0, 4, !dbg !12252
  br i1 %4, label %5, label %6, !dbg !12257

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.162, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.163, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.164, i32 0, i32 0), i32 noundef 148) #27, !dbg !12258
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3.165, i32 0, i32 0)) #27, !dbg !12258
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.164, i32 0, i32 0), i32 noundef 148) #27, !dbg !12258
  unreachable, !dbg !12258

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !12248
  call void @llvm.dbg.value(metadata i32 %7, metadata !12216, metadata !DIExpression()) #25, !dbg !12250
  call void @llvm.dbg.value(metadata i32 %7, metadata !12245, metadata !DIExpression()), !dbg !12247
  %8 = tail call fastcc %struct.k_thread* @k_current_get.166() #28, !dbg !12260
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !12246, metadata !DIExpression()), !dbg !12247
  call void @llvm.dbg.value(metadata i32 undef, metadata !12261, metadata !DIExpression()) #25, !dbg !12264
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !12266, !srcloc !12267
  tail call fastcc void @k_thread_abort.167(%struct.k_thread* noundef %8) #26, !dbg !12268
  ret void, !dbg !12271
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.166() unnamed_addr #10 !dbg !12272 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.168() #28, !dbg !12276
  ret %struct.k_thread* %1, !dbg !12277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.167(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12278 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12282, metadata !DIExpression()), !dbg !12283
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12284, !srcloc !12286
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !12287
  ret void, !dbg !12288
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.168() unnamed_addr #10 !dbg !12289 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12290, !srcloc !12292
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !12293
  ret %struct.k_thread* %1, !dbg !12294
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12295 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12299, metadata !DIExpression()), !dbg !12302
  call void @llvm.dbg.value(metadata i32 %1, metadata !12300, metadata !DIExpression()), !dbg !12302
  call void @llvm.dbg.value(metadata i32 %2, metadata !12301, metadata !DIExpression()), !dbg !12302
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !12303
  ret void, !dbg !12304
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12305 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12309, metadata !DIExpression()), !dbg !12312
  call void @llvm.dbg.value(metadata i8* %1, metadata !12310, metadata !DIExpression()), !dbg !12312
  call void @llvm.dbg.value(metadata i32 %2, metadata !12311, metadata !DIExpression()), !dbg !12312
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !12313
  ret void, !dbg !12314
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12315 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !12316
  ret void, !dbg !12317
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12320, metadata !DIExpression()), !dbg !12321
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !12322
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12323
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12324
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12325
  %4 = trunc i32 %0 to i8, !dbg !12326
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12327
  store i8 %4, i8* %5, align 4, !dbg !12328
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12329
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !12330
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12331
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12332
  store i8* %8, i8** %9, align 4, !dbg !12333
  ret void, !dbg !12334
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12337, metadata !DIExpression()), !dbg !12343
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12344
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12338, metadata !DIExpression()), !dbg !12343
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12345
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12339, metadata !DIExpression()), !dbg !12343
  call void @llvm.dbg.value(metadata i8* null, metadata !12342, metadata !DIExpression()), !dbg !12343
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12346
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12347
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !12348
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !12349
  ret void, !dbg !12350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !12351 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12355, metadata !DIExpression()), !dbg !12356
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12357
  ret i8* %2, !dbg !12358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !12359 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12364, metadata !DIExpression()), !dbg !12365
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12366
  %3 = load i8, i8* %2, align 1, !dbg !12367
  %4 = and i8 %3, -5, !dbg !12367
  store i8 %4, i8* %2, align 1, !dbg !12367
  ret void, !dbg !12368
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #5 !dbg !12369 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !12372
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !12373
  %3 = ptrtoint i8* %2 to i32, !dbg !12382
  %4 = add i32 %3, 2048, !dbg !12383
  call void @llvm.dbg.value(metadata i32 %4, metadata !12377, metadata !DIExpression()) #25, !dbg !12384
  call void @llvm.dbg.value(metadata i32 %4, metadata !12385, metadata !DIExpression()) #25, !dbg !12388
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !12390, !srcloc !12391
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12392
  %6 = or i32 %5, 512, !dbg !12392
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12392
  tail call fastcc void @__NVIC_SetPriority.175(i32 noundef -2, i32 noundef 255) #27, !dbg !12393
  tail call fastcc void @__NVIC_SetPriority.175(i32 noundef -5, i32 noundef 0) #27, !dbg !12396
  tail call fastcc void @__NVIC_SetPriority.175(i32 noundef -12, i32 noundef 0) #27, !dbg !12397
  tail call fastcc void @__NVIC_SetPriority.175(i32 noundef -11, i32 noundef 0) #27, !dbg !12398
  tail call fastcc void @__NVIC_SetPriority.175(i32 noundef -10, i32 noundef 0) #27, !dbg !12399
  tail call fastcc void @__NVIC_SetPriority.175(i32 noundef -4, i32 noundef 0) #27, !dbg !12400
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12401
  %8 = or i32 %7, 458752, !dbg !12401
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12401
  tail call void @z_arm_fault_init() #27, !dbg !12402
  tail call void @z_arm_cpu_idle_init() #27, !dbg !12403
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12404
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12407
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !12408
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !12409
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12410
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !12410
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12371, metadata !DIExpression()), !dbg !12411
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !12412
  call void @z_device_state_init() #27, !dbg !12413
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !12414
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !12415
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !12416
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !12417
  unreachable, !dbg !12417
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2131, metadata !DIExpression()), !dbg !12418
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12419
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12419
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2132, metadata !DIExpression()), !dbg !12418
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2132, metadata !DIExpression()), !dbg !12418
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12420
  br i1 %7, label %8, label %35, !dbg !12421

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2132, metadata !DIExpression()), !dbg !12418
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12422
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12422
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2142, metadata !DIExpression()), !dbg !12423
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12424
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12424
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !12425
  call void @llvm.dbg.value(metadata i32 %14, metadata !2146, metadata !DIExpression()), !dbg !12423
  %15 = icmp eq %struct.device* %11, null, !dbg !12426
  br i1 %15, label %32, label %16, !dbg !12428

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12429
  br i1 %17, label %26, label %18, !dbg !12432

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12433
  call void @llvm.dbg.value(metadata i32 %19, metadata !2146, metadata !DIExpression()), !dbg !12423
  %20 = icmp ult i32 %19, 255, !dbg !12435
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12435
  call void @llvm.dbg.value(metadata i32 %21, metadata !2146, metadata !DIExpression()), !dbg !12423
  %22 = trunc i32 %21 to i8, !dbg !12436
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12437
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12437
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12438
  store i8 %22, i8* %25, align 1, !dbg !12439
  br label %26, !dbg !12440

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12441
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12441
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12442
  %30 = load i8, i8* %29, align 1, !dbg !12443
  %31 = or i8 %30, 1, !dbg !12443
  store i8 %31, i8* %29, align 1, !dbg !12443
  br label %32, !dbg !12444

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12445
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2132, metadata !DIExpression()), !dbg !12418
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12420
  br i1 %34, label %8, label %35, !dbg !12421, !llvm.loop !12446

35:                                               ; preds = %32, %1
  ret void, !dbg !12448
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.175(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12449 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12451, metadata !DIExpression()), !dbg !12453
  call void @llvm.dbg.value(metadata i32 %1, metadata !12452, metadata !DIExpression()), !dbg !12453
  %3 = trunc i32 %1 to i8, !dbg !12454
  %4 = shl i8 %3, 4, !dbg !12454
  %5 = and i32 %0, 15, !dbg !12457
  %6 = add nsw i32 %5, -4, !dbg !12458
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12459
  store volatile i8 %4, i8* %7, align 1, !dbg !12460
  ret void, !dbg !12461
}

; Function Attrs: optsize
declare !dbg !12462 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12463 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12466, metadata !DIExpression()), !dbg !12467
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12468
  store i8 1, i8* %2, align 1, !dbg !12469
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12470
  store i8 1, i8* %3, align 4, !dbg !12471
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12472
  store i32 0, i32* %4, align 4, !dbg !12473
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12474
  store i32 0, i32* %5, align 4, !dbg !12475
  tail call void @k_thread_system_pool_assign(%struct.k_thread* noundef %0) #27, !dbg !12476
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12477
  ret void, !dbg !12478
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12479 {
  tail call void @z_sched_init() #27, !dbg !12484
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12485
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.176, i32 0, i32 0)) #27, !dbg !12486
  call void @llvm.dbg.value(metadata i8* %1, metadata !12483, metadata !DIExpression()), !dbg !12487
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12488
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !12489
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !12490
  ret i8* %1, !dbg !12491
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #5 !dbg !12492 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12496, metadata !DIExpression()), !dbg !12497
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !12498
  unreachable, !dbg !12499
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12500 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12502, metadata !DIExpression()), !dbg !12505
  call void @llvm.dbg.value(metadata i8* %1, metadata !12503, metadata !DIExpression()), !dbg !12505
  call void @llvm.dbg.value(metadata i8* %2, metadata !12504, metadata !DIExpression()), !dbg !12505
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12506
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !12507
  tail call void @boot_banner() #27, !dbg !12508
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !12509
  tail call void @z_init_static_threads() #27, !dbg !12510
  tail call void @main() #27, !dbg !12511
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12512
  %5 = and i8 %4, -2, !dbg !12512
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12512
  ret void, !dbg !12513
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !12514 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12524, metadata !DIExpression()), !dbg !12526
  call void @llvm.dbg.value(metadata i8* %1, metadata !12525, metadata !DIExpression()), !dbg !12526
  ret void, !dbg !12527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !12528 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12530, metadata !DIExpression()), !dbg !12532
  call void @llvm.dbg.value(metadata i8* %1, metadata !12531, metadata !DIExpression()), !dbg !12532
  ret void, !dbg !12533
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12534 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !12535, !srcloc !12542
  call void @llvm.dbg.value(metadata i32 %1, metadata !12538, metadata !DIExpression()) #25, !dbg !12543
  %2 = icmp ne i32 %1, 0, !dbg !12544
  ret i1 %2, !dbg !12545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !12546 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12547
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12548
  %3 = load i8, i8* %2, align 4, !dbg !12549
  %4 = or i8 %3, 1, !dbg !12549
  store i8 %4, i8* %2, align 4, !dbg !12549
  ret void, !dbg !12550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !12551 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12552
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12553
  %3 = load i8, i8* %2, align 4, !dbg !12554
  %4 = and i8 %3, -2, !dbg !12554
  store i8 %4, i8* %2, align 4, !dbg !12554
  ret void, !dbg !12555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #7 !dbg !12556 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12557
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12558
  %3 = load i8, i8* %2, align 4, !dbg !12558
  %4 = and i8 %3, 1, !dbg !12559
  %5 = icmp ne i8 %4, 0, !dbg !12560
  ret i1 %5, !dbg !12561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12562 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12566, metadata !DIExpression()), !dbg !12568
  call void @llvm.dbg.value(metadata i8* %1, metadata !12567, metadata !DIExpression()), !dbg !12568
  ret i32 -88, !dbg !12569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !12570 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12574, metadata !DIExpression()), !dbg !12575
  ret i8* null, !dbg !12576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #4 !dbg !12577 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12581, metadata !DIExpression()), !dbg !12584
  call void @llvm.dbg.value(metadata i8* %1, metadata !12582, metadata !DIExpression()), !dbg !12584
  call void @llvm.dbg.value(metadata i32 %2, metadata !12583, metadata !DIExpression()), !dbg !12584
  ret i32 -88, !dbg !12585
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2155 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2271, metadata !DIExpression()), !dbg !12586
  call void @llvm.dbg.value(metadata i8* %1, metadata !2272, metadata !DIExpression()), !dbg !12586
  call void @llvm.dbg.value(metadata i32 %2, metadata !2273, metadata !DIExpression()), !dbg !12586
  call void @llvm.dbg.value(metadata i32 0, metadata !2274, metadata !DIExpression()), !dbg !12586
  call void @llvm.dbg.value(metadata i8 undef, metadata !2276, metadata !DIExpression()), !dbg !12586
  %4 = icmp eq i8* %1, null, !dbg !12587
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12589
  br i1 %6, label %46, label %7, !dbg !12589

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12590
  %9 = load i8, i8* %8, align 1, !dbg !12590
  call void @llvm.dbg.value(metadata i8 %9, metadata !2276, metadata !DIExpression()), !dbg !12586
  %10 = add i32 %2, -1, !dbg !12591
  call void @llvm.dbg.value(metadata i32 %10, metadata !2273, metadata !DIExpression()), !dbg !12586
  call void @llvm.dbg.value(metadata i8 0, metadata !2277, metadata !DIExpression()), !dbg !12592
  call void @llvm.dbg.value(metadata i8 %9, metadata !2276, metadata !DIExpression()), !dbg !12586
  call void @llvm.dbg.value(metadata i32 0, metadata !2274, metadata !DIExpression()), !dbg !12586
  %11 = icmp eq i8 %9, 0, !dbg !12593
  br i1 %11, label %12, label %15, !dbg !12595

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12596
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12597
  store i8 0, i8* %14, align 1, !dbg !12598
  br label %46, !dbg !12599

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2277, metadata !DIExpression()), !dbg !12592
  call void @llvm.dbg.value(metadata i8 %17, metadata !2276, metadata !DIExpression()), !dbg !12586
  call void @llvm.dbg.value(metadata i32 %18, metadata !2274, metadata !DIExpression()), !dbg !12586
  %19 = zext i8 %17 to i32, !dbg !12600
  %20 = zext i8 %16 to i32, !dbg !12601
  %21 = shl nuw i32 1, %20, !dbg !12601
  call void @llvm.dbg.value(metadata i32 %21, metadata !2275, metadata !DIExpression()), !dbg !12586
  %22 = and i32 %21, %19, !dbg !12603
  %23 = icmp eq i32 %22, 0, !dbg !12605
  br i1 %23, label %42, label %24, !dbg !12606

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12607
  %26 = sub i32 %10, %18, !dbg !12608
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12609
  %28 = load i8*, i8** %27, align 4, !dbg !12609
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12610
  %30 = load i32, i32* %29, align 4, !dbg !12610
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !12611
  %32 = add i32 %31, %18, !dbg !12612
  call void @llvm.dbg.value(metadata i32 %32, metadata !2274, metadata !DIExpression()), !dbg !12586
  %33 = trunc i32 %21 to i8, !dbg !12613
  %34 = xor i8 %33, -1, !dbg !12613
  %35 = and i8 %17, %34, !dbg !12613
  call void @llvm.dbg.value(metadata i8 %35, metadata !2276, metadata !DIExpression()), !dbg !12586
  %36 = icmp eq i8 %35, 0, !dbg !12614
  br i1 %36, label %12, label %37, !dbg !12616

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12617
  %39 = sub i32 %10, %32, !dbg !12619
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.177, i32 0, i32 0), i32 noundef 1) #26, !dbg !12620
  %41 = add i32 %40, %32, !dbg !12621
  call void @llvm.dbg.value(metadata i32 %41, metadata !2274, metadata !DIExpression()), !dbg !12586
  br label %42, !dbg !12622

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12586
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12586
  call void @llvm.dbg.value(metadata i8 %44, metadata !2276, metadata !DIExpression()), !dbg !12586
  call void @llvm.dbg.value(metadata i32 %43, metadata !2274, metadata !DIExpression()), !dbg !12586
  %45 = add i8 %16, 1, !dbg !12623
  call void @llvm.dbg.value(metadata i8 %45, metadata !2277, metadata !DIExpression()), !dbg !12592
  br label %15, !dbg !12595

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.178, i32 0, i32 0), %3 ], !dbg !12586
  ret i8* %47, !dbg !12624
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12625 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12629, metadata !DIExpression()), !dbg !12634
  call void @llvm.dbg.value(metadata i32 %1, metadata !12630, metadata !DIExpression()), !dbg !12634
  call void @llvm.dbg.value(metadata i8* %2, metadata !12631, metadata !DIExpression()), !dbg !12634
  call void @llvm.dbg.value(metadata i32 %3, metadata !12632, metadata !DIExpression()), !dbg !12634
  %5 = icmp ult i32 %1, %3, !dbg !12635
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12635
  call void @llvm.dbg.value(metadata i32 %6, metadata !12633, metadata !DIExpression()), !dbg !12634
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !12636
  ret i32 %6, !dbg !12637
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12638 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12642, metadata !DIExpression()), !dbg !12643
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !12644
  ret void, !dbg !12645
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !12646 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12655, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12656, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i32 %2, metadata !12657, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12658, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i8* %4, metadata !12659, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i8* %5, metadata !12660, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i8* %6, metadata !12661, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i32 %7, metadata !12662, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i32 %8, metadata !12663, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i8* undef, metadata !12664, metadata !DIExpression()), !dbg !12666
  %11 = icmp eq i32 %7, 15, !dbg !12667
  br i1 %11, label %12, label %15, !dbg !12667

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !12667
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #26, !dbg !12667
  br i1 %14, label %19, label %18, !dbg !12667

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !12667
  %17 = icmp ult i32 %16, 31, !dbg !12667
  br i1 %17, label %19, label %18, !dbg !12667

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.188, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.189, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.190, i32 0, i32 0), i32 noundef 536) #27, !dbg !12671
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.191, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #27, !dbg !12671
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.190, i32 0, i32 0), i32 noundef 536) #27, !dbg !12671
  unreachable, !dbg !12671

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12673
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #26, !dbg !12674
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12675
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !12676
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !12677
  call void @llvm.dbg.value(metadata i8* %22, metadata !12665, metadata !DIExpression()), !dbg !12666
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !12678
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12679
  store i8* null, i8** %23, align 4, !dbg !12680
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12681
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !12681
  br i1 %25, label %29, label %26, !dbg !12683

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 6, !dbg !12684
  %28 = load %struct.k_heap*, %struct.k_heap** %27, align 8, !dbg !12684
  br label %29, !dbg !12685

29:                                               ; preds = %19, %26
  %30 = phi %struct.k_heap* [ %28, %26 ], [ null, %19 ], !dbg !12666
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12686
  store %struct.k_heap* %30, %struct.k_heap** %31, align 8, !dbg !12688
  ret i8* %22, !dbg !12689
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !12690 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12694, metadata !DIExpression()), !dbg !12695
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !12696
  ret i1 %2, !dbg !12697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !12698 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !12703, metadata !DIExpression()), !dbg !12704
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !12705
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !12706
  ret void, !dbg !12707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #6 !dbg !12708 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12713, metadata !DIExpression()), !dbg !12717
  call void @llvm.dbg.value(metadata i32 %1, metadata !12714, metadata !DIExpression()), !dbg !12717
  call void @llvm.dbg.value(metadata i32 %2, metadata !12715, metadata !DIExpression()), !dbg !12717
  call void @llvm.dbg.value(metadata i32 %3, metadata !12716, metadata !DIExpression()), !dbg !12717
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12718
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !12719
  %6 = trunc i32 %3 to i8, !dbg !12720
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12721
  store i8 %6, i8* %7, align 4, !dbg !12722
  %8 = trunc i32 %2 to i8, !dbg !12723
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12724
  store i8 %8, i8* %9, align 1, !dbg !12725
  %10 = trunc i32 %1 to i8, !dbg !12726
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12727
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12727
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12727
  store i8 %10, i8* %13, align 2, !dbg !12728
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12729
  store i8 0, i8* %14, align 1, !dbg !12730
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !12731
  ret void, !dbg !12732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #6 !dbg !12733 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12737, metadata !DIExpression()), !dbg !12745
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12738, metadata !DIExpression()), !dbg !12745
  call void @llvm.dbg.value(metadata i32 %2, metadata !12739, metadata !DIExpression()), !dbg !12745
  call void @llvm.dbg.value(metadata i32 0, metadata !12744, metadata !DIExpression()), !dbg !12745
  %4 = add i32 %2, 7, !dbg !12746
  %5 = and i32 %4, -8, !dbg !12746
  %6 = add i32 %5, 64, !dbg !12746
  call void @llvm.dbg.value(metadata i32 %6, metadata !12740, metadata !DIExpression()), !dbg !12745
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.192(%struct.z_thread_stack_element* noundef %1) #26, !dbg !12748
  call void @llvm.dbg.value(metadata i8* %7, metadata !12743, metadata !DIExpression()), !dbg !12745
  call void @llvm.dbg.value(metadata i32 %5, metadata !12741, metadata !DIExpression()), !dbg !12745
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !12749
  call void @llvm.dbg.value(metadata i8* %8, metadata !12742, metadata !DIExpression()), !dbg !12745
  call void @llvm.dbg.value(metadata i32 0, metadata !12744, metadata !DIExpression()), !dbg !12745
  %9 = ptrtoint i8* %7 to i32, !dbg !12750
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12751
  store i32 %9, i32* %10, align 4, !dbg !12752
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12753
  store i32 %5, i32* %11, align 4, !dbg !12754
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !12755
  store i32 0, i32* %12, align 4, !dbg !12756
  call void @llvm.dbg.value(metadata i8* %8, metadata !12742, metadata !DIExpression()), !dbg !12745
  ret i8* %8, !dbg !12757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.192(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !12758 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12762, metadata !DIExpression()), !dbg !12763
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12764
  ret i8* %2, !dbg !12765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !12766 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12771, metadata !DIExpression()), !dbg !12772
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12773
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !12774
  ret void, !dbg !12775
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !12776 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12778, metadata !DIExpression()), !dbg !12779
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12780
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !12781
  ret void, !dbg !12782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !12783 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12787, metadata !DIExpression()), !dbg !12788
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12789
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12790
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12791
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12792
  ret void, !dbg !12793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !12794 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12799, metadata !DIExpression()), !dbg !12800
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12801
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12802
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12803
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12804
  ret void, !dbg !12805
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12806 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12823, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12814, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12815, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata i32 %2, metadata !12816, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12817, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata i8* %4, metadata !12818, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata i8* %5, metadata !12819, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata i8* %6, metadata !12820, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata i32 %7, metadata !12821, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.value(metadata i32 %8, metadata !12822, metadata !DIExpression()), !dbg !12824
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !12825, !srcloc !12542
  call void @llvm.dbg.value(metadata i32 %11, metadata !12538, metadata !DIExpression()) #25, !dbg !12830
  %12 = icmp eq i32 %11, 0, !dbg !12831
  br i1 %12, label %14, label %13, !dbg !12832

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.188, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.190, i32 0, i32 0), i32 noundef 647) #27, !dbg !12833
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14, i32 0, i32 0)) #27, !dbg !12833
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.190, i32 0, i32 0), i32 noundef 647) #27, !dbg !12833
  unreachable, !dbg !12833

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !12823, metadata !DIExpression()), !dbg !12824
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !12835
  %17 = icmp eq i64 %15, -1, !dbg !12836
  br i1 %17, label %19, label %18, !dbg !12838

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !12839
  br label %19, !dbg !12841

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !12842
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12843 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12848, metadata !DIExpression()), !dbg !12849
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12847, metadata !DIExpression()), !dbg !12849
  %4 = icmp eq i64 %3, 0, !dbg !12850
  br i1 %4, label %5, label %6, !dbg !12852

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12853
  br label %7, !dbg !12855

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !12856
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12858
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12859 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12863, metadata !DIExpression()), !dbg !12864
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12865, !srcloc !12867
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12868
  ret void, !dbg !12869
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12870 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12873, metadata !DIExpression()), !dbg !12874
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12872, metadata !DIExpression()), !dbg !12874
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12875
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !12876
  ret void, !dbg !12877
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12878 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12880, metadata !DIExpression()), !dbg !12899
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !12900

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.188, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.190, i32 0, i32 0), i32 noundef 750) #27, !dbg !12904
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i32 0, i32 0)) #27, !dbg !12904
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.190, i32 0, i32 0), i32 noundef 750) #27, !dbg !12904
  unreachable, !dbg !12904

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %29, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12880, metadata !DIExpression()), !dbg !12899
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12907
  br i1 %4, label %6, label %5, !dbg !12908

5:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !12909
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12897, metadata !DIExpression()), !dbg !12910
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %31, label %32, !dbg !12911

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12915
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !12915
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12917
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !12917
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12918
  %12 = load i32, i32* %11, align 4, !dbg !12918
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12919
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !12919
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12920
  %16 = load i8*, i8** %15, align 4, !dbg !12920
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12921
  %18 = load i8*, i8** %17, align 4, !dbg !12921
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12922
  %20 = load i8*, i8** %19, align 4, !dbg !12922
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12923
  %22 = load i32, i32* %21, align 4, !dbg !12923
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12924
  %24 = load i32, i32* %23, align 4, !dbg !12924
  %25 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* undef) #26, !dbg !12925
  %26 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !12926
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %26, i32 0, i32 2, !dbg !12927
  %28 = bitcast i8** %27 to %struct._static_thread_data**, !dbg !12928
  store %struct._static_thread_data* %3, %struct._static_thread_data** %28, align 4, !dbg !12928
  %29 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12929
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %29, metadata !12880, metadata !DIExpression()), !dbg !12899
  %30 = icmp ugt %struct._static_thread_data* %29, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12930
  br i1 %30, label %1, label %2, !dbg !12900, !llvm.loop !12931

31:                                               ; preds = %48, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.188, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.190, i32 0, i32 0), i32 noundef 781) #27, !dbg !12933
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i32 0, i32 0)) #27, !dbg !12933
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.190, i32 0, i32 0), i32 noundef 781) #27, !dbg !12933
  unreachable, !dbg !12933

32:                                               ; preds = %5, %48
  %33 = phi %struct._static_thread_data* [ %49, %48 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !12897, metadata !DIExpression()), !dbg !12910
  %34 = icmp ult %struct._static_thread_data* %33, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12936
  br i1 %34, label %36, label %35, !dbg !12937

35:                                               ; preds = %32
  tail call void @k_sched_unlock() #27, !dbg !12938
  ret void, !dbg !12939

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !12940
  %38 = load i32, i32* %37, align 4, !dbg !12940
  %39 = icmp eq i32 %38, -1, !dbg !12943
  br i1 %39, label %48, label %40, !dbg !12944

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !12945
  %42 = load %struct.k_thread*, %struct.k_thread** %41, align 4, !dbg !12945
  %43 = icmp sgt i32 %38, 0, !dbg !12947
  %44 = select i1 %43, i32 %38, i32 0, !dbg !12947
  %45 = zext i32 %44 to i64, !dbg !12947
  %46 = tail call fastcc i64 @k_ms_to_ticks_ceil64.196(i64 noundef %45) #26, !dbg !12947
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !12948
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %42, [1 x i64] %47) #26, !dbg !12948
  br label %48, !dbg !12949

48:                                               ; preds = %36, %40
  %49 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !12950
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %49, metadata !12897, metadata !DIExpression()), !dbg !12910
  %50 = icmp ugt %struct._static_thread_data* %49, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12951
  br i1 %50, label %31, label %32, !dbg !12911, !llvm.loop !12952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.196(i64 noundef %0) unnamed_addr #4 !dbg !12954 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12956, metadata !DIExpression()), !dbg !12957
  call void @llvm.dbg.value(metadata i64 %0, metadata !12958, metadata !DIExpression()), !dbg !12973
  call void @llvm.dbg.value(metadata i32 1000, metadata !12961, metadata !DIExpression()), !dbg !12973
  call void @llvm.dbg.value(metadata i32 10000, metadata !12962, metadata !DIExpression()), !dbg !12973
  call void @llvm.dbg.value(metadata i8 1, metadata !12963, metadata !DIExpression()), !dbg !12973
  call void @llvm.dbg.value(metadata i8 0, metadata !12964, metadata !DIExpression()), !dbg !12973
  call void @llvm.dbg.value(metadata i8 1, metadata !12965, metadata !DIExpression()), !dbg !12973
  call void @llvm.dbg.value(metadata i8 0, metadata !12966, metadata !DIExpression()), !dbg !12973
  call void @llvm.dbg.value(metadata i8 1, metadata !12967, metadata !DIExpression()), !dbg !12973
  call void @llvm.dbg.value(metadata i8 0, metadata !12968, metadata !DIExpression()), !dbg !12973
  call void @llvm.dbg.value(metadata i64 0, metadata !12969, metadata !DIExpression()), !dbg !12973
  call void @llvm.dbg.value(metadata i64 0, metadata !12969, metadata !DIExpression()), !dbg !12973
  %2 = mul i64 %0, 10, !dbg !12975
  ret i64 %2, !dbg !12981
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #5 !dbg !12982 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12984, metadata !DIExpression()), !dbg !12988
  call void @llvm.dbg.value(metadata i8* %1, metadata !12985, metadata !DIExpression()), !dbg !12988
  call void @llvm.dbg.value(metadata i8* %2, metadata !12986, metadata !DIExpression()), !dbg !12988
  call void @llvm.dbg.value(metadata i8* %3, metadata !12987, metadata !DIExpression()), !dbg !12988
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12989
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !12990
  %7 = load i8, i8* %6, align 4, !dbg !12991
  %8 = or i8 %7, 4, !dbg !12991
  store i8 %8, i8* %6, align 4, !dbg !12991
  tail call void @z_thread_essential_clear() #26, !dbg !12992
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !12993
  unreachable, !dbg !12993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct._sfnode* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !12994 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !12999, metadata !DIExpression()), !dbg !13001
  %2 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13002
  %3 = load i32, i32* %2, align 4, !dbg !13002
  call void @llvm.dbg.value(metadata i32 %3, metadata !13000, metadata !DIExpression()), !dbg !13001
  %4 = icmp eq i32 %3, 0, !dbg !13003
  br i1 %4, label %10, label %5, !dbg !13005

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13006
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13009
  %8 = zext i8 %7 to i32, !dbg !13010
  %9 = icmp eq i32 %6, %8, !dbg !13011
  br i1 %9, label %11, label %10, !dbg !13012

10:                                               ; preds = %5, %1
  br label %11, !dbg !13013

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13001
  ret i1 %12, !dbg !13014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct._sfnode* nocapture noundef %0) local_unnamed_addr #9 !dbg !13015 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13017, metadata !DIExpression()), !dbg !13018
  %2 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13019
  %3 = load i32, i32* %2, align 4, !dbg !13019
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13021
  %5 = zext i8 %4 to i32, !dbg !13022
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13023
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13024
  %8 = or i32 %7, %5, !dbg !13025
  %9 = icmp eq i32 %3, %8, !dbg !13026
  br i1 %9, label %10, label %11, !dbg !13027

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13028
  br label %11, !dbg !13029

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct._sfnode* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !13031 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13035, metadata !DIExpression()), !dbg !13036
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13037
  %3 = zext i8 %2 to i32, !dbg !13038
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13039
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13040
  %6 = or i32 %5, %3, !dbg !13041
  %7 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13042
  store i32 %6, i32* %7, align 4, !dbg !13043
  ret void, !dbg !13044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !13045 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13049, metadata !DIExpression()), !dbg !13050
  ret i32 -134, !dbg !13051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13052 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13056, metadata !DIExpression()), !dbg !13058
  call void @llvm.dbg.value(metadata i32 %1, metadata !13057, metadata !DIExpression()), !dbg !13058
  ret i32 -134, !dbg !13059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !13060 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13067, metadata !DIExpression()), !dbg !13069
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13068, metadata !DIExpression()), !dbg !13069
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13070
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13072
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13069
  ret i32 %6, !dbg !13073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !13074 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13078, metadata !DIExpression()), !dbg !13079
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13080
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13079
  ret i32 %3, !dbg !13082
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13083 {
  tail call void @sys_clock_idle_exit() #27, !dbg !13085
  ret void, !dbg !13086
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #5 !dbg !13087 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13089, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.value(metadata i8* %1, metadata !13090, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.value(metadata i8* %2, metadata !13091, metadata !DIExpression()), !dbg !13092
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13093
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13093
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13093
  %7 = load i8, i8* %6, align 2, !dbg !13093
  %8 = icmp sgt i8 %7, -1, !dbg !13093
  br i1 %8, label %10, label %9, !dbg !13096

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.205, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.206, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.207, i32 0, i32 0), i32 noundef 39) #27, !dbg !13097
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.207, i32 0, i32 0), i32 noundef 39) #27, !dbg !13097
  unreachable, !dbg !13097

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13099, !srcloc !13106
  call void @llvm.dbg.value(metadata i32 undef, metadata !13102, metadata !DIExpression()) #25, !dbg !13107
  call void @llvm.dbg.value(metadata i32 undef, metadata !13103, metadata !DIExpression()) #25, !dbg !13107
  tail call fastcc void @k_cpu_idle() #26, !dbg !13108
  br label %10, !dbg !13109, !llvm.loop !13110
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13112 {
  tail call void @arch_cpu_idle() #27, !dbg !13113
  ret void, !dbg !13114
}

; Function Attrs: optsize
declare !dbg !13115 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_queue_node_peek(%struct._sfnode* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !13116 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13120, metadata !DIExpression()), !dbg !13126
  call void @llvm.dbg.value(metadata i1 %1, metadata !13121, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13126
  %3 = icmp eq %struct._sfnode* %0, null, !dbg !13127
  br i1 %3, label %13, label %4, !dbg !13128

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct._sfnode* noundef nonnull %0) #26, !dbg !13129
  %6 = icmp eq i8 %5, 0, !dbg !13130
  br i1 %6, label %13, label %7, !dbg !13131

7:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13123, metadata !DIExpression()), !dbg !13132
  %8 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 1, !dbg !13133
  %9 = bitcast %struct._sfnode* %8 to i8**, !dbg !13133
  %10 = load i8*, i8** %9, align 4, !dbg !13133
  call void @llvm.dbg.value(metadata i8* %10, metadata !13122, metadata !DIExpression()), !dbg !13126
  br i1 %1, label %11, label %15, !dbg !13134

11:                                               ; preds = %7
  %12 = bitcast %struct._sfnode* %0 to i8*, !dbg !13135
  tail call void @k_free(i8* noundef nonnull %12) #27, !dbg !13136
  br label %15, !dbg !13139

13:                                               ; preds = %4, %2
  %14 = bitcast %struct._sfnode* %0 to i8*, !dbg !13140
  call void @llvm.dbg.value(metadata i8* %14, metadata !13122, metadata !DIExpression()), !dbg !13126
  br label %15

15:                                               ; preds = %7, %11, %13
  %16 = phi i8* [ %14, %13 ], [ %10, %11 ], [ %10, %7 ], !dbg !13142
  call void @llvm.dbg.value(metadata i8* %16, metadata !13122, metadata !DIExpression()), !dbg !13126
  ret i8* %16, !dbg !13143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i8 @sys_sfnode_flags_get(%struct._sfnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13144 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13148, metadata !DIExpression()), !dbg !13149
  %2 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13150
  %3 = load i32, i32* %2, align 4, !dbg !13150
  %4 = trunc i32 %3 to i8, !dbg !13151
  %5 = and i8 %4, 3, !dbg !13151
  ret i8 %5, !dbg !13152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_impl_k_queue_init(%struct.k_queue* noundef %0) local_unnamed_addr #6 !dbg !13153 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13176, metadata !DIExpression()), !dbg !13177
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13178
  tail call fastcc void @sys_sflist_init(%struct._sflist* noundef %2) #26, !dbg !13179
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, i32 0, !dbg !13180
  store i32 0, i32* %3, align 4, !dbg !13180
  %4 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13181
  tail call fastcc void @z_waitq_init.208(%struct._wait_q_t* noundef nonnull %4) #26, !dbg !13182
  ret void, !dbg !13183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_sflist_init(%struct._sflist* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !13184 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13189, metadata !DIExpression()), !dbg !13190
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13191
  store %struct._sfnode* null, %struct._sfnode** %2, align 4, !dbg !13192
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13193
  store %struct._sfnode* null, %struct._sfnode** %3, align 4, !dbg !13194
  ret void, !dbg !13195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.208(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !13196 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13201, metadata !DIExpression()), !dbg !13202
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13203
  tail call fastcc void @sys_dlist_init.209(%struct._dnode* noundef %2) #26, !dbg !13204
  ret void, !dbg !13205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.209(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !13206 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13211, metadata !DIExpression()), !dbg !13212
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13213
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13214
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13215
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13216
  ret void, !dbg !13217
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_queue_cancel_wait(%struct.k_queue* noundef %0) local_unnamed_addr #1 !dbg !13218 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13220, metadata !DIExpression()), !dbg !13306
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13307
  call void @llvm.dbg.value(metadata %struct._sfnode* %2, metadata !13308, metadata !DIExpression()) #25, !dbg !13315
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13317, !srcloc !13323
  call void @llvm.dbg.value(metadata i32 undef, metadata !13320, metadata !DIExpression()) #25, !dbg !13324
  call void @llvm.dbg.value(metadata i32 undef, metadata !13321, metadata !DIExpression()) #25, !dbg !13324
  call void @llvm.dbg.value(metadata i32 undef, metadata !13314, metadata !DIExpression()) #25, !dbg !13315
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %2) #27, !dbg !13325
  br i1 %4, label %6, label %5, !dbg !13328

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.210, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.211, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 148) #27, !dbg !13329
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.213, i32 0, i32 0), %struct._sfnode* noundef nonnull %2) #27, !dbg !13329
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 148) #27, !dbg !13329
  unreachable, !dbg !13329

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13320, metadata !DIExpression()) #25, !dbg !13324
  call void @llvm.dbg.value(metadata i32 undef, metadata !13314, metadata !DIExpression()) #25, !dbg !13315
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %2) #27, !dbg !13331
  call void @llvm.dbg.value(metadata i32 undef, metadata !13221, metadata !DIExpression()), !dbg !13306
  %7 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13332
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef nonnull %7) #27, !dbg !13333
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !13226, metadata !DIExpression()), !dbg !13306
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !13334
  br i1 %9, label %11, label %10, !dbg !13336

10:                                               ; preds = %6
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %8, i8* noundef null) #26, !dbg !13337
  br label %11, !dbg !13339

11:                                               ; preds = %10, %6
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !13317
  call void @llvm.dbg.value(metadata i32 %12, metadata !13320, metadata !DIExpression()) #25, !dbg !13324
  call void @llvm.dbg.value(metadata i32 %12, metadata !13314, metadata !DIExpression()) #25, !dbg !13315
  call void @llvm.dbg.value(metadata i32 %12, metadata !13221, metadata !DIExpression()), !dbg !13306
  %13 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13340
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %2, [1 x i32] %13) #27, !dbg !13340
  ret void, !dbg !13341
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prepare_thread_to_run(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !13342 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13346, metadata !DIExpression()), !dbg !13348
  call void @llvm.dbg.value(metadata i8* %1, metadata !13347, metadata !DIExpression()), !dbg !13348
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13349, metadata !DIExpression()), !dbg !13357
  call void @llvm.dbg.value(metadata i32 0, metadata !13355, metadata !DIExpression()), !dbg !13357
  call void @llvm.dbg.value(metadata i8* %1, metadata !13356, metadata !DIExpression()), !dbg !13357
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13359, metadata !DIExpression()), !dbg !13365
  call void @llvm.dbg.value(metadata i32 0, metadata !13364, metadata !DIExpression()), !dbg !13365
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 1, !dbg !13367
  store i32 0, i32* %3, align 4, !dbg !13368
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 6, !dbg !13369
  store i8* %1, i8** %4, align 4, !dbg !13370
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #27, !dbg !13371
  ret void, !dbg !13372
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13373 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13377, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata i8* %1, metadata !13378, metadata !DIExpression()), !dbg !13380
  call void @llvm.dbg.value(metadata i8* %2, metadata !13379, metadata !DIExpression()), !dbg !13380
  %4 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext false, i1 noundef zeroext false) #26, !dbg !13381
  ret void, !dbg !13382
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2, i1 noundef zeroext %3, i1 noundef zeroext %4) unnamed_addr #1 !dbg !13383 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13387, metadata !DIExpression()), !dbg !13397
  call void @llvm.dbg.value(metadata i8* %1, metadata !13388, metadata !DIExpression()), !dbg !13397
  call void @llvm.dbg.value(metadata i8* %2, metadata !13389, metadata !DIExpression()), !dbg !13397
  call void @llvm.dbg.value(metadata i1 %3, metadata !13390, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13397
  call void @llvm.dbg.value(metadata i1 %4, metadata !13391, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13397
  %6 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13398
  call void @llvm.dbg.value(metadata %struct._sfnode* %6, metadata !13308, metadata !DIExpression()) #25, !dbg !13399
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13401, !srcloc !13323
  call void @llvm.dbg.value(metadata i32 undef, metadata !13320, metadata !DIExpression()) #25, !dbg !13403
  call void @llvm.dbg.value(metadata i32 undef, metadata !13321, metadata !DIExpression()) #25, !dbg !13403
  call void @llvm.dbg.value(metadata i32 undef, metadata !13314, metadata !DIExpression()) #25, !dbg !13399
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %6) #27, !dbg !13404
  br i1 %8, label %10, label %9, !dbg !13405

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.210, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.211, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 148) #27, !dbg !13406
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.213, i32 0, i32 0), %struct._sfnode* noundef nonnull %6) #27, !dbg !13406
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 148) #27, !dbg !13406
  unreachable, !dbg !13406

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %7, 0, !dbg !13401
  call void @llvm.dbg.value(metadata i32 %11, metadata !13320, metadata !DIExpression()) #25, !dbg !13403
  call void @llvm.dbg.value(metadata i32 %11, metadata !13314, metadata !DIExpression()) #25, !dbg !13399
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %6) #27, !dbg !13407
  call void @llvm.dbg.value(metadata i32 %11, metadata !13393, metadata !DIExpression()), !dbg !13397
  br i1 %4, label %12, label %16, !dbg !13408

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13409
  %14 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %13) #26, !dbg !13412
  %15 = bitcast %struct._sfnode* %14 to i8*, !dbg !13412
  call void @llvm.dbg.value(metadata i8* %15, metadata !13388, metadata !DIExpression()), !dbg !13397
  br label %16, !dbg !13413

16:                                               ; preds = %12, %10
  %17 = phi i8* [ %15, %12 ], [ %1, %10 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !13388, metadata !DIExpression()), !dbg !13397
  %18 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13414
  %19 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef nonnull %18) #27, !dbg !13415
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13392, metadata !DIExpression()), !dbg !13397
  %20 = icmp eq %struct.k_thread* %19, null, !dbg !13416
  br i1 %20, label %23, label %21, !dbg !13418

21:                                               ; preds = %16
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %19, i8* noundef %2) #26, !dbg !13419
  %22 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !13421
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %6, [1 x i32] %22) #27, !dbg !13421
  br label %42, !dbg !13422

23:                                               ; preds = %16
  br i1 %3, label %24, label %35, !dbg !13423

24:                                               ; preds = %23
  %25 = tail call fastcc i8* @z_thread_malloc() #26, !dbg !13424
  call void @llvm.dbg.value(metadata i8* %25, metadata !13394, metadata !DIExpression()), !dbg !13425
  %26 = icmp eq i8* %25, null, !dbg !13426
  br i1 %26, label %27, label %31, !dbg !13428

27:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !13429, metadata !DIExpression()) #25, !dbg !13435
  call void @llvm.dbg.value(metadata %struct._sfnode* %6, metadata !13434, metadata !DIExpression()) #25, !dbg !13435
  %28 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %6) #27, !dbg !13438
  br i1 %28, label %30, label %29, !dbg !13441

29:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.210, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.214, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 194) #27, !dbg !13442
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.215, i32 0, i32 0), %struct._sfnode* noundef nonnull %6) #27, !dbg !13442
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 194) #27, !dbg !13442
  unreachable, !dbg !13442

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %11, metadata !13429, metadata !DIExpression()) #25, !dbg !13435
  call void @llvm.dbg.value(metadata i32 %11, metadata !13444, metadata !DIExpression()) #25, !dbg !13447
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !13449, !srcloc !13450
  call void @llvm.dbg.value(metadata i8* %25, metadata !13389, metadata !DIExpression()), !dbg !13397
  br label %42

31:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i8* %25, metadata !13394, metadata !DIExpression()), !dbg !13425
  %32 = getelementptr inbounds i8, i8* %25, i32 4, !dbg !13451
  %33 = bitcast i8* %32 to i8**, !dbg !13451
  store i8* %2, i8** %33, align 4, !dbg !13452
  %34 = bitcast i8* %25 to %struct._sfnode*, !dbg !13453
  tail call fastcc void @sys_sfnode_init(%struct._sfnode* noundef nonnull %34, i8 noundef zeroext 1) #26, !dbg !13454
  call void @llvm.dbg.value(metadata i8* %25, metadata !13389, metadata !DIExpression()), !dbg !13397
  br label %37

35:                                               ; preds = %23
  %36 = bitcast i8* %2 to %struct._sfnode*, !dbg !13455
  tail call fastcc void @sys_sfnode_init(%struct._sfnode* noundef %36, i8 noundef zeroext 0) #26, !dbg !13457
  br label %37

37:                                               ; preds = %31, %35
  %38 = phi %struct._sfnode* [ %34, %31 ], [ %36, %35 ], !dbg !13458
  call void @llvm.dbg.value(metadata i8* undef, metadata !13389, metadata !DIExpression()), !dbg !13397
  %39 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13459
  %40 = bitcast i8* %17 to %struct._sfnode*, !dbg !13460
  tail call fastcc void @sys_sflist_insert(%struct._sflist* noundef %39, %struct._sfnode* noundef %40, %struct._sfnode* noundef %38) #26, !dbg !13461
  %41 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !13462
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %6, [1 x i32] %41) #27, !dbg !13462
  br label %42, !dbg !13463

42:                                               ; preds = %30, %37, %21
  %43 = phi i32 [ 0, %21 ], [ 0, %37 ], [ -12, %30 ], !dbg !13397
  ret i32 %43, !dbg !13464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13465 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13469, metadata !DIExpression()), !dbg !13470
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13471
  %3 = load %struct._sfnode*, %struct._sfnode** %2, align 4, !dbg !13471
  ret %struct._sfnode* %3, !dbg !13472
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc() unnamed_addr #1 !dbg !13473 {
  call void @llvm.dbg.value(metadata i32 8, metadata !13476, metadata !DIExpression()), !dbg !13477
  %1 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef 8) #27, !dbg !13478
  ret i8* %1, !dbg !13479
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @sys_sfnode_init(%struct._sfnode* nocapture noundef writeonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !13480 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13484, metadata !DIExpression()), !dbg !13486
  call void @llvm.dbg.value(metadata i8 %1, metadata !13485, metadata !DIExpression()), !dbg !13486
  %3 = zext i8 %1 to i32, !dbg !13487
  %4 = and i32 %3, 252, !dbg !13487
  %5 = icmp eq i32 %4, 0, !dbg !13487
  br i1 %5, label %7, label %6, !dbg !13490

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.210, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4.216, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.217, i32 0, i32 0), i32 noundef 290) #27, !dbg !13491
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.218, i32 0, i32 0)) #27, !dbg !13491
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.217, i32 0, i32 0), i32 noundef 290) #27, !dbg !13491
  unreachable, !dbg !13491

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13493
  store i32 %3, i32* %8, align 4, !dbg !13494
  ret void, !dbg !13495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_insert(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1, %struct._sfnode* noundef %2) unnamed_addr #9 !dbg !13496 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13500, metadata !DIExpression()), !dbg !13503
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13501, metadata !DIExpression()), !dbg !13503
  call void @llvm.dbg.value(metadata %struct._sfnode* %2, metadata !13502, metadata !DIExpression()), !dbg !13503
  %4 = icmp eq %struct._sfnode* %1, null, !dbg !13504
  br i1 %4, label %5, label %6, !dbg !13506

5:                                                ; preds = %3
  tail call fastcc void @sys_sflist_prepend(%struct._sflist* noundef %0, %struct._sfnode* noundef %2) #26, !dbg !13507
  br label %11, !dbg !13507

6:                                                ; preds = %3
  %7 = tail call fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* noundef nonnull %1) #26, !dbg !13509
  %8 = icmp eq %struct._sfnode* %7, null, !dbg !13509
  br i1 %8, label %9, label %10, !dbg !13504

9:                                                ; preds = %6
  tail call fastcc void @sys_sflist_append(%struct._sflist* noundef %0, %struct._sfnode* noundef %2) #26, !dbg !13511
  br label %11, !dbg !13511

10:                                               ; preds = %6
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef %2, %struct._sfnode* noundef nonnull %7) #26, !dbg !13513
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef nonnull %1, %struct._sfnode* noundef %2) #26, !dbg !13513
  br label %11

11:                                               ; preds = %9, %10, %5
  ret void, !dbg !13506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_prepend(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1) unnamed_addr #9 !dbg !13515 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13519, metadata !DIExpression()), !dbg !13521
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13520, metadata !DIExpression()), !dbg !13521
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13522
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef %1, %struct._sfnode* noundef %3) #26, !dbg !13522
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %1) #26, !dbg !13522
  %4 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !13523
  %5 = icmp eq %struct._sfnode* %4, null, !dbg !13523
  br i1 %5, label %6, label %8, !dbg !13522

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13525
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %7) #26, !dbg !13525
  br label %8, !dbg !13525

8:                                                ; preds = %6, %2
  ret void, !dbg !13522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13527 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13531, metadata !DIExpression()), !dbg !13532
  %2 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13533
  %3 = load i32, i32* %2, align 4, !dbg !13533
  %4 = and i32 %3, -4, !dbg !13534
  %5 = inttoptr i32 %4 to %struct._sfnode*, !dbg !13535
  ret %struct._sfnode* %5, !dbg !13536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1) unnamed_addr #9 !dbg !13537 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13539, metadata !DIExpression()), !dbg !13541
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13540, metadata !DIExpression()), !dbg !13541
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef %1, %struct._sfnode* noundef null) #26, !dbg !13542
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !13543
  %4 = icmp eq %struct._sfnode* %3, null, !dbg !13543
  br i1 %4, label %5, label %6, !dbg !13542

5:                                                ; preds = %2
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %1) #26, !dbg !13545
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %1) #26, !dbg !13545
  br label %7, !dbg !13545

6:                                                ; preds = %2
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef nonnull %3, %struct._sfnode* noundef %1) #26, !dbg !13547
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %1) #26, !dbg !13547
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_sfnode_next_set(%struct._sfnode* nocapture noundef %0, %struct._sfnode* noundef %1) unnamed_addr #9 !dbg !13549 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13553, metadata !DIExpression()), !dbg !13556
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13554, metadata !DIExpression()), !dbg !13556
  %3 = tail call fastcc zeroext i8 @sys_sfnode_flags_get(%struct._sfnode* noundef %0) #26, !dbg !13557
  call void @llvm.dbg.value(metadata i8 %3, metadata !13555, metadata !DIExpression()), !dbg !13556
  %4 = zext i8 %3 to i32, !dbg !13558
  %5 = ptrtoint %struct._sfnode* %1 to i32, !dbg !13559
  %6 = or i32 %4, %5, !dbg !13560
  %7 = getelementptr inbounds %struct._sfnode, %struct._sfnode* %0, i32 0, i32 0, !dbg !13561
  store i32 %6, i32* %7, align 4, !dbg !13562
  ret void, !dbg !13563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_tail_set(%struct._sflist* nocapture noundef writeonly %0, %struct._sfnode* noundef %1) unnamed_addr #6 !dbg !13564 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13566, metadata !DIExpression()), !dbg !13568
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13567, metadata !DIExpression()), !dbg !13568
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 1, !dbg !13569
  store %struct._sfnode* %1, %struct._sfnode** %3, align 4, !dbg !13570
  ret void, !dbg !13571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_sflist_head_set(%struct._sflist* nocapture noundef writeonly %0, %struct._sfnode* noundef %1) unnamed_addr #6 !dbg !13572 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13574, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13575, metadata !DIExpression()), !dbg !13576
  %3 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13577
  store %struct._sfnode* %1, %struct._sfnode** %3, align 4, !dbg !13578
  ret void, !dbg !13579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13580 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13582, metadata !DIExpression()), !dbg !13583
  %2 = getelementptr inbounds %struct._sflist, %struct._sflist* %0, i32 0, i32 0, !dbg !13584
  %3 = load %struct._sfnode*, %struct._sfnode** %2, align 4, !dbg !13584
  ret %struct._sfnode* %3, !dbg !13585
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13586 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13590, metadata !DIExpression()), !dbg !13592
  call void @llvm.dbg.value(metadata i8* %1, metadata !13591, metadata !DIExpression()), !dbg !13592
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext true) #26, !dbg !13593
  ret void, !dbg !13594
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_queue_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13595 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13597, metadata !DIExpression()), !dbg !13599
  call void @llvm.dbg.value(metadata i8* %1, metadata !13598, metadata !DIExpression()), !dbg !13599
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext false, i1 noundef zeroext false) #26, !dbg !13600
  ret void, !dbg !13601
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13602 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13606, metadata !DIExpression()), !dbg !13609
  call void @llvm.dbg.value(metadata i8* %1, metadata !13607, metadata !DIExpression()), !dbg !13609
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext true) #26, !dbg !13610
  call void @llvm.dbg.value(metadata i32 %3, metadata !13608, metadata !DIExpression()), !dbg !13609
  ret i32 %3, !dbg !13611
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_queue_alloc_prepend(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13612 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13614, metadata !DIExpression()), !dbg !13617
  call void @llvm.dbg.value(metadata i8* %1, metadata !13615, metadata !DIExpression()), !dbg !13617
  %3 = tail call fastcc i32 @queue_insert(%struct.k_queue* noundef %0, i8* noundef null, i8* noundef %1, i1 noundef zeroext true, i1 noundef zeroext false) #26, !dbg !13618
  call void @llvm.dbg.value(metadata i32 %3, metadata !13616, metadata !DIExpression()), !dbg !13617
  ret i32 %3, !dbg !13619
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13620 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13624, metadata !DIExpression()), !dbg !13629
  call void @llvm.dbg.value(metadata i8* %1, metadata !13625, metadata !DIExpression()), !dbg !13629
  call void @llvm.dbg.value(metadata i8* %2, metadata !13626, metadata !DIExpression()), !dbg !13629
  %4 = icmp eq i8* %1, null, !dbg !13630
  %5 = icmp eq i8* %2, null, !dbg !13630
  %6 = or i1 %4, %5, !dbg !13630
  br i1 %6, label %32, label %7, !dbg !13630

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13632
  call void @llvm.dbg.value(metadata %struct._sfnode* %8, metadata !13308, metadata !DIExpression()) #25, !dbg !13633
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13635, !srcloc !13323
  call void @llvm.dbg.value(metadata i32 undef, metadata !13320, metadata !DIExpression()) #25, !dbg !13637
  call void @llvm.dbg.value(metadata i32 undef, metadata !13321, metadata !DIExpression()) #25, !dbg !13637
  call void @llvm.dbg.value(metadata i32 undef, metadata !13314, metadata !DIExpression()) #25, !dbg !13633
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %8) #27, !dbg !13638
  br i1 %10, label %12, label %11, !dbg !13639

11:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.210, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.211, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 148) #27, !dbg !13640
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.213, i32 0, i32 0), %struct._sfnode* noundef nonnull %8) #27, !dbg !13640
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 148) #27, !dbg !13640
  unreachable, !dbg !13640

12:                                               ; preds = %7
  %13 = extractvalue { i32, i32 } %9, 0, !dbg !13635
  call void @llvm.dbg.value(metadata i32 %13, metadata !13320, metadata !DIExpression()) #25, !dbg !13637
  call void @llvm.dbg.value(metadata i32 %13, metadata !13314, metadata !DIExpression()) #25, !dbg !13633
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %8) #27, !dbg !13641
  call void @llvm.dbg.value(metadata i32 %13, metadata !13627, metadata !DIExpression()), !dbg !13629
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13628, metadata !DIExpression()), !dbg !13629
  %14 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13642
  %15 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef nonnull %14) #27, !dbg !13645
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13628, metadata !DIExpression()), !dbg !13629
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13628, metadata !DIExpression()), !dbg !13629
  call void @llvm.dbg.value(metadata i8* %1, metadata !13625, metadata !DIExpression()), !dbg !13629
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !13646
  br i1 %16, label %27, label %17, !dbg !13647

17:                                               ; preds = %12, %17
  %18 = phi %struct.k_thread* [ %22, %17 ], [ %15, %12 ]
  %19 = phi i8* [ %21, %17 ], [ %1, %12 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !13628, metadata !DIExpression()), !dbg !13629
  call void @llvm.dbg.value(metadata i8* %19, metadata !13625, metadata !DIExpression()), !dbg !13629
  tail call fastcc void @prepare_thread_to_run(%struct.k_thread* noundef nonnull %18, i8* noundef nonnull %19) #26, !dbg !13648
  %20 = bitcast i8* %19 to i8**, !dbg !13650
  %21 = load i8*, i8** %20, align 4, !dbg !13651
  call void @llvm.dbg.value(metadata i8* %21, metadata !13625, metadata !DIExpression()), !dbg !13629
  %22 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef nonnull %14) #27, !dbg !13652
  call void @llvm.dbg.value(metadata %struct.k_thread* %22, metadata !13628, metadata !DIExpression()), !dbg !13629
  %23 = icmp ne i8* %21, null, !dbg !13653
  %24 = icmp ne %struct.k_thread* %22, null, !dbg !13646
  %25 = select i1 %23, i1 %24, i1 false, !dbg !13646
  br i1 %25, label %17, label %26, !dbg !13647, !llvm.loop !13654

26:                                               ; preds = %17
  br i1 %23, label %27, label %30, !dbg !13656

27:                                               ; preds = %12, %26
  %28 = phi i8* [ %21, %26 ], [ %1, %12 ]
  %29 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13657
  tail call fastcc void @sys_sflist_append_list(%struct._sflist* noundef %29, i8* noundef nonnull %28, i8* noundef %2) #26, !dbg !13660
  br label %30, !dbg !13661

30:                                               ; preds = %26, %27
  %31 = insertvalue [1 x i32] poison, i32 %13, 0, !dbg !13662
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %8, [1 x i32] %31) #27, !dbg !13662
  br label %32

32:                                               ; preds = %3, %30
  %33 = phi i32 [ 0, %30 ], [ -22, %3 ], !dbg !13629
  ret i32 %33, !dbg !13663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_append_list(%struct._sflist* nocapture noundef %0, i8* noundef %1, i8* noundef %2) unnamed_addr #9 !dbg !13664 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13668, metadata !DIExpression()), !dbg !13671
  call void @llvm.dbg.value(metadata i8* %1, metadata !13669, metadata !DIExpression()), !dbg !13671
  call void @llvm.dbg.value(metadata i8* %2, metadata !13670, metadata !DIExpression()), !dbg !13671
  %4 = icmp ne i8* %1, null, !dbg !13672
  %5 = icmp ne i8* %2, null, !dbg !13672
  %6 = and i1 %4, %5, !dbg !13672
  br i1 %6, label %7, label %15, !dbg !13672

7:                                                ; preds = %3
  %8 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !13674
  %9 = icmp eq %struct._sfnode* %8, null, !dbg !13674
  %10 = bitcast i8* %1 to %struct._sfnode*, !dbg !13677
  br i1 %9, label %11, label %12, !dbg !13678

11:                                               ; preds = %7
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef nonnull %10) #26, !dbg !13679
  br label %13, !dbg !13679

12:                                               ; preds = %7
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef nonnull %8, %struct._sfnode* noundef nonnull %10) #26, !dbg !13681
  br label %13

13:                                               ; preds = %12, %11
  %14 = bitcast i8* %2 to %struct._sfnode*, !dbg !13678
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef nonnull %14) #26, !dbg !13678
  br label %15, !dbg !13678

15:                                               ; preds = %13, %3
  ret void, !dbg !13683
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_queue_merge_slist(%struct.k_queue* noundef %0, %struct._slist* nocapture noundef %1) local_unnamed_addr #1 !dbg !13684 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13700, metadata !DIExpression()), !dbg !13703
  call void @llvm.dbg.value(metadata %struct._slist* %1, metadata !13701, metadata !DIExpression()), !dbg !13703
  %3 = tail call fastcc zeroext i1 @sys_slist_is_empty.221(%struct._slist* noundef %1) #26, !dbg !13704
  br i1 %3, label %13, label %4, !dbg !13706

4:                                                ; preds = %2
  %5 = bitcast %struct._slist* %1 to i8**, !dbg !13707
  %6 = load i8*, i8** %5, align 4, !dbg !13707
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %1, i32 0, i32 1, !dbg !13708
  %8 = bitcast %struct._snode** %7 to i8**, !dbg !13708
  %9 = load i8*, i8** %8, align 4, !dbg !13708
  %10 = tail call i32 @k_queue_append_list(%struct.k_queue* noundef %0, i8* noundef %6, i8* noundef %9) #26, !dbg !13709
  call void @llvm.dbg.value(metadata i32 %10, metadata !13702, metadata !DIExpression()), !dbg !13703
  %11 = icmp eq i32 %10, 0, !dbg !13710
  br i1 %11, label %12, label %13, !dbg !13712

12:                                               ; preds = %4
  tail call fastcc void @sys_slist_init(%struct._slist* noundef nonnull %1) #26, !dbg !13713
  br label %13, !dbg !13714

13:                                               ; preds = %4, %2, %12
  %14 = phi i32 [ 0, %12 ], [ -22, %2 ], [ %10, %4 ], !dbg !13703
  ret i32 %14, !dbg !13715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty.221(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13716 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !13720, metadata !DIExpression()), !dbg !13721
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head.222(%struct._slist* noundef %0) #26, !dbg !13722
  %3 = icmp eq %struct._snode* %2, null, !dbg !13722
  ret i1 %3, !dbg !13722
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_slist_init(%struct._slist* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !13723 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !13727, metadata !DIExpression()), !dbg !13728
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !13729
  store %struct._snode* null, %struct._snode** %2, align 4, !dbg !13730
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !13731
  store %struct._snode* null, %struct._snode** %3, align 4, !dbg !13732
  ret void, !dbg !13733
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head.222(%struct._slist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13734 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !13738, metadata !DIExpression()), !dbg !13739
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !13740
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !13740
  ret %struct._snode* %3, !dbg !13741
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_get(%struct.k_queue* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13742 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13751, metadata !DIExpression()), !dbg !13758
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13750, metadata !DIExpression()), !dbg !13758
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 1, !dbg !13759
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !13308, metadata !DIExpression()) #25, !dbg !13760
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13762, !srcloc !13323
  call void @llvm.dbg.value(metadata i32 undef, metadata !13320, metadata !DIExpression()) #25, !dbg !13764
  call void @llvm.dbg.value(metadata i32 undef, metadata !13321, metadata !DIExpression()) #25, !dbg !13764
  call void @llvm.dbg.value(metadata i32 undef, metadata !13314, metadata !DIExpression()) #25, !dbg !13760
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %3) #27, !dbg !13765
  br i1 %5, label %7, label %6, !dbg !13766

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.210, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.211, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 148) #27, !dbg !13767
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.213, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #27, !dbg !13767
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 148) #27, !dbg !13767
  unreachable, !dbg !13767

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !13762
  call void @llvm.dbg.value(metadata i32 %8, metadata !13320, metadata !DIExpression()) #25, !dbg !13764
  call void @llvm.dbg.value(metadata i32 %8, metadata !13314, metadata !DIExpression()) #25, !dbg !13760
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %3) #27, !dbg !13768
  call void @llvm.dbg.value(metadata i32 %8, metadata !13752, metadata !DIExpression()), !dbg !13758
  %9 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13769
  %10 = tail call fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* noundef %9) #26, !dbg !13769
  br i1 %10, label %17, label %11, !dbg !13770, !prof !13771

11:                                               ; preds = %7
  %12 = tail call fastcc %struct._sfnode* @sys_sflist_get_not_empty(%struct._sflist* noundef %9) #26, !dbg !13772
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !13754, metadata !DIExpression()), !dbg !13773
  %13 = tail call i8* @z_queue_node_peek(%struct._sfnode* noundef %12, i1 noundef zeroext true) #26, !dbg !13774
  call void @llvm.dbg.value(metadata i8* %13, metadata !13753, metadata !DIExpression()), !dbg !13758
  call void @llvm.dbg.value(metadata i32 undef, metadata !13429, metadata !DIExpression()) #25, !dbg !13775
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !13434, metadata !DIExpression()) #25, !dbg !13775
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %3) #27, !dbg !13777
  br i1 %14, label %16, label %15, !dbg !13778

15:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.210, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.214, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 194) #27, !dbg !13779
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.215, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #27, !dbg !13779
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 194) #27, !dbg !13779
  unreachable, !dbg !13779

16:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %8, metadata !13429, metadata !DIExpression()) #25, !dbg !13775
  call void @llvm.dbg.value(metadata i32 %8, metadata !13444, metadata !DIExpression()) #25, !dbg !13780
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !13782, !srcloc !13450
  br label %33

17:                                               ; preds = %7
  %18 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %18, metadata !13751, metadata !DIExpression()), !dbg !13758
  %19 = icmp eq i64 %18, 0, !dbg !13783
  br i1 %19, label %20, label %24, !dbg !13785

20:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !13429, metadata !DIExpression()) #25, !dbg !13786
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !13434, metadata !DIExpression()) #25, !dbg !13786
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %3) #27, !dbg !13789
  br i1 %21, label %23, label %22, !dbg !13790

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.210, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.214, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 194) #27, !dbg !13791
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.215, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #27, !dbg !13791
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.212, i32 0, i32 0), i32 noundef 194) #27, !dbg !13791
  unreachable, !dbg !13791

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %8, metadata !13429, metadata !DIExpression()) #25, !dbg !13786
  call void @llvm.dbg.value(metadata i32 %8, metadata !13444, metadata !DIExpression()) #25, !dbg !13792
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !13794, !srcloc !13450
  br label %33, !dbg !13795

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 2, !dbg !13796
  %26 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !13797
  %27 = tail call i32 @z_pend_curr(%struct._sfnode* noundef nonnull %3, [1 x i32] %26, %struct._wait_q_t* noundef nonnull %25, [1 x i64] %1) #27, !dbg !13797
  call void @llvm.dbg.value(metadata i32 %27, metadata !13757, metadata !DIExpression()), !dbg !13758
  %28 = icmp eq i32 %27, 0, !dbg !13798
  br i1 %28, label %29, label %33, !dbg !13799

29:                                               ; preds = %24
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13800
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %30, i32 0, i32 0, i32 6, !dbg !13801
  %32 = load i8*, i8** %31, align 4, !dbg !13801
  br label %33, !dbg !13799

33:                                               ; preds = %29, %24, %23, %16
  %34 = phi i8* [ %13, %16 ], [ null, %23 ], [ %32, %29 ], [ null, %24 ], !dbg !13758
  ret i8* %34, !dbg !13802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_sflist_is_empty(%struct._sflist* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13803 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13807, metadata !DIExpression()), !dbg !13808
  %2 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13809
  %3 = icmp eq %struct._sfnode* %2, null, !dbg !13809
  ret i1 %3, !dbg !13809
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc %struct._sfnode* @sys_sflist_get_not_empty(%struct._sflist* nocapture noundef %0) unnamed_addr #9 !dbg !13810 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13812, metadata !DIExpression()), !dbg !13814
  %2 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13815
  call void @llvm.dbg.value(metadata %struct._sfnode* %2, metadata !13813, metadata !DIExpression()), !dbg !13814
  %3 = tail call fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* noundef %2) #26, !dbg !13815
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %3) #26, !dbg !13815
  %4 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !13816
  %5 = icmp eq %struct._sfnode* %4, %2, !dbg !13816
  br i1 %5, label %6, label %8, !dbg !13815

6:                                                ; preds = %1
  %7 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13818
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %7) #26, !dbg !13818
  br label %8, !dbg !13818

8:                                                ; preds = %6, %1
  ret %struct._sfnode* %2, !dbg !13815
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local zeroext i1 @k_queue_remove(%struct.k_queue* nocapture noundef %0, i8* noundef %1) local_unnamed_addr #14 !dbg !13820 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13824, metadata !DIExpression()), !dbg !13827
  call void @llvm.dbg.value(metadata i8* %1, metadata !13825, metadata !DIExpression()), !dbg !13827
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13828
  %4 = bitcast i8* %1 to %struct._sfnode*, !dbg !13829
  %5 = tail call fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* noundef %3, %struct._sfnode* noundef %4) #26, !dbg !13830
  call void @llvm.dbg.value(metadata i1 %5, metadata !13826, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13827
  ret i1 %5, !dbg !13831
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_sflist_find_and_remove(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1) unnamed_addr #14 !dbg !13832 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13836, metadata !DIExpression()), !dbg !13840
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13837, metadata !DIExpression()), !dbg !13840
  call void @llvm.dbg.value(metadata %struct._sfnode* null, metadata !13838, metadata !DIExpression()), !dbg !13840
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13841
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !13839, metadata !DIExpression()), !dbg !13840
  call void @llvm.dbg.value(metadata %struct._sfnode* null, metadata !13838, metadata !DIExpression()), !dbg !13840
  %4 = icmp eq %struct._sfnode* %3, null, !dbg !13843
  br i1 %4, label %15, label %5, !dbg !13841

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !13839, metadata !DIExpression()), !dbg !13840
  call void @llvm.dbg.value(metadata %struct._sfnode* null, metadata !13838, metadata !DIExpression()), !dbg !13840
  %6 = icmp eq %struct._sfnode* %3, %1, !dbg !13845
  br i1 %6, label %9, label %11, !dbg !13848

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._sfnode* %13, metadata !13839, metadata !DIExpression()), !dbg !13840
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !13838, metadata !DIExpression()), !dbg !13840
  %8 = icmp eq %struct._sfnode* %13, %1, !dbg !13845
  br i1 %8, label %9, label %11, !dbg !13848, !llvm.loop !13849

9:                                                ; preds = %7, %5
  %10 = phi %struct._sfnode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_sflist_remove(%struct._sflist* noundef %0, %struct._sfnode* noundef %10, %struct._sfnode* noundef %1) #26, !dbg !13850
  br label %15, !dbg !13850

11:                                               ; preds = %5, %7
  %12 = phi %struct._sfnode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !13839, metadata !DIExpression()), !dbg !13840
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !13838, metadata !DIExpression()), !dbg !13840
  %13 = tail call fastcc %struct._sfnode* @sys_sflist_peek_next(%struct._sfnode* noundef nonnull %12) #26, !dbg !13843
  call void @llvm.dbg.value(metadata %struct._sfnode* %13, metadata !13839, metadata !DIExpression()), !dbg !13840
  %14 = icmp eq %struct._sfnode* %13, null, !dbg !13843
  br i1 %14, label %15, label %7, !dbg !13841, !llvm.loop !13849

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !13852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_sflist_remove(%struct._sflist* nocapture noundef %0, %struct._sfnode* noundef %1, %struct._sfnode* noundef %2) unnamed_addr #9 !dbg !13853 {
  call void @llvm.dbg.value(metadata %struct._sflist* %0, metadata !13855, metadata !DIExpression()), !dbg !13858
  call void @llvm.dbg.value(metadata %struct._sfnode* %1, metadata !13856, metadata !DIExpression()), !dbg !13858
  call void @llvm.dbg.value(metadata %struct._sfnode* %2, metadata !13857, metadata !DIExpression()), !dbg !13858
  %4 = icmp eq %struct._sfnode* %1, null, !dbg !13859
  %5 = tail call fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* noundef %2) #26, !dbg !13861
  br i1 %4, label %6, label %11, !dbg !13862

6:                                                ; preds = %3
  tail call fastcc void @z_sflist_head_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %5) #26, !dbg !13863
  %7 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !13865
  %8 = icmp eq %struct._sfnode* %7, %2, !dbg !13865
  br i1 %8, label %9, label %15, !dbg !13863

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %0) #26, !dbg !13867
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef %10) #26, !dbg !13867
  br label %15, !dbg !13867

11:                                               ; preds = %3
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef nonnull %1, %struct._sfnode* noundef %5) #26, !dbg !13869
  %12 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %0) #26, !dbg !13871
  %13 = icmp eq %struct._sfnode* %12, %2, !dbg !13871
  br i1 %13, label %14, label %15, !dbg !13869

14:                                               ; preds = %11
  tail call fastcc void @z_sflist_tail_set(%struct._sflist* noundef %0, %struct._sfnode* noundef nonnull %1) #26, !dbg !13873
  br label %15, !dbg !13873

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_sfnode_next_set(%struct._sfnode* noundef %2, %struct._sfnode* noundef null) #26, !dbg !13862
  ret void, !dbg !13862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @sys_sflist_peek_next(%struct._sfnode* noundef readonly %0) unnamed_addr #7 !dbg !13875 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13877, metadata !DIExpression()), !dbg !13878
  %2 = icmp eq %struct._sfnode* %0, null, !dbg !13879
  br i1 %2, label %5, label %3, !dbg !13879

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._sfnode* @sys_sflist_peek_next_no_check(%struct._sfnode* noundef nonnull %0) #26, !dbg !13879
  br label %5, !dbg !13879

5:                                                ; preds = %1, %3
  %6 = phi %struct._sfnode* [ %4, %3 ], [ null, %1 ], !dbg !13879
  ret %struct._sfnode* %6, !dbg !13879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._sfnode* @sys_sflist_peek_next_no_check(%struct._sfnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !13880 {
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !13882, metadata !DIExpression()), !dbg !13883
  %2 = tail call fastcc %struct._sfnode* @z_sfnode_next_peek(%struct._sfnode* noundef %0) #26, !dbg !13884
  ret %struct._sfnode* %2, !dbg !13884
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_queue_unique_append(%struct.k_queue* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13885 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13887, metadata !DIExpression()), !dbg !13890
  call void @llvm.dbg.value(metadata i8* %1, metadata !13888, metadata !DIExpression()), !dbg !13890
  %3 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13891
  %4 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %3) #26, !dbg !13891
  call void @llvm.dbg.value(metadata %struct._sfnode* %4, metadata !13889, metadata !DIExpression()), !dbg !13890
  %5 = icmp eq %struct._sfnode* %4, null, !dbg !13893
  br i1 %5, label %14, label %6, !dbg !13891

6:                                                ; preds = %2
  %7 = bitcast i8* %1 to %struct._sfnode*
  br label %8, !dbg !13891

8:                                                ; preds = %6, %11
  %9 = phi %struct._sfnode* [ %4, %6 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !13889, metadata !DIExpression()), !dbg !13890
  %10 = icmp eq %struct._sfnode* %9, %7, !dbg !13895
  br i1 %10, label %15, label %11, !dbg !13898

11:                                               ; preds = %8
  %12 = tail call fastcc %struct._sfnode* @sys_sflist_peek_next(%struct._sfnode* noundef nonnull %9) #26, !dbg !13893
  call void @llvm.dbg.value(metadata %struct._sfnode* %12, metadata !13889, metadata !DIExpression()), !dbg !13890
  %13 = icmp eq %struct._sfnode* %12, null, !dbg !13893
  br i1 %13, label %14, label %8, !dbg !13891, !llvm.loop !13899

14:                                               ; preds = %11, %2
  tail call void @k_queue_append(%struct.k_queue* noundef %0, i8* noundef %1) #26, !dbg !13901
  br label %15, !dbg !13902

15:                                               ; preds = %8, %14
  %16 = phi i1 [ true, %14 ], [ false, %8 ]
  ret i1 %16, !dbg !13903
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_head(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !13904 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13908, metadata !DIExpression()), !dbg !13910
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13911
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_head(%struct._sflist* noundef %2) #26, !dbg !13912
  %4 = tail call i8* @z_queue_node_peek(%struct._sfnode* noundef %3, i1 noundef zeroext false) #26, !dbg !13913
  call void @llvm.dbg.value(metadata i8* %4, metadata !13909, metadata !DIExpression()), !dbg !13910
  ret i8* %4, !dbg !13914
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_impl_k_queue_peek_tail(%struct.k_queue* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !13915 {
  call void @llvm.dbg.value(metadata %struct.k_queue* %0, metadata !13917, metadata !DIExpression()), !dbg !13919
  %2 = getelementptr inbounds %struct.k_queue, %struct.k_queue* %0, i32 0, i32 0, !dbg !13920
  %3 = tail call fastcc %struct._sfnode* @sys_sflist_peek_tail(%struct._sflist* noundef %2) #26, !dbg !13921
  %4 = tail call i8* @z_queue_node_peek(%struct._sfnode* noundef %3, i1 noundef zeroext false) #26, !dbg !13922
  call void @llvm.dbg.value(metadata i8* %4, metadata !13918, metadata !DIExpression()), !dbg !13919
  ret i8* %4, !dbg !13923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #7 !dbg !13924 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13928, metadata !DIExpression()), !dbg !13932
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13929, metadata !DIExpression()), !dbg !13932
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13933
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13933
  %5 = load i8, i8* %4, align 2, !dbg !13933
  call void @llvm.dbg.value(metadata i8 %5, metadata !13930, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13932
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13934
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13934
  %8 = load i8, i8* %7, align 2, !dbg !13934
  call void @llvm.dbg.value(metadata i8 %8, metadata !13931, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13932
  %9 = icmp eq i8 %8, %5, !dbg !13935
  %10 = sext i8 %5 to i32, !dbg !13937
  %11 = sext i8 %8 to i32, !dbg !13937
  %12 = sub nsw i32 %11, %10, !dbg !13937
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13937
  ret i32 %13, !dbg !13938
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13939 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13943, metadata !DIExpression()), !dbg !13944
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !13945
  %3 = icmp eq i32 %2, 0, !dbg !13947
  br i1 %3, label %8, label %4, !dbg !13948

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !13949
  %6 = add i32 %5, %2, !dbg !13951
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13952
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !13953
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !13954
  br label %8, !dbg !13955

8:                                                ; preds = %4, %1
  ret void, !dbg !13956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #7 !dbg !13957 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13961, metadata !DIExpression()), !dbg !13963
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13964
  call void @llvm.dbg.value(metadata i32 %1, metadata !13962, metadata !DIExpression()), !dbg !13963
  ret i32 %1, !dbg !13965
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13970, metadata !DIExpression()), !dbg !13979
  call void @llvm.dbg.value(metadata i32 %1, metadata !13971, metadata !DIExpression()), !dbg !13979
  call void @llvm.dbg.value(metadata i32 0, metadata !13972, metadata !DIExpression()), !dbg !13980
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !13988
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13990, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !13997
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !13997
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !13988
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !13998
  br i1 %4, label %6, label %5, !dbg !14001

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !14002
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14002
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !14002
  unreachable, !dbg !14002

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !13997
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !13988
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14004
  call void @llvm.dbg.value(metadata i32 undef, metadata !13978, metadata !DIExpression()), !dbg !13980
  call void @llvm.dbg.value(metadata i32 undef, metadata !13972, metadata !DIExpression()), !dbg !13980
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14005
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !14008
  %8 = icmp sgt i32 %0, 0, !dbg !14009
  %9 = icmp sgt i32 %7, 2, !dbg !14011
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14011
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14011
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14012
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14013
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !14021
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !14021
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14023
  br i1 %12, label %14, label %13, !dbg !14026

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !14027
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14027
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !14027
  unreachable, !dbg !14027

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !13990
  call void @llvm.dbg.value(metadata i32 %15, metadata !13993, metadata !DIExpression()) #25, !dbg !13997
  call void @llvm.dbg.value(metadata i32 %15, metadata !13987, metadata !DIExpression()) #25, !dbg !13988
  call void @llvm.dbg.value(metadata i32 %15, metadata !13978, metadata !DIExpression()), !dbg !13980
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !14021
  call void @llvm.dbg.value(metadata i32 undef, metadata !14029, metadata !DIExpression()) #25, !dbg !14032
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !14034, !srcloc !14035
  call void @llvm.dbg.value(metadata i32 1, metadata !13972, metadata !DIExpression()), !dbg !13980
  call void @llvm.dbg.value(metadata i32 undef, metadata !13972, metadata !DIExpression()), !dbg !13980
  ret void, !dbg !14036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14037 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14039, metadata !DIExpression()), !dbg !14040
  call void @llvm.dbg.value(metadata i32 %0, metadata !14041, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14056
  call void @llvm.dbg.value(metadata i32 1000, metadata !14044, metadata !DIExpression()), !dbg !14056
  call void @llvm.dbg.value(metadata i32 10000, metadata !14045, metadata !DIExpression()), !dbg !14056
  call void @llvm.dbg.value(metadata i8 1, metadata !14046, metadata !DIExpression()), !dbg !14056
  call void @llvm.dbg.value(metadata i1 true, metadata !14047, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14056
  call void @llvm.dbg.value(metadata i1 true, metadata !14048, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14056
  call void @llvm.dbg.value(metadata i8 0, metadata !14049, metadata !DIExpression()), !dbg !14056
  call void @llvm.dbg.value(metadata i1 true, metadata !14050, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14056
  call void @llvm.dbg.value(metadata i1 false, metadata !14051, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14056
  call void @llvm.dbg.value(metadata i64 0, metadata !14052, metadata !DIExpression()), !dbg !14056
  call void @llvm.dbg.value(metadata i64 0, metadata !14052, metadata !DIExpression()), !dbg !14056
  %2 = mul i32 %0, 10, !dbg !14058
  ret i32 %2, !dbg !14064
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14065 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14067, metadata !DIExpression()), !dbg !14069
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !14070
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14072, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !14074
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !14074
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !14070
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14075
  br i1 %3, label %5, label %4, !dbg !14076

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !14077
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14077
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !14077
  unreachable, !dbg !14077

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14072
  call void @llvm.dbg.value(metadata i32 %6, metadata !13993, metadata !DIExpression()) #25, !dbg !14074
  call void @llvm.dbg.value(metadata i32 %6, metadata !13987, metadata !DIExpression()) #25, !dbg !14070
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14078
  call void @llvm.dbg.value(metadata i32 %6, metadata !14068, metadata !DIExpression()), !dbg !14069
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14079
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14081
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14082
  br i1 %9, label %10, label %14, !dbg !14083

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14084
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !14086
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !14086
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14088
  br i1 %11, label %13, label %12, !dbg !14089

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !14090
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14090
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !14090
  unreachable, !dbg !14090

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14015, metadata !DIExpression()) #25, !dbg !14086
  call void @llvm.dbg.value(metadata i32 %6, metadata !14029, metadata !DIExpression()) #25, !dbg !14091
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !14093, !srcloc !14035
  br label %33, !dbg !14094

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14095
  %15 = tail call fastcc i32 @slice_time() #26, !dbg !14096
  %16 = icmp eq i32 %15, 0, !dbg !14096
  br i1 %16, label %27, label %17, !dbg !14098

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #26, !dbg !14099
  br i1 %18, label %19, label %27, !dbg !14100

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14101
  %21 = icmp sgt i32 %20, %0, !dbg !14104
  br i1 %21, label %25, label %22, !dbg !14105

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14106
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #26, !dbg !14106
  call void @llvm.dbg.value(metadata i32 %24, metadata !14068, metadata !DIExpression()), !dbg !14069
  br label %28, !dbg !14108

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14109
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14109
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14111
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14069
  call void @llvm.dbg.value(metadata i32 %29, metadata !14068, metadata !DIExpression()), !dbg !14069
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !14113
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !14113
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14115
  br i1 %30, label %32, label %31, !dbg !14116

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !14117
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14117
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !14117
  unreachable, !dbg !14117

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14015, metadata !DIExpression()) #25, !dbg !14113
  call void @llvm.dbg.value(metadata i32 %29, metadata !14029, metadata !DIExpression()) #25, !dbg !14118
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #25, !dbg !14120, !srcloc !14035
  br label %33, !dbg !14121

33:                                               ; preds = %32, %13
  ret void, !dbg !14121
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !14122 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14126, metadata !DIExpression()), !dbg !14128
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !14129
  %3 = icmp eq i32 %2, 0, !dbg !14129
  br i1 %3, label %16, label %4, !dbg !14130

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14131
  br i1 %5, label %16, label %6, !dbg !14132

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14133
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14133
  %9 = load i8, i8* %8, align 2, !dbg !14133
  %10 = sext i8 %9 to i32, !dbg !14134
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14135
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !14136
  br i1 %12, label %16, label %13, !dbg !14137

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !14138
  %15 = xor i1 %14, true, !dbg !14139
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14128
  call void @llvm.dbg.value(metadata i1 %17, metadata !14127, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14128
  ret i1 %17, !dbg !14140
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14141 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14145, metadata !DIExpression()), !dbg !14147
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14148
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14146, metadata !DIExpression()), !dbg !14147
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !14149
  br i1 %3, label %5, label %4, !dbg !14151

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !14152
  br label %5, !dbg !14154

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14145, metadata !DIExpression()), !dbg !14147
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14155
  ret i32 %6, !dbg !14156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14157 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14159, metadata !DIExpression()), !dbg !14161
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14162
  %3 = load i8, i8* %2, align 1, !dbg !14162
  call void @llvm.dbg.value(metadata i8 %3, metadata !14160, metadata !DIExpression()), !dbg !14161
  %4 = and i8 %3, 31, !dbg !14163
  %5 = icmp ne i8 %4, 0, !dbg !14164
  ret i1 %5, !dbg !14165
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14166 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14168, metadata !DIExpression()), !dbg !14169
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14170
  br i1 %2, label %3, label %7, !dbg !14172

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14173, metadata !DIExpression()) #25, !dbg !14176
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14179
  %5 = load i8, i8* %4, align 1, !dbg !14180
  %6 = and i8 %5, 127, !dbg !14180
  store i8 %6, i8* %4, align 1, !dbg !14180
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14181, metadata !DIExpression()) #25, !dbg !14184
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14188
  br label %7, !dbg !14189

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14190, metadata !DIExpression()) #25, !dbg !14193
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14195
  %9 = load i8, i8* %8, align 1, !dbg !14196
  %10 = or i8 %9, -128, !dbg !14196
  store i8 %10, i8* %8, align 1, !dbg !14196
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14197, metadata !DIExpression()) #25, !dbg !14200
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14204, metadata !DIExpression()) #25, !dbg !14212
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14210, metadata !DIExpression()) #25, !dbg !14212
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !14214
  br i1 %11, label %12, label %13, !dbg !14217

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 186) #27, !dbg !14218
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 186) #27, !dbg !14218
  unreachable, !dbg !14218

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14220
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14211, metadata !DIExpression()) #25, !dbg !14212
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14222
  br i1 %15, label %26, label %16, !dbg !14220

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14211, metadata !DIExpression()) #25, !dbg !14212
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14224
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14211, metadata !DIExpression()) #25, !dbg !14212
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #27, !dbg !14225
  %20 = icmp sgt i32 %19, 0, !dbg !14228
  br i1 %20, label %21, label %23, !dbg !14229

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14230
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #27, !dbg !14232
  br label %28, !dbg !14233

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #27, !dbg !14222
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14211, metadata !DIExpression()) #25, !dbg !14212
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14222
  br i1 %25, label %26, label %16, !dbg !14220, !llvm.loop !14234

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14236
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #27, !dbg !14237
  br label %28, !dbg !14238

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14239
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14240
  %31 = zext i1 %30 to i32, !dbg !14240
  tail call fastcc void @update_cache(i32 noundef %31) #26, !dbg !14241
  ret void, !dbg !14242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14243 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14245, metadata !DIExpression()), !dbg !14246
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #26, !dbg !14247
  ret i1 %2, !dbg !14248
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14249 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14251, metadata !DIExpression()), !dbg !14253
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14252, metadata !DIExpression()), !dbg !14253
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #26, !dbg !14254
  br i1 %3, label %4, label %5, !dbg !14257

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1139) #27, !dbg !14258
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1139) #27, !dbg !14258
  unreachable, !dbg !14258

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14260
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #26, !dbg !14261
  ret void, !dbg !14262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !14263 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14265, metadata !DIExpression()), !dbg !14266
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14267
  ret i1 %2, !dbg !14268
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14269 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14273, metadata !DIExpression()), !dbg !14274
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !14275
  br i1 %2, label %6, label %3, !dbg !14275

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14276
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14276
  br label %6, !dbg !14275

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14275
  ret %struct._dnode* %7, !dbg !14277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14278 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14282, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14283, metadata !DIExpression()), !dbg !14286
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14287
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14287
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14284, metadata !DIExpression()), !dbg !14286
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14288
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14289
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14290
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14291
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14292
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14293
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14294
  ret void, !dbg !14295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #7 !dbg !14296 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14300, metadata !DIExpression()), !dbg !14302
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14301, metadata !DIExpression()), !dbg !14302
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14303
  br i1 %3, label %6, label %4, !dbg !14304

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !14305
  br label %6, !dbg !14304

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14304
  ret %struct._dnode* %7, !dbg !14306
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14307 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14311, metadata !DIExpression()), !dbg !14314
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14312, metadata !DIExpression()), !dbg !14314
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14315
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14315
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14313, metadata !DIExpression()), !dbg !14314
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14316
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14317
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14318
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14319
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14320
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14321
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14322
  ret void, !dbg !14323
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14326, metadata !DIExpression()), !dbg !14328
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14329
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14336, metadata !DIExpression()) #25, !dbg !14338
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14339
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14340
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14340
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14327, metadata !DIExpression()), !dbg !14328
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14341, metadata !DIExpression()) #25, !dbg !14347
  call void @llvm.dbg.value(metadata i32 %0, metadata !14346, metadata !DIExpression()) #25, !dbg !14347
  %6 = icmp eq i32 %0, 0, !dbg !14350
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14352
  br i1 %6, label %8, label %18, !dbg !14353

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14354
  br i1 %9, label %10, label %11, !dbg !14357

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 137) #27, !dbg !14358
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.233, i32 0, i32 0)) #27, !dbg !14358
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 137) #27, !dbg !14358
  unreachable, !dbg !14358

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #27, !dbg !14360
  br i1 %12, label %18, label %13, !dbg !14362

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !14363
  br i1 %14, label %18, label %15, !dbg !14365

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #27, !dbg !14366
  %17 = icmp eq i32 %16, 0, !dbg !14366
  br i1 %17, label %21, label %18, !dbg !14368

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14369
  br i1 %19, label %21, label %20, !dbg !14372

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14373
  br label %21, !dbg !14375

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14352
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14352
  ret void, !dbg !14376
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #7 !dbg !14377 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14381, metadata !DIExpression()), !dbg !14384
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14382, metadata !DIExpression()), !dbg !14384
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !14385
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14383, metadata !DIExpression()), !dbg !14384
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14382, metadata !DIExpression()), !dbg !14384
  ret %struct.k_thread* %3, !dbg !14386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14387 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14389, metadata !DIExpression()), !dbg !14390
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14391
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14392
  %4 = xor i1 %3, true, !dbg !14393
  ret i1 %4, !dbg !14394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14395 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14397, metadata !DIExpression()), !dbg !14398
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14399
  %3 = load i16, i16* %2, align 2, !dbg !14399
  %4 = icmp ult i16 %3, 128, !dbg !14400
  %5 = zext i1 %4 to i32, !dbg !14400
  ret i32 %5, !dbg !14401
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14402 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14408, metadata !DIExpression()), !dbg !14409
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14410
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !14411
  %4 = xor i1 %3, true, !dbg !14412
  ret i1 %4, !dbg !14413
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14414 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14420, metadata !DIExpression()), !dbg !14421
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14422
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14422
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14423
  ret i1 %4, !dbg !14424
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #7 !dbg !14425 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14427, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14428, metadata !DIExpression()), !dbg !14429
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14430
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14430
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14431
  br i1 %5, label %9, label %6, !dbg !14432

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14433
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14433
  br label %9, !dbg !14432

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14432
  ret %struct._dnode* %10, !dbg !14434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #7 !dbg !14435 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14439, metadata !DIExpression()), !dbg !14440
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14441
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14441
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14442
  ret i1 %4, !dbg !14443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14444 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14448, metadata !DIExpression()), !dbg !14451
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14452
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14452
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14449, metadata !DIExpression()), !dbg !14451
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14453
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14453
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14450, metadata !DIExpression()), !dbg !14451
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14454
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14455
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14456
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14457
  tail call fastcc void @sys_dnode_init.234(%struct._dnode* noundef %0) #26, !dbg !14458
  ret void, !dbg !14459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.234(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !14460 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14462, metadata !DIExpression()), !dbg !14463
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14464
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14465
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14466
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14467
  ret void, !dbg !14468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #7 !dbg !14469 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14473, metadata !DIExpression()), !dbg !14475
  call void @llvm.dbg.value(metadata i32 %1, metadata !14474, metadata !DIExpression()), !dbg !14475
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14476
  %4 = load i8, i8* %3, align 1, !dbg !14476
  %5 = zext i8 %4 to i32, !dbg !14477
  %6 = and i32 %5, %1, !dbg !14478
  %7 = icmp ne i32 %6, 0, !dbg !14479
  ret i1 %7, !dbg !14480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14481 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14485, metadata !DIExpression()), !dbg !14487
  call void @llvm.dbg.value(metadata i32 %1, metadata !14486, metadata !DIExpression()), !dbg !14487
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !14488
  ret i1 %3, !dbg !14489
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14490 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14492, metadata !DIExpression()), !dbg !14494
  call void @llvm.dbg.value(metadata i32 %1, metadata !14493, metadata !DIExpression()), !dbg !14494
  %3 = icmp slt i32 %0, %1, !dbg !14495
  ret i1 %3, !dbg !14496
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14497 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14499, metadata !DIExpression()), !dbg !14503
  call void @llvm.dbg.value(metadata i32 0, metadata !14500, metadata !DIExpression()), !dbg !14504
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !14505
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14507, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !14509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !14509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !14505
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14510
  br i1 %3, label %5, label %4, !dbg !14511

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !14512
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14512
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !14512
  unreachable, !dbg !14512

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !14509
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !14505
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14513
  call void @llvm.dbg.value(metadata i32 undef, metadata !14502, metadata !DIExpression()), !dbg !14504
  call void @llvm.dbg.value(metadata i32 undef, metadata !14500, metadata !DIExpression()), !dbg !14504
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14514
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !14519
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !14519
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14521
  br i1 %6, label %8, label %7, !dbg !14522

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !14523
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14523
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !14523
  unreachable, !dbg !14523

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14507
  call void @llvm.dbg.value(metadata i32 %9, metadata !13993, metadata !DIExpression()) #25, !dbg !14509
  call void @llvm.dbg.value(metadata i32 %9, metadata !13987, metadata !DIExpression()) #25, !dbg !14505
  call void @llvm.dbg.value(metadata i32 %9, metadata !14502, metadata !DIExpression()), !dbg !14504
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !14519
  call void @llvm.dbg.value(metadata i32 undef, metadata !14029, metadata !DIExpression()) #25, !dbg !14524
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !14526, !srcloc !14035
  call void @llvm.dbg.value(metadata i32 1, metadata !14500, metadata !DIExpression()), !dbg !14504
  call void @llvm.dbg.value(metadata i32 undef, metadata !14500, metadata !DIExpression()), !dbg !14504
  ret void, !dbg !14527
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14528 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14530, metadata !DIExpression()), !dbg !14531
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14532
  br i1 %2, label %27, label %3, !dbg !14534

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14535
  br i1 %4, label %5, label %27, !dbg !14536

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14190, metadata !DIExpression()) #25, !dbg !14537
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14540
  %7 = load i8, i8* %6, align 1, !dbg !14541
  %8 = or i8 %7, -128, !dbg !14541
  store i8 %8, i8* %6, align 1, !dbg !14541
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14197, metadata !DIExpression()) #25, !dbg !14542
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14204, metadata !DIExpression()) #25, !dbg !14544
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14210, metadata !DIExpression()) #25, !dbg !14544
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !14546
  br i1 %9, label %10, label %11, !dbg !14547

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 186) #27, !dbg !14548
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 186) #27, !dbg !14548
  unreachable, !dbg !14548

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14549
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14211, metadata !DIExpression()) #25, !dbg !14544
  %13 = icmp eq %struct._dnode* %12, null, !dbg !14550
  br i1 %13, label %24, label %14, !dbg !14549

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14211, metadata !DIExpression()) #25, !dbg !14544
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !14551
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14211, metadata !DIExpression()) #25, !dbg !14544
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #27, !dbg !14552
  %18 = icmp sgt i32 %17, 0, !dbg !14553
  br i1 %18, label %19, label %21, !dbg !14554

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14555
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #27, !dbg !14556
  br label %26, !dbg !14557

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #27, !dbg !14550
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14211, metadata !DIExpression()) #25, !dbg !14544
  %23 = icmp eq %struct._dnode* %22, null, !dbg !14550
  br i1 %23, label %24, label %14, !dbg !14549, !llvm.loop !14558

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14560
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #27, !dbg !14561
  br label %26, !dbg !14562

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14563
  br label %27, !dbg !14564

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !14565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14566 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14568, metadata !DIExpression()), !dbg !14569
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14570
  br i1 %2, label %6, label %3, !dbg !14571

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !14572
  %5 = xor i1 %4, true, !dbg !14571
  br label %6, !dbg !14571

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14573
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14574 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14576, metadata !DIExpression()), !dbg !14580
  call void @llvm.dbg.value(metadata i32 0, metadata !14577, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !14582
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14584, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !14586
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !14586
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !14582
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14587
  br i1 %3, label %5, label %4, !dbg !14588

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !14589
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14589
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !14589
  unreachable, !dbg !14589

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !14586
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !14582
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14590
  call void @llvm.dbg.value(metadata i32 undef, metadata !14579, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.value(metadata i32 undef, metadata !14577, metadata !DIExpression()), !dbg !14581
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !14591
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !14594
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !14594
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14596
  br i1 %6, label %8, label %7, !dbg !14597

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !14598
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14598
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !14598
  unreachable, !dbg !14598

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14584
  call void @llvm.dbg.value(metadata i32 %9, metadata !13993, metadata !DIExpression()) #25, !dbg !14586
  call void @llvm.dbg.value(metadata i32 %9, metadata !13987, metadata !DIExpression()) #25, !dbg !14582
  call void @llvm.dbg.value(metadata i32 %9, metadata !14579, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !14594
  call void @llvm.dbg.value(metadata i32 undef, metadata !14029, metadata !DIExpression()) #25, !dbg !14599
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !14601, !srcloc !14035
  call void @llvm.dbg.value(metadata i32 1, metadata !14577, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.value(metadata i32 undef, metadata !14577, metadata !DIExpression()), !dbg !14581
  ret void, !dbg !14602
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14603 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14605, metadata !DIExpression()), !dbg !14607
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !14608
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14610, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !14612
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !14612
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !14608
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14613
  br i1 %3, label %5, label %4, !dbg !14614

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !14615
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14615
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !14615
  unreachable, !dbg !14615

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14610
  call void @llvm.dbg.value(metadata i32 %6, metadata !13993, metadata !DIExpression()) #25, !dbg !14612
  call void @llvm.dbg.value(metadata i32 %6, metadata !13987, metadata !DIExpression()) #25, !dbg !14608
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14616
  call void @llvm.dbg.value(metadata i32 %6, metadata !14606, metadata !DIExpression()), !dbg !14607
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !14617
  br i1 %7, label %8, label %12, !dbg !14619

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !14620
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !14620
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14623
  br i1 %9, label %11, label %10, !dbg !14624

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !14625
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14625
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !14625
  unreachable, !dbg !14625

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14015, metadata !DIExpression()) #25, !dbg !14620
  call void @llvm.dbg.value(metadata i32 %6, metadata !14029, metadata !DIExpression()) #25, !dbg !14626
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !14628, !srcloc !14035
  br label %14, !dbg !14629

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.239(%struct.k_thread* noundef %0) #26, !dbg !14630
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14631
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14632
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull @sched_spinlock, [1 x i32] %13) #26, !dbg !14632
  br label %14, !dbg !14633

14:                                               ; preds = %12, %11
  ret void, !dbg !14633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14634 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14636, metadata !DIExpression()), !dbg !14637
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14638
  %3 = load i8, i8* %2, align 1, !dbg !14638
  %4 = and i8 %3, 4, !dbg !14639
  %5 = icmp eq i8 %4, 0, !dbg !14640
  ret i1 %5, !dbg !14641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.239(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14642 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14644, metadata !DIExpression()), !dbg !14645
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14646
  %3 = load i8, i8* %2, align 1, !dbg !14647
  %4 = and i8 %3, -5, !dbg !14647
  store i8 %4, i8* %2, align 1, !dbg !14647
  ret void, !dbg !14648
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct._sfnode* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14649 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14652, metadata !DIExpression()), !dbg !14653
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14651, metadata !DIExpression()), !dbg !14653
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !14654
  br i1 %4, label %5, label %12, !dbg !14656

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !14657
  br i1 %6, label %7, label %12, !dbg !14658

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #25, !dbg !14665
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14664, metadata !DIExpression()) #25, !dbg !14665
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14668, metadata !DIExpression()) #25, !dbg !14673
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef %0) #27, !dbg !14675
  br i1 %8, label %10, label %9, !dbg !14678

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 225) #27, !dbg !14679
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef %0) #27, !dbg !14679
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 225) #27, !dbg !14679
  unreachable, !dbg !14679

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14659, metadata !DIExpression()) #25, !dbg !14665
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !14681
  br label %16, !dbg !14682

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !14683
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14020, metadata !DIExpression()) #25, !dbg !14683
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef %0) #27, !dbg !14686
  br i1 %13, label %15, label %14, !dbg !14687

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !14688
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef %0) #27, !dbg !14688
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !14688
  unreachable, !dbg !14688

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14015, metadata !DIExpression()) #25, !dbg !14683
  call void @llvm.dbg.value(metadata i32 %3, metadata !14029, metadata !DIExpression()) #25, !dbg !14689
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14691, !srcloc !14035
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14692
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14693 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14697, metadata !DIExpression()), !dbg !14698
  call void @llvm.dbg.value(metadata i32 %0, metadata !14699, metadata !DIExpression()), !dbg !14704
  %2 = icmp eq i32 %0, 0, !dbg !14706
  br i1 %2, label %3, label %6, !dbg !14707

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !14708, !srcloc !14715
  call void @llvm.dbg.value(metadata i32 %4, metadata !14711, metadata !DIExpression()) #25, !dbg !14716
  %5 = icmp eq i32 %4, 0, !dbg !14717
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14698
  ret i1 %7, !dbg !14718
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #7 !dbg !14719 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14722
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14721, metadata !DIExpression()), !dbg !14723
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14724
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14725
  ret i1 %3, !dbg !14726
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14729, metadata !DIExpression()), !dbg !14731
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !14732
  call void @llvm.dbg.value(metadata i32 %2, metadata !14730, metadata !DIExpression()), !dbg !14731
  ret i32 %2, !dbg !14733
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14734 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14736, metadata !DIExpression()), !dbg !14740
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14741
  call void @llvm.dbg.value(metadata i32 0, metadata !14737, metadata !DIExpression()), !dbg !14742
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !14743
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14745, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !14747
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !14747
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !14743
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14748
  br i1 %4, label %6, label %5, !dbg !14749

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !14750
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14750
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !14750
  unreachable, !dbg !14750

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14745
  call void @llvm.dbg.value(metadata i32 %7, metadata !13993, metadata !DIExpression()) #25, !dbg !14747
  call void @llvm.dbg.value(metadata i32 %7, metadata !13987, metadata !DIExpression()) #25, !dbg !14743
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14751
  call void @llvm.dbg.value(metadata i32 %7, metadata !14739, metadata !DIExpression()), !dbg !14742
  call void @llvm.dbg.value(metadata i32 undef, metadata !14737, metadata !DIExpression()), !dbg !14742
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14752
  br i1 %8, label %9, label %13, !dbg !14756

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14173, metadata !DIExpression()) #25, !dbg !14757
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14760
  %11 = load i8, i8* %10, align 1, !dbg !14761
  %12 = and i8 %11, 127, !dbg !14761
  store i8 %12, i8* %10, align 1, !dbg !14761
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14181, metadata !DIExpression()) #25, !dbg !14762
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14764
  br label %13, !dbg !14765

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !14766
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14767
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14768
  %16 = zext i1 %15 to i32, !dbg !14768
  tail call fastcc void @update_cache(i32 noundef %16) #26, !dbg !14769
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !14770
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !14770
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14772
  br i1 %17, label %19, label %18, !dbg !14773

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !14774
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14774
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !14774
  unreachable, !dbg !14774

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14015, metadata !DIExpression()) #25, !dbg !14770
  call void @llvm.dbg.value(metadata i32 %7, metadata !14029, metadata !DIExpression()) #25, !dbg !14775
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !14777, !srcloc !14035
  call void @llvm.dbg.value(metadata i32 1, metadata !14737, metadata !DIExpression()), !dbg !14742
  call void @llvm.dbg.value(metadata i32 undef, metadata !14737, metadata !DIExpression()), !dbg !14742
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14778
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14780
  br i1 %21, label %22, label %23, !dbg !14781

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14782
  br label %23, !dbg !14784

23:                                               ; preds = %22, %19
  ret void, !dbg !14785
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14786 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14788, metadata !DIExpression()), !dbg !14789
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14790
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !14791
  ret i32 %3, !dbg !14792
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14793 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14795, metadata !DIExpression()), !dbg !14796
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14797
  %3 = load i8, i8* %2, align 1, !dbg !14798
  %4 = or i8 %3, 16, !dbg !14798
  store i8 %4, i8* %2, align 1, !dbg !14798
  ret void, !dbg !14799
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14800 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14801, !srcloc !13996
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14801
  call void @llvm.dbg.value(metadata i32 %2, metadata !13993, metadata !DIExpression()) #25, !dbg !14803
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !14803
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !14804
  ret void, !dbg !14805
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14806 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14808, metadata !DIExpression()), !dbg !14809
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !14810
  br i1 %2, label %3, label %5, !dbg !14812

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !14813
  br label %6, !dbg !14815

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14029, metadata !DIExpression()) #25, !dbg !14816
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !14819, !srcloc !14035
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14820
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14821 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14823, metadata !DIExpression()), !dbg !14825
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !14826
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14828, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !14830
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !14830
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !14826
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14831
  br i1 %3, label %5, label %4, !dbg !14832

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !14833
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14833
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !14833
  unreachable, !dbg !14833

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14828
  call void @llvm.dbg.value(metadata i32 %6, metadata !13993, metadata !DIExpression()) #25, !dbg !14830
  call void @llvm.dbg.value(metadata i32 %6, metadata !13987, metadata !DIExpression()) #25, !dbg !14826
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14834
  call void @llvm.dbg.value(metadata i32 %6, metadata !14824, metadata !DIExpression()), !dbg !14825
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !14835
  br i1 %7, label %12, label %8, !dbg !14837

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !14838
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !14838
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14841
  br i1 %9, label %11, label %10, !dbg !14842

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !14843
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14843
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !14843
  unreachable, !dbg !14843

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14015, metadata !DIExpression()) #25, !dbg !14838
  call void @llvm.dbg.value(metadata i32 %6, metadata !14029, metadata !DIExpression()) #25, !dbg !14844
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !14846, !srcloc !14035
  br label %14, !dbg !14847

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !14848
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14849
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14850
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull @sched_spinlock, [1 x i32] %13) #26, !dbg !14850
  br label %14, !dbg !14851

14:                                               ; preds = %12, %11
  ret void, !dbg !14851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14852 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14854, metadata !DIExpression()), !dbg !14855
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14856
  %3 = load i8, i8* %2, align 1, !dbg !14856
  %4 = and i8 %3, 16, !dbg !14857
  %5 = icmp ne i8 %4, 0, !dbg !14858
  ret i1 %5, !dbg !14859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14860 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14862, metadata !DIExpression()), !dbg !14863
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14864
  %3 = load i8, i8* %2, align 1, !dbg !14865
  %4 = and i8 %3, -17, !dbg !14865
  store i8 %4, i8* %2, align 1, !dbg !14865
  ret void, !dbg !14866
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14867 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14877, metadata !DIExpression()), !dbg !14881
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14875, metadata !DIExpression()), !dbg !14881
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14876, metadata !DIExpression()), !dbg !14881
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14882
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !14882
  br i1 %5, label %9, label %6, !dbg !14882

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #26, !dbg !14882
  br i1 %7, label %9, label %8, !dbg !14885

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 773) #27, !dbg !14886
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 773) #27, !dbg !14886
  unreachable, !dbg !14886

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !14878, metadata !DIExpression()), !dbg !14888
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !14889
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14891, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !14893
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !14893
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !14889
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14894
  br i1 %11, label %13, label %12, !dbg !14895

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !14896
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14896
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !14896
  unreachable, !dbg !14896

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !14893
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !14889
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14897
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()), !dbg !14888
  call void @llvm.dbg.value(metadata i32 undef, metadata !14878, metadata !DIExpression()), !dbg !14888
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !14898
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !14901
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !14901
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14903
  br i1 %14, label %16, label %15, !dbg !14904

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !14905
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !14905
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !14905
  unreachable, !dbg !14905

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !14891
  call void @llvm.dbg.value(metadata i32 %17, metadata !13993, metadata !DIExpression()) #25, !dbg !14893
  call void @llvm.dbg.value(metadata i32 %17, metadata !13987, metadata !DIExpression()) #25, !dbg !14889
  call void @llvm.dbg.value(metadata i32 %17, metadata !14880, metadata !DIExpression()), !dbg !14888
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !14901
  call void @llvm.dbg.value(metadata i32 undef, metadata !14029, metadata !DIExpression()) #25, !dbg !14906
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #25, !dbg !14908, !srcloc !14035
  call void @llvm.dbg.value(metadata i32 1, metadata !14878, metadata !DIExpression()), !dbg !14888
  call void @llvm.dbg.value(metadata i32 undef, metadata !14878, metadata !DIExpression()), !dbg !14888
  ret void, !dbg !14909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !14910 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14912, metadata !DIExpression()), !dbg !14913
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14914
  %3 = load i8, i8* %2, align 1, !dbg !14914
  %4 = and i8 %3, 1, !dbg !14915
  %5 = icmp ne i8 %4, 0, !dbg !14916
  ret i1 %5, !dbg !14917
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14918 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14922, metadata !DIExpression()), !dbg !14923
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14920, metadata !DIExpression()), !dbg !14923
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14921, metadata !DIExpression()), !dbg !14923
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #26, !dbg !14924
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !14925
  ret void, !dbg !14926
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !14927 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14931, metadata !DIExpression()), !dbg !14933
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14932, metadata !DIExpression()), !dbg !14933
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !14934
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !14935
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !14936
  br i1 %3, label %24, label %4, !dbg !14938

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14939
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !14941
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !14942
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14204, metadata !DIExpression()) #25, !dbg !14943
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14210, metadata !DIExpression()) #25, !dbg !14943
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !14945
  br i1 %7, label %8, label %9, !dbg !14946

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 186) #27, !dbg !14947
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 186) #27, !dbg !14947
  unreachable, !dbg !14947

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #27, !dbg !14948
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14211, metadata !DIExpression()) #25, !dbg !14943
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14949
  br i1 %11, label %22, label %12, !dbg !14948

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14211, metadata !DIExpression()) #25, !dbg !14943
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14950
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14211, metadata !DIExpression()) #25, !dbg !14943
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #27, !dbg !14951
  %16 = icmp sgt i32 %15, 0, !dbg !14952
  br i1 %16, label %17, label %19, !dbg !14953

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14954
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !14955
  br label %24, !dbg !14956

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #27, !dbg !14949
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14211, metadata !DIExpression()) #25, !dbg !14943
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14949
  br i1 %21, label %22, label %12, !dbg !14948, !llvm.loop !14957

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14959
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #27, !dbg !14960
  br label %24, !dbg !14961

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !14962
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14963 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14968, metadata !DIExpression()), !dbg !14969
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14967, metadata !DIExpression()), !dbg !14969
  %4 = icmp eq i64 %3, -1, !dbg !14970
  br i1 %4, label %6, label %5, !dbg !14972

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.243(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14973
  br label %6, !dbg !14975

6:                                                ; preds = %5, %2
  ret void, !dbg !14976
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.243(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14977 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14980, metadata !DIExpression()), !dbg !14981
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14979, metadata !DIExpression()), !dbg !14981
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14982
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !14983
  ret void, !dbg !14984
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !14985 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14987, metadata !DIExpression()), !dbg !14995
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14996
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14996
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14988, metadata !DIExpression()), !dbg !14995
  call void @llvm.dbg.value(metadata i32 0, metadata !14989, metadata !DIExpression()), !dbg !14997
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !14998
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15000, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15002
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !15002
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !14998
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15003
  br i1 %5, label %7, label %6, !dbg !15004

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15005
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15005
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15005
  unreachable, !dbg !15005

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15002
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !14998
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15006
  call void @llvm.dbg.value(metadata i32 undef, metadata !14991, metadata !DIExpression()), !dbg !14997
  call void @llvm.dbg.value(metadata i32 undef, metadata !14989, metadata !DIExpression()), !dbg !14997
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15007
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15008
  %10 = load i8, i8* %9, align 1, !dbg !15008
  %11 = and i8 %10, 40, !dbg !15009
  %12 = icmp eq i8 %11, 0, !dbg !15009
  call void @llvm.dbg.value(metadata i1 %12, metadata !14992, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15010
  br i1 %12, label %13, label %20, !dbg !15011

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15012
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !15012
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !15012
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !15016
  br i1 %17, label %19, label %18, !dbg !15017

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !15018
  br label %19, !dbg !15020

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.239(%struct.k_thread* noundef nonnull %3) #26, !dbg !15021
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !15022
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !15023
  br label %20, !dbg !15024

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !15025
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !15025
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15027
  br i1 %21, label %23, label %22, !dbg !15028

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !15029
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15029
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !15029
  unreachable, !dbg !15029

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15000
  call void @llvm.dbg.value(metadata i32 %24, metadata !13993, metadata !DIExpression()) #25, !dbg !15002
  call void @llvm.dbg.value(metadata i32 %24, metadata !13987, metadata !DIExpression()) #25, !dbg !14998
  call void @llvm.dbg.value(metadata i32 %24, metadata !14991, metadata !DIExpression()), !dbg !14997
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !15025
  call void @llvm.dbg.value(metadata i32 undef, metadata !14029, metadata !DIExpression()) #25, !dbg !15030
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #25, !dbg !15032, !srcloc !14035
  call void @llvm.dbg.value(metadata i32 1, metadata !14989, metadata !DIExpression()), !dbg !14997
  call void @llvm.dbg.value(metadata i32 undef, metadata !14989, metadata !DIExpression()), !dbg !14997
  ret void, !dbg !15033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15034 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15036, metadata !DIExpression()), !dbg !15037
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #26, !dbg !15038
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15039
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !15040
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15041
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !15042
  ret void, !dbg !15043
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15044 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15048, metadata !DIExpression()), !dbg !15049
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15050
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !15050
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !15050
  br i1 %4, label %5, label %6, !dbg !15053

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 726) #27, !dbg !15054
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 726) #27, !dbg !15054
  unreachable, !dbg !15054

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !15056
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15057 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15059, metadata !DIExpression()), !dbg !15060
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15061
  %3 = load i8, i8* %2, align 1, !dbg !15062
  %4 = and i8 %3, -3, !dbg !15062
  store i8 %4, i8* %2, align 1, !dbg !15062
  ret void, !dbg !15063
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15064 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15066, metadata !DIExpression()), !dbg !15067
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15068
  br i1 %2, label %3, label %7, !dbg !15070

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14173, metadata !DIExpression()) #25, !dbg !15071
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15074
  %5 = load i8, i8* %4, align 1, !dbg !15075
  %6 = and i8 %5, 127, !dbg !15075
  store i8 %6, i8* %4, align 1, !dbg !15075
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14181, metadata !DIExpression()) #25, !dbg !15076
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15078
  br label %7, !dbg !15079

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15080
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15081
  %10 = zext i1 %9 to i32, !dbg !15081
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !15082
  ret void, !dbg !15083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15084 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15086, metadata !DIExpression()), !dbg !15087
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15088
  %3 = load i8, i8* %2, align 1, !dbg !15089
  %4 = or i8 %3, 2, !dbg !15089
  store i8 %4, i8* %2, align 1, !dbg !15089
  ret void, !dbg !15090
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #23 !dbg !15091 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15093, metadata !DIExpression()), !dbg !15097
  call void @llvm.dbg.value(metadata i32 0, metadata !15094, metadata !DIExpression()), !dbg !15098
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !15099
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15101, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15103
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !15103
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15099
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15104
  br i1 %3, label %5, label %4, !dbg !15105

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15106
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15106
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15106
  unreachable, !dbg !15106

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15103
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15099
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15107
  call void @llvm.dbg.value(metadata i32 undef, metadata !15096, metadata !DIExpression()), !dbg !15098
  call void @llvm.dbg.value(metadata i32 undef, metadata !15094, metadata !DIExpression()), !dbg !15098
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15108
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !15111
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !15111
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15113
  br i1 %6, label %8, label %7, !dbg !15114

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !15115
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15115
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !15115
  unreachable, !dbg !15115

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15101
  call void @llvm.dbg.value(metadata i32 %9, metadata !13993, metadata !DIExpression()) #25, !dbg !15103
  call void @llvm.dbg.value(metadata i32 %9, metadata !13987, metadata !DIExpression()) #25, !dbg !15099
  call void @llvm.dbg.value(metadata i32 %9, metadata !15096, metadata !DIExpression()), !dbg !15098
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !15111
  call void @llvm.dbg.value(metadata i32 undef, metadata !14029, metadata !DIExpression()) #25, !dbg !15116
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15118, !srcloc !14035
  call void @llvm.dbg.value(metadata i32 1, metadata !15094, metadata !DIExpression()), !dbg !15098
  call void @llvm.dbg.value(metadata i32 undef, metadata !15094, metadata !DIExpression()), !dbg !15098
  ret void, !dbg !15119
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15120 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15126, metadata !DIExpression()), !dbg !15131
  call void @llvm.dbg.value(metadata i32 %0, metadata !15124, metadata !DIExpression()), !dbg !15131
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15125, metadata !DIExpression()), !dbg !15131
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15132
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !15133
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15134
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15135
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15136
  call void @llvm.dbg.value(metadata i32 %6, metadata !15127, metadata !DIExpression()), !dbg !15131
  call void @llvm.dbg.value(metadata i32 0, metadata !15128, metadata !DIExpression()), !dbg !15137
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !15138
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15140, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15142
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !15142
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15138
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15143
  br i1 %8, label %10, label %9, !dbg !15144

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15145
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15145
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15145
  unreachable, !dbg !15145

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15142
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15138
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15146
  call void @llvm.dbg.value(metadata i32 undef, metadata !15130, metadata !DIExpression()), !dbg !15137
  call void @llvm.dbg.value(metadata i32 undef, metadata !15128, metadata !DIExpression()), !dbg !15137
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15147
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15151
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15152
  br i1 %13, label %14, label %15, !dbg !15153

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15154
  br label %15, !dbg !15156

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !15157
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !15157
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15159
  br i1 %16, label %18, label %17, !dbg !15160

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !15161
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15161
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !15161
  unreachable, !dbg !15161

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15140
  call void @llvm.dbg.value(metadata i32 %19, metadata !13993, metadata !DIExpression()) #25, !dbg !15142
  call void @llvm.dbg.value(metadata i32 %19, metadata !13987, metadata !DIExpression()) #25, !dbg !15138
  call void @llvm.dbg.value(metadata i32 %19, metadata !15130, metadata !DIExpression()), !dbg !15137
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !15157
  call void @llvm.dbg.value(metadata i32 undef, metadata !14029, metadata !DIExpression()) #25, !dbg !15162
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #25, !dbg !15164, !srcloc !14035
  call void @llvm.dbg.value(metadata i32 1, metadata !15128, metadata !DIExpression()), !dbg !15137
  call void @llvm.dbg.value(metadata i32 undef, metadata !15128, metadata !DIExpression()), !dbg !15137
  ret i32 %6, !dbg !15165
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct._sfnode* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15166 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15171, metadata !DIExpression()), !dbg !15174
  call void @llvm.dbg.value(metadata i64 undef, metadata !15173, metadata !DIExpression()), !dbg !15174
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !15170, metadata !DIExpression()), !dbg !15174
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15172, metadata !DIExpression()), !dbg !15174
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15175
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15176
  %6 = icmp eq %struct._sfnode* %0, @sched_spinlock, !dbg !15177
  br i1 %6, label %7, label %8, !dbg !15180

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 846) #27, !dbg !15181
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 846) #27, !dbg !15181
  unreachable, !dbg !15181

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !15183
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15185, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15187
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !15187
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15183
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15188
  br i1 %10, label %12, label %11, !dbg !15189

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15190
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15190
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15190
  unreachable, !dbg !15190

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15187
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15183
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15191
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15192
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !15193
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !14668, metadata !DIExpression()) #25, !dbg !15194
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef %0) #27, !dbg !15196
  br i1 %14, label %16, label %15, !dbg !15197

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 225) #27, !dbg !15198
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef %0) #27, !dbg !15198
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 225) #27, !dbg !15198
  unreachable, !dbg !15198

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #25, !dbg !15199
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14664, metadata !DIExpression()) #25, !dbg !15199
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14668, metadata !DIExpression()) #25, !dbg !15201
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15203
  br i1 %17, label %19, label %18, !dbg !15204

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 225) #27, !dbg !15205
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15205
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 225) #27, !dbg !15205
  unreachable, !dbg !15205

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14659, metadata !DIExpression()) #25, !dbg !15199
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #27, !dbg !15206
  ret i32 %21, !dbg !15207
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15208 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15212, metadata !DIExpression()), !dbg !15217
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15213, metadata !DIExpression()), !dbg !15217
  call void @llvm.dbg.value(metadata i32 0, metadata !15214, metadata !DIExpression()), !dbg !15218
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !15219
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15221, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15223
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !15223
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15219
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15224
  br i1 %3, label %5, label %4, !dbg !15225

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15226
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15226
  unreachable, !dbg !15226

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15223
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15219
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15227
  call void @llvm.dbg.value(metadata i32 undef, metadata !15216, metadata !DIExpression()), !dbg !15218
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15213, metadata !DIExpression()), !dbg !15217
  call void @llvm.dbg.value(metadata i32 undef, metadata !15214, metadata !DIExpression()), !dbg !15218
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #26, !dbg !15228
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15213, metadata !DIExpression()), !dbg !15217
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15231
  br i1 %8, label %10, label %9, !dbg !15233

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #26, !dbg !15234
  br label %10, !dbg !15236

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !15237
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !15237
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15239
  br i1 %11, label %13, label %12, !dbg !15240

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !15241
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15241
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !15241
  unreachable, !dbg !15241

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15221
  call void @llvm.dbg.value(metadata i32 %14, metadata !13993, metadata !DIExpression()) #25, !dbg !15223
  call void @llvm.dbg.value(metadata i32 %14, metadata !13987, metadata !DIExpression()) #25, !dbg !15219
  call void @llvm.dbg.value(metadata i32 %14, metadata !15216, metadata !DIExpression()), !dbg !15218
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !15237
  call void @llvm.dbg.value(metadata i32 undef, metadata !14029, metadata !DIExpression()) #25, !dbg !15242
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !15244, !srcloc !14035
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15213, metadata !DIExpression()), !dbg !15217
  call void @llvm.dbg.value(metadata i32 undef, metadata !15214, metadata !DIExpression()), !dbg !15218
  ret %struct.k_thread* %7, !dbg !15245
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15246 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15248, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15249, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata i32 0, metadata !15250, metadata !DIExpression()), !dbg !15254
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !15255
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15257, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15259
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !15259
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15255
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15260
  br i1 %3, label %5, label %4, !dbg !15261

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15262
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15262
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15262
  unreachable, !dbg !15262

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15259
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15255
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15263
  call void @llvm.dbg.value(metadata i32 undef, metadata !15252, metadata !DIExpression()), !dbg !15254
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15249, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata i32 undef, metadata !15250, metadata !DIExpression()), !dbg !15254
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #26, !dbg !15264
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15249, metadata !DIExpression()), !dbg !15253
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15267
  br i1 %8, label %11, label %9, !dbg !15269

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #26, !dbg !15270
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #26, !dbg !15272
  br label %11, !dbg !15273

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !15274
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !15274
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15276
  br i1 %12, label %14, label %13, !dbg !15277

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !15278
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15278
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !15278
  unreachable, !dbg !15278

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15257
  call void @llvm.dbg.value(metadata i32 %15, metadata !13993, metadata !DIExpression()) #25, !dbg !15259
  call void @llvm.dbg.value(metadata i32 %15, metadata !13987, metadata !DIExpression()) #25, !dbg !15255
  call void @llvm.dbg.value(metadata i32 %15, metadata !15252, metadata !DIExpression()), !dbg !15254
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !15274
  call void @llvm.dbg.value(metadata i32 undef, metadata !14029, metadata !DIExpression()) #25, !dbg !15279
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !15281, !srcloc !14035
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15249, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata i32 undef, metadata !15250, metadata !DIExpression()), !dbg !15254
  ret %struct.k_thread* %7, !dbg !15282
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15283 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15285, metadata !DIExpression()), !dbg !15286
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15093, metadata !DIExpression()) #25, !dbg !15287
  call void @llvm.dbg.value(metadata i32 0, metadata !15094, metadata !DIExpression()) #25, !dbg !15289
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !15290
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15292, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15294
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !15294
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15290
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15295
  br i1 %3, label %5, label %4, !dbg !15296

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15297
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15297
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15297
  unreachable, !dbg !15297

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15294
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15290
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15298
  call void @llvm.dbg.value(metadata i32 undef, metadata !15096, metadata !DIExpression()) #25, !dbg !15289
  call void @llvm.dbg.value(metadata i32 undef, metadata !15094, metadata !DIExpression()) #25, !dbg !15289
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !15299
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !15300
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !15300
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15302
  br i1 %6, label %8, label %7, !dbg !15303

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !15304
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15304
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !15304
  unreachable, !dbg !15304

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15292
  call void @llvm.dbg.value(metadata i32 %9, metadata !13993, metadata !DIExpression()) #25, !dbg !15294
  call void @llvm.dbg.value(metadata i32 %9, metadata !13987, metadata !DIExpression()) #25, !dbg !15290
  call void @llvm.dbg.value(metadata i32 %9, metadata !15096, metadata !DIExpression()) #25, !dbg !15289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !15300
  call void @llvm.dbg.value(metadata i32 undef, metadata !14029, metadata !DIExpression()) #25, !dbg !15305
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15307, !srcloc !14035
  call void @llvm.dbg.value(metadata i32 1, metadata !15094, metadata !DIExpression()) #25, !dbg !15289
  call void @llvm.dbg.value(metadata i32 undef, metadata !15094, metadata !DIExpression()) #25, !dbg !15289
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15308
  ret void, !dbg !15309
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15310 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15312, metadata !DIExpression()), !dbg !15318
  call void @llvm.dbg.value(metadata i32 %1, metadata !15313, metadata !DIExpression()), !dbg !15318
  call void @llvm.dbg.value(metadata i8 0, metadata !15314, metadata !DIExpression()), !dbg !15318
  call void @llvm.dbg.value(metadata i32 0, metadata !15315, metadata !DIExpression()), !dbg !15319
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !15320
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15322, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15324
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !15324
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15320
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15325
  br i1 %4, label %6, label %5, !dbg !15326

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15327
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15327
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15327
  unreachable, !dbg !15327

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15324
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15320
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15328
  call void @llvm.dbg.value(metadata i32 undef, metadata !15317, metadata !DIExpression()), !dbg !15319
  call void @llvm.dbg.value(metadata i8 poison, metadata !15314, metadata !DIExpression()), !dbg !15318
  call void @llvm.dbg.value(metadata i32 undef, metadata !15315, metadata !DIExpression()), !dbg !15319
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15329
  call void @llvm.dbg.value(metadata i1 %9, metadata !15314, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15318
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15332

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14173, metadata !DIExpression()) #25, !dbg !15333
  %14 = load i8, i8* %7, align 1, !dbg !15339
  %15 = and i8 %14, 127, !dbg !15339
  store i8 %15, i8* %7, align 1, !dbg !15339
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14181, metadata !DIExpression()) #25, !dbg !15340
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15342
  store i8 %12, i8* %11, align 2, !dbg !15343
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14190, metadata !DIExpression()) #25, !dbg !15344
  %16 = load i8, i8* %7, align 1, !dbg !15346
  %17 = or i8 %16, -128, !dbg !15346
  store i8 %17, i8* %7, align 1, !dbg !15346
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14197, metadata !DIExpression()) #25, !dbg !15347
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14204, metadata !DIExpression()) #25, !dbg !15349
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14210, metadata !DIExpression()) #25, !dbg !15349
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !15351
  br i1 %18, label %19, label %20, !dbg !15352

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 186) #27, !dbg !15353
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 186) #27, !dbg !15353
  unreachable, !dbg !15353

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15354
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14211, metadata !DIExpression()) #25, !dbg !15349
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15355
  br i1 %22, label %32, label %23, !dbg !15354

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14211, metadata !DIExpression()) #25, !dbg !15349
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15356
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14211, metadata !DIExpression()) #25, !dbg !15349
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #27, !dbg !15357
  %27 = icmp sgt i32 %26, 0, !dbg !15358
  br i1 %27, label %28, label %29, !dbg !15359

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #27, !dbg !15360
  br label %33, !dbg !15361

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #27, !dbg !15355
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14211, metadata !DIExpression()) #25, !dbg !15349
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15355
  br i1 %31, label %32, label %23, !dbg !15354, !llvm.loop !15362

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #27, !dbg !15364
  br label %33, !dbg !15365

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15366
  br label %35, !dbg !15367

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15368
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !15370
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !15370
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15372
  br i1 %36, label %38, label %37, !dbg !15373

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !15374
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15374
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !15374
  unreachable, !dbg !15374

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15322
  call void @llvm.dbg.value(metadata i32 %39, metadata !13993, metadata !DIExpression()) #25, !dbg !15324
  call void @llvm.dbg.value(metadata i32 %39, metadata !13987, metadata !DIExpression()) #25, !dbg !15320
  call void @llvm.dbg.value(metadata i32 %39, metadata !15317, metadata !DIExpression()), !dbg !15319
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !15370
  call void @llvm.dbg.value(metadata i32 undef, metadata !14029, metadata !DIExpression()) #25, !dbg !15375
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #25, !dbg !15377, !srcloc !14035
  call void @llvm.dbg.value(metadata i8 poison, metadata !15314, metadata !DIExpression()), !dbg !15318
  call void @llvm.dbg.value(metadata i32 undef, metadata !15315, metadata !DIExpression()), !dbg !15319
  ret i1 %9, !dbg !15378
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15379 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15383, metadata !DIExpression()), !dbg !15386
  call void @llvm.dbg.value(metadata i32 %1, metadata !15384, metadata !DIExpression()), !dbg !15386
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15387
  call void @llvm.dbg.value(metadata i1 %3, metadata !15385, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15386
  br i1 %3, label %4, label %12, !dbg !15388

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15390
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15391
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15391
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15391
  %9 = load i8, i8* %8, align 1, !dbg !15391
  %10 = icmp eq i8 %9, 0, !dbg !15392
  br i1 %10, label %11, label %12, !dbg !15393

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15394
  br label %12, !dbg !15396

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15397
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15398 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15400, metadata !DIExpression()), !dbg !15403
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !15404
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15406, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15408
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !15408
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15404
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15409
  br i1 %2, label %4, label %3, !dbg !15410

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15411
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15411
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15411
  unreachable, !dbg !15411

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15408
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15404
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15412
  call void @llvm.dbg.value(metadata i32 undef, metadata !15402, metadata !DIExpression()), !dbg !15403
  call void @llvm.dbg.value(metadata i32 undef, metadata !15400, metadata !DIExpression()), !dbg !15403
  tail call fastcc void @z_sched_lock() #26, !dbg !15413
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !15416
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !15416
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15418
  br i1 %5, label %7, label %6, !dbg !15419

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !15420
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15420
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !15420
  unreachable, !dbg !15420

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15406
  call void @llvm.dbg.value(metadata i32 %8, metadata !13993, metadata !DIExpression()) #25, !dbg !15408
  call void @llvm.dbg.value(metadata i32 %8, metadata !13987, metadata !DIExpression()) #25, !dbg !15404
  call void @llvm.dbg.value(metadata i32 %8, metadata !15402, metadata !DIExpression()), !dbg !15403
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !15416
  call void @llvm.dbg.value(metadata i32 undef, metadata !14029, metadata !DIExpression()) #25, !dbg !15421
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !15423, !srcloc !14035
  call void @llvm.dbg.value(metadata i32 1, metadata !15400, metadata !DIExpression()), !dbg !15403
  call void @llvm.dbg.value(metadata i32 undef, metadata !15400, metadata !DIExpression()), !dbg !15403
  ret void, !dbg !15424
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15425 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15426, !srcloc !14715
  call void @llvm.dbg.value(metadata i32 %1, metadata !14711, metadata !DIExpression()) #25, !dbg !15431
  %2 = icmp eq i32 %1, 0, !dbg !15432
  br i1 %2, label %4, label %3, !dbg !15433

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.255, i32 0, i32 0), i32 noundef 253) #27, !dbg !15434
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.233, i32 0, i32 0)) #27, !dbg !15434
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.255, i32 0, i32 0), i32 noundef 253) #27, !dbg !15434
  unreachable, !dbg !15434

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15436
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15436
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15436
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15436
  %9 = load i8, i8* %8, align 1, !dbg !15436
  %10 = icmp eq i8 %9, 1, !dbg !15436
  br i1 %10, label %11, label %12, !dbg !15439

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.255, i32 0, i32 0), i32 noundef 254) #27, !dbg !15440
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.233, i32 0, i32 0)) #27, !dbg !15440
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.255, i32 0, i32 0), i32 noundef 254) #27, !dbg !15440
  unreachable, !dbg !15440

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15442
  store i8 %13, i8* %8, align 1, !dbg !15442
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15443, !srcloc !15445
  ret void, !dbg !15446
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15447 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15449, metadata !DIExpression()), !dbg !15452
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !15453
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15455, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15457
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !15457
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15453
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15458
  br i1 %2, label %4, label %3, !dbg !15459

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15460
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15460
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15460
  unreachable, !dbg !15460

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15457
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15453
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15461
  call void @llvm.dbg.value(metadata i32 undef, metadata !15451, metadata !DIExpression()), !dbg !15452
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()), !dbg !15452
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15462
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15462
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15462
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15462
  %9 = load i8, i8* %8, align 1, !dbg !15462
  %10 = icmp eq i8 %9, 0, !dbg !15462
  br i1 %10, label %11, label %12, !dbg !15467

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 999) #27, !dbg !15468
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.233, i32 0, i32 0)) #27, !dbg !15468
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 999) #27, !dbg !15468
  unreachable, !dbg !15468

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15470, !srcloc !14715
  call void @llvm.dbg.value(metadata i32 %13, metadata !14711, metadata !DIExpression()) #25, !dbg !15475
  %14 = icmp eq i32 %13, 0, !dbg !15476
  br i1 %14, label %16, label %15, !dbg !15477

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1000) #27, !dbg !15478
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.233, i32 0, i32 0)) #27, !dbg !15478
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1000) #27, !dbg !15478
  unreachable, !dbg !15478

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15480
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15481
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15481
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15481
  %21 = load i8, i8* %20, align 1, !dbg !15482
  %22 = add i8 %21, 1, !dbg !15482
  store i8 %22, i8* %20, align 1, !dbg !15482
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15483
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !15484
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !15484
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15486
  br i1 %23, label %25, label %24, !dbg !15487

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !15488
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15488
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !15488
  unreachable, !dbg !15488

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15455
  call void @llvm.dbg.value(metadata i32 %26, metadata !13993, metadata !DIExpression()) #25, !dbg !15457
  call void @llvm.dbg.value(metadata i32 %26, metadata !13987, metadata !DIExpression()) #25, !dbg !15453
  call void @llvm.dbg.value(metadata i32 %26, metadata !15451, metadata !DIExpression()), !dbg !15452
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !15484
  call void @llvm.dbg.value(metadata i32 undef, metadata !14029, metadata !DIExpression()) #25, !dbg !15489
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #25, !dbg !15491, !srcloc !14035
  call void @llvm.dbg.value(metadata i32 1, metadata !15449, metadata !DIExpression()), !dbg !15452
  call void @llvm.dbg.value(metadata i32 undef, metadata !15449, metadata !DIExpression()), !dbg !15452
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15492
  ret void, !dbg !15493
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #7 !dbg !15494 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15495
  ret %struct.k_thread* %1, !dbg !15496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #7 !dbg !15497 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15501, metadata !DIExpression()), !dbg !15506
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15502, metadata !DIExpression()), !dbg !15506
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15507
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15503, metadata !DIExpression()), !dbg !15506
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15508
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15504, metadata !DIExpression()), !dbg !15506
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !15509
  call void @llvm.dbg.value(metadata i32 %5, metadata !15505, metadata !DIExpression()), !dbg !15506
  %6 = icmp sgt i32 %5, 0, !dbg !15510
  br i1 %6, label %17, label %7, !dbg !15512

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15513
  br i1 %8, label %17, label %9, !dbg !15515

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15516
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15516
  %12 = load i32, i32* %11, align 8, !dbg !15516
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15518
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15518
  %15 = load i32, i32* %14, align 8, !dbg !15518
  %16 = icmp ult i32 %12, %15, !dbg !15519
  br label %17, !dbg !15520

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15521
  ret i1 %18, !dbg !15522
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15523 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15540, metadata !DIExpression()), !dbg !15555
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15541, metadata !DIExpression()), !dbg !15555
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #26, !dbg !15556
  br i1 %4, label %5, label %6, !dbg !15559

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1179) #27, !dbg !15560
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1179) #27, !dbg !15560
  unreachable, !dbg !15560

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15562
  %8 = load i32, i32* %7, align 4, !dbg !15563
  %9 = add nsw i32 %8, 1, !dbg !15563
  store i32 %9, i32* %7, align 4, !dbg !15563
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15564
  store i32 %8, i32* %10, align 8, !dbg !15565
  %11 = load i32, i32* %7, align 4, !dbg !15566
  %12 = icmp eq i32 %11, 0, !dbg !15567
  br i1 %12, label %13, label %35, !dbg !15568

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15569
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #25, !dbg !15569
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15543, metadata !DIExpression()), !dbg !15569
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15569
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15569
  %17 = load i32, i32* %16, align 4, !dbg !15569
  %18 = shl i32 %17, 2, !dbg !15569
  %19 = alloca i8, i32 %18, align 8, !dbg !15569
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15569
  store i8* %19, i8** %20, align 4, !dbg !15569
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15569
  %22 = alloca i8, i32 %17, align 8, !dbg !15569
  store i8* %22, i8** %21, align 4, !dbg !15569
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15569
  store i32 -1, i32* %23, align 4, !dbg !15569
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !15570
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15552, metadata !DIExpression()), !dbg !15571
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15542, metadata !DIExpression()), !dbg !15555
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !15572
  br i1 %25, label %26, label %27, !dbg !15569

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #25, !dbg !15572
  br label %35, !dbg !15573

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15542, metadata !DIExpression()), !dbg !15555
  %29 = load i32, i32* %7, align 4, !dbg !15574
  %30 = add nsw i32 %29, 1, !dbg !15574
  store i32 %30, i32* %7, align 4, !dbg !15574
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !15576
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !15576
  store i32 %29, i32* %32, align 8, !dbg !15577
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !15570
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15552, metadata !DIExpression()), !dbg !15571
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15542, metadata !DIExpression()), !dbg !15555
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !15572
  br i1 %34, label %26, label %27, !dbg !15569, !llvm.loop !15578

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15580
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15581
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #27, !dbg !15582
  ret void, !dbg !15583
}

; Function Attrs: optsize
declare !dbg !15584 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15589 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15592 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15594, metadata !DIExpression()), !dbg !15596
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15595, metadata !DIExpression()), !dbg !15596
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #26, !dbg !15597
  br i1 %3, label %4, label %5, !dbg !15600

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1200) #27, !dbg !15601
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1200) #27, !dbg !15601
  unreachable, !dbg !15601

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15603
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15604
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #27, !dbg !15605
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15606
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !15606
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !15608
  br i1 %10, label %11, label %13, !dbg !15609

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15610
  store i32 0, i32* %12, align 4, !dbg !15612
  br label %13, !dbg !15613

13:                                               ; preds = %11, %5
  ret void, !dbg !15614
}

; Function Attrs: optsize
declare !dbg !15615 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15616 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15620, metadata !DIExpression()), !dbg !15623
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15621, metadata !DIExpression()), !dbg !15623
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15624
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !15625
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15622, metadata !DIExpression()), !dbg !15623
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15621, metadata !DIExpression()), !dbg !15623
  ret %struct.k_thread* %4, !dbg !15626
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15627 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15631, metadata !DIExpression()), !dbg !15632
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !15633
  ret %struct.rbnode* %2, !dbg !15634
}

; Function Attrs: optsize
declare !dbg !15635 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !15638 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15650, metadata !DIExpression()), !dbg !15654
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15655
  %3 = load i32, i32* %2, align 4, !dbg !15655
  %4 = icmp eq i32 %3, 0, !dbg !15657
  br i1 %4, label %10, label %5, !dbg !15658

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15651, metadata !DIExpression()), !dbg !15654
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15659, !range !4160
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15660
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15652, metadata !DIExpression()), !dbg !15654
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !15661
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15653, metadata !DIExpression()), !dbg !15654
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15651, metadata !DIExpression()), !dbg !15654
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15654
  ret %struct.k_thread* %11, !dbg !15662
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15663 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15667, metadata !DIExpression()), !dbg !15670
  call void @llvm.dbg.value(metadata i32 0, metadata !15668, metadata !DIExpression()), !dbg !15670
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #26, !dbg !15671
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15669, metadata !DIExpression()), !dbg !15670
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15672
  br i1 %3, label %8, label %4, !dbg !15673

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15674
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15676
  call void @llvm.dbg.value(metadata i32 1, metadata !15668, metadata !DIExpression()), !dbg !15670
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #26, !dbg !15671
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15669, metadata !DIExpression()), !dbg !15670
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15672
  br i1 %7, label %8, label %4, !dbg !15673, !llvm.loop !15677

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15670
  ret i32 %9, !dbg !15679
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #7 !dbg !15680 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15682, metadata !DIExpression()), !dbg !15683
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15684
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !15685
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15686
  ret %struct.k_thread* %4, !dbg !15687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #6 !dbg !15688 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15697, metadata !DIExpression()), !dbg !15698
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15699
  tail call fastcc void @sys_dlist_init.260(%struct._dnode* noundef nonnull %2) #26, !dbg !15700
  ret void, !dbg !15701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.260(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !15702 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15706, metadata !DIExpression()), !dbg !15707
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15708
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15709
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15710
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15711
  ret void, !dbg !15712
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15713 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !15714
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !15715
  ret void, !dbg !15716
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !15717 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15722, metadata !DIExpression()), !dbg !15723
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15724
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15724
  %4 = load i8, i8* %3, align 2, !dbg !15724
  %5 = sext i8 %4 to i32, !dbg !15725
  ret i32 %5, !dbg !15726
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15727 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15731, metadata !DIExpression()), !dbg !15734
  call void @llvm.dbg.value(metadata i32 %1, metadata !15732, metadata !DIExpression()), !dbg !15734
  %3 = add i32 %1, 16, !dbg !15735
  %4 = icmp ult i32 %3, 31, !dbg !15735
  br i1 %4, label %6, label %5, !dbg !15735

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1331) #27, !dbg !15739
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.264, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #27, !dbg !15739
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1331) #27, !dbg !15739
  unreachable, !dbg !15739

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15741, !srcloc !14715
  call void @llvm.dbg.value(metadata i32 %7, metadata !14711, metadata !DIExpression()) #25, !dbg !15746
  %8 = icmp eq i32 %7, 0, !dbg !15747
  br i1 %8, label %10, label %9, !dbg !15748

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1332) #27, !dbg !15749
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.233, i32 0, i32 0)) #27, !dbg !15749
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1332) #27, !dbg !15749
  unreachable, !dbg !15749

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15733, metadata !DIExpression()), !dbg !15734
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15751
  ret void, !dbg !15752
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15753 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !15754
  br i1 %1, label %8, label %2, !dbg !15755

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !15756
  br i1 %3, label %8, label %4, !dbg !15757

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15758
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !15759
  %7 = xor i1 %6, true, !dbg !15757
  br label %8, !dbg !15757

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15760
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #7 !dbg !15761 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15762, !range !6670
  %2 = icmp eq i8 %1, 0, !dbg !15762
  ret i1 %2, !dbg !15763
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15764 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15767, !srcloc !14715
  call void @llvm.dbg.value(metadata i32 %1, metadata !14711, metadata !DIExpression()) #25, !dbg !15772
  %2 = icmp eq i32 %1, 0, !dbg !15773
  br i1 %2, label %4, label %3, !dbg !15774

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1392) #27, !dbg !15775
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.233, i32 0, i32 0)) #27, !dbg !15775
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1392) #27, !dbg !15775
  unreachable, !dbg !15775

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !15777
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15779, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15781
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !15781
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15777
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15782
  br i1 %6, label %8, label %7, !dbg !15783

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15784
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15784
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15784
  unreachable, !dbg !15784

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15781
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15777
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15785
  call void @llvm.dbg.value(metadata i32 undef, metadata !15766, metadata !DIExpression()), !dbg !15786
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15787
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14173, metadata !DIExpression()) #25, !dbg !15790
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15792
  %11 = load i8, i8* %10, align 1, !dbg !15793
  %12 = and i8 %11, 127, !dbg !15793
  store i8 %12, i8* %10, align 1, !dbg !15793
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14181, metadata !DIExpression()) #25, !dbg !15794
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #27, !dbg !15796
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15797
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14190, metadata !DIExpression()) #25, !dbg !15798
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15800
  %15 = load i8, i8* %14, align 1, !dbg !15801
  %16 = or i8 %15, -128, !dbg !15801
  store i8 %16, i8* %14, align 1, !dbg !15801
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14197, metadata !DIExpression()) #25, !dbg !15802
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14204, metadata !DIExpression()) #25, !dbg !15804
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14210, metadata !DIExpression()) #25, !dbg !15804
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #27, !dbg !15806
  br i1 %17, label %18, label %19, !dbg !15807

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 186) #27, !dbg !15808
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 186) #27, !dbg !15808
  unreachable, !dbg !15808

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15809
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14211, metadata !DIExpression()) #25, !dbg !15804
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15810
  br i1 %21, label %32, label %22, !dbg !15809

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14211, metadata !DIExpression()) #25, !dbg !15804
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !15811
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14211, metadata !DIExpression()) #25, !dbg !15804
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #27, !dbg !15812
  %26 = icmp sgt i32 %25, 0, !dbg !15813
  br i1 %26, label %27, label %29, !dbg !15814

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15815
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #27, !dbg !15816
  br label %34, !dbg !15817

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #27, !dbg !15810
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14211, metadata !DIExpression()) #25, !dbg !15804
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15810
  br i1 %31, label %32, label %22, !dbg !15809, !llvm.loop !15818

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15820
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #27, !dbg !15821
  br label %34, !dbg !15822

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15823
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #25, !dbg !15824
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14664, metadata !DIExpression()) #25, !dbg !15824
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14668, metadata !DIExpression()) #25, !dbg !15826
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15828
  br i1 %35, label %37, label %36, !dbg !15829

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 225) #27, !dbg !15830
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15830
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 225) #27, !dbg !15830
  unreachable, !dbg !15830

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !15779
  call void @llvm.dbg.value(metadata i32 %38, metadata !13993, metadata !DIExpression()) #25, !dbg !15781
  call void @llvm.dbg.value(metadata i32 %38, metadata !13987, metadata !DIExpression()) #25, !dbg !15777
  call void @llvm.dbg.value(metadata i32 %38, metadata !15766, metadata !DIExpression()), !dbg !15786
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #25, !dbg !15824
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #27, !dbg !15831
  ret void, !dbg !15832
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15833 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15837, metadata !DIExpression()), !dbg !15840
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15841, !srcloc !14715
  call void @llvm.dbg.value(metadata i32 %3, metadata !14711, metadata !DIExpression()) #25, !dbg !15846
  %4 = icmp eq i32 %3, 0, !dbg !15847
  br i1 %4, label %6, label %5, !dbg !15848

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1463) #27, !dbg !15849
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.233, i32 0, i32 0)) #27, !dbg !15849
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1463) #27, !dbg !15849
  unreachable, !dbg !15849

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !15851
  br i1 %7, label %8, label %10, !dbg !15853

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15854
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #26, !dbg !15856
  br label %15, !dbg !15857

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !15838, metadata !DIExpression()), !dbg !15840
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !15858
  %12 = sext i32 %11 to i64, !dbg !15858
  call void @llvm.dbg.value(metadata i64 %12, metadata !15838, metadata !DIExpression()), !dbg !15840
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #26, !dbg !15859
  %14 = trunc i64 %13 to i32, !dbg !15859
  call void @llvm.dbg.value(metadata i32 %14, metadata !15839, metadata !DIExpression()), !dbg !15840
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !15840
  ret i32 %16, !dbg !15860
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15861 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15865, metadata !DIExpression()), !dbg !15866
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15867, !srcloc !15869
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !15870
  ret void, !dbg !15871
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15872 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15876, metadata !DIExpression()), !dbg !15880
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15881, !srcloc !14715
  call void @llvm.dbg.value(metadata i32 %2, metadata !14711, metadata !DIExpression()) #25, !dbg !15886
  %3 = icmp eq i32 %2, 0, !dbg !15887
  br i1 %3, label %5, label %4, !dbg !15888

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1420) #27, !dbg !15889
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.233, i32 0, i32 0)) #27, !dbg !15889
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1420) #27, !dbg !15889
  unreachable, !dbg !15889

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !15891
  br i1 %6, label %7, label %8, !dbg !15893

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #26, !dbg !15894
  br label %43, !dbg !15896

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !15878, metadata !DIExpression()), !dbg !15880
  %9 = icmp sgt i64 %0, -3, !dbg !15897
  br i1 %9, label %10, label %14, !dbg !15899

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !15900
  %12 = trunc i64 %0 to i32, !dbg !15902
  %13 = add i32 %11, %12, !dbg !15902
  call void @llvm.dbg.value(metadata i32 %13, metadata !15877, metadata !DIExpression()), !dbg !15880
  br label %17, !dbg !15903

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !15904
  %16 = sub i32 -2, %15, !dbg !15904
  call void @llvm.dbg.value(metadata i32 %16, metadata !15877, metadata !DIExpression()), !dbg !15880
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !15906
  call void @llvm.dbg.value(metadata i32 %18, metadata !15877, metadata !DIExpression()), !dbg !15880
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !15907
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15909, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15911
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !15911
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15907
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15912
  br i1 %20, label %22, label %21, !dbg !15913

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15914
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15914
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !15914
  unreachable, !dbg !15914

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !15911
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !15907
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15915
  call void @llvm.dbg.value(metadata i32 undef, metadata !15879, metadata !DIExpression()), !dbg !15880
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15916
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !15917
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #26, !dbg !15918
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15919
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15920
  tail call fastcc void @z_add_thread_timeout.243(%struct.k_thread* noundef %24, [1 x i64] %25) #26, !dbg !15920
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15921
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #26, !dbg !15922
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #25, !dbg !15923
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14664, metadata !DIExpression()) #25, !dbg !15923
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14668, metadata !DIExpression()) #25, !dbg !15925
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15927
  br i1 %27, label %29, label %28, !dbg !15928

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 225) #27, !dbg !15929
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !15929
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 225) #27, !dbg !15929
  unreachable, !dbg !15929

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !15909
  call void @llvm.dbg.value(metadata i32 %30, metadata !13993, metadata !DIExpression()) #25, !dbg !15911
  call void @llvm.dbg.value(metadata i32 %30, metadata !13987, metadata !DIExpression()) #25, !dbg !15907
  call void @llvm.dbg.value(metadata i32 %30, metadata !15879, metadata !DIExpression()), !dbg !15880
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #25, !dbg !15923
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #27, !dbg !15930
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15931
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #26, !dbg !15931
  br i1 %33, label %34, label %35, !dbg !15934

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1448) #27, !dbg !15935
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.233, i32 0, i32 0)) #27, !dbg !15935
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1448) #27, !dbg !15935
  unreachable, !dbg !15935

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !15937
  %37 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !15938
  %38 = zext i32 %37 to i64, !dbg !15938
  %39 = sub nsw i64 %36, %38, !dbg !15939
  call void @llvm.dbg.value(metadata i64 %39, metadata !15876, metadata !DIExpression()), !dbg !15880
  %40 = icmp sgt i64 %39, 0, !dbg !15940
  %41 = select i1 %40, i64 %39, i64 0, !dbg !15940
  %42 = trunc i64 %41 to i32, !dbg !15940
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !15880
  ret i32 %44, !dbg !15941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !15942 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15944, metadata !DIExpression()), !dbg !15945
  call void @llvm.dbg.value(metadata i64 %0, metadata !14041, metadata !DIExpression()), !dbg !15946
  call void @llvm.dbg.value(metadata i32 10000, metadata !14044, metadata !DIExpression()), !dbg !15946
  call void @llvm.dbg.value(metadata i32 1000, metadata !14045, metadata !DIExpression()), !dbg !15946
  call void @llvm.dbg.value(metadata i8 1, metadata !14046, metadata !DIExpression()), !dbg !15946
  call void @llvm.dbg.value(metadata i1 false, metadata !14047, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15946
  call void @llvm.dbg.value(metadata i1 false, metadata !14048, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15946
  call void @llvm.dbg.value(metadata i8 0, metadata !14049, metadata !DIExpression()), !dbg !15946
  call void @llvm.dbg.value(metadata i1 false, metadata !14050, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15946
  call void @llvm.dbg.value(metadata i1 true, metadata !14051, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15946
  call void @llvm.dbg.value(metadata i64 0, metadata !14052, metadata !DIExpression()), !dbg !15946
  call void @llvm.dbg.value(metadata i64 0, metadata !14052, metadata !DIExpression()), !dbg !15946
  call void @llvm.dbg.value(metadata i64 %0, metadata !14041, metadata !DIExpression()), !dbg !15946
  %2 = udiv i64 %0, 10, !dbg !15948
  ret i64 %2, !dbg !15952
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15953 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15954, !srcloc !15956
  tail call void @z_impl_k_yield() #26, !dbg !15957
  ret void, !dbg !15958
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15959 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15963, metadata !DIExpression()), !dbg !15965
  %2 = sext i32 %0 to i64, !dbg !15966
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !15967
  call void @llvm.dbg.value(metadata i64 %3, metadata !15964, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15965
  %4 = shl i64 %3, 32, !dbg !15968
  %5 = ashr exact i64 %4, 32, !dbg !15968
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !15969
  call void @llvm.dbg.value(metadata i32 %6, metadata !15964, metadata !DIExpression()), !dbg !15965
  %7 = sext i32 %6 to i64, !dbg !15970
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !15971
  %9 = trunc i64 %8 to i32, !dbg !15971
  ret i32 %9, !dbg !15972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !15973 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15975, metadata !DIExpression()), !dbg !15976
  call void @llvm.dbg.value(metadata i64 %0, metadata !14041, metadata !DIExpression()), !dbg !15977
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14044, metadata !DIExpression()), !dbg !15977
  call void @llvm.dbg.value(metadata i32 10000, metadata !14045, metadata !DIExpression()), !dbg !15977
  call void @llvm.dbg.value(metadata i8 1, metadata !14046, metadata !DIExpression()), !dbg !15977
  call void @llvm.dbg.value(metadata i1 false, metadata !14047, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15977
  call void @llvm.dbg.value(metadata i1 true, metadata !14048, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15977
  call void @llvm.dbg.value(metadata i8 0, metadata !14049, metadata !DIExpression()), !dbg !15977
  call void @llvm.dbg.value(metadata i1 false, metadata !14050, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15977
  call void @llvm.dbg.value(metadata i1 true, metadata !14051, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15977
  call void @llvm.dbg.value(metadata i64 0, metadata !14052, metadata !DIExpression()), !dbg !15977
  call void @llvm.dbg.value(metadata i64 0, metadata !14052, metadata !DIExpression()), !dbg !15977
  %2 = add i64 %0, 99, !dbg !15979
  call void @llvm.dbg.value(metadata i64 %2, metadata !14041, metadata !DIExpression()), !dbg !15977
  %3 = udiv i64 %2, 100, !dbg !15980
  ret i64 %3, !dbg !15981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !15982 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15984, metadata !DIExpression()), !dbg !15985
  call void @llvm.dbg.value(metadata i64 %0, metadata !14041, metadata !DIExpression()), !dbg !15986
  call void @llvm.dbg.value(metadata i32 10000, metadata !14044, metadata !DIExpression()), !dbg !15986
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14045, metadata !DIExpression()), !dbg !15986
  call void @llvm.dbg.value(metadata i8 1, metadata !14046, metadata !DIExpression()), !dbg !15986
  call void @llvm.dbg.value(metadata i1 false, metadata !14047, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15986
  call void @llvm.dbg.value(metadata i1 false, metadata !14048, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15986
  call void @llvm.dbg.value(metadata i8 0, metadata !14049, metadata !DIExpression()), !dbg !15986
  call void @llvm.dbg.value(metadata i1 true, metadata !14050, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15986
  call void @llvm.dbg.value(metadata i1 false, metadata !14051, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15986
  call void @llvm.dbg.value(metadata i64 0, metadata !14052, metadata !DIExpression()), !dbg !15986
  call void @llvm.dbg.value(metadata i64 0, metadata !14052, metadata !DIExpression()), !dbg !15986
  %2 = mul i64 %0, 100, !dbg !15988
  ret i64 %2, !dbg !15990
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15991 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15993, metadata !DIExpression()), !dbg !15994
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !15995
  br i1 %2, label %14, label %3, !dbg !15997

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15998
  %5 = icmp slt i32 %4, 0, !dbg !16000
  br i1 %5, label %6, label %10, !dbg !16001

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16002
  %8 = load i8, i8* %7, align 1, !dbg !16002
  %9 = icmp eq i8 %8, 16, !dbg !16005
  br i1 %9, label %10, label %14, !dbg !16006

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16007
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16008
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16009, !srcloc !14715
  call void @llvm.dbg.value(metadata i32 %11, metadata !14711, metadata !DIExpression()) #25, !dbg !16013
  %12 = icmp eq i32 %11, 0, !dbg !16014
  br i1 %12, label %13, label %14, !dbg !16015

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16016
  br label %14, !dbg !16018

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #7 !dbg !16020 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16022, metadata !DIExpression()), !dbg !16023
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16024
  %3 = load i8, i8* %2, align 1, !dbg !16024
  %4 = and i8 %3, 2, !dbg !16025
  %5 = icmp ne i8 %4, 0, !dbg !16026
  ret i1 %5, !dbg !16027
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #7 !dbg !16028 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16033
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16032, metadata !DIExpression()), !dbg !16034
  ret %struct.k_thread* %1, !dbg !16035
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16036 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16037, !srcloc !14715
  call void @llvm.dbg.value(metadata i32 %1, metadata !14711, metadata !DIExpression()) #25, !dbg !16040
  %2 = icmp eq i32 %1, 0, !dbg !16041
  br i1 %2, label %3, label %8, !dbg !16042

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16043
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !16044
  %6 = icmp ne i32 %5, 0, !dbg !16042
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16045
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16046 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16048, metadata !DIExpression()), !dbg !16050
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !16051
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16053, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !16055
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !16055
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !16051
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16056
  br i1 %3, label %5, label %4, !dbg !16057

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !16058
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16058
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !16058
  unreachable, !dbg !16058

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16053
  call void @llvm.dbg.value(metadata i32 %6, metadata !13993, metadata !DIExpression()) #25, !dbg !16055
  call void @llvm.dbg.value(metadata i32 %6, metadata !13987, metadata !DIExpression()) #25, !dbg !16051
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16059
  call void @llvm.dbg.value(metadata i32 %6, metadata !16049, metadata !DIExpression()), !dbg !16050
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16060
  %8 = load i8, i8* %7, align 4, !dbg !16060
  %9 = and i8 %8, 1, !dbg !16062
  %10 = icmp eq i8 %9, 0, !dbg !16063
  br i1 %10, label %15, label %11, !dbg !16064

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !16065
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !16065
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16068
  br i1 %12, label %14, label %13, !dbg !16069

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !16070
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16070
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !16070
  unreachable, !dbg !16070

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14015, metadata !DIExpression()) #25, !dbg !16065
  call void @llvm.dbg.value(metadata i32 %6, metadata !14029, metadata !DIExpression()) #25, !dbg !16071
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !16073, !srcloc !14035
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1731) #27, !dbg !16074
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.273, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #27, !dbg !16074
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1731) #27, !dbg !16074
  unreachable, !dbg !16074

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16078
  %17 = load i8, i8* %16, align 1, !dbg !16078
  %18 = and i8 %17, 8, !dbg !16080
  %19 = icmp eq i8 %18, 0, !dbg !16081
  br i1 %19, label %24, label %20, !dbg !16082

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !16083
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !16083
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16086
  br i1 %21, label %23, label %22, !dbg !16087

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !16088
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16088
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !16088
  unreachable, !dbg !16088

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14015, metadata !DIExpression()) #25, !dbg !16083
  call void @llvm.dbg.value(metadata i32 %6, metadata !14029, metadata !DIExpression()) #25, !dbg !16089
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !16091, !srcloc !14035
  br label %39, !dbg !16092

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !16093
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16094
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16096
  br i1 %26, label %27, label %35, !dbg !16097

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16098, !srcloc !14715
  call void @llvm.dbg.value(metadata i32 %28, metadata !14711, metadata !DIExpression()) #25, !dbg !16101
  %29 = icmp eq i32 %28, 0, !dbg !16102
  br i1 %29, label %30, label %35, !dbg !16103

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #25, !dbg !16104
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14664, metadata !DIExpression()) #25, !dbg !16104
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14668, metadata !DIExpression()) #25, !dbg !16107
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16109
  br i1 %31, label %33, label %32, !dbg !16110

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 225) #27, !dbg !16111
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16111
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 225) #27, !dbg !16111
  unreachable, !dbg !16111

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14659, metadata !DIExpression()) #25, !dbg !16104
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #27, !dbg !16112
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1778) #27, !dbg !16113
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.274, i32 0, i32 0)) #27, !dbg !16113
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1778) #27, !dbg !16113
  unreachable, !dbg !16113

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !16117
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !16117
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16119
  br i1 %36, label %38, label %37, !dbg !16120

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !16121
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16121
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !16121
  unreachable, !dbg !16121

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14015, metadata !DIExpression()) #25, !dbg !16117
  call void @llvm.dbg.value(metadata i32 %6, metadata !14029, metadata !DIExpression()) #25, !dbg !16122
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !16124, !srcloc !14035
  br label %39, !dbg !16125

39:                                               ; preds = %38, %23
  ret void, !dbg !16125
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16126 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16128, metadata !DIExpression()), !dbg !16129
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16130
  %3 = load i8, i8* %2, align 1, !dbg !16130
  %4 = and i8 %3, 8, !dbg !16132
  %5 = icmp eq i8 %4, 0, !dbg !16133
  br i1 %5, label %6, label %20, !dbg !16134

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16135
  %8 = or i8 %7, 8, !dbg !16135
  store i8 %8, i8* %2, align 1, !dbg !16135
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !16137
  br i1 %9, label %10, label %12, !dbg !16139

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14173, metadata !DIExpression()) #25, !dbg !16140
  %11 = and i8 %8, 95, !dbg !16143
  store i8 %11, i8* %2, align 1, !dbg !16143
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14181, metadata !DIExpression()) #25, !dbg !16144
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !16146
  br label %12, !dbg !16147

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16148
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16148
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16150
  br i1 %15, label %17, label %16, !dbg !16151

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16152
  br label %17, !dbg !16154

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16155
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16156
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #26, !dbg !16157
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16158
  br label %20, !dbg !16159

20:                                               ; preds = %17, %1
  ret void, !dbg !16160
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16161 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16165, metadata !DIExpression()), !dbg !16167
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #26, !dbg !16168
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16166, metadata !DIExpression()), !dbg !16167
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16169
  br i1 %3, label %10, label %4, !dbg !16170

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16171
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16173
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16174, metadata !DIExpression()), !dbg !16180
  call void @llvm.dbg.value(metadata i32 0, metadata !16179, metadata !DIExpression()), !dbg !16180
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16182
  store i32 0, i32* %7, align 4, !dbg !16183
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16184
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %0) #26, !dbg !16168
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16166, metadata !DIExpression()), !dbg !16167
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16169
  br i1 %9, label %10, label %4, !dbg !16170, !llvm.loop !16185

10:                                               ; preds = %4, %1
  ret void, !dbg !16187
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16188 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16193, metadata !DIExpression()), !dbg !16196
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16192, metadata !DIExpression()), !dbg !16196
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !16197
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16199, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !16201
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !16201
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !16197
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16202
  br i1 %4, label %6, label %5, !dbg !16203

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !16204
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16204
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !16204
  unreachable, !dbg !16204

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16199
  call void @llvm.dbg.value(metadata i32 %7, metadata !13993, metadata !DIExpression()) #25, !dbg !16201
  call void @llvm.dbg.value(metadata i32 %7, metadata !13987, metadata !DIExpression()) #25, !dbg !16197
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16205
  call void @llvm.dbg.value(metadata i32 %7, metadata !16194, metadata !DIExpression()), !dbg !16196
  call void @llvm.dbg.value(metadata i32 0, metadata !16195, metadata !DIExpression()), !dbg !16196
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16206
  %9 = load i8, i8* %8, align 1, !dbg !16206
  %10 = and i8 %9, 8, !dbg !16208
  %11 = icmp eq i8 %10, 0, !dbg !16209
  br i1 %11, label %12, label %35, !dbg !16210

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16193, metadata !DIExpression()), !dbg !16196
  %14 = icmp eq i64 %13, 0, !dbg !16211
  br i1 %14, label %35, label %15, !dbg !16213

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16214
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16216
  br i1 %17, label %35, label %18, !dbg !16217

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16218
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !16218
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16219
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !16220
  br i1 %22, label %35, label %23, !dbg !16221

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16222, !srcloc !14715
  call void @llvm.dbg.value(metadata i32 %24, metadata !14711, metadata !DIExpression()) #25, !dbg !16228
  %25 = icmp eq i32 %24, 0, !dbg !16229
  br i1 %25, label %27, label %26, !dbg !16230

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1809) #27, !dbg !16231
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.275, i32 0, i32 0)) #27, !dbg !16231
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.231, i32 0, i32 0), i32 noundef 1809) #27, !dbg !16231
  unreachable, !dbg !16231

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16233
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16234
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #26, !dbg !16235
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16236
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #26, !dbg !16237
  call void @llvm.dbg.value(metadata i32 undef, metadata !14659, metadata !DIExpression()) #25, !dbg !16238
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14664, metadata !DIExpression()) #25, !dbg !16238
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14668, metadata !DIExpression()) #25, !dbg !16240
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16242
  br i1 %31, label %33, label %32, !dbg !16243

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 225) #27, !dbg !16244
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16244
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 225) #27, !dbg !16244
  unreachable, !dbg !16244

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14659, metadata !DIExpression()) #25, !dbg !16238
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #27, !dbg !16245
  call void @llvm.dbg.value(metadata i32 %34, metadata !16195, metadata !DIExpression()), !dbg !16196
  br label %40, !dbg !16246

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16247
  call void @llvm.dbg.value(metadata i32 %36, metadata !16195, metadata !DIExpression()), !dbg !16196
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !16248
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !16248
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16250
  br i1 %37, label %39, label %38, !dbg !16251

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !16252
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16252
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !16252
  unreachable, !dbg !16252

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14015, metadata !DIExpression()) #25, !dbg !16248
  call void @llvm.dbg.value(metadata i32 %7, metadata !14029, metadata !DIExpression()) #25, !dbg !16253
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !16255, !srcloc !14035
  br label %40, !dbg !16256

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16196
  ret i32 %41, !dbg !16257
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16258 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16262, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.value(metadata i32 %1, metadata !16263, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.value(metadata i8* %2, metadata !16264, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.value(metadata i8 0, metadata !16266, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.value(metadata i32 0, metadata !16267, metadata !DIExpression()), !dbg !16271
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !13981, metadata !DIExpression()) #25, !dbg !16272
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16274, !srcloc !13996
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !16276
  call void @llvm.dbg.value(metadata i32 undef, metadata !13994, metadata !DIExpression()) #25, !dbg !16276
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !16272
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16277
  br i1 %5, label %7, label %6, !dbg !16278

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !16279
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.228, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16279
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 148) #27, !dbg !16279
  unreachable, !dbg !16279

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13993, metadata !DIExpression()) #25, !dbg !16276
  call void @llvm.dbg.value(metadata i32 undef, metadata !13987, metadata !DIExpression()) #25, !dbg !16272
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16280
  call void @llvm.dbg.value(metadata i32 undef, metadata !16269, metadata !DIExpression()), !dbg !16271
  call void @llvm.dbg.value(metadata i8 poison, metadata !16266, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.value(metadata i32 undef, metadata !16267, metadata !DIExpression()), !dbg !16271
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #26, !dbg !16281
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16265, metadata !DIExpression()), !dbg !16270
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16284
  br i1 %10, label %15, label %11, !dbg !16286

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16287, metadata !DIExpression()), !dbg !16294
  call void @llvm.dbg.value(metadata i32 %1, metadata !16292, metadata !DIExpression()), !dbg !16294
  call void @llvm.dbg.value(metadata i8* %2, metadata !16293, metadata !DIExpression()), !dbg !16294
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16174, metadata !DIExpression()), !dbg !16297
  call void @llvm.dbg.value(metadata i32 %1, metadata !16179, metadata !DIExpression()), !dbg !16297
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 7, i32 1, !dbg !16299
  store i32 %1, i32* %12, align 4, !dbg !16300
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16301
  store i8* %2, i8** %13, align 4, !dbg !16302
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #26, !dbg !16303
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #26, !dbg !16304
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #26, !dbg !16305
  call void @llvm.dbg.value(metadata i8 1, metadata !16266, metadata !DIExpression()), !dbg !16270
  br label %15, !dbg !16306

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16266, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !16307
  call void @llvm.dbg.value(metadata %struct._sfnode* @sched_spinlock, metadata !14020, metadata !DIExpression()) #25, !dbg !16307
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16309
  br i1 %16, label %18, label %17, !dbg !16310

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !16311
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.229, i32 0, i32 0), %struct._sfnode* noundef nonnull @sched_spinlock) #27, !dbg !16311
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.227, i32 0, i32 0), i32 noundef 194) #27, !dbg !16311
  unreachable, !dbg !16311

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16270
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16274
  call void @llvm.dbg.value(metadata i32 %20, metadata !13993, metadata !DIExpression()) #25, !dbg !16276
  call void @llvm.dbg.value(metadata i32 %20, metadata !13987, metadata !DIExpression()) #25, !dbg !16272
  call void @llvm.dbg.value(metadata i32 %20, metadata !16269, metadata !DIExpression()), !dbg !16271
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()) #25, !dbg !16307
  call void @llvm.dbg.value(metadata i32 undef, metadata !14029, metadata !DIExpression()) #25, !dbg !16312
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !16314, !srcloc !14035
  call void @llvm.dbg.value(metadata i8 poison, metadata !16266, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.value(metadata i32 undef, metadata !16267, metadata !DIExpression()), !dbg !16271
  ret i1 %19, !dbg !16315
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct._sfnode* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16316 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16321, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata i64 undef, metadata !16323, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata %struct._sfnode* %0, metadata !16320, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16322, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata i8** %4, metadata !16324, metadata !DIExpression()), !dbg !16326
  %6 = tail call i32 @z_pend_curr(%struct._sfnode* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !16327
  call void @llvm.dbg.value(metadata i32 %6, metadata !16325, metadata !DIExpression()), !dbg !16326
  %7 = icmp eq i8** %4, null, !dbg !16328
  br i1 %7, label %12, label %8, !dbg !16330

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16331
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16333
  %11 = load i8*, i8** %10, align 4, !dbg !16333
  store i8* %11, i8** %4, align 4, !dbg !16334
  br label %12, !dbg !16335

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16336
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16337 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !16339
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !16340
  ret void, !dbg !16341
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16342 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16352, metadata !DIExpression()), !dbg !16369
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16350, metadata !DIExpression()), !dbg !16369
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16351, metadata !DIExpression()), !dbg !16369
  %5 = icmp eq i64 %4, -1, !dbg !16370
  br i1 %5, label %63, label %6, !dbg !16372

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16373
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.280(%struct._dnode* noundef %7) #26, !dbg !16373
  br i1 %8, label %9, label %10, !dbg !16376

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.283, i32 0, i32 0), i32 noundef 99) #27, !dbg !16377
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.284, i32 0, i32 0)) #27, !dbg !16377
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.283, i32 0, i32 0), i32 noundef 99) #27, !dbg !16377
  unreachable, !dbg !16377

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16379
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16380
  call void @llvm.dbg.value(metadata i32 0, metadata !16353, metadata !DIExpression()), !dbg !16381
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16382, metadata !DIExpression()) #25, !dbg !16389
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16391, !srcloc !16397
  call void @llvm.dbg.value(metadata i32 undef, metadata !16394, metadata !DIExpression()) #25, !dbg !16398
  call void @llvm.dbg.value(metadata i32 undef, metadata !16395, metadata !DIExpression()) #25, !dbg !16398
  call void @llvm.dbg.value(metadata i32 undef, metadata !16388, metadata !DIExpression()) #25, !dbg !16389
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16399
  br i1 %13, label %15, label %14, !dbg !16402

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 148) #27, !dbg !16403
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.287, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16403
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 148) #27, !dbg !16403
  unreachable, !dbg !16403

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16391
  call void @llvm.dbg.value(metadata i32 %16, metadata !16394, metadata !DIExpression()) #25, !dbg !16398
  call void @llvm.dbg.value(metadata i32 %16, metadata !16388, metadata !DIExpression()) #25, !dbg !16389
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16405
  call void @llvm.dbg.value(metadata i32 %16, metadata !16359, metadata !DIExpression()), !dbg !16381
  call void @llvm.dbg.value(metadata i32 undef, metadata !16353, metadata !DIExpression()), !dbg !16381
  %17 = icmp slt i64 %4, -1, !dbg !16406
  br i1 %17, label %18, label %24, !dbg !16407

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16408
  %20 = add i64 %4, %19, !dbg !16409
  %21 = sub i64 -2, %20, !dbg !16409
  call void @llvm.dbg.value(metadata i64 %21, metadata !16363, metadata !DIExpression()), !dbg !16410
  %22 = icmp sgt i64 %21, 1, !dbg !16411
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16411
  br label %29, !dbg !16412

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16413
  %26 = tail call fastcc i32 @elapsed.288() #26, !dbg !16415
  %27 = sext i32 %26 to i64, !dbg !16415
  %28 = add nsw i64 %25, %27, !dbg !16416
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16417
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16418
  store i64 %30, i64* %31, align 8, !dbg !16419
  %32 = tail call fastcc %struct._timeout* @first() #26, !dbg !16420
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16360, metadata !DIExpression()), !dbg !16422
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16423
  br i1 %33, label %48, label %34, !dbg !16423

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16424
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16360, metadata !DIExpression()), !dbg !16422
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16428
  %38 = load i64, i64* %37, align 8, !dbg !16428
  %39 = icmp slt i64 %35, %38, !dbg !16429
  br i1 %39, label %40, label %44, !dbg !16430

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16428
  %42 = sub nsw i64 %38, %35, !dbg !16431
  store i64 %42, i64* %41, align 8, !dbg !16431
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16433
  tail call fastcc void @sys_dlist_insert.289(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #26, !dbg !16434
  br label %49, !dbg !16435

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16436
  store i64 %45, i64* %31, align 8, !dbg !16436
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #26, !dbg !16437
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16360, metadata !DIExpression()), !dbg !16422
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16423
  br i1 %47, label %48, label %34, !dbg !16423, !llvm.loop !16438

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.290(%struct._dnode* noundef nonnull %7) #26, !dbg !16440
  br label %49, !dbg !16443

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #26, !dbg !16444
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16445
  br i1 %51, label %52, label %59, !dbg !16446

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #26, !dbg !16447
  call void @llvm.dbg.value(metadata i32 %53, metadata !16366, metadata !DIExpression()), !dbg !16448
  %54 = icmp ne i32 %53, 0, !dbg !16449
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16451
  br i1 %57, label %59, label %58, !dbg !16451

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #27, !dbg !16452
  br label %59, !dbg !16454

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16455, metadata !DIExpression()) #25, !dbg !16461
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16460, metadata !DIExpression()) #25, !dbg !16461
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16463
  br i1 %60, label %62, label %61, !dbg !16466

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 194) #27, !dbg !16467
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.292, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16467
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 194) #27, !dbg !16467
  unreachable, !dbg !16467

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16455, metadata !DIExpression()) #25, !dbg !16461
  call void @llvm.dbg.value(metadata i32 %16, metadata !16469, metadata !DIExpression()) #25, !dbg !16472
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !16474, !srcloc !16475
  call void @llvm.dbg.value(metadata i32 undef, metadata !16353, metadata !DIExpression()), !dbg !16381
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.280(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #7 !dbg !16477 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16483, metadata !DIExpression()), !dbg !16484
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16485
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16485
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16486
  ret i1 %4, !dbg !16487
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.288() unnamed_addr #1 !dbg !16488 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16491
  %2 = icmp eq i32 %1, 0, !dbg !16492
  br i1 %2, label %3, label %5, !dbg !16491

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !16493
  br label %5, !dbg !16491

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16491
  ret i32 %6, !dbg !16494
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #7 !dbg !16495 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.295() #26, !dbg !16501
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16499, metadata !DIExpression()), !dbg !16502
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16503
  ret %struct._timeout* %2, !dbg !16504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.289(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16505 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16509, metadata !DIExpression()), !dbg !16513
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16510, metadata !DIExpression()), !dbg !16513
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16514
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16514
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16511, metadata !DIExpression()), !dbg !16513
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16515
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16516
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16517
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16518
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16519
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16520
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16521
  ret void, !dbg !16522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #7 !dbg !16523 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16527, metadata !DIExpression()), !dbg !16529
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16530
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.293(%struct._dnode* noundef %2) #26, !dbg !16531
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16528, metadata !DIExpression()), !dbg !16529
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16532
  ret %struct._timeout* %4, !dbg !16533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.290(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16534 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16539, metadata !DIExpression()), !dbg !16542
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16540, metadata !DIExpression()), !dbg !16542
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16543
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16541, metadata !DIExpression()), !dbg !16542
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16544
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16545
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16546
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16547
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16548
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16549
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16550
  ret void, !dbg !16551
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16552 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !16557
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16554, metadata !DIExpression()), !dbg !16558
  %2 = tail call fastcc i32 @elapsed.288() #26, !dbg !16559
  call void @llvm.dbg.value(metadata i32 %2, metadata !16555, metadata !DIExpression()), !dbg !16558
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16560
  br i1 %3, label %14, label %4, !dbg !16562

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16563
  %6 = load i64, i64* %5, align 8, !dbg !16563
  %7 = sext i32 %2 to i64, !dbg !16564
  %8 = sub nsw i64 %6, %7, !dbg !16565
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16566
  br i1 %9, label %14, label %10, !dbg !16567

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16568
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16568
  %13 = trunc i64 %12 to i32, !dbg !16568
  call void @llvm.dbg.value(metadata i32 %13, metadata !16556, metadata !DIExpression()), !dbg !16558
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16570
  call void @llvm.dbg.value(metadata i32 %15, metadata !16556, metadata !DIExpression()), !dbg !16558
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16571
  %17 = icmp ne i32 %16, 0, !dbg !16573
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16574
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16574
  call void @llvm.dbg.value(metadata i32 %20, metadata !16556, metadata !DIExpression()), !dbg !16558
  ret i32 %20, !dbg !16575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.293(%struct._dnode* noundef readonly %0) unnamed_addr #7 !dbg !16576 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16580, metadata !DIExpression()), !dbg !16582
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16581, metadata !DIExpression()), !dbg !16582
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16583
  br i1 %2, label %5, label %3, !dbg !16584

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.294(%struct._dnode* noundef nonnull %0) #26, !dbg !16585
  br label %5, !dbg !16584

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16584
  ret %struct._dnode* %6, !dbg !16586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.294(%struct._dnode* noundef readonly %0) unnamed_addr #7 !dbg !16587 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16589, metadata !DIExpression()), !dbg !16591
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16590, metadata !DIExpression()), !dbg !16591
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16592
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16593
  br i1 %3, label %7, label %4, !dbg !16594

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16595
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16595
  br label %7, !dbg !16594

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16594
  ret %struct._dnode* %8, !dbg !16596
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.295() unnamed_addr #7 !dbg !16597 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16601, metadata !DIExpression()), !dbg !16602
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.296() #26, !dbg !16603
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16603
  ret %struct._dnode* %3, !dbg !16604
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.296() unnamed_addr #7 !dbg !16605 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16609, metadata !DIExpression()), !dbg !16610
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16611
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16612
  ret i1 %2, !dbg !16613
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16614 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16618, metadata !DIExpression()), !dbg !16623
  call void @llvm.dbg.value(metadata i32 -22, metadata !16619, metadata !DIExpression()), !dbg !16623
  call void @llvm.dbg.value(metadata i32 0, metadata !16620, metadata !DIExpression()), !dbg !16624
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16382, metadata !DIExpression()) #25, !dbg !16625
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16627, !srcloc !16397
  call void @llvm.dbg.value(metadata i32 undef, metadata !16394, metadata !DIExpression()) #25, !dbg !16629
  call void @llvm.dbg.value(metadata i32 undef, metadata !16395, metadata !DIExpression()) #25, !dbg !16629
  call void @llvm.dbg.value(metadata i32 undef, metadata !16388, metadata !DIExpression()) #25, !dbg !16625
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16630
  br i1 %3, label %5, label %4, !dbg !16631

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 148) #27, !dbg !16632
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.287, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16632
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 148) #27, !dbg !16632
  unreachable, !dbg !16632

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16394, metadata !DIExpression()) #25, !dbg !16629
  call void @llvm.dbg.value(metadata i32 undef, metadata !16388, metadata !DIExpression()) #25, !dbg !16625
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16633
  call void @llvm.dbg.value(metadata i32 undef, metadata !16622, metadata !DIExpression()), !dbg !16624
  call void @llvm.dbg.value(metadata i32 -22, metadata !16619, metadata !DIExpression()), !dbg !16623
  call void @llvm.dbg.value(metadata i32 undef, metadata !16620, metadata !DIExpression()), !dbg !16624
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16619, metadata !DIExpression()), !dbg !16623
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.280(%struct._dnode* noundef %6) #26, !dbg !16634
  br i1 %7, label %8, label %9, !dbg !16638

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !16639
  call void @llvm.dbg.value(metadata i32 0, metadata !16619, metadata !DIExpression()), !dbg !16623
  br label %9, !dbg !16641

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !16623
  call void @llvm.dbg.value(metadata i32 %10, metadata !16619, metadata !DIExpression()), !dbg !16623
  call void @llvm.dbg.value(metadata i32 undef, metadata !16455, metadata !DIExpression()) #25, !dbg !16642
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16460, metadata !DIExpression()) #25, !dbg !16642
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16644
  br i1 %11, label %13, label %12, !dbg !16645

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 194) #27, !dbg !16646
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.292, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16646
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 194) #27, !dbg !16646
  unreachable, !dbg !16646

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16627
  call void @llvm.dbg.value(metadata i32 %14, metadata !16394, metadata !DIExpression()) #25, !dbg !16629
  call void @llvm.dbg.value(metadata i32 %14, metadata !16388, metadata !DIExpression()) #25, !dbg !16625
  call void @llvm.dbg.value(metadata i32 %14, metadata !16622, metadata !DIExpression()), !dbg !16624
  call void @llvm.dbg.value(metadata i32 undef, metadata !16455, metadata !DIExpression()) #25, !dbg !16642
  call void @llvm.dbg.value(metadata i32 undef, metadata !16469, metadata !DIExpression()) #25, !dbg !16647
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16649, !srcloc !16475
  call void @llvm.dbg.value(metadata i32 %10, metadata !16619, metadata !DIExpression()), !dbg !16623
  call void @llvm.dbg.value(metadata i32 undef, metadata !16620, metadata !DIExpression()), !dbg !16624
  ret i32 %10, !dbg !16650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !16651 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16653, metadata !DIExpression()), !dbg !16654
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !16655
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16657
  br i1 %3, label %10, label %4, !dbg !16658

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16659
  %6 = load i64, i64* %5, align 8, !dbg !16659
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16661
  %8 = load i64, i64* %7, align 8, !dbg !16662
  %9 = add nsw i64 %8, %6, !dbg !16662
  store i64 %9, i64* %7, align 8, !dbg !16662
  br label %10, !dbg !16663

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16664
  tail call fastcc void @sys_dlist_remove.299(%struct._dnode* noundef %11) #26, !dbg !16665
  ret void, !dbg !16666
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.299(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !16667 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16671, metadata !DIExpression()), !dbg !16674
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16675
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16675
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16672, metadata !DIExpression()), !dbg !16674
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16676
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16676
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16673, metadata !DIExpression()), !dbg !16674
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16677
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16678
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16679
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16680
  tail call fastcc void @sys_dnode_init.300(%struct._dnode* noundef %0) #26, !dbg !16681
  ret void, !dbg !16682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.300(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #6 !dbg !16683 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16685, metadata !DIExpression()), !dbg !16686
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16687
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16688
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16689
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16690
  ret void, !dbg !16691
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16692 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16698, metadata !DIExpression()), !dbg !16703
  call void @llvm.dbg.value(metadata i64 0, metadata !16699, metadata !DIExpression()), !dbg !16703
  call void @llvm.dbg.value(metadata i32 0, metadata !16700, metadata !DIExpression()), !dbg !16704
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16382, metadata !DIExpression()) #25, !dbg !16705
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16707, !srcloc !16397
  call void @llvm.dbg.value(metadata i32 undef, metadata !16394, metadata !DIExpression()) #25, !dbg !16709
  call void @llvm.dbg.value(metadata i32 undef, metadata !16395, metadata !DIExpression()) #25, !dbg !16709
  call void @llvm.dbg.value(metadata i32 undef, metadata !16388, metadata !DIExpression()) #25, !dbg !16705
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16710
  br i1 %3, label %5, label %4, !dbg !16711

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 148) #27, !dbg !16712
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.287, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16712
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 148) #27, !dbg !16712
  unreachable, !dbg !16712

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16394, metadata !DIExpression()) #25, !dbg !16709
  call void @llvm.dbg.value(metadata i32 undef, metadata !16388, metadata !DIExpression()) #25, !dbg !16705
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16713
  call void @llvm.dbg.value(metadata i32 undef, metadata !16702, metadata !DIExpression()), !dbg !16704
  call void @llvm.dbg.value(metadata i64 0, metadata !16699, metadata !DIExpression()), !dbg !16703
  call void @llvm.dbg.value(metadata i32 undef, metadata !16700, metadata !DIExpression()), !dbg !16704
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !16714
  call void @llvm.dbg.value(metadata i64 %6, metadata !16699, metadata !DIExpression()), !dbg !16703
  call void @llvm.dbg.value(metadata i32 undef, metadata !16455, metadata !DIExpression()) #25, !dbg !16717
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16460, metadata !DIExpression()) #25, !dbg !16717
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16719
  br i1 %7, label %9, label %8, !dbg !16720

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 194) #27, !dbg !16721
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.292, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16721
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 194) #27, !dbg !16721
  unreachable, !dbg !16721

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !16707
  call void @llvm.dbg.value(metadata i32 %10, metadata !16394, metadata !DIExpression()) #25, !dbg !16709
  call void @llvm.dbg.value(metadata i32 %10, metadata !16388, metadata !DIExpression()) #25, !dbg !16705
  call void @llvm.dbg.value(metadata i32 %10, metadata !16702, metadata !DIExpression()), !dbg !16704
  call void @llvm.dbg.value(metadata i32 undef, metadata !16455, metadata !DIExpression()) #25, !dbg !16717
  call void @llvm.dbg.value(metadata i32 undef, metadata !16469, metadata !DIExpression()) #25, !dbg !16722
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #25, !dbg !16724, !srcloc !16475
  call void @llvm.dbg.value(metadata i64 %6, metadata !16699, metadata !DIExpression()), !dbg !16703
  call void @llvm.dbg.value(metadata i32 undef, metadata !16700, metadata !DIExpression()), !dbg !16704
  ret i64 %6, !dbg !16725
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16726 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16728, metadata !DIExpression()), !dbg !16732
  call void @llvm.dbg.value(metadata i64 0, metadata !16729, metadata !DIExpression()), !dbg !16732
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.301(%struct._timeout* noundef %0) #26, !dbg !16733
  br i1 %2, label %21, label %3, !dbg !16735

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !16736
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16730, metadata !DIExpression()), !dbg !16737
  call void @llvm.dbg.value(metadata i64 0, metadata !16729, metadata !DIExpression()), !dbg !16732
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16738
  br i1 %5, label %16, label %6, !dbg !16740

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16730, metadata !DIExpression()), !dbg !16737
  call void @llvm.dbg.value(metadata i64 %8, metadata !16729, metadata !DIExpression()), !dbg !16732
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16741
  %10 = load i64, i64* %9, align 8, !dbg !16741
  %11 = add nsw i64 %10, %8, !dbg !16743
  call void @llvm.dbg.value(metadata i64 %11, metadata !16729, metadata !DIExpression()), !dbg !16732
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16744
  br i1 %12, label %16, label %13, !dbg !16746

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !16747
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16730, metadata !DIExpression()), !dbg !16737
  call void @llvm.dbg.value(metadata i64 %11, metadata !16729, metadata !DIExpression()), !dbg !16732
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16738
  br i1 %15, label %16, label %6, !dbg !16740, !llvm.loop !16748

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16732
  call void @llvm.dbg.value(metadata i64 %17, metadata !16729, metadata !DIExpression()), !dbg !16732
  %18 = tail call fastcc i32 @elapsed.288() #26, !dbg !16750
  %19 = sext i32 %18 to i64, !dbg !16750
  %20 = sub nsw i64 %17, %19, !dbg !16751
  br label %21, !dbg !16752

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16732
  ret i64 %22, !dbg !16753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.301(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #7 !dbg !16754 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16758, metadata !DIExpression()), !dbg !16759
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16760
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.280(%struct._dnode* noundef %2) #26, !dbg !16761
  %4 = xor i1 %3, true, !dbg !16762
  ret i1 %4, !dbg !16763
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16764 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16766, metadata !DIExpression()), !dbg !16771
  call void @llvm.dbg.value(metadata i64 0, metadata !16767, metadata !DIExpression()), !dbg !16771
  call void @llvm.dbg.value(metadata i32 0, metadata !16768, metadata !DIExpression()), !dbg !16772
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16382, metadata !DIExpression()) #25, !dbg !16773
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16775, !srcloc !16397
  call void @llvm.dbg.value(metadata i32 undef, metadata !16394, metadata !DIExpression()) #25, !dbg !16777
  call void @llvm.dbg.value(metadata i32 undef, metadata !16395, metadata !DIExpression()) #25, !dbg !16777
  call void @llvm.dbg.value(metadata i32 undef, metadata !16388, metadata !DIExpression()) #25, !dbg !16773
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16778
  br i1 %3, label %5, label %4, !dbg !16779

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 148) #27, !dbg !16780
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.287, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16780
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 148) #27, !dbg !16780
  unreachable, !dbg !16780

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16394, metadata !DIExpression()) #25, !dbg !16777
  call void @llvm.dbg.value(metadata i32 undef, metadata !16388, metadata !DIExpression()) #25, !dbg !16773
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16781
  call void @llvm.dbg.value(metadata i32 undef, metadata !16770, metadata !DIExpression()), !dbg !16772
  call void @llvm.dbg.value(metadata i64 0, metadata !16767, metadata !DIExpression()), !dbg !16771
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()), !dbg !16772
  %6 = load i64, i64* @curr_tick, align 8, !dbg !16782
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !16785
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !16767, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16771
  call void @llvm.dbg.value(metadata i32 undef, metadata !16455, metadata !DIExpression()) #25, !dbg !16786
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16460, metadata !DIExpression()) #25, !dbg !16786
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16788
  br i1 %8, label %10, label %9, !dbg !16789

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 194) #27, !dbg !16790
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.292, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16790
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 194) #27, !dbg !16790
  unreachable, !dbg !16790

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !16775
  call void @llvm.dbg.value(metadata i32 %11, metadata !16394, metadata !DIExpression()) #25, !dbg !16777
  call void @llvm.dbg.value(metadata i32 %11, metadata !16388, metadata !DIExpression()) #25, !dbg !16773
  call void @llvm.dbg.value(metadata i32 %11, metadata !16770, metadata !DIExpression()), !dbg !16772
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !16767, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16771
  call void @llvm.dbg.value(metadata i32 undef, metadata !16455, metadata !DIExpression()) #25, !dbg !16786
  call void @llvm.dbg.value(metadata i32 undef, metadata !16469, metadata !DIExpression()) #25, !dbg !16791
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !16793, !srcloc !16475
  call void @llvm.dbg.value(metadata i32 undef, metadata !16768, metadata !DIExpression()), !dbg !16772
  %12 = add i64 %7, %6, !dbg !16794
  ret i64 %12, !dbg !16795
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16796 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16798, metadata !DIExpression()), !dbg !16802
  call void @llvm.dbg.value(metadata i32 0, metadata !16799, metadata !DIExpression()), !dbg !16803
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16382, metadata !DIExpression()) #25, !dbg !16804
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16806, !srcloc !16397
  call void @llvm.dbg.value(metadata i32 undef, metadata !16394, metadata !DIExpression()) #25, !dbg !16808
  call void @llvm.dbg.value(metadata i32 undef, metadata !16395, metadata !DIExpression()) #25, !dbg !16808
  call void @llvm.dbg.value(metadata i32 undef, metadata !16388, metadata !DIExpression()) #25, !dbg !16804
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16809
  br i1 %2, label %4, label %3, !dbg !16810

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 148) #27, !dbg !16811
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.287, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16811
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 148) #27, !dbg !16811
  unreachable, !dbg !16811

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16394, metadata !DIExpression()) #25, !dbg !16808
  call void @llvm.dbg.value(metadata i32 undef, metadata !16388, metadata !DIExpression()) #25, !dbg !16804
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16812
  call void @llvm.dbg.value(metadata i32 undef, metadata !16801, metadata !DIExpression()), !dbg !16803
  call void @llvm.dbg.value(metadata i32 -1, metadata !16798, metadata !DIExpression()), !dbg !16802
  call void @llvm.dbg.value(metadata i32 undef, metadata !16799, metadata !DIExpression()), !dbg !16803
  %5 = tail call fastcc i32 @next_timeout() #26, !dbg !16813
  call void @llvm.dbg.value(metadata i32 %5, metadata !16798, metadata !DIExpression()), !dbg !16802
  call void @llvm.dbg.value(metadata i32 undef, metadata !16455, metadata !DIExpression()) #25, !dbg !16816
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16460, metadata !DIExpression()) #25, !dbg !16816
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16818
  br i1 %6, label %8, label %7, !dbg !16819

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 194) #27, !dbg !16820
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.292, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16820
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 194) #27, !dbg !16820
  unreachable, !dbg !16820

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !16806
  call void @llvm.dbg.value(metadata i32 %9, metadata !16394, metadata !DIExpression()) #25, !dbg !16808
  call void @llvm.dbg.value(metadata i32 %9, metadata !16388, metadata !DIExpression()) #25, !dbg !16804
  call void @llvm.dbg.value(metadata i32 %9, metadata !16801, metadata !DIExpression()), !dbg !16803
  call void @llvm.dbg.value(metadata i32 undef, metadata !16455, metadata !DIExpression()) #25, !dbg !16816
  call void @llvm.dbg.value(metadata i32 undef, metadata !16469, metadata !DIExpression()) #25, !dbg !16821
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16823, !srcloc !16475
  call void @llvm.dbg.value(metadata i32 %5, metadata !16798, metadata !DIExpression()), !dbg !16802
  call void @llvm.dbg.value(metadata i32 undef, metadata !16799, metadata !DIExpression()), !dbg !16803
  ret i32 %5, !dbg !16824
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16827, metadata !DIExpression()), !dbg !16837
  call void @llvm.dbg.value(metadata i1 %1, metadata !16828, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16837
  call void @llvm.dbg.value(metadata i32 0, metadata !16829, metadata !DIExpression()), !dbg !16838
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16382, metadata !DIExpression()) #25, !dbg !16839
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16841, !srcloc !16397
  call void @llvm.dbg.value(metadata i32 undef, metadata !16394, metadata !DIExpression()) #25, !dbg !16843
  call void @llvm.dbg.value(metadata i32 undef, metadata !16395, metadata !DIExpression()) #25, !dbg !16843
  call void @llvm.dbg.value(metadata i32 undef, metadata !16388, metadata !DIExpression()) #25, !dbg !16839
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16844
  br i1 %4, label %6, label %5, !dbg !16845

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 148) #27, !dbg !16846
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.287, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16846
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 148) #27, !dbg !16846
  unreachable, !dbg !16846

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16394, metadata !DIExpression()) #25, !dbg !16843
  call void @llvm.dbg.value(metadata i32 undef, metadata !16388, metadata !DIExpression()) #25, !dbg !16839
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16847
  call void @llvm.dbg.value(metadata i32 undef, metadata !16831, metadata !DIExpression()), !dbg !16838
  call void @llvm.dbg.value(metadata i32 undef, metadata !16829, metadata !DIExpression()), !dbg !16838
  %7 = tail call fastcc i32 @next_timeout() #26, !dbg !16848
  call void @llvm.dbg.value(metadata i32 %7, metadata !16832, metadata !DIExpression()), !dbg !16849
  call void @llvm.dbg.value(metadata i1 undef, metadata !16835, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16849
  %8 = icmp slt i32 %7, 2, !dbg !16850
  call void @llvm.dbg.value(metadata i1 %8, metadata !16836, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16849
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !16851
  call void @llvm.dbg.value(metadata i1 %9, metadata !16835, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16849
  br i1 %10, label %14, label %11, !dbg !16851

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !16853
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !16853
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #27, !dbg !16855
  br label %14, !dbg !16856

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16455, metadata !DIExpression()) #25, !dbg !16857
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16460, metadata !DIExpression()) #25, !dbg !16857
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16859
  br i1 %15, label %17, label %16, !dbg !16860

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 194) #27, !dbg !16861
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.292, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16861
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 194) #27, !dbg !16861
  unreachable, !dbg !16861

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !16841
  call void @llvm.dbg.value(metadata i32 %18, metadata !16394, metadata !DIExpression()) #25, !dbg !16843
  call void @llvm.dbg.value(metadata i32 %18, metadata !16388, metadata !DIExpression()) #25, !dbg !16839
  call void @llvm.dbg.value(metadata i32 %18, metadata !16831, metadata !DIExpression()), !dbg !16838
  call void @llvm.dbg.value(metadata i32 undef, metadata !16455, metadata !DIExpression()) #25, !dbg !16857
  call void @llvm.dbg.value(metadata i32 undef, metadata !16469, metadata !DIExpression()) #25, !dbg !16862
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !16864, !srcloc !16475
  call void @llvm.dbg.value(metadata i32 1, metadata !16829, metadata !DIExpression()), !dbg !16838
  call void @llvm.dbg.value(metadata i32 undef, metadata !16829, metadata !DIExpression()), !dbg !16838
  ret void, !dbg !16865
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16866 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16870, metadata !DIExpression()), !dbg !16875
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !16876
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16382, metadata !DIExpression()) #25, !dbg !16877
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16879, !srcloc !16397
  call void @llvm.dbg.value(metadata i32 undef, metadata !16394, metadata !DIExpression()) #25, !dbg !16881
  call void @llvm.dbg.value(metadata i32 undef, metadata !16395, metadata !DIExpression()) #25, !dbg !16881
  call void @llvm.dbg.value(metadata i32 undef, metadata !16388, metadata !DIExpression()) #25, !dbg !16877
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16882
  br i1 %3, label %5, label %4, !dbg !16883

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 148) #27, !dbg !16884
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.287, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16884
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 148) #27, !dbg !16884
  unreachable, !dbg !16884

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16394, metadata !DIExpression()) #25, !dbg !16881
  call void @llvm.dbg.value(metadata i32 undef, metadata !16388, metadata !DIExpression()) #25, !dbg !16877
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16885
  call void @llvm.dbg.value(metadata i32 undef, metadata !16871, metadata !DIExpression()), !dbg !16875
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16875
  call void @llvm.dbg.value(metadata i32 undef, metadata !16871, metadata !DIExpression()), !dbg !16875
  %6 = tail call fastcc %struct._timeout* @first() #26, !dbg !16886
  %7 = icmp eq %struct._timeout* %6, null, !dbg !16887
  br i1 %7, label %37, label %8, !dbg !16888

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !16875
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !16889
  %14 = load i64, i64* %13, align 8, !dbg !16889
  %15 = sext i32 %11 to i64, !dbg !16890
  %16 = icmp sgt i64 %14, %15, !dbg !16891
  br i1 %16, label %35, label %17, !dbg !16892

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !16872, metadata !DIExpression()), !dbg !16893
  %18 = trunc i64 %14 to i32, !dbg !16894
  call void @llvm.dbg.value(metadata i32 %18, metadata !16874, metadata !DIExpression()), !dbg !16893
  %19 = sext i32 %18 to i64, !dbg !16895
  %20 = load i64, i64* @curr_tick, align 8, !dbg !16896
  %21 = add i64 %20, %19, !dbg !16896
  store i64 %21, i64* @curr_tick, align 8, !dbg !16896
  store i64 0, i64* %13, align 8, !dbg !16897
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #26, !dbg !16898
  call void @llvm.dbg.value(metadata i32 undef, metadata !16455, metadata !DIExpression()) #25, !dbg !16899
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16460, metadata !DIExpression()) #25, !dbg !16899
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16901
  br i1 %22, label %24, label %23, !dbg !16902

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 194) #27, !dbg !16903
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.292, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16903
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 194) #27, !dbg !16903
  unreachable, !dbg !16903

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16455, metadata !DIExpression()) #25, !dbg !16899
  call void @llvm.dbg.value(metadata i32 %12, metadata !16469, metadata !DIExpression()) #25, !dbg !16904
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !16906, !srcloc !16475
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !16907
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !16907
  tail call void %26(%struct._timeout* noundef nonnull %9) #27, !dbg !16908
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16382, metadata !DIExpression()) #25, !dbg !16909
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16911, !srcloc !16397
  call void @llvm.dbg.value(metadata i32 undef, metadata !16394, metadata !DIExpression()) #25, !dbg !16913
  call void @llvm.dbg.value(metadata i32 undef, metadata !16395, metadata !DIExpression()) #25, !dbg !16913
  call void @llvm.dbg.value(metadata i32 undef, metadata !16388, metadata !DIExpression()) #25, !dbg !16909
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16914
  br i1 %28, label %30, label %29, !dbg !16915

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 148) #27, !dbg !16916
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.287, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16916
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 148) #27, !dbg !16916
  unreachable, !dbg !16916

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16394, metadata !DIExpression()) #25, !dbg !16913
  call void @llvm.dbg.value(metadata i32 undef, metadata !16388, metadata !DIExpression()) #25, !dbg !16909
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16917
  call void @llvm.dbg.value(metadata i32 undef, metadata !16871, metadata !DIExpression()), !dbg !16875
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !16918
  %32 = sub nsw i32 %31, %18, !dbg !16918
  store i32 %32, i32* @announce_remaining, align 4, !dbg !16875
  call void @llvm.dbg.value(metadata i32 undef, metadata !16871, metadata !DIExpression()), !dbg !16875
  %33 = tail call fastcc %struct._timeout* @first() #26, !dbg !16886
  %34 = icmp eq %struct._timeout* %33, null, !dbg !16887
  br i1 %34, label %37, label %8, !dbg !16888, !llvm.loop !16919

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !16921
  store i64 %36, i64* %13, align 8, !dbg !16921
  br label %41, !dbg !16924

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !16875
  %40 = sext i32 %39 to i64, !dbg !16925
  br label %41, !dbg !16925

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !16925
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !16926
  %45 = add i64 %44, %42, !dbg !16926
  store i64 %45, i64* @curr_tick, align 8, !dbg !16926
  store i32 0, i32* @announce_remaining, align 4, !dbg !16927
  %46 = tail call fastcc i32 @next_timeout() #26, !dbg !16928
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #27, !dbg !16929
  call void @llvm.dbg.value(metadata i32 undef, metadata !16455, metadata !DIExpression()) #25, !dbg !16930
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16460, metadata !DIExpression()) #25, !dbg !16930
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16932
  br i1 %47, label %49, label %48, !dbg !16933

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 194) #27, !dbg !16934
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.292, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16934
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 194) #27, !dbg !16934
  unreachable, !dbg !16934

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !16875
  call void @llvm.dbg.value(metadata i32 %50, metadata !16455, metadata !DIExpression()) #25, !dbg !16930
  call void @llvm.dbg.value(metadata i32 %50, metadata !16469, metadata !DIExpression()) #25, !dbg !16935
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #25, !dbg !16937, !srcloc !16475
  ret void, !dbg !16938
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16939 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16943, metadata !DIExpression()), !dbg !16947
  call void @llvm.dbg.value(metadata i32 0, metadata !16944, metadata !DIExpression()), !dbg !16948
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16382, metadata !DIExpression()) #25, !dbg !16949
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16951, !srcloc !16397
  call void @llvm.dbg.value(metadata i32 undef, metadata !16394, metadata !DIExpression()) #25, !dbg !16953
  call void @llvm.dbg.value(metadata i32 undef, metadata !16395, metadata !DIExpression()) #25, !dbg !16953
  call void @llvm.dbg.value(metadata i32 undef, metadata !16388, metadata !DIExpression()) #25, !dbg !16949
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16954
  br i1 %2, label %4, label %3, !dbg !16955

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 148) #27, !dbg !16956
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.287, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16956
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 148) #27, !dbg !16956
  unreachable, !dbg !16956

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16394, metadata !DIExpression()) #25, !dbg !16953
  call void @llvm.dbg.value(metadata i32 undef, metadata !16388, metadata !DIExpression()) #25, !dbg !16949
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16957
  call void @llvm.dbg.value(metadata i32 undef, metadata !16946, metadata !DIExpression()), !dbg !16948
  call void @llvm.dbg.value(metadata i64 0, metadata !16943, metadata !DIExpression()), !dbg !16947
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()), !dbg !16948
  %5 = load i64, i64* @curr_tick, align 8, !dbg !16958
  %6 = tail call fastcc i32 @elapsed.288() #26, !dbg !16961
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16943, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16947
  call void @llvm.dbg.value(metadata i32 undef, metadata !16455, metadata !DIExpression()) #25, !dbg !16962
  call void @llvm.dbg.value(metadata %struct._sfnode* @timeout_lock, metadata !16460, metadata !DIExpression()) #25, !dbg !16962
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16964
  br i1 %7, label %9, label %8, !dbg !16965

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 194) #27, !dbg !16966
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.292, i32 0, i32 0), %struct._sfnode* noundef nonnull @timeout_lock) #27, !dbg !16966
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.286, i32 0, i32 0), i32 noundef 194) #27, !dbg !16966
  unreachable, !dbg !16966

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !16951
  call void @llvm.dbg.value(metadata i32 %10, metadata !16394, metadata !DIExpression()) #25, !dbg !16953
  call void @llvm.dbg.value(metadata i32 %10, metadata !16388, metadata !DIExpression()) #25, !dbg !16949
  call void @llvm.dbg.value(metadata i32 %10, metadata !16946, metadata !DIExpression()), !dbg !16948
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16943, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16947
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !16943, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16947
  call void @llvm.dbg.value(metadata i32 undef, metadata !16455, metadata !DIExpression()) #25, !dbg !16962
  call void @llvm.dbg.value(metadata i32 undef, metadata !16469, metadata !DIExpression()) #25, !dbg !16967
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #25, !dbg !16969, !srcloc !16475
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()), !dbg !16948
  %11 = sext i32 %6 to i64, !dbg !16961
  %12 = add i64 %5, %11, !dbg !16970
  ret i64 %12, !dbg !16971
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16972 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !16973
  %2 = trunc i64 %1 to i32, !dbg !16974
  ret i32 %2, !dbg !16975
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16976 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !16977
  ret i64 %1, !dbg !16978
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16981, metadata !DIExpression()), !dbg !16988
  %2 = icmp eq i32 %0, 0, !dbg !16989
  br i1 %2, label %10, label %3, !dbg !16991

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !16992
  call void @llvm.dbg.value(metadata i32 %4, metadata !16982, metadata !DIExpression()), !dbg !16988
  %5 = mul i32 %0, 84, !dbg !16993
  call void @llvm.dbg.value(metadata i32 %5, metadata !16983, metadata !DIExpression()), !dbg !16988
  br label %6, !dbg !16994

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !16995
  call void @llvm.dbg.value(metadata i32 %7, metadata !16984, metadata !DIExpression()), !dbg !16996
  %8 = sub i32 %7, %4, !dbg !16997
  %9 = icmp ult i32 %8, %5, !dbg !16999
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17000
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17001 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !17002
  ret i32 %1, !dbg !17003
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17004 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !17006
  ret i32 %1, !dbg !17007
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17008 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17012, metadata !DIExpression()), !dbg !17014
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17015

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !17016
  br label %14, !dbg !17020

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17013, metadata !DIExpression()), !dbg !17014
  %6 = icmp slt i64 %2, -1, !dbg !17021
  br i1 %6, label %7, label %9, !dbg !17024

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17025
  br label %14, !dbg !17026

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !17028
  %11 = icmp ugt i64 %2, 1, !dbg !17029
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17029
  %13 = add nsw i64 %10, %12, !dbg !17030
  br label %14, !dbg !17031

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17032
  ret i64 %15, !dbg !17033
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !17034 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !17036, metadata !DIExpression()), !dbg !17040
  %2 = icmp eq i8* %0, null, !dbg !17041
  br i1 %2, label %7, label %3, !dbg !17043

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !17037, metadata !DIExpression()), !dbg !17040
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !17044
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !17044
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !17037, metadata !DIExpression()), !dbg !17040
  call void @llvm.dbg.value(metadata i8* %4, metadata !17036, metadata !DIExpression()), !dbg !17040
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !17046
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #27, !dbg !17047
  br label %7, !dbg !17048

7:                                                ; preds = %3, %1
  ret void, !dbg !17049
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17050 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17054, metadata !DIExpression()), !dbg !17057
  call void @llvm.dbg.value(metadata i32 %1, metadata !17055, metadata !DIExpression()), !dbg !17057
  %3 = icmp ugt i32 %0, 3, !dbg !17058
  %4 = and i32 %0, 3, !dbg !17058
  %5 = icmp eq i32 %4, 0, !dbg !17058
  %6 = and i1 %3, %5, !dbg !17058
  br i1 %6, label %8, label %7, !dbg !17058

7:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.313, i32 0, i32 0), i32 noundef 68) #27, !dbg !17061
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.314, i32 0, i32 0)) #27, !dbg !17061
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.313, i32 0, i32 0), i32 noundef 68) #27, !dbg !17061
  unreachable, !dbg !17061

8:                                                ; preds = %2
  %9 = tail call i32 @llvm.ctpop.i32(i32 %0), !dbg !17063, !range !4160
  %10 = icmp ult i32 %9, 2, !dbg !17063
  br i1 %10, label %12, label %11, !dbg !17066

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.313, i32 0, i32 0), i32 noundef 71) #27, !dbg !17067
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.316, i32 0, i32 0)) #27, !dbg !17067
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.313, i32 0, i32 0), i32 noundef 71) #27, !dbg !17067
  unreachable, !dbg !17067

12:                                               ; preds = %8
  %13 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull @_system_heap, i32 noundef %0, i32 noundef %1) #26, !dbg !17069
  call void @llvm.dbg.value(metadata i8* %13, metadata !17056, metadata !DIExpression()), !dbg !17057
  ret i8* %13, !dbg !17070
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !17071 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17075, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.value(metadata i32 %1, metadata !17076, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.value(metadata i32 %2, metadata !17077, metadata !DIExpression()), !dbg !17081
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !17077, metadata !DIExpression(DW_OP_deref)), !dbg !17081
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !17082
  br i1 %5, label %21, label %6, !dbg !17084

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !17085
  call void @llvm.dbg.value(metadata i32 %7, metadata !17080, metadata !DIExpression()), !dbg !17081
  %8 = load i32, i32* %4, align 4, !dbg !17086
  call void @llvm.dbg.value(metadata i32 %8, metadata !17077, metadata !DIExpression()), !dbg !17081
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #27, !dbg !17087
  call void @llvm.dbg.value(metadata i8* %9, metadata !17078, metadata !DIExpression()), !dbg !17081
  %10 = icmp eq i8* %9, null, !dbg !17088
  br i1 %10, label %21, label %11, !dbg !17090

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !17091
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !17079, metadata !DIExpression()), !dbg !17081
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !17092
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !17093
  call void @llvm.dbg.value(metadata i8* %13, metadata !17079, metadata !DIExpression()), !dbg !17081
  call void @llvm.dbg.value(metadata i8* %13, metadata !17078, metadata !DIExpression()), !dbg !17081
  %14 = icmp eq i32 %1, 0, !dbg !17094
  br i1 %14, label %21, label %15, !dbg !17094

15:                                               ; preds = %11
  %16 = ptrtoint i8* %13 to i32, !dbg !17094
  %17 = add i32 %1, -1, !dbg !17094
  %18 = and i32 %17, %16, !dbg !17094
  %19 = icmp eq i32 %18, 0, !dbg !17094
  br i1 %19, label %21, label %20, !dbg !17097

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.313, i32 0, i32 0), i32 noundef 38) #27, !dbg !17098
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.318, i32 0, i32 0), i8* noundef nonnull %13, i32 noundef %1) #27, !dbg !17098
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.313, i32 0, i32 0), i32 noundef 38) #27, !dbg !17098
  unreachable, !dbg !17098

21:                                               ; preds = %11, %15, %6, %3
  %22 = phi i8* [ null, %3 ], [ null, %6 ], [ %13, %15 ], [ %13, %11 ], !dbg !17081
  ret i8* %22, !dbg !17100
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #24 !dbg !17101 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17106, metadata !DIExpression()), !dbg !17109
  call void @llvm.dbg.value(metadata i32 4, metadata !17107, metadata !DIExpression()), !dbg !17109
  call void @llvm.dbg.value(metadata i32* %1, metadata !17108, metadata !DIExpression()), !dbg !17109
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !17110
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !17110
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !17110
  store i32 %5, i32* %1, align 4, !dbg !17110
  ret i1 %4, !dbg !17111
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_malloc(i32 noundef %0) local_unnamed_addr #1 !dbg !17112 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17114, metadata !DIExpression()), !dbg !17116
  %2 = tail call i8* @k_aligned_alloc(i32 noundef 4, i32 noundef %0) #26, !dbg !17117
  call void @llvm.dbg.value(metadata i8* %2, metadata !17115, metadata !DIExpression()), !dbg !17116
  ret i8* %2, !dbg !17118
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17119 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !17121, metadata !DIExpression()), !dbg !17125
  call void @llvm.dbg.value(metadata i32 %1, metadata !17122, metadata !DIExpression()), !dbg !17125
  %4 = bitcast i32* %3 to i8*, !dbg !17126
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #25, !dbg !17126
  call void @llvm.dbg.value(metadata i32* %3, metadata !17124, metadata !DIExpression(DW_OP_deref)), !dbg !17125
  %5 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* noundef nonnull %3) #26, !dbg !17127
  br i1 %5, label %12, label %6, !dbg !17129

6:                                                ; preds = %2
  %7 = load i32, i32* %3, align 4, !dbg !17130
  call void @llvm.dbg.value(metadata i32 %7, metadata !17124, metadata !DIExpression()), !dbg !17125
  %8 = tail call i8* @k_malloc(i32 noundef %7) #26, !dbg !17131
  call void @llvm.dbg.value(metadata i8* %8, metadata !17123, metadata !DIExpression()), !dbg !17125
  %9 = icmp eq i8* %8, null, !dbg !17132
  br i1 %9, label %12, label %10, !dbg !17134

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 %7, metadata !17124, metadata !DIExpression()), !dbg !17125
  %11 = tail call i8* @memset(i8* noundef nonnull %8, i32 noundef 0, i32 noundef %7) #27, !dbg !17135
  br label %12, !dbg !17137

12:                                               ; preds = %10, %6, %2
  %13 = phi i8* [ null, %2 ], [ null, %6 ], [ %8, %10 ], !dbg !17125
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #25, !dbg !17138
  ret i8* %13, !dbg !17138
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #24 !dbg !17139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17141, metadata !DIExpression()), !dbg !17144
  call void @llvm.dbg.value(metadata i32 %1, metadata !17142, metadata !DIExpression()), !dbg !17144
  call void @llvm.dbg.value(metadata i32* %2, metadata !17143, metadata !DIExpression()), !dbg !17144
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !17145
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !17145
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !17145
  store i32 %6, i32* %2, align 4, !dbg !17145
  ret i1 %5, !dbg !17146
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_thread_system_pool_assign(%struct.k_thread* nocapture noundef writeonly %0) local_unnamed_addr #6 !dbg !17147 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17221, metadata !DIExpression()), !dbg !17222
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !17223
  store %struct.k_heap* @_system_heap, %struct.k_heap** %2, align 8, !dbg !17224
  ret void, !dbg !17225
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17228, metadata !DIExpression()), !dbg !17232
  call void @llvm.dbg.value(metadata i32 %1, metadata !17229, metadata !DIExpression()), !dbg !17232
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !17233
  br i1 %3, label %9, label %4, !dbg !17235

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17236
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !17238
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !17238
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !17231, metadata !DIExpression()), !dbg !17232
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !17239
  br i1 %8, label %12, label %9, !dbg !17241

9:                                                ; preds = %2, %4
  %10 = phi %struct.k_heap* [ %7, %4 ], [ @_system_heap, %2 ]
  %11 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %10, i32 noundef %0, i32 noundef %1) #26, !dbg !17242
  call void @llvm.dbg.value(metadata i8* %11, metadata !17230, metadata !DIExpression()), !dbg !17232
  br label %12, !dbg !17244

12:                                               ; preds = %4, %9
  %13 = phi i8* [ %11, %9 ], [ null, %4 ], !dbg !17245
  call void @llvm.dbg.value(metadata i8* %13, metadata !17230, metadata !DIExpression()), !dbg !17232
  ret i8* %13, !dbg !17246
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @main() local_unnamed_addr #1 !dbg !17247 {
  tail call void asm sideeffect "nop", ""() #25, !dbg !17249, !srcloc !17252
  ret void, !dbg !17253
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17254 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.329, i32 0, i32 0)) #27, !dbg !17256
  ret void, !dbg !17257
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !17258 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !17260, metadata !DIExpression()), !dbg !17282
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !17261, metadata !DIExpression()), !dbg !17283
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !17284

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 24) #27, !dbg !17288
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.334, i32 0, i32 0)) #27, !dbg !17288
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 24) #27, !dbg !17288
  unreachable, !dbg !17288

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !17261, metadata !DIExpression()), !dbg !17283
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17291
  br i1 %5, label %7, label %6, !dbg !17292

6:                                                ; preds = %3
  ret i32 0, !dbg !17293

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !17294
  %9 = load i8*, i8** %8, align 4, !dbg !17294
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !17297
  %11 = load i32, i32* %10, align 4, !dbg !17297
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #26, !dbg !17298
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !17299
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !17261, metadata !DIExpression()), !dbg !17283
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !17300
  br i1 %13, label %2, label %3, !dbg !17284, !llvm.loop !17301
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !17303 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17307, metadata !DIExpression()), !dbg !17310
  call void @llvm.dbg.value(metadata i8* %1, metadata !17308, metadata !DIExpression()), !dbg !17310
  call void @llvm.dbg.value(metadata i32 %2, metadata !17309, metadata !DIExpression()), !dbg !17310
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17311
  tail call fastcc void @z_waitq_init.335(%struct._wait_q_t* noundef nonnull %4) #26, !dbg !17312
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17313
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !17314
  ret void, !dbg !17315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.335(%struct._wait_q_t* noundef %0) unnamed_addr #6 !dbg !17316 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17321, metadata !DIExpression()), !dbg !17322
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17323
  tail call fastcc void @sys_dlist_init.336(%struct._dnode* noundef %2) #26, !dbg !17324
  ret void, !dbg !17325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.336(%struct._dnode* noundef %0) unnamed_addr #6 !dbg !17326 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17331, metadata !DIExpression()), !dbg !17332
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17333
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17334
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17335
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17336
  ret void, !dbg !17337
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17338 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !17349, metadata !DIExpression()), !dbg !17359
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17346, metadata !DIExpression()), !dbg !17359
  call void @llvm.dbg.value(metadata i32 %1, metadata !17347, metadata !DIExpression()), !dbg !17359
  call void @llvm.dbg.value(metadata i32 %2, metadata !17348, metadata !DIExpression()), !dbg !17359
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !17360
  call void @llvm.dbg.value(metadata i64 %6, metadata !17351, metadata !DIExpression()), !dbg !17359
  call void @llvm.dbg.value(metadata i8* null, metadata !17352, metadata !DIExpression()), !dbg !17359
  %7 = icmp eq i64 %5, -1, !dbg !17361
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !17361
  call void @llvm.dbg.value(metadata i64 %8, metadata !17351, metadata !DIExpression()), !dbg !17359
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17362
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !17363, metadata !DIExpression()) #25, !dbg !17370
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17372, !srcloc !17378
  call void @llvm.dbg.value(metadata i32 undef, metadata !17375, metadata !DIExpression()) #25, !dbg !17379
  call void @llvm.dbg.value(metadata i32 undef, metadata !17376, metadata !DIExpression()) #25, !dbg !17379
  call void @llvm.dbg.value(metadata i32 undef, metadata !17369, metadata !DIExpression()) #25, !dbg !17370
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %9) #27, !dbg !17380
  br i1 %11, label %13, label %12, !dbg !17383

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17384
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.341, i32 0, i32 0), %struct._sfnode* noundef nonnull %9) #27, !dbg !17384
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17384
  unreachable, !dbg !17384

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17375, metadata !DIExpression()) #25, !dbg !17379
  call void @llvm.dbg.value(metadata i32 undef, metadata !17369, metadata !DIExpression()) #25, !dbg !17370
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %9) #27, !dbg !17386
  call void @llvm.dbg.value(metadata i32 undef, metadata !17353, metadata !DIExpression()), !dbg !17359
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17387, !srcloc !17396
  call void @llvm.dbg.value(metadata i32 %14, metadata !17390, metadata !DIExpression()) #25, !dbg !17397
  %15 = icmp eq i32 %14, 0, !dbg !17398
  %16 = icmp eq i64 %5, 0, !dbg !17399
  %17 = select i1 %15, i1 true, i1 %16, !dbg !17399
  br i1 %17, label %18, label %25, !dbg !17399

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !17352, metadata !DIExpression()), !dbg !17359
  call void @llvm.dbg.value(metadata i8 0, metadata !17358, metadata !DIExpression()), !dbg !17359
  call void @llvm.dbg.value(metadata i32 undef, metadata !17353, metadata !DIExpression()), !dbg !17359
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #27, !dbg !17400
  call void @llvm.dbg.value(metadata i8* %20, metadata !17352, metadata !DIExpression()), !dbg !17359
  %21 = tail call i64 @sys_clock_tick_get() #27, !dbg !17402
  call void @llvm.dbg.value(metadata i64 %21, metadata !17350, metadata !DIExpression()), !dbg !17359
  %22 = icmp eq i8* %20, null, !dbg !17403
  br i1 %22, label %23, label %43, !dbg !17405

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !17353, metadata !DIExpression()), !dbg !17359
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !17405

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 76) #27, !dbg !17406
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.343, i32 0, i32 0)) #27, !dbg !17406
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 76) #27, !dbg !17406
  unreachable, !dbg !17406

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17358, metadata !DIExpression()), !dbg !17359
  %29 = sub nsw i64 %8, %27, !dbg !17408
  %30 = icmp slt i64 %29, 1, !dbg !17409
  br i1 %30, label %43, label %31, !dbg !17410

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !17359
  call void @llvm.dbg.value(metadata i8 undef, metadata !17358, metadata !DIExpression()), !dbg !17359
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !17411
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !17411
  %35 = tail call i32 @z_pend_curr(%struct._sfnode* noundef nonnull %9, [1 x i32] %33, %struct._wait_q_t* noundef nonnull %24, [1 x i64] %34) #27, !dbg !17411
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !17363, metadata !DIExpression()) #25, !dbg !17412
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17414, !srcloc !17378
  call void @llvm.dbg.value(metadata i32 undef, metadata !17375, metadata !DIExpression()) #25, !dbg !17416
  call void @llvm.dbg.value(metadata i32 undef, metadata !17376, metadata !DIExpression()) #25, !dbg !17416
  call void @llvm.dbg.value(metadata i32 undef, metadata !17369, metadata !DIExpression()) #25, !dbg !17412
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %9) #27, !dbg !17417
  br i1 %37, label %39, label %38, !dbg !17418

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17419
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.341, i32 0, i32 0), %struct._sfnode* noundef nonnull %9) #27, !dbg !17419
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17419
  unreachable, !dbg !17419

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !17358, metadata !DIExpression()), !dbg !17359
  call void @llvm.dbg.value(metadata i32 undef, metadata !17375, metadata !DIExpression()) #25, !dbg !17416
  call void @llvm.dbg.value(metadata i32 undef, metadata !17369, metadata !DIExpression()) #25, !dbg !17412
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %9) #27, !dbg !17420
  call void @llvm.dbg.value(metadata i32 undef, metadata !17353, metadata !DIExpression()), !dbg !17359
  call void @llvm.dbg.value(metadata i8* null, metadata !17352, metadata !DIExpression()), !dbg !17359
  call void @llvm.dbg.value(metadata i32 undef, metadata !17353, metadata !DIExpression()), !dbg !17359
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #27, !dbg !17400
  call void @llvm.dbg.value(metadata i8* %40, metadata !17352, metadata !DIExpression()), !dbg !17359
  %41 = tail call i64 @sys_clock_tick_get() #27, !dbg !17402
  call void @llvm.dbg.value(metadata i64 %41, metadata !17350, metadata !DIExpression()), !dbg !17359
  %42 = icmp eq i8* %40, null, !dbg !17403
  br i1 %42, label %26, label %43, !dbg !17405, !llvm.loop !17421

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !17400
  call void @llvm.dbg.value(metadata i8* %45, metadata !17352, metadata !DIExpression()), !dbg !17359
  call void @llvm.dbg.value(metadata i32 undef, metadata !17424, metadata !DIExpression()) #25, !dbg !17430
  call void @llvm.dbg.value(metadata %struct._sfnode* %9, metadata !17429, metadata !DIExpression()) #25, !dbg !17430
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %9) #27, !dbg !17432
  br i1 %46, label %48, label %47, !dbg !17435

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17436
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.345, i32 0, i32 0), %struct._sfnode* noundef nonnull %9) #27, !dbg !17436
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17436
  unreachable, !dbg !17436

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !17359
  call void @llvm.dbg.value(metadata i32 %49, metadata !17424, metadata !DIExpression()) #25, !dbg !17430
  call void @llvm.dbg.value(metadata i32 %49, metadata !17438, metadata !DIExpression()) #25, !dbg !17441
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #25, !dbg !17443, !srcloc !17444
  ret i8* %45, !dbg !17445
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17446 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17452, metadata !DIExpression()), !dbg !17454
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17450, metadata !DIExpression()), !dbg !17454
  call void @llvm.dbg.value(metadata i32 %1, metadata !17451, metadata !DIExpression()), !dbg !17454
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !17455
  call void @llvm.dbg.value(metadata i8* %4, metadata !17453, metadata !DIExpression()), !dbg !17454
  ret i8* %4, !dbg !17456
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17457 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17461, metadata !DIExpression()), !dbg !17464
  call void @llvm.dbg.value(metadata i8* %1, metadata !17462, metadata !DIExpression()), !dbg !17464
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17465
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !17363, metadata !DIExpression()) #25, !dbg !17466
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17468, !srcloc !17378
  call void @llvm.dbg.value(metadata i32 undef, metadata !17375, metadata !DIExpression()) #25, !dbg !17470
  call void @llvm.dbg.value(metadata i32 undef, metadata !17376, metadata !DIExpression()) #25, !dbg !17470
  call void @llvm.dbg.value(metadata i32 undef, metadata !17369, metadata !DIExpression()) #25, !dbg !17466
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct._sfnode* noundef nonnull %3) #27, !dbg !17471
  br i1 %5, label %7, label %6, !dbg !17472

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17473
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.341, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #27, !dbg !17473
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.340, i32 0, i32 0), i32 noundef 148) #27, !dbg !17473
  unreachable, !dbg !17473

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !17468
  call void @llvm.dbg.value(metadata i32 %8, metadata !17375, metadata !DIExpression()) #25, !dbg !17470
  call void @llvm.dbg.value(metadata i32 %8, metadata !17369, metadata !DIExpression()) #25, !dbg !17466
  tail call void @z_spin_lock_set_owner(%struct._sfnode* noundef nonnull %3) #27, !dbg !17474
  call void @llvm.dbg.value(metadata i32 %8, metadata !17463, metadata !DIExpression()), !dbg !17464
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17475
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #27, !dbg !17476
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17477
  %11 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %10) #27, !dbg !17479
  %12 = icmp eq i32 %11, 0, !dbg !17480
  br i1 %12, label %15, label %13, !dbg !17481

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !17482
  tail call void @z_reschedule(%struct._sfnode* noundef nonnull %3, [1 x i32] %14) #27, !dbg !17482
  br label %19, !dbg !17484

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !17424, metadata !DIExpression()) #25, !dbg !17485
  call void @llvm.dbg.value(metadata %struct._sfnode* %3, metadata !17429, metadata !DIExpression()) #25, !dbg !17485
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct._sfnode* noundef nonnull %3) #27, !dbg !17488
  br i1 %16, label %18, label %17, !dbg !17489

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17490
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.345, i32 0, i32 0), %struct._sfnode* noundef nonnull %3) #27, !dbg !17490
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.340, i32 0, i32 0), i32 noundef 194) #27, !dbg !17490
  unreachable, !dbg !17490

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !17424, metadata !DIExpression()) #25, !dbg !17485
  call void @llvm.dbg.value(metadata i32 %8, metadata !17438, metadata !DIExpression()) #25, !dbg !17491
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !17493, !srcloc !17444
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !17494
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nofree nosync nounwind willreturn }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!894, !2, !2514, !27, !432, !2516, !2518, !2551, !2589, !2591, !443, !487, !2593, !2604, !2650, !2652, !2680, !2708, !2751, !2822, !2867, !516, !651, !2895, !687, !697, !722, !926, !2900, !1064, !1130, !1417, !1634, !2939, !1747, !1837, !2941, !3027, !3092, !1889, !3095, !1896, !2262, !3113, !3115, !2282, !3156, !2399, !2440, !3159, !3161, !2483}
!llvm.ident = !{!3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163, !3163}
!llvm.module.flags = !{!3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 98, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5504, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 86)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2752, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "printk_fifo", scope: !27, file: !218, line: 37, type: !410, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !112, globals: !215, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/basic/threads/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!29 = !{!30, !101, !107}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !102, line: 506, baseType: !32, size: 32, elements: !103)
!102 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!103 = !{!104, !105, !106}
!104 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!105 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!106 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !102, line: 512, baseType: !32, size: 32, elements: !108)
!108 = !{!109, !110, !111}
!109 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!110 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!111 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!112 = !{!113, !117, !118, !119, !202, !207, !167, !107, !101, !212, !156, !213}
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !114, line: 46, baseType: !115)
!114 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !116)
!116 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!118 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !102, line: 523, size: 288, elements: !122)
!122 = !{!123, !157, !163, !168, !172, !173, !174, !178, !198}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !121, file: !102, line: 524, baseType: !124, size: 32)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DISubroutineType(types: !126)
!126 = !{!118, !127, !154, !155}
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !131)
!130 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!131 = !{!132, !136, !137, !138, !147, !148}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !129, file: !130, line: 380, baseType: !133, size: 32)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !129, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !129, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !129, file: !130, line: 386, baseType: !139, size: 32, offset: 96)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !141)
!141 = !{!142, !145}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !140, file: !130, line: 359, baseType: !143, size: 8)
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !144)
!144 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !140, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!146 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !129, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !129, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !130, line: 43, baseType: !152)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !153)
!153 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !102, line: 237, baseType: !143)
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !102, line: 257, baseType: !156)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !121, file: !102, line: 530, baseType: !158, size: 32, offset: 32)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 32)
!159 = !DISubroutineType(types: !160)
!160 = !{!118, !127, !161}
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !102, line: 229, baseType: !156)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !121, file: !102, line: 532, baseType: !164, size: 32, offset: 64)
!164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 32)
!165 = !DISubroutineType(types: !166)
!166 = !{!118, !127, !167, !162}
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !102, line: 216, baseType: !156)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !121, file: !102, line: 535, baseType: !169, size: 32, offset: 96)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!170 = !DISubroutineType(types: !171)
!171 = !{!118, !127, !167}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !121, file: !102, line: 537, baseType: !169, size: 32, offset: 128)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !121, file: !102, line: 539, baseType: !169, size: 32, offset: 160)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !121, file: !102, line: 541, baseType: !175, size: 32, offset: 192)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!176 = !DISubroutineType(types: !177)
!177 = !{!118, !127, !154, !101, !107}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !121, file: !102, line: 544, baseType: !179, size: 32, offset: 224)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DISubroutineType(types: !181)
!181 = !{!118, !127, !182, !146}
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !102, line: 478, size: 96, elements: !184)
!184 = !{!185, !192, !197}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !183, file: !102, line: 482, baseType: !186, size: 32)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !187, line: 33, baseType: !188)
!187 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !187, line: 29, size: 32, elements: !189)
!189 = !{!190}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !188, file: !187, line: 30, baseType: !191, size: 32)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !183, file: !102, line: 485, baseType: !193, size: 32, offset: 32)
!193 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !102, line: 464, baseType: !194)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 32)
!195 = !DISubroutineType(types: !196)
!196 = !{null, !127, !182, !167}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !183, file: !102, line: 493, baseType: !167, size: 32, offset: 64)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !121, file: !102, line: 547, baseType: !199, size: 32, offset: 256)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{!156, !127}
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !204)
!204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !102, line: 428, size: 32, elements: !205)
!205 = !{!206}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !204, file: !102, line: 434, baseType: !167, size: 32)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !209)
!209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !102, line: 441, size: 32, elements: !210)
!210 = !{!211}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !209, file: !102, line: 447, baseType: !167, size: 32)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !214)
!214 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!215 = !{!25, !216, !368, !372, !374, !376, !378, !380, !385, !387, !389, !391, !393, !395, !408}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "_k_thread_data_blink0_id", scope: !27, file: !218, line: 111, type: !219, isLocal: false, isDefinition: true, align: 32)
!218 = !DIFile(filename: "zephyr/samples/basic/threads/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !220, line: 620, size: 384, elements: !221)
!220 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!221 = !{!222, !342, !350, !351, !356, !357, !358, !359, !360, !361, !363, !367}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !219, file: !220, line: 621, baseType: !223, size: 32)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !226)
!225 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!226 = !{!227, !294, !307, !308, !309, !310, !318, !337}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !224, file: !225, line: 247, baseType: !228, size: 384)
!228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !229)
!229 = !{!230, !258, !266, !267, !268, !281, !282, !283}
!230 = !DIDerivedType(tag: DW_TAG_member, scope: !228, file: !225, line: 60, baseType: !231, size: 64)
!231 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !228, file: !225, line: 60, size: 64, elements: !232)
!232 = !{!233, !249}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !231, file: !225, line: 61, baseType: !234, size: 64)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !236)
!235 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !237)
!237 = !{!238, !244}
!238 = !DIDerivedType(tag: DW_TAG_member, scope: !236, file: !235, line: 38, baseType: !239, size: 32)
!239 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !236, file: !235, line: 38, size: 32, elements: !240)
!240 = !{!241, !243}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !239, file: !235, line: 39, baseType: !242, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !239, file: !235, line: 40, baseType: !242, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_member, scope: !236, file: !235, line: 42, baseType: !245, size: 32, offset: 32)
!245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !236, file: !235, line: 42, size: 32, elements: !246)
!246 = !{!247, !248}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !245, file: !235, line: 43, baseType: !242, size: 32)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !245, file: !235, line: 44, baseType: !242, size: 32)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !231, file: !225, line: 62, baseType: !250, size: 64)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !252)
!251 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!252 = !{!253}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !250, file: !251, line: 50, baseType: !254, size: 64)
!254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !255, size: 64, elements: !256)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 32)
!256 = !{!257}
!257 = !DISubrange(count: 2)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !228, file: !225, line: 68, baseType: !259, size: 32, offset: 64)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 32)
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !262)
!261 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !263)
!263 = !{!264}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !262, file: !261, line: 232, baseType: !265, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !236)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !228, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !228, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!268 = !DIDerivedType(tag: DW_TAG_member, scope: !228, file: !225, line: 90, baseType: !269, size: 16, offset: 112)
!269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !228, file: !225, line: 90, size: 16, elements: !270)
!270 = !{!271, !278}
!271 = !DIDerivedType(tag: DW_TAG_member, scope: !269, file: !225, line: 91, baseType: !272, size: 16)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !269, file: !225, line: 91, size: 16, elements: !273)
!273 = !{!274, !277}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !272, file: !225, line: 96, baseType: !275, size: 8)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !276)
!276 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !272, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !269, file: !225, line: 100, baseType: !279, size: 16)
!279 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !280)
!280 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !228, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !228, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !228, file: !225, line: 131, baseType: !284, size: 192, offset: 192)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !285)
!285 = !{!286, !287, !293}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !284, file: !261, line: 245, baseType: !234, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !284, file: !261, line: 246, baseType: !288, size: 32, offset: 64)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !289)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 32)
!290 = !DISubroutineType(types: !291)
!291 = !{null, !292}
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 32)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !284, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !224, file: !225, line: 250, baseType: !295, size: 288, offset: 384)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !297)
!296 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!297 = !{!298, !299, !300, !301, !302, !303, !304, !305, !306}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !295, file: !296, line: 26, baseType: !156, size: 32)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !295, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !295, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !295, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !295, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !295, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !295, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !295, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !295, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !224, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !224, file: !225, line: 256, baseType: !260, size: 64, offset: 704)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !224, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !224, file: !225, line: 300, baseType: !311, size: 96, offset: 800)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !312)
!312 = !{!313, !314, !317}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !311, file: !225, line: 153, baseType: !22, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !311, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !316, line: 214, baseType: !32)
!316 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!317 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !311, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !224, file: !225, line: 325, baseType: !319, size: 32, offset: 896)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !321)
!321 = !{!322, !331, !332}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !320, file: !220, line: 5074, baseType: !323, size: 96)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !325)
!324 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!325 = !{!326, !329, !330}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !323, file: !324, line: 57, baseType: !327, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 32)
!328 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !324, line: 57, flags: DIFlagFwdDecl)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !323, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !323, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !320, file: !220, line: 5075, baseType: !260, size: 64, offset: 96)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !320, file: !220, line: 5076, baseType: !333, size: 32, offset: 160)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !335)
!334 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = !{!336}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !333, file: !334, line: 52, baseType: !22, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !224, file: !225, line: 343, baseType: !338, size: 64, offset: 928)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !339)
!339 = !{!340, !341}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !338, file: !296, line: 63, baseType: !156, size: 32)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !338, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !219, file: !220, line: 622, baseType: !343, size: 32, offset: 32)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !345, line: 44, baseType: !346)
!345 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !347, line: 47, size: 8, elements: !348)
!347 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!348 = !{!349}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !346, file: !347, line: 48, baseType: !135, size: 8)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !219, file: !220, line: 623, baseType: !32, size: 32, offset: 64)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !219, file: !220, line: 624, baseType: !352, size: 32, offset: 96)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !345, line: 46, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!354 = !DISubroutineType(types: !355)
!355 = !{null, !117, !117, !117}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !219, file: !220, line: 625, baseType: !117, size: 32, offset: 128)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !219, file: !220, line: 626, baseType: !117, size: 32, offset: 160)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !219, file: !220, line: 627, baseType: !117, size: 32, offset: 192)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !219, file: !220, line: 628, baseType: !118, size: 32, offset: 224)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !219, file: !220, line: 629, baseType: !156, size: 32, offset: 256)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !219, file: !220, line: 630, baseType: !362, size: 32, offset: 288)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !118)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !219, file: !220, line: 631, baseType: !364, size: 32, offset: 320)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!365 = !DISubroutineType(types: !366)
!366 = !{null}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !219, file: !220, line: 632, baseType: !133, size: 32, offset: 352)
!368 = !DIGlobalVariableExpression(var: !369, expr: !DIExpression())
!369 = distinct !DIGlobalVariable(name: "blink0_id", scope: !27, file: !218, line: 111, type: !370, isLocal: false, isDefinition: true)
!370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !371)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !223)
!372 = !DIGlobalVariableExpression(var: !373, expr: !DIExpression())
!373 = distinct !DIGlobalVariable(name: "_k_thread_data_blink1_id", scope: !27, file: !218, line: 113, type: !219, isLocal: false, isDefinition: true, align: 32)
!374 = !DIGlobalVariableExpression(var: !375, expr: !DIExpression())
!375 = distinct !DIGlobalVariable(name: "blink1_id", scope: !27, file: !218, line: 113, type: !370, isLocal: false, isDefinition: true)
!376 = !DIGlobalVariableExpression(var: !377, expr: !DIExpression())
!377 = distinct !DIGlobalVariable(name: "_k_thread_data_uart_out_id", scope: !27, file: !218, line: 115, type: !219, isLocal: false, isDefinition: true, align: 32)
!378 = !DIGlobalVariableExpression(var: !379, expr: !DIExpression())
!379 = distinct !DIGlobalVariable(name: "uart_out_id", scope: !27, file: !218, line: 115, type: !370, isLocal: false, isDefinition: true)
!380 = !DIGlobalVariableExpression(var: !381, expr: !DIExpression())
!381 = distinct !DIGlobalVariable(name: "_k_thread_stack_blink0_id", scope: !27, file: !218, line: 111, type: !382, isLocal: false, isDefinition: true, align: 512)
!382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 8704, elements: !383)
!383 = !{!384}
!384 = !DISubrange(count: 1088)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "_k_thread_obj_blink0_id", scope: !27, file: !218, line: 111, type: !224, isLocal: false, isDefinition: true)
!387 = !DIGlobalVariableExpression(var: !388, expr: !DIExpression())
!388 = distinct !DIGlobalVariable(name: "_k_thread_stack_blink1_id", scope: !27, file: !218, line: 113, type: !382, isLocal: false, isDefinition: true, align: 512)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "_k_thread_obj_blink1_id", scope: !27, file: !218, line: 113, type: !224, isLocal: false, isDefinition: true)
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "_k_thread_stack_uart_out_id", scope: !27, file: !218, line: 115, type: !382, isLocal: false, isDefinition: true, align: 512)
!393 = !DIGlobalVariableExpression(var: !394, expr: !DIExpression())
!394 = distinct !DIGlobalVariable(name: "_k_thread_obj_uart_out_id", scope: !27, file: !218, line: 115, type: !224, isLocal: false, isDefinition: true)
!395 = !DIGlobalVariableExpression(var: !396, expr: !DIExpression())
!396 = distinct !DIGlobalVariable(name: "led0", scope: !27, file: !218, line: 44, type: !397, isLocal: true, isDefinition: true)
!397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !398)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "led", file: !218, line: 39, size: 96, elements: !399)
!399 = !{!400, !407}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !398, file: !218, line: 40, baseType: !401, size: 64)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !102, line: 271, size: 64, elements: !402)
!402 = !{!403, !404, !405}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !401, file: !102, line: 273, baseType: !127, size: 32)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !401, file: !102, line: 275, baseType: !154, size: 8, offset: 32)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !401, file: !102, line: 277, baseType: !406, size: 16, offset: 48)
!406 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !102, line: 249, baseType: !279)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !398, file: !218, line: 41, baseType: !143, size: 8, offset: 64)
!408 = !DIGlobalVariableExpression(var: !409, expr: !DIExpression())
!409 = distinct !DIGlobalVariable(name: "led1", scope: !27, file: !218, line: 49, type: !397, isLocal: true, isDefinition: true)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !220, line: 2208, size: 160, elements: !411)
!411 = !{!412}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !410, file: !220, line: 2209, baseType: !413, size: 160)
!413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !220, line: 1709, size: 160, elements: !414)
!414 = !{!415, !428, !429}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !413, file: !220, line: 1710, baseType: !416, size: 64)
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !417, line: 46, baseType: !418)
!417 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !417, line: 41, size: 64, elements: !419)
!419 = !{!420, !427}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !418, file: !417, line: 42, baseType: !421, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !417, line: 39, baseType: !423)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !417, line: 35, size: 32, elements: !424)
!424 = !{!425}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !423, file: !417, line: 36, baseType: !426, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !417, line: 32, baseType: !156)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !418, file: !417, line: 43, baseType: !421, size: 32, offset: 32)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !413, file: !220, line: 1711, baseType: !333, size: 32, offset: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !413, file: !220, line: 1712, baseType: !260, size: 64, offset: 96)
!430 = !DIGlobalVariableExpression(var: !431, expr: !DIExpression())
!431 = distinct !DIGlobalVariable(name: "_char_out", scope: !432, file: !437, line: 54, type: !438, isLocal: false, isDefinition: true)
!432 = distinct !DICompileUnit(language: DW_LANG_C99, file: !433, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, globals: !436, splitDebugInlining: false, nameTableKind: None)
!433 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!434 = !{!30}
!435 = !{!117, !118}
!436 = !{!430}
!437 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 32)
!439 = !DISubroutineType(types: !440)
!440 = !{!118, !118}
!441 = !DIGlobalVariableExpression(var: !442, expr: !DIExpression())
!442 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !443, file: !460, line: 56, type: !461, isLocal: true, isDefinition: true, align: 32)
!443 = distinct !DICompileUnit(language: DW_LANG_C99, file: !444, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !445, globals: !459, splitDebugInlining: false, nameTableKind: None)
!444 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!445 = !{!446}
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 32)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !448, line: 259, baseType: !449)
!448 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f411xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 250, size: 224, elements: !450)
!450 = !{!451, !453, !454, !455, !456, !457, !458}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !449, file: !448, line: 252, baseType: !452, size: 32)
!452 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !156)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !449, file: !448, line: 253, baseType: !452, size: 32, offset: 32)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !449, file: !448, line: 254, baseType: !452, size: 32, offset: 64)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !449, file: !448, line: 255, baseType: !452, size: 32, offset: 96)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !449, file: !448, line: 256, baseType: !452, size: 32, offset: 128)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !449, file: !448, line: 257, baseType: !452, size: 32, offset: 160)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !449, file: !448, line: 258, baseType: !452, size: 32, offset: 192)
!459 = !{!441}
!460 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !462)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !464)
!463 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!464 = !{!465, !484}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !462, file: !463, line: 60, baseType: !466, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = !DISubroutineType(types: !468)
!468 = !{!118, !469}
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !472)
!472 = !{!473, !474, !475, !476, !482, !483}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !471, file: !130, line: 380, baseType: !133, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !471, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !471, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !471, file: !130, line: 386, baseType: !477, size: 32, offset: 96)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 32)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !479)
!479 = !{!480, !481}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !478, file: !130, line: 359, baseType: !143, size: 8)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !478, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !471, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !471, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !462, file: !463, line: 65, baseType: !469, size: 32, offset: 32)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !487, file: !490, line: 71, type: !491, isLocal: true, isDefinition: true, align: 32)
!487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !489, splitDebugInlining: false, nameTableKind: None)
!488 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!489 = !{!485}
!490 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !492)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !493)
!493 = !{!494, !513}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !492, file: !463, line: 60, baseType: !495, size: 32)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 32)
!496 = !DISubroutineType(types: !497)
!497 = !{!118, !498}
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !500)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !501)
!501 = !{!502, !503, !504, !505, !511, !512}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !500, file: !130, line: 380, baseType: !133, size: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !500, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !500, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !500, file: !130, line: 386, baseType: !506, size: 32, offset: 96)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 32)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !508)
!508 = !{!509, !510}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !507, file: !130, line: 359, baseType: !143, size: 8)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !507, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !500, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !500, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !492, file: !463, line: 65, baseType: !498, size: 32, offset: 32)
!514 = !DIGlobalVariableExpression(var: !515, expr: !DIExpression())
!515 = distinct !DIGlobalVariable(name: "static_regions", scope: !516, file: !523, line: 62, type: !647, isLocal: true, isDefinition: true)
!516 = distinct !DICompileUnit(language: DW_LANG_C99, file: !517, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !518, globals: !519, splitDebugInlining: false, nameTableKind: None)
!517 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!518 = !{!315, !118, !156, !117}
!519 = !{!520, !514}
!520 = !DIGlobalVariableExpression(var: !521, expr: !DIExpression())
!521 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !522, file: !523, line: 198, type: !633, isLocal: true, isDefinition: true)
!522 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !523, file: !523, line: 175, type: !524, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !516, retainedNodes: !628)
!523 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!524 = !DISubroutineType(types: !525)
!525 = !{null, !526}
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 32)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !528)
!528 = !{!529, !587, !599, !600, !601, !602, !608, !623}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !527, file: !225, line: 247, baseType: !530, size: 384)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !531)
!531 = !{!532, !556, !563, !564, !565, !574, !575, !576}
!532 = !DIDerivedType(tag: DW_TAG_member, scope: !530, file: !225, line: 60, baseType: !533, size: 64)
!533 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !530, file: !225, line: 60, size: 64, elements: !534)
!534 = !{!535, !550}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !533, file: !225, line: 61, baseType: !536, size: 64)
!536 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !537)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !538)
!538 = !{!539, !545}
!539 = !DIDerivedType(tag: DW_TAG_member, scope: !537, file: !235, line: 38, baseType: !540, size: 32)
!540 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !537, file: !235, line: 38, size: 32, elements: !541)
!541 = !{!542, !544}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !540, file: !235, line: 39, baseType: !543, size: 32)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 32)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !540, file: !235, line: 40, baseType: !543, size: 32)
!545 = !DIDerivedType(tag: DW_TAG_member, scope: !537, file: !235, line: 42, baseType: !546, size: 32, offset: 32)
!546 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !537, file: !235, line: 42, size: 32, elements: !547)
!547 = !{!548, !549}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !546, file: !235, line: 43, baseType: !543, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !546, file: !235, line: 44, baseType: !543, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !533, file: !225, line: 62, baseType: !551, size: 64)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !552)
!552 = !{!553}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !551, file: !251, line: 50, baseType: !554, size: 64)
!554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !555, size: 64, elements: !256)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 32)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !530, file: !225, line: 68, baseType: !557, size: 32, offset: 64)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 32)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !560)
!560 = !{!561}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !559, file: !261, line: 232, baseType: !562, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !537)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !530, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !530, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!565 = !DIDerivedType(tag: DW_TAG_member, scope: !530, file: !225, line: 90, baseType: !566, size: 16, offset: 112)
!566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !530, file: !225, line: 90, size: 16, elements: !567)
!567 = !{!568, !573}
!568 = !DIDerivedType(tag: DW_TAG_member, scope: !566, file: !225, line: 91, baseType: !569, size: 16)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !566, file: !225, line: 91, size: 16, elements: !570)
!570 = !{!571, !572}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !569, file: !225, line: 96, baseType: !275, size: 8)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !569, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !566, file: !225, line: 100, baseType: !279, size: 16)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !530, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !530, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !530, file: !225, line: 131, baseType: !577, size: 192, offset: 192)
!577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !578)
!578 = !{!579, !580, !586}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !577, file: !261, line: 245, baseType: !536, size: 64)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !577, file: !261, line: 246, baseType: !581, size: 32, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !582)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 32)
!583 = !DISubroutineType(types: !584)
!584 = !{null, !585}
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !577, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !527, file: !225, line: 250, baseType: !588, size: 288, offset: 384)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !589)
!589 = !{!590, !591, !592, !593, !594, !595, !596, !597, !598}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !588, file: !296, line: 26, baseType: !156, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !588, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !588, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !588, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !588, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !588, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !588, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !588, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !588, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !527, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !527, file: !225, line: 256, baseType: !558, size: 64, offset: 704)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !527, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !527, file: !225, line: 300, baseType: !603, size: 96, offset: 800)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !604)
!604 = !{!605, !606, !607}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !603, file: !225, line: 153, baseType: !22, size: 32)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !603, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !603, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !527, file: !225, line: 325, baseType: !609, size: 32, offset: 896)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !611)
!611 = !{!612, !618, !619}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !610, file: !220, line: 5074, baseType: !613, size: 96)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !614)
!614 = !{!615, !616, !617}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !613, file: !324, line: 57, baseType: !327, size: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !613, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !613, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !610, file: !220, line: 5075, baseType: !558, size: 64, offset: 96)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !610, file: !220, line: 5076, baseType: !620, size: 32, offset: 160)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !621)
!621 = !{!622}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !620, file: !334, line: 52, baseType: !22, size: 32)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !527, file: !225, line: 343, baseType: !624, size: 64, offset: 928)
!624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !625)
!625 = !{!626, !627}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !624, file: !296, line: 63, baseType: !156, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !624, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!628 = !{!629, !630, !631, !632}
!629 = !DILocalVariable(name: "thread", arg: 1, scope: !522, file: !523, line: 175, type: !526)
!630 = !DILocalVariable(name: "region_num", scope: !522, file: !523, line: 200, type: !143)
!631 = !DILocalVariable(name: "guard_start", scope: !522, file: !523, line: 265, type: !22)
!632 = !DILocalVariable(name: "guard_size", scope: !522, file: !523, line: 266, type: !315)
!633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !634, size: 96, elements: !645)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !635, line: 52, size: 96, elements: !636)
!635 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!636 = !{!637, !638, !639}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !634, file: !635, line: 53, baseType: !22, size: 32)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !634, file: !635, line: 54, baseType: !315, size: 32, offset: 32)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !634, file: !635, line: 55, baseType: !640, size: 32, offset: 64)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !641, line: 151, baseType: !642)
!641 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!642 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !641, line: 149, size: 32, elements: !643)
!643 = !{!644}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !642, file: !641, line: 150, baseType: !156, size: 32)
!645 = !{!646}
!646 = !DISubrange(count: 1)
!647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, size: 96, elements: !645)
!648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !634)
!649 = !DIGlobalVariableExpression(var: !650, expr: !DIExpression())
!650 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !651, file: !684, line: 39, type: !143, isLocal: true, isDefinition: true)
!651 = distinct !DICompileUnit(language: DW_LANG_C99, file: !652, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !653, globals: !683, splitDebugInlining: false, nameTableKind: None)
!652 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!653 = !{!654, !117, !118, !671, !143}
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 32)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !656, line: 1226, baseType: !657)
!656 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 1213, size: 352, elements: !658)
!658 = !{!659, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !657, file: !656, line: 1215, baseType: !660, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !657, file: !656, line: 1216, baseType: !452, size: 32, offset: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !657, file: !656, line: 1217, baseType: !452, size: 32, offset: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !657, file: !656, line: 1218, baseType: !452, size: 32, offset: 96)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !657, file: !656, line: 1219, baseType: !452, size: 32, offset: 128)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !657, file: !656, line: 1220, baseType: !452, size: 32, offset: 160)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !657, file: !656, line: 1221, baseType: !452, size: 32, offset: 192)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !657, file: !656, line: 1222, baseType: !452, size: 32, offset: 224)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !657, file: !656, line: 1223, baseType: !452, size: 32, offset: 256)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !657, file: !656, line: 1224, baseType: !452, size: 32, offset: 288)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !657, file: !656, line: 1225, baseType: !452, size: 32, offset: 320)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 32)
!672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !674, line: 27, size: 96, elements: !675)
!674 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!675 = !{!676, !677, !678}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !673, file: !674, line: 29, baseType: !156, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !673, file: !674, line: 31, baseType: !133, size: 32, offset: 32)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !673, file: !674, line: 37, baseType: !679, size: 32, offset: 64)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !641, line: 146, baseType: !680)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !641, line: 141, size: 32, elements: !681)
!681 = !{!682}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !680, file: !641, line: 143, baseType: !156, size: 32)
!683 = !{!649}
!684 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!685 = !DIGlobalVariableExpression(var: !686, expr: !DIExpression())
!686 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !687, file: !694, line: 21, type: !438, isLocal: true, isDefinition: true)
!687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !688, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !689, globals: !693, splitDebugInlining: false, nameTableKind: None)
!688 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!689 = !{!690, !118, !117}
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 32)
!691 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !692, line: 22, baseType: !118)
!692 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!693 = !{!685}
!694 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!695 = !DIGlobalVariableExpression(var: !696, expr: !DIExpression())
!696 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !697, file: !702, line: 13, type: !719, isLocal: true, isDefinition: true)
!697 = distinct !DICompileUnit(language: DW_LANG_C99, file: !698, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !699, splitDebugInlining: false, nameTableKind: None)
!698 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!699 = !{!700, !695}
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "mpu_config", scope: !697, file: !702, line: 37, type: !703, isLocal: false, isDefinition: true)
!702 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !674, line: 41, size: 64, elements: !705)
!705 = !{!706, !707}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !704, file: !674, line: 43, baseType: !156, size: 32)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !704, file: !674, line: 45, baseType: !708, size: 32, offset: 32)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !674, line: 27, size: 96, elements: !711)
!711 = !{!712, !713, !714}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !710, file: !674, line: 29, baseType: !156, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !710, file: !674, line: 31, baseType: !133, size: 32, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !710, file: !674, line: 37, baseType: !715, size: 32, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !641, line: 146, baseType: !716)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !641, line: 141, size: 32, elements: !717)
!717 = !{!718}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !716, file: !641, line: 143, baseType: !156, size: 32)
!719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !709, size: 192, elements: !256)
!720 = !DIGlobalVariableExpression(var: !721, expr: !DIExpression())
!721 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !722, file: !806, line: 72, type: !889, isLocal: true, isDefinition: true)
!722 = distinct !DICompileUnit(language: DW_LANG_C99, file: !723, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !724, retainedTypes: !792, globals: !803, splitDebugInlining: false, nameTableKind: None)
!723 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!724 = !{!30, !725}
!725 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !448, line: 65, baseType: !118, size: 32, elements: !726)
!726 = !{!727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791}
!727 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!728 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!729 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!730 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!731 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!732 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!733 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!734 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!735 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!736 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!737 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!738 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!739 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!740 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!741 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!742 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!743 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!744 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!745 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!746 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!747 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!748 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!749 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!750 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!751 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!752 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!753 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!754 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!755 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!756 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!757 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!758 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!759 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!760 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!761 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!762 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!763 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!764 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!765 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!766 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!767 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!768 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!769 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!770 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!771 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!772 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!773 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!774 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!775 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!776 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!777 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!778 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!779 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!780 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!781 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!782 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!783 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!784 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!785 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!786 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!787 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!788 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!789 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!790 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!791 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!792 = !{!315, !118, !117, !793}
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 32)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !448, line: 244, baseType: !795)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 236, size: 192, elements: !796)
!796 = !{!797, !798, !799, !800, !801, !802}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !795, file: !448, line: 238, baseType: !452, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !795, file: !448, line: 239, baseType: !452, size: 32, offset: 32)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !795, file: !448, line: 240, baseType: !452, size: 32, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !795, file: !448, line: 241, baseType: !452, size: 32, offset: 96)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !795, file: !448, line: 242, baseType: !452, size: 32, offset: 128)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !795, file: !448, line: 243, baseType: !452, size: 32, offset: 160)
!803 = !{!804, !810, !826, !837, !854, !720, !856, !869, !871, !873, !875, !877, !879, !881, !883, !885, !887}
!804 = !DIGlobalVariableExpression(var: !805, expr: !DIExpression())
!805 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !722, file: !806, line: 424, type: !807, isLocal: false, isDefinition: true, align: 16)
!806 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 64, elements: !808)
!808 = !{!809}
!809 = !DISubrange(count: 4)
!810 = !DIGlobalVariableExpression(var: !811, expr: !DIExpression())
!811 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !722, file: !806, line: 424, type: !812, isLocal: false, isDefinition: true, align: 32)
!812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !813)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !814)
!814 = !{!815, !816, !817, !818, !824, !825}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !813, file: !130, line: 380, baseType: !133, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !813, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !813, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !813, file: !130, line: 386, baseType: !819, size: 32, offset: 96)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 32)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !821)
!821 = !{!822, !823}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !820, file: !130, line: 359, baseType: !143, size: 8)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !820, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !813, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !813, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!826 = !DIGlobalVariableExpression(var: !827, expr: !DIExpression())
!827 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !722, file: !806, line: 424, type: !828, isLocal: true, isDefinition: true, align: 32)
!828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !829)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !830)
!830 = !{!831, !836}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !829, file: !463, line: 60, baseType: !832, size: 32)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 32)
!833 = !DISubroutineType(types: !834)
!834 = !{!118, !835}
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 32)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !829, file: !463, line: 65, baseType: !835, size: 32, offset: 32)
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "exti_data", scope: !722, file: !806, line: 423, type: !839, isLocal: true, isDefinition: true)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !806, line: 107, size: 1472, elements: !840)
!840 = !{!841}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !839, file: !806, line: 109, baseType: !842, size: 1472)
!842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !843, size: 1472, elements: !852)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !806, line: 101, size: 64, elements: !844)
!844 = !{!845, !851}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !843, file: !806, line: 102, baseType: !846, size: 32)
!846 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !847, line: 63, baseType: !848)
!847 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 32)
!849 = !DISubroutineType(types: !850)
!850 = !{null, !118, !117}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !843, file: !806, line: 103, baseType: !117, size: 32, offset: 32)
!852 = !{!853}
!853 = !DISubrange(count: 23)
!854 = !DIGlobalVariableExpression(var: !855, expr: !DIExpression())
!855 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !722, file: !806, line: 424, type: !820, isLocal: true, isDefinition: true, align: 8)
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !858, file: !806, line: 493, type: !863, isLocal: true, isDefinition: true, align: 32)
!858 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !806, file: !806, line: 460, type: !859, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !861)
!859 = !DISubroutineType(types: !860)
!860 = !{null, !835}
!861 = !{!862}
!862 = !DILocalVariable(name: "dev", arg: 1, scope: !858, file: !806, line: 460, type: !835)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !864)
!864 = !{!865, !866, !867, !868}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !863, file: !10, line: 55, baseType: !362, size: 32)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !863, file: !10, line: 57, baseType: !362, size: 32, offset: 32)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !863, file: !10, line: 59, baseType: !117, size: 32, offset: 64)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !863, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!869 = !DIGlobalVariableExpression(var: !870, expr: !DIExpression())
!870 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !858, file: !806, line: 497, type: !863, isLocal: true, isDefinition: true, align: 32)
!871 = !DIGlobalVariableExpression(var: !872, expr: !DIExpression())
!872 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !858, file: !806, line: 507, type: !863, isLocal: true, isDefinition: true, align: 32)
!873 = !DIGlobalVariableExpression(var: !874, expr: !DIExpression())
!874 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !858, file: !806, line: 512, type: !863, isLocal: true, isDefinition: true, align: 32)
!875 = !DIGlobalVariableExpression(var: !876, expr: !DIExpression())
!876 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !858, file: !806, line: 516, type: !863, isLocal: true, isDefinition: true, align: 32)
!877 = !DIGlobalVariableExpression(var: !878, expr: !DIExpression())
!878 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !858, file: !806, line: 523, type: !863, isLocal: true, isDefinition: true, align: 32)
!879 = !DIGlobalVariableExpression(var: !880, expr: !DIExpression())
!880 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !858, file: !806, line: 527, type: !863, isLocal: true, isDefinition: true, align: 32)
!881 = !DIGlobalVariableExpression(var: !882, expr: !DIExpression())
!882 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !858, file: !806, line: 581, type: !863, isLocal: true, isDefinition: true, align: 32)
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !858, file: !806, line: 586, type: !863, isLocal: true, isDefinition: true, align: 32)
!885 = !DIGlobalVariableExpression(var: !886, expr: !DIExpression())
!886 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !858, file: !806, line: 591, type: !863, isLocal: true, isDefinition: true, align: 32)
!887 = !DIGlobalVariableExpression(var: !888, expr: !DIExpression())
!888 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !858, file: !806, line: 595, type: !863, isLocal: true, isDefinition: true, align: 32)
!889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !890, size: 736, elements: !852)
!890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !891)
!891 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !448, line: 134, baseType: !725)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !894, file: !899, line: 22, type: !921, isLocal: false, isDefinition: true, align: 16)
!894 = distinct !DICompileUnit(language: DW_LANG_C99, file: !895, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !896, splitDebugInlining: false, nameTableKind: None)
!895 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!896 = !{!897, !892, !903, !905, !907, !909, !911, !913, !915, !917, !919}
!897 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression())
!898 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !894, file: !899, line: 17, type: !900, isLocal: false, isDefinition: true, align: 16)
!899 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 192, elements: !901)
!901 = !{!902}
!902 = !DISubrange(count: 12)
!903 = !DIGlobalVariableExpression(var: !904, expr: !DIExpression())
!904 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !894, file: !899, line: 29, type: !807, isLocal: false, isDefinition: true, align: 16)
!905 = !DIGlobalVariableExpression(var: !906, expr: !DIExpression())
!906 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !894, file: !899, line: 36, type: !807, isLocal: false, isDefinition: true, align: 16)
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !894, file: !899, line: 43, type: !807, isLocal: false, isDefinition: true, align: 16)
!909 = !DIGlobalVariableExpression(var: !910, expr: !DIExpression())
!910 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !894, file: !899, line: 50, type: !807, isLocal: false, isDefinition: true, align: 16)
!911 = !DIGlobalVariableExpression(var: !912, expr: !DIExpression())
!912 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !894, file: !899, line: 57, type: !807, isLocal: false, isDefinition: true, align: 16)
!913 = !DIGlobalVariableExpression(var: !914, expr: !DIExpression())
!914 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !894, file: !899, line: 64, type: !807, isLocal: false, isDefinition: true, align: 16)
!915 = !DIGlobalVariableExpression(var: !916, expr: !DIExpression())
!916 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !894, file: !899, line: 71, type: !807, isLocal: false, isDefinition: true, align: 16)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !894, file: !899, line: 78, type: !807, isLocal: false, isDefinition: true, align: 16)
!919 = !DIGlobalVariableExpression(var: !920, expr: !DIExpression())
!920 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !894, file: !899, line: 85, type: !807, isLocal: false, isDefinition: true, align: 16)
!921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 48, elements: !922)
!922 = !{!923}
!923 = !DISubrange(count: 3)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !926, file: !990, line: 398, type: !1023, isLocal: true, isDefinition: true)
!926 = distinct !DICompileUnit(language: DW_LANG_C99, file: !927, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !928, retainedTypes: !941, globals: !987, splitDebugInlining: false, nameTableKind: None)
!927 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!928 = !{!929, !30, !934}
!929 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !930, line: 197, baseType: !32, size: 32, elements: !931)
!930 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!931 = !{!932, !933}
!932 = !DIEnumerator(name: "SUCCESS", value: 0)
!933 = !DIEnumerator(name: "ERROR", value: 1)
!934 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !935, line: 44, baseType: !32, size: 32, elements: !936)
!935 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!936 = !{!937, !938, !939, !940}
!937 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!938 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!939 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!940 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!941 = !{!117, !118, !156, !942, !980, !986}
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 32)
!943 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !448, line: 370, baseType: !944)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 336, size: 1152, elements: !945)
!945 = !{!946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !979}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !944, file: !448, line: 338, baseType: !452, size: 32)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !944, file: !448, line: 339, baseType: !452, size: 32, offset: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !944, file: !448, line: 340, baseType: !452, size: 32, offset: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !944, file: !448, line: 341, baseType: !452, size: 32, offset: 96)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !944, file: !448, line: 342, baseType: !452, size: 32, offset: 128)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !944, file: !448, line: 343, baseType: !452, size: 32, offset: 160)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !944, file: !448, line: 344, baseType: !452, size: 32, offset: 192)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !944, file: !448, line: 345, baseType: !156, size: 32, offset: 224)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !944, file: !448, line: 346, baseType: !452, size: 32, offset: 256)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !944, file: !448, line: 347, baseType: !452, size: 32, offset: 288)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !944, file: !448, line: 348, baseType: !957, size: 64, offset: 320)
!957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 64, elements: !256)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !944, file: !448, line: 349, baseType: !452, size: 32, offset: 384)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !944, file: !448, line: 350, baseType: !452, size: 32, offset: 416)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !944, file: !448, line: 351, baseType: !452, size: 32, offset: 448)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !944, file: !448, line: 352, baseType: !156, size: 32, offset: 480)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !944, file: !448, line: 353, baseType: !452, size: 32, offset: 512)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !944, file: !448, line: 354, baseType: !452, size: 32, offset: 544)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !944, file: !448, line: 355, baseType: !957, size: 64, offset: 576)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !944, file: !448, line: 356, baseType: !452, size: 32, offset: 640)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !944, file: !448, line: 357, baseType: !452, size: 32, offset: 672)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !944, file: !448, line: 358, baseType: !452, size: 32, offset: 704)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !944, file: !448, line: 359, baseType: !156, size: 32, offset: 736)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !944, file: !448, line: 360, baseType: !452, size: 32, offset: 768)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !944, file: !448, line: 361, baseType: !452, size: 32, offset: 800)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !944, file: !448, line: 362, baseType: !957, size: 64, offset: 832)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !944, file: !448, line: 363, baseType: !452, size: 32, offset: 896)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !944, file: !448, line: 364, baseType: !452, size: 32, offset: 928)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !944, file: !448, line: 365, baseType: !957, size: 64, offset: 960)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !944, file: !448, line: 366, baseType: !452, size: 32, offset: 1024)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !944, file: !448, line: 367, baseType: !452, size: 32, offset: 1056)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !944, file: !448, line: 368, baseType: !978, size: 32, offset: 1088)
!978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 32, elements: !645)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !944, file: !448, line: 369, baseType: !452, size: 32, offset: 1120)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !982, line: 343, size: 64, elements: !983)
!982 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!983 = !{!984, !985}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !981, file: !982, line: 344, baseType: !156, size: 32)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !981, file: !982, line: 345, baseType: !156, size: 32, offset: 32)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 32)
!987 = !{!988, !994, !1010, !1021, !924}
!988 = !DIGlobalVariableExpression(var: !989, expr: !DIExpression())
!989 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !926, file: !990, line: 752, type: !991, isLocal: false, isDefinition: true, align: 16)
!990 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 704, elements: !992)
!992 = !{!993}
!993 = !DISubrange(count: 44)
!994 = !DIGlobalVariableExpression(var: !995, expr: !DIExpression())
!995 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !926, file: !990, line: 752, type: !996, isLocal: false, isDefinition: true, align: 32)
!996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !997)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !998)
!998 = !{!999, !1000, !1001, !1002, !1008, !1009}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !997, file: !130, line: 380, baseType: !133, size: 32)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !997, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !997, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !997, file: !130, line: 386, baseType: !1003, size: 32, offset: 96)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1005)
!1005 = !{!1006, !1007}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1004, file: !130, line: 359, baseType: !143, size: 8)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1004, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !997, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !997, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1010 = !DIGlobalVariableExpression(var: !1011, expr: !DIExpression())
!1011 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !926, file: !990, line: 752, type: !1012, isLocal: true, isDefinition: true, align: 32)
!1012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1013)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !1014)
!1014 = !{!1015, !1020}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1013, file: !463, line: 60, baseType: !1016, size: 32)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 32)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!118, !1019}
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1013, file: !463, line: 65, baseType: !1019, size: 32, offset: 32)
!1021 = !DIGlobalVariableExpression(var: !1022, expr: !DIExpression())
!1022 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !926, file: !990, line: 752, type: !1004, isLocal: true, isDefinition: true, align: 8)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !935, line: 100, size: 224, elements: !1024)
!1024 = !{!1025, !1031, !1032, !1041, !1046, !1051, !1057}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1023, file: !935, line: 101, baseType: !1026, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !935, line: 76, baseType: !1027)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 32)
!1028 = !DISubroutineType(types: !1029)
!1029 = !{!118, !1019, !1030}
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !935, line: 56, baseType: !117)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1023, file: !935, line: 102, baseType: !1026, size: 32, offset: 32)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1023, file: !935, line: 103, baseType: !1033, size: 32, offset: 64)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !935, line: 83, baseType: !1034)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 32)
!1035 = !DISubroutineType(types: !1036)
!1036 = !{!118, !1019, !1030, !1037, !117}
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !935, line: 72, baseType: !1038)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 32)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{null, !1019, !1030, !117}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1023, file: !935, line: 104, baseType: !1042, size: 32, offset: 96)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !935, line: 79, baseType: !1043)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 32)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!118, !1019, !1030, !986}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1023, file: !935, line: 105, baseType: !1047, size: 32, offset: 128)
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !935, line: 88, baseType: !1048)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!934, !1019, !1030}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1023, file: !935, line: 106, baseType: !1052, size: 32, offset: 160)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !935, line: 92, baseType: !1053)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 32)
!1054 = !DISubroutineType(types: !1055)
!1055 = !{!118, !1019, !1030, !1056}
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !935, line: 64, baseType: !117)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1023, file: !935, line: 107, baseType: !1058, size: 32, offset: 192)
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !935, line: 96, baseType: !1059)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 32)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!118, !1019, !1030, !117}
!1062 = !DIGlobalVariableExpression(var: !1063, expr: !DIExpression())
!1063 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1064, file: !1121, line: 603, type: !1123, isLocal: true, isDefinition: true, align: 32)
!1064 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1065, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !1066, globals: !1118, splitDebugInlining: false, nameTableKind: None)
!1065 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!1066 = !{!117, !118, !1067}
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 32)
!1068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1069)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1070, line: 336, size: 160, elements: !1071)
!1070 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1071 = !{!1072, !1092, !1096, !1100, !1113}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1069, file: !1070, line: 365, baseType: !1073, size: 32)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!118, !1076, !1091}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 32)
!1077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1078)
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1079)
!1079 = !{!1080, !1081, !1082, !1083, !1089, !1090}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1078, file: !130, line: 380, baseType: !133, size: 32)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1078, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1078, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1078, file: !130, line: 386, baseType: !1084, size: 32, offset: 96)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1086)
!1086 = !{!1087, !1088}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1085, file: !130, line: 359, baseType: !143, size: 8)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1085, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1078, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1078, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1069, file: !1070, line: 366, baseType: !1093, size: 32, offset: 32)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 32)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{null, !1076, !144}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1069, file: !1070, line: 374, baseType: !1097, size: 32, offset: 64)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1098 = !DISubroutineType(types: !1099)
!1099 = !{!118, !1076}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1069, file: !1070, line: 377, baseType: !1101, size: 32, offset: 96)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 32)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!118, !1076, !1104}
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1106)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1070, line: 122, size: 64, elements: !1107)
!1107 = !{!1108, !1109, !1110, !1111, !1112}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1106, file: !1070, line: 123, baseType: !156, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1106, file: !1070, line: 124, baseType: !143, size: 8, offset: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1106, file: !1070, line: 125, baseType: !143, size: 8, offset: 40)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1106, file: !1070, line: 126, baseType: !143, size: 8, offset: 48)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1106, file: !1070, line: 127, baseType: !143, size: 8, offset: 56)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1069, file: !1070, line: 379, baseType: !1114, size: 32, offset: 128)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!118, !1076, !1117}
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 32)
!1118 = !{!1062, !1119}
!1119 = !DIGlobalVariableExpression(var: !1120, expr: !DIExpression())
!1120 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1064, file: !1121, line: 38, type: !1122, isLocal: true, isDefinition: true)
!1121 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1076)
!1123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1124)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !1125)
!1125 = !{!1126, !1127}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1124, file: !463, line: 60, baseType: !1097, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1124, file: !463, line: 65, baseType: !1076, size: 32, offset: 32)
!1128 = !DIGlobalVariableExpression(var: !1129, expr: !DIExpression())
!1129 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1130, file: !1283, line: 762, type: !1392, isLocal: true, isDefinition: true)
!1130 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1131, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1132, retainedTypes: !1139, globals: !1280, splitDebugInlining: false, nameTableKind: None)
!1131 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!1132 = !{!30, !101, !107, !1133, !934}
!1133 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !847, line: 43, baseType: !32, size: 32, elements: !1134)
!1134 = !{!1135, !1136, !1137, !1138}
!1135 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1136 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1137 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1138 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1139 = !{!117, !118, !1140, !1204, !1209, !167, !107, !101, !1214, !1215, !156, !1229, !1185, !1239, !1240, !1241}
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 32)
!1141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1142)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !102, line: 523, size: 288, elements: !1143)
!1143 = !{!1144, !1163, !1167, !1171, !1175, !1176, !1177, !1181, !1200}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1142, file: !102, line: 524, baseType: !1145, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 32)
!1146 = !DISubroutineType(types: !1147)
!1147 = !{!118, !1148, !154, !155}
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 32)
!1149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1150)
!1150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1151)
!1151 = !{!1152, !1153, !1154, !1155, !1161, !1162}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1150, file: !130, line: 380, baseType: !133, size: 32)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1150, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1150, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1150, file: !130, line: 386, baseType: !1156, size: 32, offset: 96)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 32)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1158)
!1158 = !{!1159, !1160}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1157, file: !130, line: 359, baseType: !143, size: 8)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1157, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1150, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1150, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1142, file: !102, line: 530, baseType: !1164, size: 32, offset: 32)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 32)
!1165 = !DISubroutineType(types: !1166)
!1166 = !{!118, !1148, !161}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1142, file: !102, line: 532, baseType: !1168, size: 32, offset: 64)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 32)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!118, !1148, !167, !162}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1142, file: !102, line: 535, baseType: !1172, size: 32, offset: 96)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 32)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{!118, !1148, !167}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1142, file: !102, line: 537, baseType: !1172, size: 32, offset: 128)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1142, file: !102, line: 539, baseType: !1172, size: 32, offset: 160)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1142, file: !102, line: 541, baseType: !1178, size: 32, offset: 192)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 32)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!118, !1148, !154, !101, !107}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1142, file: !102, line: 544, baseType: !1182, size: 32, offset: 224)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 32)
!1183 = !DISubroutineType(types: !1184)
!1184 = !{!118, !1148, !1185, !146}
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 32)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !102, line: 478, size: 96, elements: !1187)
!1187 = !{!1188, !1194, !1199}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1186, file: !102, line: 482, baseType: !1189, size: 32)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !187, line: 33, baseType: !1190)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !187, line: 29, size: 32, elements: !1191)
!1191 = !{!1192}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1190, file: !187, line: 30, baseType: !1193, size: 32)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1186, file: !102, line: 485, baseType: !1195, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !102, line: 464, baseType: !1196)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 32)
!1197 = !DISubroutineType(types: !1198)
!1198 = !{null, !1148, !1185, !167}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1186, file: !102, line: 493, baseType: !167, size: 32, offset: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1142, file: !102, line: 547, baseType: !1201, size: 32, offset: 256)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!156, !1148}
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1206)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !102, line: 428, size: 32, elements: !1207)
!1207 = !{!1208}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1206, file: !102, line: 434, baseType: !167, size: 32)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1211)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !102, line: 441, size: 32, elements: !1212)
!1212 = !{!1213}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1211, file: !102, line: 447, baseType: !167, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !448, line: 276, baseType: !1217)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 265, size: 320, elements: !1218)
!1218 = !{!1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1217, file: !448, line: 267, baseType: !452, size: 32)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1217, file: !448, line: 268, baseType: !452, size: 32, offset: 32)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1217, file: !448, line: 269, baseType: !452, size: 32, offset: 64)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1217, file: !448, line: 270, baseType: !452, size: 32, offset: 96)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1217, file: !448, line: 271, baseType: !452, size: 32, offset: 128)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1217, file: !448, line: 272, baseType: !452, size: 32, offset: 160)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1217, file: !448, line: 273, baseType: !452, size: 32, offset: 192)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1217, file: !448, line: 274, baseType: !452, size: 32, offset: 224)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1217, file: !448, line: 275, baseType: !1228, size: 64, offset: 256)
!1228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 64, elements: !256)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 32)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !448, line: 289, baseType: !1231)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 282, size: 288, elements: !1232)
!1232 = !{!1233, !1234, !1235, !1237, !1238}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1231, file: !448, line: 284, baseType: !452, size: 32)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1231, file: !448, line: 285, baseType: !452, size: 32, offset: 32)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1231, file: !448, line: 286, baseType: !1236, size: 128, offset: 64)
!1236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 128, elements: !808)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1231, file: !448, line: 287, baseType: !957, size: 64, offset: 192)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1231, file: !448, line: 288, baseType: !452, size: 32, offset: 256)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 32)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 32)
!1242 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1243)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !935, line: 100, size: 224, elements: !1244)
!1244 = !{!1245, !1250, !1251, !1260, !1265, !1270, !1275}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1243, file: !935, line: 101, baseType: !1246, size: 32)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !935, line: 76, baseType: !1247)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{!118, !1148, !1030}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1243, file: !935, line: 102, baseType: !1246, size: 32, offset: 32)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1243, file: !935, line: 103, baseType: !1252, size: 32, offset: 64)
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !935, line: 83, baseType: !1253)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 32)
!1254 = !DISubroutineType(types: !1255)
!1255 = !{!118, !1148, !1030, !1256, !117}
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !935, line: 72, baseType: !1257)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 32)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{null, !1148, !1030, !117}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1243, file: !935, line: 104, baseType: !1261, size: 32, offset: 96)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !935, line: 79, baseType: !1262)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!118, !1148, !1030, !986}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1243, file: !935, line: 105, baseType: !1266, size: 32, offset: 128)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !935, line: 88, baseType: !1267)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!934, !1148, !1030}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1243, file: !935, line: 106, baseType: !1271, size: 32, offset: 160)
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !935, line: 92, baseType: !1272)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 32)
!1273 = !DISubroutineType(types: !1274)
!1274 = !{!118, !1148, !1030, !1056}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1243, file: !935, line: 107, baseType: !1276, size: 32, offset: 192)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !935, line: 96, baseType: !1277)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 32)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{!118, !1148, !1030, !117}
!1280 = !{!1281, !1287, !1289, !1299, !1304, !1306, !1308, !1310, !1312, !1314, !1316, !1318, !1320, !1322, !1324, !1326, !1328, !1330, !1332, !1334, !1336, !1338, !1340, !1342, !1344, !1358, !1360, !1362, !1364, !1366, !1368, !1370, !1372, !1374, !1376, !1378, !1380, !1382, !1384, !1386, !1128, !1388, !1390, !1403, !1405, !1407, !1409, !1411, !1413}
!1281 = !DIGlobalVariableExpression(var: !1282, expr: !DIExpression())
!1282 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1130, file: !1283, line: 762, type: !1284, isLocal: false, isDefinition: true, align: 16)
!1283 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 80, elements: !1285)
!1285 = !{!1286}
!1286 = !DISubrange(count: 5)
!1287 = !DIGlobalVariableExpression(var: !1288, expr: !DIExpression())
!1288 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1130, file: !1283, line: 762, type: !1149, isLocal: false, isDefinition: true, align: 32)
!1289 = !DIGlobalVariableExpression(var: !1290, expr: !DIExpression())
!1290 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1130, file: !1283, line: 762, type: !1291, isLocal: true, isDefinition: true, align: 32)
!1291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1292)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !1293)
!1293 = !{!1294, !1298}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1292, file: !463, line: 60, baseType: !1295, size: 32)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 32)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{!118, !1148}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1292, file: !463, line: 65, baseType: !1148, size: 32, offset: 32)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1130, file: !1283, line: 766, type: !1301, isLocal: false, isDefinition: true, align: 16)
!1301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 160, elements: !1302)
!1302 = !{!1303}
!1303 = !DISubrange(count: 10)
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1130, file: !1283, line: 766, type: !1149, isLocal: false, isDefinition: true, align: 32)
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1130, file: !1283, line: 766, type: !1291, isLocal: true, isDefinition: true, align: 32)
!1308 = !DIGlobalVariableExpression(var: !1309, expr: !DIExpression())
!1309 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1130, file: !1283, line: 770, type: !1284, isLocal: false, isDefinition: true, align: 16)
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1130, file: !1283, line: 770, type: !1149, isLocal: false, isDefinition: true, align: 32)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1130, file: !1283, line: 770, type: !1291, isLocal: true, isDefinition: true, align: 32)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1130, file: !1283, line: 774, type: !1284, isLocal: false, isDefinition: true, align: 16)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1130, file: !1283, line: 774, type: !1149, isLocal: false, isDefinition: true, align: 32)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1130, file: !1283, line: 774, type: !1291, isLocal: true, isDefinition: true, align: 32)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1130, file: !1283, line: 778, type: !1284, isLocal: false, isDefinition: true, align: 16)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1130, file: !1283, line: 778, type: !1149, isLocal: false, isDefinition: true, align: 32)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1130, file: !1283, line: 778, type: !1291, isLocal: true, isDefinition: true, align: 32)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1130, file: !1283, line: 782, type: !1284, isLocal: false, isDefinition: true, align: 16)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1130, file: !1283, line: 782, type: !1149, isLocal: false, isDefinition: true, align: 32)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1130, file: !1283, line: 782, type: !1291, isLocal: true, isDefinition: true, align: 32)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1130, file: !1283, line: 786, type: !1284, isLocal: false, isDefinition: true, align: 16)
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1130, file: !1283, line: 786, type: !1149, isLocal: false, isDefinition: true, align: 32)
!1336 = !DIGlobalVariableExpression(var: !1337, expr: !DIExpression())
!1337 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1130, file: !1283, line: 786, type: !1291, isLocal: true, isDefinition: true, align: 32)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1130, file: !1283, line: 790, type: !1284, isLocal: false, isDefinition: true, align: 16)
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1130, file: !1283, line: 790, type: !1149, isLocal: false, isDefinition: true, align: 32)
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1130, file: !1283, line: 790, type: !1291, isLocal: true, isDefinition: true, align: 32)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1130, file: !1283, line: 762, type: !1346, isLocal: true, isDefinition: true)
!1346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1347, line: 237, size: 128, elements: !1348)
!1347 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1348 = !{!1349, !1350, !1351}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1346, file: !1347, line: 239, baseType: !1211, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1346, file: !1347, line: 241, baseType: !1148, size: 32, offset: 32)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1346, file: !1347, line: 243, baseType: !1352, size: 64, offset: 64)
!1352 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !187, line: 40, baseType: !1353)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !187, line: 35, size: 64, elements: !1354)
!1354 = !{!1355, !1357}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1353, file: !187, line: 36, baseType: !1356, size: 32)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1353, file: !187, line: 37, baseType: !1356, size: 32, offset: 32)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1130, file: !1283, line: 762, type: !1157, isLocal: true, isDefinition: true, align: 8)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1130, file: !1283, line: 766, type: !1346, isLocal: true, isDefinition: true)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1130, file: !1283, line: 766, type: !1157, isLocal: true, isDefinition: true, align: 8)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1130, file: !1283, line: 770, type: !1346, isLocal: true, isDefinition: true)
!1366 = !DIGlobalVariableExpression(var: !1367, expr: !DIExpression())
!1367 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1130, file: !1283, line: 770, type: !1157, isLocal: true, isDefinition: true, align: 8)
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1130, file: !1283, line: 774, type: !1346, isLocal: true, isDefinition: true)
!1370 = !DIGlobalVariableExpression(var: !1371, expr: !DIExpression())
!1371 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1130, file: !1283, line: 774, type: !1157, isLocal: true, isDefinition: true, align: 8)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1130, file: !1283, line: 778, type: !1346, isLocal: true, isDefinition: true)
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1130, file: !1283, line: 778, type: !1157, isLocal: true, isDefinition: true, align: 8)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1130, file: !1283, line: 782, type: !1346, isLocal: true, isDefinition: true)
!1378 = !DIGlobalVariableExpression(var: !1379, expr: !DIExpression())
!1379 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1130, file: !1283, line: 782, type: !1157, isLocal: true, isDefinition: true, align: 8)
!1380 = !DIGlobalVariableExpression(var: !1381, expr: !DIExpression())
!1381 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1130, file: !1283, line: 786, type: !1346, isLocal: true, isDefinition: true)
!1382 = !DIGlobalVariableExpression(var: !1383, expr: !DIExpression())
!1383 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1130, file: !1283, line: 786, type: !1157, isLocal: true, isDefinition: true, align: 8)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1130, file: !1283, line: 790, type: !1346, isLocal: true, isDefinition: true)
!1386 = !DIGlobalVariableExpression(var: !1387, expr: !DIExpression())
!1387 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1130, file: !1283, line: 790, type: !1157, isLocal: true, isDefinition: true, align: 8)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1130, file: !1283, line: 656, type: !1141, isLocal: true, isDefinition: true)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1130, file: !1283, line: 766, type: !1392, isLocal: true, isDefinition: true)
!1392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1393)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1347, line: 224, size: 160, elements: !1394)
!1394 = !{!1395, !1396, !1397, !1398}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1393, file: !1347, line: 226, baseType: !1206, size: 32)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1393, file: !1347, line: 228, baseType: !986, size: 32, offset: 32)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1393, file: !1347, line: 230, baseType: !118, size: 32, offset: 64)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1393, file: !1347, line: 231, baseType: !1399, size: 64, offset: 96)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !982, line: 343, size: 64, elements: !1400)
!1400 = !{!1401, !1402}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1399, file: !982, line: 344, baseType: !156, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1399, file: !982, line: 345, baseType: !156, size: 32, offset: 32)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1130, file: !1283, line: 770, type: !1392, isLocal: true, isDefinition: true)
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1130, file: !1283, line: 774, type: !1392, isLocal: true, isDefinition: true)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1130, file: !1283, line: 778, type: !1392, isLocal: true, isDefinition: true)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1130, file: !1283, line: 782, type: !1392, isLocal: true, isDefinition: true)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1130, file: !1283, line: 786, type: !1392, isLocal: true, isDefinition: true)
!1413 = !DIGlobalVariableExpression(var: !1414, expr: !DIExpression())
!1414 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1130, file: !1283, line: 790, type: !1392, isLocal: true, isDefinition: true)
!1415 = !DIGlobalVariableExpression(var: !1416, expr: !DIExpression())
!1416 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1417, file: !1556, line: 1914, type: !1617, isLocal: true, isDefinition: true)
!1417 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1418, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1419, retainedTypes: !1452, globals: !1553, splitDebugInlining: false, nameTableKind: None)
!1418 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!1419 = !{!30, !1420, !1427, !1434, !1441, !1447, !934}
!1420 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1070, line: 47, baseType: !32, size: 32, elements: !1421)
!1421 = !{!1422, !1423, !1424, !1425, !1426}
!1422 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1423 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1424 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1425 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1426 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1427 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1070, line: 75, baseType: !32, size: 32, elements: !1428)
!1428 = !{!1429, !1430, !1431, !1432, !1433}
!1429 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1430 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1431 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1432 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1433 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1434 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1070, line: 92, baseType: !32, size: 32, elements: !1435)
!1435 = !{!1436, !1437, !1438, !1439, !1440}
!1436 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1437 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1438 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1439 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1440 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1441 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1070, line: 84, baseType: !32, size: 32, elements: !1442)
!1442 = !{!1443, !1444, !1445, !1446}
!1443 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1444 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1445 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1446 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1447 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1070, line: 107, baseType: !32, size: 32, elements: !1448)
!1448 = !{!1449, !1450, !1451}
!1449 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1450 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1451 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1452 = !{!117, !118, !1453, !144, !143, !1502, !156, !1030, !1513, !279, !213, !1552}
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1455)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1070, line: 336, size: 160, elements: !1456)
!1456 = !{!1457, !1476, !1480, !1484, !1497}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1455, file: !1070, line: 365, baseType: !1458, size: 32)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 32)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{!118, !1461, !1091}
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 32)
!1462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1463)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1464)
!1464 = !{!1465, !1466, !1467, !1468, !1474, !1475}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1463, file: !130, line: 380, baseType: !133, size: 32)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1463, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1463, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1463, file: !130, line: 386, baseType: !1469, size: 32, offset: 96)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 32)
!1470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1471)
!1471 = !{!1472, !1473}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1470, file: !130, line: 359, baseType: !143, size: 8)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1470, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1463, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1463, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1455, file: !1070, line: 366, baseType: !1477, size: 32, offset: 32)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 32)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{null, !1461, !144}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1455, file: !1070, line: 374, baseType: !1481, size: 32, offset: 64)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 32)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!118, !1461}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1455, file: !1070, line: 377, baseType: !1485, size: 32, offset: 96)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 32)
!1486 = !DISubroutineType(types: !1487)
!1487 = !{!118, !1461, !1488}
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1490)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1070, line: 122, size: 64, elements: !1491)
!1491 = !{!1492, !1493, !1494, !1495, !1496}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1490, file: !1070, line: 123, baseType: !156, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1490, file: !1070, line: 124, baseType: !143, size: 8, offset: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1490, file: !1070, line: 125, baseType: !143, size: 8, offset: 40)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1490, file: !1070, line: 126, baseType: !143, size: 8, offset: 48)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1490, file: !1070, line: 127, baseType: !143, size: 8, offset: 56)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1455, file: !1070, line: 379, baseType: !1498, size: 32, offset: 128)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!118, !1461, !1501}
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 32)
!1503 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !448, line: 508, baseType: !1504)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 499, size: 224, elements: !1505)
!1505 = !{!1506, !1507, !1508, !1509, !1510, !1511, !1512}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1504, file: !448, line: 501, baseType: !452, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1504, file: !448, line: 502, baseType: !452, size: 32, offset: 32)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1504, file: !448, line: 503, baseType: !452, size: 32, offset: 64)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1504, file: !448, line: 504, baseType: !452, size: 32, offset: 96)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1504, file: !448, line: 505, baseType: !452, size: 32, offset: 128)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1504, file: !448, line: 506, baseType: !452, size: 32, offset: 160)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1504, file: !448, line: 507, baseType: !452, size: 32, offset: 192)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 32)
!1514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1515)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !935, line: 100, size: 224, elements: !1516)
!1516 = !{!1517, !1522, !1523, !1532, !1537, !1542, !1547}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1515, file: !935, line: 101, baseType: !1518, size: 32)
!1518 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !935, line: 76, baseType: !1519)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 32)
!1520 = !DISubroutineType(types: !1521)
!1521 = !{!118, !1461, !1030}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1515, file: !935, line: 102, baseType: !1518, size: 32, offset: 32)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1515, file: !935, line: 103, baseType: !1524, size: 32, offset: 64)
!1524 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !935, line: 83, baseType: !1525)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 32)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{!118, !1461, !1030, !1528, !117}
!1528 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !935, line: 72, baseType: !1529)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 32)
!1530 = !DISubroutineType(types: !1531)
!1531 = !{null, !1461, !1030, !117}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1515, file: !935, line: 104, baseType: !1533, size: 32, offset: 96)
!1533 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !935, line: 79, baseType: !1534)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 32)
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!118, !1461, !1030, !986}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1515, file: !935, line: 105, baseType: !1538, size: 32, offset: 128)
!1538 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !935, line: 88, baseType: !1539)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = !DISubroutineType(types: !1541)
!1541 = !{!934, !1461, !1030}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1515, file: !935, line: 106, baseType: !1543, size: 32, offset: 160)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !935, line: 92, baseType: !1544)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 32)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!118, !1461, !1030, !1056}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1515, file: !935, line: 107, baseType: !1548, size: 32, offset: 192)
!1548 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !935, line: 96, baseType: !1549)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 32)
!1550 = !DISubroutineType(types: !1551)
!1551 = !{!118, !1461, !1030, !117}
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 32)
!1553 = !{!1554, !1560, !1562, !1569, !1415, !1571, !1579, !1602, !1605, !1608, !1610}
!1554 = !DIGlobalVariableExpression(var: !1555, expr: !DIExpression())
!1555 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1417, file: !1556, line: 1914, type: !1557, isLocal: false, isDefinition: true, align: 16)
!1556 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 128, elements: !1558)
!1558 = !{!1559}
!1559 = !DISubrange(count: 8)
!1560 = !DIGlobalVariableExpression(var: !1561, expr: !DIExpression())
!1561 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1417, file: !1556, line: 1914, type: !1462, isLocal: false, isDefinition: true, align: 32)
!1562 = !DIGlobalVariableExpression(var: !1563, expr: !DIExpression())
!1563 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1417, file: !1556, line: 1914, type: !1564, isLocal: true, isDefinition: true, align: 32)
!1564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1565)
!1565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !1566)
!1566 = !{!1567, !1568}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1565, file: !463, line: 60, baseType: !1481, size: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1565, file: !463, line: 65, baseType: !1461, size: 32, offset: 32)
!1569 = !DIGlobalVariableExpression(var: !1570, expr: !DIExpression())
!1570 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1417, file: !1556, line: 1914, type: !1470, isLocal: true, isDefinition: true, align: 8)
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression())
!1572 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1417, file: !1556, line: 1914, type: !1573, isLocal: true, isDefinition: true)
!1573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1574, size: 64, elements: !645)
!1574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1575)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !982, line: 343, size: 64, elements: !1576)
!1576 = !{!1577, !1578}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1575, file: !982, line: 344, baseType: !156, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1575, file: !982, line: 345, baseType: !156, size: 32, offset: 32)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1417, file: !1556, line: 1914, type: !1581, isLocal: true, isDefinition: true)
!1581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1582)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1583, line: 60, size: 64, elements: !1584)
!1583 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1584 = !{!1585, !1601}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1582, file: !1583, line: 69, baseType: !1586, size: 32)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1588)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1583, line: 50, size: 64, elements: !1589)
!1589 = !{!1590, !1599, !1600}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1588, file: !1583, line: 52, baseType: !1591, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 32)
!1592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1593)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1594, line: 37, baseType: !1595)
!1594 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1594, line: 32, size: 64, elements: !1596)
!1596 = !{!1597, !1598}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1595, file: !1594, line: 34, baseType: !156, size: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1595, file: !1594, line: 36, baseType: !156, size: 32, offset: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1588, file: !1583, line: 54, baseType: !143, size: 8, offset: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1588, file: !1583, line: 56, baseType: !143, size: 8, offset: 40)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1582, file: !1583, line: 71, baseType: !143, size: 8, offset: 32)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1417, file: !1556, line: 1914, type: !1604, isLocal: true, isDefinition: true)
!1604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1587, size: 64, elements: !645)
!1605 = !DIGlobalVariableExpression(var: !1606, expr: !DIExpression())
!1606 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1417, file: !1556, line: 1914, type: !1607, isLocal: true, isDefinition: true)
!1607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1592, size: 128, elements: !256)
!1608 = !DIGlobalVariableExpression(var: !1609, expr: !DIExpression())
!1609 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1417, file: !1556, line: 1539, type: !1454, isLocal: true, isDefinition: true)
!1610 = !DIGlobalVariableExpression(var: !1611, expr: !DIExpression())
!1611 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1417, file: !1556, line: 1914, type: !1612, isLocal: true, isDefinition: true)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1613, line: 74, size: 64, elements: !1614)
!1613 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1614 = !{!1615, !1616}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1612, file: !1613, line: 76, baseType: !156, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1612, file: !1613, line: 78, baseType: !1461, size: 32, offset: 32)
!1617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1618)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1613, line: 22, size: 224, elements: !1619)
!1619 = !{!1620, !1621, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1618, file: !1613, line: 24, baseType: !1502, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1618, file: !1613, line: 26, baseType: !1622, size: 32, offset: 32)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1618, file: !1613, line: 28, baseType: !315, size: 32, offset: 64)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1618, file: !1613, line: 30, baseType: !146, size: 8, offset: 96)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1618, file: !1613, line: 32, baseType: !118, size: 32, offset: 128)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1618, file: !1613, line: 34, baseType: !146, size: 8, offset: 160)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1618, file: !1613, line: 36, baseType: !146, size: 8, offset: 168)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1618, file: !1613, line: 38, baseType: !146, size: 8, offset: 176)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1618, file: !1613, line: 40, baseType: !146, size: 8, offset: 184)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1618, file: !1613, line: 41, baseType: !1631, size: 32, offset: 192)
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 32)
!1632 = !DIGlobalVariableExpression(var: !1633, expr: !DIExpression())
!1633 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1634, file: !1710, line: 65, type: !452, isLocal: true, isDefinition: true)
!1634 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1635, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1636, retainedTypes: !1637, globals: !1707, splitDebugInlining: false, nameTableKind: None)
!1635 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!1636 = !{!725}
!1637 = !{!113, !1638, !362, !143, !156, !1646, !1677}
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !656, line: 770, baseType: !1640)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 764, size: 128, elements: !1641)
!1641 = !{!1642, !1643, !1644, !1645}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1640, file: !656, line: 766, baseType: !452, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1640, file: !656, line: 767, baseType: !452, size: 32, offset: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1640, file: !656, line: 768, baseType: !452, size: 32, offset: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1640, file: !656, line: 769, baseType: !660, size: 32, offset: 96)
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 32)
!1647 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !656, line: 426, baseType: !1648)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 411, size: 28704, elements: !1649)
!1649 = !{!1650, !1652, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1667, !1672, !1676}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1648, file: !656, line: 413, baseType: !1651, size: 256)
!1651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 256, elements: !1558)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1648, file: !656, line: 414, baseType: !1653, size: 768, offset: 256)
!1653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 768, elements: !1654)
!1654 = !{!1655}
!1655 = !DISubrange(count: 24)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1648, file: !656, line: 415, baseType: !1651, size: 256, offset: 1024)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1648, file: !656, line: 416, baseType: !1653, size: 768, offset: 1280)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1648, file: !656, line: 417, baseType: !1651, size: 256, offset: 2048)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1648, file: !656, line: 418, baseType: !1653, size: 768, offset: 2304)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1648, file: !656, line: 419, baseType: !1651, size: 256, offset: 3072)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1648, file: !656, line: 420, baseType: !1653, size: 768, offset: 3328)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1648, file: !656, line: 421, baseType: !1651, size: 256, offset: 4096)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1648, file: !656, line: 422, baseType: !1664, size: 1792, offset: 4352)
!1664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 1792, elements: !1665)
!1665 = !{!1666}
!1666 = !DISubrange(count: 56)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1648, file: !656, line: 423, baseType: !1668, size: 1920, offset: 6144)
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1669, size: 1920, elements: !1670)
!1669 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !143)
!1670 = !{!1671}
!1671 = !DISubrange(count: 240)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1648, file: !656, line: 424, baseType: !1673, size: 20608, offset: 8064)
!1673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 20608, elements: !1674)
!1674 = !{!1675}
!1675 = !DISubrange(count: 644)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1648, file: !656, line: 425, baseType: !452, size: 32, offset: 28672)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 32)
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !1679)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !1680)
!1680 = !{!1681, !1682, !1683, !1684, !1685, !1686, !1687, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1698, !1699, !1700, !1702, !1704, !1706}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1679, file: !656, line: 447, baseType: !660, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1679, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1679, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1679, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1679, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1679, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1679, file: !656, line: 453, baseType: !1688, size: 96, offset: 192)
!1688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1669, size: 96, elements: !901)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1679, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1679, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1679, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1679, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1679, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1679, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1679, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1679, file: !656, line: 461, baseType: !1697, size: 64, offset: 512)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !660, size: 64, elements: !256)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1679, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1679, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1679, file: !656, line: 464, baseType: !1701, size: 128, offset: 640)
!1701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !660, size: 128, elements: !808)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1679, file: !656, line: 465, baseType: !1703, size: 160, offset: 768)
!1703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !660, size: 160, elements: !1285)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1679, file: !656, line: 466, baseType: !1705, size: 160, offset: 928)
!1705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 160, elements: !1285)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1679, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!1707 = !{!1708, !1734, !1739, !1741, !1743, !1632}
!1708 = !DIGlobalVariableExpression(var: !1709, expr: !DIExpression())
!1709 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1634, file: !1710, line: 285, type: !1711, isLocal: true, isDefinition: true, align: 32)
!1710 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1712)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !1713)
!1713 = !{!1714, !1733}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1712, file: !463, line: 60, baseType: !1715, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 32)
!1716 = !DISubroutineType(types: !1717)
!1717 = !{!118, !1718}
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1720)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1721)
!1721 = !{!1722, !1723, !1724, !1725, !1731, !1732}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1720, file: !130, line: 380, baseType: !133, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1720, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1720, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1720, file: !130, line: 386, baseType: !1726, size: 32, offset: 96)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 32)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1728)
!1728 = !{!1729, !1730}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1727, file: !130, line: 359, baseType: !143, size: 8)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1727, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1720, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1720, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1712, file: !463, line: 65, baseType: !1718, size: 32, offset: 32)
!1734 = !DIGlobalVariableExpression(var: !1735, expr: !DIExpression())
!1735 = distinct !DIGlobalVariable(name: "lock", scope: !1634, file: !1710, line: 34, type: !1736, isLocal: true, isDefinition: true)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !1737)
!1737 = !{!1738}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1736, file: !334, line: 52, baseType: !22, size: 32)
!1739 = !DIGlobalVariableExpression(var: !1740, expr: !DIExpression())
!1740 = distinct !DIGlobalVariable(name: "last_load", scope: !1634, file: !1710, line: 36, type: !156, isLocal: true, isDefinition: true)
!1741 = !DIGlobalVariableExpression(var: !1742, expr: !DIExpression())
!1742 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1634, file: !1710, line: 48, type: !156, isLocal: true, isDefinition: true)
!1743 = !DIGlobalVariableExpression(var: !1744, expr: !DIExpression())
!1744 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1634, file: !1710, line: 54, type: !156, isLocal: true, isDefinition: true)
!1745 = !DIGlobalVariableExpression(var: !1746, expr: !DIExpression())
!1746 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1747, file: !1829, line: 22, type: !1831, isLocal: true, isDefinition: true)
!1747 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1748, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1749, retainedTypes: !1750, globals: !1826, splitDebugInlining: false, nameTableKind: None)
!1748 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!1749 = !{!101, !107}
!1750 = !{!1751, !1815, !1820, !167, !107, !101, !1825, !117}
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1753)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !102, line: 523, size: 288, elements: !1754)
!1754 = !{!1755, !1774, !1778, !1782, !1786, !1787, !1788, !1792, !1811}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1753, file: !102, line: 524, baseType: !1756, size: 32)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 32)
!1757 = !DISubroutineType(types: !1758)
!1758 = !{!118, !1759, !154, !155}
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 32)
!1760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1761)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1762)
!1762 = !{!1763, !1764, !1765, !1766, !1772, !1773}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1761, file: !130, line: 380, baseType: !133, size: 32)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1761, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1761, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1761, file: !130, line: 386, baseType: !1767, size: 32, offset: 96)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 32)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1769)
!1769 = !{!1770, !1771}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1768, file: !130, line: 359, baseType: !143, size: 8)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1768, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1761, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1761, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1753, file: !102, line: 530, baseType: !1775, size: 32, offset: 32)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 32)
!1776 = !DISubroutineType(types: !1777)
!1777 = !{!118, !1759, !161}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1753, file: !102, line: 532, baseType: !1779, size: 32, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 32)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{!118, !1759, !167, !162}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1753, file: !102, line: 535, baseType: !1783, size: 32, offset: 96)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 32)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{!118, !1759, !167}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1753, file: !102, line: 537, baseType: !1783, size: 32, offset: 128)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1753, file: !102, line: 539, baseType: !1783, size: 32, offset: 160)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1753, file: !102, line: 541, baseType: !1789, size: 32, offset: 192)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 32)
!1790 = !DISubroutineType(types: !1791)
!1791 = !{!118, !1759, !154, !101, !107}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1753, file: !102, line: 544, baseType: !1793, size: 32, offset: 224)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 32)
!1794 = !DISubroutineType(types: !1795)
!1795 = !{!118, !1759, !1796, !146}
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !102, line: 478, size: 96, elements: !1798)
!1798 = !{!1799, !1805, !1810}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1797, file: !102, line: 482, baseType: !1800, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !187, line: 33, baseType: !1801)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !187, line: 29, size: 32, elements: !1802)
!1802 = !{!1803}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1801, file: !187, line: 30, baseType: !1804, size: 32)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1797, file: !102, line: 485, baseType: !1806, size: 32, offset: 32)
!1806 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !102, line: 464, baseType: !1807)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 32)
!1808 = !DISubroutineType(types: !1809)
!1809 = !{null, !1759, !1796, !167}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1797, file: !102, line: 493, baseType: !167, size: 32, offset: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1753, file: !102, line: 547, baseType: !1812, size: 32, offset: 256)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 32)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!156, !1759}
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 32)
!1816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1817)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !102, line: 428, size: 32, elements: !1818)
!1818 = !{!1819}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1817, file: !102, line: 434, baseType: !167, size: 32)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 32)
!1821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1822)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !102, line: 441, size: 32, elements: !1823)
!1823 = !{!1824}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1822, file: !102, line: 447, baseType: !167, size: 32)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 32)
!1826 = !{!1827, !1745}
!1827 = !DIGlobalVariableExpression(var: !1828, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1828 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1747, file: !1829, line: 37, type: !1830, isLocal: true, isDefinition: true)
!1829 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !315)
!1831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1832, size: 352, elements: !1833)
!1832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1759)
!1833 = !{!1834}
!1834 = !DISubrange(count: 11)
!1835 = !DIGlobalVariableExpression(var: !1836, expr: !DIExpression())
!1836 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1837, file: !1879, line: 139, type: !1886, isLocal: false, isDefinition: true)
!1837 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1838, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1839, globals: !1876, splitDebugInlining: false, nameTableKind: None)
!1838 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!1839 = !{!1840}
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 32)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !448, line: 370, baseType: !1842)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 336, size: 1152, elements: !1843)
!1843 = !{!1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1842, file: !448, line: 338, baseType: !452, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1842, file: !448, line: 339, baseType: !452, size: 32, offset: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1842, file: !448, line: 340, baseType: !452, size: 32, offset: 64)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1842, file: !448, line: 341, baseType: !452, size: 32, offset: 96)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1842, file: !448, line: 342, baseType: !452, size: 32, offset: 128)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1842, file: !448, line: 343, baseType: !452, size: 32, offset: 160)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1842, file: !448, line: 344, baseType: !452, size: 32, offset: 192)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1842, file: !448, line: 345, baseType: !156, size: 32, offset: 224)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1842, file: !448, line: 346, baseType: !452, size: 32, offset: 256)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1842, file: !448, line: 347, baseType: !452, size: 32, offset: 288)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1842, file: !448, line: 348, baseType: !957, size: 64, offset: 320)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1842, file: !448, line: 349, baseType: !452, size: 32, offset: 384)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1842, file: !448, line: 350, baseType: !452, size: 32, offset: 416)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1842, file: !448, line: 351, baseType: !452, size: 32, offset: 448)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1842, file: !448, line: 352, baseType: !156, size: 32, offset: 480)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1842, file: !448, line: 353, baseType: !452, size: 32, offset: 512)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1842, file: !448, line: 354, baseType: !452, size: 32, offset: 544)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1842, file: !448, line: 355, baseType: !957, size: 64, offset: 576)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1842, file: !448, line: 356, baseType: !452, size: 32, offset: 640)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1842, file: !448, line: 357, baseType: !452, size: 32, offset: 672)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1842, file: !448, line: 358, baseType: !452, size: 32, offset: 704)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1842, file: !448, line: 359, baseType: !156, size: 32, offset: 736)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1842, file: !448, line: 360, baseType: !452, size: 32, offset: 768)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1842, file: !448, line: 361, baseType: !452, size: 32, offset: 800)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1842, file: !448, line: 362, baseType: !957, size: 64, offset: 832)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1842, file: !448, line: 363, baseType: !452, size: 32, offset: 896)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1842, file: !448, line: 364, baseType: !452, size: 32, offset: 928)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1842, file: !448, line: 365, baseType: !957, size: 64, offset: 960)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1842, file: !448, line: 366, baseType: !452, size: 32, offset: 1024)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1842, file: !448, line: 367, baseType: !452, size: 32, offset: 1056)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1842, file: !448, line: 368, baseType: !978, size: 32, offset: 1088)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1842, file: !448, line: 369, baseType: !452, size: 32, offset: 1120)
!1876 = !{!1877, !1880, !1835}
!1877 = !DIGlobalVariableExpression(var: !1878, expr: !DIExpression())
!1878 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1837, file: !1879, line: 137, type: !156, isLocal: false, isDefinition: true)
!1879 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1880 = !DIGlobalVariableExpression(var: !1881, expr: !DIExpression())
!1881 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1837, file: !1879, line: 138, type: !1882, isLocal: false, isDefinition: true)
!1882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1883, size: 128, elements: !1884)
!1883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !143)
!1884 = !{!1885}
!1885 = !DISubrange(count: 16)
!1886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1883, size: 64, elements: !1558)
!1887 = !DIGlobalVariableExpression(var: !1888, expr: !DIExpression())
!1888 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1889, file: !1892, line: 23, type: !1893, isLocal: false, isDefinition: true)
!1889 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1890, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, globals: !1891, splitDebugInlining: false, nameTableKind: None)
!1890 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!1891 = !{!1887}
!1892 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!1894 = !DIGlobalVariableExpression(var: !1895, expr: !DIExpression())
!1895 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1896, file: !1900, line: 86, type: !2150, isLocal: false, isDefinition: true, align: 512)
!1896 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1897, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1898, retainedTypes: !1907, globals: !1981, splitDebugInlining: false, nameTableKind: None)
!1897 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!1898 = !{!1899, !30, !725}
!1899 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1900, line: 63, baseType: !32, size: 32, elements: !1901)
!1900 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1901 = !{!1902, !1903, !1904, !1905, !1906}
!1902 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1903 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1904 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1905 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1906 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1907 = !{!315, !117, !118, !1908, !1239, !156, !1939, !362, !143, !1964}
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1910)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1911, line: 51, size: 64, elements: !1912)
!1911 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1912 = !{!1913, !1934}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1910, file: !1911, line: 52, baseType: !1914, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1911, line: 38, baseType: !1915)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 32)
!1916 = !DISubroutineType(types: !1917)
!1917 = !{!118, !1918, !1933, !279}
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1920)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !1921)
!1921 = !{!1922, !1923, !1924, !1925, !1931, !1932}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1920, file: !130, line: 380, baseType: !133, size: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1920, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1920, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1920, file: !130, line: 386, baseType: !1926, size: 32, offset: 96)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 32)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !1928)
!1928 = !{!1929, !1930}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1927, file: !130, line: 359, baseType: !143, size: 8)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1927, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1920, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1920, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1910, file: !1911, line: 53, baseType: !1935, size: 32, offset: 32)
!1935 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1911, line: 47, baseType: !1936)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 32)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{!118, !1918, !1933, !279, !156}
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !1941)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !1942)
!1942 = !{!1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1941, file: !656, line: 447, baseType: !660, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1941, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1941, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1941, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1941, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1941, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1941, file: !656, line: 453, baseType: !1688, size: 96, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1941, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1941, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1941, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1941, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1941, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1941, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1941, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1941, file: !656, line: 461, baseType: !1697, size: 64, offset: 512)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1941, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1941, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1941, file: !656, line: 464, baseType: !1701, size: 128, offset: 640)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1941, file: !656, line: 465, baseType: !1703, size: 160, offset: 768)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1941, file: !656, line: 466, baseType: !1705, size: 160, offset: 928)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1941, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !656, line: 426, baseType: !1966)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 411, size: 28704, elements: !1967)
!1967 = !{!1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1966, file: !656, line: 413, baseType: !1651, size: 256)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1966, file: !656, line: 414, baseType: !1653, size: 768, offset: 256)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1966, file: !656, line: 415, baseType: !1651, size: 256, offset: 1024)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1966, file: !656, line: 416, baseType: !1653, size: 768, offset: 1280)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1966, file: !656, line: 417, baseType: !1651, size: 256, offset: 2048)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1966, file: !656, line: 418, baseType: !1653, size: 768, offset: 2304)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1966, file: !656, line: 419, baseType: !1651, size: 256, offset: 3072)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1966, file: !656, line: 420, baseType: !1653, size: 768, offset: 3328)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1966, file: !656, line: 421, baseType: !1651, size: 256, offset: 4096)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1966, file: !656, line: 422, baseType: !1664, size: 1792, offset: 4352)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1966, file: !656, line: 423, baseType: !1668, size: 1920, offset: 6144)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1966, file: !656, line: 424, baseType: !1673, size: 20608, offset: 8064)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1966, file: !656, line: 425, baseType: !452, size: 32, offset: 28672)
!1981 = !{!1982, !2107, !2113, !2115, !1894, !2118, !2120, !2125}
!1982 = !DIGlobalVariableExpression(var: !1983, expr: !DIExpression())
!1983 = distinct !DIGlobalVariable(name: "_kernel", scope: !1896, file: !1900, line: 40, type: !1984, isLocal: false, isDefinition: true)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !261, line: 158, size: 288, elements: !1985)
!1985 = !{!1986, !2102}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1984, file: !261, line: 159, baseType: !1987, size: 192)
!1987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1988, size: 192, elements: !645)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !261, line: 100, size: 192, elements: !1989)
!1989 = !{!1990, !1991, !1992, !2095, !2096, !2097, !2098}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1988, file: !261, line: 102, baseType: !156, size: 32)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1988, file: !261, line: 105, baseType: !1239, size: 32, offset: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1988, file: !261, line: 108, baseType: !1993, size: 32, offset: 64)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 32)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !1995)
!1995 = !{!1996, !2054, !2066, !2067, !2068, !2069, !2075, !2090}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1994, file: !225, line: 247, baseType: !1997, size: 384)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !1998)
!1998 = !{!1999, !2023, !2030, !2031, !2032, !2041, !2042, !2043}
!1999 = !DIDerivedType(tag: DW_TAG_member, scope: !1997, file: !225, line: 60, baseType: !2000, size: 64)
!2000 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1997, file: !225, line: 60, size: 64, elements: !2001)
!2001 = !{!2002, !2017}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2000, file: !225, line: 61, baseType: !2003, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2004)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2005)
!2005 = !{!2006, !2012}
!2006 = !DIDerivedType(tag: DW_TAG_member, scope: !2004, file: !235, line: 38, baseType: !2007, size: 32)
!2007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2004, file: !235, line: 38, size: 32, elements: !2008)
!2008 = !{!2009, !2011}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2007, file: !235, line: 39, baseType: !2010, size: 32)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2007, file: !235, line: 40, baseType: !2010, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, scope: !2004, file: !235, line: 42, baseType: !2013, size: 32, offset: 32)
!2013 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2004, file: !235, line: 42, size: 32, elements: !2014)
!2014 = !{!2015, !2016}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2013, file: !235, line: 43, baseType: !2010, size: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2013, file: !235, line: 44, baseType: !2010, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2000, file: !225, line: 62, baseType: !2018, size: 64)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !2019)
!2019 = !{!2020}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2018, file: !251, line: 50, baseType: !2021, size: 64)
!2021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2022, size: 64, elements: !256)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1997, file: !225, line: 68, baseType: !2024, size: 32, offset: 64)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 32)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !2026)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !2027)
!2027 = !{!2028}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2026, file: !261, line: 232, baseType: !2029, size: 64)
!2029 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2004)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1997, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1997, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!2032 = !DIDerivedType(tag: DW_TAG_member, scope: !1997, file: !225, line: 90, baseType: !2033, size: 16, offset: 112)
!2033 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1997, file: !225, line: 90, size: 16, elements: !2034)
!2034 = !{!2035, !2040}
!2035 = !DIDerivedType(tag: DW_TAG_member, scope: !2033, file: !225, line: 91, baseType: !2036, size: 16)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2033, file: !225, line: 91, size: 16, elements: !2037)
!2037 = !{!2038, !2039}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2036, file: !225, line: 96, baseType: !275, size: 8)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2036, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2033, file: !225, line: 100, baseType: !279, size: 16)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1997, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1997, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1997, file: !225, line: 131, baseType: !2044, size: 192, offset: 192)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !2045)
!2045 = !{!2046, !2047, !2053}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2044, file: !261, line: 245, baseType: !2003, size: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2044, file: !261, line: 246, baseType: !2048, size: 32, offset: 64)
!2048 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !2049)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 32)
!2050 = !DISubroutineType(types: !2051)
!2051 = !{null, !2052}
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 32)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2044, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1994, file: !225, line: 250, baseType: !2055, size: 288, offset: 384)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !2056)
!2056 = !{!2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2055, file: !296, line: 26, baseType: !156, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2055, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2055, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2055, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2055, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2055, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2055, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2055, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2055, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1994, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1994, file: !225, line: 256, baseType: !2025, size: 64, offset: 704)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1994, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1994, file: !225, line: 300, baseType: !2070, size: 96, offset: 800)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !2071)
!2071 = !{!2072, !2073, !2074}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2070, file: !225, line: 153, baseType: !22, size: 32)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2070, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2070, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1994, file: !225, line: 325, baseType: !2076, size: 32, offset: 896)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 32)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !2078)
!2078 = !{!2079, !2085, !2086}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2077, file: !220, line: 5074, baseType: !2080, size: 96)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2081)
!2081 = !{!2082, !2083, !2084}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2080, file: !324, line: 57, baseType: !327, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2080, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2080, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2077, file: !220, line: 5075, baseType: !2025, size: 64, offset: 96)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2077, file: !220, line: 5076, baseType: !2087, size: 32, offset: 160)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !2088)
!2088 = !{!2089}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2087, file: !334, line: 52, baseType: !22, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1994, file: !225, line: 343, baseType: !2091, size: 64, offset: 928)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !2092)
!2092 = !{!2093, !2094}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2091, file: !296, line: 63, baseType: !156, size: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2091, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1988, file: !261, line: 111, baseType: !1993, size: 32, offset: 96)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1988, file: !261, line: 124, baseType: !118, size: 32, offset: 128)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1988, file: !261, line: 127, baseType: !143, size: 8, offset: 160)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1988, file: !261, line: 153, baseType: !2099, offset: 168)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2100, line: 33, elements: !2101)
!2100 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2101 = !{}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1984, file: !261, line: 170, baseType: !2103, size: 96, offset: 192)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !261, line: 83, size: 96, elements: !2104)
!2104 = !{!2105, !2106}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2103, file: !261, line: 86, baseType: !1993, size: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2103, file: !261, line: 90, baseType: !2029, size: 64, offset: 32)
!2107 = !DIGlobalVariableExpression(var: !2108, expr: !DIExpression())
!2108 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1896, file: !1900, line: 43, type: !2109, isLocal: false, isDefinition: true, align: 512)
!2109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2110, size: 8704, elements: !383)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !347, line: 47, size: 8, elements: !2111)
!2111 = !{!2112}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2110, file: !347, line: 48, baseType: !135, size: 8)
!2113 = !DIGlobalVariableExpression(var: !2114, expr: !DIExpression())
!2114 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1896, file: !1900, line: 44, type: !1994, isLocal: false, isDefinition: true)
!2115 = !DIGlobalVariableExpression(var: !2116, expr: !DIExpression())
!2116 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1896, file: !1900, line: 48, type: !2117, isLocal: false, isDefinition: true)
!2117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1994, size: 1024, elements: !645)
!2118 = !DIGlobalVariableExpression(var: !2119, expr: !DIExpression())
!2119 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1896, file: !1900, line: 217, type: !146, isLocal: false, isDefinition: true)
!2120 = !DIGlobalVariableExpression(var: !2121, expr: !DIExpression())
!2121 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1896, file: !1900, line: 50, type: !2122, isLocal: true, isDefinition: true, align: 512)
!2122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2110, size: 3072, elements: !2123)
!2123 = !{!646, !2124}
!2124 = !DISubrange(count: 384)
!2125 = !DIGlobalVariableExpression(var: !2126, expr: !DIExpression())
!2126 = distinct !DIGlobalVariable(name: "levels", scope: !2127, file: !1900, line: 232, type: !2147, isLocal: true, isDefinition: true)
!2127 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1900, file: !1900, line: 230, type: !2128, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !2130)
!2128 = !DISubroutineType(types: !2129)
!2129 = !{null, !1899}
!2130 = !{!2131, !2132, !2142, !2146}
!2131 = !DILocalVariable(name: "level", arg: 1, scope: !2127, file: !1900, line: 230, type: !1899)
!2132 = !DILocalVariable(name: "entry", scope: !2127, file: !1900, line: 244, type: !2133)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2135)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !2136)
!2136 = !{!2137, !2141}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2135, file: !463, line: 60, baseType: !2138, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 32)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{!118, !1918}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2135, file: !463, line: 65, baseType: !1918, size: 32, offset: 32)
!2142 = !DILocalVariable(name: "dev", scope: !2143, file: !1900, line: 247, type: !1918)
!2143 = distinct !DILexicalBlock(scope: !2144, file: !1900, line: 246, column: 64)
!2144 = distinct !DILexicalBlock(scope: !2145, file: !1900, line: 246, column: 2)
!2145 = distinct !DILexicalBlock(scope: !2127, file: !1900, line: 246, column: 2)
!2146 = !DILocalVariable(name: "rc", scope: !2143, file: !1900, line: 248, type: !118)
!2147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2133, size: 192, elements: !2148)
!2148 = !{!2149}
!2149 = !DISubrange(count: 6)
!2150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2110, size: 16896, elements: !2151)
!2151 = !{!646, !2152}
!2152 = !DISubrange(count: 2112)
!2153 = !DIGlobalVariableExpression(var: !2154, expr: !DIExpression())
!2154 = distinct !DIGlobalVariable(name: "states_str", scope: !2155, file: !2156, line: 276, type: !2279, isLocal: true, isDefinition: true)
!2155 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2156, file: !2156, line: 271, type: !2157, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !2270)
!2156 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2157 = !DISubroutineType(types: !2158)
!2158 = !{!133, !2159, !1239, !315}
!2159 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !2160)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 32)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !2162)
!2162 = !{!2163, !2221, !2233, !2234, !2235, !2236, !2242, !2257}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2161, file: !225, line: 247, baseType: !2164, size: 384)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !2165)
!2165 = !{!2166, !2190, !2197, !2198, !2199, !2208, !2209, !2210}
!2166 = !DIDerivedType(tag: DW_TAG_member, scope: !2164, file: !225, line: 60, baseType: !2167, size: 64)
!2167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2164, file: !225, line: 60, size: 64, elements: !2168)
!2168 = !{!2169, !2184}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2167, file: !225, line: 61, baseType: !2170, size: 64)
!2170 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2171)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2172)
!2172 = !{!2173, !2179}
!2173 = !DIDerivedType(tag: DW_TAG_member, scope: !2171, file: !235, line: 38, baseType: !2174, size: 32)
!2174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2171, file: !235, line: 38, size: 32, elements: !2175)
!2175 = !{!2176, !2178}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2174, file: !235, line: 39, baseType: !2177, size: 32)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 32)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2174, file: !235, line: 40, baseType: !2177, size: 32)
!2179 = !DIDerivedType(tag: DW_TAG_member, scope: !2171, file: !235, line: 42, baseType: !2180, size: 32, offset: 32)
!2180 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2171, file: !235, line: 42, size: 32, elements: !2181)
!2181 = !{!2182, !2183}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2180, file: !235, line: 43, baseType: !2177, size: 32)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2180, file: !235, line: 44, baseType: !2177, size: 32)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2167, file: !225, line: 62, baseType: !2185, size: 64)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !2186)
!2186 = !{!2187}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2185, file: !251, line: 50, baseType: !2188, size: 64)
!2188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2189, size: 64, elements: !256)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 32)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2164, file: !225, line: 68, baseType: !2191, size: 32, offset: 64)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !2193)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !2194)
!2194 = !{!2195}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2193, file: !261, line: 232, baseType: !2196, size: 64)
!2196 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2171)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2164, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2164, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!2199 = !DIDerivedType(tag: DW_TAG_member, scope: !2164, file: !225, line: 90, baseType: !2200, size: 16, offset: 112)
!2200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2164, file: !225, line: 90, size: 16, elements: !2201)
!2201 = !{!2202, !2207}
!2202 = !DIDerivedType(tag: DW_TAG_member, scope: !2200, file: !225, line: 91, baseType: !2203, size: 16)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2200, file: !225, line: 91, size: 16, elements: !2204)
!2204 = !{!2205, !2206}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2203, file: !225, line: 96, baseType: !275, size: 8)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2203, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2200, file: !225, line: 100, baseType: !279, size: 16)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2164, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2164, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2164, file: !225, line: 131, baseType: !2211, size: 192, offset: 192)
!2211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !2212)
!2212 = !{!2213, !2214, !2220}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2211, file: !261, line: 245, baseType: !2170, size: 64)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2211, file: !261, line: 246, baseType: !2215, size: 32, offset: 64)
!2215 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !2216)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 32)
!2217 = !DISubroutineType(types: !2218)
!2218 = !{null, !2219}
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 32)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2211, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2161, file: !225, line: 250, baseType: !2222, size: 288, offset: 384)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !2223)
!2223 = !{!2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2222, file: !296, line: 26, baseType: !156, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2222, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2222, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2222, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2222, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2222, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2222, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2222, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2222, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2161, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2161, file: !225, line: 256, baseType: !2192, size: 64, offset: 704)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2161, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2161, file: !225, line: 300, baseType: !2237, size: 96, offset: 800)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !2238)
!2238 = !{!2239, !2240, !2241}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2237, file: !225, line: 153, baseType: !22, size: 32)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2237, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2237, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2161, file: !225, line: 325, baseType: !2243, size: 32, offset: 896)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 32)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !2245)
!2245 = !{!2246, !2252, !2253}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2244, file: !220, line: 5074, baseType: !2247, size: 96)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2248)
!2248 = !{!2249, !2250, !2251}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2247, file: !324, line: 57, baseType: !327, size: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2247, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2247, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2244, file: !220, line: 5075, baseType: !2192, size: 64, offset: 96)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2244, file: !220, line: 5076, baseType: !2254, size: 32, offset: 160)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !2255)
!2255 = !{!2256}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2254, file: !334, line: 52, baseType: !22, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2161, file: !225, line: 343, baseType: !2258, size: 64, offset: 928)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !2259)
!2259 = !{!2260, !2261}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2258, file: !296, line: 63, baseType: !156, size: 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2258, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!2262 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2263, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2264, globals: !2266, splitDebugInlining: false, nameTableKind: None)
!2263 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2264 = !{!117, !133, !113, !143, !22, !118, !2265, !24, !315, !1239, !156, !213}
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 32)
!2266 = !{!2153, !2267}
!2267 = !DIGlobalVariableExpression(var: !2268, expr: !DIExpression())
!2268 = distinct !DIGlobalVariable(name: "states_sz", scope: !2155, file: !2156, line: 279, type: !2269, isLocal: true, isDefinition: true)
!2269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1830, size: 256, elements: !1558)
!2270 = !{!2271, !2272, !2273, !2274, !2275, !2276, !2277}
!2271 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2155, file: !2156, line: 271, type: !2159)
!2272 = !DILocalVariable(name: "buf", arg: 2, scope: !2155, file: !2156, line: 271, type: !1239)
!2273 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2155, file: !2156, line: 271, type: !315)
!2274 = !DILocalVariable(name: "off", scope: !2155, file: !2156, line: 273, type: !315)
!2275 = !DILocalVariable(name: "bit", scope: !2155, file: !2156, line: 274, type: !143)
!2276 = !DILocalVariable(name: "thread_state", scope: !2155, file: !2156, line: 275, type: !143)
!2277 = !DILocalVariable(name: "index", scope: !2278, file: !2156, line: 293, type: !143)
!2278 = distinct !DILexicalBlock(scope: !2155, file: !2156, line: 293, column: 2)
!2279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !133, size: 256, elements: !1558)
!2280 = !DIGlobalVariableExpression(var: !2281, expr: !DIExpression())
!2281 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2282, file: !2392, line: 56, type: !2379, isLocal: false, isDefinition: true)
!2282 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2283, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2284, globals: !2389, splitDebugInlining: false, nameTableKind: None)
!2283 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2284 = !{!2285, !1239, !117, !2387, !1933, !113, !362, !118, !156, !213, !2388}
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 32)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !2287)
!2287 = !{!2288, !2346, !2358, !2359, !2360, !2361, !2367, !2382}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2286, file: !225, line: 247, baseType: !2289, size: 384)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !2290)
!2290 = !{!2291, !2315, !2322, !2323, !2324, !2333, !2334, !2335}
!2291 = !DIDerivedType(tag: DW_TAG_member, scope: !2289, file: !225, line: 60, baseType: !2292, size: 64)
!2292 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2289, file: !225, line: 60, size: 64, elements: !2293)
!2293 = !{!2294, !2309}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2292, file: !225, line: 61, baseType: !2295, size: 64)
!2295 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2296)
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2297)
!2297 = !{!2298, !2304}
!2298 = !DIDerivedType(tag: DW_TAG_member, scope: !2296, file: !235, line: 38, baseType: !2299, size: 32)
!2299 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2296, file: !235, line: 38, size: 32, elements: !2300)
!2300 = !{!2301, !2303}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2299, file: !235, line: 39, baseType: !2302, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2299, file: !235, line: 40, baseType: !2302, size: 32)
!2304 = !DIDerivedType(tag: DW_TAG_member, scope: !2296, file: !235, line: 42, baseType: !2305, size: 32, offset: 32)
!2305 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2296, file: !235, line: 42, size: 32, elements: !2306)
!2306 = !{!2307, !2308}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2305, file: !235, line: 43, baseType: !2302, size: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2305, file: !235, line: 44, baseType: !2302, size: 32)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2292, file: !225, line: 62, baseType: !2310, size: 64)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !2311)
!2311 = !{!2312}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2310, file: !251, line: 50, baseType: !2313, size: 64)
!2313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2314, size: 64, elements: !256)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 32)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2289, file: !225, line: 68, baseType: !2316, size: 32, offset: 64)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !2318)
!2318 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !2319)
!2319 = !{!2320}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2318, file: !261, line: 232, baseType: !2321, size: 64)
!2321 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2296)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2289, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2289, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!2324 = !DIDerivedType(tag: DW_TAG_member, scope: !2289, file: !225, line: 90, baseType: !2325, size: 16, offset: 112)
!2325 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2289, file: !225, line: 90, size: 16, elements: !2326)
!2326 = !{!2327, !2332}
!2327 = !DIDerivedType(tag: DW_TAG_member, scope: !2325, file: !225, line: 91, baseType: !2328, size: 16)
!2328 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2325, file: !225, line: 91, size: 16, elements: !2329)
!2329 = !{!2330, !2331}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2328, file: !225, line: 96, baseType: !275, size: 8)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2328, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2325, file: !225, line: 100, baseType: !279, size: 16)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2289, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2289, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2289, file: !225, line: 131, baseType: !2336, size: 192, offset: 192)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !2337)
!2337 = !{!2338, !2339, !2345}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2336, file: !261, line: 245, baseType: !2295, size: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2336, file: !261, line: 246, baseType: !2340, size: 32, offset: 64)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !2341)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 32)
!2342 = !DISubroutineType(types: !2343)
!2343 = !{null, !2344}
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2336, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2286, file: !225, line: 250, baseType: !2347, size: 288, offset: 384)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !2348)
!2348 = !{!2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2347, file: !296, line: 26, baseType: !156, size: 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2347, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2347, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2347, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2347, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2347, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2347, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2347, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2347, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2286, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2286, file: !225, line: 256, baseType: !2317, size: 64, offset: 704)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2286, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2286, file: !225, line: 300, baseType: !2362, size: 96, offset: 800)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !2363)
!2363 = !{!2364, !2365, !2366}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2362, file: !225, line: 153, baseType: !22, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2362, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2362, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2286, file: !225, line: 325, baseType: !2368, size: 32, offset: 896)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 32)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !2370)
!2370 = !{!2371, !2377, !2378}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2369, file: !220, line: 5074, baseType: !2372, size: 96)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2373)
!2373 = !{!2374, !2375, !2376}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2372, file: !324, line: 57, baseType: !327, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2372, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2372, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2369, file: !220, line: 5075, baseType: !2317, size: 64, offset: 96)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2369, file: !220, line: 5076, baseType: !2379, size: 32, offset: 160)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !2380)
!2380 = !{!2381}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2379, file: !334, line: 52, baseType: !22, size: 32)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2286, file: !225, line: 343, baseType: !2383, size: 64, offset: 928)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !2384)
!2384 = !{!2385, !2386}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2383, file: !296, line: 63, baseType: !156, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2383, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2295, size: 32)
!2389 = !{!2280, !2390, !2393, !2395}
!2390 = !DIGlobalVariableExpression(var: !2391, expr: !DIExpression())
!2391 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2282, file: !2392, line: 404, type: !118, isLocal: true, isDefinition: true)
!2392 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2393 = !DIGlobalVariableExpression(var: !2394, expr: !DIExpression())
!2394 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2282, file: !2392, line: 405, type: !118, isLocal: true, isDefinition: true)
!2395 = !DIGlobalVariableExpression(var: !2396, expr: !DIExpression())
!2396 = distinct !DIGlobalVariable(name: "pending_current", scope: !2282, file: !2392, line: 425, type: !2285, isLocal: true, isDefinition: true)
!2397 = !DIGlobalVariableExpression(var: !2398, expr: !DIExpression())
!2398 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2399, file: !2429, line: 19, type: !2435, isLocal: true, isDefinition: true)
!2399 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2400, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2401, globals: !2426, splitDebugInlining: false, nameTableKind: None)
!2400 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2401 = !{!113, !117, !362, !156, !213, !118, !2402, !1239, !115}
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 32)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !2404)
!2404 = !{!2405, !2420, !2425}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2403, file: !261, line: 245, baseType: !2406, size: 64)
!2406 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2407)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2408)
!2408 = !{!2409, !2415}
!2409 = !DIDerivedType(tag: DW_TAG_member, scope: !2407, file: !235, line: 38, baseType: !2410, size: 32)
!2410 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2407, file: !235, line: 38, size: 32, elements: !2411)
!2411 = !{!2412, !2414}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2410, file: !235, line: 39, baseType: !2413, size: 32)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 32)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2410, file: !235, line: 40, baseType: !2413, size: 32)
!2415 = !DIDerivedType(tag: DW_TAG_member, scope: !2407, file: !235, line: 42, baseType: !2416, size: 32, offset: 32)
!2416 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2407, file: !235, line: 42, size: 32, elements: !2417)
!2417 = !{!2418, !2419}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2416, file: !235, line: 43, baseType: !2413, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2416, file: !235, line: 44, baseType: !2413, size: 32)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2403, file: !261, line: 246, baseType: !2421, size: 32, offset: 64)
!2421 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !2422)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 32)
!2423 = !DISubroutineType(types: !2424)
!2424 = !{null, !2402}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2403, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!2426 = !{!2427, !2397, !2430, !2432}
!2427 = !DIGlobalVariableExpression(var: !2428, expr: !DIExpression())
!2428 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2399, file: !2429, line: 15, type: !213, isLocal: true, isDefinition: true)
!2429 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2430 = !DIGlobalVariableExpression(var: !2431, expr: !DIExpression())
!2431 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2399, file: !2429, line: 25, type: !118, isLocal: true, isDefinition: true)
!2432 = !DIGlobalVariableExpression(var: !2433, expr: !DIExpression())
!2433 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2399, file: !2429, line: 17, type: !2434, isLocal: true, isDefinition: true)
!2434 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2407)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !2436)
!2436 = !{!2437}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2435, file: !334, line: 52, baseType: !22, size: 32)
!2438 = !DIGlobalVariableExpression(var: !2439, expr: !DIExpression())
!2439 = distinct !DIGlobalVariable(name: "kheap__system_heap", scope: !2440, file: !2446, line: 61, type: !2478, isLocal: false, isDefinition: true, align: 64)
!2440 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2441, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2442, globals: !2443, splitDebugInlining: false, nameTableKind: None)
!2441 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2442 = !{!117, !118, !22}
!2443 = !{!2444, !2438}
!2444 = !DIGlobalVariableExpression(var: !2445, expr: !DIExpression())
!2445 = distinct !DIGlobalVariable(name: "_system_heap", scope: !2440, file: !2446, line: 61, type: !2447, isLocal: false, isDefinition: true, align: 32)
!2446 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !2448)
!2448 = !{!2449, !2455, !2474}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2447, file: !220, line: 5074, baseType: !2450, size: 96)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2451)
!2451 = !{!2452, !2453, !2454}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2450, file: !324, line: 57, baseType: !327, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2450, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2450, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2447, file: !220, line: 5075, baseType: !2456, size: 64, offset: 96)
!2456 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !2457)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !2458)
!2458 = !{!2459}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2457, file: !261, line: 232, baseType: !2460, size: 64)
!2460 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2461)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2462)
!2462 = !{!2463, !2469}
!2463 = !DIDerivedType(tag: DW_TAG_member, scope: !2461, file: !235, line: 38, baseType: !2464, size: 32)
!2464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2461, file: !235, line: 38, size: 32, elements: !2465)
!2465 = !{!2466, !2468}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2464, file: !235, line: 39, baseType: !2467, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2464, file: !235, line: 40, baseType: !2467, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, scope: !2461, file: !235, line: 42, baseType: !2470, size: 32, offset: 32)
!2470 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2461, file: !235, line: 42, size: 32, elements: !2471)
!2471 = !{!2472, !2473}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2470, file: !235, line: 43, baseType: !2467, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2470, file: !235, line: 44, baseType: !2467, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2447, file: !220, line: 5076, baseType: !2475, size: 32, offset: 160)
!2475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !2476)
!2476 = !{!2477}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2475, file: !334, line: 52, baseType: !22, size: 32)
!2478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 2048, elements: !2479)
!2479 = !{!2480}
!2480 = !DISubrange(count: 256)
!2481 = !DIGlobalVariableExpression(var: !2482, expr: !DIExpression())
!2482 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2483, file: !2502, line: 55, type: !2503, isLocal: true, isDefinition: true, align: 32)
!2483 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2484, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2485, globals: !2501, splitDebugInlining: false, nameTableKind: None)
!2484 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2485 = !{!117, !113, !118, !2486}
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2488)
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !2489)
!2489 = !{!2490, !2496}
!2490 = !DIDerivedType(tag: DW_TAG_member, scope: !2488, file: !235, line: 38, baseType: !2491, size: 32)
!2491 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2488, file: !235, line: 38, size: 32, elements: !2492)
!2492 = !{!2493, !2495}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2491, file: !235, line: 39, baseType: !2494, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2491, file: !235, line: 40, baseType: !2494, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_member, scope: !2488, file: !235, line: 42, baseType: !2497, size: 32, offset: 32)
!2497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2488, file: !235, line: 42, size: 32, elements: !2498)
!2498 = !{!2499, !2500}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2497, file: !235, line: 43, baseType: !2494, size: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2497, file: !235, line: 44, baseType: !2494, size: 32)
!2501 = !{!2481}
!2502 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2504)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !463, line: 51, size: 64, elements: !2505)
!2505 = !{!2506, !2513}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2504, file: !463, line: 60, baseType: !2507, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 32)
!2508 = !DISubroutineType(types: !2509)
!2509 = !{!118, !2510}
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2512)
!2512 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !463, line: 48, flags: DIFlagFwdDecl)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2504, file: !463, line: 65, baseType: !2510, size: 32, offset: 32)
!2514 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2515, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!2515 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2516 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2517, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!2517 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2518 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2519, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2520, retainedTypes: !2528, splitDebugInlining: false, nameTableKind: None)
!2519 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2520 = !{!30, !2521}
!2521 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2522, line: 54, baseType: !32, size: 32, elements: !2523)
!2522 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2523 = !{!2524, !2525, !2526, !2527}
!2524 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2525 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2526 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2527 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2528 = !{!117, !315, !1933, !24, !2529, !22, !2535, !118, !986, !2550}
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 32)
!2530 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2522, line: 58, baseType: !2531)
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2522, line: 58, size: 64, elements: !2532)
!2532 = !{!2533}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2531, file: !2522, line: 58, baseType: !2534, size: 64)
!2534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 64, elements: !1558)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 32)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2522, line: 68, size: 128, elements: !2537)
!2537 = !{!2538, !2541, !2542, !2543}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2536, file: !2522, line: 69, baseType: !2539, size: 64)
!2539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2540, size: 64, elements: !256)
!2540 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2522, line: 61, baseType: !156)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2536, file: !2522, line: 70, baseType: !2540, size: 32, offset: 64)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2536, file: !2522, line: 71, baseType: !156, size: 32, offset: 96)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2536, file: !2522, line: 77, baseType: !2544, offset: 128)
!2544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2545, elements: !2548)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2522, line: 64, size: 32, elements: !2546)
!2546 = !{!2547}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2545, file: !2522, line: 65, baseType: !2540, size: 32)
!2548 = !{!2549}
!2549 = !DISubrange(count: 0)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!2551 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2552, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2553, retainedTypes: !2573, splitDebugInlining: false, nameTableKind: None)
!2552 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2553 = !{!2554, !2562}
!2554 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2555, line: 69, baseType: !32, size: 32, elements: !2556)
!2555 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2556 = !{!2557, !2558, !2559, !2560, !2561}
!2557 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2558 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2559 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2560 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2561 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2562 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2555, line: 56, baseType: !32, size: 32, elements: !2563)
!2563 = !{!2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572}
!2564 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2565 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2566 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2567 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2568 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2569 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2570 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2571 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2572 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2573 = !{!118, !2554, !2562, !2574, !276, !153, !2576, !2577, !144, !280, !133, !315, !117, !22, !32, !2579, !2580, !2581, !2582, !2583, !116, !2584, !2575, !2585, !2586, !2587, !2588}
!2574 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2555, line: 31, baseType: !2575)
!2575 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !116)
!2576 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !316, line: 329, baseType: !32)
!2577 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2555, line: 32, baseType: !2578)
!2578 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !214)
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!2582 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 32)
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 32)
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !316, line: 145, baseType: !118)
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 32)
!2589 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2590, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!2590 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2591 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2592, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2592 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2593 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2594, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2595, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!2594 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2595 = !{!2596, !30}
!2596 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2597, line: 27, baseType: !32, size: 32, elements: !2598)
!2597 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2598 = !{!2599, !2600, !2601, !2602, !2603}
!2599 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2600 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2601 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2602 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2603 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2604 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2605, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2606, retainedTypes: !2607, splitDebugInlining: false, nameTableKind: None)
!2605 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2606 = !{!725, !2596, !30}
!2607 = !{!891, !2608, !117, !118, !362, !156, !143, !2625}
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 32)
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !656, line: 426, baseType: !2610)
!2610 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 411, size: 28704, elements: !2611)
!2611 = !{!2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2610, file: !656, line: 413, baseType: !1651, size: 256)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2610, file: !656, line: 414, baseType: !1653, size: 768, offset: 256)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2610, file: !656, line: 415, baseType: !1651, size: 256, offset: 1024)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2610, file: !656, line: 416, baseType: !1653, size: 768, offset: 1280)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2610, file: !656, line: 417, baseType: !1651, size: 256, offset: 2048)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2610, file: !656, line: 418, baseType: !1653, size: 768, offset: 2304)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2610, file: !656, line: 419, baseType: !1651, size: 256, offset: 3072)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2610, file: !656, line: 420, baseType: !1653, size: 768, offset: 3328)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2610, file: !656, line: 421, baseType: !1651, size: 256, offset: 4096)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2610, file: !656, line: 422, baseType: !1664, size: 1792, offset: 4352)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2610, file: !656, line: 423, baseType: !1668, size: 1920, offset: 6144)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2610, file: !656, line: 424, baseType: !1673, size: 20608, offset: 8064)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2610, file: !656, line: 425, baseType: !452, size: 32, offset: 28672)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 32)
!2626 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2627)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2628)
!2628 = !{!2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2627, file: !656, line: 447, baseType: !660, size: 32)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2627, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2627, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2627, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2627, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2627, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2627, file: !656, line: 453, baseType: !1688, size: 96, offset: 192)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2627, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2627, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2627, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2627, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2627, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2627, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2627, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2627, file: !656, line: 461, baseType: !1697, size: 64, offset: 512)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2627, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2627, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2627, file: !656, line: 464, baseType: !1701, size: 128, offset: 640)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2627, file: !656, line: 465, baseType: !1703, size: 160, offset: 768)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2627, file: !656, line: 466, baseType: !1705, size: 160, offset: 928)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2627, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2650 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2651, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!2651 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2652 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2653, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2654, splitDebugInlining: false, nameTableKind: None)
!2653 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2654 = !{!117, !118, !22, !2655}
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2657)
!2657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2658)
!2658 = !{!2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2657, file: !656, line: 447, baseType: !660, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2657, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2657, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2657, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2657, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2657, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2657, file: !656, line: 453, baseType: !1688, size: 96, offset: 192)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2657, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2657, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2657, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2657, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2657, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2657, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2657, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2657, file: !656, line: 461, baseType: !1697, size: 64, offset: 512)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2657, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2657, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2657, file: !656, line: 464, baseType: !1701, size: 128, offset: 640)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2657, file: !656, line: 465, baseType: !1703, size: 160, offset: 768)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2657, file: !656, line: 466, baseType: !1705, size: 160, offset: 928)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2657, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2680 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2681, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2682, splitDebugInlining: false, nameTableKind: None)
!2681 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2682 = !{!2683, !117, !118}
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2684, size: 32)
!2684 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2685)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2686)
!2686 = !{!2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2685, file: !656, line: 447, baseType: !660, size: 32)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2685, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2685, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2685, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2685, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2685, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2685, file: !656, line: 453, baseType: !1688, size: 96, offset: 192)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2685, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2685, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2685, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2685, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2685, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2685, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2685, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2685, file: !656, line: 461, baseType: !1697, size: 64, offset: 512)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2685, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2685, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2685, file: !656, line: 464, baseType: !1701, size: 128, offset: 640)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2685, file: !656, line: 465, baseType: !1703, size: 160, offset: 768)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2685, file: !656, line: 466, baseType: !1705, size: 160, offset: 928)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2685, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2708 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2709, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2710, splitDebugInlining: false, nameTableKind: None)
!2709 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2710 = !{!2711, !156, !117, !118}
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 32)
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2713, line: 98, size: 256, elements: !2714)
!2713 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2714 = !{!2715, !2720, !2725, !2730, !2735, !2740, !2745, !2750}
!2715 = !DIDerivedType(tag: DW_TAG_member, scope: !2712, file: !2713, line: 99, baseType: !2716, size: 32)
!2716 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2712, file: !2713, line: 99, size: 32, elements: !2717)
!2717 = !{!2718, !2719}
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2716, file: !2713, line: 99, baseType: !156, size: 32)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2716, file: !2713, line: 99, baseType: !156, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_member, scope: !2712, file: !2713, line: 100, baseType: !2721, size: 32, offset: 32)
!2721 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2712, file: !2713, line: 100, size: 32, elements: !2722)
!2722 = !{!2723, !2724}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2721, file: !2713, line: 100, baseType: !156, size: 32)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2721, file: !2713, line: 100, baseType: !156, size: 32)
!2725 = !DIDerivedType(tag: DW_TAG_member, scope: !2712, file: !2713, line: 101, baseType: !2726, size: 32, offset: 64)
!2726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2712, file: !2713, line: 101, size: 32, elements: !2727)
!2727 = !{!2728, !2729}
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2726, file: !2713, line: 101, baseType: !156, size: 32)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2726, file: !2713, line: 101, baseType: !156, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, scope: !2712, file: !2713, line: 102, baseType: !2731, size: 32, offset: 96)
!2731 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2712, file: !2713, line: 102, size: 32, elements: !2732)
!2732 = !{!2733, !2734}
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2731, file: !2713, line: 102, baseType: !156, size: 32)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2731, file: !2713, line: 102, baseType: !156, size: 32)
!2735 = !DIDerivedType(tag: DW_TAG_member, scope: !2712, file: !2713, line: 103, baseType: !2736, size: 32, offset: 128)
!2736 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2712, file: !2713, line: 103, size: 32, elements: !2737)
!2737 = !{!2738, !2739}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2736, file: !2713, line: 103, baseType: !156, size: 32)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2736, file: !2713, line: 103, baseType: !156, size: 32)
!2740 = !DIDerivedType(tag: DW_TAG_member, scope: !2712, file: !2713, line: 104, baseType: !2741, size: 32, offset: 160)
!2741 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2712, file: !2713, line: 104, size: 32, elements: !2742)
!2742 = !{!2743, !2744}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2741, file: !2713, line: 104, baseType: !156, size: 32)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2741, file: !2713, line: 104, baseType: !156, size: 32)
!2745 = !DIDerivedType(tag: DW_TAG_member, scope: !2712, file: !2713, line: 105, baseType: !2746, size: 32, offset: 192)
!2746 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2712, file: !2713, line: 105, size: 32, elements: !2747)
!2747 = !{!2748, !2749}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2746, file: !2713, line: 105, baseType: !156, size: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2746, file: !2713, line: 105, baseType: !156, size: 32)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2712, file: !2713, line: 106, baseType: !156, size: 32, offset: 224)
!2751 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2752, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2595, retainedTypes: !2753, splitDebugInlining: false, nameTableKind: None)
!2752 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2753 = !{!2754, !117, !118, !2779, !2550, !156}
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 32)
!2755 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2756)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2757)
!2757 = !{!2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2756, file: !656, line: 447, baseType: !660, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2756, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2756, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2756, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2756, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2756, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2756, file: !656, line: 453, baseType: !1688, size: 96, offset: 192)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2756, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2756, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2756, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2756, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2756, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2756, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2756, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2756, file: !656, line: 461, baseType: !1697, size: 64, offset: 512)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2756, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2756, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2756, file: !656, line: 464, baseType: !1701, size: 128, offset: 640)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2756, file: !656, line: 465, baseType: !1703, size: 160, offset: 768)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2756, file: !656, line: 466, baseType: !1705, size: 160, offset: 928)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2756, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 32)
!2780 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2713, line: 141, baseType: !2781)
!2781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2713, line: 97, size: 256, elements: !2782)
!2782 = !{!2783}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2781, file: !2713, line: 107, baseType: !2784, size: 256)
!2784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2713, line: 98, size: 256, elements: !2785)
!2785 = !{!2786, !2791, !2796, !2801, !2806, !2811, !2816, !2821}
!2786 = !DIDerivedType(tag: DW_TAG_member, scope: !2784, file: !2713, line: 99, baseType: !2787, size: 32)
!2787 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2784, file: !2713, line: 99, size: 32, elements: !2788)
!2788 = !{!2789, !2790}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2787, file: !2713, line: 99, baseType: !156, size: 32)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2787, file: !2713, line: 99, baseType: !156, size: 32)
!2791 = !DIDerivedType(tag: DW_TAG_member, scope: !2784, file: !2713, line: 100, baseType: !2792, size: 32, offset: 32)
!2792 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2784, file: !2713, line: 100, size: 32, elements: !2793)
!2793 = !{!2794, !2795}
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2792, file: !2713, line: 100, baseType: !156, size: 32)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2792, file: !2713, line: 100, baseType: !156, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_member, scope: !2784, file: !2713, line: 101, baseType: !2797, size: 32, offset: 64)
!2797 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2784, file: !2713, line: 101, size: 32, elements: !2798)
!2798 = !{!2799, !2800}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2797, file: !2713, line: 101, baseType: !156, size: 32)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2797, file: !2713, line: 101, baseType: !156, size: 32)
!2801 = !DIDerivedType(tag: DW_TAG_member, scope: !2784, file: !2713, line: 102, baseType: !2802, size: 32, offset: 96)
!2802 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2784, file: !2713, line: 102, size: 32, elements: !2803)
!2803 = !{!2804, !2805}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2802, file: !2713, line: 102, baseType: !156, size: 32)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2802, file: !2713, line: 102, baseType: !156, size: 32)
!2806 = !DIDerivedType(tag: DW_TAG_member, scope: !2784, file: !2713, line: 103, baseType: !2807, size: 32, offset: 128)
!2807 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2784, file: !2713, line: 103, size: 32, elements: !2808)
!2808 = !{!2809, !2810}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2807, file: !2713, line: 103, baseType: !156, size: 32)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2807, file: !2713, line: 103, baseType: !156, size: 32)
!2811 = !DIDerivedType(tag: DW_TAG_member, scope: !2784, file: !2713, line: 104, baseType: !2812, size: 32, offset: 160)
!2812 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2784, file: !2713, line: 104, size: 32, elements: !2813)
!2813 = !{!2814, !2815}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2812, file: !2713, line: 104, baseType: !156, size: 32)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2812, file: !2713, line: 104, baseType: !156, size: 32)
!2816 = !DIDerivedType(tag: DW_TAG_member, scope: !2784, file: !2713, line: 105, baseType: !2817, size: 32, offset: 192)
!2817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2784, file: !2713, line: 105, size: 32, elements: !2818)
!2818 = !{!2819, !2820}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2817, file: !2713, line: 105, baseType: !156, size: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2817, file: !2713, line: 105, baseType: !156, size: 32)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2784, file: !2713, line: 106, baseType: !156, size: 32, offset: 224)
!2822 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2823, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1636, retainedTypes: !2824, splitDebugInlining: false, nameTableKind: None)
!2823 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2824 = !{!891, !362, !143, !156, !2825, !2842}
!2825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2826, size: 32)
!2826 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !656, line: 426, baseType: !2827)
!2827 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 411, size: 28704, elements: !2828)
!2828 = !{!2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2827, file: !656, line: 413, baseType: !1651, size: 256)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2827, file: !656, line: 414, baseType: !1653, size: 768, offset: 256)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2827, file: !656, line: 415, baseType: !1651, size: 256, offset: 1024)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2827, file: !656, line: 416, baseType: !1653, size: 768, offset: 1280)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2827, file: !656, line: 417, baseType: !1651, size: 256, offset: 2048)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2827, file: !656, line: 418, baseType: !1653, size: 768, offset: 2304)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2827, file: !656, line: 419, baseType: !1651, size: 256, offset: 3072)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2827, file: !656, line: 420, baseType: !1653, size: 768, offset: 3328)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2827, file: !656, line: 421, baseType: !1651, size: 256, offset: 4096)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2827, file: !656, line: 422, baseType: !1664, size: 1792, offset: 4352)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2827, file: !656, line: 423, baseType: !1668, size: 1920, offset: 6144)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2827, file: !656, line: 424, baseType: !1673, size: 20608, offset: 8064)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2827, file: !656, line: 425, baseType: !452, size: 32, offset: 28672)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2844)
!2844 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2845)
!2845 = !{!2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2844, file: !656, line: 447, baseType: !660, size: 32)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2844, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2844, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2844, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2844, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2844, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2844, file: !656, line: 453, baseType: !1688, size: 96, offset: 192)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2844, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2844, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2844, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2844, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2844, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2844, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2844, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2844, file: !656, line: 461, baseType: !1697, size: 64, offset: 512)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2844, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2844, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2844, file: !656, line: 464, baseType: !1701, size: 128, offset: 640)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2844, file: !656, line: 465, baseType: !1703, size: 160, offset: 768)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2844, file: !656, line: 466, baseType: !1705, size: 160, offset: 928)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2844, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2867 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2868, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !2869, splitDebugInlining: false, nameTableKind: None)
!2868 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2869 = !{!2870, !117, !118}
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 32)
!2871 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !656, line: 468, baseType: !2872)
!2872 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 445, size: 1120, elements: !2873)
!2873 = !{!2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894}
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2872, file: !656, line: 447, baseType: !660, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2872, file: !656, line: 448, baseType: !452, size: 32, offset: 32)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2872, file: !656, line: 449, baseType: !452, size: 32, offset: 64)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2872, file: !656, line: 450, baseType: !452, size: 32, offset: 96)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2872, file: !656, line: 451, baseType: !452, size: 32, offset: 128)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2872, file: !656, line: 452, baseType: !452, size: 32, offset: 160)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2872, file: !656, line: 453, baseType: !1688, size: 96, offset: 192)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2872, file: !656, line: 454, baseType: !452, size: 32, offset: 288)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2872, file: !656, line: 455, baseType: !452, size: 32, offset: 320)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2872, file: !656, line: 456, baseType: !452, size: 32, offset: 352)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2872, file: !656, line: 457, baseType: !452, size: 32, offset: 384)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2872, file: !656, line: 458, baseType: !452, size: 32, offset: 416)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2872, file: !656, line: 459, baseType: !452, size: 32, offset: 448)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2872, file: !656, line: 460, baseType: !452, size: 32, offset: 480)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2872, file: !656, line: 461, baseType: !1697, size: 64, offset: 512)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2872, file: !656, line: 462, baseType: !660, size: 32, offset: 576)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2872, file: !656, line: 463, baseType: !660, size: 32, offset: 608)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2872, file: !656, line: 464, baseType: !1701, size: 128, offset: 640)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2872, file: !656, line: 465, baseType: !1703, size: 160, offset: 768)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2872, file: !656, line: 466, baseType: !1705, size: 160, offset: 928)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2872, file: !656, line: 467, baseType: !452, size: 32, offset: 1088)
!2895 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2896, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2897, splitDebugInlining: false, nameTableKind: None)
!2896 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2897 = !{!135, !1239, !315, !1091, !2898, !144, !117}
!2898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2899, size: 32)
!2899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !144)
!2900 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2901, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2902, splitDebugInlining: false, nameTableKind: None)
!2901 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2902 = !{!2903}
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 32)
!2904 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !448, line: 370, baseType: !2905)
!2905 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 336, size: 1152, elements: !2906)
!2906 = !{!2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2905, file: !448, line: 338, baseType: !452, size: 32)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2905, file: !448, line: 339, baseType: !452, size: 32, offset: 32)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2905, file: !448, line: 340, baseType: !452, size: 32, offset: 64)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2905, file: !448, line: 341, baseType: !452, size: 32, offset: 96)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2905, file: !448, line: 342, baseType: !452, size: 32, offset: 128)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2905, file: !448, line: 343, baseType: !452, size: 32, offset: 160)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2905, file: !448, line: 344, baseType: !452, size: 32, offset: 192)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2905, file: !448, line: 345, baseType: !156, size: 32, offset: 224)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2905, file: !448, line: 346, baseType: !452, size: 32, offset: 256)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2905, file: !448, line: 347, baseType: !452, size: 32, offset: 288)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2905, file: !448, line: 348, baseType: !957, size: 64, offset: 320)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2905, file: !448, line: 349, baseType: !452, size: 32, offset: 384)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2905, file: !448, line: 350, baseType: !452, size: 32, offset: 416)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2905, file: !448, line: 351, baseType: !452, size: 32, offset: 448)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2905, file: !448, line: 352, baseType: !156, size: 32, offset: 480)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2905, file: !448, line: 353, baseType: !452, size: 32, offset: 512)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2905, file: !448, line: 354, baseType: !452, size: 32, offset: 544)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2905, file: !448, line: 355, baseType: !957, size: 64, offset: 576)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2905, file: !448, line: 356, baseType: !452, size: 32, offset: 640)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2905, file: !448, line: 357, baseType: !452, size: 32, offset: 672)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2905, file: !448, line: 358, baseType: !452, size: 32, offset: 704)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2905, file: !448, line: 359, baseType: !156, size: 32, offset: 736)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2905, file: !448, line: 360, baseType: !452, size: 32, offset: 768)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2905, file: !448, line: 361, baseType: !452, size: 32, offset: 800)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2905, file: !448, line: 362, baseType: !957, size: 64, offset: 832)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2905, file: !448, line: 363, baseType: !452, size: 32, offset: 896)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2905, file: !448, line: 364, baseType: !452, size: 32, offset: 928)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2905, file: !448, line: 365, baseType: !957, size: 64, offset: 960)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2905, file: !448, line: 366, baseType: !452, size: 32, offset: 1024)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2905, file: !448, line: 367, baseType: !452, size: 32, offset: 1056)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2905, file: !448, line: 368, baseType: !978, size: 32, offset: 1088)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2905, file: !448, line: 369, baseType: !452, size: 32, offset: 1120)
!2939 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2940, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2940 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2941 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2942, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2943, retainedTypes: !2959, splitDebugInlining: false, nameTableKind: None)
!2942 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!2943 = !{!2944, !2951, !2955}
!2944 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2945, line: 38, baseType: !32, size: 32, elements: !2946)
!2945 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2946 = !{!2947, !2948, !2949, !2950}
!2947 = !DIEnumerator(name: "HAL_OK", value: 0)
!2948 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2949 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2950 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2951 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !930, line: 184, baseType: !32, size: 32, elements: !2952)
!2952 = !{!2953, !2954}
!2953 = !DIEnumerator(name: "RESET", value: 0)
!2954 = !DIEnumerator(name: "SET", value: 1)
!2955 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !930, line: 190, baseType: !32, size: 32, elements: !2956)
!2956 = !{!2957, !2958}
!2957 = !DIEnumerator(name: "DISABLE", value: 0)
!2958 = !DIEnumerator(name: "ENABLE", value: 1)
!2959 = !{!117, !2960, !143, !156, !1552, !2996, !3002, !3013, !279, !3014, !213}
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 32)
!2961 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !448, line: 370, baseType: !2962)
!2962 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 336, size: 1152, elements: !2963)
!2963 = !{!2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2962, file: !448, line: 338, baseType: !452, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2962, file: !448, line: 339, baseType: !452, size: 32, offset: 32)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2962, file: !448, line: 340, baseType: !452, size: 32, offset: 64)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2962, file: !448, line: 341, baseType: !452, size: 32, offset: 96)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2962, file: !448, line: 342, baseType: !452, size: 32, offset: 128)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2962, file: !448, line: 343, baseType: !452, size: 32, offset: 160)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2962, file: !448, line: 344, baseType: !452, size: 32, offset: 192)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2962, file: !448, line: 345, baseType: !156, size: 32, offset: 224)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2962, file: !448, line: 346, baseType: !452, size: 32, offset: 256)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2962, file: !448, line: 347, baseType: !452, size: 32, offset: 288)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2962, file: !448, line: 348, baseType: !957, size: 64, offset: 320)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2962, file: !448, line: 349, baseType: !452, size: 32, offset: 384)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2962, file: !448, line: 350, baseType: !452, size: 32, offset: 416)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2962, file: !448, line: 351, baseType: !452, size: 32, offset: 448)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2962, file: !448, line: 352, baseType: !156, size: 32, offset: 480)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2962, file: !448, line: 353, baseType: !452, size: 32, offset: 512)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2962, file: !448, line: 354, baseType: !452, size: 32, offset: 544)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2962, file: !448, line: 355, baseType: !957, size: 64, offset: 576)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2962, file: !448, line: 356, baseType: !452, size: 32, offset: 640)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2962, file: !448, line: 357, baseType: !452, size: 32, offset: 672)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2962, file: !448, line: 358, baseType: !452, size: 32, offset: 704)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2962, file: !448, line: 359, baseType: !156, size: 32, offset: 736)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2962, file: !448, line: 360, baseType: !452, size: 32, offset: 768)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2962, file: !448, line: 361, baseType: !452, size: 32, offset: 800)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2962, file: !448, line: 362, baseType: !957, size: 64, offset: 832)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2962, file: !448, line: 363, baseType: !452, size: 32, offset: 896)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2962, file: !448, line: 364, baseType: !452, size: 32, offset: 928)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2962, file: !448, line: 365, baseType: !957, size: 64, offset: 960)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2962, file: !448, line: 366, baseType: !452, size: 32, offset: 1024)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2962, file: !448, line: 367, baseType: !452, size: 32, offset: 1056)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2962, file: !448, line: 368, baseType: !978, size: 32, offset: 1088)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2962, file: !448, line: 369, baseType: !452, size: 32, offset: 1120)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 32)
!2997 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !448, line: 330, baseType: !2998)
!2998 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 326, size: 64, elements: !2999)
!2999 = !{!3000, !3001}
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2998, file: !448, line: 328, baseType: !452, size: 32)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2998, file: !448, line: 329, baseType: !452, size: 32, offset: 32)
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 32)
!3003 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !448, line: 259, baseType: !3004)
!3004 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 250, size: 224, elements: !3005)
!3005 = !{!3006, !3007, !3008, !3009, !3010, !3011, !3012}
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3004, file: !448, line: 252, baseType: !452, size: 32)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3004, file: !448, line: 253, baseType: !452, size: 32, offset: 32)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3004, file: !448, line: 254, baseType: !452, size: 32, offset: 64)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3004, file: !448, line: 255, baseType: !452, size: 32, offset: 96)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3004, file: !448, line: 256, baseType: !452, size: 32, offset: 128)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3004, file: !448, line: 257, baseType: !452, size: 32, offset: 160)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3004, file: !448, line: 258, baseType: !452, size: 32, offset: 192)
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 32)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !448, line: 276, baseType: !3016)
!3016 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 265, size: 320, elements: !3017)
!3017 = !{!3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3016, file: !448, line: 267, baseType: !452, size: 32)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3016, file: !448, line: 268, baseType: !452, size: 32, offset: 32)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3016, file: !448, line: 269, baseType: !452, size: 32, offset: 64)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3016, file: !448, line: 270, baseType: !452, size: 32, offset: 96)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3016, file: !448, line: 271, baseType: !452, size: 32, offset: 128)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3016, file: !448, line: 272, baseType: !452, size: 32, offset: 160)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3016, file: !448, line: 273, baseType: !452, size: 32, offset: 192)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3016, file: !448, line: 274, baseType: !452, size: 32, offset: 224)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3016, file: !448, line: 275, baseType: !1228, size: 64, offset: 256)
!3027 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3028, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3029, retainedTypes: !3030, splitDebugInlining: false, nameTableKind: None)
!3028 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!3029 = !{!929}
!3030 = !{!3031, !156, !3039, !3045, !3056}
!3031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3032, size: 32)
!3032 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !656, line: 770, baseType: !3033)
!3033 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 764, size: 128, elements: !3034)
!3034 = !{!3035, !3036, !3037, !3038}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3033, file: !656, line: 766, baseType: !452, size: 32)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3033, file: !656, line: 767, baseType: !452, size: 32, offset: 32)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3033, file: !656, line: 768, baseType: !452, size: 32, offset: 64)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3033, file: !656, line: 769, baseType: !660, size: 32, offset: 96)
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 32)
!3040 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !448, line: 330, baseType: !3041)
!3041 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 326, size: 64, elements: !3042)
!3042 = !{!3043, !3044}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3041, file: !448, line: 328, baseType: !452, size: 32)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3041, file: !448, line: 329, baseType: !452, size: 32, offset: 32)
!3045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3046, size: 32)
!3046 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !448, line: 259, baseType: !3047)
!3047 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 250, size: 224, elements: !3048)
!3048 = !{!3049, !3050, !3051, !3052, !3053, !3054, !3055}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3047, file: !448, line: 252, baseType: !452, size: 32)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3047, file: !448, line: 253, baseType: !452, size: 32, offset: 32)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3047, file: !448, line: 254, baseType: !452, size: 32, offset: 64)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3047, file: !448, line: 255, baseType: !452, size: 32, offset: 96)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3047, file: !448, line: 256, baseType: !452, size: 32, offset: 128)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3047, file: !448, line: 257, baseType: !452, size: 32, offset: 160)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3047, file: !448, line: 258, baseType: !452, size: 32, offset: 192)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 32)
!3057 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !448, line: 370, baseType: !3058)
!3058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 336, size: 1152, elements: !3059)
!3059 = !{!3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3058, file: !448, line: 338, baseType: !452, size: 32)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3058, file: !448, line: 339, baseType: !452, size: 32, offset: 32)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3058, file: !448, line: 340, baseType: !452, size: 32, offset: 64)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3058, file: !448, line: 341, baseType: !452, size: 32, offset: 96)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3058, file: !448, line: 342, baseType: !452, size: 32, offset: 128)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3058, file: !448, line: 343, baseType: !452, size: 32, offset: 160)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3058, file: !448, line: 344, baseType: !452, size: 32, offset: 192)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3058, file: !448, line: 345, baseType: !156, size: 32, offset: 224)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3058, file: !448, line: 346, baseType: !452, size: 32, offset: 256)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3058, file: !448, line: 347, baseType: !452, size: 32, offset: 288)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3058, file: !448, line: 348, baseType: !957, size: 64, offset: 320)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3058, file: !448, line: 349, baseType: !452, size: 32, offset: 384)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3058, file: !448, line: 350, baseType: !452, size: 32, offset: 416)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3058, file: !448, line: 351, baseType: !452, size: 32, offset: 448)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3058, file: !448, line: 352, baseType: !156, size: 32, offset: 480)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3058, file: !448, line: 353, baseType: !452, size: 32, offset: 512)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3058, file: !448, line: 354, baseType: !452, size: 32, offset: 544)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3058, file: !448, line: 355, baseType: !957, size: 64, offset: 576)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3058, file: !448, line: 356, baseType: !452, size: 32, offset: 640)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3058, file: !448, line: 357, baseType: !452, size: 32, offset: 672)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3058, file: !448, line: 358, baseType: !452, size: 32, offset: 704)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3058, file: !448, line: 359, baseType: !156, size: 32, offset: 736)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3058, file: !448, line: 360, baseType: !452, size: 32, offset: 768)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3058, file: !448, line: 361, baseType: !452, size: 32, offset: 800)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3058, file: !448, line: 362, baseType: !957, size: 64, offset: 832)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3058, file: !448, line: 363, baseType: !452, size: 32, offset: 896)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3058, file: !448, line: 364, baseType: !452, size: 32, offset: 928)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3058, file: !448, line: 365, baseType: !957, size: 64, offset: 960)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3058, file: !448, line: 366, baseType: !452, size: 32, offset: 1024)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3058, file: !448, line: 367, baseType: !452, size: 32, offset: 1056)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3058, file: !448, line: 368, baseType: !978, size: 32, offset: 1088)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3058, file: !448, line: 369, baseType: !452, size: 32, offset: 1120)
!3092 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3093, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !3094, splitDebugInlining: false, nameTableKind: None)
!3093 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!3094 = !{!117, !315}
!3095 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3096, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3097, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!3096 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!3097 = !{!3098, !3105, !2596, !30}
!3098 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3099, line: 14, baseType: !32, size: 32, elements: !3100)
!3099 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3100 = !{!3101, !3102, !3103, !3104}
!3101 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3102 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3103 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3104 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3105 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3099, line: 42, baseType: !32, size: 32, elements: !3106)
!3106 = !{!3107, !3108, !3109, !3110, !3111, !3112}
!3107 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3108 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3109 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3110 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3111 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3112 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3113 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3114, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!3114 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!3115 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3116, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3117, retainedTypes: !3128, splitDebugInlining: false, nameTableKind: None)
!3116 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!3117 = !{!3118, !30}
!3118 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_poll_states_bits", file: !220, line: 5323, baseType: !32, size: 32, elements: !3119)
!3119 = !{!3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127}
!3120 = !DIEnumerator(name: "_POLL_STATE_NOT_READY", value: 0)
!3121 = !DIEnumerator(name: "_POLL_STATE_SIGNALED", value: 1)
!3122 = !DIEnumerator(name: "_POLL_STATE_SEM_AVAILABLE", value: 2)
!3123 = !DIEnumerator(name: "_POLL_STATE_DATA_AVAILABLE", value: 3)
!3124 = !DIEnumerator(name: "_POLL_STATE_CANCELLED", value: 4)
!3125 = !DIEnumerator(name: "_POLL_STATE_MSGQ_DATA_AVAILABLE", value: 5)
!3126 = !DIEnumerator(name: "_POLL_STATE_PIPE_DATA_AVAILABLE", value: 6)
!3127 = !DIEnumerator(name: "_POLL_NUM_STATES", value: 7)
!3128 = !{!117, !143, !3129, !1239, !3139, !146, !3140, !118, !3141, !426}
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 32)
!3130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_node", file: !3131, line: 25, size: 64, elements: !3132)
!3131 = !DIFile(filename: "zephyr/kernel/queue.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3132 = !{!3133, !3138}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3130, file: !3131, line: 26, baseType: !3134, size: 32)
!3134 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !417, line: 39, baseType: !3135)
!3135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !417, line: 35, size: 32, elements: !3136)
!3136 = !{!3137}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !3135, file: !417, line: 36, baseType: !426, size: 32)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3130, file: !3131, line: 27, baseType: !117, size: 32, offset: 32)
!3139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3134, size: 32)
!3141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 32)
!3142 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !3143)
!3143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !3144)
!3144 = !{!3145, !3151}
!3145 = !DIDerivedType(tag: DW_TAG_member, scope: !3143, file: !235, line: 38, baseType: !3146, size: 32)
!3146 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3143, file: !235, line: 38, size: 32, elements: !3147)
!3147 = !{!3148, !3150}
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3146, file: !235, line: 39, baseType: !3149, size: 32)
!3149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3143, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3146, file: !235, line: 40, baseType: !3149, size: 32)
!3151 = !DIDerivedType(tag: DW_TAG_member, scope: !3143, file: !235, line: 42, baseType: !3152, size: 32, offset: 32)
!3152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3143, file: !235, line: 42, size: 32, elements: !3153)
!3153 = !{!3154, !3155}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3152, file: !235, line: 43, baseType: !3149, size: 32)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3152, file: !235, line: 44, baseType: !3149, size: 32)
!3156 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3157, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !3158, splitDebugInlining: false, nameTableKind: None)
!3157 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!3158 = !{!22, !117, !118}
!3159 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3160, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!3160 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!3161 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3162, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !434, retainedTypes: !435, splitDebugInlining: false, nameTableKind: None)
!3162 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!3163 = !{!"Ubuntu clang version 14.0.6"}
!3164 = !{i32 7, !"Dwarf Version", i32 4}
!3165 = !{i32 2, !"Debug Info Version", i32 3}
!3166 = !{i32 1, !"wchar_size", i32 4}
!3167 = !{i32 1, !"min_enum_size", i32 4}
!3168 = !{i32 1, !"branch-target-enforcement", i32 0}
!3169 = !{i32 1, !"sign-return-address", i32 0}
!3170 = !{i32 1, !"sign-return-address-all", i32 0}
!3171 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3172 = !{i32 7, !"frame-pointer", i32 2}
!3173 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3174, file: !3174, line: 26, type: !365, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !2101)
!3174 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3175 = !DILocation(line: 28, column: 1, scope: !3173)
!3176 = !{i64 2154350033, i64 2154350053, i64 2154350116}
!3177 = !DILocation(line: 29, column: 1, scope: !3173)
!3178 = !{i64 2154350448, i64 2154350468, i64 2154350531}
!3179 = !DILocation(line: 30, column: 1, scope: !3173)
!3180 = !{i64 2154350867, i64 2154350887, i64 2154350950}
!3181 = !DILocation(line: 31, column: 1, scope: !3173)
!3182 = !{i64 2154351286, i64 2154351306, i64 2154351369}
!3183 = !DILocation(line: 33, column: 1, scope: !3173)
!3184 = !{i64 2154351578, i64 2154351598, i64 2154351661}
!3185 = !DILocation(line: 35, column: 1, scope: !3173)
!3186 = !{i64 2154351903, i64 2154351923, i64 2154351986}
!3187 = !DILocation(line: 50, column: 1, scope: !3173)
!3188 = !{i64 2154352330, i64 2154352350, i64 2154352413}
!3189 = !DILocation(line: 54, column: 1, scope: !3173)
!3190 = !{i64 2154352769, i64 2154352789, i64 2154352852}
!3191 = !DILocation(line: 61, column: 1, scope: !3173)
!3192 = !{i64 2154353086, i64 2154353106, i64 2154353169}
!3193 = !DILocation(line: 63, column: 1, scope: !3173)
!3194 = !{i64 2154353466, i64 2154353486, i64 2154353549}
!3195 = !DILocation(line: 64, column: 1, scope: !3173)
!3196 = !{i64 2154353988, i64 2154354008, i64 2154354071}
!3197 = !DILocation(line: 65, column: 1, scope: !3173)
!3198 = !{i64 2154354486, i64 2154354506, i64 2154354569}
!3199 = !DILocation(line: 66, column: 1, scope: !3173)
!3200 = !{i64 2154354968, i64 2154354988, i64 2154355051}
!3201 = !DILocation(line: 67, column: 1, scope: !3173)
!3202 = !{i64 2154355475, i64 2154355495, i64 2154355558}
!3203 = !DILocation(line: 68, column: 1, scope: !3173)
!3204 = !{i64 2154355963, i64 2154355983, i64 2154356046}
!3205 = !DILocation(line: 70, column: 1, scope: !3173)
!3206 = !{i64 2154360492, i64 2154360512, i64 2154360575}
!3207 = !DILocation(line: 71, column: 1, scope: !3173)
!3208 = !{i64 2154360934, i64 2154360954, i64 2154361017}
!3209 = !DILocation(line: 72, column: 1, scope: !3173)
!3210 = !{i64 2154361392, i64 2154361412, i64 2154361475}
!3211 = !DILocation(line: 79, column: 1, scope: !3173)
!3212 = !{i64 2154361846, i64 2154361866, i64 2154361929}
!3213 = !DILocation(line: 80, column: 1, scope: !3173)
!3214 = !{i64 2154362357, i64 2154362377, i64 2154362440}
!3215 = !DILocation(line: 82, column: 1, scope: !3173)
!3216 = !{i64 2154362848, i64 2154362868, i64 2154362931}
!3217 = !DILocation(line: 97, column: 1, scope: !3173)
!3218 = !{i64 2154363185, i64 2154363205, i64 2154363268}
!3219 = !DILocation(line: 99, column: 1, scope: !3173)
!3220 = !{i64 2154363403, i64 2154363423, i64 2154363486}
!3221 = !DILocation(line: 102, column: 1, scope: !3173)
!3222 = !{i64 2154363660, i64 2154363680, i64 2154363743}
!3223 = !DILocation(line: 105, column: 1, scope: !3173)
!3224 = !{i64 2154363900, i64 2154363920, i64 2154363983}
!3225 = !DILocation(line: 115, column: 1, scope: !3173)
!3226 = !{i64 2154364239, i64 2154364259, i64 2154364322}
!3227 = !DILocation(line: 118, column: 1, scope: !3173)
!3228 = !{i64 2154364583, i64 2154364603, i64 2154364666}
!3229 = !DILocation(line: 32, column: 1, scope: !3230)
!3230 = !DILexicalBlockFile(scope: !3173, file: !3231, discriminator: 0)
!3231 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3232 = !{i64 2154364939, i64 2154364959, i64 2154365022}
!3233 = !DILocation(line: 33, column: 1, scope: !3230)
!3234 = !{i64 2154365451, i64 2154365471, i64 2154365534}
!3235 = !DILocation(line: 53, column: 1, scope: !3230)
!3236 = !{i64 2154365959, i64 2154365979, i64 2154366042}
!3237 = !DILocation(line: 54, column: 1, scope: !3230)
!3238 = !{i64 2154366377, i64 2154366397, i64 2154366460}
!3239 = !DILocation(line: 55, column: 1, scope: !3230)
!3240 = !{i64 2154366795, i64 2154366815, i64 2154366878}
!3241 = !DILocation(line: 56, column: 1, scope: !3230)
!3242 = !{i64 2154367213, i64 2154367233, i64 2154367296}
!3243 = !DILocation(line: 57, column: 1, scope: !3230)
!3244 = !{i64 2154367631, i64 2154367651, i64 2154367714}
!3245 = !DILocation(line: 58, column: 1, scope: !3230)
!3246 = !{i64 2154368049, i64 2154368069, i64 2154368132}
!3247 = !DILocation(line: 59, column: 1, scope: !3230)
!3248 = !{i64 2154368467, i64 2154368487, i64 2154368550}
!3249 = !DILocation(line: 60, column: 1, scope: !3230)
!3250 = !{i64 2154368891, i64 2154368911, i64 2154368974}
!3251 = !DILocation(line: 61, column: 1, scope: !3230)
!3252 = !{i64 2154369208, i64 2154369228, i64 2154369291}
!3253 = !DILocation(line: 70, column: 1, scope: !3230)
!3254 = !{i64 2154369437, i64 2154369457, i64 2154369520}
!3255 = !DILocation(line: 72, column: 1, scope: !3230)
!3256 = !{i64 2154369769, i64 2154369789, i64 2154369852}
!3257 = !DILocation(line: 73, column: 1, scope: !3230)
!3258 = !{i64 2154374280, i64 2154374300, i64 2154374363}
!3259 = !DILocation(line: 74, column: 1, scope: !3230)
!3260 = !{i64 2154374730, i64 2154374750, i64 2154374813}
!3261 = !DILocation(line: 75, column: 1, scope: !3230)
!3262 = !{i64 2154375180, i64 2154375200, i64 2154375263}
!3263 = !DILocation(line: 76, column: 1, scope: !3230)
!3264 = !{i64 2154375630, i64 2154375650, i64 2154375713}
!3265 = !DILocation(line: 77, column: 1, scope: !3230)
!3266 = !{i64 2154376080, i64 2154376100, i64 2154376163}
!3267 = !DILocation(line: 78, column: 1, scope: !3230)
!3268 = !{i64 2154376530, i64 2154376550, i64 2154376613}
!3269 = !DILocation(line: 79, column: 1, scope: !3230)
!3270 = !{i64 2154376980, i64 2154377000, i64 2154377063}
!3271 = !DILocation(line: 80, column: 1, scope: !3230)
!3272 = !{i64 2154377433, i64 2154377453, i64 2154377516}
!3273 = !DILocation(line: 84, column: 1, scope: !3230)
!3274 = !{i64 2154377765, i64 2154377785, i64 2154377848}
!3275 = !DILocation(line: 91, column: 1, scope: !3230)
!3276 = !{i64 2154378162, i64 2154378182, i64 2154378245}
!3277 = !DILocation(line: 93, column: 1, scope: !3230)
!3278 = !{i64 2154378529, i64 2154378549, i64 2154378612}
!3279 = !DILocation(line: 106, column: 1, scope: !3230)
!3280 = !{i64 2154378799, i64 2154378819, i64 2154378882}
!3281 = !DILocation(line: 11, column: 1, scope: !3282)
!3282 = !DILexicalBlockFile(scope: !3173, file: !3283, discriminator: 0)
!3283 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3284 = distinct !DISubprogram(name: "blink0", scope: !218, file: !218, line: 90, type: !365, scopeLine: 91, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2101)
!3285 = !DILocation(line: 92, column: 2, scope: !3284)
!3286 = !DILocation(line: 93, column: 1, scope: !3284)
!3287 = distinct !DISubprogram(name: "blink", scope: !218, file: !218, line: 54, type: !3288, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3291)
!3288 = !DISubroutineType(types: !3289)
!3289 = !{null, !3290, !156, !156}
!3290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 32)
!3291 = !{!3292, !3293, !3294, !3295, !3298, !3299, !3300, !3307, !3308}
!3292 = !DILocalVariable(name: "led", arg: 1, scope: !3287, file: !218, line: 54, type: !3290)
!3293 = !DILocalVariable(name: "sleep_ms", arg: 2, scope: !3287, file: !218, line: 54, type: !156)
!3294 = !DILocalVariable(name: "id", arg: 3, scope: !3287, file: !218, line: 54, type: !156)
!3295 = !DILocalVariable(name: "spec", scope: !3287, file: !218, line: 56, type: !3296)
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3297, size: 32)
!3297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !401)
!3298 = !DILocalVariable(name: "cnt", scope: !3287, file: !218, line: 57, type: !118)
!3299 = !DILocalVariable(name: "ret", scope: !3287, file: !218, line: 58, type: !118)
!3300 = !DILocalVariable(name: "tx_data", scope: !3301, file: !218, line: 75, type: !3302)
!3301 = distinct !DILexicalBlock(scope: !3287, file: !218, line: 72, column: 12)
!3302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "printk_data_t", file: !218, line: 31, size: 96, elements: !3303)
!3303 = !{!3304, !3305, !3306}
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_reserved", scope: !3302, file: !218, line: 32, baseType: !117, size: 32)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "led", scope: !3302, file: !218, line: 33, baseType: !156, size: 32, offset: 32)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !3302, file: !218, line: 34, baseType: !156, size: 32, offset: 64)
!3307 = !DILocalVariable(name: "size", scope: !3301, file: !218, line: 77, type: !315)
!3308 = !DILocalVariable(name: "mem_ptr", scope: !3301, file: !218, line: 78, type: !1239)
!3309 = !DILocation(line: 0, scope: !3287)
!3310 = !DILocation(line: 60, column: 29, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3287, file: !218, line: 60, column: 6)
!3312 = !DILocation(line: 60, column: 7, scope: !3311)
!3313 = !DILocation(line: 60, column: 6, scope: !3287)
!3314 = !DILocation(line: 61, column: 51, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3311, file: !218, line: 60, column: 36)
!3316 = !DILocation(line: 61, column: 57, scope: !3315)
!3317 = !DILocation(line: 61, column: 3, scope: !3315)
!3318 = !DILocation(line: 62, column: 3, scope: !3315)
!3319 = !DILocation(line: 56, column: 42, scope: !3287)
!3320 = !DILocation(line: 65, column: 8, scope: !3287)
!3321 = !DILocation(line: 66, column: 10, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !3287, file: !218, line: 66, column: 6)
!3323 = !DILocation(line: 66, column: 6, scope: !3287)
!3324 = !DILocation(line: 73, column: 22, scope: !3301)
!3325 = !DILocation(line: 73, column: 34, scope: !3301)
!3326 = !DILocation(line: 73, column: 3, scope: !3301)
!3327 = !DILocation(line: 75, column: 3, scope: !3301)
!3328 = !DILocation(line: 75, column: 24, scope: !3301)
!3329 = !DILocation(line: 75, column: 34, scope: !3301)
!3330 = !DILocation(line: 0, scope: !3301)
!3331 = !DILocation(line: 78, column: 19, scope: !3301)
!3332 = !DILocation(line: 79, column: 3, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3334, file: !218, line: 79, column: 3)
!3334 = distinct !DILexicalBlock(scope: !3301, file: !218, line: 79, column: 3)
!3335 = !DILocation(line: 79, column: 3, scope: !3334)
!3336 = !DILocation(line: 68, column: 15, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3322, file: !218, line: 66, column: 16)
!3338 = !DILocation(line: 68, column: 9, scope: !3337)
!3339 = !DILocation(line: 68, column: 25, scope: !3337)
!3340 = !DILocation(line: 68, column: 20, scope: !3337)
!3341 = !DILocation(line: 67, column: 3, scope: !3337)
!3342 = !DILocation(line: 69, column: 3, scope: !3337)
!3343 = !DILocation(line: 79, column: 3, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3333, file: !218, line: 79, column: 3)
!3345 = !DILocation(line: 81, column: 3, scope: !3301)
!3346 = !DILocation(line: 83, column: 3, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3301, file: !218, line: 83, column: 3)
!3348 = !DILocation(line: 85, column: 3, scope: !3301)
!3349 = !DILocation(line: 86, column: 6, scope: !3301)
!3350 = !DILocation(line: 87, column: 2, scope: !3287)
!3351 = !DILocation(line: 73, column: 43, scope: !3301)
!3352 = distinct !{!3352, !3353, !3350}
!3353 = !DILocation(line: 72, column: 2, scope: !3287)
!3354 = !DILocation(line: 88, column: 1, scope: !3287)
!3355 = distinct !DISubprogram(name: "device_is_ready", scope: !3356, file: !3356, line: 47, type: !3357, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3359)
!3356 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!3357 = !DISubroutineType(types: !3358)
!3358 = !{!146, !127}
!3359 = !{!3360}
!3360 = !DILocalVariable(name: "dev", arg: 1, scope: !3355, file: !3356, line: 47, type: !127)
!3361 = !DILocation(line: 0, scope: !3355)
!3362 = !DILocation(line: 55, column: 2, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3355, file: !3356, line: 55, column: 2)
!3364 = !{i64 2154248621}
!3365 = !DILocation(line: 56, column: 9, scope: !3355)
!3366 = !DILocation(line: 56, column: 2, scope: !3355)
!3367 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !102, file: !102, line: 731, type: !3368, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3370)
!3368 = !DISubroutineType(types: !3369)
!3369 = !{!118, !3296, !155}
!3370 = !{!3371, !3372}
!3371 = !DILocalVariable(name: "spec", arg: 1, scope: !3367, file: !102, line: 731, type: !3296)
!3372 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !3367, file: !102, line: 732, type: !155)
!3373 = !DILocation(line: 0, scope: !3367)
!3374 = !DILocation(line: 734, column: 34, scope: !3367)
!3375 = !DILocation(line: 735, column: 13, scope: !3367)
!3376 = !DILocation(line: 736, column: 13, scope: !3367)
!3377 = !DILocation(line: 736, column: 7, scope: !3367)
!3378 = !DILocation(line: 736, column: 22, scope: !3367)
!3379 = !DILocation(line: 734, column: 9, scope: !3367)
!3380 = !DILocation(line: 734, column: 2, scope: !3367)
!3381 = distinct !DISubprogram(name: "gpio_pin_set", scope: !102, file: !102, line: 1287, type: !3382, scopeLine: 1289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3384)
!3382 = !DISubroutineType(types: !3383)
!3383 = !{!118, !127, !154, !118}
!3384 = !{!3385, !3386, !3387, !3388, !3390}
!3385 = !DILocalVariable(name: "port", arg: 1, scope: !3381, file: !102, line: 1287, type: !127)
!3386 = !DILocalVariable(name: "pin", arg: 2, scope: !3381, file: !102, line: 1287, type: !154)
!3387 = !DILocalVariable(name: "value", arg: 3, scope: !3381, file: !102, line: 1288, type: !118)
!3388 = !DILocalVariable(name: "cfg", scope: !3381, file: !102, line: 1290, type: !3389)
!3389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!3390 = !DILocalVariable(name: "data", scope: !3381, file: !102, line: 1292, type: !3391)
!3391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !207)
!3392 = !DILocation(line: 0, scope: !3381)
!3393 = !DILocation(line: 1291, column: 44, scope: !3381)
!3394 = !DILocation(line: 1295, column: 2, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3396, file: !102, line: 1295, column: 2)
!3396 = distinct !DILexicalBlock(scope: !3381, file: !102, line: 1295, column: 2)
!3397 = !DILocation(line: 1295, column: 2, scope: !3396)
!3398 = !DILocation(line: 1295, column: 2, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3395, file: !102, line: 1295, column: 2)
!3400 = !DILocation(line: 1293, column: 43, scope: !3381)
!3401 = !DILocation(line: 1298, column: 12, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3381, file: !102, line: 1298, column: 6)
!3403 = !DILocation(line: 1298, column: 19, scope: !3402)
!3404 = !DILocation(line: 1298, column: 6, scope: !3381)
!3405 = !DILocation(line: 1302, column: 9, scope: !3381)
!3406 = !DILocation(line: 1302, column: 2, scope: !3381)
!3407 = distinct !DISubprogram(name: "k_msleep", scope: !220, file: !220, line: 439, type: !3408, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3410)
!3408 = !DISubroutineType(types: !3409)
!3409 = !{!362, !362}
!3410 = !{!3411}
!3411 = !DILocalVariable(name: "ms", arg: 1, scope: !3407, file: !220, line: 439, type: !362)
!3412 = !DILocation(line: 0, scope: !3407)
!3413 = !DILocation(line: 441, column: 17, scope: !3407)
!3414 = !DILocation(line: 441, column: 9, scope: !3407)
!3415 = !DILocation(line: 441, column: 2, scope: !3407)
!3416 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3417, file: !3417, line: 403, type: !3418, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3420)
!3417 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3418 = !DISubroutineType(types: !3419)
!3419 = !{!213, !213}
!3420 = !{!3421}
!3421 = !DILocalVariable(name: "t", arg: 1, scope: !3416, file: !3417, line: 403, type: !213)
!3422 = !DILocation(line: 0, scope: !3416)
!3423 = !DILocalVariable(name: "t", arg: 1, scope: !3424, file: !3417, line: 102, type: !213)
!3424 = distinct !DISubprogram(name: "z_tmcvt", scope: !3417, file: !3417, line: 102, type: !3425, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3427)
!3425 = !DISubroutineType(types: !3426)
!3426 = !{!213, !213, !156, !156, !146, !146, !146, !146}
!3427 = !{!3423, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437}
!3428 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3424, file: !3417, line: 102, type: !156)
!3429 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3424, file: !3417, line: 103, type: !156)
!3430 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3424, file: !3417, line: 103, type: !146)
!3431 = !DILocalVariable(name: "result32", arg: 5, scope: !3424, file: !3417, line: 104, type: !146)
!3432 = !DILocalVariable(name: "round_up", arg: 6, scope: !3424, file: !3417, line: 104, type: !146)
!3433 = !DILocalVariable(name: "round_off", arg: 7, scope: !3424, file: !3417, line: 105, type: !146)
!3434 = !DILocalVariable(name: "mul_ratio", scope: !3424, file: !3417, line: 107, type: !146)
!3435 = !DILocalVariable(name: "div_ratio", scope: !3424, file: !3417, line: 109, type: !146)
!3436 = !DILocalVariable(name: "off", scope: !3424, file: !3417, line: 116, type: !213)
!3437 = !DILocalVariable(name: "rdivisor", scope: !3438, file: !3417, line: 119, type: !156)
!3438 = distinct !DILexicalBlock(scope: !3439, file: !3417, line: 118, column: 18)
!3439 = distinct !DILexicalBlock(scope: !3424, file: !3417, line: 118, column: 6)
!3440 = !DILocation(line: 0, scope: !3424, inlinedAt: !3441)
!3441 = distinct !DILocation(line: 406, column: 9, scope: !3416)
!3442 = !DILocation(line: 145, column: 13, scope: !3443, inlinedAt: !3441)
!3443 = distinct !DILexicalBlock(scope: !3444, file: !3417, line: 144, column: 10)
!3444 = distinct !DILexicalBlock(scope: !3445, file: !3417, line: 142, column: 7)
!3445 = distinct !DILexicalBlock(scope: !3446, file: !3417, line: 141, column: 24)
!3446 = distinct !DILexicalBlock(scope: !3447, file: !3417, line: 141, column: 13)
!3447 = distinct !DILexicalBlock(scope: !3424, file: !3417, line: 134, column: 6)
!3448 = !DILocation(line: 406, column: 2, scope: !3416)
!3449 = distinct !DISubprogram(name: "k_sleep", scope: !3450, file: !3450, line: 91, type: !3451, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3457)
!3450 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!3451 = !DISubroutineType(types: !3452)
!3452 = !{!362, !3453}
!3453 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !3454)
!3454 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !3455)
!3455 = !{!3456}
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3454, file: !114, line: 66, baseType: !113, size: 64)
!3457 = !{!3458}
!3458 = !DILocalVariable(name: "timeout", arg: 1, scope: !3449, file: !3450, line: 91, type: !3453)
!3459 = !DILocation(line: 0, scope: !3449)
!3460 = !DILocation(line: 99, column: 2, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3449, file: !3450, line: 99, column: 2)
!3462 = !{i64 2154068903}
!3463 = !DILocation(line: 100, column: 9, scope: !3449)
!3464 = !DILocation(line: 100, column: 2, scope: !3449)
!3465 = distinct !DISubprogram(name: "gpio_pin_set_raw", scope: !102, file: !102, line: 1247, type: !3382, scopeLine: 1249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3466)
!3466 = !{!3467, !3468, !3469, !3470, !3471}
!3467 = !DILocalVariable(name: "port", arg: 1, scope: !3465, file: !102, line: 1247, type: !127)
!3468 = !DILocalVariable(name: "pin", arg: 2, scope: !3465, file: !102, line: 1247, type: !154)
!3469 = !DILocalVariable(name: "value", arg: 3, scope: !3465, file: !102, line: 1248, type: !118)
!3470 = !DILocalVariable(name: "cfg", scope: !3465, file: !102, line: 1250, type: !3389)
!3471 = !DILocalVariable(name: "ret", scope: !3465, file: !102, line: 1252, type: !118)
!3472 = !DILocation(line: 0, scope: !3465)
!3473 = !DILocation(line: 1251, column: 44, scope: !3465)
!3474 = !DILocation(line: 1254, column: 2, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3476, file: !102, line: 1254, column: 2)
!3476 = distinct !DILexicalBlock(scope: !3465, file: !102, line: 1254, column: 2)
!3477 = !DILocation(line: 1254, column: 2, scope: !3476)
!3478 = !DILocation(line: 1254, column: 2, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3475, file: !102, line: 1254, column: 2)
!3480 = !DILocation(line: 1257, column: 12, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3465, file: !102, line: 1257, column: 6)
!3482 = !DILocation(line: 1257, column: 6, scope: !3465)
!3483 = !DILocation(line: 1258, column: 9, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3481, file: !102, line: 1257, column: 18)
!3485 = !DILocation(line: 1259, column: 2, scope: !3484)
!3486 = !DILocation(line: 1260, column: 9, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3481, file: !102, line: 1259, column: 9)
!3488 = !DILocation(line: 1263, column: 2, scope: !3465)
!3489 = distinct !DISubprogram(name: "gpio_port_set_bits_raw", scope: !3490, file: !3490, line: 174, type: !170, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3491)
!3490 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!3491 = !{!3492, !3493}
!3492 = !DILocalVariable(name: "port", arg: 1, scope: !3489, file: !3490, line: 174, type: !127)
!3493 = !DILocalVariable(name: "pins", arg: 2, scope: !3489, file: !3490, line: 174, type: !167)
!3494 = !DILocation(line: 0, scope: !3489)
!3495 = !DILocation(line: 183, column: 2, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3489, file: !3490, line: 183, column: 2)
!3497 = !{i64 2154359730}
!3498 = !DILocation(line: 184, column: 9, scope: !3489)
!3499 = !DILocation(line: 184, column: 2, scope: !3489)
!3500 = distinct !DISubprogram(name: "gpio_port_clear_bits_raw", scope: !3490, file: !3490, line: 198, type: !170, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3501)
!3501 = !{!3502, !3503}
!3502 = !DILocalVariable(name: "port", arg: 1, scope: !3500, file: !3490, line: 198, type: !127)
!3503 = !DILocalVariable(name: "pins", arg: 2, scope: !3500, file: !3490, line: 198, type: !167)
!3504 = !DILocation(line: 0, scope: !3500)
!3505 = !DILocation(line: 207, column: 2, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3500, file: !3490, line: 207, column: 2)
!3507 = !{i64 2154359798}
!3508 = !DILocation(line: 208, column: 9, scope: !3500)
!3509 = !DILocation(line: 208, column: 2, scope: !3500)
!3510 = distinct !DISubprogram(name: "z_impl_gpio_port_clear_bits_raw", scope: !102, file: !102, line: 1060, type: !170, scopeLine: 1062, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3511)
!3511 = !{!3512, !3513, !3514}
!3512 = !DILocalVariable(name: "port", arg: 1, scope: !3510, file: !102, line: 1060, type: !127)
!3513 = !DILocalVariable(name: "pins", arg: 2, scope: !3510, file: !102, line: 1061, type: !167)
!3514 = !DILocalVariable(name: "api", scope: !3510, file: !102, line: 1063, type: !119)
!3515 = !DILocation(line: 0, scope: !3510)
!3516 = !DILocation(line: 1064, column: 41, scope: !3510)
!3517 = !DILocation(line: 1066, column: 14, scope: !3510)
!3518 = !DILocation(line: 1066, column: 9, scope: !3510)
!3519 = !DILocation(line: 1066, column: 2, scope: !3510)
!3520 = distinct !DISubprogram(name: "z_impl_gpio_port_set_bits_raw", scope: !102, file: !102, line: 1022, type: !170, scopeLine: 1024, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3521)
!3521 = !{!3522, !3523, !3524}
!3522 = !DILocalVariable(name: "port", arg: 1, scope: !3520, file: !102, line: 1022, type: !127)
!3523 = !DILocalVariable(name: "pins", arg: 2, scope: !3520, file: !102, line: 1023, type: !167)
!3524 = !DILocalVariable(name: "api", scope: !3520, file: !102, line: 1025, type: !119)
!3525 = !DILocation(line: 0, scope: !3520)
!3526 = !DILocation(line: 1026, column: 41, scope: !3520)
!3527 = !DILocation(line: 1028, column: 14, scope: !3520)
!3528 = !DILocation(line: 1028, column: 9, scope: !3520)
!3529 = !DILocation(line: 1028, column: 2, scope: !3520)
!3530 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !3490, file: !3490, line: 49, type: !125, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3531)
!3531 = !{!3532, !3533, !3534}
!3532 = !DILocalVariable(name: "port", arg: 1, scope: !3530, file: !3490, line: 49, type: !127)
!3533 = !DILocalVariable(name: "pin", arg: 2, scope: !3530, file: !3490, line: 49, type: !154)
!3534 = !DILocalVariable(name: "flags", arg: 3, scope: !3530, file: !3490, line: 49, type: !155)
!3535 = !DILocation(line: 0, scope: !3530)
!3536 = !DILocation(line: 59, column: 2, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3530, file: !3490, line: 59, column: 2)
!3538 = !{i64 2154359390}
!3539 = !DILocation(line: 60, column: 9, scope: !3530)
!3540 = !DILocation(line: 60, column: 2, scope: !3530)
!3541 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !102, file: !102, line: 667, type: !125, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3542)
!3542 = !{!3543, !3544, !3545, !3546, !3547, !3548}
!3543 = !DILocalVariable(name: "port", arg: 1, scope: !3541, file: !102, line: 667, type: !127)
!3544 = !DILocalVariable(name: "pin", arg: 2, scope: !3541, file: !102, line: 668, type: !154)
!3545 = !DILocalVariable(name: "flags", arg: 3, scope: !3541, file: !102, line: 669, type: !155)
!3546 = !DILocalVariable(name: "api", scope: !3541, file: !102, line: 671, type: !119)
!3547 = !DILocalVariable(name: "cfg", scope: !3541, file: !102, line: 673, type: !3389)
!3548 = !DILocalVariable(name: "data", scope: !3541, file: !102, line: 675, type: !212)
!3549 = !DILocation(line: 0, scope: !3541)
!3550 = !DILocation(line: 672, column: 41, scope: !3541)
!3551 = !DILocation(line: 674, column: 44, scope: !3541)
!3552 = !DILocation(line: 676, column: 36, scope: !3541)
!3553 = !DILocation(line: 678, column: 2, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3555, file: !102, line: 678, column: 2)
!3555 = distinct !DILexicalBlock(scope: !3541, file: !102, line: 678, column: 2)
!3556 = !DILocation(line: 678, column: 2, scope: !3555)
!3557 = !DILocation(line: 678, column: 2, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3554, file: !102, line: 678, column: 2)
!3559 = !DILocation(line: 681, column: 2, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3561, file: !102, line: 681, column: 2)
!3561 = distinct !DILexicalBlock(scope: !3541, file: !102, line: 681, column: 2)
!3562 = !DILocation(line: 681, column: 2, scope: !3561)
!3563 = !DILocation(line: 681, column: 2, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3560, file: !102, line: 681, column: 2)
!3565 = !DILocation(line: 685, column: 2, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3567, file: !102, line: 685, column: 2)
!3567 = distinct !DILexicalBlock(scope: !3541, file: !102, line: 685, column: 2)
!3568 = !DILocation(line: 685, column: 2, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3566, file: !102, line: 685, column: 2)
!3570 = !DILocation(line: 689, column: 2, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3572, file: !102, line: 689, column: 2)
!3572 = distinct !DILexicalBlock(scope: !3541, file: !102, line: 689, column: 2)
!3573 = !DILocation(line: 689, column: 2, scope: !3574)
!3574 = distinct !DILexicalBlock(scope: !3571, file: !102, line: 689, column: 2)
!3575 = !DILocation(line: 692, column: 2, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3577, file: !102, line: 692, column: 2)
!3577 = distinct !DILexicalBlock(scope: !3541, file: !102, line: 692, column: 2)
!3578 = !DILocation(line: 692, column: 2, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3576, file: !102, line: 692, column: 2)
!3580 = !DILocation(line: 696, column: 2, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3582, file: !102, line: 696, column: 2)
!3582 = distinct !DILexicalBlock(scope: !3541, file: !102, line: 696, column: 2)
!3583 = !DILocation(line: 696, column: 2, scope: !3582)
!3584 = !DILocation(line: 696, column: 2, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3581, file: !102, line: 696, column: 2)
!3586 = !DILocation(line: 701, column: 6, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3541, file: !102, line: 700, column: 6)
!3588 = !DILocation(line: 708, column: 2, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3590, file: !102, line: 708, column: 2)
!3590 = distinct !DILexicalBlock(scope: !3541, file: !102, line: 708, column: 2)
!3591 = !DILocation(line: 708, column: 2, scope: !3590)
!3592 = !DILocation(line: 708, column: 2, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3589, file: !102, line: 708, column: 2)
!3594 = !DILocation(line: 711, column: 13, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3541, file: !102, line: 711, column: 6)
!3596 = !DILocation(line: 711, column: 32, scope: !3595)
!3597 = !DILocation(line: 711, column: 6, scope: !3541)
!3598 = !DILocation(line: 712, column: 9, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3595, file: !102, line: 711, column: 38)
!3600 = !DILocation(line: 712, column: 16, scope: !3599)
!3601 = !DILocation(line: 713, column: 2, scope: !3599)
!3602 = !DILocation(line: 714, column: 19, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3595, file: !102, line: 713, column: 9)
!3604 = !DILocation(line: 714, column: 9, scope: !3603)
!3605 = !DILocation(line: 714, column: 16, scope: !3603)
!3606 = !DILocation(line: 706, column: 8, scope: !3541)
!3607 = !DILocation(line: 717, column: 14, scope: !3541)
!3608 = !DILocation(line: 717, column: 9, scope: !3541)
!3609 = !DILocation(line: 717, column: 2, scope: !3541)
!3610 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !3357, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3611)
!3611 = !{!3612}
!3612 = !DILocalVariable(name: "dev", arg: 1, scope: !3610, file: !130, line: 730, type: !127)
!3613 = !DILocation(line: 0, scope: !3610)
!3614 = !DILocation(line: 732, column: 9, scope: !3610)
!3615 = !DILocation(line: 732, column: 2, scope: !3610)
!3616 = distinct !DISubprogram(name: "blink1", scope: !218, file: !218, line: 95, type: !365, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2101)
!3617 = !DILocation(line: 97, column: 2, scope: !3616)
!3618 = !DILocation(line: 98, column: 1, scope: !3616)
!3619 = distinct !DISubprogram(name: "uart_out", scope: !218, file: !218, line: 100, type: !365, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3620)
!3620 = !{!3621, !3624}
!3621 = !DILocalVariable(name: "rx_data", scope: !3622, file: !218, line: 103, type: !3623)
!3622 = distinct !DILexicalBlock(scope: !3619, file: !218, line: 102, column: 12)
!3623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3302, size: 32)
!3624 = !DILocalVariable(name: "ret", scope: !3625, file: !218, line: 103, type: !117)
!3625 = distinct !DILexicalBlock(scope: !3622, file: !218, line: 103, column: 35)
!3626 = !DILocation(line: 102, column: 2, scope: !3619)
!3627 = !DILocation(line: 103, column: 35, scope: !3625)
!3628 = !DILocation(line: 0, scope: !3625)
!3629 = !DILocation(line: 0, scope: !3622)
!3630 = !DILocation(line: 106, column: 19, scope: !3622)
!3631 = !DILocation(line: 106, column: 33, scope: !3622)
!3632 = !DILocation(line: 105, column: 3, scope: !3622)
!3633 = !DILocation(line: 107, column: 3, scope: !3622)
!3634 = distinct !{!3634, !3626, !3635}
!3635 = !DILocation(line: 108, column: 2, scope: !3619)
!3636 = distinct !DISubprogram(name: "k_queue_get", scope: !3450, file: !3450, line: 649, type: !3637, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3640)
!3637 = !DISubroutineType(types: !3638)
!3638 = !{!117, !3639, !3453}
!3639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 32)
!3640 = !{!3641, !3642}
!3641 = !DILocalVariable(name: "queue", arg: 1, scope: !3636, file: !3450, line: 649, type: !3639)
!3642 = !DILocalVariable(name: "timeout", arg: 2, scope: !3636, file: !3450, line: 649, type: !3453)
!3643 = !DILocation(line: 0, scope: !3636)
!3644 = !DILocation(line: 658, column: 2, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3636, file: !3450, line: 658, column: 2)
!3646 = !{i64 2154071147}
!3647 = !DILocation(line: 659, column: 9, scope: !3636)
!3648 = !DILocation(line: 659, column: 2, scope: !3636)
!3649 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !437, file: !437, line: 45, type: !439, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3650)
!3650 = !{!3651}
!3651 = !DILocalVariable(name: "c", arg: 1, scope: !3649, file: !437, line: 45, type: !118)
!3652 = !DILocation(line: 0, scope: !3649)
!3653 = !DILocation(line: 50, column: 2, scope: !3649)
!3654 = distinct !DISubprogram(name: "__printk_hook_install", scope: !437, file: !437, line: 63, type: !3655, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3657)
!3655 = !DISubroutineType(types: !3656)
!3656 = !{null, !438}
!3657 = !{!3658}
!3658 = !DILocalVariable(name: "fn", arg: 1, scope: !3654, file: !437, line: 63, type: !438)
!3659 = !DILocation(line: 0, scope: !3654)
!3660 = !DILocation(line: 65, column: 12, scope: !3654)
!3661 = !DILocation(line: 66, column: 1, scope: !3654)
!3662 = distinct !DISubprogram(name: "__printk_get_hook", scope: !437, file: !437, line: 76, type: !3663, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !2101)
!3663 = !DISubroutineType(types: !3664)
!3664 = !{!117}
!3665 = !DILocation(line: 78, column: 9, scope: !3662)
!3666 = !DILocation(line: 78, column: 2, scope: !3662)
!3667 = distinct !DISubprogram(name: "vprintk", scope: !437, file: !437, line: 113, type: !3668, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3677)
!3668 = !DISubroutineType(types: !3669)
!3669 = !{null, !133, !3670}
!3670 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3671, line: 99, baseType: !3672)
!3671 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3672 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3671, line: 40, baseType: !3673)
!3673 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !437, baseType: !3674)
!3674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3675)
!3675 = !{!3676}
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3674, file: !437, line: 79, baseType: !117, size: 32)
!3677 = !{!3678, !3679, !3680}
!3678 = !DILocalVariable(name: "fmt", arg: 1, scope: !3667, file: !437, line: 113, type: !133)
!3679 = !DILocalVariable(name: "ap", arg: 2, scope: !3667, file: !437, line: 113, type: !3670)
!3680 = !DILocalVariable(name: "ctx", scope: !3681, file: !437, line: 121, type: !3683)
!3681 = distinct !DILexicalBlock(scope: !3682, file: !437, line: 120, column: 27)
!3682 = distinct !DILexicalBlock(scope: !3667, file: !437, line: 120, column: 6)
!3683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !437, line: 81, size: 32, elements: !3684)
!3684 = !{!3685, !3686}
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3683, file: !437, line: 85, baseType: !32, size: 32)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3683, file: !437, line: 86, baseType: !3687, offset: 32)
!3687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, elements: !2548)
!3688 = !DILocation(line: 0, scope: !3667)
!3689 = !DILocation(line: 148, column: 3, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3682, file: !437, line: 138, column: 9)
!3691 = !DILocation(line: 155, column: 1, scope: !3667)
!3692 = distinct !DISubprogram(name: "char_out", scope: !437, file: !437, line: 107, type: !3693, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3695)
!3693 = !DISubroutineType(types: !3694)
!3694 = !{!118, !118, !117}
!3695 = !{!3696, !3697}
!3696 = !DILocalVariable(name: "c", arg: 1, scope: !3692, file: !437, line: 107, type: !118)
!3697 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3692, file: !437, line: 107, type: !117)
!3698 = !DILocation(line: 0, scope: !3692)
!3699 = !DILocation(line: 110, column: 9, scope: !3692)
!3700 = !DILocation(line: 110, column: 2, scope: !3692)
!3701 = distinct !DISubprogram(name: "cbvprintf", scope: !3702, file: !3702, line: 739, type: !3703, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3709)
!3702 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3703 = !DISubroutineType(types: !3704)
!3704 = !{!118, !3705, !117, !133, !3670}
!3705 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3702, line: 297, baseType: !3706)
!3706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3707, size: 32)
!3707 = !DISubroutineType(types: !3708)
!3708 = !{!118, null}
!3709 = !{!3710, !3711, !3712, !3713}
!3710 = !DILocalVariable(name: "out", arg: 1, scope: !3701, file: !3702, line: 739, type: !3705)
!3711 = !DILocalVariable(name: "ctx", arg: 2, scope: !3701, file: !3702, line: 739, type: !117)
!3712 = !DILocalVariable(name: "format", arg: 3, scope: !3701, file: !3702, line: 739, type: !133)
!3713 = !DILocalVariable(name: "ap", arg: 4, scope: !3701, file: !3702, line: 739, type: !3670)
!3714 = !DILocation(line: 0, scope: !3701)
!3715 = !DILocation(line: 741, column: 9, scope: !3701)
!3716 = !DILocation(line: 741, column: 2, scope: !3701)
!3717 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !437, file: !437, line: 157, type: !3718, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3720)
!3718 = !DISubroutineType(types: !3719)
!3719 = !{null, !1239, !315}
!3720 = !{!3721, !3722, !3723}
!3721 = !DILocalVariable(name: "c", arg: 1, scope: !3717, file: !437, line: 157, type: !1239)
!3722 = !DILocalVariable(name: "n", arg: 2, scope: !3717, file: !437, line: 157, type: !315)
!3723 = !DILocalVariable(name: "i", scope: !3717, file: !437, line: 159, type: !315)
!3724 = !DILocation(line: 0, scope: !3717)
!3725 = !DILocation(line: 164, column: 16, scope: !3726)
!3726 = distinct !DILexicalBlock(scope: !3727, file: !437, line: 164, column: 2)
!3727 = distinct !DILexicalBlock(scope: !3717, file: !437, line: 164, column: 2)
!3728 = !DILocation(line: 164, column: 2, scope: !3727)
!3729 = !DILocation(line: 165, column: 3, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3726, file: !437, line: 164, column: 26)
!3731 = !DILocation(line: 165, column: 13, scope: !3730)
!3732 = !DILocation(line: 164, column: 22, scope: !3726)
!3733 = distinct !{!3733, !3728, !3734}
!3734 = !DILocation(line: 166, column: 2, scope: !3727)
!3735 = !DILocation(line: 171, column: 1, scope: !3717)
!3736 = distinct !DISubprogram(name: "printk", scope: !437, file: !437, line: 203, type: !3737, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3739)
!3737 = !DISubroutineType(types: !3738)
!3738 = !{null, !133, null}
!3739 = !{!3740, !3741}
!3740 = !DILocalVariable(name: "fmt", arg: 1, scope: !3736, file: !437, line: 203, type: !133)
!3741 = !DILocalVariable(name: "ap", scope: !3736, file: !437, line: 205, type: !3670)
!3742 = !DILocation(line: 0, scope: !3736)
!3743 = !DILocation(line: 205, column: 2, scope: !3736)
!3744 = !DILocation(line: 205, column: 10, scope: !3736)
!3745 = !DILocation(line: 207, column: 2, scope: !3736)
!3746 = !DILocation(line: 209, column: 2, scope: !3736)
!3747 = !DILocation(line: 211, column: 2, scope: !3736)
!3748 = !DILocation(line: 212, column: 1, scope: !3736)
!3749 = distinct !DISubprogram(name: "snprintk", scope: !437, file: !437, line: 239, type: !3750, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3752)
!3750 = !DISubroutineType(types: !3751)
!3751 = !{!118, !1239, !315, !133, null}
!3752 = !{!3753, !3754, !3755, !3756, !3757}
!3753 = !DILocalVariable(name: "str", arg: 1, scope: !3749, file: !437, line: 239, type: !1239)
!3754 = !DILocalVariable(name: "size", arg: 2, scope: !3749, file: !437, line: 239, type: !315)
!3755 = !DILocalVariable(name: "fmt", arg: 3, scope: !3749, file: !437, line: 239, type: !133)
!3756 = !DILocalVariable(name: "ap", scope: !3749, file: !437, line: 241, type: !3670)
!3757 = !DILocalVariable(name: "ret", scope: !3749, file: !437, line: 242, type: !118)
!3758 = !DILocation(line: 0, scope: !3749)
!3759 = !DILocation(line: 241, column: 2, scope: !3749)
!3760 = !DILocation(line: 241, column: 10, scope: !3749)
!3761 = !DILocation(line: 244, column: 2, scope: !3749)
!3762 = !DILocation(line: 245, column: 8, scope: !3749)
!3763 = !DILocation(line: 246, column: 2, scope: !3749)
!3764 = !DILocation(line: 249, column: 1, scope: !3749)
!3765 = !DILocation(line: 248, column: 2, scope: !3749)
!3766 = distinct !DISubprogram(name: "vsnprintk", scope: !437, file: !437, line: 251, type: !3767, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3769)
!3767 = !DISubroutineType(types: !3768)
!3768 = !{!118, !1239, !315, !133, !3670}
!3769 = !{!3770, !3771, !3772, !3773, !3774}
!3770 = !DILocalVariable(name: "str", arg: 1, scope: !3766, file: !437, line: 251, type: !1239)
!3771 = !DILocalVariable(name: "size", arg: 2, scope: !3766, file: !437, line: 251, type: !315)
!3772 = !DILocalVariable(name: "fmt", arg: 3, scope: !3766, file: !437, line: 251, type: !133)
!3773 = !DILocalVariable(name: "ap", arg: 4, scope: !3766, file: !437, line: 251, type: !3670)
!3774 = !DILocalVariable(name: "ctx", scope: !3766, file: !437, line: 253, type: !3775)
!3775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !437, line: 217, size: 96, elements: !3776)
!3776 = !{!3777, !3778, !3779}
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3775, file: !437, line: 218, baseType: !1239, size: 32)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3775, file: !437, line: 219, baseType: !118, size: 32, offset: 32)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3775, file: !437, line: 220, baseType: !118, size: 32, offset: 64)
!3780 = !DILocation(line: 0, scope: !3766)
!3781 = !DILocation(line: 253, column: 2, scope: !3766)
!3782 = !DILocation(line: 253, column: 21, scope: !3766)
!3783 = !DILocation(line: 253, column: 27, scope: !3766)
!3784 = !DILocation(line: 255, column: 2, scope: !3766)
!3785 = !DILocation(line: 257, column: 10, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3766, file: !437, line: 257, column: 6)
!3787 = !DILocation(line: 257, column: 22, scope: !3786)
!3788 = !DILocation(line: 257, column: 16, scope: !3786)
!3789 = !DILocation(line: 257, column: 6, scope: !3766)
!3790 = !DILocation(line: 258, column: 3, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3786, file: !437, line: 257, column: 27)
!3792 = !DILocation(line: 258, column: 18, scope: !3791)
!3793 = !DILocation(line: 259, column: 2, scope: !3791)
!3794 = !DILocation(line: 262, column: 1, scope: !3766)
!3795 = !DILocation(line: 261, column: 2, scope: !3766)
!3796 = distinct !DISubprogram(name: "str_out", scope: !437, file: !437, line: 223, type: !3797, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !432, retainedNodes: !3800)
!3797 = !DISubroutineType(types: !3798)
!3798 = !{!118, !118, !3799}
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3775, size: 32)
!3800 = !{!3801, !3802}
!3801 = !DILocalVariable(name: "c", arg: 1, scope: !3796, file: !437, line: 223, type: !118)
!3802 = !DILocalVariable(name: "ctx", arg: 2, scope: !3796, file: !437, line: 223, type: !3799)
!3803 = !DILocation(line: 0, scope: !3796)
!3804 = !DILocation(line: 225, column: 11, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3796, file: !437, line: 225, column: 6)
!3806 = !DILocation(line: 225, column: 15, scope: !3805)
!3807 = !DILocation(line: 0, scope: !3805)
!3808 = !DILocation(line: 225, column: 23, scope: !3805)
!3809 = !DILocation(line: 225, column: 45, scope: !3805)
!3810 = !DILocation(line: 225, column: 37, scope: !3805)
!3811 = !DILocation(line: 225, column: 6, scope: !3796)
!3812 = !DILocation(line: 226, column: 8, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3805, file: !437, line: 225, column: 50)
!3814 = !DILocation(line: 226, column: 13, scope: !3813)
!3815 = !DILocation(line: 227, column: 3, scope: !3813)
!3816 = !DILocation(line: 230, column: 29, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3796, file: !437, line: 230, column: 6)
!3818 = !DILocation(line: 230, column: 17, scope: !3817)
!3819 = !DILocation(line: 230, column: 6, scope: !3796)
!3820 = !DILocation(line: 231, column: 22, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3817, file: !437, line: 230, column: 34)
!3822 = !DILocation(line: 231, column: 3, scope: !3821)
!3823 = !DILocation(line: 231, column: 26, scope: !3821)
!3824 = !DILocation(line: 232, column: 2, scope: !3821)
!3825 = !DILocation(line: 233, column: 28, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3817, file: !437, line: 232, column: 9)
!3827 = !DILocation(line: 233, column: 22, scope: !3826)
!3828 = !DILocation(line: 233, column: 3, scope: !3826)
!3829 = !DILocation(line: 233, column: 26, scope: !3826)
!3830 = !DILocation(line: 237, column: 1, scope: !3796)
!3831 = distinct !DISubprogram(name: "z_thread_entry", scope: !3832, file: !3832, line: 30, type: !3833, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !3835)
!3832 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3833 = !DISubroutineType(types: !3834)
!3834 = !{null, !352, !117, !117, !117}
!3835 = !{!3836, !3837, !3838, !3839}
!3836 = !DILocalVariable(name: "entry", arg: 1, scope: !3831, file: !3832, line: 30, type: !352)
!3837 = !DILocalVariable(name: "p1", arg: 2, scope: !3831, file: !3832, line: 31, type: !117)
!3838 = !DILocalVariable(name: "p2", arg: 3, scope: !3831, file: !3832, line: 31, type: !117)
!3839 = !DILocalVariable(name: "p3", arg: 4, scope: !3831, file: !3832, line: 31, type: !117)
!3840 = !DILocation(line: 0, scope: !3831)
!3841 = !DILocation(line: 36, column: 2, scope: !3831)
!3842 = !DILocation(line: 38, column: 17, scope: !3831)
!3843 = !DILocation(line: 38, column: 2, scope: !3831)
!3844 = !DILocation(line: 45, column: 2, scope: !3831)
!3845 = distinct !DISubprogram(name: "k_current_get", scope: !220, file: !220, line: 530, type: !3846, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !2101)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{!3848}
!3848 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !3849)
!3849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3850, size: 32)
!3850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !3851)
!3851 = !{!3852, !3910, !3922, !3923, !3924, !3925, !3931, !3946}
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3850, file: !225, line: 247, baseType: !3853, size: 384)
!3853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !3854)
!3854 = !{!3855, !3879, !3886, !3887, !3888, !3897, !3898, !3899}
!3855 = !DIDerivedType(tag: DW_TAG_member, scope: !3853, file: !225, line: 60, baseType: !3856, size: 64)
!3856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3853, file: !225, line: 60, size: 64, elements: !3857)
!3857 = !{!3858, !3873}
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3856, file: !225, line: 61, baseType: !3859, size: 64)
!3859 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !3860)
!3860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !3861)
!3861 = !{!3862, !3868}
!3862 = !DIDerivedType(tag: DW_TAG_member, scope: !3860, file: !235, line: 38, baseType: !3863, size: 32)
!3863 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3860, file: !235, line: 38, size: 32, elements: !3864)
!3864 = !{!3865, !3867}
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3863, file: !235, line: 39, baseType: !3866, size: 32)
!3866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 32)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3863, file: !235, line: 40, baseType: !3866, size: 32)
!3868 = !DIDerivedType(tag: DW_TAG_member, scope: !3860, file: !235, line: 42, baseType: !3869, size: 32, offset: 32)
!3869 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3860, file: !235, line: 42, size: 32, elements: !3870)
!3870 = !{!3871, !3872}
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3869, file: !235, line: 43, baseType: !3866, size: 32)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3869, file: !235, line: 44, baseType: !3866, size: 32)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3856, file: !225, line: 62, baseType: !3874, size: 64)
!3874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !3875)
!3875 = !{!3876}
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3874, file: !251, line: 50, baseType: !3877, size: 64)
!3877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3878, size: 64, elements: !256)
!3878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3874, size: 32)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3853, file: !225, line: 68, baseType: !3880, size: 32, offset: 64)
!3880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3881, size: 32)
!3881 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !3882)
!3882 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !3883)
!3883 = !{!3884}
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3882, file: !261, line: 232, baseType: !3885, size: 64)
!3885 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !3860)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3853, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3853, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!3888 = !DIDerivedType(tag: DW_TAG_member, scope: !3853, file: !225, line: 90, baseType: !3889, size: 16, offset: 112)
!3889 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3853, file: !225, line: 90, size: 16, elements: !3890)
!3890 = !{!3891, !3896}
!3891 = !DIDerivedType(tag: DW_TAG_member, scope: !3889, file: !225, line: 91, baseType: !3892, size: 16)
!3892 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3889, file: !225, line: 91, size: 16, elements: !3893)
!3893 = !{!3894, !3895}
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3892, file: !225, line: 96, baseType: !275, size: 8)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3892, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3889, file: !225, line: 100, baseType: !279, size: 16)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3853, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3853, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3853, file: !225, line: 131, baseType: !3900, size: 192, offset: 192)
!3900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !3901)
!3901 = !{!3902, !3903, !3909}
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3900, file: !261, line: 245, baseType: !3859, size: 64)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3900, file: !261, line: 246, baseType: !3904, size: 32, offset: 64)
!3904 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !3905)
!3905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3906, size: 32)
!3906 = !DISubroutineType(types: !3907)
!3907 = !{null, !3908}
!3908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3900, size: 32)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3900, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3850, file: !225, line: 250, baseType: !3911, size: 288, offset: 384)
!3911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !3912)
!3912 = !{!3913, !3914, !3915, !3916, !3917, !3918, !3919, !3920, !3921}
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3911, file: !296, line: 26, baseType: !156, size: 32)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3911, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3911, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3911, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3911, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3911, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3911, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3911, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3911, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3850, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3850, file: !225, line: 256, baseType: !3881, size: 64, offset: 704)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3850, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3850, file: !225, line: 300, baseType: !3926, size: 96, offset: 800)
!3926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !3927)
!3927 = !{!3928, !3929, !3930}
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3926, file: !225, line: 153, baseType: !22, size: 32)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3926, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3926, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3850, file: !225, line: 325, baseType: !3932, size: 32, offset: 896)
!3932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3933, size: 32)
!3933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !3934)
!3934 = !{!3935, !3941, !3942}
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3933, file: !220, line: 5074, baseType: !3936, size: 96)
!3936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !3937)
!3937 = !{!3938, !3939, !3940}
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3936, file: !324, line: 57, baseType: !327, size: 32)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3936, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3936, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3933, file: !220, line: 5075, baseType: !3881, size: 64, offset: 96)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3933, file: !220, line: 5076, baseType: !3943, size: 32, offset: 160)
!3943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !3944)
!3944 = !{!3945}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3943, file: !334, line: 52, baseType: !22, size: 32)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3850, file: !225, line: 343, baseType: !3947, size: 64, offset: 928)
!3947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !3948)
!3948 = !{!3949, !3950}
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3947, file: !296, line: 63, baseType: !156, size: 32)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3947, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!3951 = !DILocation(line: 535, column: 9, scope: !3845)
!3952 = !DILocation(line: 535, column: 2, scope: !3845)
!3953 = distinct !DISubprogram(name: "k_thread_abort", scope: !3450, file: !3450, line: 188, type: !3954, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !3956)
!3954 = !DISubroutineType(types: !3955)
!3955 = !{null, !3848}
!3956 = !{!3957}
!3957 = !DILocalVariable(name: "thread", arg: 1, scope: !3953, file: !3450, line: 188, type: !3848)
!3958 = !DILocation(line: 0, scope: !3953)
!3959 = !DILocation(line: 197, column: 2, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3953, file: !3450, line: 197, column: 2)
!3961 = !{i64 2154068004}
!3962 = !DILocation(line: 198, column: 2, scope: !3953)
!3963 = !DILocation(line: 199, column: 1, scope: !3953)
!3964 = distinct !DISubprogram(name: "z_current_get", scope: !3450, file: !3450, line: 173, type: !3846, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2516, retainedNodes: !2101)
!3965 = !DILocation(line: 180, column: 2, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3964, file: !3450, line: 180, column: 2)
!3967 = !{i64 2154067936}
!3968 = !DILocation(line: 181, column: 9, scope: !3964)
!3969 = !DILocation(line: 181, column: 2, scope: !3964)
!3970 = distinct !DISubprogram(name: "sys_heap_free", scope: !3971, file: !3971, line: 163, type: !3972, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !3980)
!3971 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3972 = !DISubroutineType(types: !3973)
!3973 = !{null, !3974, !117}
!3974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3975, size: 32)
!3975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !3976)
!3976 = !{!3977, !3978, !3979}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3975, file: !324, line: 57, baseType: !2535, size: 32)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3975, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3975, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!3980 = !{!3981, !3982, !3983, !3984}
!3981 = !DILocalVariable(name: "heap", arg: 1, scope: !3970, file: !3971, line: 163, type: !3974)
!3982 = !DILocalVariable(name: "mem", arg: 2, scope: !3970, file: !3971, line: 163, type: !117)
!3983 = !DILocalVariable(name: "h", scope: !3970, file: !3971, line: 168, type: !2535)
!3984 = !DILocalVariable(name: "c", scope: !3970, file: !3971, line: 169, type: !2540)
!3985 = !DILocation(line: 0, scope: !3970)
!3986 = !DILocation(line: 165, column: 10, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3970, file: !3971, line: 165, column: 6)
!3988 = !DILocation(line: 165, column: 6, scope: !3970)
!3989 = !DILocation(line: 168, column: 27, scope: !3970)
!3990 = !DILocation(line: 169, column: 16, scope: !3970)
!3991 = !{i32 0, i32 536870912}
!3992 = !DILocation(line: 175, column: 2, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3994, file: !3971, line: 175, column: 2)
!3994 = distinct !DILexicalBlock(scope: !3970, file: !3971, line: 175, column: 2)
!3995 = !DILocation(line: 175, column: 2, scope: !3994)
!3996 = !DILocation(line: 175, column: 2, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3993, file: !3971, line: 175, column: 2)
!3998 = !DILocation(line: 183, column: 2, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !4000, file: !3971, line: 183, column: 2)
!4000 = distinct !DILexicalBlock(scope: !3970, file: !3971, line: 183, column: 2)
!4001 = !DILocation(line: 183, column: 2, scope: !4000)
!4002 = !DILocation(line: 183, column: 2, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3999, file: !3971, line: 183, column: 2)
!4004 = !DILocation(line: 187, column: 2, scope: !3970)
!4005 = !DILocation(line: 197, column: 2, scope: !3970)
!4006 = !DILocation(line: 198, column: 1, scope: !3970)
!4007 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3971, file: !3971, line: 157, type: !4008, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4010)
!4008 = !DISubroutineType(types: !4009)
!4009 = !{!2540, !2535, !117}
!4010 = !{!4011, !4012, !4013, !4014}
!4011 = !DILocalVariable(name: "h", arg: 1, scope: !4007, file: !3971, line: 157, type: !2535)
!4012 = !DILocalVariable(name: "p", arg: 2, scope: !4007, file: !3971, line: 157, type: !117)
!4013 = !DILocalVariable(name: "mem", scope: !4007, file: !3971, line: 159, type: !1933)
!4014 = !DILocalVariable(name: "base", scope: !4007, file: !3971, line: 159, type: !1933)
!4015 = !DILocation(line: 0, scope: !4007)
!4016 = !DILocation(line: 159, column: 39, scope: !4007)
!4017 = !DILocation(line: 160, column: 14, scope: !4007)
!4018 = !DILocation(line: 160, column: 38, scope: !4007)
!4019 = !DILocation(line: 160, column: 46, scope: !4007)
!4020 = !DILocation(line: 160, column: 2, scope: !4007)
!4021 = distinct !DISubprogram(name: "chunk_used", scope: !2522, file: !2522, line: 137, type: !4022, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4024)
!4022 = !DISubroutineType(types: !4023)
!4023 = !{!146, !2535, !2540}
!4024 = !{!4025, !4026}
!4025 = !DILocalVariable(name: "h", arg: 1, scope: !4021, file: !2522, line: 137, type: !2535)
!4026 = !DILocalVariable(name: "c", arg: 2, scope: !4021, file: !2522, line: 137, type: !2540)
!4027 = !DILocation(line: 0, scope: !4021)
!4028 = !DILocation(line: 139, column: 9, scope: !4021)
!4029 = !DILocation(line: 139, column: 42, scope: !4021)
!4030 = !DILocation(line: 139, column: 2, scope: !4021)
!4031 = distinct !DISubprogram(name: "right_chunk", scope: !2522, file: !2522, line: 204, type: !4032, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4034)
!4032 = !DISubroutineType(types: !4033)
!4033 = !{!2540, !2535, !2540}
!4034 = !{!4035, !4036}
!4035 = !DILocalVariable(name: "h", arg: 1, scope: !4031, file: !2522, line: 204, type: !2535)
!4036 = !DILocalVariable(name: "c", arg: 2, scope: !4031, file: !2522, line: 204, type: !2540)
!4037 = !DILocation(line: 0, scope: !4031)
!4038 = !DILocation(line: 206, column: 13, scope: !4031)
!4039 = !DILocation(line: 206, column: 11, scope: !4031)
!4040 = !DILocation(line: 206, column: 2, scope: !4031)
!4041 = distinct !DISubprogram(name: "left_chunk", scope: !2522, file: !2522, line: 199, type: !4032, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4042)
!4042 = !{!4043, !4044}
!4043 = !DILocalVariable(name: "h", arg: 1, scope: !4041, file: !2522, line: 199, type: !2535)
!4044 = !DILocalVariable(name: "c", arg: 2, scope: !4041, file: !2522, line: 199, type: !2540)
!4045 = !DILocation(line: 0, scope: !4041)
!4046 = !DILocation(line: 201, column: 13, scope: !4041)
!4047 = !DILocation(line: 201, column: 11, scope: !4041)
!4048 = !DILocation(line: 201, column: 2, scope: !4041)
!4049 = distinct !DISubprogram(name: "set_chunk_used", scope: !2522, file: !2522, line: 147, type: !4050, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4052)
!4050 = !DISubroutineType(types: !4051)
!4051 = !{null, !2535, !2540, !146}
!4052 = !{!4053, !4054, !4055, !4056, !4057}
!4053 = !DILocalVariable(name: "h", arg: 1, scope: !4049, file: !2522, line: 147, type: !2535)
!4054 = !DILocalVariable(name: "c", arg: 2, scope: !4049, file: !2522, line: 147, type: !2540)
!4055 = !DILocalVariable(name: "used", arg: 3, scope: !4049, file: !2522, line: 147, type: !146)
!4056 = !DILocalVariable(name: "buf", scope: !4049, file: !2522, line: 149, type: !2529)
!4057 = !DILocalVariable(name: "cmem", scope: !4049, file: !2522, line: 150, type: !117)
!4058 = !DILocation(line: 0, scope: !4049)
!4059 = !DILocation(line: 149, column: 22, scope: !4049)
!4060 = !DILocation(line: 0, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4062, file: !2522, line: 159, column: 7)
!4062 = distinct !DILexicalBlock(scope: !4063, file: !2522, line: 158, column: 9)
!4063 = distinct !DILexicalBlock(scope: !4049, file: !2522, line: 152, column: 6)
!4064 = !DILocation(line: 159, column: 7, scope: !4062)
!4065 = !DILocation(line: 165, column: 1, scope: !4049)
!4066 = distinct !DISubprogram(name: "free_chunk", scope: !3971, file: !3971, line: 133, type: !4067, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4069)
!4067 = !DISubroutineType(types: !4068)
!4068 = !{null, !2535, !2540}
!4069 = !{!4070, !4071}
!4070 = !DILocalVariable(name: "h", arg: 1, scope: !4066, file: !3971, line: 133, type: !2535)
!4071 = !DILocalVariable(name: "c", arg: 2, scope: !4066, file: !3971, line: 133, type: !2540)
!4072 = !DILocation(line: 0, scope: !4066)
!4073 = !DILocation(line: 136, column: 21, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4066, file: !3971, line: 136, column: 6)
!4075 = !DILocation(line: 136, column: 7, scope: !4074)
!4076 = !DILocation(line: 136, column: 6, scope: !4066)
!4077 = !DILocation(line: 137, column: 3, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4074, file: !3971, line: 136, column: 41)
!4079 = !DILocation(line: 138, column: 22, scope: !4078)
!4080 = !DILocation(line: 138, column: 3, scope: !4078)
!4081 = !DILocation(line: 139, column: 2, scope: !4078)
!4082 = !DILocation(line: 142, column: 21, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4066, file: !3971, line: 142, column: 6)
!4084 = !DILocation(line: 142, column: 7, scope: !4083)
!4085 = !DILocation(line: 142, column: 6, scope: !4066)
!4086 = !DILocation(line: 143, column: 3, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4083, file: !3971, line: 142, column: 40)
!4088 = !DILocation(line: 144, column: 19, scope: !4087)
!4089 = !DILocation(line: 144, column: 3, scope: !4087)
!4090 = !DILocation(line: 145, column: 7, scope: !4087)
!4091 = !DILocation(line: 146, column: 2, scope: !4087)
!4092 = !DILocation(line: 148, column: 2, scope: !4066)
!4093 = !DILocation(line: 149, column: 1, scope: !4066)
!4094 = distinct !DISubprogram(name: "free_list_remove", scope: !3971, file: !3971, line: 60, type: !4067, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4095)
!4095 = !{!4096, !4097, !4098}
!4096 = !DILocalVariable(name: "h", arg: 1, scope: !4094, file: !3971, line: 60, type: !2535)
!4097 = !DILocalVariable(name: "c", arg: 2, scope: !4094, file: !3971, line: 60, type: !2540)
!4098 = !DILocalVariable(name: "bidx", scope: !4099, file: !3971, line: 63, type: !118)
!4099 = distinct !DILexicalBlock(scope: !4100, file: !3971, line: 62, column: 31)
!4100 = distinct !DILexicalBlock(scope: !4094, file: !3971, line: 62, column: 6)
!4101 = !DILocation(line: 0, scope: !4094)
!4102 = !DILocation(line: 63, column: 28, scope: !4099)
!4103 = !{i32 0, i32 32768}
!4104 = !DILocation(line: 63, column: 14, scope: !4099)
!4105 = !DILocation(line: 0, scope: !4099)
!4106 = !DILocation(line: 64, column: 3, scope: !4099)
!4107 = !DILocation(line: 66, column: 1, scope: !4094)
!4108 = distinct !DISubprogram(name: "merge_chunks", scope: !3971, file: !3971, line: 125, type: !4109, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4111)
!4109 = !DISubroutineType(types: !4110)
!4110 = !{null, !2535, !2540, !2540}
!4111 = !{!4112, !4113, !4114, !4115}
!4112 = !DILocalVariable(name: "h", arg: 1, scope: !4108, file: !3971, line: 125, type: !2535)
!4113 = !DILocalVariable(name: "lc", arg: 2, scope: !4108, file: !3971, line: 125, type: !2540)
!4114 = !DILocalVariable(name: "rc", arg: 3, scope: !4108, file: !3971, line: 125, type: !2540)
!4115 = !DILocalVariable(name: "newsz", scope: !4108, file: !3971, line: 127, type: !4116)
!4116 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2522, line: 62, baseType: !156)
!4117 = !DILocation(line: 0, scope: !4108)
!4118 = !DILocation(line: 127, column: 20, scope: !4108)
!4119 = !DILocation(line: 127, column: 40, scope: !4108)
!4120 = !DILocation(line: 127, column: 38, scope: !4108)
!4121 = !DILocation(line: 129, column: 2, scope: !4108)
!4122 = !DILocation(line: 130, column: 25, scope: !4108)
!4123 = !DILocation(line: 130, column: 2, scope: !4108)
!4124 = !DILocation(line: 131, column: 1, scope: !4108)
!4125 = distinct !DISubprogram(name: "free_list_add", scope: !3971, file: !3971, line: 98, type: !4067, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4126)
!4126 = !{!4127, !4128, !4129}
!4127 = !DILocalVariable(name: "h", arg: 1, scope: !4125, file: !3971, line: 98, type: !2535)
!4128 = !DILocalVariable(name: "c", arg: 2, scope: !4125, file: !3971, line: 98, type: !2540)
!4129 = !DILocalVariable(name: "bidx", scope: !4130, file: !3971, line: 101, type: !118)
!4130 = distinct !DILexicalBlock(scope: !4131, file: !3971, line: 100, column: 31)
!4131 = distinct !DILexicalBlock(scope: !4125, file: !3971, line: 100, column: 6)
!4132 = !DILocation(line: 0, scope: !4125)
!4133 = !DILocation(line: 101, column: 28, scope: !4130)
!4134 = !DILocation(line: 101, column: 14, scope: !4130)
!4135 = !DILocation(line: 0, scope: !4130)
!4136 = !DILocation(line: 102, column: 3, scope: !4130)
!4137 = !DILocation(line: 104, column: 1, scope: !4125)
!4138 = distinct !DISubprogram(name: "chunk_size", scope: !2522, file: !2522, line: 142, type: !4139, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4141)
!4139 = !DISubroutineType(types: !4140)
!4140 = !{!4116, !2535, !2540}
!4141 = !{!4142, !4143}
!4142 = !DILocalVariable(name: "h", arg: 1, scope: !4138, file: !2522, line: 142, type: !2535)
!4143 = !DILocalVariable(name: "c", arg: 2, scope: !4138, file: !2522, line: 142, type: !2540)
!4144 = !DILocation(line: 0, scope: !4138)
!4145 = !DILocation(line: 144, column: 9, scope: !4138)
!4146 = !DILocation(line: 144, column: 42, scope: !4138)
!4147 = !DILocation(line: 144, column: 2, scope: !4138)
!4148 = distinct !DISubprogram(name: "bucket_idx", scope: !2522, file: !2522, line: 250, type: !4149, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4151)
!4149 = !DISubroutineType(types: !4150)
!4150 = !{!118, !2535, !4116}
!4151 = !{!4152, !4153, !4154}
!4152 = !DILocalVariable(name: "h", arg: 1, scope: !4148, file: !2522, line: 250, type: !2535)
!4153 = !DILocalVariable(name: "sz", arg: 2, scope: !4148, file: !2522, line: 250, type: !4116)
!4154 = !DILocalVariable(name: "usable_sz", scope: !4148, file: !2522, line: 252, type: !32)
!4155 = !DILocation(line: 0, scope: !4148)
!4156 = !DILocation(line: 252, column: 32, scope: !4148)
!4157 = !DILocation(line: 252, column: 30, scope: !4148)
!4158 = !DILocation(line: 252, column: 50, scope: !4148)
!4159 = !DILocation(line: 253, column: 14, scope: !4148)
!4160 = !{i32 0, i32 33}
!4161 = !DILocation(line: 253, column: 12, scope: !4148)
!4162 = !DILocation(line: 253, column: 2, scope: !4148)
!4163 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3971, file: !3971, line: 68, type: !4164, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4166)
!4164 = !DISubroutineType(types: !4165)
!4165 = !{null, !2535, !2540, !118}
!4166 = !{!4167, !4168, !4169, !4170, !4172, !4175}
!4167 = !DILocalVariable(name: "h", arg: 1, scope: !4163, file: !3971, line: 68, type: !2535)
!4168 = !DILocalVariable(name: "c", arg: 2, scope: !4163, file: !3971, line: 68, type: !2540)
!4169 = !DILocalVariable(name: "bidx", arg: 3, scope: !4163, file: !3971, line: 68, type: !118)
!4170 = !DILocalVariable(name: "b", scope: !4163, file: !3971, line: 70, type: !4171)
!4171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 32)
!4172 = !DILocalVariable(name: "second", scope: !4173, file: !3971, line: 84, type: !2540)
!4173 = distinct !DILexicalBlock(scope: !4174, file: !3971, line: 80, column: 9)
!4174 = distinct !DILexicalBlock(scope: !4163, file: !3971, line: 72, column: 6)
!4175 = !DILocalVariable(name: "first", scope: !4173, file: !3971, line: 85, type: !2540)
!4176 = !DILocation(line: 0, scope: !4163)
!4177 = !DILocation(line: 72, column: 9, scope: !4174)
!4178 = !DILocation(line: 72, column: 14, scope: !4174)
!4179 = !DILocation(line: 72, column: 6, scope: !4163)
!4180 = !DILocation(line: 76, column: 23, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4174, file: !3971, line: 72, column: 21)
!4182 = !DILocation(line: 76, column: 6, scope: !4181)
!4183 = !DILocation(line: 76, column: 20, scope: !4181)
!4184 = !DILocation(line: 77, column: 11, scope: !4181)
!4185 = !DILocation(line: 78, column: 3, scope: !4181)
!4186 = !DILocation(line: 79, column: 3, scope: !4181)
!4187 = !DILocation(line: 80, column: 2, scope: !4181)
!4188 = !DILocation(line: 0, scope: !4173)
!4189 = !DILocation(line: 85, column: 21, scope: !4173)
!4190 = !{i32 0, i32 65536}
!4191 = !DILocation(line: 87, column: 3, scope: !4173)
!4192 = !DILocation(line: 88, column: 3, scope: !4173)
!4193 = !DILocation(line: 89, column: 3, scope: !4173)
!4194 = !DILocation(line: 90, column: 3, scope: !4173)
!4195 = !DILocation(line: 96, column: 1, scope: !4163)
!4196 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2522, file: !2522, line: 187, type: !4109, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4197)
!4197 = !{!4198, !4199, !4200}
!4198 = !DILocalVariable(name: "h", arg: 1, scope: !4196, file: !2522, line: 187, type: !2535)
!4199 = !DILocalVariable(name: "c", arg: 2, scope: !4196, file: !2522, line: 187, type: !2540)
!4200 = !DILocalVariable(name: "prev", arg: 3, scope: !4196, file: !2522, line: 188, type: !2540)
!4201 = !DILocation(line: 0, scope: !4196)
!4202 = !DILocation(line: 190, column: 2, scope: !4196)
!4203 = !DILocation(line: 191, column: 1, scope: !4196)
!4204 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2522, file: !2522, line: 193, type: !4109, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4205)
!4205 = !{!4206, !4207, !4208}
!4206 = !DILocalVariable(name: "h", arg: 1, scope: !4204, file: !2522, line: 193, type: !2535)
!4207 = !DILocalVariable(name: "c", arg: 2, scope: !4204, file: !2522, line: 193, type: !2540)
!4208 = !DILocalVariable(name: "next", arg: 3, scope: !4204, file: !2522, line: 194, type: !2540)
!4209 = !DILocation(line: 0, scope: !4204)
!4210 = !DILocation(line: 196, column: 2, scope: !4204)
!4211 = !DILocation(line: 197, column: 1, scope: !4204)
!4212 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2522, file: !2522, line: 177, type: !4032, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4213)
!4213 = !{!4214, !4215}
!4214 = !DILocalVariable(name: "h", arg: 1, scope: !4212, file: !2522, line: 177, type: !2535)
!4215 = !DILocalVariable(name: "c", arg: 2, scope: !4212, file: !2522, line: 177, type: !2540)
!4216 = !DILocation(line: 0, scope: !4212)
!4217 = !DILocation(line: 179, column: 9, scope: !4212)
!4218 = !DILocation(line: 179, column: 2, scope: !4212)
!4219 = distinct !DISubprogram(name: "chunk_field", scope: !2522, file: !2522, line: 107, type: !4220, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4222)
!4220 = !DISubroutineType(types: !4221)
!4221 = !{!2540, !2535, !2540, !2521}
!4222 = !{!4223, !4224, !4225, !4226, !4227}
!4223 = !DILocalVariable(name: "h", arg: 1, scope: !4219, file: !2522, line: 107, type: !2535)
!4224 = !DILocalVariable(name: "c", arg: 2, scope: !4219, file: !2522, line: 107, type: !2540)
!4225 = !DILocalVariable(name: "f", arg: 3, scope: !4219, file: !2522, line: 108, type: !2521)
!4226 = !DILocalVariable(name: "buf", scope: !4219, file: !2522, line: 110, type: !2529)
!4227 = !DILocalVariable(name: "cmem", scope: !4219, file: !2522, line: 111, type: !117)
!4228 = !DILocation(line: 0, scope: !4219)
!4229 = !DILocation(line: 110, column: 22, scope: !4219)
!4230 = !DILocation(line: 111, column: 15, scope: !4219)
!4231 = !DILocation(line: 116, column: 11, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4233, file: !2522, line: 115, column: 9)
!4233 = distinct !DILexicalBlock(scope: !4219, file: !2522, line: 113, column: 6)
!4234 = !DILocation(line: 116, column: 10, scope: !4232)
!4235 = !DILocation(line: 118, column: 1, scope: !4219)
!4236 = distinct !DISubprogram(name: "chunk_buf", scope: !2522, file: !2522, line: 101, type: !4237, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4239)
!4237 = !DISubroutineType(types: !4238)
!4238 = !{!2529, !2535}
!4239 = !{!4240}
!4240 = !DILocalVariable(name: "h", arg: 1, scope: !4236, file: !2522, line: 101, type: !2535)
!4241 = !DILocation(line: 0, scope: !4236)
!4242 = !DILocation(line: 104, column: 9, scope: !4236)
!4243 = !DILocation(line: 104, column: 2, scope: !4236)
!4244 = distinct !DISubprogram(name: "chunk_set", scope: !2522, file: !2522, line: 120, type: !4245, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4247)
!4245 = !DISubroutineType(types: !4246)
!4246 = !{null, !2535, !2540, !2521, !2540}
!4247 = !{!4248, !4249, !4250, !4251, !4252, !4253}
!4248 = !DILocalVariable(name: "h", arg: 1, scope: !4244, file: !2522, line: 120, type: !2535)
!4249 = !DILocalVariable(name: "c", arg: 2, scope: !4244, file: !2522, line: 120, type: !2540)
!4250 = !DILocalVariable(name: "f", arg: 3, scope: !4244, file: !2522, line: 121, type: !2521)
!4251 = !DILocalVariable(name: "val", arg: 4, scope: !4244, file: !2522, line: 121, type: !2540)
!4252 = !DILocalVariable(name: "buf", scope: !4244, file: !2522, line: 125, type: !2529)
!4253 = !DILocalVariable(name: "cmem", scope: !4244, file: !2522, line: 126, type: !117)
!4254 = !DILocation(line: 0, scope: !4244)
!4255 = !DILocation(line: 125, column: 22, scope: !4244)
!4256 = !DILocation(line: 126, column: 15, scope: !4244)
!4257 = !DILocation(line: 133, column: 27, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4259, file: !2522, line: 131, column: 9)
!4259 = distinct !DILexicalBlock(scope: !4244, file: !2522, line: 128, column: 6)
!4260 = !DILocation(line: 133, column: 4, scope: !4258)
!4261 = !DILocation(line: 133, column: 3, scope: !4258)
!4262 = !DILocation(line: 133, column: 25, scope: !4258)
!4263 = !DILocation(line: 135, column: 1, scope: !4244)
!4264 = distinct !DISubprogram(name: "min_chunk_size", scope: !2522, file: !2522, line: 240, type: !4265, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4267)
!4265 = !DISubroutineType(types: !4266)
!4266 = !{!4116, !2535}
!4267 = !{!4268}
!4268 = !DILocalVariable(name: "h", arg: 1, scope: !4264, file: !2522, line: 240, type: !2535)
!4269 = !DILocation(line: 0, scope: !4264)
!4270 = !DILocation(line: 242, column: 9, scope: !4264)
!4271 = !DILocation(line: 242, column: 2, scope: !4264)
!4272 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2522, file: !2522, line: 235, type: !4273, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4275)
!4273 = !DISubroutineType(types: !4274)
!4274 = !{!4116, !2535, !315}
!4275 = !{!4276, !4277}
!4276 = !DILocalVariable(name: "h", arg: 1, scope: !4272, file: !2522, line: 235, type: !2535)
!4277 = !DILocalVariable(name: "bytes", arg: 2, scope: !4272, file: !2522, line: 235, type: !315)
!4278 = !DILocation(line: 0, scope: !4272)
!4279 = !DILocation(line: 237, column: 39, scope: !4272)
!4280 = !DILocation(line: 237, column: 9, scope: !4272)
!4281 = !DILocation(line: 237, column: 2, scope: !4272)
!4282 = distinct !DISubprogram(name: "chunksz", scope: !2522, file: !2522, line: 230, type: !4283, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4285)
!4283 = !DISubroutineType(types: !4284)
!4284 = !{!4116, !315}
!4285 = !{!4286}
!4286 = !DILocalVariable(name: "bytes", arg: 1, scope: !4282, file: !2522, line: 230, type: !315)
!4287 = !DILocation(line: 0, scope: !4282)
!4288 = !DILocation(line: 232, column: 29, scope: !4282)
!4289 = !DILocation(line: 232, column: 35, scope: !4282)
!4290 = !DILocation(line: 232, column: 2, scope: !4282)
!4291 = distinct !DISubprogram(name: "set_chunk_size", scope: !2522, file: !2522, line: 172, type: !4292, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4294)
!4292 = !DISubroutineType(types: !4293)
!4293 = !{null, !2535, !2540, !4116}
!4294 = !{!4295, !4296, !4297}
!4295 = !DILocalVariable(name: "h", arg: 1, scope: !4291, file: !2522, line: 172, type: !2535)
!4296 = !DILocalVariable(name: "c", arg: 2, scope: !4291, file: !2522, line: 172, type: !2540)
!4297 = !DILocalVariable(name: "size", arg: 3, scope: !4291, file: !2522, line: 172, type: !4116)
!4298 = !DILocation(line: 0, scope: !4291)
!4299 = !DILocation(line: 174, column: 38, scope: !4291)
!4300 = !DILocation(line: 174, column: 2, scope: !4291)
!4301 = !DILocation(line: 175, column: 1, scope: !4291)
!4302 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2522, file: !2522, line: 209, type: !4292, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4303)
!4303 = !{!4304, !4305, !4306}
!4304 = !DILocalVariable(name: "h", arg: 1, scope: !4302, file: !2522, line: 209, type: !2535)
!4305 = !DILocalVariable(name: "c", arg: 2, scope: !4302, file: !2522, line: 209, type: !2540)
!4306 = !DILocalVariable(name: "size", arg: 3, scope: !4302, file: !2522, line: 210, type: !4116)
!4307 = !DILocation(line: 0, scope: !4302)
!4308 = !DILocation(line: 212, column: 2, scope: !4302)
!4309 = !DILocation(line: 213, column: 1, scope: !4302)
!4310 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3971, file: !3971, line: 34, type: !4164, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4311)
!4311 = !{!4312, !4313, !4314, !4315, !4316, !4319}
!4312 = !DILocalVariable(name: "h", arg: 1, scope: !4310, file: !3971, line: 34, type: !2535)
!4313 = !DILocalVariable(name: "c", arg: 2, scope: !4310, file: !3971, line: 34, type: !2540)
!4314 = !DILocalVariable(name: "bidx", arg: 3, scope: !4310, file: !3971, line: 34, type: !118)
!4315 = !DILocalVariable(name: "b", scope: !4310, file: !3971, line: 36, type: !4171)
!4316 = !DILocalVariable(name: "first", scope: !4317, file: !3971, line: 47, type: !2540)
!4317 = distinct !DILexicalBlock(scope: !4318, file: !3971, line: 46, column: 9)
!4318 = distinct !DILexicalBlock(scope: !4310, file: !3971, line: 42, column: 6)
!4319 = !DILocalVariable(name: "second", scope: !4317, file: !3971, line: 48, type: !2540)
!4320 = !DILocation(line: 0, scope: !4310)
!4321 = !DILocation(line: 36, column: 29, scope: !4310)
!4322 = !DILocation(line: 42, column: 6, scope: !4318)
!4323 = !DILocation(line: 42, column: 28, scope: !4318)
!4324 = !DILocation(line: 42, column: 6, scope: !4310)
!4325 = !DILocation(line: 44, column: 24, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4318, file: !3971, line: 42, column: 34)
!4327 = !DILocation(line: 44, column: 23, scope: !4326)
!4328 = !DILocation(line: 44, column: 6, scope: !4326)
!4329 = !DILocation(line: 44, column: 20, scope: !4326)
!4330 = !DILocation(line: 45, column: 6, scope: !4326)
!4331 = !DILocation(line: 45, column: 11, scope: !4326)
!4332 = !DILocation(line: 46, column: 2, scope: !4326)
!4333 = !DILocation(line: 47, column: 21, scope: !4317)
!4334 = !DILocation(line: 0, scope: !4317)
!4335 = !DILocation(line: 50, column: 6, scope: !4317)
!4336 = !DILocation(line: 50, column: 11, scope: !4317)
!4337 = !DILocation(line: 51, column: 3, scope: !4317)
!4338 = !DILocation(line: 52, column: 3, scope: !4317)
!4339 = !DILocation(line: 58, column: 1, scope: !4310)
!4340 = distinct !DISubprogram(name: "next_free_chunk", scope: !2522, file: !2522, line: 182, type: !4032, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4341)
!4341 = !{!4342, !4343}
!4342 = !DILocalVariable(name: "h", arg: 1, scope: !4340, file: !2522, line: 182, type: !2535)
!4343 = !DILocalVariable(name: "c", arg: 2, scope: !4340, file: !2522, line: 182, type: !2540)
!4344 = !DILocation(line: 0, scope: !4340)
!4345 = !DILocation(line: 184, column: 9, scope: !4340)
!4346 = !DILocation(line: 184, column: 2, scope: !4340)
!4347 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3971, file: !3971, line: 200, type: !4348, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4350)
!4348 = !DISubroutineType(types: !4349)
!4349 = !{!315, !3974, !117}
!4350 = !{!4351, !4352, !4353, !4354, !4355, !4356, !4357}
!4351 = !DILocalVariable(name: "heap", arg: 1, scope: !4347, file: !3971, line: 200, type: !3974)
!4352 = !DILocalVariable(name: "mem", arg: 2, scope: !4347, file: !3971, line: 200, type: !117)
!4353 = !DILocalVariable(name: "h", scope: !4347, file: !3971, line: 202, type: !2535)
!4354 = !DILocalVariable(name: "c", scope: !4347, file: !3971, line: 203, type: !2540)
!4355 = !DILocalVariable(name: "addr", scope: !4347, file: !3971, line: 204, type: !315)
!4356 = !DILocalVariable(name: "chunk_base", scope: !4347, file: !3971, line: 205, type: !315)
!4357 = !DILocalVariable(name: "chunk_sz", scope: !4347, file: !3971, line: 206, type: !315)
!4358 = !DILocation(line: 0, scope: !4347)
!4359 = !DILocation(line: 202, column: 27, scope: !4347)
!4360 = !DILocation(line: 203, column: 16, scope: !4347)
!4361 = !DILocation(line: 204, column: 16, scope: !4347)
!4362 = !DILocation(line: 205, column: 31, scope: !4347)
!4363 = !DILocation(line: 205, column: 22, scope: !4347)
!4364 = !DILocation(line: 206, column: 20, scope: !4347)
!4365 = !DILocation(line: 206, column: 37, scope: !4347)
!4366 = !DILocation(line: 208, column: 26, scope: !4347)
!4367 = !DILocation(line: 208, column: 18, scope: !4347)
!4368 = !DILocation(line: 208, column: 2, scope: !4347)
!4369 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3971, file: !3971, line: 263, type: !4370, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4372)
!4370 = !DISubroutineType(types: !4371)
!4371 = !{!117, !3974, !315}
!4372 = !{!4373, !4374, !4375, !4376, !4377, !4378}
!4373 = !DILocalVariable(name: "heap", arg: 1, scope: !4369, file: !3971, line: 263, type: !3974)
!4374 = !DILocalVariable(name: "bytes", arg: 2, scope: !4369, file: !3971, line: 263, type: !315)
!4375 = !DILocalVariable(name: "h", scope: !4369, file: !3971, line: 265, type: !2535)
!4376 = !DILocalVariable(name: "mem", scope: !4369, file: !3971, line: 266, type: !117)
!4377 = !DILocalVariable(name: "chunk_sz", scope: !4369, file: !3971, line: 272, type: !4116)
!4378 = !DILocalVariable(name: "c", scope: !4369, file: !3971, line: 273, type: !2540)
!4379 = !DILocation(line: 0, scope: !4369)
!4380 = !DILocation(line: 265, column: 27, scope: !4369)
!4381 = !DILocation(line: 268, column: 12, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4369, file: !3971, line: 268, column: 6)
!4383 = !DILocation(line: 268, column: 18, scope: !4382)
!4384 = !DILocation(line: 268, column: 21, scope: !4382)
!4385 = !DILocation(line: 268, column: 6, scope: !4369)
!4386 = !DILocation(line: 272, column: 23, scope: !4369)
!4387 = !DILocation(line: 273, column: 16, scope: !4369)
!4388 = !DILocation(line: 274, column: 8, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4369, file: !3971, line: 274, column: 6)
!4390 = !DILocation(line: 274, column: 6, scope: !4369)
!4391 = !DILocation(line: 279, column: 6, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !4369, file: !3971, line: 279, column: 6)
!4393 = !DILocation(line: 279, column: 23, scope: !4392)
!4394 = !DILocation(line: 279, column: 6, scope: !4369)
!4395 = !DILocation(line: 280, column: 24, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4392, file: !3971, line: 279, column: 35)
!4397 = !DILocation(line: 280, column: 3, scope: !4396)
!4398 = !DILocation(line: 281, column: 3, scope: !4396)
!4399 = !DILocation(line: 282, column: 2, scope: !4396)
!4400 = !DILocation(line: 284, column: 2, scope: !4369)
!4401 = !DILocation(line: 286, column: 8, scope: !4369)
!4402 = !DILocation(line: 298, column: 2, scope: !4369)
!4403 = !DILocation(line: 299, column: 1, scope: !4369)
!4404 = distinct !DISubprogram(name: "size_too_big", scope: !2522, file: !2522, line: 256, type: !4405, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4407)
!4405 = !DISubroutineType(types: !4406)
!4406 = !{!146, !2535, !315}
!4407 = !{!4408, !4409}
!4408 = !DILocalVariable(name: "h", arg: 1, scope: !4404, file: !2522, line: 256, type: !2535)
!4409 = !DILocalVariable(name: "bytes", arg: 2, scope: !4404, file: !2522, line: 256, type: !315)
!4410 = !DILocation(line: 0, scope: !4404)
!4411 = !DILocation(line: 262, column: 16, scope: !4404)
!4412 = !DILocation(line: 262, column: 36, scope: !4404)
!4413 = !DILocation(line: 262, column: 30, scope: !4404)
!4414 = !DILocation(line: 262, column: 2, scope: !4404)
!4415 = distinct !DISubprogram(name: "alloc_chunk", scope: !3971, file: !3971, line: 211, type: !4416, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4418)
!4416 = !DISubroutineType(types: !4417)
!4417 = !{!2540, !2535, !4116}
!4418 = !{!4419, !4420, !4421, !4422, !4423, !4426, !4427, !4429, !4430, !4433}
!4419 = !DILocalVariable(name: "h", arg: 1, scope: !4415, file: !3971, line: 211, type: !2535)
!4420 = !DILocalVariable(name: "sz", arg: 2, scope: !4415, file: !3971, line: 211, type: !4116)
!4421 = !DILocalVariable(name: "bi", scope: !4415, file: !3971, line: 213, type: !118)
!4422 = !DILocalVariable(name: "b", scope: !4415, file: !3971, line: 214, type: !4171)
!4423 = !DILocalVariable(name: "first", scope: !4424, file: !3971, line: 233, type: !2540)
!4424 = distinct !DILexicalBlock(scope: !4425, file: !3971, line: 232, column: 15)
!4425 = distinct !DILexicalBlock(scope: !4415, file: !3971, line: 232, column: 6)
!4426 = !DILocalVariable(name: "i", scope: !4424, file: !3971, line: 234, type: !118)
!4427 = !DILocalVariable(name: "c", scope: !4428, file: !3971, line: 236, type: !2540)
!4428 = distinct !DILexicalBlock(scope: !4424, file: !3971, line: 235, column: 6)
!4429 = !DILocalVariable(name: "bmask", scope: !4415, file: !3971, line: 249, type: !156)
!4430 = !DILocalVariable(name: "minbucket", scope: !4431, file: !3971, line: 252, type: !118)
!4431 = distinct !DILexicalBlock(scope: !4432, file: !3971, line: 251, column: 19)
!4432 = distinct !DILexicalBlock(scope: !4415, file: !3971, line: 251, column: 6)
!4433 = !DILocalVariable(name: "c", scope: !4431, file: !3971, line: 253, type: !2540)
!4434 = !DILocation(line: 0, scope: !4415)
!4435 = !DILocation(line: 213, column: 11, scope: !4415)
!4436 = !DILocation(line: 232, column: 9, scope: !4425)
!4437 = !DILocation(line: 232, column: 6, scope: !4425)
!4438 = !DILocation(line: 232, column: 6, scope: !4415)
!4439 = !DILocation(line: 236, column: 21, scope: !4428)
!4440 = !DILocation(line: 0, scope: !4424)
!4441 = !DILocation(line: 0, scope: !4428)
!4442 = !DILocation(line: 237, column: 8, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4428, file: !3971, line: 237, column: 8)
!4444 = !DILocation(line: 237, column: 25, scope: !4443)
!4445 = !DILocation(line: 237, column: 8, scope: !4428)
!4446 = !DILocation(line: 238, column: 5, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4443, file: !3971, line: 237, column: 32)
!4448 = !DILocation(line: 241, column: 14, scope: !4428)
!4449 = !DILocation(line: 241, column: 12, scope: !4428)
!4450 = !DILocation(line: 243, column: 12, scope: !4424)
!4451 = !DILocation(line: 243, column: 16, scope: !4424)
!4452 = distinct !{!4452, !4453, !4454}
!4453 = !DILocation(line: 235, column: 3, scope: !4424)
!4454 = !DILocation(line: 243, column: 35, scope: !4424)
!4455 = !DILocation(line: 249, column: 22, scope: !4415)
!4456 = !DILocation(line: 249, column: 39, scope: !4415)
!4457 = !DILocation(line: 249, column: 36, scope: !4415)
!4458 = !DILocation(line: 251, column: 12, scope: !4432)
!4459 = !DILocation(line: 251, column: 6, scope: !4415)
!4460 = !DILocation(line: 252, column: 19, scope: !4431)
!4461 = !DILocation(line: 0, scope: !4431)
!4462 = !DILocation(line: 253, column: 39, scope: !4431)
!4463 = !DILocation(line: 255, column: 3, scope: !4431)
!4464 = !DILocation(line: 261, column: 1, scope: !4415)
!4465 = distinct !DISubprogram(name: "split_chunks", scope: !3971, file: !3971, line: 109, type: !4109, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4466)
!4466 = !{!4467, !4468, !4469, !4470, !4471, !4472}
!4467 = !DILocalVariable(name: "h", arg: 1, scope: !4465, file: !3971, line: 109, type: !2535)
!4468 = !DILocalVariable(name: "lc", arg: 2, scope: !4465, file: !3971, line: 109, type: !2540)
!4469 = !DILocalVariable(name: "rc", arg: 3, scope: !4465, file: !3971, line: 109, type: !2540)
!4470 = !DILocalVariable(name: "sz0", scope: !4465, file: !3971, line: 114, type: !4116)
!4471 = !DILocalVariable(name: "lsz", scope: !4465, file: !3971, line: 115, type: !4116)
!4472 = !DILocalVariable(name: "rsz", scope: !4465, file: !3971, line: 116, type: !4116)
!4473 = !DILocation(line: 0, scope: !4465)
!4474 = !DILocation(line: 114, column: 18, scope: !4465)
!4475 = !DILocation(line: 115, column: 21, scope: !4465)
!4476 = !DILocation(line: 116, column: 22, scope: !4465)
!4477 = !DILocation(line: 118, column: 2, scope: !4465)
!4478 = !DILocation(line: 119, column: 2, scope: !4465)
!4479 = !DILocation(line: 120, column: 2, scope: !4465)
!4480 = !DILocation(line: 121, column: 25, scope: !4465)
!4481 = !DILocation(line: 121, column: 2, scope: !4465)
!4482 = !DILocation(line: 122, column: 1, scope: !4465)
!4483 = distinct !DISubprogram(name: "chunk_mem", scope: !3971, file: !3971, line: 24, type: !4484, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4486)
!4484 = !DISubroutineType(types: !4485)
!4485 = !{!117, !2535, !2540}
!4486 = !{!4487, !4488, !4489, !4490}
!4487 = !DILocalVariable(name: "h", arg: 1, scope: !4483, file: !3971, line: 24, type: !2535)
!4488 = !DILocalVariable(name: "c", arg: 2, scope: !4483, file: !3971, line: 24, type: !2540)
!4489 = !DILocalVariable(name: "buf", scope: !4483, file: !3971, line: 26, type: !2529)
!4490 = !DILocalVariable(name: "ret", scope: !4483, file: !3971, line: 27, type: !1933)
!4491 = !DILocation(line: 0, scope: !4483)
!4492 = !DILocation(line: 26, column: 22, scope: !4483)
!4493 = !DILocation(line: 27, column: 38, scope: !4483)
!4494 = !DILocation(line: 31, column: 2, scope: !4483)
!4495 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3971, file: !3971, line: 301, type: !4496, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4498)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{!117, !3974, !315, !315}
!4498 = !{!4499, !4500, !4501, !4502, !4503, !4504, !4505, !4506, !4507, !4508, !4509, !4510}
!4499 = !DILocalVariable(name: "heap", arg: 1, scope: !4495, file: !3971, line: 301, type: !3974)
!4500 = !DILocalVariable(name: "align", arg: 2, scope: !4495, file: !3971, line: 301, type: !315)
!4501 = !DILocalVariable(name: "bytes", arg: 3, scope: !4495, file: !3971, line: 301, type: !315)
!4502 = !DILocalVariable(name: "h", scope: !4495, file: !3971, line: 303, type: !2535)
!4503 = !DILocalVariable(name: "gap", scope: !4495, file: !3971, line: 304, type: !315)
!4504 = !DILocalVariable(name: "rew", scope: !4495, file: !3971, line: 304, type: !315)
!4505 = !DILocalVariable(name: "padded_sz", scope: !4495, file: !3971, line: 335, type: !4116)
!4506 = !DILocalVariable(name: "c0", scope: !4495, file: !3971, line: 336, type: !2540)
!4507 = !DILocalVariable(name: "mem", scope: !4495, file: !3971, line: 341, type: !1933)
!4508 = !DILocalVariable(name: "end", scope: !4495, file: !3971, line: 345, type: !2529)
!4509 = !DILocalVariable(name: "c", scope: !4495, file: !3971, line: 348, type: !2540)
!4510 = !DILocalVariable(name: "c_end", scope: !4495, file: !3971, line: 349, type: !2540)
!4511 = !DILocation(line: 0, scope: !4495)
!4512 = !DILocation(line: 303, column: 27, scope: !4495)
!4513 = !DILocation(line: 313, column: 16, scope: !4495)
!4514 = !DILocation(line: 313, column: 14, scope: !4495)
!4515 = !DILocation(line: 314, column: 12, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4495, file: !3971, line: 314, column: 6)
!4517 = !DILocation(line: 314, column: 6, scope: !4495)
!4518 = !DILocation(line: 315, column: 9, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4516, file: !3971, line: 314, column: 20)
!4520 = !DILocation(line: 316, column: 9, scope: !4519)
!4521 = !DILocation(line: 318, column: 13, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4523, file: !3971, line: 318, column: 7)
!4523 = distinct !DILexicalBlock(scope: !4516, file: !3971, line: 317, column: 9)
!4524 = !DILocation(line: 318, column: 7, scope: !4523)
!4525 = !DILocation(line: 319, column: 11, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4522, file: !3971, line: 318, column: 39)
!4527 = !DILocation(line: 319, column: 4, scope: !4526)
!4528 = !DILocation(line: 0, scope: !4516)
!4529 = !DILocation(line: 324, column: 2, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4531, file: !3971, line: 324, column: 2)
!4531 = distinct !DILexicalBlock(scope: !4495, file: !3971, line: 324, column: 2)
!4532 = !DILocation(line: 324, column: 2, scope: !4531)
!4533 = !DILocation(line: 324, column: 2, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4530, file: !3971, line: 324, column: 2)
!4535 = !DILocation(line: 326, column: 12, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4495, file: !3971, line: 326, column: 6)
!4537 = !DILocation(line: 326, column: 17, scope: !4536)
!4538 = !DILocation(line: 326, column: 20, scope: !4536)
!4539 = !DILocation(line: 326, column: 6, scope: !4495)
!4540 = !DILocation(line: 335, column: 50, scope: !4495)
!4541 = !DILocation(line: 335, column: 58, scope: !4495)
!4542 = !DILocation(line: 335, column: 24, scope: !4495)
!4543 = !DILocation(line: 336, column: 17, scope: !4495)
!4544 = !DILocation(line: 338, column: 9, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4495, file: !3971, line: 338, column: 6)
!4546 = !DILocation(line: 338, column: 6, scope: !4495)
!4547 = !DILocation(line: 341, column: 17, scope: !4495)
!4548 = !DILocation(line: 344, column: 20, scope: !4495)
!4549 = !DILocation(line: 344, column: 8, scope: !4495)
!4550 = !DILocation(line: 344, column: 47, scope: !4495)
!4551 = !DILocation(line: 345, column: 39, scope: !4495)
!4552 = !DILocation(line: 348, column: 16, scope: !4495)
!4553 = !DILocation(line: 349, column: 26, scope: !4495)
!4554 = !DILocation(line: 349, column: 24, scope: !4495)
!4555 = !DILocation(line: 353, column: 8, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4495, file: !3971, line: 353, column: 6)
!4557 = !DILocation(line: 353, column: 6, scope: !4495)
!4558 = !DILocation(line: 354, column: 3, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4556, file: !3971, line: 353, column: 14)
!4560 = !DILocation(line: 355, column: 3, scope: !4559)
!4561 = !DILocation(line: 356, column: 2, scope: !4559)
!4562 = !DILocation(line: 359, column: 6, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4495, file: !3971, line: 359, column: 6)
!4564 = !DILocation(line: 359, column: 24, scope: !4563)
!4565 = !DILocation(line: 359, column: 6, scope: !4495)
!4566 = !DILocation(line: 360, column: 3, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4563, file: !3971, line: 359, column: 33)
!4568 = !DILocation(line: 361, column: 3, scope: !4567)
!4569 = !DILocation(line: 362, column: 2, scope: !4567)
!4570 = !DILocation(line: 364, column: 2, scope: !4495)
!4571 = !DILocation(line: 377, column: 1, scope: !4495)
!4572 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3971, file: !3971, line: 379, type: !4573, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4575)
!4573 = !DISubroutineType(types: !4574)
!4574 = !{!117, !3974, !117, !315, !315}
!4575 = !{!4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4591, !4592}
!4576 = !DILocalVariable(name: "heap", arg: 1, scope: !4572, file: !3971, line: 379, type: !3974)
!4577 = !DILocalVariable(name: "ptr", arg: 2, scope: !4572, file: !3971, line: 379, type: !117)
!4578 = !DILocalVariable(name: "align", arg: 3, scope: !4572, file: !3971, line: 380, type: !315)
!4579 = !DILocalVariable(name: "bytes", arg: 4, scope: !4572, file: !3971, line: 380, type: !315)
!4580 = !DILocalVariable(name: "h", scope: !4572, file: !3971, line: 382, type: !2535)
!4581 = !DILocalVariable(name: "c", scope: !4572, file: !3971, line: 399, type: !2540)
!4582 = !DILocalVariable(name: "rc", scope: !4572, file: !3971, line: 400, type: !2540)
!4583 = !DILocalVariable(name: "align_gap", scope: !4572, file: !3971, line: 401, type: !315)
!4584 = !DILocalVariable(name: "chunks_need", scope: !4572, file: !3971, line: 402, type: !4116)
!4585 = !DILocalVariable(name: "split_size", scope: !4586, file: !3971, line: 435, type: !4116)
!4586 = distinct !DILexicalBlock(scope: !4587, file: !3971, line: 433, column: 61)
!4587 = distinct !DILexicalBlock(scope: !4588, file: !3971, line: 432, column: 13)
!4588 = distinct !DILexicalBlock(scope: !4589, file: !3971, line: 409, column: 13)
!4589 = distinct !DILexicalBlock(scope: !4590, file: !3971, line: 406, column: 13)
!4590 = distinct !DILexicalBlock(scope: !4572, file: !3971, line: 404, column: 6)
!4591 = !DILocalVariable(name: "ptr2", scope: !4572, file: !3971, line: 474, type: !117)
!4592 = !DILocalVariable(name: "prev_size", scope: !4593, file: !3971, line: 477, type: !315)
!4593 = distinct !DILexicalBlock(scope: !4594, file: !3971, line: 476, column: 20)
!4594 = distinct !DILexicalBlock(scope: !4572, file: !3971, line: 476, column: 6)
!4595 = !DILocation(line: 0, scope: !4572)
!4596 = !DILocation(line: 382, column: 27, scope: !4572)
!4597 = !DILocation(line: 385, column: 10, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4572, file: !3971, line: 385, column: 6)
!4599 = !DILocation(line: 385, column: 6, scope: !4572)
!4600 = !DILocation(line: 386, column: 10, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4598, file: !3971, line: 385, column: 19)
!4602 = !DILocation(line: 386, column: 3, scope: !4601)
!4603 = !DILocation(line: 388, column: 12, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4572, file: !3971, line: 388, column: 6)
!4605 = !DILocation(line: 388, column: 6, scope: !4572)
!4606 = !DILocation(line: 389, column: 3, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4604, file: !3971, line: 388, column: 18)
!4608 = !DILocation(line: 390, column: 3, scope: !4607)
!4609 = !DILocation(line: 393, column: 2, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4611, file: !3971, line: 393, column: 2)
!4611 = distinct !DILexicalBlock(scope: !4572, file: !3971, line: 393, column: 2)
!4612 = !DILocation(line: 393, column: 2, scope: !4611)
!4613 = !DILocation(line: 393, column: 2, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4610, file: !3971, line: 393, column: 2)
!4615 = !DILocation(line: 395, column: 6, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4572, file: !3971, line: 395, column: 6)
!4617 = !DILocation(line: 395, column: 6, scope: !4572)
!4618 = !DILocation(line: 399, column: 16, scope: !4572)
!4619 = !DILocation(line: 400, column: 17, scope: !4572)
!4620 = !DILocation(line: 401, column: 49, scope: !4572)
!4621 = !DILocation(line: 401, column: 36, scope: !4572)
!4622 = !DILocation(line: 402, column: 52, scope: !4572)
!4623 = !DILocation(line: 402, column: 26, scope: !4572)
!4624 = !DILocation(line: 404, column: 6, scope: !4590)
!4625 = !DILocation(line: 404, column: 12, scope: !4590)
!4626 = !DILocation(line: 406, column: 13, scope: !4589)
!4627 = !DILocation(line: 406, column: 30, scope: !4589)
!4628 = !DILocation(line: 406, column: 13, scope: !4590)
!4629 = !DILocation(line: 409, column: 30, scope: !4588)
!4630 = !DILocation(line: 409, column: 13, scope: !4589)
!4631 = !DILocation(line: 420, column: 24, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4588, file: !3971, line: 409, column: 45)
!4633 = !DILocation(line: 420, column: 3, scope: !4632)
!4634 = !DILocation(line: 421, column: 3, scope: !4632)
!4635 = !DILocation(line: 422, column: 3, scope: !4632)
!4636 = !DILocation(line: 431, column: 3, scope: !4632)
!4637 = !DILocation(line: 432, column: 14, scope: !4587)
!4638 = !DILocation(line: 432, column: 32, scope: !4587)
!4639 = !DILocation(line: 433, column: 26, scope: !4587)
!4640 = !DILocation(line: 433, column: 24, scope: !4587)
!4641 = !DILocation(line: 433, column: 44, scope: !4587)
!4642 = !DILocation(line: 432, column: 13, scope: !4588)
!4643 = !DILocation(line: 435, column: 38, scope: !4586)
!4644 = !DILocation(line: 0, scope: !4586)
!4645 = !DILocation(line: 445, column: 3, scope: !4586)
!4646 = !DILocation(line: 447, column: 20, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4586, file: !3971, line: 447, column: 7)
!4648 = !DILocation(line: 447, column: 18, scope: !4647)
!4649 = !DILocation(line: 447, column: 7, scope: !4586)
!4650 = !DILocation(line: 448, column: 27, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4647, file: !3971, line: 447, column: 39)
!4652 = !DILocation(line: 448, column: 4, scope: !4651)
!4653 = !DILocation(line: 449, column: 4, scope: !4651)
!4654 = !DILocation(line: 450, column: 3, scope: !4651)
!4655 = !DILocation(line: 452, column: 3, scope: !4586)
!4656 = !DILocation(line: 453, column: 3, scope: !4586)
!4657 = !DILocation(line: 474, column: 15, scope: !4572)
!4658 = !DILocation(line: 476, column: 11, scope: !4594)
!4659 = !DILocation(line: 476, column: 6, scope: !4572)
!4660 = !DILocation(line: 477, column: 42, scope: !4593)
!4661 = !DILocation(line: 477, column: 22, scope: !4593)
!4662 = !DILocation(line: 477, column: 60, scope: !4593)
!4663 = !DILocation(line: 0, scope: !4593)
!4664 = !DILocation(line: 479, column: 21, scope: !4593)
!4665 = !DILocation(line: 479, column: 3, scope: !4593)
!4666 = !DILocation(line: 480, column: 3, scope: !4593)
!4667 = !DILocation(line: 481, column: 2, scope: !4593)
!4668 = !DILocation(line: 483, column: 1, scope: !4572)
!4669 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2522, file: !2522, line: 245, type: !4670, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4672)
!4670 = !DISubroutineType(types: !4671)
!4671 = !{!315, !2535, !4116}
!4672 = !{!4673, !4674}
!4673 = !DILocalVariable(name: "h", arg: 1, scope: !4669, file: !2522, line: 245, type: !2535)
!4674 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4669, file: !2522, line: 245, type: !4116)
!4675 = !DILocation(line: 0, scope: !4669)
!4676 = !DILocation(line: 247, column: 20, scope: !4669)
!4677 = !DILocation(line: 247, column: 33, scope: !4669)
!4678 = !DILocation(line: 247, column: 2, scope: !4669)
!4679 = distinct !DISubprogram(name: "sys_heap_init", scope: !3971, file: !3971, line: 485, type: !4680, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2518, retainedNodes: !4682)
!4680 = !DISubroutineType(types: !4681)
!4681 = !{null, !3974, !117, !315}
!4682 = !{!4683, !4684, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692}
!4683 = !DILocalVariable(name: "heap", arg: 1, scope: !4679, file: !3971, line: 485, type: !3974)
!4684 = !DILocalVariable(name: "mem", arg: 2, scope: !4679, file: !3971, line: 485, type: !117)
!4685 = !DILocalVariable(name: "bytes", arg: 3, scope: !4679, file: !3971, line: 485, type: !315)
!4686 = !DILocalVariable(name: "addr", scope: !4679, file: !3971, line: 502, type: !22)
!4687 = !DILocalVariable(name: "end", scope: !4679, file: !3971, line: 503, type: !22)
!4688 = !DILocalVariable(name: "heap_sz", scope: !4679, file: !3971, line: 504, type: !4116)
!4689 = !DILocalVariable(name: "h", scope: !4679, file: !3971, line: 509, type: !2535)
!4690 = !DILocalVariable(name: "nb_buckets", scope: !4679, file: !3971, line: 520, type: !118)
!4691 = !DILocalVariable(name: "chunk0_size", scope: !4679, file: !3971, line: 521, type: !4116)
!4692 = !DILocalVariable(name: "i", scope: !4693, file: !3971, line: 526, type: !118)
!4693 = distinct !DILexicalBlock(scope: !4679, file: !3971, line: 526, column: 2)
!4694 = !DILocation(line: 0, scope: !4679)
!4695 = !DILocation(line: 491, column: 3, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4697, file: !3971, line: 491, column: 3)
!4697 = distinct !DILexicalBlock(scope: !4698, file: !3971, line: 491, column: 3)
!4698 = distinct !DILexicalBlock(scope: !4699, file: !3971, line: 489, column: 46)
!4699 = distinct !DILexicalBlock(scope: !4679, file: !3971, line: 489, column: 6)
!4700 = !DILocation(line: 491, column: 3, scope: !4697)
!4701 = !DILocation(line: 491, column: 3, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4696, file: !3971, line: 491, column: 3)
!4703 = !DILocation(line: 498, column: 2, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !3971, line: 498, column: 2)
!4705 = distinct !DILexicalBlock(scope: !4679, file: !3971, line: 498, column: 2)
!4706 = !DILocation(line: 498, column: 2, scope: !4705)
!4707 = !DILocation(line: 498, column: 2, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4704, file: !3971, line: 498, column: 2)
!4709 = !DILocation(line: 499, column: 8, scope: !4679)
!4710 = !DILocation(line: 502, column: 19, scope: !4679)
!4711 = !DILocation(line: 503, column: 18, scope: !4679)
!4712 = !DILocation(line: 504, column: 27, scope: !4679)
!4713 = !DILocation(line: 504, column: 35, scope: !4679)
!4714 = !DILocation(line: 507, column: 2, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4716, file: !3971, line: 507, column: 2)
!4716 = distinct !DILexicalBlock(scope: !4679, file: !3971, line: 507, column: 2)
!4717 = !DILocation(line: 507, column: 2, scope: !4716)
!4718 = !DILocation(line: 507, column: 2, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4715, file: !3971, line: 507, column: 2)
!4720 = !DILocation(line: 509, column: 21, scope: !4679)
!4721 = !DILocation(line: 510, column: 8, scope: !4679)
!4722 = !DILocation(line: 510, column: 13, scope: !4679)
!4723 = !DILocation(line: 511, column: 5, scope: !4679)
!4724 = !DILocation(line: 511, column: 15, scope: !4679)
!4725 = !DILocation(line: 512, column: 5, scope: !4679)
!4726 = !DILocation(line: 512, column: 19, scope: !4679)
!4727 = !DILocation(line: 520, column: 19, scope: !4679)
!4728 = !DILocation(line: 522, column: 21, scope: !4679)
!4729 = !DILocation(line: 521, column: 56, scope: !4679)
!4730 = !DILocation(line: 521, column: 26, scope: !4679)
!4731 = !DILocation(line: 524, column: 2, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4733, file: !3971, line: 524, column: 2)
!4733 = distinct !DILexicalBlock(scope: !4679, file: !3971, line: 524, column: 2)
!4734 = !DILocation(line: 524, column: 2, scope: !4733)
!4735 = !DILocation(line: 0, scope: !4693)
!4736 = !DILocation(line: 526, column: 20, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4693, file: !3971, line: 526, column: 2)
!4738 = !DILocation(line: 526, column: 2, scope: !4693)
!4739 = !DILocation(line: 524, column: 2, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4732, file: !3971, line: 524, column: 2)
!4741 = !DILocation(line: 531, column: 2, scope: !4679)
!4742 = !DILocation(line: 532, column: 2, scope: !4679)
!4743 = !DILocation(line: 533, column: 2, scope: !4679)
!4744 = !DILocation(line: 536, column: 41, scope: !4679)
!4745 = !DILocation(line: 536, column: 2, scope: !4679)
!4746 = !DILocation(line: 537, column: 2, scope: !4679)
!4747 = !DILocation(line: 540, column: 2, scope: !4679)
!4748 = !DILocation(line: 541, column: 2, scope: !4679)
!4749 = !DILocation(line: 542, column: 2, scope: !4679)
!4750 = !DILocation(line: 544, column: 2, scope: !4679)
!4751 = !DILocation(line: 545, column: 1, scope: !4679)
!4752 = !DILocation(line: 527, column: 17, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4737, file: !3971, line: 526, column: 39)
!4754 = !DILocation(line: 527, column: 22, scope: !4753)
!4755 = !DILocation(line: 526, column: 35, scope: !4737)
!4756 = distinct !{!4756, !4738, !4757}
!4757 = !DILocation(line: 528, column: 2, scope: !4693)
!4758 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2555, file: !2555, line: 1338, type: !4759, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !4767)
!4759 = !DISubroutineType(types: !4760)
!4760 = !{!118, !3705, !117, !133, !4761, !156}
!4761 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3671, line: 99, baseType: !4762)
!4762 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3671, line: 40, baseType: !4763)
!4763 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2555, baseType: !4764)
!4764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4765)
!4765 = !{!4766}
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4764, file: !2555, baseType: !117, size: 32)
!4767 = !{!4768, !4769, !4770, !4771, !4772, !4773, !4777, !4778, !4779, !4781, !4786, !4831, !4834, !4837, !4838, !4839, !4840, !4841, !4842, !4843, !4846, !4847, !4848, !4852, !4855, !4857, !4860, !4861, !4862, !4867, !4873, !4876, !4880, !4886, !4890, !4893, !4895, !4898}
!4768 = !DILocalVariable(name: "out", arg: 1, scope: !4758, file: !2555, line: 1338, type: !3705)
!4769 = !DILocalVariable(name: "ctx", arg: 2, scope: !4758, file: !2555, line: 1338, type: !117)
!4770 = !DILocalVariable(name: "fp", arg: 3, scope: !4758, file: !2555, line: 1338, type: !133)
!4771 = !DILocalVariable(name: "ap", arg: 4, scope: !4758, file: !2555, line: 1339, type: !4761)
!4772 = !DILocalVariable(name: "flags", arg: 5, scope: !4758, file: !2555, line: 1339, type: !156)
!4773 = !DILocalVariable(name: "buf", scope: !4758, file: !2555, line: 1341, type: !4774)
!4774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 176, elements: !4775)
!4775 = !{!4776}
!4776 = !DISubrange(count: 22)
!4777 = !DILocalVariable(name: "count", scope: !4758, file: !2555, line: 1342, type: !315)
!4778 = !DILocalVariable(name: "sint", scope: !4758, file: !2555, line: 1343, type: !2574)
!4779 = !DILocalVariable(name: "tagged_ap", scope: !4758, file: !2555, line: 1345, type: !4780)
!4780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!4781 = !DILocalVariable(name: "rc", scope: !4782, file: !2555, line: 1377, type: !118)
!4782 = distinct !DILexicalBlock(scope: !4783, file: !2555, line: 1377, column: 4)
!4783 = distinct !DILexicalBlock(scope: !4784, file: !2555, line: 1376, column: 19)
!4784 = distinct !DILexicalBlock(scope: !4785, file: !2555, line: 1376, column: 7)
!4785 = distinct !DILexicalBlock(scope: !4758, file: !2555, line: 1375, column: 19)
!4786 = !DILocalVariable(name: "state", scope: !4785, file: !2555, line: 1395, type: !4787)
!4787 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4758, file: !2555, line: 1392, size: 192, elements: !4788)
!4788 = !{!4789, !4799}
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4787, file: !2555, line: 1393, baseType: !4790, size: 64)
!4790 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2555, line: 166, size: 64, elements: !4791)
!4791 = !{!4792, !4793, !4794, !4796, !4798}
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4790, file: !2555, line: 168, baseType: !2574, size: 64)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4790, file: !2555, line: 171, baseType: !2577, size: 64)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4790, file: !2555, line: 174, baseType: !4795, size: 64)
!4795 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4790, file: !2555, line: 177, baseType: !4797, size: 64)
!4797 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4790, file: !2555, line: 180, baseType: !117, size: 32)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4787, file: !2555, line: 1394, baseType: !4800, size: 96, offset: 64)
!4800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2555, line: 189, size: 96, elements: !4801)
!4801 = !{!4802, !4803, !4804, !4805, !4806, !4807, !4808, !4809, !4810, !4811, !4812, !4813, !4814, !4815, !4816, !4817, !4818, !4819, !4820, !4821, !4826}
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4800, file: !2555, line: 191, baseType: !146, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4800, file: !2555, line: 194, baseType: !146, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4800, file: !2555, line: 197, baseType: !146, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4800, file: !2555, line: 200, baseType: !146, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4800, file: !2555, line: 203, baseType: !146, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4800, file: !2555, line: 206, baseType: !146, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4800, file: !2555, line: 209, baseType: !146, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4800, file: !2555, line: 212, baseType: !146, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4800, file: !2555, line: 219, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4800, file: !2555, line: 222, baseType: !146, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4800, file: !2555, line: 229, baseType: !146, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4800, file: !2555, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4800, file: !2555, line: 238, baseType: !146, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4800, file: !2555, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4800, file: !2555, line: 244, baseType: !146, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4800, file: !2555, line: 247, baseType: !146, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4800, file: !2555, line: 252, baseType: !146, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4800, file: !2555, line: 257, baseType: !146, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4800, file: !2555, line: 260, baseType: !144, size: 8, offset: 24)
!4821 = !DIDerivedType(tag: DW_TAG_member, scope: !4800, file: !2555, line: 262, baseType: !4822, size: 32, offset: 32)
!4822 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4800, file: !2555, line: 262, size: 32, elements: !4823)
!4823 = !{!4824, !4825}
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4822, file: !2555, line: 267, baseType: !118, size: 32)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4822, file: !2555, line: 289, baseType: !118, size: 32)
!4826 = !DIDerivedType(tag: DW_TAG_member, scope: !4800, file: !2555, line: 292, baseType: !4827, size: 32, offset: 64)
!4827 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4800, file: !2555, line: 292, size: 32, elements: !4828)
!4828 = !{!4829, !4830}
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4827, file: !2555, line: 297, baseType: !118, size: 32)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4827, file: !2555, line: 306, baseType: !118, size: 32)
!4831 = !DILocalVariable(name: "conv", scope: !4785, file: !2555, line: 1400, type: !4832)
!4832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4833)
!4833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4800, size: 32)
!4834 = !DILocalVariable(name: "value", scope: !4785, file: !2555, line: 1401, type: !4835)
!4835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4836)
!4836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4790, size: 32)
!4837 = !DILocalVariable(name: "sp", scope: !4785, file: !2555, line: 1402, type: !133)
!4838 = !DILocalVariable(name: "width", scope: !4785, file: !2555, line: 1403, type: !118)
!4839 = !DILocalVariable(name: "precision", scope: !4785, file: !2555, line: 1404, type: !118)
!4840 = !DILocalVariable(name: "bps", scope: !4785, file: !2555, line: 1405, type: !133)
!4841 = !DILocalVariable(name: "bpe", scope: !4785, file: !2555, line: 1406, type: !133)
!4842 = !DILocalVariable(name: "sign", scope: !4785, file: !2555, line: 1407, type: !135)
!4843 = !DILocalVariable(name: "arg", scope: !4844, file: !2555, line: 1432, type: !118)
!4844 = distinct !DILexicalBlock(scope: !4845, file: !2555, line: 1431, column: 24)
!4845 = distinct !DILexicalBlock(scope: !4785, file: !2555, line: 1431, column: 7)
!4846 = !DILocalVariable(name: "specifier_cat", scope: !4785, file: !2555, line: 1468, type: !2554)
!4847 = !DILocalVariable(name: "length_mod", scope: !4785, file: !2555, line: 1470, type: !2562)
!4848 = !DILocalVariable(name: "rc", scope: !4849, file: !2555, line: 1575, type: !118)
!4849 = distinct !DILexicalBlock(scope: !4850, file: !2555, line: 1575, column: 4)
!4850 = distinct !DILexicalBlock(scope: !4851, file: !2555, line: 1574, column: 43)
!4851 = distinct !DILexicalBlock(scope: !4785, file: !2555, line: 1574, column: 7)
!4852 = !DILocalVariable(name: "rc", scope: !4853, file: !2555, line: 1584, type: !118)
!4853 = distinct !DILexicalBlock(scope: !4854, file: !2555, line: 1584, column: 4)
!4854 = distinct !DILexicalBlock(scope: !4785, file: !2555, line: 1582, column: 28)
!4855 = !DILocalVariable(name: "len", scope: !4856, file: !2555, line: 1589, type: !315)
!4856 = distinct !DILexicalBlock(scope: !4854, file: !2555, line: 1586, column: 13)
!4857 = !DILocalVariable(name: "len", scope: !4858, file: !2555, line: 1641, type: !315)
!4858 = distinct !DILexicalBlock(scope: !4859, file: !2555, line: 1640, column: 24)
!4859 = distinct !DILexicalBlock(scope: !4854, file: !2555, line: 1640, column: 8)
!4860 = !DILocalVariable(name: "nj_len", scope: !4785, file: !2555, line: 1722, type: !315)
!4861 = !DILocalVariable(name: "pad_len", scope: !4785, file: !2555, line: 1723, type: !118)
!4862 = !DILocalVariable(name: "pad", scope: !4863, file: !2555, line: 1751, type: !135)
!4863 = distinct !DILexicalBlock(scope: !4864, file: !2555, line: 1750, column: 26)
!4864 = distinct !DILexicalBlock(scope: !4865, file: !2555, line: 1750, column: 8)
!4865 = distinct !DILexicalBlock(scope: !4866, file: !2555, line: 1747, column: 18)
!4866 = distinct !DILexicalBlock(scope: !4785, file: !2555, line: 1747, column: 7)
!4867 = !DILocalVariable(name: "rc", scope: !4868, file: !2555, line: 1758, type: !118)
!4868 = distinct !DILexicalBlock(scope: !4869, file: !2555, line: 1758, column: 7)
!4869 = distinct !DILexicalBlock(scope: !4870, file: !2555, line: 1757, column: 21)
!4870 = distinct !DILexicalBlock(scope: !4871, file: !2555, line: 1757, column: 10)
!4871 = distinct !DILexicalBlock(scope: !4872, file: !2555, line: 1756, column: 26)
!4872 = distinct !DILexicalBlock(scope: !4863, file: !2555, line: 1756, column: 9)
!4873 = !DILocalVariable(name: "rc", scope: !4874, file: !2555, line: 1765, type: !118)
!4874 = distinct !DILexicalBlock(scope: !4875, file: !2555, line: 1765, column: 6)
!4875 = distinct !DILexicalBlock(scope: !4863, file: !2555, line: 1764, column: 25)
!4876 = !DILocalVariable(name: "rc", scope: !4877, file: !2555, line: 1774, type: !118)
!4877 = distinct !DILexicalBlock(scope: !4878, file: !2555, line: 1774, column: 4)
!4878 = distinct !DILexicalBlock(scope: !4879, file: !2555, line: 1773, column: 18)
!4879 = distinct !DILexicalBlock(scope: !4785, file: !2555, line: 1773, column: 7)
!4880 = !DILocalVariable(name: "rc", scope: !4881, file: !2555, line: 1819, type: !118)
!4881 = distinct !DILexicalBlock(scope: !4882, file: !2555, line: 1819, column: 5)
!4882 = distinct !DILexicalBlock(scope: !4883, file: !2555, line: 1818, column: 44)
!4883 = distinct !DILexicalBlock(scope: !4884, file: !2555, line: 1818, column: 8)
!4884 = distinct !DILexicalBlock(scope: !4885, file: !2555, line: 1817, column: 10)
!4885 = distinct !DILexicalBlock(scope: !4785, file: !2555, line: 1777, column: 7)
!4886 = !DILocalVariable(name: "rc", scope: !4887, file: !2555, line: 1823, type: !118)
!4887 = distinct !DILexicalBlock(scope: !4888, file: !2555, line: 1823, column: 5)
!4888 = distinct !DILexicalBlock(scope: !4889, file: !2555, line: 1822, column: 26)
!4889 = distinct !DILexicalBlock(scope: !4884, file: !2555, line: 1822, column: 8)
!4890 = !DILocalVariable(name: "rc", scope: !4891, file: !2555, line: 1828, type: !118)
!4891 = distinct !DILexicalBlock(scope: !4892, file: !2555, line: 1828, column: 5)
!4892 = distinct !DILexicalBlock(scope: !4884, file: !2555, line: 1827, column: 26)
!4893 = !DILocalVariable(name: "rc", scope: !4894, file: !2555, line: 1831, type: !118)
!4894 = distinct !DILexicalBlock(scope: !4884, file: !2555, line: 1831, column: 4)
!4895 = !DILocalVariable(name: "rc", scope: !4896, file: !2555, line: 1836, type: !118)
!4896 = distinct !DILexicalBlock(scope: !4897, file: !2555, line: 1836, column: 4)
!4897 = distinct !DILexicalBlock(scope: !4785, file: !2555, line: 1835, column: 21)
!4898 = !DILabel(scope: !4854, name: "prec_int_pad0", file: !2555, line: 1634)
!4899 = !DILocation(line: 0, scope: !4758)
!4900 = !DILocation(line: 1341, column: 2, scope: !4758)
!4901 = !DILocation(line: 1341, column: 7, scope: !4758)
!4902 = !DILocation(line: 1375, column: 2, scope: !4758)
!4903 = !DILocation(line: 1342, column: 9, scope: !4758)
!4904 = !DILocation(line: 1375, column: 9, scope: !4758)
!4905 = !DILocation(line: 1377, column: 4, scope: !4782)
!4906 = !DILocation(line: 0, scope: !4782)
!4907 = !DILocation(line: 1377, column: 4, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4782, file: !2555, line: 1377, column: 4)
!4909 = distinct !{!4909, !4902, !4910}
!4910 = !DILocation(line: 1839, column: 2, scope: !4758)
!4911 = !DILocation(line: 1392, column: 3, scope: !4785)
!4912 = !DILocation(line: 1395, column: 5, scope: !4785)
!4913 = !DILocation(line: 0, scope: !4785)
!4914 = !DILocation(line: 1409, column: 8, scope: !4785)
!4915 = !DILocation(line: 1414, column: 13, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4785, file: !2555, line: 1414, column: 7)
!4917 = !DILocation(line: 1414, column: 7, scope: !4785)
!4918 = !DILocation(line: 1415, column: 12, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4916, file: !2555, line: 1414, column: 25)
!4920 = !DILocation(line: 1417, column: 14, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4919, file: !2555, line: 1417, column: 8)
!4922 = !DILocation(line: 1417, column: 8, scope: !4919)
!4923 = !DILocation(line: 1418, column: 21, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4921, file: !2555, line: 1417, column: 19)
!4925 = !DILocation(line: 1419, column: 13, scope: !4924)
!4926 = !DILocation(line: 1420, column: 4, scope: !4924)
!4927 = !DILocation(line: 1421, column: 20, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4916, file: !2555, line: 1421, column: 14)
!4929 = !DILocation(line: 1421, column: 14, scope: !4916)
!4930 = !DILocation(line: 1431, column: 13, scope: !4845)
!4931 = !DILocation(line: 1431, column: 7, scope: !4785)
!4932 = !DILocation(line: 1432, column: 14, scope: !4844)
!4933 = !DILocation(line: 0, scope: !4844)
!4934 = !DILocation(line: 1434, column: 12, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4844, file: !2555, line: 1434, column: 8)
!4936 = !DILocation(line: 1434, column: 8, scope: !4844)
!4937 = !DILocation(line: 1435, column: 24, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4935, file: !2555, line: 1434, column: 17)
!4939 = !DILocation(line: 1436, column: 4, scope: !4938)
!4940 = !DILocation(line: 1439, column: 20, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4845, file: !2555, line: 1439, column: 14)
!4942 = !DILocation(line: 1439, column: 14, scope: !4845)
!4943 = !DILocation(line: 1469, column: 37, scope: !4785)
!4944 = !DILocation(line: 1448, column: 20, scope: !4785)
!4945 = !DILocation(line: 1449, column: 22, scope: !4785)
!4946 = !DILocation(line: 1471, column: 34, scope: !4785)
!4947 = !DILocation(line: 1478, column: 7, scope: !4785)
!4948 = !DILocation(line: 1479, column: 4, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4950, file: !2555, line: 1478, column: 40)
!4950 = distinct !DILexicalBlock(scope: !4785, file: !2555, line: 1478, column: 7)
!4951 = !DILocation(line: 1484, column: 19, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4949, file: !2555, line: 1479, column: 24)
!4953 = !DILocation(line: 1484, column: 17, scope: !4952)
!4954 = !DILocation(line: 1485, column: 5, scope: !4952)
!4955 = !DILocation(line: 1492, column: 20, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4957, file: !2555, line: 1491, column: 12)
!4957 = distinct !DILexicalBlock(scope: !4952, file: !2555, line: 1487, column: 9)
!4958 = !DILocation(line: 1492, column: 18, scope: !4956)
!4959 = !DILocation(line: 1494, column: 5, scope: !4952)
!4960 = !DILocation(line: 1497, column: 23, scope: !4952)
!4961 = !DILocation(line: 1496, column: 17, scope: !4952)
!4962 = !DILocation(line: 1498, column: 5, scope: !4952)
!4963 = !DILocation(line: 1501, column: 23, scope: !4952)
!4964 = !DILocation(line: 1500, column: 17, scope: !4952)
!4965 = !DILocation(line: 1502, column: 5, scope: !4952)
!4966 = !DILocation(line: 1513, column: 23, scope: !4952)
!4967 = !DILocation(line: 1513, column: 6, scope: !4952)
!4968 = !DILocation(line: 1512, column: 17, scope: !4952)
!4969 = !DILocation(line: 1514, column: 5, scope: !4952)
!4970 = !DILocation(line: 0, scope: !4952)
!4971 = !DILocation(line: 1516, column: 8, scope: !4949)
!4972 = !DILocation(line: 1517, column: 19, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4974, file: !2555, line: 1516, column: 33)
!4974 = distinct !DILexicalBlock(scope: !4949, file: !2555, line: 1516, column: 8)
!4975 = !DILocation(line: 1517, column: 17, scope: !4973)
!4976 = !DILocation(line: 1518, column: 4, scope: !4973)
!4977 = !DILocation(line: 1519, column: 19, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4979, file: !2555, line: 1518, column: 39)
!4979 = distinct !DILexicalBlock(scope: !4974, file: !2555, line: 1518, column: 15)
!4980 = !DILocation(line: 1519, column: 17, scope: !4978)
!4981 = !DILocation(line: 1520, column: 4, scope: !4978)
!4982 = !DILocation(line: 1522, column: 4, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4984, file: !2555, line: 1521, column: 47)
!4984 = distinct !DILexicalBlock(scope: !4950, file: !2555, line: 1521, column: 14)
!4985 = !DILocation(line: 1527, column: 19, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4983, file: !2555, line: 1522, column: 24)
!4987 = !DILocation(line: 1527, column: 17, scope: !4986)
!4988 = !DILocation(line: 1528, column: 5, scope: !4986)
!4989 = !DILocation(line: 0, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4986, file: !2555, line: 1530, column: 9)
!4991 = !DILocation(line: 1540, column: 23, scope: !4986)
!4992 = !DILocation(line: 1539, column: 17, scope: !4986)
!4993 = !DILocation(line: 1542, column: 5, scope: !4986)
!4994 = !DILocation(line: 1545, column: 23, scope: !4986)
!4995 = !DILocation(line: 1544, column: 17, scope: !4986)
!4996 = !DILocation(line: 1547, column: 5, scope: !4986)
!4997 = !DILocation(line: 1551, column: 23, scope: !4986)
!4998 = !DILocation(line: 1551, column: 6, scope: !4986)
!4999 = !DILocation(line: 1550, column: 17, scope: !4986)
!5000 = !DILocation(line: 1552, column: 5, scope: !4986)
!5001 = !DILocation(line: 0, scope: !4986)
!5002 = !DILocation(line: 1554, column: 8, scope: !4983)
!5003 = !DILocation(line: 1555, column: 19, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !5005, file: !2555, line: 1554, column: 33)
!5005 = distinct !DILexicalBlock(scope: !4983, file: !2555, line: 1554, column: 8)
!5006 = !DILocation(line: 1555, column: 17, scope: !5004)
!5007 = !DILocation(line: 1556, column: 4, scope: !5004)
!5008 = !DILocation(line: 1557, column: 19, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5010, file: !2555, line: 1556, column: 39)
!5010 = distinct !DILexicalBlock(scope: !5005, file: !2555, line: 1556, column: 15)
!5011 = !DILocation(line: 1557, column: 17, scope: !5009)
!5012 = !DILocation(line: 1558, column: 4, scope: !5009)
!5013 = !DILocation(line: 0, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5015, file: !2555, line: 1560, column: 8)
!5015 = distinct !DILexicalBlock(scope: !5016, file: !2555, line: 1559, column: 45)
!5016 = distinct !DILexicalBlock(scope: !4984, file: !2555, line: 1559, column: 14)
!5017 = !DILocation(line: 1566, column: 17, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !5019, file: !2555, line: 1565, column: 46)
!5019 = distinct !DILexicalBlock(scope: !5016, file: !2555, line: 1565, column: 14)
!5020 = !DILocation(line: 1566, column: 15, scope: !5018)
!5021 = !DILocation(line: 1567, column: 3, scope: !5018)
!5022 = !DILocation(line: 1574, column: 21, scope: !4851)
!5023 = !DILocation(line: 1575, column: 4, scope: !4849)
!5024 = !DILocation(line: 0, scope: !4849)
!5025 = !DILocation(line: 1575, column: 4, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !4849, file: !2555, line: 1575, column: 4)
!5027 = !DILocation(line: 1582, column: 17, scope: !4785)
!5028 = !DILocation(line: 1582, column: 3, scope: !4785)
!5029 = !DILocation(line: 1584, column: 4, scope: !4853)
!5030 = !DILocation(line: 0, scope: !4853)
!5031 = !DILocation(line: 1584, column: 4, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !4853, file: !2555, line: 1584, column: 4)
!5033 = !DILocation(line: 1587, column: 31, scope: !4856)
!5034 = !DILocation(line: 1591, column: 18, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !4856, file: !2555, line: 1591, column: 8)
!5036 = !DILocation(line: 1591, column: 8, scope: !4856)
!5037 = !DILocation(line: 1592, column: 11, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5035, file: !2555, line: 1591, column: 24)
!5039 = !DILocation(line: 0, scope: !4856)
!5040 = !DILocation(line: 1593, column: 4, scope: !5038)
!5041 = !DILocation(line: 1594, column: 11, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5035, file: !2555, line: 1593, column: 11)
!5043 = !DILocation(line: 1604, column: 51, scope: !4854)
!5044 = !DILocation(line: 1604, column: 13, scope: !4854)
!5045 = !DILocation(line: 1604, column: 11, scope: !4854)
!5046 = !DILocation(line: 1606, column: 4, scope: !4854)
!5047 = !DILocation(line: 1609, column: 14, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !4854, file: !2555, line: 1609, column: 8)
!5049 = !DILocation(line: 1609, column: 8, scope: !4854)
!5050 = !DILocation(line: 1619, column: 18, scope: !4854)
!5051 = !DILocation(line: 1620, column: 13, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !4854, file: !2555, line: 1620, column: 8)
!5053 = !DILocation(line: 1620, column: 8, scope: !4854)
!5054 = !DILocation(line: 1622, column: 36, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5052, file: !2555, line: 1620, column: 18)
!5056 = !DILocation(line: 1622, column: 17, scope: !5055)
!5057 = !DILocation(line: 1623, column: 4, scope: !5055)
!5058 = !DILocation(line: 1632, column: 29, scope: !4854)
!5059 = !DILocation(line: 1632, column: 10, scope: !4854)
!5060 = !DILocation(line: 1632, column: 4, scope: !4854)
!5061 = !DILocation(line: 1407, column: 8, scope: !4785)
!5062 = !DILocation(line: 0, scope: !4854)
!5063 = !DILocation(line: 1634, column: 3, scope: !4854)
!5064 = !DILocation(line: 1640, column: 18, scope: !4859)
!5065 = !DILocation(line: 1640, column: 8, scope: !4854)
!5066 = !DILocation(line: 1729, column: 13, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !4785, file: !2555, line: 1729, column: 7)
!5068 = !DILocation(line: 1641, column: 22, scope: !4858)
!5069 = !DILocation(line: 0, scope: !4858)
!5070 = !DILocation(line: 1646, column: 21, scope: !4858)
!5071 = !DILocation(line: 1649, column: 13, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !4858, file: !2555, line: 1649, column: 9)
!5073 = !DILocation(line: 1649, column: 9, scope: !4858)
!5074 = !DILocation(line: 1650, column: 35, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5072, file: !2555, line: 1649, column: 34)
!5076 = !DILocation(line: 1650, column: 23, scope: !5075)
!5077 = !DILocation(line: 1651, column: 5, scope: !5075)
!5078 = !DILocation(line: 1660, column: 15, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !4854, file: !2555, line: 1660, column: 8)
!5080 = !DILocation(line: 1660, column: 19, scope: !5079)
!5081 = !DILocation(line: 1660, column: 8, scope: !4854)
!5082 = !DILocation(line: 1661, column: 23, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5079, file: !2555, line: 1660, column: 28)
!5084 = !DILocation(line: 1661, column: 11, scope: !5083)
!5085 = !DILocation(line: 1665, column: 22, scope: !5083)
!5086 = !DILocation(line: 1666, column: 21, scope: !5083)
!5087 = !DILocation(line: 1668, column: 5, scope: !5083)
!5088 = !DILocation(line: 1677, column: 30, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5090, file: !2555, line: 1676, column: 49)
!5090 = distinct !DILexicalBlock(scope: !4854, file: !2555, line: 1676, column: 8)
!5091 = !DILocation(line: 1677, column: 5, scope: !5089)
!5092 = !DILocation(line: 1680, column: 4, scope: !4854)
!5093 = !DILocation(line: 0, scope: !5035)
!5094 = !DILocation(line: 1597, column: 14, scope: !4856)
!5095 = !DILocation(line: 1699, column: 11, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !4785, file: !2555, line: 1699, column: 7)
!5097 = !DILocation(line: 1699, column: 7, scope: !4785)
!5098 = !DILocation(line: 1725, column: 7, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !4785, file: !2555, line: 1725, column: 7)
!5100 = !DILocation(line: 1725, column: 12, scope: !5099)
!5101 = !DILocation(line: 1747, column: 13, scope: !4866)
!5102 = !DILocation(line: 1747, column: 7, scope: !4785)
!5103 = !DILocation(line: 1722, column: 24, scope: !4785)
!5104 = !DILocation(line: 1725, column: 7, scope: !4785)
!5105 = !DILocation(line: 1729, column: 7, scope: !4785)
!5106 = !DILocation(line: 1736, column: 13, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !4785, file: !2555, line: 1736, column: 7)
!5108 = !DILocation(line: 1735, column: 19, scope: !4785)
!5109 = !DILocation(line: 1736, column: 7, scope: !4785)
!5110 = !DILocation(line: 1748, column: 10, scope: !4865)
!5111 = !DILocation(line: 1750, column: 15, scope: !4864)
!5112 = !DILocation(line: 1750, column: 8, scope: !4865)
!5113 = !DILocation(line: 0, scope: !4863)
!5114 = !DILocation(line: 1756, column: 15, scope: !4872)
!5115 = !DILocation(line: 1756, column: 9, scope: !4863)
!5116 = !DILocation(line: 1758, column: 7, scope: !4868)
!5117 = !DILocation(line: 0, scope: !4868)
!5118 = !DILocation(line: 1758, column: 7, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !4868, file: !2555, line: 1758, column: 7)
!5120 = !DILocation(line: 1764, column: 5, scope: !4863)
!5121 = !DILocation(line: 0, scope: !4865)
!5122 = !DILocation(line: 1764, column: 20, scope: !4863)
!5123 = !DILocation(line: 1764, column: 17, scope: !4863)
!5124 = !DILocation(line: 1765, column: 6, scope: !4874)
!5125 = !DILocation(line: 0, scope: !4874)
!5126 = !DILocation(line: 1765, column: 6, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !4874, file: !2555, line: 1765, column: 6)
!5128 = distinct !{!5128, !5120, !5129}
!5129 = !DILocation(line: 1766, column: 5, scope: !4863)
!5130 = !DILocation(line: 1773, column: 12, scope: !4879)
!5131 = !DILocation(line: 1773, column: 7, scope: !4785)
!5132 = !DILocation(line: 1773, column: 7, scope: !4879)
!5133 = !DILocation(line: 1774, column: 4, scope: !4877)
!5134 = !DILocation(line: 0, scope: !4877)
!5135 = !DILocation(line: 1774, column: 4, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !4877, file: !2555, line: 1774, column: 4)
!5137 = !DILocation(line: 1818, column: 8, scope: !4883)
!5138 = !DILocation(line: 1818, column: 27, scope: !4883)
!5139 = !DILocation(line: 1818, column: 25, scope: !4883)
!5140 = !DILocation(line: 1818, column: 8, scope: !4884)
!5141 = !DILocation(line: 1819, column: 5, scope: !4881)
!5142 = !DILocation(line: 0, scope: !4881)
!5143 = !DILocation(line: 1819, column: 5, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !4881, file: !2555, line: 1819, column: 5)
!5145 = !DILocation(line: 1822, column: 14, scope: !4889)
!5146 = !DILocation(line: 1822, column: 8, scope: !4884)
!5147 = !DILocation(line: 1823, column: 5, scope: !4887)
!5148 = !DILocation(line: 0, scope: !4887)
!5149 = !DILocation(line: 1823, column: 5, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !4887, file: !2555, line: 1823, column: 5)
!5151 = !DILocation(line: 1826, column: 20, scope: !4884)
!5152 = !DILocation(line: 1827, column: 4, scope: !4884)
!5153 = !DILocation(line: 0, scope: !4884)
!5154 = !DILocation(line: 1827, column: 21, scope: !4884)
!5155 = !DILocation(line: 1827, column: 18, scope: !4884)
!5156 = !DILocation(line: 1828, column: 5, scope: !4891)
!5157 = !DILocation(line: 0, scope: !4891)
!5158 = !DILocation(line: 1828, column: 5, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !4891, file: !2555, line: 1828, column: 5)
!5160 = distinct !{!5160, !5152, !5161}
!5161 = !DILocation(line: 1829, column: 4, scope: !4884)
!5162 = !DILocation(line: 1831, column: 4, scope: !4894)
!5163 = !DILocation(line: 0, scope: !4894)
!5164 = !DILocation(line: 1831, column: 4, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !4894, file: !2555, line: 1831, column: 4)
!5166 = !DILocation(line: 1835, column: 16, scope: !4785)
!5167 = !DILocation(line: 1835, column: 3, scope: !4785)
!5168 = !DILocation(line: 1836, column: 4, scope: !4896)
!5169 = !DILocation(line: 0, scope: !4896)
!5170 = !DILocation(line: 1836, column: 4, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !4896, file: !2555, line: 1836, column: 4)
!5172 = !DILocation(line: 1837, column: 4, scope: !4897)
!5173 = distinct !{!5173, !5167, !5174}
!5174 = !DILocation(line: 1838, column: 3, scope: !4785)
!5175 = !DILocation(line: 1844, column: 1, scope: !4758)
!5176 = distinct !DISubprogram(name: "extract_conversion", scope: !2555, file: !2555, line: 642, type: !5177, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !5179)
!5177 = !DISubroutineType(types: !5178)
!5178 = !{!133, !4833, !133}
!5179 = !{!5180, !5181}
!5180 = !DILocalVariable(name: "conv", arg: 1, scope: !5176, file: !2555, line: 642, type: !4833)
!5181 = !DILocalVariable(name: "sp", arg: 2, scope: !5176, file: !2555, line: 643, type: !133)
!5182 = !DILocation(line: 0, scope: !5176)
!5183 = !DILocation(line: 645, column: 10, scope: !5176)
!5184 = !DILocation(line: 653, column: 2, scope: !5176)
!5185 = !DILocation(line: 654, column: 6, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5176, file: !2555, line: 654, column: 6)
!5187 = !DILocation(line: 654, column: 10, scope: !5186)
!5188 = !DILocation(line: 654, column: 6, scope: !5176)
!5189 = !DILocation(line: 655, column: 24, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5186, file: !2555, line: 654, column: 18)
!5191 = !DILocation(line: 655, column: 19, scope: !5190)
!5192 = !DILocation(line: 656, column: 3, scope: !5190)
!5193 = !DILocation(line: 659, column: 7, scope: !5176)
!5194 = !DILocation(line: 660, column: 7, scope: !5176)
!5195 = !DILocation(line: 661, column: 7, scope: !5176)
!5196 = !DILocation(line: 662, column: 7, scope: !5176)
!5197 = !DILocation(line: 663, column: 7, scope: !5176)
!5198 = !DILocation(line: 665, column: 2, scope: !5176)
!5199 = !DILocation(line: 666, column: 1, scope: !5176)
!5200 = distinct !DISubprogram(name: "outs", scope: !2555, file: !2555, line: 1319, type: !5201, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !5203)
!5201 = !DISubroutineType(types: !5202)
!5202 = !{!118, !3705, !117, !133, !133}
!5203 = !{!5204, !5205, !5206, !5207, !5208, !5209}
!5204 = !DILocalVariable(name: "out", arg: 1, scope: !5200, file: !2555, line: 1319, type: !3705)
!5205 = !DILocalVariable(name: "ctx", arg: 2, scope: !5200, file: !2555, line: 1320, type: !117)
!5206 = !DILocalVariable(name: "sp", arg: 3, scope: !5200, file: !2555, line: 1321, type: !133)
!5207 = !DILocalVariable(name: "ep", arg: 4, scope: !5200, file: !2555, line: 1322, type: !133)
!5208 = !DILocalVariable(name: "count", scope: !5200, file: !2555, line: 1324, type: !315)
!5209 = !DILocalVariable(name: "rc", scope: !5210, file: !2555, line: 1327, type: !118)
!5210 = distinct !DILexicalBlock(scope: !5200, file: !2555, line: 1326, column: 45)
!5211 = !DILocation(line: 0, scope: !5200)
!5212 = !DILocation(line: 1326, column: 2, scope: !5200)
!5213 = !DILocation(line: 1324, column: 9, scope: !5200)
!5214 = !DILocation(line: 1326, column: 13, scope: !5200)
!5215 = !DILocation(line: 1326, column: 19, scope: !5200)
!5216 = !DILocation(line: 1327, column: 21, scope: !5210)
!5217 = !DILocation(line: 1326, column: 36, scope: !5200)
!5218 = !DILocation(line: 1326, column: 39, scope: !5200)
!5219 = !DILocation(line: 1327, column: 24, scope: !5210)
!5220 = !DILocation(line: 1327, column: 16, scope: !5210)
!5221 = !DILocation(line: 1327, column: 12, scope: !5210)
!5222 = !DILocation(line: 0, scope: !5210)
!5223 = !DILocation(line: 1329, column: 10, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5210, file: !2555, line: 1329, column: 7)
!5225 = !DILocation(line: 1329, column: 7, scope: !5210)
!5226 = distinct !{!5226, !5212, !5227}
!5227 = !DILocation(line: 1333, column: 2, scope: !5200)
!5228 = !DILocation(line: 1336, column: 1, scope: !5200)
!5229 = distinct !DISubprogram(name: "encode_uint", scope: !2555, file: !2555, line: 788, type: !5230, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !5232)
!5230 = !DISubroutineType(types: !5231)
!5231 = !{!1239, !2577, !4833, !1239, !133}
!5232 = !{!5233, !5234, !5235, !5236, !5237, !5238, !5240, !5241}
!5233 = !DILocalVariable(name: "value", arg: 1, scope: !5229, file: !2555, line: 788, type: !2577)
!5234 = !DILocalVariable(name: "conv", arg: 2, scope: !5229, file: !2555, line: 789, type: !4833)
!5235 = !DILocalVariable(name: "bps", arg: 3, scope: !5229, file: !2555, line: 790, type: !1239)
!5236 = !DILocalVariable(name: "bpe", arg: 4, scope: !5229, file: !2555, line: 791, type: !133)
!5237 = !DILocalVariable(name: "upcase", scope: !5229, file: !2555, line: 793, type: !146)
!5238 = !DILocalVariable(name: "radix", scope: !5229, file: !2555, line: 794, type: !5239)
!5239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5240 = !DILocalVariable(name: "bp", scope: !5229, file: !2555, line: 795, type: !1239)
!5241 = !DILocalVariable(name: "lsv", scope: !5242, file: !2555, line: 798, type: !32)
!5242 = distinct !DILexicalBlock(scope: !5229, file: !2555, line: 797, column: 5)
!5243 = !DILocation(line: 0, scope: !5229)
!5244 = !DILocation(line: 793, column: 35, scope: !5229)
!5245 = !DILocation(line: 793, column: 24, scope: !5229)
!5246 = !DILocation(line: 793, column: 16, scope: !5229)
!5247 = !DILocation(line: 794, column: 29, scope: !5229)
!5248 = !DILocation(line: 795, column: 24, scope: !5229)
!5249 = !DILocation(line: 795, column: 17, scope: !5229)
!5250 = !DILocation(line: 797, column: 2, scope: !5229)
!5251 = !DILocation(line: 802, column: 9, scope: !5242)
!5252 = !DILocation(line: 798, column: 22, scope: !5242)
!5253 = !DILocation(line: 0, scope: !5242)
!5254 = !DILocation(line: 800, column: 16, scope: !5242)
!5255 = !DILocation(line: 800, column: 11, scope: !5242)
!5256 = !DILocation(line: 800, column: 4, scope: !5242)
!5257 = !DILocation(line: 800, column: 9, scope: !5242)
!5258 = !DILocation(line: 803, column: 18, scope: !5229)
!5259 = !DILocation(line: 803, column: 24, scope: !5229)
!5260 = !DILocation(line: 803, column: 2, scope: !5242)
!5261 = distinct !{!5261, !5250, !5262}
!5262 = !DILocation(line: 803, column: 37, scope: !5229)
!5263 = !DILocation(line: 808, column: 12, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5229, file: !2555, line: 808, column: 6)
!5265 = !DILocation(line: 808, column: 6, scope: !5229)
!5266 = !DILocation(line: 809, column: 7, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5264, file: !2555, line: 808, column: 23)
!5268 = !DILocation(line: 813, column: 3, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5270, file: !2555, line: 811, column: 27)
!5270 = distinct !DILexicalBlock(scope: !5271, file: !2555, line: 811, column: 14)
!5271 = distinct !DILexicalBlock(scope: !5267, file: !2555, line: 809, column: 7)
!5272 = !DILocation(line: 0, scope: !5271)
!5273 = !DILocation(line: 818, column: 2, scope: !5229)
!5274 = distinct !DISubprogram(name: "store_count", scope: !2555, file: !2555, line: 1280, type: !5275, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !5279)
!5275 = !DISubroutineType(types: !5276)
!5276 = !{null, !5277, !117, !118}
!5277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5278, size: 32)
!5278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4800)
!5279 = !{!5280, !5281, !5282}
!5280 = !DILocalVariable(name: "conv", arg: 1, scope: !5274, file: !2555, line: 1280, type: !5277)
!5281 = !DILocalVariable(name: "dp", arg: 2, scope: !5274, file: !2555, line: 1281, type: !117)
!5282 = !DILocalVariable(name: "count", arg: 3, scope: !5274, file: !2555, line: 1282, type: !118)
!5283 = !DILocation(line: 0, scope: !5274)
!5284 = !DILocation(line: 1284, column: 38, scope: !5274)
!5285 = !DILocation(line: 1284, column: 2, scope: !5274)
!5286 = !DILocation(line: 1286, column: 4, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5274, file: !2555, line: 1284, column: 50)
!5288 = !DILocation(line: 1286, column: 14, scope: !5287)
!5289 = !DILocation(line: 1287, column: 3, scope: !5287)
!5290 = !DILocation(line: 1289, column: 24, scope: !5287)
!5291 = !DILocation(line: 1289, column: 22, scope: !5287)
!5292 = !DILocation(line: 1290, column: 3, scope: !5287)
!5293 = !DILocation(line: 1292, column: 18, scope: !5287)
!5294 = !DILocation(line: 1292, column: 4, scope: !5287)
!5295 = !DILocation(line: 1292, column: 16, scope: !5287)
!5296 = !DILocation(line: 1293, column: 3, scope: !5287)
!5297 = !DILocation(line: 1295, column: 4, scope: !5287)
!5298 = !DILocation(line: 1295, column: 15, scope: !5287)
!5299 = !DILocation(line: 1296, column: 3, scope: !5287)
!5300 = !DILocation(line: 1298, column: 22, scope: !5287)
!5301 = !DILocation(line: 1298, column: 4, scope: !5287)
!5302 = !DILocation(line: 1298, column: 20, scope: !5287)
!5303 = !DILocation(line: 1299, column: 3, scope: !5287)
!5304 = !DILocation(line: 1301, column: 21, scope: !5287)
!5305 = !DILocation(line: 1301, column: 4, scope: !5287)
!5306 = !DILocation(line: 1301, column: 19, scope: !5287)
!5307 = !DILocation(line: 1302, column: 3, scope: !5287)
!5308 = !DILocation(line: 1304, column: 4, scope: !5287)
!5309 = !DILocation(line: 1304, column: 17, scope: !5287)
!5310 = !DILocation(line: 1305, column: 3, scope: !5287)
!5311 = !DILocation(line: 1307, column: 4, scope: !5287)
!5312 = !DILocation(line: 1307, column: 20, scope: !5287)
!5313 = !DILocation(line: 1308, column: 3, scope: !5287)
!5314 = !DILocation(line: 1316, column: 1, scope: !5274)
!5315 = distinct !DISubprogram(name: "isupper", scope: !5316, file: !5316, line: 16, type: !439, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !5317)
!5316 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5317 = !{!5318}
!5318 = !DILocalVariable(name: "a", arg: 1, scope: !5315, file: !5316, line: 16, type: !118)
!5319 = !DILocation(line: 0, scope: !5315)
!5320 = !DILocation(line: 18, column: 29, scope: !5315)
!5321 = !DILocation(line: 18, column: 45, scope: !5315)
!5322 = !DILocation(line: 18, column: 2, scope: !5315)
!5323 = distinct !DISubprogram(name: "conversion_radix", scope: !2555, file: !2555, line: 761, type: !5324, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !5326)
!5324 = !DISubroutineType(types: !5325)
!5325 = !{!315, !135}
!5326 = !{!5327}
!5327 = !DILocalVariable(name: "specifier", arg: 1, scope: !5323, file: !2555, line: 761, type: !135)
!5328 = !DILocation(line: 0, scope: !5323)
!5329 = !DILocation(line: 763, column: 2, scope: !5323)
!5330 = !DILocation(line: 770, column: 3, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5323, file: !2555, line: 763, column: 21)
!5332 = !DILocation(line: 774, column: 3, scope: !5331)
!5333 = !DILocation(line: 0, scope: !5331)
!5334 = !DILocation(line: 776, column: 1, scope: !5323)
!5335 = distinct !DISubprogram(name: "extract_flags", scope: !2555, file: !2555, line: 339, type: !5177, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !5336)
!5336 = !{!5337, !5338, !5339}
!5337 = !DILocalVariable(name: "conv", arg: 1, scope: !5335, file: !2555, line: 339, type: !4833)
!5338 = !DILocalVariable(name: "sp", arg: 2, scope: !5335, file: !2555, line: 340, type: !133)
!5339 = !DILocalVariable(name: "loop", scope: !5335, file: !2555, line: 342, type: !146)
!5340 = !DILocation(line: 0, scope: !5335)
!5341 = !DILocation(line: 344, column: 2, scope: !5335)
!5342 = !DILocation(line: 345, column: 11, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5335, file: !2555, line: 344, column: 5)
!5344 = !DILocation(line: 345, column: 3, scope: !5343)
!5345 = !DILocation(line: 351, column: 4, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5343, file: !2555, line: 345, column: 16)
!5347 = !DILocation(line: 354, column: 4, scope: !5346)
!5348 = !DILocation(line: 357, column: 4, scope: !5346)
!5349 = !DILocation(line: 360, column: 4, scope: !5346)
!5350 = !DILocation(line: 0, scope: !5346)
!5351 = !DILocation(line: 370, column: 12, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5335, file: !2555, line: 370, column: 6)
!5353 = !DILocation(line: 370, column: 22, scope: !5352)
!5354 = !DILocation(line: 371, column: 19, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5352, file: !2555, line: 370, column: 42)
!5356 = !DILocation(line: 372, column: 2, scope: !5355)
!5357 = !DILocation(line: 376, column: 2, scope: !5335)
!5358 = distinct !DISubprogram(name: "extract_width", scope: !2555, file: !2555, line: 388, type: !5177, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !5359)
!5359 = !{!5360, !5361, !5362, !5363}
!5360 = !DILocalVariable(name: "conv", arg: 1, scope: !5358, file: !2555, line: 388, type: !4833)
!5361 = !DILocalVariable(name: "sp", arg: 2, scope: !5358, file: !2555, line: 389, type: !133)
!5362 = !DILocalVariable(name: "wp", scope: !5358, file: !2555, line: 398, type: !133)
!5363 = !DILocalVariable(name: "width", scope: !5358, file: !2555, line: 399, type: !315)
!5364 = !DILocation(line: 0, scope: !5358)
!5365 = !DILocation(line: 391, column: 8, scope: !5358)
!5366 = !DILocation(line: 391, column: 22, scope: !5358)
!5367 = !DILocation(line: 393, column: 6, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5358, file: !2555, line: 393, column: 6)
!5369 = !DILocation(line: 393, column: 10, scope: !5368)
!5370 = !DILocation(line: 393, column: 6, scope: !5358)
!5371 = !DILocation(line: 394, column: 20, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5368, file: !2555, line: 393, column: 18)
!5373 = !DILocation(line: 395, column: 10, scope: !5372)
!5374 = !DILocation(line: 395, column: 3, scope: !5372)
!5375 = !DILocation(line: 399, column: 17, scope: !5358)
!5376 = !DILocation(line: 401, column: 6, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5358, file: !2555, line: 401, column: 6)
!5378 = !DILocation(line: 401, column: 9, scope: !5377)
!5379 = !DILocation(line: 401, column: 6, scope: !5358)
!5380 = !DILocation(line: 402, column: 23, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5377, file: !2555, line: 401, column: 16)
!5382 = !DILocation(line: 403, column: 9, scope: !5381)
!5383 = !DILocation(line: 403, column: 21, scope: !5381)
!5384 = !DILocation(line: 405, column: 11, scope: !5381)
!5385 = !DILocation(line: 404, column: 21, scope: !5381)
!5386 = !DILocation(line: 406, column: 2, scope: !5381)
!5387 = !DILocation(line: 409, column: 1, scope: !5358)
!5388 = distinct !DISubprogram(name: "extract_prec", scope: !2555, file: !2555, line: 420, type: !5177, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !5389)
!5389 = !{!5390, !5391, !5392}
!5390 = !DILocalVariable(name: "conv", arg: 1, scope: !5388, file: !2555, line: 420, type: !4833)
!5391 = !DILocalVariable(name: "sp", arg: 2, scope: !5388, file: !2555, line: 421, type: !133)
!5392 = !DILocalVariable(name: "prec", scope: !5388, file: !2555, line: 435, type: !315)
!5393 = !DILocation(line: 0, scope: !5388)
!5394 = !DILocation(line: 423, column: 24, scope: !5388)
!5395 = !DILocation(line: 423, column: 28, scope: !5388)
!5396 = !DILocation(line: 423, column: 8, scope: !5388)
!5397 = !DILocation(line: 423, column: 21, scope: !5388)
!5398 = !DILocation(line: 425, column: 6, scope: !5388)
!5399 = !DILocation(line: 428, column: 2, scope: !5388)
!5400 = !DILocation(line: 430, column: 6, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5388, file: !2555, line: 430, column: 6)
!5402 = !DILocation(line: 430, column: 10, scope: !5401)
!5403 = !DILocation(line: 430, column: 6, scope: !5388)
!5404 = !DILocation(line: 431, column: 19, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5401, file: !2555, line: 430, column: 18)
!5406 = !DILocation(line: 432, column: 10, scope: !5405)
!5407 = !DILocation(line: 432, column: 3, scope: !5405)
!5408 = !DILocation(line: 435, column: 16, scope: !5388)
!5409 = !DILocation(line: 437, column: 8, scope: !5388)
!5410 = !DILocation(line: 437, column: 19, scope: !5388)
!5411 = !DILocation(line: 439, column: 10, scope: !5388)
!5412 = !DILocation(line: 438, column: 20, scope: !5388)
!5413 = !DILocation(line: 441, column: 9, scope: !5388)
!5414 = !DILocation(line: 442, column: 1, scope: !5388)
!5415 = distinct !DISubprogram(name: "extract_length", scope: !2555, file: !2555, line: 453, type: !5177, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !5416)
!5416 = !{!5417, !5418}
!5417 = !DILocalVariable(name: "conv", arg: 1, scope: !5415, file: !2555, line: 453, type: !4833)
!5418 = !DILocalVariable(name: "sp", arg: 2, scope: !5415, file: !2555, line: 454, type: !133)
!5419 = !DILocation(line: 0, scope: !5415)
!5420 = !DILocation(line: 456, column: 10, scope: !5415)
!5421 = !DILocation(line: 456, column: 2, scope: !5415)
!5422 = !DILocation(line: 458, column: 8, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5424, file: !2555, line: 458, column: 7)
!5424 = distinct !DILexicalBlock(scope: !5415, file: !2555, line: 456, column: 15)
!5425 = !DILocation(line: 458, column: 7, scope: !5423)
!5426 = !DILocation(line: 458, column: 13, scope: !5423)
!5427 = !DILocation(line: 0, scope: !5423)
!5428 = !DILocation(line: 458, column: 7, scope: !5424)
!5429 = !DILocation(line: 459, column: 21, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5423, file: !2555, line: 458, column: 21)
!5431 = !DILocation(line: 460, column: 4, scope: !5430)
!5432 = !DILocation(line: 461, column: 3, scope: !5430)
!5433 = !DILocation(line: 462, column: 21, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5423, file: !2555, line: 461, column: 10)
!5435 = !DILocation(line: 466, column: 8, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5424, file: !2555, line: 466, column: 7)
!5437 = !DILocation(line: 466, column: 7, scope: !5436)
!5438 = !DILocation(line: 466, column: 13, scope: !5436)
!5439 = !DILocation(line: 0, scope: !5436)
!5440 = !DILocation(line: 466, column: 7, scope: !5424)
!5441 = !DILocation(line: 467, column: 21, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5436, file: !2555, line: 466, column: 21)
!5443 = !DILocation(line: 468, column: 4, scope: !5442)
!5444 = !DILocation(line: 469, column: 3, scope: !5442)
!5445 = !DILocation(line: 470, column: 21, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5436, file: !2555, line: 469, column: 10)
!5447 = !DILocation(line: 474, column: 9, scope: !5424)
!5448 = !DILocation(line: 474, column: 20, scope: !5424)
!5449 = !DILocation(line: 475, column: 3, scope: !5424)
!5450 = !DILocation(line: 476, column: 3, scope: !5424)
!5451 = !DILocation(line: 478, column: 9, scope: !5424)
!5452 = !DILocation(line: 478, column: 20, scope: !5424)
!5453 = !DILocation(line: 479, column: 3, scope: !5424)
!5454 = !DILocation(line: 480, column: 3, scope: !5424)
!5455 = !DILocation(line: 482, column: 9, scope: !5424)
!5456 = !DILocation(line: 482, column: 20, scope: !5424)
!5457 = !DILocation(line: 483, column: 3, scope: !5424)
!5458 = !DILocation(line: 484, column: 3, scope: !5424)
!5459 = !DILocation(line: 486, column: 9, scope: !5424)
!5460 = !DILocation(line: 486, column: 20, scope: !5424)
!5461 = !DILocation(line: 487, column: 3, scope: !5424)
!5462 = !DILocation(line: 492, column: 21, scope: !5424)
!5463 = !DILocation(line: 493, column: 3, scope: !5424)
!5464 = !DILocation(line: 495, column: 9, scope: !5424)
!5465 = !DILocation(line: 495, column: 20, scope: !5424)
!5466 = !DILocation(line: 496, column: 3, scope: !5424)
!5467 = !DILocation(line: 498, column: 2, scope: !5415)
!5468 = distinct !DISubprogram(name: "extract_specifier", scope: !2555, file: !2555, line: 513, type: !5177, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !5469)
!5469 = !{!5470, !5471, !5472, !5473}
!5470 = !DILocalVariable(name: "conv", arg: 1, scope: !5468, file: !2555, line: 513, type: !4833)
!5471 = !DILocalVariable(name: "sp", arg: 2, scope: !5468, file: !2555, line: 514, type: !133)
!5472 = !DILocalVariable(name: "unsupported", scope: !5468, file: !2555, line: 516, type: !146)
!5473 = !DILabel(scope: !5474, name: "int_conv", file: !2555, line: 526)
!5474 = distinct !DILexicalBlock(scope: !5468, file: !2555, line: 520, column: 27)
!5475 = !DILocation(line: 0, scope: !5468)
!5476 = !DILocation(line: 518, column: 20, scope: !5468)
!5477 = !DILocation(line: 518, column: 8, scope: !5468)
!5478 = !DILocation(line: 518, column: 18, scope: !5468)
!5479 = !DILocation(line: 520, column: 2, scope: !5468)
!5480 = !DILocation(line: 525, column: 3, scope: !5474)
!5481 = !DILocation(line: 0, scope: !5474)
!5482 = !DILocation(line: 526, column: 1, scope: !5474)
!5483 = !DILocation(line: 528, column: 24, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5474, file: !2555, line: 528, column: 7)
!5485 = !DILocation(line: 528, column: 7, scope: !5474)
!5486 = !DILocation(line: 535, column: 23, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5474, file: !2555, line: 535, column: 7)
!5488 = !DILocation(line: 535, column: 7, scope: !5474)
!5489 = !DILocation(line: 536, column: 36, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5487, file: !2555, line: 535, column: 31)
!5491 = !DILocation(line: 537, column: 3, scope: !5490)
!5492 = !DILocation(line: 570, column: 9, scope: !5474)
!5493 = !DILocation(line: 570, column: 23, scope: !5474)
!5494 = !DILocation(line: 575, column: 4, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5496, file: !2555, line: 573, column: 48)
!5496 = distinct !DILexicalBlock(scope: !5474, file: !2555, line: 573, column: 7)
!5497 = !DILocation(line: 603, column: 9, scope: !5474)
!5498 = !DILocation(line: 603, column: 23, scope: !5474)
!5499 = !DILocation(line: 605, column: 24, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5474, file: !2555, line: 605, column: 7)
!5501 = !DILocation(line: 605, column: 7, scope: !5474)
!5502 = !DILocation(line: 612, column: 9, scope: !5474)
!5503 = !DILocation(line: 612, column: 23, scope: !5474)
!5504 = !DILocation(line: 619, column: 24, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5474, file: !2555, line: 619, column: 7)
!5506 = !DILocation(line: 619, column: 7, scope: !5474)
!5507 = !DILocation(line: 625, column: 9, scope: !5474)
!5508 = !DILocation(line: 625, column: 17, scope: !5474)
!5509 = !DILocation(line: 626, column: 3, scope: !5474)
!5510 = !DILocation(line: 629, column: 20, scope: !5468)
!5511 = !DILocation(line: 629, column: 8, scope: !5468)
!5512 = !DILocation(line: 518, column: 23, scope: !5468)
!5513 = !DILocation(line: 631, column: 2, scope: !5468)
!5514 = distinct !DISubprogram(name: "extract_decimal", scope: !2555, file: !2555, line: 318, type: !5515, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !5518)
!5515 = !DISubroutineType(types: !5516)
!5516 = !{!315, !5517}
!5517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 32)
!5518 = !{!5519, !5520, !5521}
!5519 = !DILocalVariable(name: "str", arg: 1, scope: !5514, file: !2555, line: 318, type: !5517)
!5520 = !DILocalVariable(name: "sp", scope: !5514, file: !2555, line: 320, type: !133)
!5521 = !DILocalVariable(name: "val", scope: !5514, file: !2555, line: 321, type: !315)
!5522 = !DILocation(line: 0, scope: !5514)
!5523 = !DILocation(line: 320, column: 19, scope: !5514)
!5524 = !DILocation(line: 323, column: 37, scope: !5514)
!5525 = !DILocation(line: 323, column: 17, scope: !5514)
!5526 = !DILocation(line: 323, column: 9, scope: !5514)
!5527 = !DILocation(line: 323, column: 2, scope: !5514)
!5528 = !DILocation(line: 324, column: 13, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5514, file: !2555, line: 323, column: 43)
!5530 = !DILocation(line: 324, column: 24, scope: !5529)
!5531 = !DILocation(line: 324, column: 19, scope: !5529)
!5532 = !DILocation(line: 324, column: 27, scope: !5529)
!5533 = distinct !{!5533, !5527, !5534}
!5534 = !DILocation(line: 325, column: 2, scope: !5514)
!5535 = !DILocation(line: 326, column: 7, scope: !5514)
!5536 = !DILocation(line: 327, column: 2, scope: !5514)
!5537 = distinct !DISubprogram(name: "isdigit", scope: !5316, file: !5316, line: 43, type: !439, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2551, retainedNodes: !5538)
!5538 = !{!5539}
!5539 = !DILocalVariable(name: "a", arg: 1, scope: !5537, file: !5316, line: 43, type: !118)
!5540 = !DILocation(line: 0, scope: !5537)
!5541 = !DILocation(line: 45, column: 29, scope: !5537)
!5542 = !DILocation(line: 45, column: 45, scope: !5537)
!5543 = !DILocation(line: 45, column: 2, scope: !5537)
!5544 = distinct !DISubprogram(name: "assert_post_action", scope: !5545, file: !5545, line: 26, type: !5546, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2589, retainedNodes: !5548)
!5545 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5546 = !DISubroutineType(types: !5547)
!5547 = !{null, !133, !32}
!5548 = !{!5549, !5550}
!5549 = !DILocalVariable(name: "file", arg: 1, scope: !5544, file: !5545, line: 26, type: !133)
!5550 = !DILocalVariable(name: "line", arg: 2, scope: !5544, file: !5545, line: 26, type: !32)
!5551 = !DILocation(line: 0, scope: !5544)
!5552 = !DILocation(line: 43, column: 2, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5544, file: !5545, line: 43, column: 2)
!5554 = !{i64 2154073348, i64 2154073364, i64 2154073390, i64 2154073418, i64 2154073438}
!5555 = !DILocation(line: 44, column: 1, scope: !5544)
!5556 = distinct !DISubprogram(name: "assert_print", scope: !5545, file: !5545, line: 46, type: !3737, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2589, retainedNodes: !5557)
!5557 = !{!5558, !5559}
!5558 = !DILocalVariable(name: "fmt", arg: 1, scope: !5556, file: !5545, line: 46, type: !133)
!5559 = !DILocalVariable(name: "ap", scope: !5556, file: !5545, line: 48, type: !5560)
!5560 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3671, line: 99, baseType: !5561)
!5561 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3671, line: 40, baseType: !5562)
!5562 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5545, baseType: !5563)
!5563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5564)
!5564 = !{!5565}
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5563, file: !5545, line: 48, baseType: !117, size: 32)
!5566 = !DILocation(line: 0, scope: !5556)
!5567 = !DILocation(line: 48, column: 2, scope: !5556)
!5568 = !DILocation(line: 48, column: 10, scope: !5556)
!5569 = !DILocation(line: 50, column: 2, scope: !5556)
!5570 = !DILocation(line: 52, column: 2, scope: !5556)
!5571 = !DILocation(line: 54, column: 2, scope: !5556)
!5572 = !DILocation(line: 55, column: 1, scope: !5556)
!5573 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5574, file: !5574, line: 9, type: !365, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !2101)
!5574 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!5575 = !DILocation(line: 11, column: 1, scope: !5573)
!5576 = !{i64 2147560857, i64 2147560900, i64 2147560940}
!5577 = !DILocation(line: 12, column: 1, scope: !5573)
!5578 = !{i64 2147565084, i64 2147565127, i64 2147565167}
!5579 = !DILocation(line: 13, column: 1, scope: !5573)
!5580 = !{i64 2147565293, i64 2147565336, i64 2147565376}
!5581 = !DILocation(line: 14, column: 1, scope: !5573)
!5582 = !{i64 2147565462, i64 2147565505, i64 2147565545}
!5583 = !DILocation(line: 15, column: 1, scope: !5573)
!5584 = !{i64 2147565625, i64 2147565668, i64 2147565708}
!5585 = !DILocation(line: 16, column: 1, scope: !5573)
!5586 = !{i64 2147565809, i64 2147565852, i64 2147565892}
!5587 = !DILocation(line: 17, column: 1, scope: !5573)
!5588 = !{i64 2147565988, i64 2147566031, i64 2147566071}
!5589 = !DILocation(line: 18, column: 1, scope: !5573)
!5590 = !{i64 2147566230, i64 2147566273, i64 2147566313}
!5591 = !DILocation(line: 19, column: 1, scope: !5573)
!5592 = !{i64 2147566465, i64 2147566508, i64 2147566548}
!5593 = !DILocation(line: 20, column: 1, scope: !5573)
!5594 = !{i64 2147566651, i64 2147566694, i64 2147566734}
!5595 = !DILocation(line: 21, column: 1, scope: !5573)
!5596 = !{i64 2147566867, i64 2147566910, i64 2147566950}
!5597 = !DILocation(line: 22, column: 1, scope: !5573)
!5598 = !{i64 2147567070, i64 2147567113, i64 2147567153}
!5599 = !DILocation(line: 23, column: 1, scope: !5573)
!5600 = !{i64 2147567273, i64 2147567316, i64 2147567356}
!5601 = !DILocation(line: 24, column: 1, scope: !5573)
!5602 = !{i64 2147567448, i64 2147567491, i64 2147567531}
!5603 = !DILocation(line: 25, column: 1, scope: !5573)
!5604 = !{i64 2147567658, i64 2147567701, i64 2147567741}
!5605 = !DILocation(line: 26, column: 1, scope: !5573)
!5606 = !{i64 2147567862, i64 2147567905, i64 2147567945}
!5607 = !DILocation(line: 27, column: 1, scope: !5573)
!5608 = !{i64 2147568055, i64 2147568098, i64 2147568138}
!5609 = !DILocation(line: 28, column: 1, scope: !5573)
!5610 = !{i64 2147568257, i64 2147568300, i64 2147568340}
!5611 = !DILocation(line: 29, column: 1, scope: !5573)
!5612 = !{i64 2147568484, i64 2147568527, i64 2147568567}
!5613 = !DILocation(line: 30, column: 1, scope: !5573)
!5614 = !{i64 2147568686, i64 2147568729, i64 2147568769}
!5615 = !DILocation(line: 31, column: 1, scope: !5573)
!5616 = !{i64 2147568901, i64 2147568944, i64 2147568984}
!5617 = !DILocation(line: 32, column: 1, scope: !5573)
!5618 = !{i64 2147569073, i64 2147569116, i64 2147569156}
!5619 = !DILocation(line: 33, column: 1, scope: !5573)
!5620 = !{i64 2147569275, i64 2147569318, i64 2147569358}
!5621 = !DILocation(line: 34, column: 1, scope: !5573)
!5622 = !{i64 2147569501, i64 2147569544, i64 2147569584}
!5623 = !DILocation(line: 35, column: 1, scope: !5573)
!5624 = !{i64 2147569700, i64 2147569743, i64 2147569783}
!5625 = !DILocation(line: 36, column: 1, scope: !5573)
!5626 = !{i64 2147569875, i64 2147569918, i64 2147569958}
!5627 = !DILocation(line: 37, column: 1, scope: !5573)
!5628 = !{i64 2147570128, i64 2147570171, i64 2147570211}
!5629 = !DILocation(line: 38, column: 1, scope: !5573)
!5630 = !{i64 2147570369, i64 2147570412, i64 2147570452}
!5631 = !DILocation(line: 39, column: 1, scope: !5573)
!5632 = !{i64 2147570604, i64 2147570647, i64 2147570687}
!5633 = !DILocation(line: 40, column: 1, scope: !5573)
!5634 = !{i64 2147570836, i64 2147570879, i64 2147570919}
!5635 = !DILocation(line: 41, column: 1, scope: !5573)
!5636 = !{i64 2147571062, i64 2147571105, i64 2147571145}
!5637 = !DILocation(line: 42, column: 1, scope: !5573)
!5638 = !{i64 2147571288, i64 2147571331, i64 2147571371}
!5639 = !DILocation(line: 43, column: 1, scope: !5573)
!5640 = !{i64 2147571514, i64 2147571557, i64 2147571597}
!5641 = !DILocation(line: 44, column: 1, scope: !5573)
!5642 = !{i64 2147571749, i64 2147571792, i64 2147571832}
!5643 = !DILocation(line: 45, column: 1, scope: !5573)
!5644 = !{i64 2147571987, i64 2147572030, i64 2147572070}
!5645 = !DILocation(line: 46, column: 1, scope: !5573)
!5646 = !{i64 2147572261, i64 2147572304, i64 2147572344}
!5647 = !DILocation(line: 47, column: 1, scope: !5573)
!5648 = !{i64 2147572499, i64 2147572542, i64 2147572582}
!5649 = !DILocation(line: 48, column: 1, scope: !5573)
!5650 = !{i64 2147572743, i64 2147572786, i64 2147572826}
!5651 = !DILocation(line: 49, column: 1, scope: !5573)
!5652 = !{i64 2147572993, i64 2147573036, i64 2147573076}
!5653 = !DILocation(line: 50, column: 1, scope: !5573)
!5654 = !{i64 2147573240, i64 2147573283, i64 2147573323}
!5655 = !DILocation(line: 51, column: 1, scope: !5573)
!5656 = !{i64 2147573475, i64 2147573518, i64 2147573558}
!5657 = !DILocation(line: 52, column: 1, scope: !5573)
!5658 = !{i64 2147573710, i64 2147573753, i64 2147573793}
!5659 = !DILocation(line: 53, column: 1, scope: !5573)
!5660 = !{i64 2147578006, i64 2147578049, i64 2147578089}
!5661 = !DILocation(line: 54, column: 1, scope: !5573)
!5662 = !{i64 2147578244, i64 2147578287, i64 2147578327}
!5663 = !DILocation(line: 55, column: 1, scope: !5573)
!5664 = !{i64 2147578485, i64 2147578528, i64 2147578568}
!5665 = !DILocation(line: 56, column: 1, scope: !5573)
!5666 = !{i64 2147578765, i64 2147578808, i64 2147578848}
!5667 = !DILocation(line: 57, column: 1, scope: !5573)
!5668 = !{i64 2147579024, i64 2147579067, i64 2147579107}
!5669 = !DILocation(line: 58, column: 1, scope: !5573)
!5670 = !{i64 2147579250, i64 2147579293, i64 2147579333}
!5671 = !DILocation(line: 59, column: 1, scope: !5573)
!5672 = !{i64 2147579488, i64 2147579531, i64 2147579571}
!5673 = !DILocation(line: 60, column: 1, scope: !5573)
!5674 = !{i64 2147579717, i64 2147579760, i64 2147579800}
!5675 = !DILocation(line: 61, column: 1, scope: !5573)
!5676 = !{i64 2147579925, i64 2147579968, i64 2147580008}
!5677 = !DILocation(line: 62, column: 1, scope: !5573)
!5678 = !{i64 2147580136, i64 2147580179, i64 2147580219}
!5679 = !DILocation(line: 63, column: 1, scope: !5573)
!5680 = !{i64 2147580371, i64 2147580414, i64 2147580454}
!5681 = !DILocation(line: 64, column: 1, scope: !5573)
!5682 = !{i64 2147580600, i64 2147580643, i64 2147580683}
!5683 = !DILocation(line: 65, column: 1, scope: !5573)
!5684 = !{i64 2147580838, i64 2147580881, i64 2147580921}
!5685 = !DILocation(line: 66, column: 1, scope: !5573)
!5686 = !{i64 2147581070, i64 2147581113, i64 2147581153}
!5687 = !DILocation(line: 67, column: 1, scope: !5573)
!5688 = !{i64 2147581296, i64 2147581339, i64 2147581379}
!5689 = !DILocation(line: 68, column: 1, scope: !5573)
!5690 = !{i64 2147581513, i64 2147581556, i64 2147581596}
!5691 = !DILocation(line: 69, column: 1, scope: !5573)
!5692 = !{i64 2147581745, i64 2147581788, i64 2147581828}
!5693 = !DILocation(line: 70, column: 1, scope: !5573)
!5694 = !{i64 2147581971, i64 2147582014, i64 2147582054}
!5695 = !DILocation(line: 71, column: 1, scope: !5573)
!5696 = !{i64 2147582185, i64 2147582228, i64 2147582268}
!5697 = !DILocation(line: 72, column: 1, scope: !5573)
!5698 = !{i64 2147582405, i64 2147582448, i64 2147582488}
!5699 = !DILocation(line: 73, column: 1, scope: !5573)
!5700 = !{i64 2147582637, i64 2147582680, i64 2147582720}
!5701 = !DILocation(line: 74, column: 1, scope: !5573)
!5702 = !{i64 2147582845, i64 2147582888, i64 2147582928}
!5703 = !DILocation(line: 75, column: 1, scope: !5573)
!5704 = !{i64 2147583050, i64 2147583093, i64 2147583133}
!5705 = !DILocation(line: 76, column: 1, scope: !5573)
!5706 = !{i64 2147583267, i64 2147583310, i64 2147583350}
!5707 = !DILocation(line: 77, column: 1, scope: !5573)
!5708 = !{i64 2147583481, i64 2147583524, i64 2147583564}
!5709 = !DILocation(line: 78, column: 1, scope: !5573)
!5710 = !{i64 2147583707, i64 2147583750, i64 2147583790}
!5711 = !DILocation(line: 79, column: 1, scope: !5573)
!5712 = !{i64 2147583927, i64 2147583970, i64 2147584010}
!5713 = !DILocation(line: 80, column: 1, scope: !5573)
!5714 = !{i64 2147584132, i64 2147584175, i64 2147584215}
!5715 = !DILocation(line: 81, column: 1, scope: !5573)
!5716 = !{i64 2147584364, i64 2147584407, i64 2147584447}
!5717 = !DILocation(line: 82, column: 1, scope: !5573)
!5718 = !{i64 2147584599, i64 2147584642, i64 2147584682}
!5719 = !DILocation(line: 83, column: 1, scope: !5573)
!5720 = !{i64 2147584849, i64 2147584892, i64 2147584932}
!5721 = !DILocation(line: 84, column: 1, scope: !5573)
!5722 = !{i64 2147585099, i64 2147585142, i64 2147585182}
!5723 = !DILocation(line: 85, column: 1, scope: !5573)
!5724 = !{i64 2147585337, i64 2147585380, i64 2147585420}
!5725 = !DILocation(line: 86, column: 1, scope: !5573)
!5726 = !{i64 2147585548, i64 2147585591, i64 2147585631}
!5727 = !DILocation(line: 87, column: 1, scope: !5573)
!5728 = !{i64 2147585765, i64 2147585808, i64 2147585848}
!5729 = !DILocation(line: 88, column: 1, scope: !5573)
!5730 = !{i64 2147585961, i64 2147586004, i64 2147586044}
!5731 = !DILocation(line: 89, column: 1, scope: !5573)
!5732 = !{i64 2147590224, i64 2147590267, i64 2147590307}
!5733 = !DILocation(line: 90, column: 1, scope: !5573)
!5734 = !{i64 2147590417, i64 2147590460, i64 2147590500}
!5735 = !DILocation(line: 91, column: 1, scope: !5573)
!5736 = !{i64 2147590625, i64 2147590668, i64 2147590708}
!5737 = !DILocation(line: 92, column: 1, scope: !5573)
!5738 = !{i64 2147590821, i64 2147590864, i64 2147590904}
!5739 = !DILocation(line: 93, column: 1, scope: !5573)
!5740 = !{i64 2147591026, i64 2147591069, i64 2147591109}
!5741 = !DILocation(line: 94, column: 1, scope: !5573)
!5742 = !{i64 2147591237, i64 2147591280, i64 2147591320}
!5743 = !DILocation(line: 95, column: 1, scope: !5573)
!5744 = !{i64 2147591436, i64 2147591479, i64 2147591519}
!5745 = !DILocation(line: 96, column: 1, scope: !5573)
!5746 = !{i64 2147591611, i64 2147591654, i64 2147591694}
!5747 = !DILocation(line: 97, column: 1, scope: !5573)
!5748 = !{i64 2147591795, i64 2147591838, i64 2147591878}
!5749 = !DILocation(line: 98, column: 1, scope: !5573)
!5750 = !{i64 2147591997, i64 2147592040, i64 2147592080}
!5751 = !DILocation(line: 99, column: 1, scope: !5573)
!5752 = !{i64 2147592196, i64 2147592239, i64 2147592279}
!5753 = !DILocation(line: 100, column: 1, scope: !5573)
!5754 = !{i64 2147592362, i64 2147592405, i64 2147592445}
!5755 = !DILocation(line: 101, column: 1, scope: !5573)
!5756 = !{i64 2147592546, i64 2147592589, i64 2147592629}
!5757 = !DILocation(line: 102, column: 1, scope: !5573)
!5758 = !{i64 2147592736, i64 2147592779, i64 2147592819}
!5759 = !DILocation(line: 103, column: 1, scope: !5573)
!5760 = !{i64 2147592920, i64 2147592963, i64 2147593003}
!5761 = !DILocation(line: 104, column: 1, scope: !5573)
!5762 = !{i64 2147593134, i64 2147593177, i64 2147593217}
!5763 = !DILocation(line: 105, column: 1, scope: !5573)
!5764 = !{i64 2147593345, i64 2147593388, i64 2147593428}
!5765 = !DILocation(line: 106, column: 1, scope: !5573)
!5766 = !{i64 2147593568, i64 2147593611, i64 2147593651}
!5767 = !DILocation(line: 107, column: 1, scope: !5573)
!5768 = !{i64 2147593752, i64 2147593795, i64 2147593835}
!5769 = !DILocation(line: 108, column: 1, scope: !5573)
!5770 = !{i64 2147593966, i64 2147594009, i64 2147594049}
!5771 = !DILocation(line: 109, column: 1, scope: !5573)
!5772 = !{i64 2147594132, i64 2147594175, i64 2147594215}
!5773 = !DILocation(line: 110, column: 1, scope: !5573)
!5774 = !{i64 2147594313, i64 2147594356, i64 2147594396}
!5775 = !DILocation(line: 111, column: 1, scope: !5573)
!5776 = !{i64 2147594506, i64 2147594549, i64 2147594589}
!5777 = !DILocation(line: 112, column: 1, scope: !5573)
!5778 = !{i64 2147594732, i64 2147594775, i64 2147594815}
!5779 = !DILocation(line: 113, column: 1, scope: !5573)
!5780 = !{i64 2147594946, i64 2147594989, i64 2147595029}
!5781 = !DILocation(line: 114, column: 1, scope: !5573)
!5782 = !{i64 2147595172, i64 2147595215, i64 2147595255}
!5783 = !DILocation(line: 115, column: 1, scope: !5573)
!5784 = !{i64 2147595389, i64 2147595432, i64 2147595472}
!5785 = !DILocation(line: 116, column: 1, scope: !5573)
!5786 = !{i64 2147595666, i64 2147595709, i64 2147595749}
!5787 = !DILocation(line: 117, column: 1, scope: !5573)
!5788 = !{i64 2147595892, i64 2147595935, i64 2147595975}
!5789 = !DILocation(line: 118, column: 1, scope: !5573)
!5790 = !{i64 2147596100, i64 2147596143, i64 2147596183}
!5791 = !DILocation(line: 119, column: 1, scope: !5573)
!5792 = !{i64 2147596296, i64 2147596339, i64 2147596379}
!5793 = !DILocation(line: 120, column: 1, scope: !5573)
!5794 = !{i64 2147596561, i64 2147596604, i64 2147596644}
!5795 = !DILocation(line: 121, column: 1, scope: !5573)
!5796 = !{i64 2147596775, i64 2147596818, i64 2147596858}
!5797 = !DILocation(line: 122, column: 1, scope: !5573)
!5798 = !{i64 2147596950, i64 2147596993, i64 2147597033}
!5799 = !DILocation(line: 123, column: 1, scope: !5573)
!5800 = !{i64 2147597204, i64 2147597247, i64 2147597287}
!5801 = !DILocation(line: 124, column: 1, scope: !5573)
!5802 = !{i64 2147597403, i64 2147597446, i64 2147597486}
!5803 = !DILocation(line: 125, column: 1, scope: !5573)
!5804 = !{i64 2147597645, i64 2147597688, i64 2147597728}
!5805 = !DILocation(line: 126, column: 1, scope: !5573)
!5806 = !{i64 2147597808, i64 2147597851, i64 2147597891}
!5807 = !DILocation(line: 127, column: 1, scope: !5573)
!5808 = !{i64 2147597995, i64 2147598038, i64 2147598078}
!5809 = !DILocation(line: 128, column: 1, scope: !5573)
!5810 = !{i64 2147598188, i64 2147598231, i64 2147598271}
!5811 = !DILocation(line: 129, column: 1, scope: !5573)
!5812 = !{i64 2147598371, i64 2147598414, i64 2147598454}
!5813 = !DILocation(line: 130, column: 1, scope: !5573)
!5814 = !{i64 2147598585, i64 2147598628, i64 2147598668}
!5815 = !DILocation(line: 131, column: 1, scope: !5573)
!5816 = !{i64 2147598796, i64 2147598839, i64 2147598879}
!5817 = !DILocation(line: 132, column: 1, scope: !5573)
!5818 = !{i64 2147599016, i64 2147599059, i64 2147599099}
!5819 = !DILocation(line: 133, column: 1, scope: !5573)
!5820 = !{i64 2147599223, i64 2147599266, i64 2147599306}
!5821 = !DILocation(line: 134, column: 1, scope: !5573)
!5822 = !{i64 2147603557, i64 2147603600, i64 2147603640}
!5823 = !DILocation(line: 135, column: 1, scope: !5573)
!5824 = !{i64 2147603805, i64 2147603848, i64 2147603888}
!5825 = !DILocation(line: 136, column: 1, scope: !5573)
!5826 = !{i64 2147604004, i64 2147604047, i64 2147604087}
!5827 = !DILocation(line: 137, column: 1, scope: !5573)
!5828 = !{i64 2147604239, i64 2147604282, i64 2147604322}
!5829 = !DILocation(line: 138, column: 1, scope: !5573)
!5830 = !{i64 2147604489, i64 2147604532, i64 2147604572}
!5831 = !DILocation(line: 139, column: 1, scope: !5573)
!5832 = !{i64 2147604691, i64 2147604734, i64 2147604774}
!5833 = !DILocation(line: 140, column: 1, scope: !5573)
!5834 = !{i64 2147604914, i64 2147604957, i64 2147604997}
!5835 = !DILocation(line: 141, column: 1, scope: !5573)
!5836 = !{i64 2147605128, i64 2147605171, i64 2147605211}
!5837 = !DILocation(line: 142, column: 1, scope: !5573)
!5838 = !{i64 2147605372, i64 2147605415, i64 2147605455}
!5839 = !DILocation(line: 143, column: 1, scope: !5573)
!5840 = !{i64 2147605601, i64 2147605644, i64 2147605684}
!5841 = !DILocation(line: 144, column: 1, scope: !5573)
!5842 = !{i64 2147605830, i64 2147605873, i64 2147605913}
!5843 = !DILocation(line: 145, column: 1, scope: !5573)
!5844 = !{i64 2147606038, i64 2147606081, i64 2147606121}
!5845 = !DILocation(line: 146, column: 1, scope: !5573)
!5846 = !{i64 2147606276, i64 2147606319, i64 2147606359}
!5847 = !DILocation(line: 147, column: 1, scope: !5573)
!5848 = !{i64 2147606502, i64 2147606545, i64 2147606585}
!5849 = !DILocation(line: 148, column: 1, scope: !5573)
!5850 = !{i64 2147606761, i64 2147606804, i64 2147606844}
!5851 = !DILocation(line: 149, column: 1, scope: !5573)
!5852 = !{i64 2147606981, i64 2147607024, i64 2147607064}
!5853 = !DILocation(line: 150, column: 1, scope: !5573)
!5854 = !{i64 2147607213, i64 2147607256, i64 2147607296}
!5855 = !DILocation(line: 151, column: 1, scope: !5573)
!5856 = !{i64 2147607454, i64 2147607497, i64 2147607537}
!5857 = !DILocation(line: 152, column: 1, scope: !5573)
!5858 = !{i64 2147607695, i64 2147607738, i64 2147607778}
!5859 = !DILocation(line: 153, column: 1, scope: !5573)
!5860 = !{i64 2147607918, i64 2147607961, i64 2147608001}
!5861 = !DILocation(line: 154, column: 1, scope: !5573)
!5862 = !{i64 2147608135, i64 2147608178, i64 2147608218}
!5863 = !DILocation(line: 155, column: 1, scope: !5573)
!5864 = !{i64 2147608376, i64 2147608419, i64 2147608459}
!5865 = !DILocation(line: 156, column: 1, scope: !5573)
!5866 = !{i64 2147608563, i64 2147608606, i64 2147608646}
!5867 = !DILocation(line: 157, column: 1, scope: !5573)
!5868 = !{i64 2147608750, i64 2147608793, i64 2147608833}
!5869 = !DILocation(line: 158, column: 1, scope: !5573)
!5870 = !{i64 2147608913, i64 2147608956, i64 2147608996}
!5871 = !DILocation(line: 159, column: 1, scope: !5573)
!5872 = !{i64 2147609172, i64 2147609215, i64 2147609255}
!5873 = !DILocation(line: 160, column: 1, scope: !5573)
!5874 = !{i64 2147609395, i64 2147609438, i64 2147609478}
!5875 = !DILocation(line: 161, column: 1, scope: !5573)
!5876 = !{i64 2147609624, i64 2147609667, i64 2147609707}
!5877 = !DILocation(line: 162, column: 1, scope: !5573)
!5878 = !{i64 2147609820, i64 2147609863, i64 2147609903}
!5879 = !DILocation(line: 163, column: 1, scope: !5573)
!5880 = !{i64 2147610032, i64 2147610075, i64 2147610115}
!5881 = !DILocation(line: 164, column: 1, scope: !5573)
!5882 = !{i64 2147610253, i64 2147610296, i64 2147610336}
!5883 = !DILocation(line: 165, column: 1, scope: !5573)
!5884 = !{i64 2147610467, i64 2147610510, i64 2147610550}
!5885 = !DILocation(line: 166, column: 1, scope: !5573)
!5886 = !{i64 2147610657, i64 2147610700, i64 2147610740}
!5887 = !DILocation(line: 167, column: 1, scope: !5573)
!5888 = !{i64 2147610856, i64 2147610899, i64 2147610939}
!5889 = !DILocation(line: 168, column: 1, scope: !5573)
!5890 = !{i64 2147611061, i64 2147611104, i64 2147611144}
!5891 = !DILocation(line: 169, column: 1, scope: !5573)
!5892 = !{i64 2147611281, i64 2147611324, i64 2147611364}
!5893 = !DILocation(line: 170, column: 1, scope: !5573)
!5894 = !{i64 2147611482, i64 2147611525, i64 2147611565}
!5895 = !DILocation(line: 171, column: 1, scope: !5573)
!5896 = !{i64 2147611681, i64 2147611724, i64 2147611764}
!5897 = !DILocation(line: 172, column: 1, scope: !5573)
!5898 = !{i64 2147611886, i64 2147611929, i64 2147611969}
!5899 = !DILocation(line: 173, column: 1, scope: !5573)
!5900 = !{i64 2147612055, i64 2147612098, i64 2147612138}
!5901 = !DILocation(line: 174, column: 1, scope: !5573)
!5902 = !{i64 2147616300, i64 2147616343, i64 2147616383}
!5903 = !DILocation(line: 175, column: 1, scope: !5573)
!5904 = !{i64 2147616484, i64 2147616527, i64 2147616567}
!5905 = !DILocation(line: 176, column: 1, scope: !5573)
!5906 = !{i64 2147616671, i64 2147616714, i64 2147616754}
!5907 = !DILocation(line: 177, column: 1, scope: !5573)
!5908 = !{i64 2147616855, i64 2147616898, i64 2147616938}
!5909 = !DILocation(line: 178, column: 1, scope: !5573)
!5910 = !{i64 2147617093, i64 2147617136, i64 2147617176}
!5911 = !DILocation(line: 179, column: 1, scope: !5573)
!5912 = !{i64 2147617323, i64 2147617366, i64 2147617406}
!5913 = !DILocation(line: 180, column: 1, scope: !5573)
!5914 = !{i64 2147617552, i64 2147617595, i64 2147617635}
!5915 = !DILocation(line: 181, column: 1, scope: !5573)
!5916 = !{i64 2147617739, i64 2147617782, i64 2147617822}
!5917 = !DILocation(line: 182, column: 1, scope: !5573)
!5918 = !{i64 2147617935, i64 2147617978, i64 2147618018}
!5919 = !DILocation(line: 183, column: 1, scope: !5573)
!5920 = !{i64 2147618143, i64 2147618186, i64 2147618226}
!5921 = !DILocation(line: 184, column: 1, scope: !5573)
!5922 = !{i64 2147618355, i64 2147618398, i64 2147618438}
!5923 = !DILocation(line: 185, column: 1, scope: !5573)
!5924 = !{i64 2147618554, i64 2147618597, i64 2147618637}
!5925 = !DILocation(line: 186, column: 1, scope: !5573)
!5926 = !{i64 2147618792, i64 2147618835, i64 2147618875}
!5927 = !DILocation(line: 187, column: 1, scope: !5573)
!5928 = !{i64 2147618988, i64 2147619031, i64 2147619071}
!5929 = !DILocation(line: 188, column: 1, scope: !5573)
!5930 = !{i64 2147619190, i64 2147619233, i64 2147619273}
!5931 = !DILocation(line: 189, column: 1, scope: !5573)
!5932 = !{i64 2147619383, i64 2147619426, i64 2147619466}
!5933 = !DILocation(line: 190, column: 1, scope: !5573)
!5934 = !{i64 2147619617, i64 2147619660, i64 2147619700}
!5935 = !DILocation(line: 191, column: 1, scope: !5573)
!5936 = !{i64 2147619780, i64 2147619823, i64 2147619863}
!5937 = !DILocation(line: 192, column: 1, scope: !5573)
!5938 = !{i64 2147620019, i64 2147620062, i64 2147620102}
!5939 = !DILocation(line: 193, column: 1, scope: !5573)
!5940 = !{i64 2147620258, i64 2147620301, i64 2147620341}
!5941 = !DILocation(line: 194, column: 1, scope: !5573)
!5942 = !{i64 2147620494, i64 2147620537, i64 2147620577}
!5943 = !DILocation(line: 195, column: 1, scope: !5573)
!5944 = !{i64 2147620724, i64 2147620767, i64 2147620807}
!5945 = !DILocation(line: 196, column: 1, scope: !5573)
!5946 = !{i64 2147620911, i64 2147620954, i64 2147620994}
!5947 = !DILocation(line: 197, column: 1, scope: !5573)
!5948 = !{i64 2147621110, i64 2147621153, i64 2147621193}
!5949 = !DILocation(line: 198, column: 1, scope: !5573)
!5950 = !{i64 2147621381, i64 2147621424, i64 2147621464}
!5951 = !DILocation(line: 199, column: 1, scope: !5573)
!5952 = !{i64 2147621556, i64 2147621599, i64 2147621639}
!5953 = !DILocation(line: 200, column: 1, scope: !5573)
!5954 = !{i64 2147621790, i64 2147621833, i64 2147621873}
!5955 = !DILocation(line: 201, column: 1, scope: !5573)
!5956 = !{i64 2147621998, i64 2147622041, i64 2147622081}
!5957 = !DILocation(line: 202, column: 1, scope: !5573)
!5958 = !{i64 2147622216, i64 2147622259, i64 2147622299}
!5959 = !DILocation(line: 203, column: 1, scope: !5573)
!5960 = !{i64 2147622406, i64 2147622449, i64 2147622489}
!5961 = !DILocation(line: 204, column: 1, scope: !5573)
!5962 = !{i64 2147622602, i64 2147622645, i64 2147622685}
!5963 = !DILocation(line: 205, column: 1, scope: !5573)
!5964 = !{i64 2147622808, i64 2147622851, i64 2147622891}
!5965 = !DILocation(line: 206, column: 1, scope: !5573)
!5966 = !{i64 2147623013, i64 2147623056, i64 2147623096}
!5967 = !DILocation(line: 207, column: 1, scope: !5573)
!5968 = !{i64 2147623239, i64 2147623282, i64 2147623322}
!5969 = !DILocation(line: 208, column: 1, scope: !5573)
!5970 = !{i64 2147623471, i64 2147623514, i64 2147623554}
!5971 = !DILocation(line: 209, column: 1, scope: !5573)
!5972 = !{i64 2147623655, i64 2147623698, i64 2147623738}
!5973 = !DILocation(line: 210, column: 1, scope: !5573)
!5974 = !{i64 2147623864, i64 2147623907, i64 2147623947}
!5975 = !DILocation(line: 211, column: 1, scope: !5573)
!5976 = !{i64 2147624048, i64 2147624091, i64 2147624131}
!5977 = !DILocation(line: 212, column: 1, scope: !5573)
!5978 = !{i64 2147624274, i64 2147624317, i64 2147624357}
!5979 = !DILocation(line: 213, column: 1, scope: !5573)
!5980 = !{i64 2147624500, i64 2147624543, i64 2147624583}
!5981 = !DILocation(line: 214, column: 1, scope: !5573)
!5982 = !{i64 2147624726, i64 2147624769, i64 2147624809}
!5983 = !DILocation(line: 215, column: 1, scope: !5573)
!5984 = !{i64 2147624952, i64 2147624995, i64 2147625035}
!5985 = !DILocation(line: 216, column: 1, scope: !5573)
!5986 = !{i64 2147625178, i64 2147625221, i64 2147625261}
!5987 = !DILocation(line: 217, column: 1, scope: !5573)
!5988 = !{i64 2147629471, i64 2147629514, i64 2147629554}
!5989 = !DILocation(line: 218, column: 1, scope: !5573)
!5990 = !{i64 2147629709, i64 2147629752, i64 2147629792}
!5991 = !DILocation(line: 219, column: 1, scope: !5573)
!5992 = !{i64 2147629929, i64 2147629972, i64 2147630012}
!5993 = !DILocation(line: 220, column: 1, scope: !5573)
!5994 = !{i64 2147630173, i64 2147630216, i64 2147630256}
!5995 = !DILocation(line: 221, column: 1, scope: !5573)
!5996 = !{i64 2147630414, i64 2147630457, i64 2147630497}
!5997 = !DILocation(line: 222, column: 1, scope: !5573)
!5998 = !{i64 2147630649, i64 2147630692, i64 2147630732}
!5999 = !DILocation(line: 223, column: 1, scope: !5573)
!6000 = !{i64 2147630881, i64 2147630924, i64 2147630964}
!6001 = !DILocation(line: 224, column: 1, scope: !5573)
!6002 = !{i64 2147631083, i64 2147631126, i64 2147631166}
!6003 = !DILocation(line: 225, column: 1, scope: !5573)
!6004 = !{i64 2147631333, i64 2147631376, i64 2147631416}
!6005 = !DILocation(line: 226, column: 1, scope: !5573)
!6006 = !{i64 2147631571, i64 2147631614, i64 2147631654}
!6007 = !DILocation(line: 227, column: 1, scope: !5573)
!6008 = !{i64 2147631755, i64 2147631798, i64 2147631838}
!6009 = !DILocation(line: 228, column: 1, scope: !5573)
!6010 = !{i64 2147631978, i64 2147632021, i64 2147632061}
!6011 = !DILocation(line: 229, column: 1, scope: !5573)
!6012 = !{i64 2147632216, i64 2147632259, i64 2147632299}
!6013 = !DILocation(line: 230, column: 1, scope: !5573)
!6014 = !{i64 2147632454, i64 2147632497, i64 2147632537}
!6015 = !DILocation(line: 231, column: 1, scope: !5573)
!6016 = !{i64 2147632647, i64 2147632690, i64 2147632730}
!6017 = !DILocation(line: 232, column: 1, scope: !5573)
!6018 = !{i64 2147632900, i64 2147632943, i64 2147632983}
!6019 = !DILocation(line: 233, column: 1, scope: !5573)
!6020 = !{i64 2147633114, i64 2147633157, i64 2147633197}
!6021 = !DILocation(line: 234, column: 1, scope: !5573)
!6022 = !{i64 2147633322, i64 2147633365, i64 2147633405}
!6023 = !DILocation(line: 235, column: 1, scope: !5573)
!6024 = !{i64 2147633512, i64 2147633555, i64 2147633595}
!6025 = !DILocation(line: 236, column: 1, scope: !5573)
!6026 = !{i64 2147633726, i64 2147633769, i64 2147633809}
!6027 = !DILocation(line: 237, column: 1, scope: !5573)
!6028 = !{i64 2147633988, i64 2147634031, i64 2147634071}
!6029 = !DILocation(line: 238, column: 1, scope: !5573)
!6030 = !{i64 2147634199, i64 2147634242, i64 2147634282}
!6031 = !DILocation(line: 239, column: 1, scope: !5573)
!6032 = !{i64 2147634443, i64 2147634486, i64 2147634526}
!6033 = !DILocation(line: 240, column: 1, scope: !5573)
!6034 = !{i64 2147634654, i64 2147634697, i64 2147634737}
!6035 = !DILocation(line: 241, column: 1, scope: !5573)
!6036 = !{i64 2147634883, i64 2147634926, i64 2147634966}
!6037 = !DILocation(line: 242, column: 1, scope: !5573)
!6038 = !{i64 2147635148, i64 2147635191, i64 2147635231}
!6039 = !DILocation(line: 243, column: 1, scope: !5573)
!6040 = !{i64 2147635353, i64 2147635396, i64 2147635436}
!6041 = !DILocation(line: 244, column: 1, scope: !5573)
!6042 = !{i64 2147635549, i64 2147635592, i64 2147635632}
!6043 = !DILocation(line: 245, column: 1, scope: !5573)
!6044 = !{i64 2147635772, i64 2147635815, i64 2147635855}
!6045 = !DILocation(line: 246, column: 1, scope: !5573)
!6046 = !{i64 2147635935, i64 2147635978, i64 2147636018}
!6047 = !DILocation(line: 247, column: 1, scope: !5573)
!6048 = !{i64 2147636140, i64 2147636183, i64 2147636223}
!6049 = !DILocation(line: 248, column: 1, scope: !5573)
!6050 = !{i64 2147636360, i64 2147636403, i64 2147636443}
!6051 = !DILocation(line: 249, column: 1, scope: !5573)
!6052 = !{i64 2147636574, i64 2147636617, i64 2147636657}
!6053 = !DILocation(line: 250, column: 1, scope: !5573)
!6054 = !{i64 2147636788, i64 2147636831, i64 2147636871}
!6055 = !DILocation(line: 251, column: 1, scope: !5573)
!6056 = !{i64 2147636999, i64 2147637042, i64 2147637082}
!6057 = !DILocation(line: 252, column: 1, scope: !5573)
!6058 = !{i64 2147637192, i64 2147637235, i64 2147637275}
!6059 = !DILocation(line: 253, column: 1, scope: !5573)
!6060 = !{i64 2147637391, i64 2147637434, i64 2147637474}
!6061 = !DILocation(line: 254, column: 1, scope: !5573)
!6062 = !{i64 2147637563, i64 2147637606, i64 2147637646}
!6063 = !DILocation(line: 255, column: 1, scope: !5573)
!6064 = !{i64 2147637756, i64 2147637799, i64 2147637839}
!6065 = !DILocation(line: 256, column: 1, scope: !5573)
!6066 = !{i64 2147637928, i64 2147637971, i64 2147638011}
!6067 = !DILocation(line: 257, column: 1, scope: !5573)
!6068 = !{i64 2147642179, i64 2147642222, i64 2147642262}
!6069 = !DILocation(line: 258, column: 1, scope: !5573)
!6070 = !{i64 2147642372, i64 2147642415, i64 2147642455}
!6071 = !DILocation(line: 259, column: 1, scope: !5573)
!6072 = !{i64 2147642568, i64 2147642611, i64 2147642651}
!6073 = !DILocation(line: 260, column: 1, scope: !5573)
!6074 = !{i64 2147642795, i64 2147642838, i64 2147642878}
!6075 = !DILocation(line: 261, column: 1, scope: !5573)
!6076 = !{i64 2147643012, i64 2147643055, i64 2147643095}
!6077 = !DILocation(line: 262, column: 1, scope: !5573)
!6078 = !{i64 2147643304, i64 2147643347, i64 2147643387}
!6079 = !DILocation(line: 263, column: 1, scope: !5573)
!6080 = !{i64 2147643536, i64 2147643579, i64 2147643619}
!6081 = !DILocation(line: 264, column: 1, scope: !5573)
!6082 = !{i64 2147643753, i64 2147643796, i64 2147643836}
!6083 = !DILocation(line: 265, column: 1, scope: !5573)
!6084 = !{i64 2147643960, i64 2147644003, i64 2147644043}
!6085 = !DILocation(line: 266, column: 1, scope: !5573)
!6086 = !{i64 2147644161, i64 2147644204, i64 2147644244}
!6087 = !DILocation(line: 267, column: 1, scope: !5573)
!6088 = !{i64 2147644393, i64 2147644436, i64 2147644476}
!6089 = !DILocation(line: 268, column: 1, scope: !5573)
!6090 = !{i64 2147644601, i64 2147644644, i64 2147644684}
!6091 = !DILocation(line: 269, column: 1, scope: !5573)
!6092 = !{i64 2147644791, i64 2147644834, i64 2147644874}
!6093 = !DILocation(line: 270, column: 1, scope: !5573)
!6094 = !{i64 2147645017, i64 2147645060, i64 2147645100}
!6095 = !DILocation(line: 271, column: 1, scope: !5573)
!6096 = !{i64 2147645206, i64 2147645249, i64 2147645289}
!6097 = !DILocation(line: 272, column: 1, scope: !5573)
!6098 = !{i64 2147645477, i64 2147645520, i64 2147645560}
!6099 = !DILocation(line: 273, column: 1, scope: !5573)
!6100 = !{i64 2147645697, i64 2147645740, i64 2147645780}
!6101 = !DILocation(line: 274, column: 1, scope: !5573)
!6102 = !{i64 2147645950, i64 2147645993, i64 2147646033}
!6103 = !DILocation(line: 275, column: 1, scope: !5573)
!6104 = !{i64 2147646158, i64 2147646201, i64 2147646241}
!6105 = !DILocation(line: 276, column: 1, scope: !5573)
!6106 = !{i64 2147646390, i64 2147646433, i64 2147646473}
!6107 = !DILocation(line: 277, column: 1, scope: !5573)
!6108 = !{i64 2147646601, i64 2147646644, i64 2147646684}
!6109 = !DILocation(line: 278, column: 1, scope: !5573)
!6110 = !{i64 2147646791, i64 2147646834, i64 2147646874}
!6111 = !DILocation(line: 279, column: 1, scope: !5573)
!6112 = !{i64 2147647005, i64 2147647048, i64 2147647088}
!6113 = !DILocation(line: 280, column: 1, scope: !5573)
!6114 = !{i64 2147647204, i64 2147647247, i64 2147647287}
!6115 = !DILocation(line: 281, column: 1, scope: !5573)
!6116 = !{i64 2147647391, i64 2147647434, i64 2147647474}
!6117 = !DILocation(line: 282, column: 1, scope: !5573)
!6118 = !{i64 2147647599, i64 2147647642, i64 2147647682}
!6119 = !DILocation(line: 283, column: 1, scope: !5573)
!6120 = !{i64 2147647828, i64 2147647871, i64 2147647911}
!6121 = !DILocation(line: 284, column: 1, scope: !5573)
!6122 = !{i64 2147648030, i64 2147648073, i64 2147648113}
!6123 = !DILocation(line: 285, column: 1, scope: !5573)
!6124 = !{i64 2147648229, i64 2147648272, i64 2147648312}
!6125 = !DILocation(line: 286, column: 1, scope: !5573)
!6126 = !{i64 2147648446, i64 2147648489, i64 2147648529}
!6127 = !DILocation(line: 288, column: 1, scope: !5573)
!6128 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !460, file: !460, line: 30, type: !467, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !6129)
!6129 = !{!6130, !6131}
!6130 = !DILocalVariable(name: "arg", arg: 1, scope: !6128, file: !460, line: 30, type: !469)
!6131 = !DILocalVariable(name: "key", scope: !6128, file: !460, line: 32, type: !156)
!6132 = !DILocation(line: 0, scope: !6128)
!6133 = !DILocation(line: 37, column: 2, scope: !6128)
!6134 = !DILocation(line: 38, column: 2, scope: !6128)
!6135 = !DILocation(line: 55, column: 2, scope: !6136, inlinedAt: !6143)
!6136 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6137, file: !6137, line: 42, type: !6138, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !6140)
!6137 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6138 = !DISubroutineType(types: !6139)
!6139 = !{!32}
!6140 = !{!6141, !6142}
!6141 = !DILocalVariable(name: "key", scope: !6136, file: !6137, line: 44, type: !32)
!6142 = !DILocalVariable(name: "tmp", scope: !6136, file: !6137, line: 53, type: !32)
!6143 = distinct !DILocation(line: 40, column: 8, scope: !6128)
!6144 = !{i64 1833891}
!6145 = !DILocation(line: 0, scope: !6136, inlinedAt: !6143)
!6146 = !DILocalVariable(name: "key", arg: 1, scope: !6147, file: !6137, line: 84, type: !32)
!6147 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6137, file: !6137, line: 84, type: !6148, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !6150)
!6148 = !DISubroutineType(types: !6149)
!6149 = !{null, !32}
!6150 = !{!6146}
!6151 = !DILocation(line: 0, scope: !6147, inlinedAt: !6152)
!6152 = distinct !DILocation(line: 47, column: 2, scope: !6128)
!6153 = !DILocation(line: 95, column: 2, scope: !6147, inlinedAt: !6152)
!6154 = !{i64 1834708}
!6155 = !DILocation(line: 51, column: 18, scope: !6128)
!6156 = !DILocation(line: 53, column: 2, scope: !6128)
!6157 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6158, file: !6158, line: 1609, type: !365, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !2101)
!6158 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6159 = !DILocation(line: 1611, column: 3, scope: !6157)
!6160 = !DILocation(line: 1612, column: 1, scope: !6157)
!6161 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6158, file: !6158, line: 1629, type: !365, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !443, retainedNodes: !2101)
!6162 = !DILocation(line: 1631, column: 3, scope: !6161)
!6163 = !DILocation(line: 1632, column: 1, scope: !6161)
!6164 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !490, file: !490, line: 26, type: !496, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !6165)
!6165 = !{!6166}
!6166 = !DILocalVariable(name: "dev", arg: 1, scope: !6164, file: !490, line: 26, type: !498)
!6167 = !DILocation(line: 0, scope: !6164)
!6168 = !DILocation(line: 68, column: 2, scope: !6164)
!6169 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6170, file: !6170, line: 57, type: !6171, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !6217)
!6170 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6171 = !DISubroutineType(types: !6172)
!6172 = !{null, !32, !6173}
!6173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6174, size: 32)
!6174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6175)
!6175 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2713, line: 141, baseType: !6176)
!6176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2713, line: 97, size: 256, elements: !6177)
!6177 = !{!6178}
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6176, file: !2713, line: 107, baseType: !6179, size: 256)
!6179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2713, line: 98, size: 256, elements: !6180)
!6180 = !{!6181, !6186, !6191, !6196, !6201, !6206, !6211, !6216}
!6181 = !DIDerivedType(tag: DW_TAG_member, scope: !6179, file: !2713, line: 99, baseType: !6182, size: 32)
!6182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6179, file: !2713, line: 99, size: 32, elements: !6183)
!6183 = !{!6184, !6185}
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6182, file: !2713, line: 99, baseType: !156, size: 32)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6182, file: !2713, line: 99, baseType: !156, size: 32)
!6186 = !DIDerivedType(tag: DW_TAG_member, scope: !6179, file: !2713, line: 100, baseType: !6187, size: 32, offset: 32)
!6187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6179, file: !2713, line: 100, size: 32, elements: !6188)
!6188 = !{!6189, !6190}
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6187, file: !2713, line: 100, baseType: !156, size: 32)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6187, file: !2713, line: 100, baseType: !156, size: 32)
!6191 = !DIDerivedType(tag: DW_TAG_member, scope: !6179, file: !2713, line: 101, baseType: !6192, size: 32, offset: 64)
!6192 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6179, file: !2713, line: 101, size: 32, elements: !6193)
!6193 = !{!6194, !6195}
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6192, file: !2713, line: 101, baseType: !156, size: 32)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6192, file: !2713, line: 101, baseType: !156, size: 32)
!6196 = !DIDerivedType(tag: DW_TAG_member, scope: !6179, file: !2713, line: 102, baseType: !6197, size: 32, offset: 96)
!6197 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6179, file: !2713, line: 102, size: 32, elements: !6198)
!6198 = !{!6199, !6200}
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6197, file: !2713, line: 102, baseType: !156, size: 32)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6197, file: !2713, line: 102, baseType: !156, size: 32)
!6201 = !DIDerivedType(tag: DW_TAG_member, scope: !6179, file: !2713, line: 103, baseType: !6202, size: 32, offset: 128)
!6202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6179, file: !2713, line: 103, size: 32, elements: !6203)
!6203 = !{!6204, !6205}
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6202, file: !2713, line: 103, baseType: !156, size: 32)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6202, file: !2713, line: 103, baseType: !156, size: 32)
!6206 = !DIDerivedType(tag: DW_TAG_member, scope: !6179, file: !2713, line: 104, baseType: !6207, size: 32, offset: 160)
!6207 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6179, file: !2713, line: 104, size: 32, elements: !6208)
!6208 = !{!6209, !6210}
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6207, file: !2713, line: 104, baseType: !156, size: 32)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6207, file: !2713, line: 104, baseType: !156, size: 32)
!6211 = !DIDerivedType(tag: DW_TAG_member, scope: !6179, file: !2713, line: 105, baseType: !6212, size: 32, offset: 192)
!6212 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6179, file: !2713, line: 105, size: 32, elements: !6213)
!6213 = !{!6214, !6215}
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6212, file: !2713, line: 105, baseType: !156, size: 32)
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6212, file: !2713, line: 105, baseType: !156, size: 32)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6179, file: !2713, line: 106, baseType: !156, size: 32, offset: 224)
!6217 = !{!6218, !6219}
!6218 = !DILocalVariable(name: "reason", arg: 1, scope: !6169, file: !6170, line: 57, type: !32)
!6219 = !DILocalVariable(name: "esf", arg: 2, scope: !6169, file: !6170, line: 57, type: !6173)
!6220 = !DILocation(line: 0, scope: !6169)
!6221 = !DILocation(line: 63, column: 2, scope: !6169)
!6222 = !DILocation(line: 64, column: 1, scope: !6169)
!6223 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6170, file: !6170, line: 82, type: !6224, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !6239)
!6224 = !DISubroutineType(types: !6225)
!6225 = !{null, !6173, !6226}
!6226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6227, size: 32)
!6227 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !296, line: 37, baseType: !6228)
!6228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !6229)
!6229 = !{!6230, !6231, !6232, !6233, !6234, !6235, !6236, !6237, !6238}
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6228, file: !296, line: 26, baseType: !156, size: 32)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6228, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6228, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6228, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6228, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6228, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6228, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6228, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6228, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!6239 = !{!6240, !6241, !6242}
!6240 = !DILocalVariable(name: "esf", arg: 1, scope: !6223, file: !6170, line: 82, type: !6173)
!6241 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6223, file: !6170, line: 82, type: !6226)
!6242 = !DILocalVariable(name: "reason", scope: !6223, file: !6170, line: 88, type: !32)
!6243 = !DILocation(line: 0, scope: !6223)
!6244 = !DILocation(line: 88, column: 35, scope: !6223)
!6245 = !DILocation(line: 108, column: 2, scope: !6223)
!6246 = !DILocation(line: 131, column: 1, scope: !6223)
!6247 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6170, file: !6170, line: 133, type: !6248, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !6250)
!6248 = !DISubroutineType(types: !6249)
!6249 = !{null, !117}
!6250 = !{!6251, !6252, !6253}
!6251 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6247, file: !6170, line: 133, type: !117)
!6252 = !DILocalVariable(name: "ssf_contents", scope: !6247, file: !6170, line: 135, type: !986)
!6253 = !DILocalVariable(name: "oops_esf", scope: !6247, file: !6170, line: 136, type: !6175)
!6254 = !DILocation(line: 0, scope: !6247)
!6255 = !DILocation(line: 136, column: 2, scope: !6247)
!6256 = !DILocation(line: 136, column: 15, scope: !6247)
!6257 = !DILocation(line: 139, column: 22, scope: !6247)
!6258 = !DILocation(line: 139, column: 17, scope: !6247)
!6259 = !DILocation(line: 139, column: 20, scope: !6247)
!6260 = !DILocation(line: 141, column: 2, scope: !6247)
!6261 = !DILocation(line: 142, column: 2, scope: !6247)
!6262 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6263, file: !6263, line: 40, type: !6148, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !6264)
!6263 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6264 = !{!6265}
!6265 = !DILocalVariable(name: "irq", arg: 1, scope: !6262, file: !6263, line: 40, type: !32)
!6266 = !DILocation(line: 0, scope: !6262)
!6267 = !DILocation(line: 42, column: 2, scope: !6262)
!6268 = !DILocation(line: 43, column: 1, scope: !6262)
!6269 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !656, file: !656, line: 1684, type: !6270, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !6272)
!6270 = !DISubroutineType(types: !6271)
!6271 = !{null, !891}
!6272 = !{!6273}
!6273 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6269, file: !656, line: 1684, type: !891)
!6274 = !DILocation(line: 0, scope: !6269)
!6275 = !DILocation(line: 1686, column: 23, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6269, file: !656, line: 1686, column: 7)
!6277 = !DILocation(line: 1686, column: 7, scope: !6269)
!6278 = !DILocation(line: 1688, column: 5, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6276, file: !656, line: 1687, column: 3)
!6280 = !{i64 2150357666}
!6281 = !DILocation(line: 1689, column: 81, scope: !6279)
!6282 = !DILocation(line: 1689, column: 60, scope: !6279)
!6283 = !DILocation(line: 1689, column: 34, scope: !6279)
!6284 = !DILocation(line: 1689, column: 5, scope: !6279)
!6285 = !DILocation(line: 1689, column: 43, scope: !6279)
!6286 = !DILocation(line: 1690, column: 5, scope: !6279)
!6287 = !{i64 2150357780}
!6288 = !DILocation(line: 1691, column: 3, scope: !6279)
!6289 = !DILocation(line: 1692, column: 1, scope: !6269)
!6290 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6263, file: !6263, line: 45, type: !6148, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !6291)
!6291 = !{!6292}
!6292 = !DILocalVariable(name: "irq", arg: 1, scope: !6290, file: !6263, line: 45, type: !32)
!6293 = !DILocation(line: 0, scope: !6290)
!6294 = !DILocation(line: 47, column: 2, scope: !6290)
!6295 = !DILocation(line: 48, column: 1, scope: !6290)
!6296 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !656, file: !656, line: 1722, type: !6270, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !6297)
!6297 = !{!6298}
!6298 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6296, file: !656, line: 1722, type: !891)
!6299 = !DILocation(line: 0, scope: !6296)
!6300 = !DILocation(line: 1724, column: 23, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6296, file: !656, line: 1724, column: 7)
!6302 = !DILocation(line: 1724, column: 7, scope: !6296)
!6303 = !DILocation(line: 1726, column: 81, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6301, file: !656, line: 1725, column: 3)
!6305 = !DILocation(line: 1726, column: 60, scope: !6304)
!6306 = !DILocation(line: 1726, column: 34, scope: !6304)
!6307 = !DILocation(line: 1726, column: 5, scope: !6304)
!6308 = !DILocation(line: 1726, column: 43, scope: !6304)
!6309 = !DILocation(line: 271, column: 3, scope: !6310, inlinedAt: !6312)
!6310 = distinct !DISubprogram(name: "__DSB", scope: !6311, file: !6311, line: 269, type: !365, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !2101)
!6311 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6312 = distinct !DILocation(line: 1727, column: 5, scope: !6304)
!6313 = !{i64 2812049}
!6314 = !DILocation(line: 260, column: 3, scope: !6315, inlinedAt: !6316)
!6315 = distinct !DISubprogram(name: "__ISB", scope: !6311, file: !6311, line: 258, type: !365, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !2101)
!6316 = distinct !DILocation(line: 1728, column: 5, scope: !6304)
!6317 = !{i64 2811766}
!6318 = !DILocation(line: 1729, column: 3, scope: !6304)
!6319 = !DILocation(line: 1730, column: 1, scope: !6296)
!6320 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6263, file: !6263, line: 50, type: !6321, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !6323)
!6321 = !DISubroutineType(types: !6322)
!6322 = !{!118, !32}
!6323 = !{!6324}
!6324 = !DILocalVariable(name: "irq", arg: 1, scope: !6320, file: !6263, line: 50, type: !32)
!6325 = !DILocation(line: 0, scope: !6320)
!6326 = !DILocation(line: 52, column: 20, scope: !6320)
!6327 = !DILocation(line: 52, column: 9, scope: !6320)
!6328 = !DILocation(line: 52, column: 41, scope: !6320)
!6329 = !DILocation(line: 52, column: 39, scope: !6320)
!6330 = !DILocation(line: 52, column: 2, scope: !6320)
!6331 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6263, file: !6263, line: 64, type: !6332, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !6334)
!6332 = !DISubroutineType(types: !6333)
!6333 = !{null, !32, !32, !156}
!6334 = !{!6335, !6336, !6337}
!6335 = !DILocalVariable(name: "irq", arg: 1, scope: !6331, file: !6263, line: 64, type: !32)
!6336 = !DILocalVariable(name: "prio", arg: 2, scope: !6331, file: !6263, line: 64, type: !32)
!6337 = !DILocalVariable(name: "flags", arg: 3, scope: !6331, file: !6263, line: 64, type: !156)
!6338 = !DILocation(line: 0, scope: !6331)
!6339 = !DILocation(line: 83, column: 8, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6341, file: !6263, line: 82, column: 9)
!6341 = distinct !DILexicalBlock(scope: !6331, file: !6263, line: 76, column: 6)
!6342 = !DILocation(line: 91, column: 2, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6344, file: !6263, line: 91, column: 2)
!6344 = distinct !DILexicalBlock(scope: !6331, file: !6263, line: 91, column: 2)
!6345 = !DILocation(line: 91, column: 2, scope: !6344)
!6346 = !DILocation(line: 91, column: 2, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6343, file: !6263, line: 91, column: 2)
!6348 = !DILocation(line: 95, column: 2, scope: !6331)
!6349 = !DILocation(line: 96, column: 1, scope: !6331)
!6350 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !656, file: !656, line: 1814, type: !6351, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !6353)
!6351 = !DISubroutineType(types: !6352)
!6352 = !{null, !891, !156}
!6353 = !{!6354, !6355}
!6354 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6350, file: !656, line: 1814, type: !891)
!6355 = !DILocalVariable(name: "priority", arg: 2, scope: !6350, file: !656, line: 1814, type: !156)
!6356 = !DILocation(line: 0, scope: !6350)
!6357 = !DILocation(line: 0, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6350, file: !656, line: 1816, column: 7)
!6359 = !DILocation(line: 1816, column: 7, scope: !6350)
!6360 = !DILocation(line: 1824, column: 1, scope: !6350)
!6361 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6263, file: !6263, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2604, retainedNodes: !6362)
!6362 = !{!6363}
!6363 = !DILocalVariable(name: "unused", arg: 1, scope: !6361, file: !6263, line: 155, type: !13)
!6364 = !DILocation(line: 0, scope: !6361)
!6365 = !DILocation(line: 159, column: 2, scope: !6361)
!6366 = !DILocation(line: 160, column: 1, scope: !6361)
!6367 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6368, file: !6368, line: 87, type: !365, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2650, retainedNodes: !2101)
!6368 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6369 = !DILocation(line: 89, column: 2, scope: !6367)
!6370 = !DILocation(line: 90, column: 2, scope: !6367)
!6371 = !DILocation(line: 91, column: 1, scope: !6367)
!6372 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6368, file: !6368, line: 23, type: !365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2101)
!6373 = !DISubprogram(name: "z_arm_int_exit", scope: !6374, file: !6374, line: 153, type: !365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2101)
!6374 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6375 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6376, file: !6376, line: 256, type: !365, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !2101)
!6376 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6377 = !DILocation(line: 258, column: 2, scope: !6375)
!6378 = !DILocation(line: 260, column: 2, scope: !6375)
!6379 = !DILocation(line: 262, column: 2, scope: !6375)
!6380 = !DILocation(line: 263, column: 2, scope: !6375)
!6381 = !DILocation(line: 267, column: 2, scope: !6375)
!6382 = !DILocation(line: 268, column: 2, scope: !6375)
!6383 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6376, file: !6376, line: 53, type: !365, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !2101)
!6384 = !DILocation(line: 55, column: 12, scope: !6383)
!6385 = !DILocation(line: 271, column: 3, scope: !6386, inlinedAt: !6387)
!6386 = distinct !DISubprogram(name: "__DSB", scope: !6311, file: !6311, line: 269, type: !365, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !2101)
!6387 = distinct !DILocation(line: 56, column: 2, scope: !6383)
!6388 = !{i64 2810720}
!6389 = !DILocation(line: 260, column: 3, scope: !6390, inlinedAt: !6391)
!6390 = distinct !DISubprogram(name: "__ISB", scope: !6311, file: !6311, line: 258, type: !365, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !2101)
!6391 = distinct !DILocation(line: 57, column: 2, scope: !6383)
!6392 = !{i64 2810437}
!6393 = !DILocation(line: 58, column: 1, scope: !6383)
!6394 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6376, file: !6376, line: 96, type: !365, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !2101)
!6395 = !DILocation(line: 103, column: 13, scope: !6394)
!6396 = !DILocation(line: 975, column: 3, scope: !6397, inlinedAt: !6402)
!6397 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6311, file: !6311, line: 971, type: !6398, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6400)
!6398 = !DISubroutineType(types: !6399)
!6399 = !{!156}
!6400 = !{!6401}
!6401 = !DILocalVariable(name: "result", scope: !6397, file: !6311, line: 973, type: !156)
!6402 = distinct !DILocation(line: 189, column: 16, scope: !6394)
!6403 = !{i64 2831550}
!6404 = !DILocation(line: 0, scope: !6397, inlinedAt: !6402)
!6405 = !DILocation(line: 189, column: 32, scope: !6394)
!6406 = !DILocalVariable(name: "control", arg: 1, scope: !6407, file: !6311, line: 1001, type: !156)
!6407 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6311, file: !6311, line: 1001, type: !6408, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !6410)
!6408 = !DISubroutineType(types: !6409)
!6409 = !{null, !156}
!6410 = !{!6406}
!6411 = !DILocation(line: 0, scope: !6407, inlinedAt: !6412)
!6412 = distinct !DILocation(line: 189, column: 2, scope: !6394)
!6413 = !DILocation(line: 1003, column: 3, scope: !6407, inlinedAt: !6412)
!6414 = !{i64 2832270}
!6415 = !DILocation(line: 260, column: 3, scope: !6390, inlinedAt: !6416)
!6416 = distinct !DILocation(line: 1004, column: 3, scope: !6407, inlinedAt: !6412)
!6417 = !DILocation(line: 191, column: 1, scope: !6394)
!6418 = distinct !DISubprogram(name: "arch_swap", scope: !6419, file: !6419, line: 33, type: !6321, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !6420)
!6419 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6420 = !{!6421}
!6421 = !DILocalVariable(name: "key", arg: 1, scope: !6418, file: !6419, line: 33, type: !32)
!6422 = !DILocation(line: 0, scope: !6418)
!6423 = !DILocation(line: 36, column: 2, scope: !6418)
!6424 = !DILocation(line: 36, column: 17, scope: !6418)
!6425 = !DILocation(line: 36, column: 25, scope: !6418)
!6426 = !DILocation(line: 37, column: 37, scope: !6418)
!6427 = !DILocation(line: 37, column: 17, scope: !6418)
!6428 = !DILocation(line: 37, column: 35, scope: !6418)
!6429 = !DILocation(line: 41, column: 12, scope: !6418)
!6430 = !DILocalVariable(name: "key", arg: 1, scope: !6431, file: !6137, line: 84, type: !32)
!6431 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6137, file: !6137, line: 84, type: !6148, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !6432)
!6432 = !{!6430}
!6433 = !DILocation(line: 0, scope: !6431, inlinedAt: !6434)
!6434 = distinct !DILocation(line: 44, column: 2, scope: !6418)
!6435 = !DILocation(line: 95, column: 2, scope: !6431, inlinedAt: !6434)
!6436 = !{i64 1949916}
!6437 = !DILocation(line: 53, column: 9, scope: !6418)
!6438 = !DILocation(line: 53, column: 24, scope: !6418)
!6439 = !DILocation(line: 53, column: 2, scope: !6418)
!6440 = distinct !DISubprogram(name: "arch_new_thread", scope: !6441, file: !6441, line: 56, type: !6442, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !6551)
!6441 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6442 = !DISubroutineType(types: !6443)
!6443 = !{null, !6444, !6546, !1239, !352, !117, !117, !117}
!6444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6445, size: 32)
!6445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !6446)
!6446 = !{!6447, !6505, !6517, !6518, !6519, !6520, !6526, !6541}
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6445, file: !225, line: 247, baseType: !6448, size: 384)
!6448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !6449)
!6449 = !{!6450, !6474, !6481, !6482, !6483, !6492, !6493, !6494}
!6450 = !DIDerivedType(tag: DW_TAG_member, scope: !6448, file: !225, line: 60, baseType: !6451, size: 64)
!6451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6448, file: !225, line: 60, size: 64, elements: !6452)
!6452 = !{!6453, !6468}
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6451, file: !225, line: 61, baseType: !6454, size: 64)
!6454 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !6455)
!6455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !6456)
!6456 = !{!6457, !6463}
!6457 = !DIDerivedType(tag: DW_TAG_member, scope: !6455, file: !235, line: 38, baseType: !6458, size: 32)
!6458 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6455, file: !235, line: 38, size: 32, elements: !6459)
!6459 = !{!6460, !6462}
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6458, file: !235, line: 39, baseType: !6461, size: 32)
!6461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6455, size: 32)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6458, file: !235, line: 40, baseType: !6461, size: 32)
!6463 = !DIDerivedType(tag: DW_TAG_member, scope: !6455, file: !235, line: 42, baseType: !6464, size: 32, offset: 32)
!6464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6455, file: !235, line: 42, size: 32, elements: !6465)
!6465 = !{!6466, !6467}
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6464, file: !235, line: 43, baseType: !6461, size: 32)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6464, file: !235, line: 44, baseType: !6461, size: 32)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6451, file: !225, line: 62, baseType: !6469, size: 64)
!6469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !6470)
!6470 = !{!6471}
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6469, file: !251, line: 50, baseType: !6472, size: 64)
!6472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6473, size: 64, elements: !256)
!6473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6469, size: 32)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6448, file: !225, line: 68, baseType: !6475, size: 32, offset: 64)
!6475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6476, size: 32)
!6476 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !6477)
!6477 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !6478)
!6478 = !{!6479}
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6477, file: !261, line: 232, baseType: !6480, size: 64)
!6480 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !6455)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6448, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6448, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!6483 = !DIDerivedType(tag: DW_TAG_member, scope: !6448, file: !225, line: 90, baseType: !6484, size: 16, offset: 112)
!6484 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6448, file: !225, line: 90, size: 16, elements: !6485)
!6485 = !{!6486, !6491}
!6486 = !DIDerivedType(tag: DW_TAG_member, scope: !6484, file: !225, line: 91, baseType: !6487, size: 16)
!6487 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6484, file: !225, line: 91, size: 16, elements: !6488)
!6488 = !{!6489, !6490}
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6487, file: !225, line: 96, baseType: !275, size: 8)
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6487, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6484, file: !225, line: 100, baseType: !279, size: 16)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6448, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6448, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6448, file: !225, line: 131, baseType: !6495, size: 192, offset: 192)
!6495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !6496)
!6496 = !{!6497, !6498, !6504}
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6495, file: !261, line: 245, baseType: !6454, size: 64)
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6495, file: !261, line: 246, baseType: !6499, size: 32, offset: 64)
!6499 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !6500)
!6500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6501, size: 32)
!6501 = !DISubroutineType(types: !6502)
!6502 = !{null, !6503}
!6503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6495, size: 32)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6495, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6445, file: !225, line: 250, baseType: !6506, size: 288, offset: 384)
!6506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !6507)
!6507 = !{!6508, !6509, !6510, !6511, !6512, !6513, !6514, !6515, !6516}
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6506, file: !296, line: 26, baseType: !156, size: 32)
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6506, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6506, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6506, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6506, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6506, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6506, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6506, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6506, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6445, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6445, file: !225, line: 256, baseType: !6476, size: 64, offset: 704)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6445, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6445, file: !225, line: 300, baseType: !6521, size: 96, offset: 800)
!6521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !6522)
!6522 = !{!6523, !6524, !6525}
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6521, file: !225, line: 153, baseType: !22, size: 32)
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6521, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6521, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6445, file: !225, line: 325, baseType: !6527, size: 32, offset: 896)
!6527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6528, size: 32)
!6528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !6529)
!6529 = !{!6530, !6536, !6537}
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6528, file: !220, line: 5074, baseType: !6531, size: 96)
!6531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !6532)
!6532 = !{!6533, !6534, !6535}
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6531, file: !324, line: 57, baseType: !327, size: 32)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6531, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6531, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6528, file: !220, line: 5075, baseType: !6476, size: 64, offset: 96)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6528, file: !220, line: 5076, baseType: !6538, size: 32, offset: 160)
!6538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !6539)
!6539 = !{!6540}
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6538, file: !334, line: 52, baseType: !22, size: 32)
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6445, file: !225, line: 343, baseType: !6542, size: 64, offset: 928)
!6542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !6543)
!6543 = !{!6544, !6545}
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6542, file: !296, line: 63, baseType: !156, size: 32)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6542, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!6546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6547, size: 32)
!6547 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !345, line: 44, baseType: !6548)
!6548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !347, line: 47, size: 8, elements: !6549)
!6549 = !{!6550}
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6548, file: !347, line: 48, baseType: !135, size: 8)
!6551 = !{!6552, !6553, !6554, !6555, !6556, !6557, !6558, !6559}
!6552 = !DILocalVariable(name: "thread", arg: 1, scope: !6440, file: !6441, line: 56, type: !6444)
!6553 = !DILocalVariable(name: "stack", arg: 2, scope: !6440, file: !6441, line: 56, type: !6546)
!6554 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6440, file: !6441, line: 57, type: !1239)
!6555 = !DILocalVariable(name: "entry", arg: 4, scope: !6440, file: !6441, line: 57, type: !352)
!6556 = !DILocalVariable(name: "p1", arg: 5, scope: !6440, file: !6441, line: 58, type: !117)
!6557 = !DILocalVariable(name: "p2", arg: 6, scope: !6440, file: !6441, line: 58, type: !117)
!6558 = !DILocalVariable(name: "p3", arg: 7, scope: !6440, file: !6441, line: 58, type: !117)
!6559 = !DILocalVariable(name: "iframe", scope: !6440, file: !6441, line: 60, type: !2711)
!6560 = !DILocation(line: 0, scope: !6440)
!6561 = !DILocation(line: 85, column: 11, scope: !6440)
!6562 = !DILocation(line: 93, column: 10, scope: !6440)
!6563 = !DILocation(line: 98, column: 13, scope: !6440)
!6564 = !DILocation(line: 100, column: 15, scope: !6440)
!6565 = !DILocation(line: 100, column: 10, scope: !6440)
!6566 = !DILocation(line: 100, column: 13, scope: !6440)
!6567 = !DILocation(line: 101, column: 15, scope: !6440)
!6568 = !DILocation(line: 101, column: 10, scope: !6440)
!6569 = !DILocation(line: 101, column: 13, scope: !6440)
!6570 = !DILocation(line: 102, column: 15, scope: !6440)
!6571 = !DILocation(line: 102, column: 10, scope: !6440)
!6572 = !DILocation(line: 102, column: 13, scope: !6440)
!6573 = !DILocation(line: 103, column: 15, scope: !6440)
!6574 = !DILocation(line: 103, column: 10, scope: !6440)
!6575 = !DILocation(line: 103, column: 13, scope: !6440)
!6576 = !DILocation(line: 106, column: 10, scope: !6440)
!6577 = !DILocation(line: 106, column: 15, scope: !6440)
!6578 = !DILocation(line: 122, column: 29, scope: !6440)
!6579 = !DILocation(line: 122, column: 23, scope: !6440)
!6580 = !DILocation(line: 122, column: 27, scope: !6440)
!6581 = !DILocation(line: 123, column: 15, scope: !6440)
!6582 = !DILocation(line: 123, column: 23, scope: !6440)
!6583 = !DILocation(line: 143, column: 1, scope: !6440)
!6584 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6441, file: !6441, line: 385, type: !6585, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !6588)
!6585 = !DISubroutineType(types: !6586)
!6586 = !{!156, !6587, !6587}
!6587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !156)
!6588 = !{!6589, !6590, !6591, !6594}
!6589 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6584, file: !6441, line: 385, type: !6587)
!6590 = !DILocalVariable(name: "psp", arg: 2, scope: !6584, file: !6441, line: 385, type: !6587)
!6591 = !DILocalVariable(name: "thread", scope: !6584, file: !6441, line: 388, type: !6592)
!6592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6593, size: 32)
!6593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6445)
!6594 = !DILocalVariable(name: "guard_len", scope: !6584, file: !6441, line: 405, type: !156)
!6595 = !DILocation(line: 0, scope: !6584)
!6596 = !DILocation(line: 388, column: 34, scope: !6584)
!6597 = !DILocation(line: 390, column: 13, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6584, file: !6441, line: 390, column: 6)
!6599 = !DILocation(line: 390, column: 6, scope: !6584)
!6600 = !DILocation(line: 438, column: 6, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6584, file: !6441, line: 438, column: 6)
!6602 = !DILocation(line: 438, column: 6, scope: !6584)
!6603 = !DILocation(line: 442, column: 3, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6601, file: !6441, line: 440, column: 22)
!6605 = !DILocation(line: 455, column: 1, scope: !6584)
!6606 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6441, file: !6441, line: 530, type: !6607, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2708, retainedNodes: !6609)
!6607 = !DISubroutineType(types: !6608)
!6608 = !{null, !6444, !1239, !352}
!6609 = !{!6610, !6611, !6612}
!6610 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6606, file: !6441, line: 530, type: !6444)
!6611 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6606, file: !6441, line: 530, type: !1239)
!6612 = !DILocalVariable(name: "_main", arg: 3, scope: !6606, file: !6441, line: 531, type: !352)
!6613 = !DILocation(line: 0, scope: !6606)
!6614 = !DILocation(line: 535, column: 11, scope: !6606)
!6615 = !DILocation(line: 560, column: 2, scope: !6606)
!6616 = !DILocation(line: 576, column: 2, scope: !6606)
!6617 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6618 = !DILocation(line: 603, column: 2, scope: !6606)
!6619 = distinct !DISubprogram(name: "z_arm_fault", scope: !6620, file: !6620, line: 1036, type: !6621, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !6636)
!6620 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6621 = !DISubroutineType(types: !6622)
!6622 = !{null, !156, !156, !156, !6623}
!6623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6624, size: 32)
!6624 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !296, line: 37, baseType: !6625)
!6625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !6626)
!6626 = !{!6627, !6628, !6629, !6630, !6631, !6632, !6633, !6634, !6635}
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6625, file: !296, line: 26, baseType: !156, size: 32)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6625, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6625, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6625, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6625, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6625, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6625, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6625, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6625, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!6636 = !{!6637, !6638, !6639, !6640, !6641, !6642, !6643, !6644, !6645, !6646}
!6637 = !DILocalVariable(name: "msp", arg: 1, scope: !6619, file: !6620, line: 1036, type: !156)
!6638 = !DILocalVariable(name: "psp", arg: 2, scope: !6619, file: !6620, line: 1036, type: !156)
!6639 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6619, file: !6620, line: 1036, type: !156)
!6640 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6619, file: !6620, line: 1037, type: !6623)
!6641 = !DILocalVariable(name: "reason", scope: !6619, file: !6620, line: 1039, type: !156)
!6642 = !DILocalVariable(name: "fault", scope: !6619, file: !6620, line: 1040, type: !118)
!6643 = !DILocalVariable(name: "recoverable", scope: !6619, file: !6620, line: 1041, type: !146)
!6644 = !DILocalVariable(name: "nested_exc", scope: !6619, file: !6620, line: 1041, type: !146)
!6645 = !DILocalVariable(name: "esf", scope: !6619, file: !6620, line: 1042, type: !2779)
!6646 = !DILocalVariable(name: "esf_copy", scope: !6619, file: !6620, line: 1047, type: !2780)
!6647 = !DILocation(line: 0, scope: !6619)
!6648 = !DILocation(line: 1040, column: 19, scope: !6619)
!6649 = !DILocation(line: 1041, column: 2, scope: !6619)
!6650 = !DILocation(line: 1047, column: 2, scope: !6619)
!6651 = !DILocation(line: 1047, column: 15, scope: !6619)
!6652 = !DILocalVariable(name: "key", arg: 1, scope: !6653, file: !6137, line: 84, type: !32)
!6653 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6137, file: !6137, line: 84, type: !6148, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !6654)
!6654 = !{!6652}
!6655 = !DILocation(line: 0, scope: !6653, inlinedAt: !6656)
!6656 = distinct !DILocation(line: 1050, column: 2, scope: !6619)
!6657 = !DILocation(line: 95, column: 2, scope: !6653, inlinedAt: !6656)
!6658 = !{i64 1983160}
!6659 = !DILocation(line: 1055, column: 9, scope: !6619)
!6660 = !DILocation(line: 1056, column: 2, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6662, file: !6620, line: 1056, column: 2)
!6662 = distinct !DILexicalBlock(scope: !6619, file: !6620, line: 1056, column: 2)
!6663 = !DILocation(line: 1056, column: 2, scope: !6662)
!6664 = !DILocation(line: 1056, column: 2, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6661, file: !6620, line: 1056, column: 2)
!6666 = !DILocation(line: 1040, column: 24, scope: !6619)
!6667 = !DILocation(line: 1063, column: 11, scope: !6619)
!6668 = !DILocation(line: 1064, column: 6, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6619, file: !6620, line: 1064, column: 6)
!6670 = !{i8 0, i8 2}
!6671 = !DILocation(line: 1064, column: 6, scope: !6619)
!6672 = !DILocation(line: 1070, column: 20, scope: !6619)
!6673 = !DILocation(line: 1070, column: 2, scope: !6619)
!6674 = !DILocation(line: 1089, column: 6, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6619, file: !6620, line: 1089, column: 6)
!6676 = !DILocation(line: 0, scope: !6675)
!6677 = !DILocation(line: 1089, column: 6, scope: !6619)
!6678 = !DILocation(line: 1090, column: 28, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6680, file: !6620, line: 1090, column: 7)
!6680 = distinct !DILexicalBlock(scope: !6675, file: !6620, line: 1089, column: 18)
!6681 = !DILocation(line: 1090, column: 44, scope: !6679)
!6682 = !DILocation(line: 1090, column: 7, scope: !6680)
!6683 = !DILocation(line: 1091, column: 24, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6679, file: !6620, line: 1090, column: 50)
!6685 = !DILocation(line: 1092, column: 3, scope: !6684)
!6686 = !DILocation(line: 1094, column: 23, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6675, file: !6620, line: 1093, column: 9)
!6688 = !DILocation(line: 1097, column: 2, scope: !6619)
!6689 = !DILocation(line: 1098, column: 1, scope: !6619)
!6690 = distinct !DISubprogram(name: "get_esf", scope: !6620, file: !6620, line: 894, type: !6691, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !6694)
!6691 = !DISubroutineType(types: !6692)
!6692 = !{!2779, !156, !156, !156, !6693}
!6693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 32)
!6694 = !{!6695, !6696, !6697, !6698, !6699, !6700}
!6695 = !DILocalVariable(name: "msp", arg: 1, scope: !6690, file: !6620, line: 894, type: !156)
!6696 = !DILocalVariable(name: "psp", arg: 2, scope: !6690, file: !6620, line: 894, type: !156)
!6697 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6690, file: !6620, line: 894, type: !156)
!6698 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6690, file: !6620, line: 895, type: !6693)
!6699 = !DILocalVariable(name: "alternative_state_exc", scope: !6690, file: !6620, line: 897, type: !146)
!6700 = !DILocalVariable(name: "ptr_esf", scope: !6690, file: !6620, line: 898, type: !2779)
!6701 = !DILocation(line: 0, scope: !6690)
!6702 = !DILocation(line: 900, column: 14, scope: !6690)
!6703 = !DILocation(line: 902, column: 49, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6690, file: !6620, line: 902, column: 6)
!6705 = !DILocation(line: 902, column: 6, scope: !6690)
!6706 = !DILocation(line: 983, column: 18, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6690, file: !6620, line: 983, column: 6)
!6708 = !DILocation(line: 991, column: 7, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6710, file: !6620, line: 990, column: 30)
!6710 = distinct !DILexicalBlock(scope: !6690, file: !6620, line: 990, column: 6)
!6711 = !DILocation(line: 998, column: 16, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6713, file: !6620, line: 995, column: 10)
!6713 = distinct !DILexicalBlock(scope: !6709, file: !6620, line: 991, column: 7)
!6714 = !DILocation(line: 1002, column: 2, scope: !6690)
!6715 = !DILocation(line: 1003, column: 1, scope: !6690)
!6716 = distinct !DISubprogram(name: "fault_handle", scope: !6620, file: !6620, line: 786, type: !6717, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !6719)
!6717 = !DISubroutineType(types: !6718)
!6718 = !{!156, !2779, !118, !6693}
!6719 = !{!6720, !6721, !6722, !6723}
!6720 = !DILocalVariable(name: "esf", arg: 1, scope: !6716, file: !6620, line: 786, type: !2779)
!6721 = !DILocalVariable(name: "fault", arg: 2, scope: !6716, file: !6620, line: 786, type: !118)
!6722 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6716, file: !6620, line: 786, type: !6693)
!6723 = !DILocalVariable(name: "reason", scope: !6716, file: !6620, line: 788, type: !156)
!6724 = !DILocation(line: 0, scope: !6716)
!6725 = !DILocation(line: 790, column: 15, scope: !6716)
!6726 = !DILocation(line: 792, column: 2, scope: !6716)
!6727 = !DILocation(line: 794, column: 12, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6716, file: !6620, line: 792, column: 17)
!6729 = !DILocation(line: 795, column: 3, scope: !6728)
!6730 = !DILocation(line: 800, column: 12, scope: !6728)
!6731 = !DILocation(line: 801, column: 3, scope: !6728)
!6732 = !DILocation(line: 803, column: 12, scope: !6728)
!6733 = !DILocation(line: 804, column: 3, scope: !6728)
!6734 = !DILocation(line: 806, column: 12, scope: !6728)
!6735 = !DILocation(line: 807, column: 3, scope: !6728)
!6736 = !DILocation(line: 814, column: 3, scope: !6728)
!6737 = !DILocation(line: 815, column: 3, scope: !6728)
!6738 = !DILocation(line: 829, column: 2, scope: !6716)
!6739 = distinct !DISubprogram(name: "hard_fault", scope: !6620, file: !6620, line: 709, type: !6740, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !6742)
!6740 = !DISubroutineType(types: !6741)
!6741 = !{!156, !2779, !6693}
!6742 = !{!6743, !6744, !6745}
!6743 = !DILocalVariable(name: "esf", arg: 1, scope: !6739, file: !6620, line: 709, type: !2779)
!6744 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6739, file: !6620, line: 709, type: !6693)
!6745 = !DILocalVariable(name: "reason", scope: !6739, file: !6620, line: 711, type: !156)
!6746 = !DILocation(line: 0, scope: !6739)
!6747 = !DILocation(line: 732, column: 15, scope: !6739)
!6748 = !DILocation(line: 734, column: 12, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6739, file: !6620, line: 734, column: 6)
!6750 = !DILocation(line: 734, column: 17, scope: !6749)
!6751 = !DILocation(line: 734, column: 41, scope: !6749)
!6752 = !DILocation(line: 734, column: 6, scope: !6739)
!6753 = !DILocation(line: 736, column: 19, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6749, file: !6620, line: 736, column: 13)
!6755 = !DILocation(line: 736, column: 49, scope: !6754)
!6756 = !DILocation(line: 736, column: 13, scope: !6749)
!6757 = !DILocation(line: 738, column: 19, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6754, file: !6620, line: 738, column: 13)
!6759 = !DILocation(line: 738, column: 24, scope: !6758)
!6760 = !DILocation(line: 738, column: 47, scope: !6758)
!6761 = !DILocation(line: 738, column: 13, scope: !6754)
!6762 = !DILocation(line: 740, column: 7, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6764, file: !6620, line: 740, column: 7)
!6764 = distinct !DILexicalBlock(scope: !6758, file: !6620, line: 738, column: 53)
!6765 = !DILocation(line: 740, column: 7, scope: !6764)
!6766 = !DILocation(line: 742, column: 24, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6763, file: !6620, line: 740, column: 38)
!6768 = !DILocation(line: 743, column: 3, scope: !6767)
!6769 = !DILocation(line: 743, column: 20, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6763, file: !6620, line: 743, column: 14)
!6771 = !DILocation(line: 743, column: 25, scope: !6770)
!6772 = !DILocation(line: 743, column: 52, scope: !6770)
!6773 = !DILocation(line: 743, column: 14, scope: !6763)
!6774 = !DILocation(line: 744, column: 13, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6770, file: !6620, line: 743, column: 58)
!6776 = !DILocation(line: 745, column: 3, scope: !6775)
!6777 = !DILocation(line: 745, column: 20, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6770, file: !6620, line: 745, column: 14)
!6779 = !DILocation(line: 745, column: 25, scope: !6778)
!6780 = !DILocation(line: 745, column: 52, scope: !6778)
!6781 = !DILocation(line: 745, column: 14, scope: !6770)
!6782 = !DILocation(line: 746, column: 13, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6778, file: !6620, line: 745, column: 58)
!6784 = !DILocation(line: 747, column: 3, scope: !6783)
!6785 = !DILocation(line: 747, column: 20, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6778, file: !6620, line: 747, column: 14)
!6787 = !DILocation(line: 747, column: 52, scope: !6786)
!6788 = !DILocation(line: 747, column: 14, scope: !6778)
!6789 = !DILocation(line: 748, column: 13, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6786, file: !6620, line: 747, column: 58)
!6791 = !DILocation(line: 754, column: 4, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !6620, line: 754, column: 4)
!6793 = distinct !DILexicalBlock(scope: !6794, file: !6620, line: 754, column: 4)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !6620, line: 754, column: 4)
!6795 = distinct !DILexicalBlock(scope: !6786, file: !6620, line: 753, column: 10)
!6796 = !DILocation(line: 758, column: 3, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6798, file: !6620, line: 758, column: 3)
!6798 = distinct !DILexicalBlock(scope: !6799, file: !6620, line: 758, column: 3)
!6799 = distinct !DILexicalBlock(scope: !6800, file: !6620, line: 758, column: 3)
!6800 = distinct !DILexicalBlock(scope: !6758, file: !6620, line: 757, column: 9)
!6801 = !DILocation(line: 766, column: 2, scope: !6739)
!6802 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6620, file: !6620, line: 229, type: !6717, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !6803)
!6803 = !{!6804, !6805, !6806, !6807, !6808, !6809, !6812}
!6804 = !DILocalVariable(name: "esf", arg: 1, scope: !6802, file: !6620, line: 229, type: !2779)
!6805 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6802, file: !6620, line: 229, type: !118)
!6806 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6802, file: !6620, line: 230, type: !6693)
!6807 = !DILocalVariable(name: "reason", scope: !6802, file: !6620, line: 232, type: !156)
!6808 = !DILocalVariable(name: "mmfar", scope: !6802, file: !6620, line: 233, type: !156)
!6809 = !DILocalVariable(name: "temp", scope: !6810, file: !6620, line: 254, type: !156)
!6810 = distinct !DILexicalBlock(scope: !6811, file: !6620, line: 244, column: 48)
!6811 = distinct !DILexicalBlock(scope: !6802, file: !6620, line: 244, column: 6)
!6812 = !DILocalVariable(name: "min_stack_ptr", scope: !6813, file: !6620, line: 309, type: !156)
!6813 = distinct !DILexicalBlock(scope: !6814, file: !6620, line: 308, column: 43)
!6814 = distinct !DILexicalBlock(scope: !6815, file: !6620, line: 308, column: 7)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !6620, line: 289, column: 40)
!6816 = distinct !DILexicalBlock(scope: !6802, file: !6620, line: 288, column: 6)
!6817 = !DILocation(line: 0, scope: !6802)
!6818 = !DILocation(line: 237, column: 12, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6802, file: !6620, line: 237, column: 6)
!6820 = !DILocation(line: 241, column: 12, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6802, file: !6620, line: 241, column: 6)
!6822 = !DILocation(line: 244, column: 12, scope: !6811)
!6823 = !DILocation(line: 244, column: 17, scope: !6811)
!6824 = !DILocation(line: 244, column: 42, scope: !6811)
!6825 = !DILocation(line: 244, column: 6, scope: !6802)
!6826 = !DILocation(line: 254, column: 24, scope: !6810)
!6827 = !DILocation(line: 0, scope: !6810)
!6828 = !DILocation(line: 256, column: 13, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6810, file: !6620, line: 256, column: 7)
!6830 = !DILocation(line: 256, column: 18, scope: !6829)
!6831 = !DILocation(line: 256, column: 44, scope: !6829)
!6832 = !DILocation(line: 256, column: 7, scope: !6810)
!6833 = !DILocation(line: 259, column: 24, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6835, file: !6620, line: 259, column: 8)
!6835 = distinct !DILexicalBlock(scope: !6829, file: !6620, line: 256, column: 50)
!6836 = !DILocation(line: 259, column: 8, scope: !6835)
!6837 = !DILocation(line: 261, column: 15, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6834, file: !6620, line: 259, column: 30)
!6839 = !DILocation(line: 262, column: 4, scope: !6838)
!6840 = !DILocation(line: 265, column: 12, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6802, file: !6620, line: 265, column: 6)
!6842 = !DILocation(line: 269, column: 12, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6802, file: !6620, line: 269, column: 6)
!6844 = !DILocation(line: 288, column: 12, scope: !6816)
!6845 = !DILocation(line: 288, column: 17, scope: !6816)
!6846 = !DILocation(line: 288, column: 41, scope: !6816)
!6847 = !DILocation(line: 289, column: 9, scope: !6816)
!6848 = !DILocation(line: 289, column: 14, scope: !6816)
!6849 = !DILocation(line: 288, column: 6, scope: !6802)
!6850 = !DILocation(line: 308, column: 12, scope: !6814)
!6851 = !DILocation(line: 308, column: 17, scope: !6814)
!6852 = !DILocation(line: 308, column: 7, scope: !6815)
!6853 = !DILocation(line: 310, column: 6, scope: !6813)
!6854 = !DILocation(line: 309, column: 29, scope: !6813)
!6855 = !DILocation(line: 0, scope: !6813)
!6856 = !DILocation(line: 312, column: 8, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6813, file: !6620, line: 312, column: 8)
!6858 = !DILocation(line: 312, column: 8, scope: !6813)
!6859 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6860, file: !6311, line: 1099, type: !156)
!6860 = distinct !DISubprogram(name: "__set_PSP", scope: !6311, file: !6311, line: 1099, type: !6408, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !6861)
!6861 = !{!6859}
!6862 = !DILocation(line: 0, scope: !6860, inlinedAt: !6863)
!6863 = distinct !DILocation(line: 338, column: 5, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6857, file: !6620, line: 312, column: 23)
!6865 = !DILocation(line: 1101, column: 3, scope: !6860, inlinedAt: !6863)
!6866 = !{i64 2861689}
!6867 = !DILocation(line: 341, column: 4, scope: !6864)
!6868 = !DILocation(line: 342, column: 5, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6870, file: !6620, line: 342, column: 5)
!6870 = distinct !DILexicalBlock(scope: !6871, file: !6620, line: 342, column: 5)
!6871 = distinct !DILexicalBlock(scope: !6857, file: !6620, line: 341, column: 11)
!6872 = !DILocation(line: 342, column: 5, scope: !6870)
!6873 = !DILocation(line: 342, column: 5, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6869, file: !6620, line: 342, column: 5)
!6875 = !DILocation(line: 360, column: 12, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6802, file: !6620, line: 360, column: 6)
!6877 = !DILocation(line: 360, column: 17, scope: !6876)
!6878 = !DILocation(line: 360, column: 41, scope: !6876)
!6879 = !DILocation(line: 360, column: 6, scope: !6802)
!6880 = !DILocation(line: 361, column: 14, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6876, file: !6620, line: 360, column: 47)
!6882 = !DILocation(line: 362, column: 2, scope: !6881)
!6883 = !DILocation(line: 366, column: 12, scope: !6802)
!6884 = !DILocation(line: 369, column: 15, scope: !6802)
!6885 = !DILocation(line: 371, column: 2, scope: !6802)
!6886 = distinct !DISubprogram(name: "bus_fault", scope: !6620, file: !6620, line: 383, type: !6887, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !6889)
!6887 = !DISubroutineType(types: !6888)
!6888 = !{!118, !2779, !118, !6693}
!6889 = !{!6890, !6891, !6892, !6893, !6894}
!6890 = !DILocalVariable(name: "esf", arg: 1, scope: !6886, file: !6620, line: 383, type: !2779)
!6891 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6886, file: !6620, line: 383, type: !118)
!6892 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6886, file: !6620, line: 383, type: !6693)
!6893 = !DILocalVariable(name: "reason", scope: !6886, file: !6620, line: 385, type: !156)
!6894 = !DILocalVariable(name: "bfar", scope: !6895, file: !6620, line: 405, type: !156)
!6895 = distinct !DILexicalBlock(scope: !6896, file: !6620, line: 395, column: 42)
!6896 = distinct !DILexicalBlock(scope: !6886, file: !6620, line: 395, column: 6)
!6897 = !DILocation(line: 0, scope: !6886)
!6898 = !DILocation(line: 389, column: 11, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6886, file: !6620, line: 389, column: 6)
!6900 = !DILocation(line: 392, column: 11, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6886, file: !6620, line: 392, column: 6)
!6902 = !DILocation(line: 395, column: 11, scope: !6896)
!6903 = !DILocation(line: 395, column: 16, scope: !6896)
!6904 = !DILocation(line: 395, column: 6, scope: !6886)
!6905 = !DILocation(line: 405, column: 3, scope: !6895)
!6906 = !DILocation(line: 0, scope: !6895)
!6907 = !DILocation(line: 407, column: 13, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6895, file: !6620, line: 407, column: 7)
!6909 = !DILocation(line: 407, column: 18, scope: !6908)
!6910 = !DILocation(line: 407, column: 44, scope: !6908)
!6911 = !DILocation(line: 407, column: 7, scope: !6895)
!6912 = !DILocation(line: 411, column: 15, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6914, file: !6620, line: 409, column: 30)
!6914 = distinct !DILexicalBlock(scope: !6915, file: !6620, line: 409, column: 8)
!6915 = distinct !DILexicalBlock(scope: !6908, file: !6620, line: 407, column: 50)
!6916 = !DILocation(line: 412, column: 4, scope: !6913)
!6917 = !DILocation(line: 415, column: 11, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6886, file: !6620, line: 415, column: 6)
!6919 = !DILocation(line: 418, column: 12, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6886, file: !6620, line: 418, column: 6)
!6921 = !DILocation(line: 418, column: 17, scope: !6920)
!6922 = !DILocation(line: 418, column: 41, scope: !6920)
!6923 = !DILocation(line: 418, column: 6, scope: !6886)
!6924 = !DILocation(line: 423, column: 18, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6920, file: !6620, line: 423, column: 13)
!6926 = !DILocation(line: 524, column: 12, scope: !6886)
!6927 = !DILocation(line: 526, column: 15, scope: !6886)
!6928 = !DILocation(line: 528, column: 2, scope: !6886)
!6929 = distinct !DISubprogram(name: "usage_fault", scope: !6620, file: !6620, line: 539, type: !6930, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !6934)
!6930 = !DISubroutineType(types: !6931)
!6931 = !{!156, !6932}
!6932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6933, size: 32)
!6933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2780)
!6934 = !{!6935, !6936}
!6935 = !DILocalVariable(name: "esf", arg: 1, scope: !6929, file: !6620, line: 539, type: !6932)
!6936 = !DILocalVariable(name: "reason", scope: !6929, file: !6620, line: 541, type: !156)
!6937 = !DILocation(line: 0, scope: !6929)
!6938 = !DILocation(line: 546, column: 12, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6929, file: !6620, line: 546, column: 6)
!6940 = !DILocation(line: 549, column: 12, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6929, file: !6620, line: 549, column: 6)
!6942 = !DILocation(line: 567, column: 12, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6929, file: !6620, line: 567, column: 6)
!6944 = !DILocation(line: 570, column: 12, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6929, file: !6620, line: 570, column: 6)
!6946 = !DILocation(line: 573, column: 12, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6929, file: !6620, line: 573, column: 6)
!6948 = !DILocation(line: 576, column: 12, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6929, file: !6620, line: 576, column: 6)
!6950 = !DILocation(line: 581, column: 12, scope: !6929)
!6951 = !DILocation(line: 583, column: 2, scope: !6929)
!6952 = distinct !DISubprogram(name: "debug_monitor", scope: !6620, file: !6620, line: 632, type: !6953, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !6955)
!6953 = !DISubroutineType(types: !6954)
!6954 = !{null, !2779, !6693}
!6955 = !{!6956, !6957}
!6956 = !DILocalVariable(name: "esf", arg: 1, scope: !6952, file: !6620, line: 632, type: !2779)
!6957 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6952, file: !6620, line: 632, type: !6693)
!6958 = !DILocation(line: 0, scope: !6952)
!6959 = !DILocation(line: 634, column: 15, scope: !6952)
!6960 = !DILocation(line: 652, column: 1, scope: !6952)
!6961 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6620, file: !6620, line: 658, type: !6962, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !6964)
!6962 = !DISubroutineType(types: !6963)
!6963 = !{!146, !2779}
!6964 = !{!6965, !6966, !6967}
!6965 = !DILocalVariable(name: "esf", arg: 1, scope: !6961, file: !6620, line: 658, type: !2779)
!6966 = !DILocalVariable(name: "ret_addr", scope: !6961, file: !6620, line: 660, type: !2550)
!6967 = !DILocalVariable(name: "fault_insn", scope: !6961, file: !6620, line: 686, type: !279)
!6968 = !DILocation(line: 0, scope: !6961)
!6969 = !DILocation(line: 660, column: 46, scope: !6961)
!6970 = !DILocation(line: 660, column: 23, scope: !6961)
!6971 = !DILocation(line: 682, column: 11, scope: !6961)
!6972 = !DILocation(line: 271, column: 3, scope: !6973, inlinedAt: !6974)
!6973 = distinct !DISubprogram(name: "__DSB", scope: !6311, file: !6311, line: 269, type: !365, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !2101)
!6974 = distinct !DILocation(line: 683, column: 2, scope: !6961)
!6975 = !{i64 2837824}
!6976 = !DILocation(line: 260, column: 3, scope: !6977, inlinedAt: !6978)
!6977 = distinct !DISubprogram(name: "__ISB", scope: !6311, file: !6311, line: 258, type: !365, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !2101)
!6978 = distinct !DILocation(line: 684, column: 2, scope: !6961)
!6979 = !{i64 2837541}
!6980 = !DILocation(line: 686, column: 35, scope: !6961)
!6981 = !DILocation(line: 686, column: 24, scope: !6961)
!6982 = !DILocation(line: 688, column: 11, scope: !6961)
!6983 = !DILocation(line: 271, column: 3, scope: !6973, inlinedAt: !6984)
!6984 = distinct !DILocation(line: 689, column: 2, scope: !6961)
!6985 = !DILocation(line: 260, column: 3, scope: !6977, inlinedAt: !6986)
!6986 = distinct !DILocation(line: 690, column: 2, scope: !6961)
!6987 = !DILocation(line: 693, column: 45, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6961, file: !6620, line: 693, column: 6)
!6989 = !DILocation(line: 699, column: 1, scope: !6961)
!6990 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6620, file: !6620, line: 1107, type: !365, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2751, retainedNodes: !2101)
!6991 = !DILocation(line: 1111, column: 11, scope: !6990)
!6992 = !DILocation(line: 1136, column: 1, scope: !6990)
!6993 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6994, file: !6994, line: 26, type: !365, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !6995)
!6994 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6995 = !{!6996}
!6996 = !DILocalVariable(name: "irq", scope: !6993, file: !6994, line: 28, type: !118)
!6997 = !DILocation(line: 0, scope: !6993)
!6998 = !DILocation(line: 30, column: 2, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6993, file: !6994, line: 30, column: 2)
!7000 = !DILocation(line: 31, column: 3, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !7002, file: !6994, line: 30, column: 39)
!7002 = distinct !DILexicalBlock(scope: !6999, file: !6994, line: 30, column: 2)
!7003 = !DILocation(line: 30, column: 35, scope: !7002)
!7004 = !DILocation(line: 30, column: 13, scope: !7002)
!7005 = distinct !{!7005, !6998, !7006}
!7006 = !DILocation(line: 32, column: 2, scope: !6999)
!7007 = !DILocation(line: 33, column: 1, scope: !6993)
!7008 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !656, file: !656, line: 1814, type: !6351, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2822, retainedNodes: !7009)
!7009 = !{!7010, !7011}
!7010 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7008, file: !656, line: 1814, type: !891)
!7011 = !DILocalVariable(name: "priority", arg: 2, scope: !7008, file: !656, line: 1814, type: !156)
!7012 = !DILocation(line: 0, scope: !7008)
!7013 = !DILocation(line: 1816, column: 7, scope: !7008)
!7014 = !DILocation(line: 0, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7008, file: !656, line: 1816, column: 7)
!7016 = !DILocation(line: 1824, column: 1, scope: !7008)
!7017 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7018, file: !7018, line: 27, type: !7019, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7124)
!7018 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7019 = !DISubroutineType(types: !7020)
!7020 = !{null, !7021}
!7021 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !7022)
!7022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7023, size: 32)
!7023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !7024)
!7024 = !{!7025, !7083, !7095, !7096, !7097, !7098, !7104, !7119}
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7023, file: !225, line: 247, baseType: !7026, size: 384)
!7026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !7027)
!7027 = !{!7028, !7052, !7059, !7060, !7061, !7070, !7071, !7072}
!7028 = !DIDerivedType(tag: DW_TAG_member, scope: !7026, file: !225, line: 60, baseType: !7029, size: 64)
!7029 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7026, file: !225, line: 60, size: 64, elements: !7030)
!7030 = !{!7031, !7046}
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7029, file: !225, line: 61, baseType: !7032, size: 64)
!7032 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !7033)
!7033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !7034)
!7034 = !{!7035, !7041}
!7035 = !DIDerivedType(tag: DW_TAG_member, scope: !7033, file: !235, line: 38, baseType: !7036, size: 32)
!7036 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7033, file: !235, line: 38, size: 32, elements: !7037)
!7037 = !{!7038, !7040}
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7036, file: !235, line: 39, baseType: !7039, size: 32)
!7039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7033, size: 32)
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7036, file: !235, line: 40, baseType: !7039, size: 32)
!7041 = !DIDerivedType(tag: DW_TAG_member, scope: !7033, file: !235, line: 42, baseType: !7042, size: 32, offset: 32)
!7042 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7033, file: !235, line: 42, size: 32, elements: !7043)
!7043 = !{!7044, !7045}
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7042, file: !235, line: 43, baseType: !7039, size: 32)
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7042, file: !235, line: 44, baseType: !7039, size: 32)
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7029, file: !225, line: 62, baseType: !7047, size: 64)
!7047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !7048)
!7048 = !{!7049}
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7047, file: !251, line: 50, baseType: !7050, size: 64)
!7050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7051, size: 64, elements: !256)
!7051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7047, size: 32)
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7026, file: !225, line: 68, baseType: !7053, size: 32, offset: 64)
!7053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7054, size: 32)
!7054 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !7055)
!7055 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !7056)
!7056 = !{!7057}
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7055, file: !261, line: 232, baseType: !7058, size: 64)
!7058 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !7033)
!7059 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7026, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7026, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!7061 = !DIDerivedType(tag: DW_TAG_member, scope: !7026, file: !225, line: 90, baseType: !7062, size: 16, offset: 112)
!7062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7026, file: !225, line: 90, size: 16, elements: !7063)
!7063 = !{!7064, !7069}
!7064 = !DIDerivedType(tag: DW_TAG_member, scope: !7062, file: !225, line: 91, baseType: !7065, size: 16)
!7065 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7062, file: !225, line: 91, size: 16, elements: !7066)
!7066 = !{!7067, !7068}
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7065, file: !225, line: 96, baseType: !275, size: 8)
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7065, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7062, file: !225, line: 100, baseType: !279, size: 16)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7026, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7026, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7026, file: !225, line: 131, baseType: !7073, size: 192, offset: 192)
!7073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !7074)
!7074 = !{!7075, !7076, !7082}
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7073, file: !261, line: 245, baseType: !7032, size: 64)
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7073, file: !261, line: 246, baseType: !7077, size: 32, offset: 64)
!7077 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !7078)
!7078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7079, size: 32)
!7079 = !DISubroutineType(types: !7080)
!7080 = !{null, !7081}
!7081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7073, size: 32)
!7082 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7073, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7023, file: !225, line: 250, baseType: !7084, size: 288, offset: 384)
!7084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !7085)
!7085 = !{!7086, !7087, !7088, !7089, !7090, !7091, !7092, !7093, !7094}
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7084, file: !296, line: 26, baseType: !156, size: 32)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7084, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!7088 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7084, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!7089 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7084, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7084, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7084, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7084, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!7093 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7084, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7084, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7023, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7023, file: !225, line: 256, baseType: !7054, size: 64, offset: 704)
!7097 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7023, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!7098 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7023, file: !225, line: 300, baseType: !7099, size: 96, offset: 800)
!7099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !7100)
!7100 = !{!7101, !7102, !7103}
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7099, file: !225, line: 153, baseType: !22, size: 32)
!7102 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7099, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7099, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7023, file: !225, line: 325, baseType: !7105, size: 32, offset: 896)
!7105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7106, size: 32)
!7106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !7107)
!7107 = !{!7108, !7114, !7115}
!7108 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7106, file: !220, line: 5074, baseType: !7109, size: 96)
!7109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !7110)
!7110 = !{!7111, !7112, !7113}
!7111 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7109, file: !324, line: 57, baseType: !327, size: 32)
!7112 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7109, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!7113 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7109, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!7114 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7106, file: !220, line: 5075, baseType: !7054, size: 64, offset: 96)
!7115 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7106, file: !220, line: 5076, baseType: !7116, size: 32, offset: 160)
!7116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !7117)
!7117 = !{!7118}
!7118 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7116, file: !334, line: 52, baseType: !22, size: 32)
!7119 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7023, file: !225, line: 343, baseType: !7120, size: 64, offset: 928)
!7120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !7121)
!7121 = !{!7122, !7123}
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7120, file: !296, line: 63, baseType: !156, size: 32)
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7120, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!7124 = !{!7125}
!7125 = !DILocalVariable(name: "thread", arg: 1, scope: !7017, file: !7018, line: 27, type: !7021)
!7126 = !DILocation(line: 0, scope: !7017)
!7127 = !DILocation(line: 29, column: 6, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7017, file: !7018, line: 29, column: 6)
!7129 = !DILocation(line: 29, column: 15, scope: !7128)
!7130 = !DILocation(line: 29, column: 6, scope: !7017)
!7131 = !DILocation(line: 1031, column: 3, scope: !7132, inlinedAt: !7135)
!7132 = distinct !DISubprogram(name: "__get_IPSR", scope: !6311, file: !6311, line: 1027, type: !6398, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7133)
!7133 = !{!7134}
!7134 = !DILocalVariable(name: "result", scope: !7132, file: !6311, line: 1029, type: !156)
!7135 = distinct !DILocation(line: 48, column: 10, scope: !7136, inlinedAt: !7140)
!7136 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7137, file: !7137, line: 46, type: !7138, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !2101)
!7137 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7138 = !DISubroutineType(types: !7139)
!7139 = !{!146}
!7140 = distinct !DILocation(line: 30, column: 7, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7142, file: !7018, line: 30, column: 7)
!7142 = distinct !DILexicalBlock(scope: !7128, file: !7018, line: 29, column: 26)
!7143 = !{i64 2826672}
!7144 = !DILocation(line: 0, scope: !7132, inlinedAt: !7135)
!7145 = !DILocation(line: 48, column: 9, scope: !7136, inlinedAt: !7140)
!7146 = !DILocation(line: 30, column: 7, scope: !7142)
!7147 = !DILocation(line: 42, column: 14, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7141, file: !7018, line: 30, column: 25)
!7149 = !DILocation(line: 48, column: 15, scope: !7148)
!7150 = !DILocation(line: 49, column: 3, scope: !7148)
!7151 = !DILocation(line: 52, column: 2, scope: !7017)
!7152 = !DILocation(line: 53, column: 1, scope: !7017)
!7153 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !523, file: !523, line: 127, type: !365, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !516, retainedNodes: !2101)
!7154 = !DILocation(line: 134, column: 2, scope: !7153)
!7155 = !DILocation(line: 156, column: 1, scope: !7153)
!7156 = !DILocation(line: 0, scope: !522)
!7157 = !DILocation(line: 289, column: 36, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !522, file: !523, line: 285, column: 2)
!7159 = !DILocation(line: 289, column: 42, scope: !7158)
!7160 = !DILocation(line: 300, column: 36, scope: !522)
!7161 = !DILocation(line: 301, column: 35, scope: !522)
!7162 = !DILocation(line: 302, column: 37, scope: !522)
!7163 = !DILocation(line: 311, column: 2, scope: !522)
!7164 = !DILocation(line: 316, column: 1, scope: !522)
!7165 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !684, file: !684, line: 180, type: !365, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !2101)
!7166 = !DILocation(line: 188, column: 12, scope: !7165)
!7167 = !DILocation(line: 271, column: 3, scope: !7168, inlinedAt: !7169)
!7168 = distinct !DISubprogram(name: "__DSB", scope: !6311, file: !6311, line: 269, type: !365, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !2101)
!7169 = distinct !DILocation(line: 192, column: 2, scope: !7165)
!7170 = !{i64 2989807}
!7171 = !DILocation(line: 260, column: 3, scope: !7172, inlinedAt: !7173)
!7172 = distinct !DISubprogram(name: "__ISB", scope: !6311, file: !6311, line: 258, type: !365, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !2101)
!7173 = distinct !DILocation(line: 193, column: 2, scope: !7165)
!7174 = !{i64 2989524}
!7175 = !DILocation(line: 194, column: 1, scope: !7165)
!7176 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !684, file: !684, line: 199, type: !365, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !2101)
!7177 = !DILocation(line: 282, column: 3, scope: !7178, inlinedAt: !7179)
!7178 = distinct !DISubprogram(name: "__DMB", scope: !6311, file: !6311, line: 280, type: !365, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !2101)
!7179 = distinct !DILocation(line: 202, column: 2, scope: !7176)
!7180 = !{i64 2990083}
!7181 = !DILocation(line: 205, column: 12, scope: !7176)
!7182 = !DILocation(line: 206, column: 1, scope: !7176)
!7183 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !684, file: !684, line: 275, type: !7184, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7197)
!7184 = !DISubroutineType(types: !7185)
!7185 = !{null, !7186, !1883, !6587, !6587}
!7186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7187, size: 32)
!7187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7188)
!7188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !635, line: 52, size: 96, elements: !7189)
!7189 = !{!7190, !7191, !7192}
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7188, file: !635, line: 53, baseType: !22, size: 32)
!7191 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7188, file: !635, line: 54, baseType: !315, size: 32, offset: 32)
!7192 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7188, file: !635, line: 55, baseType: !7193, size: 32, offset: 64)
!7193 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !641, line: 151, baseType: !7194)
!7194 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !641, line: 149, size: 32, elements: !7195)
!7195 = !{!7196}
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7194, file: !641, line: 150, baseType: !156, size: 32)
!7197 = !{!7198, !7199, !7200, !7201}
!7198 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7183, file: !684, line: 276, type: !7186)
!7199 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7183, file: !684, line: 276, type: !1883)
!7200 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7183, file: !684, line: 277, type: !6587)
!7201 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7183, file: !684, line: 277, type: !6587)
!7202 = !DILocation(line: 0, scope: !7183)
!7203 = !DILocation(line: 279, column: 6, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7183, file: !684, line: 279, column: 6)
!7205 = !DILocation(line: 280, column: 57, scope: !7204)
!7206 = !DILocation(line: 279, column: 6, scope: !7183)
!7207 = !DILocation(line: 282, column: 3, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7209, file: !684, line: 282, column: 3)
!7209 = distinct !DILexicalBlock(scope: !7210, file: !684, line: 282, column: 3)
!7210 = distinct !DILexicalBlock(scope: !7211, file: !684, line: 282, column: 3)
!7211 = distinct !DILexicalBlock(scope: !7204, file: !684, line: 280, column: 69)
!7212 = !DILocation(line: 285, column: 1, scope: !7183)
!7213 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7214, file: !7214, line: 220, type: !7215, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7217)
!7214 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7215 = !DISubroutineType(types: !7216)
!7216 = !{!118, !7186, !1883, !6587, !6587}
!7217 = !{!7218, !7219, !7220, !7221, !7222}
!7218 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7213, file: !7214, line: 221, type: !7186)
!7219 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7213, file: !7214, line: 221, type: !1883)
!7220 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7213, file: !7214, line: 222, type: !6587)
!7221 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7213, file: !7214, line: 223, type: !6587)
!7222 = !DILocalVariable(name: "mpu_reg_index", scope: !7213, file: !7214, line: 225, type: !118)
!7223 = !DILocation(line: 0, scope: !7213)
!7224 = !DILocation(line: 225, column: 22, scope: !7213)
!7225 = !DILocation(line: 233, column: 18, scope: !7213)
!7226 = !DILocation(line: 236, column: 23, scope: !7213)
!7227 = !DILocation(line: 236, column: 21, scope: !7213)
!7228 = !DILocation(line: 238, column: 2, scope: !7213)
!7229 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !684, file: !684, line: 105, type: !7230, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7232)
!7230 = !DISubroutineType(types: !7231)
!7231 = !{!118, !7186, !143, !143, !146}
!7232 = !{!7233, !7234, !7235, !7236, !7237, !7238}
!7233 = !DILocalVariable(name: "regions", arg: 1, scope: !7229, file: !684, line: 106, type: !7186)
!7234 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7229, file: !684, line: 106, type: !143)
!7235 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7229, file: !684, line: 106, type: !143)
!7236 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7229, file: !684, line: 107, type: !146)
!7237 = !DILocalVariable(name: "i", scope: !7229, file: !684, line: 109, type: !118)
!7238 = !DILocalVariable(name: "reg_index", scope: !7229, file: !684, line: 110, type: !118)
!7239 = !DILocation(line: 0, scope: !7229)
!7240 = !DILocation(line: 110, column: 18, scope: !7229)
!7241 = !DILocation(line: 112, column: 16, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7243, file: !684, line: 112, column: 2)
!7243 = distinct !DILexicalBlock(scope: !7229, file: !684, line: 112, column: 2)
!7244 = !DILocation(line: 112, column: 2, scope: !7243)
!7245 = !DILocation(line: 113, column: 7, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7247, file: !684, line: 113, column: 7)
!7247 = distinct !DILexicalBlock(scope: !7242, file: !684, line: 112, column: 36)
!7248 = !DILocation(line: 113, column: 18, scope: !7246)
!7249 = !DILocation(line: 113, column: 23, scope: !7246)
!7250 = !DILocation(line: 113, column: 7, scope: !7247)
!7251 = !DILocation(line: 118, column: 23, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7247, file: !684, line: 118, column: 7)
!7253 = !DILocation(line: 119, column: 7, scope: !7252)
!7254 = !DILocation(line: 118, column: 7, scope: !7247)
!7255 = !DILocation(line: 124, column: 36, scope: !7247)
!7256 = !DILocation(line: 124, column: 15, scope: !7247)
!7257 = !DILocation(line: 126, column: 17, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7247, file: !684, line: 126, column: 7)
!7259 = !DILocation(line: 126, column: 7, scope: !7247)
!7260 = !DILocation(line: 131, column: 12, scope: !7247)
!7261 = !DILocation(line: 132, column: 2, scope: !7247)
!7262 = !DILocation(line: 112, column: 32, scope: !7242)
!7263 = distinct !{!7263, !7244, !7264}
!7264 = !DILocation(line: 132, column: 2, scope: !7243)
!7265 = !DILocation(line: 135, column: 1, scope: !7229)
!7266 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7214, file: !7214, line: 63, type: !7267, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7269)
!7267 = !DISubroutineType(types: !7268)
!7268 = !{!118, !7186}
!7269 = !{!7270, !7271}
!7270 = !DILocalVariable(name: "part", arg: 1, scope: !7266, file: !7214, line: 63, type: !7186)
!7271 = !DILocalVariable(name: "partition_is_valid", scope: !7266, file: !7214, line: 70, type: !118)
!7272 = !DILocation(line: 0, scope: !7266)
!7273 = !DILocation(line: 71, column: 11, scope: !7266)
!7274 = !DILocation(line: 71, column: 37, scope: !7266)
!7275 = !DILocation(line: 72, column: 3, scope: !7266)
!7276 = !DILocation(line: 71, column: 30, scope: !7266)
!7277 = !DILocation(line: 75, column: 11, scope: !7266)
!7278 = !DILocation(line: 75, column: 17, scope: !7266)
!7279 = !DILocation(line: 75, column: 38, scope: !7266)
!7280 = !DILocation(line: 77, column: 2, scope: !7266)
!7281 = distinct !DISubprogram(name: "mpu_configure_region", scope: !684, file: !684, line: 79, type: !7282, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7284)
!7282 = !DISubroutineType(types: !7283)
!7283 = !{!118, !1883, !7186}
!7284 = !{!7285, !7286, !7287}
!7285 = !DILocalVariable(name: "index", arg: 1, scope: !7281, file: !684, line: 79, type: !1883)
!7286 = !DILocalVariable(name: "new_region", arg: 2, scope: !7281, file: !684, line: 80, type: !7186)
!7287 = !DILocalVariable(name: "region_conf", scope: !7281, file: !684, line: 82, type: !673)
!7288 = !DILocation(line: 0, scope: !7281)
!7289 = !DILocation(line: 82, column: 2, scope: !7281)
!7290 = !DILocation(line: 82, column: 24, scope: !7281)
!7291 = !DILocation(line: 87, column: 33, scope: !7281)
!7292 = !DILocation(line: 87, column: 14, scope: !7281)
!7293 = !DILocation(line: 87, column: 19, scope: !7281)
!7294 = !DILocation(line: 91, column: 55, scope: !7281)
!7295 = !DILocation(line: 92, column: 16, scope: !7281)
!7296 = !DILocation(line: 92, column: 53, scope: !7281)
!7297 = !DILocation(line: 91, column: 2, scope: !7281)
!7298 = !DILocation(line: 95, column: 9, scope: !7281)
!7299 = !DILocation(line: 97, column: 1, scope: !7281)
!7300 = !DILocation(line: 95, column: 2, scope: !7281)
!7301 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7214, file: !7214, line: 113, type: !7302, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7307)
!7302 = !DISubroutineType(types: !7303)
!7303 = !{null, !7304, !7305, !156, !156}
!7304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!7305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7306, size: 32)
!7306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7193)
!7307 = !{!7308, !7309, !7310, !7311}
!7308 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7301, file: !7214, line: 114, type: !7304)
!7309 = !DILocalVariable(name: "attr", arg: 2, scope: !7301, file: !7214, line: 115, type: !7305)
!7310 = !DILocalVariable(name: "base", arg: 3, scope: !7301, file: !7214, line: 115, type: !156)
!7311 = !DILocalVariable(name: "size", arg: 4, scope: !7301, file: !7214, line: 115, type: !156)
!7312 = !DILocation(line: 0, scope: !7301)
!7313 = !DILocation(line: 127, column: 23, scope: !7301)
!7314 = !DILocation(line: 127, column: 35, scope: !7301)
!7315 = !DILocation(line: 127, column: 33, scope: !7301)
!7316 = !DILocation(line: 127, column: 10, scope: !7301)
!7317 = !DILocation(line: 127, column: 15, scope: !7301)
!7318 = !DILocation(line: 129, column: 1, scope: !7301)
!7319 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !684, file: !684, line: 57, type: !7320, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7322)
!7320 = !DISubroutineType(types: !7321)
!7321 = !{!118, !1883, !671}
!7322 = !{!7323, !7324}
!7323 = !DILocalVariable(name: "index", arg: 1, scope: !7319, file: !684, line: 57, type: !1883)
!7324 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7319, file: !684, line: 58, type: !671)
!7325 = !DILocation(line: 0, scope: !7319)
!7326 = !DILocation(line: 61, column: 6, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7319, file: !684, line: 61, column: 6)
!7328 = !DILocation(line: 61, column: 12, scope: !7327)
!7329 = !DILocation(line: 61, column: 6, scope: !7319)
!7330 = !DILocation(line: 71, column: 2, scope: !7319)
!7331 = !DILocation(line: 73, column: 2, scope: !7319)
!7332 = !DILocation(line: 74, column: 1, scope: !7319)
!7333 = distinct !DISubprogram(name: "region_init", scope: !7214, file: !7214, line: 29, type: !7334, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7336)
!7334 = !DISubroutineType(types: !7335)
!7335 = !{null, !6587, !671}
!7336 = !{!7337, !7338}
!7337 = !DILocalVariable(name: "index", arg: 1, scope: !7333, file: !7214, line: 29, type: !6587)
!7338 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7333, file: !7214, line: 30, type: !671)
!7339 = !DILocation(line: 0, scope: !7333)
!7340 = !DILocation(line: 33, column: 2, scope: !7333)
!7341 = !DILocation(line: 47, column: 28, scope: !7333)
!7342 = !DILocation(line: 47, column: 33, scope: !7333)
!7343 = !DILocation(line: 48, column: 26, scope: !7333)
!7344 = !DILocation(line: 47, column: 12, scope: !7333)
!7345 = !DILocation(line: 49, column: 32, scope: !7333)
!7346 = !DILocation(line: 49, column: 37, scope: !7333)
!7347 = !DILocation(line: 49, column: 12, scope: !7333)
!7348 = !DILocation(line: 53, column: 1, scope: !7333)
!7349 = distinct !DISubprogram(name: "set_region_number", scope: !7350, file: !7350, line: 32, type: !6408, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7351)
!7350 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7351 = !{!7352}
!7352 = !DILocalVariable(name: "index", arg: 1, scope: !7349, file: !7350, line: 32, type: !156)
!7353 = !DILocation(line: 0, scope: !7349)
!7354 = !DILocation(line: 34, column: 11, scope: !7349)
!7355 = !DILocation(line: 35, column: 1, scope: !7349)
!7356 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7214, file: !7214, line: 88, type: !7357, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7359)
!7357 = !DISubroutineType(types: !7358)
!7358 = !{!156, !156}
!7359 = !{!7360}
!7360 = !DILocalVariable(name: "size", arg: 1, scope: !7356, file: !7214, line: 88, type: !156)
!7361 = !DILocation(line: 0, scope: !7356)
!7362 = !DILocation(line: 91, column: 11, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7356, file: !7214, line: 91, column: 6)
!7364 = !DILocation(line: 91, column: 6, scope: !7356)
!7365 = !DILocation(line: 100, column: 11, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7356, file: !7214, line: 100, column: 6)
!7367 = !DILocation(line: 100, column: 6, scope: !7356)
!7368 = !DILocation(line: 104, column: 35, scope: !7356)
!7369 = !DILocation(line: 104, column: 16, scope: !7356)
!7370 = !DILocation(line: 104, column: 50, scope: !7356)
!7371 = !DILocation(line: 104, column: 72, scope: !7356)
!7372 = !DILocation(line: 104, column: 2, scope: !7356)
!7373 = !DILocation(line: 106, column: 1, scope: !7356)
!7374 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !684, file: !684, line: 307, type: !7375, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7377)
!7375 = !DISubroutineType(types: !7376)
!7376 = !{null, !7186, !143}
!7377 = !{!7378, !7379}
!7378 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7374, file: !684, line: 308, type: !7186)
!7379 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7374, file: !684, line: 308, type: !143)
!7380 = !DILocation(line: 0, scope: !7374)
!7381 = !DILocation(line: 310, column: 6, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7374, file: !684, line: 310, column: 6)
!7383 = !DILocation(line: 311, column: 3, scope: !7382)
!7384 = !DILocation(line: 310, column: 6, scope: !7374)
!7385 = !DILocation(line: 313, column: 3, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7387, file: !684, line: 313, column: 3)
!7387 = distinct !DILexicalBlock(scope: !7388, file: !684, line: 313, column: 3)
!7388 = distinct !DILexicalBlock(scope: !7389, file: !684, line: 313, column: 3)
!7389 = distinct !DILexicalBlock(scope: !7382, file: !684, line: 311, column: 15)
!7390 = !DILocation(line: 316, column: 1, scope: !7374)
!7391 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7214, file: !7214, line: 249, type: !7392, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7394)
!7392 = !DISubroutineType(types: !7393)
!7393 = !{!118, !7186, !143}
!7394 = !{!7395, !7396, !7397, !7398}
!7395 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7391, file: !7214, line: 250, type: !7186)
!7396 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7391, file: !7214, line: 250, type: !143)
!7397 = !DILocalVariable(name: "mpu_reg_index", scope: !7391, file: !7214, line: 252, type: !118)
!7398 = !DILocalVariable(name: "i", scope: !7399, file: !7214, line: 264, type: !118)
!7399 = distinct !DILexicalBlock(scope: !7400, file: !7214, line: 264, column: 3)
!7400 = distinct !DILexicalBlock(scope: !7401, file: !7214, line: 261, column: 32)
!7401 = distinct !DILexicalBlock(scope: !7391, file: !7214, line: 261, column: 6)
!7402 = !DILocation(line: 0, scope: !7391)
!7403 = !DILocation(line: 252, column: 22, scope: !7391)
!7404 = !DILocation(line: 258, column: 18, scope: !7391)
!7405 = !DILocation(line: 261, column: 20, scope: !7401)
!7406 = !DILocation(line: 261, column: 6, scope: !7391)
!7407 = !DILocation(line: 0, scope: !7399)
!7408 = !DILocation(line: 265, column: 4, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7410, file: !7214, line: 264, column: 59)
!7410 = distinct !DILexicalBlock(scope: !7399, file: !7214, line: 264, column: 3)
!7411 = !DILocation(line: 264, column: 55, scope: !7410)
!7412 = !DILocation(line: 264, column: 33, scope: !7410)
!7413 = !DILocation(line: 264, column: 3, scope: !7399)
!7414 = distinct !{!7414, !7413, !7415}
!7415 = !DILocation(line: 266, column: 3, scope: !7399)
!7416 = !DILocation(line: 269, column: 2, scope: !7391)
!7417 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7418, file: !7418, line: 218, type: !6408, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7419)
!7418 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7419 = !{!7420}
!7420 = !DILocalVariable(name: "rnr", arg: 1, scope: !7417, file: !7418, line: 218, type: !156)
!7421 = !DILocation(line: 0, scope: !7417)
!7422 = !DILocation(line: 220, column: 12, scope: !7417)
!7423 = !DILocation(line: 221, column: 13, scope: !7417)
!7424 = !DILocation(line: 222, column: 1, scope: !7417)
!7425 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !684, file: !684, line: 326, type: !7426, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7428)
!7426 = !DISubroutineType(types: !7427)
!7427 = !{!118}
!7428 = !{!7429}
!7429 = !DILocalVariable(name: "r_index", scope: !7425, file: !684, line: 328, type: !156)
!7430 = !DILocation(line: 330, column: 17, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7425, file: !684, line: 330, column: 6)
!7432 = !DILocation(line: 330, column: 29, scope: !7431)
!7433 = !DILocation(line: 330, column: 6, scope: !7425)
!7434 = !DILocation(line: 337, column: 3, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7436, file: !684, line: 337, column: 3)
!7436 = distinct !DILexicalBlock(scope: !7437, file: !684, line: 337, column: 3)
!7437 = distinct !DILexicalBlock(scope: !7438, file: !684, line: 337, column: 3)
!7438 = distinct !DILexicalBlock(scope: !7431, file: !684, line: 330, column: 50)
!7439 = !DILocation(line: 347, column: 2, scope: !7425)
!7440 = !DILocation(line: 0, scope: !7425)
!7441 = !DILocation(line: 364, column: 29, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7443, file: !684, line: 364, column: 2)
!7443 = distinct !DILexicalBlock(scope: !7425, file: !684, line: 364, column: 2)
!7444 = !DILocation(line: 364, column: 2, scope: !7443)
!7445 = !DILocation(line: 365, column: 25, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7442, file: !684, line: 364, column: 66)
!7447 = !DILocation(line: 365, column: 3, scope: !7446)
!7448 = !DILocation(line: 364, column: 62, scope: !7442)
!7449 = distinct !{!7449, !7444, !7450}
!7450 = !DILocation(line: 366, column: 2, scope: !7443)
!7451 = !DILocation(line: 369, column: 23, scope: !7425)
!7452 = !DILocation(line: 369, column: 21, scope: !7425)
!7453 = !DILocation(line: 372, column: 2, scope: !7425)
!7454 = !DILocation(line: 433, column: 2, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7456, file: !684, line: 433, column: 2)
!7456 = distinct !DILexicalBlock(scope: !7425, file: !684, line: 433, column: 2)
!7457 = !DILocation(line: 433, column: 2, scope: !7456)
!7458 = !DILocation(line: 433, column: 2, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7455, file: !684, line: 433, column: 2)
!7460 = !DILocation(line: 444, column: 1, scope: !7425)
!7461 = distinct !DISubprogram(name: "strcpy", scope: !7462, file: !7462, line: 20, type: !7463, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !7467)
!7462 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7463 = !DISubroutineType(types: !7464)
!7464 = !{!1239, !7465, !7466}
!7465 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1239)
!7466 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !133)
!7467 = !{!7468, !7469, !7470}
!7468 = !DILocalVariable(name: "d", arg: 1, scope: !7461, file: !7462, line: 20, type: !7465)
!7469 = !DILocalVariable(name: "s", arg: 2, scope: !7461, file: !7462, line: 20, type: !7466)
!7470 = !DILocalVariable(name: "dest", scope: !7461, file: !7462, line: 22, type: !1239)
!7471 = !DILocation(line: 0, scope: !7461)
!7472 = !DILocation(line: 24, column: 9, scope: !7461)
!7473 = !DILocation(line: 24, column: 12, scope: !7461)
!7474 = !DILocation(line: 24, column: 2, scope: !7461)
!7475 = !DILocation(line: 25, column: 6, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7461, file: !7462, line: 24, column: 21)
!7477 = !DILocation(line: 26, column: 4, scope: !7476)
!7478 = !DILocation(line: 27, column: 4, scope: !7476)
!7479 = distinct !{!7479, !7474, !7480}
!7480 = !DILocation(line: 28, column: 2, scope: !7461)
!7481 = !DILocation(line: 30, column: 5, scope: !7461)
!7482 = !DILocation(line: 32, column: 2, scope: !7461)
!7483 = distinct !DISubprogram(name: "strncpy", scope: !7462, file: !7462, line: 42, type: !7484, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !7486)
!7484 = !DISubroutineType(types: !7485)
!7485 = !{!1239, !7465, !7466, !315}
!7486 = !{!7487, !7488, !7489, !7490}
!7487 = !DILocalVariable(name: "d", arg: 1, scope: !7483, file: !7462, line: 42, type: !7465)
!7488 = !DILocalVariable(name: "s", arg: 2, scope: !7483, file: !7462, line: 42, type: !7466)
!7489 = !DILocalVariable(name: "n", arg: 3, scope: !7483, file: !7462, line: 42, type: !315)
!7490 = !DILocalVariable(name: "dest", scope: !7483, file: !7462, line: 44, type: !1239)
!7491 = !DILocation(line: 0, scope: !7483)
!7492 = !DILocation(line: 46, column: 12, scope: !7483)
!7493 = !DILocation(line: 46, column: 17, scope: !7483)
!7494 = !DILocation(line: 46, column: 20, scope: !7483)
!7495 = !DILocation(line: 46, column: 23, scope: !7483)
!7496 = !DILocation(line: 46, column: 2, scope: !7483)
!7497 = !DILocation(line: 47, column: 6, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7483, file: !7462, line: 46, column: 32)
!7499 = !DILocation(line: 48, column: 4, scope: !7498)
!7500 = !DILocation(line: 49, column: 4, scope: !7498)
!7501 = !DILocation(line: 50, column: 4, scope: !7498)
!7502 = distinct !{!7502, !7496, !7503}
!7503 = !DILocation(line: 51, column: 2, scope: !7483)
!7504 = !DILocation(line: 54, column: 6, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7483, file: !7462, line: 53, column: 16)
!7506 = !DILocation(line: 55, column: 4, scope: !7505)
!7507 = !DILocation(line: 56, column: 4, scope: !7505)
!7508 = !DILocation(line: 53, column: 11, scope: !7483)
!7509 = !DILocation(line: 53, column: 2, scope: !7483)
!7510 = distinct !{!7510, !7509, !7511}
!7511 = !DILocation(line: 57, column: 2, scope: !7483)
!7512 = !DILocation(line: 59, column: 2, scope: !7483)
!7513 = distinct !DISubprogram(name: "strchr", scope: !7462, file: !7462, line: 69, type: !7514, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !7516)
!7514 = !DISubroutineType(types: !7515)
!7515 = !{!1239, !133, !118}
!7516 = !{!7517, !7518, !7519}
!7517 = !DILocalVariable(name: "s", arg: 1, scope: !7513, file: !7462, line: 69, type: !133)
!7518 = !DILocalVariable(name: "c", arg: 2, scope: !7513, file: !7462, line: 69, type: !118)
!7519 = !DILocalVariable(name: "tmp", scope: !7513, file: !7462, line: 71, type: !135)
!7520 = !DILocation(line: 0, scope: !7513)
!7521 = !DILocation(line: 73, column: 2, scope: !7513)
!7522 = !DILocation(line: 73, column: 10, scope: !7513)
!7523 = !DILocation(line: 73, column: 13, scope: !7513)
!7524 = !DILocation(line: 73, column: 21, scope: !7513)
!7525 = !DILocation(line: 74, column: 4, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7513, file: !7462, line: 73, column: 38)
!7527 = distinct !{!7527, !7521, !7528}
!7528 = !DILocation(line: 75, column: 2, scope: !7513)
!7529 = !DILocation(line: 77, column: 9, scope: !7513)
!7530 = !DILocation(line: 77, column: 2, scope: !7513)
!7531 = distinct !DISubprogram(name: "strrchr", scope: !7462, file: !7462, line: 87, type: !7514, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !7532)
!7532 = !{!7533, !7534, !7535}
!7533 = !DILocalVariable(name: "s", arg: 1, scope: !7531, file: !7462, line: 87, type: !133)
!7534 = !DILocalVariable(name: "c", arg: 2, scope: !7531, file: !7462, line: 87, type: !118)
!7535 = !DILocalVariable(name: "match", scope: !7531, file: !7462, line: 89, type: !1239)
!7536 = !DILocation(line: 0, scope: !7531)
!7537 = !DILocation(line: 91, column: 2, scope: !7531)
!7538 = !DILocation(line: 92, column: 7, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7540, file: !7462, line: 92, column: 7)
!7540 = distinct !DILexicalBlock(scope: !7531, file: !7462, line: 91, column: 5)
!7541 = !DILocation(line: 92, column: 10, scope: !7539)
!7542 = !DILocation(line: 92, column: 7, scope: !7540)
!7543 = !DILocation(line: 95, column: 13, scope: !7531)
!7544 = !DILocation(line: 95, column: 2, scope: !7540)
!7545 = distinct !{!7545, !7537, !7546}
!7546 = !DILocation(line: 95, column: 15, scope: !7531)
!7547 = !DILocation(line: 97, column: 2, scope: !7531)
!7548 = distinct !DISubprogram(name: "strlen", scope: !7462, file: !7462, line: 107, type: !7549, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !7551)
!7549 = !DISubroutineType(types: !7550)
!7550 = !{!315, !133}
!7551 = !{!7552, !7553}
!7552 = !DILocalVariable(name: "s", arg: 1, scope: !7548, file: !7462, line: 107, type: !133)
!7553 = !DILocalVariable(name: "n", scope: !7548, file: !7462, line: 109, type: !315)
!7554 = !DILocation(line: 0, scope: !7548)
!7555 = !DILocation(line: 111, column: 9, scope: !7548)
!7556 = !DILocation(line: 111, column: 12, scope: !7548)
!7557 = !DILocation(line: 111, column: 2, scope: !7548)
!7558 = !DILocation(line: 112, column: 4, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7548, file: !7462, line: 111, column: 21)
!7560 = !DILocation(line: 113, column: 4, scope: !7559)
!7561 = distinct !{!7561, !7557, !7562}
!7562 = !DILocation(line: 114, column: 2, scope: !7548)
!7563 = !DILocation(line: 116, column: 2, scope: !7548)
!7564 = distinct !DISubprogram(name: "strnlen", scope: !7462, file: !7462, line: 126, type: !7565, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !7567)
!7565 = !DISubroutineType(types: !7566)
!7566 = !{!315, !133, !315}
!7567 = !{!7568, !7569, !7570}
!7568 = !DILocalVariable(name: "s", arg: 1, scope: !7564, file: !7462, line: 126, type: !133)
!7569 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7564, file: !7462, line: 126, type: !315)
!7570 = !DILocalVariable(name: "n", scope: !7564, file: !7462, line: 128, type: !315)
!7571 = !DILocation(line: 0, scope: !7564)
!7572 = !DILocation(line: 130, column: 9, scope: !7564)
!7573 = !DILocation(line: 130, column: 12, scope: !7564)
!7574 = !DILocation(line: 130, column: 20, scope: !7564)
!7575 = !DILocation(line: 130, column: 2, scope: !7564)
!7576 = !DILocation(line: 131, column: 4, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7564, file: !7462, line: 130, column: 35)
!7578 = !DILocation(line: 132, column: 4, scope: !7577)
!7579 = distinct !{!7579, !7575, !7580}
!7580 = !DILocation(line: 133, column: 2, scope: !7564)
!7581 = !DILocation(line: 135, column: 2, scope: !7564)
!7582 = distinct !DISubprogram(name: "strcmp", scope: !7462, file: !7462, line: 145, type: !7583, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !7585)
!7583 = !DISubroutineType(types: !7584)
!7584 = !{!118, !133, !133}
!7585 = !{!7586, !7587}
!7586 = !DILocalVariable(name: "s1", arg: 1, scope: !7582, file: !7462, line: 145, type: !133)
!7587 = !DILocalVariable(name: "s2", arg: 2, scope: !7582, file: !7462, line: 145, type: !133)
!7588 = !DILocation(line: 0, scope: !7582)
!7589 = !DILocation(line: 147, column: 10, scope: !7582)
!7590 = !DILocation(line: 147, column: 17, scope: !7582)
!7591 = !DILocation(line: 147, column: 14, scope: !7582)
!7592 = !DILocation(line: 147, column: 22, scope: !7582)
!7593 = !DILocation(line: 148, column: 5, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7582, file: !7462, line: 147, column: 40)
!7595 = !DILocation(line: 149, column: 5, scope: !7594)
!7596 = distinct !{!7596, !7597, !7598}
!7597 = !DILocation(line: 147, column: 2, scope: !7582)
!7598 = !DILocation(line: 150, column: 2, scope: !7582)
!7599 = !DILocation(line: 152, column: 9, scope: !7582)
!7600 = !DILocation(line: 152, column: 15, scope: !7582)
!7601 = !DILocation(line: 152, column: 13, scope: !7582)
!7602 = !DILocation(line: 152, column: 2, scope: !7582)
!7603 = distinct !DISubprogram(name: "strncmp", scope: !7462, file: !7462, line: 162, type: !7604, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !7606)
!7604 = !DISubroutineType(types: !7605)
!7605 = !{!118, !133, !133, !315}
!7606 = !{!7607, !7608, !7609}
!7607 = !DILocalVariable(name: "s1", arg: 1, scope: !7603, file: !7462, line: 162, type: !133)
!7608 = !DILocalVariable(name: "s2", arg: 2, scope: !7603, file: !7462, line: 162, type: !133)
!7609 = !DILocalVariable(name: "n", arg: 3, scope: !7603, file: !7462, line: 162, type: !315)
!7610 = !DILocation(line: 0, scope: !7603)
!7611 = !DILocation(line: 164, column: 17, scope: !7603)
!7612 = !DILocation(line: 164, column: 21, scope: !7603)
!7613 = !DILocation(line: 164, column: 28, scope: !7603)
!7614 = !DILocation(line: 164, column: 25, scope: !7603)
!7615 = !DILocation(line: 164, column: 33, scope: !7603)
!7616 = !DILocation(line: 165, column: 5, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7603, file: !7462, line: 164, column: 51)
!7618 = !DILocation(line: 166, column: 5, scope: !7617)
!7619 = !DILocation(line: 167, column: 4, scope: !7617)
!7620 = distinct !{!7620, !7621, !7622}
!7621 = !DILocation(line: 164, column: 2, scope: !7603)
!7622 = !DILocation(line: 168, column: 2, scope: !7603)
!7623 = !DILocation(line: 170, column: 25, scope: !7603)
!7624 = !DILocation(line: 170, column: 31, scope: !7603)
!7625 = !DILocation(line: 170, column: 29, scope: !7603)
!7626 = !DILocation(line: 170, column: 9, scope: !7603)
!7627 = !DILocation(line: 170, column: 2, scope: !7603)
!7628 = distinct !DISubprogram(name: "strtok_r", scope: !7462, file: !7462, line: 180, type: !7629, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !7632)
!7629 = !DISubroutineType(types: !7630)
!7630 = !{!1239, !1239, !133, !7631}
!7631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 32)
!7632 = !{!7633, !7634, !7635, !7636, !7637}
!7633 = !DILocalVariable(name: "str", arg: 1, scope: !7628, file: !7462, line: 180, type: !1239)
!7634 = !DILocalVariable(name: "sep", arg: 2, scope: !7628, file: !7462, line: 180, type: !133)
!7635 = !DILocalVariable(name: "state", arg: 3, scope: !7628, file: !7462, line: 180, type: !7631)
!7636 = !DILocalVariable(name: "start", scope: !7628, file: !7462, line: 182, type: !1239)
!7637 = !DILocalVariable(name: "end", scope: !7628, file: !7462, line: 182, type: !1239)
!7638 = !DILocation(line: 0, scope: !7628)
!7639 = !DILocation(line: 184, column: 10, scope: !7628)
!7640 = !DILocation(line: 184, column: 22, scope: !7628)
!7641 = !DILocation(line: 187, column: 9, scope: !7628)
!7642 = !DILocation(line: 187, column: 16, scope: !7628)
!7643 = !DILocation(line: 187, column: 19, scope: !7628)
!7644 = !DILocation(line: 187, column: 2, scope: !7628)
!7645 = !DILocation(line: 188, column: 8, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7628, file: !7462, line: 187, column: 40)
!7647 = distinct !{!7647, !7644, !7648}
!7648 = !DILocation(line: 189, column: 2, scope: !7628)
!7649 = !DILocation(line: 198, column: 9, scope: !7628)
!7650 = !DILocation(line: 198, column: 18, scope: !7628)
!7651 = !DILocation(line: 198, column: 17, scope: !7628)
!7652 = !DILocation(line: 198, column: 2, scope: !7628)
!7653 = !DILocation(line: 199, column: 6, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7628, file: !7462, line: 198, column: 37)
!7655 = !DILocation(line: 198, column: 14, scope: !7628)
!7656 = distinct !{!7656, !7652, !7657}
!7657 = !DILocation(line: 200, column: 2, scope: !7628)
!7658 = !DILocation(line: 203, column: 8, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7660, file: !7462, line: 202, column: 20)
!7660 = distinct !DILexicalBlock(scope: !7628, file: !7462, line: 202, column: 6)
!7661 = !DILocation(line: 204, column: 16, scope: !7659)
!7662 = !DILocation(line: 205, column: 2, scope: !7659)
!7663 = !DILocation(line: 210, column: 1, scope: !7628)
!7664 = distinct !DISubprogram(name: "strcat", scope: !7462, file: !7462, line: 212, type: !7463, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !7665)
!7665 = !{!7666, !7667}
!7666 = !DILocalVariable(name: "dest", arg: 1, scope: !7664, file: !7462, line: 212, type: !7465)
!7667 = !DILocalVariable(name: "src", arg: 2, scope: !7664, file: !7462, line: 212, type: !7466)
!7668 = !DILocation(line: 0, scope: !7664)
!7669 = !DILocation(line: 214, column: 16, scope: !7664)
!7670 = !DILocation(line: 214, column: 14, scope: !7664)
!7671 = !DILocation(line: 214, column: 2, scope: !7664)
!7672 = !DILocation(line: 215, column: 2, scope: !7664)
!7673 = distinct !DISubprogram(name: "strncat", scope: !7462, file: !7462, line: 218, type: !7484, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !7674)
!7674 = !{!7675, !7676, !7677, !7678, !7679}
!7675 = !DILocalVariable(name: "dest", arg: 1, scope: !7673, file: !7462, line: 218, type: !7465)
!7676 = !DILocalVariable(name: "src", arg: 2, scope: !7673, file: !7462, line: 218, type: !7466)
!7677 = !DILocalVariable(name: "n", arg: 3, scope: !7673, file: !7462, line: 219, type: !315)
!7678 = !DILocalVariable(name: "orig_dest", scope: !7673, file: !7462, line: 221, type: !1239)
!7679 = !DILocalVariable(name: "len", scope: !7673, file: !7462, line: 222, type: !315)
!7680 = !DILocation(line: 0, scope: !7673)
!7681 = !DILocation(line: 222, column: 15, scope: !7673)
!7682 = !DILocation(line: 224, column: 7, scope: !7673)
!7683 = !DILocation(line: 225, column: 14, scope: !7673)
!7684 = !DILocation(line: 225, column: 19, scope: !7673)
!7685 = !DILocation(line: 225, column: 11, scope: !7673)
!7686 = !DILocation(line: 225, column: 23, scope: !7673)
!7687 = !DILocation(line: 225, column: 28, scope: !7673)
!7688 = !DILocation(line: 225, column: 2, scope: !7673)
!7689 = !DILocation(line: 226, column: 17, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7673, file: !7462, line: 225, column: 38)
!7691 = !DILocation(line: 226, column: 8, scope: !7690)
!7692 = !DILocation(line: 226, column: 11, scope: !7690)
!7693 = distinct !{!7693, !7688, !7694}
!7694 = !DILocation(line: 227, column: 2, scope: !7673)
!7695 = !DILocation(line: 228, column: 8, scope: !7673)
!7696 = !DILocation(line: 230, column: 2, scope: !7673)
!7697 = distinct !DISubprogram(name: "memcmp", scope: !7462, file: !7462, line: 239, type: !7698, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !7700)
!7698 = !DISubroutineType(types: !7699)
!7699 = !{!118, !13, !13, !315}
!7700 = !{!7701, !7702, !7703, !7704, !7705}
!7701 = !DILocalVariable(name: "m1", arg: 1, scope: !7697, file: !7462, line: 239, type: !13)
!7702 = !DILocalVariable(name: "m2", arg: 2, scope: !7697, file: !7462, line: 239, type: !13)
!7703 = !DILocalVariable(name: "n", arg: 3, scope: !7697, file: !7462, line: 239, type: !315)
!7704 = !DILocalVariable(name: "c1", scope: !7697, file: !7462, line: 241, type: !133)
!7705 = !DILocalVariable(name: "c2", scope: !7697, file: !7462, line: 242, type: !133)
!7706 = !DILocation(line: 0, scope: !7697)
!7707 = !DILocation(line: 244, column: 7, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7697, file: !7462, line: 244, column: 6)
!7709 = !DILocation(line: 244, column: 6, scope: !7697)
!7710 = !DILocation(line: 248, column: 10, scope: !7697)
!7711 = !DILocation(line: 248, column: 14, scope: !7697)
!7712 = !DILocation(line: 248, column: 19, scope: !7697)
!7713 = !DILocation(line: 248, column: 2, scope: !7697)
!7714 = !DILocation(line: 248, column: 23, scope: !7697)
!7715 = !DILocation(line: 248, column: 30, scope: !7697)
!7716 = !DILocation(line: 248, column: 27, scope: !7697)
!7717 = !DILocation(line: 249, column: 5, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7697, file: !7462, line: 248, column: 36)
!7719 = !DILocation(line: 250, column: 5, scope: !7718)
!7720 = distinct !{!7720, !7713, !7721}
!7721 = !DILocation(line: 251, column: 2, scope: !7697)
!7722 = !DILocation(line: 253, column: 9, scope: !7697)
!7723 = !DILocation(line: 253, column: 15, scope: !7697)
!7724 = !DILocation(line: 253, column: 13, scope: !7697)
!7725 = !DILocation(line: 253, column: 2, scope: !7697)
!7726 = !DILocation(line: 254, column: 1, scope: !7697)
!7727 = distinct !DISubprogram(name: "memmove", scope: !7462, file: !7462, line: 263, type: !7728, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !7730)
!7728 = !DISubroutineType(types: !7729)
!7729 = !{!117, !117, !13, !315}
!7730 = !{!7731, !7732, !7733, !7734, !7735}
!7731 = !DILocalVariable(name: "d", arg: 1, scope: !7727, file: !7462, line: 263, type: !117)
!7732 = !DILocalVariable(name: "s", arg: 2, scope: !7727, file: !7462, line: 263, type: !13)
!7733 = !DILocalVariable(name: "n", arg: 3, scope: !7727, file: !7462, line: 263, type: !315)
!7734 = !DILocalVariable(name: "dest", scope: !7727, file: !7462, line: 265, type: !1239)
!7735 = !DILocalVariable(name: "src", scope: !7727, file: !7462, line: 266, type: !133)
!7736 = !DILocation(line: 0, scope: !7727)
!7737 = !DILocation(line: 268, column: 21, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7727, file: !7462, line: 268, column: 6)
!7739 = !DILocation(line: 268, column: 28, scope: !7738)
!7740 = !DILocation(line: 268, column: 6, scope: !7727)
!7741 = !DILocation(line: 280, column: 12, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7738, file: !7462, line: 278, column: 9)
!7743 = !DILocation(line: 280, column: 3, scope: !7742)
!7744 = !DILocation(line: 275, column: 5, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7746, file: !7462, line: 274, column: 17)
!7746 = distinct !DILexicalBlock(scope: !7738, file: !7462, line: 268, column: 33)
!7747 = !DILocation(line: 276, column: 14, scope: !7745)
!7748 = !DILocation(line: 276, column: 4, scope: !7745)
!7749 = !DILocation(line: 276, column: 12, scope: !7745)
!7750 = !DILocation(line: 274, column: 12, scope: !7746)
!7751 = !DILocation(line: 274, column: 3, scope: !7746)
!7752 = distinct !{!7752, !7751, !7753}
!7753 = !DILocation(line: 277, column: 3, scope: !7746)
!7754 = !DILocation(line: 281, column: 12, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7742, file: !7462, line: 280, column: 17)
!7756 = !DILocation(line: 281, column: 10, scope: !7755)
!7757 = !DILocation(line: 282, column: 8, scope: !7755)
!7758 = !DILocation(line: 283, column: 7, scope: !7755)
!7759 = !DILocation(line: 284, column: 5, scope: !7755)
!7760 = distinct !{!7760, !7743, !7761}
!7761 = !DILocation(line: 285, column: 3, scope: !7742)
!7762 = !DILocation(line: 288, column: 2, scope: !7727)
!7763 = distinct !DISubprogram(name: "memcpy", scope: !7462, file: !7462, line: 298, type: !7764, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !7768)
!7764 = !DISubroutineType(types: !7765)
!7765 = !{!117, !7766, !7767, !315}
!7766 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !117)
!7767 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7768 = !{!7769, !7770, !7771, !7772, !7773}
!7769 = !DILocalVariable(name: "d", arg: 1, scope: !7763, file: !7462, line: 298, type: !7766)
!7770 = !DILocalVariable(name: "s", arg: 2, scope: !7763, file: !7462, line: 298, type: !7767)
!7771 = !DILocalVariable(name: "n", arg: 3, scope: !7763, file: !7462, line: 298, type: !315)
!7772 = !DILocalVariable(name: "d_byte", scope: !7763, file: !7462, line: 302, type: !1091)
!7773 = !DILocalVariable(name: "s_byte", scope: !7763, file: !7462, line: 303, type: !2898)
!7774 = !DILocation(line: 0, scope: !7763)
!7775 = !DILocation(line: 337, column: 11, scope: !7763)
!7776 = !DILocation(line: 337, column: 2, scope: !7763)
!7777 = !DILocation(line: 338, column: 25, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7763, file: !7462, line: 337, column: 16)
!7779 = !DILocation(line: 338, column: 17, scope: !7778)
!7780 = !DILocation(line: 338, column: 11, scope: !7778)
!7781 = !DILocation(line: 338, column: 15, scope: !7778)
!7782 = !DILocation(line: 339, column: 4, scope: !7778)
!7783 = distinct !{!7783, !7776, !7784}
!7784 = !DILocation(line: 340, column: 2, scope: !7763)
!7785 = !DILocation(line: 342, column: 2, scope: !7763)
!7786 = distinct !DISubprogram(name: "memset", scope: !7462, file: !7462, line: 352, type: !7787, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !7789)
!7787 = !DISubroutineType(types: !7788)
!7788 = !{!117, !117, !118, !315}
!7789 = !{!7790, !7791, !7792, !7793, !7794}
!7790 = !DILocalVariable(name: "buf", arg: 1, scope: !7786, file: !7462, line: 352, type: !117)
!7791 = !DILocalVariable(name: "c", arg: 2, scope: !7786, file: !7462, line: 352, type: !118)
!7792 = !DILocalVariable(name: "n", arg: 3, scope: !7786, file: !7462, line: 352, type: !315)
!7793 = !DILocalVariable(name: "d_byte", scope: !7786, file: !7462, line: 356, type: !1091)
!7794 = !DILocalVariable(name: "c_byte", scope: !7786, file: !7462, line: 357, type: !144)
!7795 = !DILocation(line: 0, scope: !7786)
!7796 = !DILocation(line: 357, column: 25, scope: !7786)
!7797 = !DILocation(line: 389, column: 11, scope: !7786)
!7798 = !DILocation(line: 389, column: 2, scope: !7786)
!7799 = !DILocation(line: 390, column: 11, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7786, file: !7462, line: 389, column: 16)
!7801 = !DILocation(line: 390, column: 15, scope: !7800)
!7802 = !DILocation(line: 391, column: 4, scope: !7800)
!7803 = distinct !{!7803, !7798, !7804}
!7804 = !DILocation(line: 392, column: 2, scope: !7786)
!7805 = !DILocation(line: 394, column: 2, scope: !7786)
!7806 = distinct !DISubprogram(name: "memchr", scope: !7462, file: !7462, line: 404, type: !7807, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !7809)
!7807 = !DISubroutineType(types: !7808)
!7808 = !{!117, !13, !118, !315}
!7809 = !{!7810, !7811, !7812, !7813}
!7810 = !DILocalVariable(name: "s", arg: 1, scope: !7806, file: !7462, line: 404, type: !13)
!7811 = !DILocalVariable(name: "c", arg: 2, scope: !7806, file: !7462, line: 404, type: !118)
!7812 = !DILocalVariable(name: "n", arg: 3, scope: !7806, file: !7462, line: 404, type: !315)
!7813 = !DILocalVariable(name: "p", scope: !7814, file: !7462, line: 407, type: !2898)
!7814 = distinct !DILexicalBlock(scope: !7815, file: !7462, line: 406, column: 14)
!7815 = distinct !DILexicalBlock(scope: !7806, file: !7462, line: 406, column: 6)
!7816 = !DILocation(line: 0, scope: !7806)
!7817 = !DILocation(line: 406, column: 8, scope: !7815)
!7818 = !DILocation(line: 406, column: 6, scope: !7806)
!7819 = !DILocation(line: 409, column: 3, scope: !7814)
!7820 = !DILocation(line: 0, scope: !7814)
!7821 = !DILocation(line: 410, column: 8, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7823, file: !7462, line: 410, column: 8)
!7823 = distinct !DILexicalBlock(scope: !7814, file: !7462, line: 409, column: 6)
!7824 = !DILocation(line: 410, column: 13, scope: !7822)
!7825 = !DILocation(line: 410, column: 8, scope: !7823)
!7826 = distinct !{!7826, !7819, !7827}
!7827 = !DILocation(line: 414, column: 20, scope: !7814)
!7828 = !DILocation(line: 417, column: 2, scope: !7806)
!7829 = !DILocation(line: 418, column: 1, scope: !7806)
!7830 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !694, file: !694, line: 23, type: !3655, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7831)
!7831 = !{!7832}
!7832 = !DILocalVariable(name: "hook", arg: 1, scope: !7830, file: !694, line: 23, type: !438)
!7833 = !DILocation(line: 0, scope: !7830)
!7834 = !DILocation(line: 25, column: 15, scope: !7830)
!7835 = !DILocation(line: 26, column: 1, scope: !7830)
!7836 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !694, file: !694, line: 14, type: !439, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7837)
!7837 = !{!7838}
!7838 = !DILocalVariable(name: "c", arg: 1, scope: !7836, file: !694, line: 14, type: !118)
!7839 = !DILocation(line: 0, scope: !7836)
!7840 = !DILocation(line: 18, column: 2, scope: !7836)
!7841 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !694, file: !694, line: 28, type: !7842, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7844)
!7842 = !DISubroutineType(types: !7843)
!7843 = !{!118, !118, !690}
!7844 = !{!7845, !7846}
!7845 = !DILocalVariable(name: "c", arg: 1, scope: !7841, file: !694, line: 28, type: !118)
!7846 = !DILocalVariable(name: "stream", arg: 2, scope: !7841, file: !694, line: 28, type: !690)
!7847 = !DILocation(line: 0, scope: !7841)
!7848 = !DILocation(line: 30, column: 27, scope: !7841)
!7849 = !DILocation(line: 30, column: 50, scope: !7841)
!7850 = !DILocation(line: 30, column: 9, scope: !7841)
!7851 = !DILocation(line: 30, column: 2, scope: !7841)
!7852 = distinct !DISubprogram(name: "fputc", scope: !694, file: !694, line: 41, type: !7842, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7853)
!7853 = !{!7854, !7855}
!7854 = !DILocalVariable(name: "c", arg: 1, scope: !7852, file: !694, line: 41, type: !118)
!7855 = !DILocalVariable(name: "stream", arg: 2, scope: !7852, file: !694, line: 41, type: !690)
!7856 = !DILocation(line: 0, scope: !7852)
!7857 = !DILocation(line: 43, column: 9, scope: !7852)
!7858 = !DILocation(line: 43, column: 2, scope: !7852)
!7859 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7860, file: !7860, line: 72, type: !7842, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7861)
!7860 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!7861 = !{!7862, !7863}
!7862 = !DILocalVariable(name: "c", arg: 1, scope: !7859, file: !7860, line: 72, type: !118)
!7863 = !DILocalVariable(name: "stream", arg: 2, scope: !7859, file: !7860, line: 72, type: !690)
!7864 = !DILocation(line: 0, scope: !7859)
!7865 = !DILocation(line: 81, column: 2, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7859, file: !7860, line: 81, column: 2)
!7867 = !{i64 2154133553}
!7868 = !DILocation(line: 82, column: 9, scope: !7859)
!7869 = !DILocation(line: 82, column: 2, scope: !7859)
!7870 = distinct !DISubprogram(name: "fputs", scope: !694, file: !694, line: 46, type: !7871, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7874)
!7871 = !DISubroutineType(types: !7872)
!7872 = !{!118, !7466, !7873}
!7873 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !690)
!7874 = !{!7875, !7876, !7877, !7878}
!7875 = !DILocalVariable(name: "s", arg: 1, scope: !7870, file: !694, line: 46, type: !7466)
!7876 = !DILocalVariable(name: "stream", arg: 2, scope: !7870, file: !694, line: 46, type: !7873)
!7877 = !DILocalVariable(name: "len", scope: !7870, file: !694, line: 48, type: !118)
!7878 = !DILocalVariable(name: "ret", scope: !7870, file: !694, line: 49, type: !118)
!7879 = !DILocation(line: 0, scope: !7870)
!7880 = !DILocation(line: 48, column: 12, scope: !7870)
!7881 = !DILocation(line: 51, column: 8, scope: !7870)
!7882 = !DILocation(line: 53, column: 13, scope: !7870)
!7883 = !DILocation(line: 53, column: 9, scope: !7870)
!7884 = !DILocation(line: 53, column: 2, scope: !7870)
!7885 = distinct !DISubprogram(name: "fwrite", scope: !694, file: !694, line: 99, type: !7886, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7888)
!7886 = !DISubroutineType(types: !7887)
!7887 = !{!315, !7767, !315, !315, !7873}
!7888 = !{!7889, !7890, !7891, !7892}
!7889 = !DILocalVariable(name: "ptr", arg: 1, scope: !7885, file: !694, line: 99, type: !7767)
!7890 = !DILocalVariable(name: "size", arg: 2, scope: !7885, file: !694, line: 99, type: !315)
!7891 = !DILocalVariable(name: "nitems", arg: 3, scope: !7885, file: !694, line: 99, type: !315)
!7892 = !DILocalVariable(name: "stream", arg: 4, scope: !7885, file: !694, line: 100, type: !7873)
!7893 = !DILocation(line: 0, scope: !7885)
!7894 = !DILocation(line: 102, column: 9, scope: !7885)
!7895 = !DILocation(line: 102, column: 2, scope: !7885)
!7896 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7860, file: !7860, line: 96, type: !7886, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7897)
!7897 = !{!7898, !7899, !7900, !7901}
!7898 = !DILocalVariable(name: "ptr", arg: 1, scope: !7896, file: !7860, line: 96, type: !7767)
!7899 = !DILocalVariable(name: "size", arg: 2, scope: !7896, file: !7860, line: 96, type: !315)
!7900 = !DILocalVariable(name: "nitems", arg: 3, scope: !7896, file: !7860, line: 96, type: !315)
!7901 = !DILocalVariable(name: "stream", arg: 4, scope: !7896, file: !7860, line: 96, type: !7873)
!7902 = !DILocation(line: 0, scope: !7896)
!7903 = !DILocation(line: 107, column: 2, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7896, file: !7860, line: 107, column: 2)
!7905 = !{i64 2154133657}
!7906 = !DILocation(line: 108, column: 9, scope: !7896)
!7907 = !DILocation(line: 108, column: 2, scope: !7896)
!7908 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !694, file: !694, line: 56, type: !7886, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7909)
!7909 = !{!7910, !7911, !7912, !7913, !7914, !7915, !7916, !7917}
!7910 = !DILocalVariable(name: "ptr", arg: 1, scope: !7908, file: !694, line: 56, type: !7767)
!7911 = !DILocalVariable(name: "size", arg: 2, scope: !7908, file: !694, line: 56, type: !315)
!7912 = !DILocalVariable(name: "nitems", arg: 3, scope: !7908, file: !694, line: 57, type: !315)
!7913 = !DILocalVariable(name: "stream", arg: 4, scope: !7908, file: !694, line: 57, type: !7873)
!7914 = !DILocalVariable(name: "i", scope: !7908, file: !694, line: 59, type: !315)
!7915 = !DILocalVariable(name: "j", scope: !7908, file: !694, line: 60, type: !315)
!7916 = !DILocalVariable(name: "p", scope: !7908, file: !694, line: 61, type: !2898)
!7917 = !DILabel(scope: !7908, name: "done", file: !694, line: 82)
!7918 = !DILocation(line: 0, scope: !7908)
!7919 = !DILocation(line: 63, column: 14, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7908, file: !694, line: 63, column: 6)
!7921 = !DILocation(line: 63, column: 24, scope: !7920)
!7922 = !DILocation(line: 72, column: 3, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7908, file: !694, line: 70, column: 5)
!7924 = !DILocation(line: 0, scope: !7923)
!7925 = !DILocation(line: 73, column: 8, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7927, file: !694, line: 73, column: 8)
!7927 = distinct !DILexicalBlock(scope: !7923, file: !694, line: 72, column: 6)
!7928 = !DILocation(line: 73, column: 29, scope: !7926)
!7929 = !DILocation(line: 73, column: 27, scope: !7926)
!7930 = !DILocation(line: 73, column: 21, scope: !7926)
!7931 = !DILocation(line: 73, column: 33, scope: !7926)
!7932 = !DILocation(line: 73, column: 8, scope: !7927)
!7933 = !DILocation(line: 76, column: 5, scope: !7927)
!7934 = !DILocation(line: 77, column: 14, scope: !7923)
!7935 = !DILocation(line: 77, column: 3, scope: !7927)
!7936 = distinct !{!7936, !7922, !7937}
!7937 = !DILocation(line: 77, column: 17, scope: !7923)
!7938 = !DILocation(line: 79, column: 4, scope: !7923)
!7939 = !DILocation(line: 80, column: 13, scope: !7908)
!7940 = !DILocation(line: 80, column: 2, scope: !7923)
!7941 = distinct !{!7941, !7942, !7943}
!7942 = !DILocation(line: 70, column: 2, scope: !7908)
!7943 = !DILocation(line: 80, column: 16, scope: !7908)
!7944 = !DILocation(line: 82, column: 1, scope: !7908)
!7945 = !DILocation(line: 83, column: 17, scope: !7908)
!7946 = !DILocation(line: 83, column: 2, scope: !7908)
!7947 = !DILocation(line: 84, column: 1, scope: !7908)
!7948 = distinct !DISubprogram(name: "puts", scope: !694, file: !694, line: 106, type: !7949, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !687, retainedNodes: !7951)
!7949 = !DISubroutineType(types: !7950)
!7950 = !{!118, !133}
!7951 = !{!7952}
!7952 = !DILocalVariable(name: "s", arg: 1, scope: !7948, file: !694, line: 106, type: !133)
!7953 = !DILocation(line: 0, scope: !7948)
!7954 = !DILocation(line: 108, column: 6, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7948, file: !694, line: 108, column: 6)
!7956 = !DILocation(line: 108, column: 23, scope: !7955)
!7957 = !DILocation(line: 108, column: 6, scope: !7948)
!7958 = !DILocation(line: 112, column: 9, scope: !7948)
!7959 = !DILocation(line: 112, column: 29, scope: !7948)
!7960 = !DILocation(line: 112, column: 2, scope: !7948)
!7961 = !DILocation(line: 113, column: 1, scope: !7948)
!7962 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !806, file: !806, line: 368, type: !859, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !7963)
!7963 = !{!7964}
!7964 = !DILocalVariable(name: "dev", arg: 1, scope: !7962, file: !806, line: 368, type: !835)
!7965 = !DILocation(line: 0, scope: !7962)
!7966 = !DILocation(line: 370, column: 2, scope: !7962)
!7967 = !DILocation(line: 371, column: 1, scope: !7962)
!7968 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !806, file: !806, line: 243, type: !7969, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !7971)
!7969 = !DISubroutineType(types: !7970)
!7970 = !{null, !118, !118, !835}
!7971 = !{!7972, !7973, !7974, !7975, !7977}
!7972 = !DILocalVariable(name: "min", arg: 1, scope: !7968, file: !806, line: 243, type: !118)
!7973 = !DILocalVariable(name: "max", arg: 2, scope: !7968, file: !806, line: 243, type: !118)
!7974 = !DILocalVariable(name: "dev", arg: 3, scope: !7968, file: !806, line: 243, type: !835)
!7975 = !DILocalVariable(name: "data", scope: !7968, file: !806, line: 245, type: !7976)
!7976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 32)
!7977 = !DILocalVariable(name: "line", scope: !7968, file: !806, line: 246, type: !118)
!7978 = !DILocation(line: 0, scope: !7968)
!7979 = !DILocation(line: 245, column: 38, scope: !7968)
!7980 = !DILocation(line: 249, column: 24, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7982, file: !806, line: 249, column: 2)
!7982 = distinct !DILexicalBlock(scope: !7968, file: !806, line: 249, column: 2)
!7983 = !DILocation(line: 249, column: 2, scope: !7982)
!7984 = !DILocation(line: 251, column: 7, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7986, file: !806, line: 251, column: 7)
!7986 = distinct !DILexicalBlock(scope: !7981, file: !806, line: 249, column: 39)
!7987 = !DILocation(line: 251, column: 7, scope: !7986)
!7988 = !DILocation(line: 253, column: 4, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7985, file: !806, line: 251, column: 36)
!7990 = !DILocation(line: 256, column: 24, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7989, file: !806, line: 256, column: 8)
!7992 = !DILocation(line: 256, column: 9, scope: !7991)
!7993 = !DILocation(line: 256, column: 8, scope: !7989)
!7994 = !DILocation(line: 260, column: 43, scope: !7989)
!7995 = !DILocation(line: 260, column: 4, scope: !7989)
!7996 = !DILocation(line: 261, column: 3, scope: !7989)
!7997 = !DILocation(line: 249, column: 35, scope: !7981)
!7998 = distinct !{!7998, !7983, !7999}
!7999 = !DILocation(line: 262, column: 2, scope: !7982)
!8000 = !DILocation(line: 263, column: 1, scope: !7968)
!8001 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !806, file: !806, line: 158, type: !439, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8002)
!8002 = !{!8003}
!8003 = !DILocalVariable(name: "line", arg: 1, scope: !8001, file: !806, line: 158, type: !118)
!8004 = !DILocation(line: 0, scope: !8001)
!8005 = !DILocation(line: 170, column: 38, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8007, file: !806, line: 160, column: 17)
!8007 = distinct !DILexicalBlock(scope: !8001, file: !806, line: 160, column: 6)
!8008 = !DILocation(line: 170, column: 10, scope: !8006)
!8009 = !DILocation(line: 176, column: 1, scope: !8001)
!8010 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !806, file: !806, line: 183, type: !8011, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8013)
!8011 = !DISubroutineType(types: !8012)
!8012 = !{null, !118}
!8013 = !{!8014}
!8014 = !DILocalVariable(name: "line", arg: 1, scope: !8010, file: !806, line: 183, type: !118)
!8015 = !DILocation(line: 0, scope: !8010)
!8016 = !DILocation(line: 195, column: 28, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8018, file: !806, line: 185, column: 17)
!8018 = distinct !DILexicalBlock(scope: !8010, file: !806, line: 185, column: 6)
!8019 = !DILocation(line: 195, column: 3, scope: !8017)
!8020 = !DILocation(line: 200, column: 1, scope: !8010)
!8021 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8022, file: !8022, line: 910, type: !6408, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8023)
!8022 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8023 = !{!8024}
!8024 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8021, file: !8022, line: 910, type: !156)
!8025 = !DILocation(line: 0, scope: !8021)
!8026 = !DILocation(line: 912, column: 3, scope: !8021)
!8027 = !DILocation(line: 913, column: 1, scope: !8021)
!8028 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8022, file: !8022, line: 834, type: !7357, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8029)
!8029 = !{!8030}
!8030 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8028, file: !8022, line: 834, type: !156)
!8031 = !DILocation(line: 0, scope: !8028)
!8032 = !DILocation(line: 836, column: 11, scope: !8028)
!8033 = !DILocation(line: 836, column: 40, scope: !8028)
!8034 = !DILocation(line: 836, column: 3, scope: !8028)
!8035 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !806, file: !806, line: 304, type: !859, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8036)
!8036 = !{!8037}
!8037 = !DILocalVariable(name: "dev", arg: 1, scope: !8035, file: !806, line: 304, type: !835)
!8038 = !DILocation(line: 0, scope: !8035)
!8039 = !DILocation(line: 306, column: 2, scope: !8035)
!8040 = !DILocation(line: 307, column: 1, scope: !8035)
!8041 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !806, file: !806, line: 299, type: !859, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8042)
!8042 = !{!8043}
!8043 = !DILocalVariable(name: "dev", arg: 1, scope: !8041, file: !806, line: 299, type: !835)
!8044 = !DILocation(line: 0, scope: !8041)
!8045 = !DILocation(line: 301, column: 2, scope: !8041)
!8046 = !DILocation(line: 302, column: 1, scope: !8041)
!8047 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !806, file: !806, line: 294, type: !859, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8048)
!8048 = !{!8049}
!8049 = !DILocalVariable(name: "dev", arg: 1, scope: !8047, file: !806, line: 294, type: !835)
!8050 = !DILocation(line: 0, scope: !8047)
!8051 = !DILocation(line: 296, column: 2, scope: !8047)
!8052 = !DILocation(line: 297, column: 1, scope: !8047)
!8053 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !806, file: !806, line: 397, type: !859, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8054)
!8054 = !{!8055}
!8055 = !DILocalVariable(name: "dev", arg: 1, scope: !8053, file: !806, line: 397, type: !835)
!8056 = !DILocation(line: 0, scope: !8053)
!8057 = !DILocation(line: 399, column: 2, scope: !8053)
!8058 = !DILocation(line: 400, column: 1, scope: !8053)
!8059 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !806, file: !806, line: 392, type: !859, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8060)
!8060 = !{!8061}
!8061 = !DILocalVariable(name: "dev", arg: 1, scope: !8059, file: !806, line: 392, type: !835)
!8062 = !DILocation(line: 0, scope: !8059)
!8063 = !DILocation(line: 394, column: 2, scope: !8059)
!8064 = !DILocation(line: 395, column: 1, scope: !8059)
!8065 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !806, file: !806, line: 289, type: !859, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8066)
!8066 = !{!8067}
!8067 = !DILocalVariable(name: "dev", arg: 1, scope: !8065, file: !806, line: 289, type: !835)
!8068 = !DILocation(line: 0, scope: !8065)
!8069 = !DILocation(line: 291, column: 2, scope: !8065)
!8070 = !DILocation(line: 292, column: 1, scope: !8065)
!8071 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !806, file: !806, line: 387, type: !859, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8072)
!8072 = !{!8073}
!8073 = !DILocalVariable(name: "dev", arg: 1, scope: !8071, file: !806, line: 387, type: !835)
!8074 = !DILocation(line: 0, scope: !8071)
!8075 = !DILocation(line: 389, column: 2, scope: !8071)
!8076 = !DILocation(line: 390, column: 1, scope: !8071)
!8077 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !806, file: !806, line: 382, type: !859, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8078)
!8078 = !{!8079}
!8079 = !DILocalVariable(name: "dev", arg: 1, scope: !8077, file: !806, line: 382, type: !835)
!8080 = !DILocation(line: 0, scope: !8077)
!8081 = !DILocation(line: 384, column: 2, scope: !8077)
!8082 = !DILocation(line: 385, column: 1, scope: !8077)
!8083 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !806, file: !806, line: 373, type: !859, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8084)
!8084 = !{!8085}
!8085 = !DILocalVariable(name: "dev", arg: 1, scope: !8083, file: !806, line: 373, type: !835)
!8086 = !DILocation(line: 0, scope: !8083)
!8087 = !DILocation(line: 375, column: 2, scope: !8083)
!8088 = !DILocation(line: 376, column: 1, scope: !8083)
!8089 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !806, file: !806, line: 284, type: !859, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8090)
!8090 = !{!8091}
!8091 = !DILocalVariable(name: "dev", arg: 1, scope: !8089, file: !806, line: 284, type: !835)
!8092 = !DILocation(line: 0, scope: !8089)
!8093 = !DILocation(line: 286, column: 2, scope: !8089)
!8094 = !DILocation(line: 287, column: 1, scope: !8089)
!8095 = distinct !DISubprogram(name: "stm32_exti_init", scope: !806, file: !806, line: 416, type: !833, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8096)
!8096 = !{!8097}
!8097 = !DILocalVariable(name: "dev", arg: 1, scope: !8095, file: !806, line: 416, type: !835)
!8098 = !DILocation(line: 0, scope: !8095)
!8099 = !DILocation(line: 418, column: 2, scope: !8095)
!8100 = !DILocation(line: 420, column: 2, scope: !8095)
!8101 = !DILocation(line: 0, scope: !858)
!8102 = !DILocation(line: 493, column: 2, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !858, file: !806, line: 493, column: 2)
!8104 = !DILocation(line: 497, column: 2, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !858, file: !806, line: 497, column: 2)
!8106 = !DILocation(line: 507, column: 2, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !858, file: !806, line: 507, column: 2)
!8108 = !DILocation(line: 512, column: 2, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !858, file: !806, line: 512, column: 2)
!8110 = !DILocation(line: 516, column: 2, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !858, file: !806, line: 516, column: 2)
!8112 = !DILocation(line: 523, column: 2, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !858, file: !806, line: 523, column: 2)
!8114 = !DILocation(line: 527, column: 2, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !858, file: !806, line: 527, column: 2)
!8116 = !DILocation(line: 581, column: 2, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !858, file: !806, line: 581, column: 2)
!8118 = !DILocation(line: 586, column: 2, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !858, file: !806, line: 586, column: 2)
!8120 = !DILocation(line: 591, column: 2, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !858, file: !806, line: 591, column: 2)
!8122 = !DILocation(line: 595, column: 2, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !858, file: !806, line: 595, column: 2)
!8124 = !DILocation(line: 607, column: 1, scope: !858)
!8125 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !806, file: !806, line: 112, type: !8011, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8126)
!8126 = !{!8127, !8128}
!8127 = !DILocalVariable(name: "line", arg: 1, scope: !8125, file: !806, line: 112, type: !118)
!8128 = !DILocalVariable(name: "irqnum", scope: !8125, file: !806, line: 114, type: !118)
!8129 = !DILocation(line: 0, scope: !8125)
!8130 = !DILocation(line: 122, column: 13, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8125, file: !806, line: 122, column: 6)
!8132 = !DILocation(line: 122, column: 6, scope: !8125)
!8133 = !DILocation(line: 123, column: 3, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8135, file: !806, line: 123, column: 3)
!8135 = distinct !DILexicalBlock(scope: !8136, file: !806, line: 123, column: 3)
!8136 = distinct !DILexicalBlock(scope: !8137, file: !806, line: 123, column: 3)
!8137 = distinct !DILexicalBlock(scope: !8131, file: !806, line: 122, column: 22)
!8138 = !DILocation(line: 121, column: 11, scope: !8125)
!8139 = !DILocation(line: 130, column: 26, scope: !8125)
!8140 = !DILocation(line: 130, column: 2, scope: !8125)
!8141 = !DILocation(line: 134, column: 2, scope: !8125)
!8142 = !DILocation(line: 135, column: 1, scope: !8125)
!8143 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8022, file: !8022, line: 268, type: !6408, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8144)
!8144 = !{!8145}
!8145 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8143, file: !8022, line: 268, type: !156)
!8146 = !DILocation(line: 0, scope: !8143)
!8147 = !DILocation(line: 270, column: 3, scope: !8143)
!8148 = !DILocation(line: 271, column: 1, scope: !8143)
!8149 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !806, file: !806, line: 137, type: !8011, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8150)
!8150 = !{!8151}
!8151 = !DILocalVariable(name: "line", arg: 1, scope: !8149, file: !806, line: 137, type: !118)
!8152 = !DILocation(line: 0, scope: !8149)
!8153 = !DILocation(line: 141, column: 11, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8149, file: !806, line: 141, column: 6)
!8155 = !DILocation(line: 141, column: 6, scope: !8149)
!8156 = !DILocation(line: 145, column: 28, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8154, file: !806, line: 141, column: 17)
!8158 = !DILocation(line: 145, column: 3, scope: !8157)
!8159 = !DILocation(line: 147, column: 2, scope: !8157)
!8160 = !DILocation(line: 151, column: 1, scope: !8149)
!8161 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8022, file: !8022, line: 309, type: !6408, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8162)
!8162 = !{!8163}
!8163 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8161, file: !8022, line: 309, type: !156)
!8164 = !DILocation(line: 0, scope: !8161)
!8165 = !DILocation(line: 311, column: 3, scope: !8161)
!8166 = !DILocation(line: 312, column: 1, scope: !8161)
!8167 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !806, file: !806, line: 202, type: !8168, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8170)
!8168 = !DISubroutineType(types: !8169)
!8169 = !{null, !118, !118}
!8170 = !{!8171, !8172}
!8171 = !DILocalVariable(name: "line", arg: 1, scope: !8167, file: !806, line: 202, type: !118)
!8172 = !DILocalVariable(name: "trigger", arg: 2, scope: !8167, file: !806, line: 202, type: !118)
!8173 = !DILocation(line: 0, scope: !8167)
!8174 = !DILocation(line: 211, column: 2, scope: !8167)
!8175 = !DILocation(line: 213, column: 36, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8167, file: !806, line: 211, column: 19)
!8177 = !DILocation(line: 213, column: 3, scope: !8176)
!8178 = !DILocation(line: 214, column: 3, scope: !8176)
!8179 = !DILocation(line: 215, column: 3, scope: !8176)
!8180 = !DILocation(line: 217, column: 35, scope: !8176)
!8181 = !DILocation(line: 217, column: 3, scope: !8176)
!8182 = !DILocation(line: 218, column: 3, scope: !8176)
!8183 = !DILocation(line: 219, column: 3, scope: !8176)
!8184 = !DILocation(line: 221, column: 36, scope: !8176)
!8185 = !DILocation(line: 221, column: 3, scope: !8176)
!8186 = !DILocation(line: 222, column: 3, scope: !8176)
!8187 = !DILocation(line: 223, column: 3, scope: !8176)
!8188 = !DILocation(line: 225, column: 35, scope: !8176)
!8189 = !DILocation(line: 225, column: 3, scope: !8176)
!8190 = !DILocation(line: 226, column: 3, scope: !8176)
!8191 = !DILocation(line: 227, column: 3, scope: !8176)
!8192 = !DILocation(line: 232, column: 1, scope: !8167)
!8193 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8022, file: !8022, line: 573, type: !6408, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8194)
!8194 = !{!8195}
!8195 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8193, file: !8022, line: 573, type: !156)
!8196 = !DILocation(line: 0, scope: !8193)
!8197 = !DILocation(line: 575, column: 3, scope: !8193)
!8198 = !DILocation(line: 577, column: 1, scope: !8193)
!8199 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8022, file: !8022, line: 703, type: !6408, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8200)
!8200 = !{!8201}
!8201 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8199, file: !8022, line: 703, type: !156)
!8202 = !DILocation(line: 0, scope: !8199)
!8203 = !DILocation(line: 705, column: 3, scope: !8199)
!8204 = !DILocation(line: 706, column: 1, scope: !8199)
!8205 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8022, file: !8022, line: 529, type: !6408, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8206)
!8206 = !{!8207}
!8207 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8205, file: !8022, line: 529, type: !156)
!8208 = !DILocation(line: 0, scope: !8205)
!8209 = !DILocation(line: 531, column: 3, scope: !8205)
!8210 = !DILocation(line: 533, column: 1, scope: !8205)
!8211 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8022, file: !8022, line: 661, type: !6408, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8212)
!8212 = !{!8213}
!8213 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8211, file: !8022, line: 661, type: !156)
!8214 = !DILocation(line: 0, scope: !8211)
!8215 = !DILocation(line: 663, column: 3, scope: !8211)
!8216 = !DILocation(line: 664, column: 1, scope: !8211)
!8217 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !806, file: !806, line: 433, type: !8218, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8220)
!8218 = !DISubroutineType(types: !8219)
!8219 = !{!118, !118, !846, !117}
!8220 = !{!8221, !8222, !8223, !8224, !8226}
!8221 = !DILocalVariable(name: "line", arg: 1, scope: !8217, file: !806, line: 433, type: !118)
!8222 = !DILocalVariable(name: "cb", arg: 2, scope: !8217, file: !806, line: 433, type: !846)
!8223 = !DILocalVariable(name: "arg", arg: 3, scope: !8217, file: !806, line: 433, type: !117)
!8224 = !DILocalVariable(name: "dev", scope: !8217, file: !806, line: 435, type: !8225)
!8225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !835)
!8226 = !DILocalVariable(name: "data", scope: !8217, file: !806, line: 436, type: !7976)
!8227 = !DILocation(line: 0, scope: !8217)
!8228 = !DILocation(line: 438, column: 21, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8217, file: !806, line: 438, column: 6)
!8230 = !DILocation(line: 438, column: 6, scope: !8229)
!8231 = !DILocation(line: 438, column: 6, scope: !8217)
!8232 = !DILocation(line: 442, column: 20, scope: !8217)
!8233 = !DILocation(line: 443, column: 17, scope: !8217)
!8234 = !DILocation(line: 443, column: 22, scope: !8217)
!8235 = !DILocation(line: 445, column: 2, scope: !8217)
!8236 = !DILocation(line: 446, column: 1, scope: !8217)
!8237 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !806, file: !806, line: 448, type: !8011, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8238)
!8238 = !{!8239, !8240, !8241}
!8239 = !DILocalVariable(name: "line", arg: 1, scope: !8237, file: !806, line: 448, type: !118)
!8240 = !DILocalVariable(name: "dev", scope: !8237, file: !806, line: 450, type: !8225)
!8241 = !DILocalVariable(name: "data", scope: !8237, file: !806, line: 451, type: !7976)
!8242 = !DILocation(line: 0, scope: !8237)
!8243 = !DILocation(line: 453, column: 17, scope: !8237)
!8244 = !DILocation(line: 453, column: 20, scope: !8237)
!8245 = !DILocation(line: 454, column: 17, scope: !8237)
!8246 = !DILocation(line: 454, column: 22, scope: !8237)
!8247 = !DILocation(line: 455, column: 1, scope: !8237)
!8248 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !990, file: !990, line: 183, type: !1028, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !8249)
!8249 = !{!8250, !8251, !8252, !8253, !8254}
!8250 = !DILocalVariable(name: "dev", arg: 1, scope: !8248, file: !990, line: 183, type: !1019)
!8251 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8248, file: !990, line: 184, type: !1030)
!8252 = !DILocalVariable(name: "pclken", scope: !8248, file: !990, line: 186, type: !980)
!8253 = !DILocalVariable(name: "reg", scope: !8248, file: !990, line: 187, type: !1552)
!8254 = !DILocalVariable(name: "reg_val", scope: !8248, file: !990, line: 188, type: !156)
!8255 = !DILocation(line: 0, scope: !8248)
!8256 = !DILocation(line: 192, column: 6, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8248, file: !990, line: 192, column: 6)
!8258 = !DILocation(line: 192, column: 6, scope: !8248)
!8259 = !DILocation(line: 197, column: 52, scope: !8248)
!8260 = !DILocation(line: 197, column: 8, scope: !8248)
!8261 = !DILocation(line: 198, column: 12, scope: !8248)
!8262 = !DILocation(line: 199, column: 21, scope: !8248)
!8263 = !DILocation(line: 199, column: 10, scope: !8248)
!8264 = !DILocation(line: 200, column: 7, scope: !8248)
!8265 = !DILocation(line: 202, column: 2, scope: !8248)
!8266 = !DILocation(line: 203, column: 1, scope: !8248)
!8267 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !990, file: !990, line: 205, type: !1028, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !8268)
!8268 = !{!8269, !8270, !8271, !8272, !8273}
!8269 = !DILocalVariable(name: "dev", arg: 1, scope: !8267, file: !990, line: 205, type: !1019)
!8270 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8267, file: !990, line: 206, type: !1030)
!8271 = !DILocalVariable(name: "pclken", scope: !8267, file: !990, line: 208, type: !980)
!8272 = !DILocalVariable(name: "reg", scope: !8267, file: !990, line: 209, type: !1552)
!8273 = !DILocalVariable(name: "reg_val", scope: !8267, file: !990, line: 210, type: !156)
!8274 = !DILocation(line: 0, scope: !8267)
!8275 = !DILocation(line: 214, column: 6, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8267, file: !990, line: 214, column: 6)
!8277 = !DILocation(line: 214, column: 6, scope: !8267)
!8278 = !DILocation(line: 219, column: 52, scope: !8267)
!8279 = !DILocation(line: 219, column: 8, scope: !8267)
!8280 = !DILocation(line: 220, column: 12, scope: !8267)
!8281 = !DILocation(line: 221, column: 22, scope: !8267)
!8282 = !DILocation(line: 221, column: 13, scope: !8267)
!8283 = !DILocation(line: 221, column: 10, scope: !8267)
!8284 = !DILocation(line: 222, column: 7, scope: !8267)
!8285 = !DILocation(line: 224, column: 2, scope: !8267)
!8286 = !DILocation(line: 225, column: 1, scope: !8267)
!8287 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !990, file: !990, line: 262, type: !1044, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !8288)
!8288 = !{!8289, !8290, !8291, !8292, !8293, !8294, !8295, !8296}
!8289 = !DILocalVariable(name: "clock", arg: 1, scope: !8287, file: !990, line: 262, type: !1019)
!8290 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8287, file: !990, line: 263, type: !1030)
!8291 = !DILocalVariable(name: "rate", arg: 3, scope: !8287, file: !990, line: 264, type: !986)
!8292 = !DILocalVariable(name: "pclken", scope: !8287, file: !990, line: 266, type: !980)
!8293 = !DILocalVariable(name: "ahb_clock", scope: !8287, file: !990, line: 273, type: !156)
!8294 = !DILocalVariable(name: "apb1_clock", scope: !8287, file: !990, line: 274, type: !156)
!8295 = !DILocalVariable(name: "apb2_clock", scope: !8287, file: !990, line: 276, type: !156)
!8296 = !DILocalVariable(name: "ahb3_clock", scope: !8287, file: !990, line: 286, type: !156)
!8297 = !DILocation(line: 0, scope: !8287)
!8298 = !DILocation(line: 273, column: 23, scope: !8287)
!8299 = !DILocation(line: 299, column: 18, scope: !8287)
!8300 = !DILocation(line: 299, column: 2, scope: !8287)
!8301 = !DILocation(line: 274, column: 24, scope: !8287)
!8302 = !DILocation(line: 319, column: 3, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8287, file: !990, line: 299, column: 23)
!8304 = !DILocation(line: 276, column: 24, scope: !8287)
!8305 = !DILocation(line: 323, column: 3, scope: !8303)
!8306 = !DILocation(line: 346, column: 33, scope: !8303)
!8307 = !DILocation(line: 346, column: 11, scope: !8303)
!8308 = !DILocation(line: 350, column: 3, scope: !8303)
!8309 = !DILocation(line: 374, column: 3, scope: !8303)
!8310 = !DILocation(line: 379, column: 3, scope: !8303)
!8311 = !DILocation(line: 0, scope: !8303)
!8312 = !DILocation(line: 396, column: 1, scope: !8287)
!8313 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !990, file: !990, line: 227, type: !1060, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !8314)
!8314 = !{!8315, !8316, !8317, !8318, !8319, !8320, !8321, !8322}
!8315 = !DILocalVariable(name: "dev", arg: 1, scope: !8313, file: !990, line: 227, type: !1019)
!8316 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8313, file: !990, line: 228, type: !1030)
!8317 = !DILocalVariable(name: "data", arg: 3, scope: !8313, file: !990, line: 229, type: !117)
!8318 = !DILocalVariable(name: "pclken", scope: !8313, file: !990, line: 233, type: !980)
!8319 = !DILocalVariable(name: "reg", scope: !8313, file: !990, line: 234, type: !1552)
!8320 = !DILocalVariable(name: "reg_val", scope: !8313, file: !990, line: 235, type: !156)
!8321 = !DILocalVariable(name: "dt_val", scope: !8313, file: !990, line: 235, type: !156)
!8322 = !DILocalVariable(name: "err", scope: !8313, file: !990, line: 236, type: !118)
!8323 = !DILocation(line: 0, scope: !8313)
!8324 = !DILocation(line: 241, column: 30, scope: !8313)
!8325 = !DILocation(line: 241, column: 8, scope: !8313)
!8326 = !DILocation(line: 242, column: 10, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8313, file: !990, line: 242, column: 6)
!8328 = !DILocation(line: 242, column: 6, scope: !8313)
!8329 = !DILocation(line: 247, column: 11, scope: !8313)
!8330 = !DILocation(line: 248, column: 6, scope: !8313)
!8331 = !DILocation(line: 247, column: 44, scope: !8313)
!8332 = !DILocation(line: 250, column: 6, scope: !8313)
!8333 = !DILocation(line: 249, column: 52, scope: !8313)
!8334 = !DILocation(line: 249, column: 8, scope: !8313)
!8335 = !DILocation(line: 251, column: 12, scope: !8313)
!8336 = !DILocation(line: 252, column: 10, scope: !8313)
!8337 = !DILocation(line: 253, column: 7, scope: !8313)
!8338 = !DILocation(line: 255, column: 2, scope: !8313)
!8339 = !DILocation(line: 260, column: 1, scope: !8313)
!8340 = distinct !DISubprogram(name: "enabled_clock", scope: !990, file: !990, line: 100, type: !8341, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !8343)
!8341 = !DISubroutineType(types: !8342)
!8342 = !{!118, !156}
!8343 = !{!8344, !8345}
!8344 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8340, file: !990, line: 100, type: !156)
!8345 = !DILocalVariable(name: "r", scope: !8340, file: !990, line: 102, type: !118)
!8346 = !DILocation(line: 0, scope: !8340)
!8347 = !DILocation(line: 104, column: 2, scope: !8340)
!8348 = !DILocation(line: 180, column: 2, scope: !8340)
!8349 = !DILocation(line: 181, column: 1, scope: !8340)
!8350 = distinct !DISubprogram(name: "get_bus_clock", scope: !990, file: !990, line: 79, type: !8351, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !8353)
!8351 = !DISubroutineType(types: !8352)
!8352 = !{!156, !156, !156}
!8353 = !{!8354, !8355}
!8354 = !DILocalVariable(name: "clock", arg: 1, scope: !8350, file: !990, line: 79, type: !156)
!8355 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8350, file: !990, line: 79, type: !156)
!8356 = !DILocation(line: 0, scope: !8350)
!8357 = !DILocation(line: 81, column: 15, scope: !8350)
!8358 = !DILocation(line: 81, column: 2, scope: !8350)
!8359 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !990, file: !990, line: 68, type: !8360, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !8362)
!8360 = !DISubroutineType(types: !8361)
!8361 = !{!156, !156, !118, !118, !118}
!8362 = !{!8363, !8364, !8365, !8366}
!8363 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8359, file: !990, line: 68, type: !156)
!8364 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8359, file: !990, line: 69, type: !118)
!8365 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8359, file: !990, line: 70, type: !118)
!8366 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8359, file: !990, line: 71, type: !118)
!8367 = !DILocation(line: 0, scope: !8359)
!8368 = !DILocation(line: 75, column: 22, scope: !8359)
!8369 = !DILocation(line: 75, column: 34, scope: !8359)
!8370 = !DILocation(line: 75, column: 2, scope: !8359)
!8371 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !990, file: !990, line: 641, type: !1017, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !8372)
!8372 = !{!8373, !8374, !8375}
!8373 = !DILocalVariable(name: "dev", arg: 1, scope: !8371, file: !990, line: 641, type: !1019)
!8374 = !DILocalVariable(name: "old_flash_freq", scope: !8371, file: !990, line: 664, type: !156)
!8375 = !DILocalVariable(name: "new_flash_freq", scope: !8371, file: !990, line: 665, type: !156)
!8376 = !DILocation(line: 0, scope: !8371)
!8377 = !DILocation(line: 646, column: 2, scope: !8371)
!8378 = !DILocation(line: 667, column: 19, scope: !8371)
!8379 = !DILocation(line: 674, column: 21, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8371, file: !990, line: 674, column: 6)
!8381 = !DILocation(line: 674, column: 6, scope: !8371)
!8382 = !DILocation(line: 675, column: 3, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8380, file: !990, line: 674, column: 59)
!8384 = !DILocation(line: 676, column: 2, scope: !8383)
!8385 = !DILocation(line: 680, column: 2, scope: !8371)
!8386 = !DILocation(line: 683, column: 2, scope: !8371)
!8387 = !DILocation(line: 690, column: 3, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8389, file: !990, line: 689, column: 9)
!8389 = distinct !DILexicalBlock(scope: !8371, file: !990, line: 685, column: 6)
!8390 = !DILocation(line: 695, column: 2, scope: !8371)
!8391 = !DILocation(line: 696, column: 2, scope: !8371)
!8392 = !DILocation(line: 696, column: 9, scope: !8371)
!8393 = !DILocation(line: 696, column: 34, scope: !8371)
!8394 = distinct !{!8394, !8391, !8395}
!8395 = !DILocation(line: 697, column: 2, scope: !8371)
!8396 = !DILocation(line: 720, column: 21, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8371, file: !990, line: 720, column: 6)
!8398 = !DILocation(line: 720, column: 6, scope: !8371)
!8399 = !DILocation(line: 721, column: 3, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8397, file: !990, line: 720, column: 60)
!8401 = !DILocation(line: 722, column: 2, scope: !8400)
!8402 = !DILocation(line: 725, column: 18, scope: !8371)
!8403 = !DILocation(line: 728, column: 2, scope: !8371)
!8404 = !DILocation(line: 730, column: 2, scope: !8371)
!8405 = !DILocation(line: 745, column: 2, scope: !8371)
!8406 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8407, file: !8407, line: 3275, type: !6398, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !2101)
!8407 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8408 = !DILocation(line: 3277, column: 21, scope: !8406)
!8409 = !DILocation(line: 3277, column: 3, scope: !8406)
!8410 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !990, file: !990, line: 507, type: !365, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !2101)
!8411 = !DILocation(line: 534, column: 7, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8413, file: !990, line: 534, column: 7)
!8413 = distinct !DILexicalBlock(scope: !8414, file: !990, line: 532, column: 37)
!8414 = distinct !DILexicalBlock(scope: !8410, file: !990, line: 532, column: 6)
!8415 = !DILocation(line: 534, column: 28, scope: !8412)
!8416 = !DILocation(line: 534, column: 7, scope: !8413)
!8417 = !DILocation(line: 536, column: 4, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8412, file: !990, line: 534, column: 34)
!8419 = !DILocation(line: 537, column: 4, scope: !8418)
!8420 = !DILocation(line: 537, column: 11, scope: !8418)
!8421 = !DILocation(line: 537, column: 32, scope: !8418)
!8422 = distinct !{!8422, !8419, !8423}
!8423 = !DILocation(line: 539, column: 4, scope: !8418)
!8424 = !DILocation(line: 583, column: 3, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8426, file: !990, line: 577, column: 37)
!8426 = distinct !DILexicalBlock(scope: !8410, file: !990, line: 577, column: 6)
!8427 = !DILocation(line: 584, column: 3, scope: !8425)
!8428 = !DILocation(line: 584, column: 10, scope: !8425)
!8429 = !DILocation(line: 584, column: 31, scope: !8425)
!8430 = distinct !{!8430, !8427, !8431}
!8431 = !DILocation(line: 585, column: 3, scope: !8425)
!8432 = !DILocation(line: 627, column: 1, scope: !8410)
!8433 = distinct !DISubprogram(name: "set_up_plls", scope: !990, file: !990, line: 448, type: !365, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !2101)
!8434 = !DILocation(line: 460, column: 6, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8433, file: !990, line: 460, column: 6)
!8436 = !DILocation(line: 460, column: 31, scope: !8435)
!8437 = !DILocation(line: 460, column: 6, scope: !8433)
!8438 = !DILocation(line: 461, column: 3, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8435, file: !990, line: 460, column: 67)
!8440 = !DILocation(line: 462, column: 3, scope: !8439)
!8441 = !DILocation(line: 463, column: 2, scope: !8439)
!8442 = !DILocation(line: 464, column: 2, scope: !8433)
!8443 = !DILocation(line: 488, column: 2, scope: !8433)
!8444 = !DILocation(line: 496, column: 2, scope: !8433)
!8445 = !DILocation(line: 499, column: 2, scope: !8433)
!8446 = !DILocation(line: 500, column: 2, scope: !8433)
!8447 = !DILocation(line: 500, column: 9, scope: !8433)
!8448 = !DILocation(line: 500, column: 30, scope: !8433)
!8449 = distinct !{!8449, !8446, !8450}
!8450 = !DILocation(line: 502, column: 2, scope: !8433)
!8451 = !DILocation(line: 505, column: 1, scope: !8433)
!8452 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8407, file: !8407, line: 3224, type: !6408, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !8453)
!8453 = !{!8454}
!8454 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8452, file: !8407, line: 3224, type: !156)
!8455 = !DILocation(line: 0, scope: !8452)
!8456 = !DILocation(line: 3226, column: 3, scope: !8452)
!8457 = !DILocation(line: 3227, column: 1, scope: !8452)
!8458 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8407, file: !8407, line: 3188, type: !6408, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !8459)
!8459 = !{!8460}
!8460 = !DILocalVariable(name: "Source", arg: 1, scope: !8458, file: !8407, line: 3188, type: !156)
!8461 = !DILocation(line: 0, scope: !8458)
!8462 = !DILocation(line: 3190, column: 3, scope: !8458)
!8463 = !DILocation(line: 3191, column: 1, scope: !8458)
!8464 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8407, file: !8407, line: 3204, type: !6398, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !2101)
!8465 = !DILocation(line: 3206, column: 21, scope: !8464)
!8466 = !DILocation(line: 3206, column: 3, scope: !8464)
!8467 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8407, file: !8407, line: 3240, type: !6408, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !8468)
!8468 = !{!8469}
!8469 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8467, file: !8407, line: 3240, type: !156)
!8470 = !DILocation(line: 0, scope: !8467)
!8471 = !DILocation(line: 3242, column: 3, scope: !8467)
!8472 = !DILocation(line: 3243, column: 1, scope: !8467)
!8473 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8407, file: !8407, line: 3256, type: !6408, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !8474)
!8474 = !{!8475}
!8475 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8473, file: !8407, line: 3256, type: !156)
!8476 = !DILocation(line: 0, scope: !8473)
!8477 = !DILocation(line: 3258, column: 3, scope: !8473)
!8478 = !DILocation(line: 3259, column: 1, scope: !8473)
!8479 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !990, file: !990, line: 409, type: !365, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !2101)
!8480 = !DILocation(line: 412, column: 6, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8479, file: !990, line: 412, column: 6)
!8482 = !DILocation(line: 412, column: 27, scope: !8481)
!8483 = !DILocation(line: 412, column: 6, scope: !8479)
!8484 = !DILocation(line: 414, column: 3, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8481, file: !990, line: 412, column: 33)
!8486 = !DILocation(line: 415, column: 3, scope: !8485)
!8487 = !DILocation(line: 415, column: 10, scope: !8485)
!8488 = !DILocation(line: 415, column: 31, scope: !8485)
!8489 = distinct !{!8489, !8486, !8490}
!8490 = !DILocation(line: 417, column: 3, scope: !8485)
!8491 = !DILocation(line: 421, column: 2, scope: !8479)
!8492 = !DILocation(line: 422, column: 2, scope: !8479)
!8493 = !DILocation(line: 422, column: 9, scope: !8479)
!8494 = !DILocation(line: 422, column: 34, scope: !8479)
!8495 = distinct !{!8495, !8492, !8496}
!8496 = !DILocation(line: 423, column: 2, scope: !8479)
!8497 = !DILocation(line: 424, column: 1, scope: !8479)
!8498 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8407, file: !8407, line: 4195, type: !365, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !2101)
!8499 = !DILocation(line: 4197, column: 3, scope: !8498)
!8500 = !DILocation(line: 4198, column: 1, scope: !8498)
!8501 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8407, file: !8407, line: 4184, type: !365, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !2101)
!8502 = !DILocation(line: 4186, column: 3, scope: !8501)
!8503 = !DILocation(line: 4187, column: 1, scope: !8501)
!8504 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8407, file: !8407, line: 4205, type: !6398, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !2101)
!8505 = !DILocation(line: 4207, column: 11, scope: !8504)
!8506 = !DILocation(line: 4207, column: 44, scope: !8504)
!8507 = !DILocation(line: 4207, column: 3, scope: !8504)
!8508 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8407, file: !8407, line: 3007, type: !6398, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !2101)
!8509 = !DILocation(line: 3009, column: 11, scope: !8508)
!8510 = !DILocation(line: 3009, column: 44, scope: !8508)
!8511 = !DILocation(line: 3009, column: 3, scope: !8508)
!8512 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8407, file: !8407, line: 2987, type: !365, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !2101)
!8513 = !DILocation(line: 2989, column: 3, scope: !8512)
!8514 = !DILocation(line: 2990, column: 1, scope: !8512)
!8515 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8407, file: !8407, line: 3143, type: !365, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !2101)
!8516 = !DILocation(line: 3145, column: 3, scope: !8515)
!8517 = !DILocation(line: 3146, column: 1, scope: !8515)
!8518 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8407, file: !8407, line: 3163, type: !6398, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !926, retainedNodes: !2101)
!8519 = !DILocation(line: 3165, column: 11, scope: !8518)
!8520 = !DILocation(line: 3165, column: 46, scope: !8518)
!8521 = !DILocation(line: 3165, column: 3, scope: !8518)
!8522 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8523, file: !8523, line: 40, type: !6398, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !2101)
!8523 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8524 = !DILocation(line: 43, column: 3, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8526, file: !8523, line: 42, column: 37)
!8526 = distinct !DILexicalBlock(scope: !8522, file: !8523, line: 42, column: 6)
!8527 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8523, file: !8523, line: 56, type: !365, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !2101)
!8528 = !DILocation(line: 58, column: 2, scope: !8527)
!8529 = !DILocation(line: 62, column: 1, scope: !8527)
!8530 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8407, file: !8407, line: 4304, type: !8531, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !8533)
!8531 = !DISubroutineType(types: !8532)
!8532 = !{null, !156, !156, !156, !156}
!8533 = !{!8534, !8535, !8536, !8537}
!8534 = !DILocalVariable(name: "Source", arg: 1, scope: !8530, file: !8407, line: 4304, type: !156)
!8535 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8530, file: !8407, line: 4304, type: !156)
!8536 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8530, file: !8407, line: 4304, type: !156)
!8537 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8530, file: !8407, line: 4304, type: !156)
!8538 = !DILocation(line: 0, scope: !8530)
!8539 = !DILocation(line: 4306, column: 3, scope: !8530)
!8540 = !DILocation(line: 4308, column: 3, scope: !8530)
!8541 = !DILocation(line: 4312, column: 1, scope: !8530)
!8542 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8523, file: !8523, line: 69, type: !365, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !2101)
!8543 = !DILocation(line: 72, column: 2, scope: !8542)
!8544 = !DILocation(line: 73, column: 1, scope: !8542)
!8545 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8546, file: !8546, line: 1185, type: !6408, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !8547)
!8546 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8547 = !{!8548, !8549}
!8548 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8545, file: !8546, line: 1185, type: !156)
!8549 = !DILocalVariable(name: "tmpreg", scope: !8545, file: !8546, line: 1187, type: !452)
!8550 = !DILocation(line: 0, scope: !8545)
!8551 = !DILocation(line: 1187, column: 3, scope: !8545)
!8552 = !DILocation(line: 1187, column: 17, scope: !8545)
!8553 = !DILocation(line: 1188, column: 3, scope: !8545)
!8554 = !DILocation(line: 1190, column: 12, scope: !8545)
!8555 = !DILocation(line: 1190, column: 10, scope: !8545)
!8556 = !DILocation(line: 1191, column: 9, scope: !8545)
!8557 = !DILocation(line: 1192, column: 1, scope: !8545)
!8558 = distinct !DISubprogram(name: "uart_console_init", scope: !1121, file: !1121, line: 588, type: !1098, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1064, retainedNodes: !8559)
!8559 = !{!8560}
!8560 = !DILocalVariable(name: "arg", arg: 1, scope: !8558, file: !1121, line: 588, type: !1076)
!8561 = !DILocation(line: 0, scope: !8558)
!8562 = !DILocation(line: 593, column: 7, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8558, file: !1121, line: 593, column: 6)
!8564 = !DILocation(line: 593, column: 6, scope: !8558)
!8565 = !DILocation(line: 597, column: 2, scope: !8558)
!8566 = !DILocation(line: 599, column: 2, scope: !8558)
!8567 = !DILocation(line: 600, column: 1, scope: !8558)
!8568 = distinct !DISubprogram(name: "device_is_ready", scope: !3356, file: !3356, line: 47, type: !8569, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1064, retainedNodes: !8571)
!8569 = !DISubroutineType(types: !8570)
!8570 = !{!146, !1076}
!8571 = !{!8572}
!8572 = !DILocalVariable(name: "dev", arg: 1, scope: !8568, file: !3356, line: 47, type: !1076)
!8573 = !DILocation(line: 0, scope: !8568)
!8574 = !DILocation(line: 55, column: 2, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8568, file: !3356, line: 55, column: 2)
!8576 = !{i64 2154275940}
!8577 = !DILocation(line: 56, column: 9, scope: !8568)
!8578 = !DILocation(line: 56, column: 2, scope: !8568)
!8579 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1121, file: !1121, line: 573, type: !365, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1064, retainedNodes: !2101)
!8580 = !DILocation(line: 576, column: 2, scope: !8579)
!8581 = !DILocation(line: 579, column: 2, scope: !8579)
!8582 = !DILocation(line: 581, column: 1, scope: !8579)
!8583 = distinct !DISubprogram(name: "console_out", scope: !1121, file: !1121, line: 77, type: !439, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1064, retainedNodes: !8584)
!8584 = !{!8585}
!8585 = !DILocalVariable(name: "c", arg: 1, scope: !8583, file: !1121, line: 77, type: !118)
!8586 = !DILocation(line: 0, scope: !8583)
!8587 = !DILocation(line: 89, column: 11, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8583, file: !1121, line: 89, column: 6)
!8589 = !DILocation(line: 89, column: 6, scope: !8583)
!8590 = !DILocation(line: 90, column: 3, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8588, file: !1121, line: 89, column: 17)
!8592 = !DILocation(line: 91, column: 2, scope: !8591)
!8593 = !DILocation(line: 92, column: 34, scope: !8583)
!8594 = !DILocation(line: 92, column: 2, scope: !8583)
!8595 = !DILocation(line: 94, column: 2, scope: !8583)
!8596 = distinct !DISubprogram(name: "uart_poll_out", scope: !8597, file: !8597, line: 95, type: !1094, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1064, retainedNodes: !8598)
!8597 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/threads")
!8598 = !{!8599, !8600}
!8599 = !DILocalVariable(name: "dev", arg: 1, scope: !8596, file: !8597, line: 95, type: !1076)
!8600 = !DILocalVariable(name: "out_char", arg: 2, scope: !8596, file: !8597, line: 95, type: !144)
!8601 = !DILocation(line: 0, scope: !8596)
!8602 = !DILocation(line: 105, column: 2, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8596, file: !8597, line: 105, column: 2)
!8604 = !{i64 2154359331}
!8605 = !DILocation(line: 106, column: 2, scope: !8596)
!8606 = !DILocation(line: 107, column: 1, scope: !8596)
!8607 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1070, file: !1070, line: 574, type: !1094, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1064, retainedNodes: !8608)
!8608 = !{!8609, !8610, !8611}
!8609 = !DILocalVariable(name: "dev", arg: 1, scope: !8607, file: !1070, line: 574, type: !1076)
!8610 = !DILocalVariable(name: "out_char", arg: 2, scope: !8607, file: !1070, line: 575, type: !144)
!8611 = !DILocalVariable(name: "api", scope: !8607, file: !1070, line: 577, type: !1067)
!8612 = !DILocation(line: 0, scope: !8607)
!8613 = !DILocation(line: 578, column: 40, scope: !8607)
!8614 = !DILocation(line: 580, column: 7, scope: !8607)
!8615 = !DILocation(line: 580, column: 2, scope: !8607)
!8616 = !DILocation(line: 581, column: 1, scope: !8607)
!8617 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !8569, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1064, retainedNodes: !8618)
!8618 = !{!8619}
!8619 = !DILocalVariable(name: "dev", arg: 1, scope: !8617, file: !130, line: 730, type: !1076)
!8620 = !DILocation(line: 0, scope: !8617)
!8621 = !DILocation(line: 732, column: 9, scope: !8617)
!8622 = !DILocation(line: 732, column: 2, scope: !8617)
!8623 = distinct !DISubprogram(name: "uart_register_input", scope: !1121, file: !1121, line: 560, type: !8624, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1064, retainedNodes: !8669)
!8624 = !DISubroutineType(types: !8625)
!8625 = !{null, !8626, !8626, !8666}
!8626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8627, size: 32)
!8627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !220, line: 2208, size: 160, elements: !8628)
!8628 = !{!8629}
!8629 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8627, file: !220, line: 2209, baseType: !8630, size: 160)
!8630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !220, line: 1709, size: 160, elements: !8631)
!8631 = !{!8632, !8643, !8647}
!8632 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8630, file: !220, line: 1710, baseType: !8633, size: 64)
!8633 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !417, line: 46, baseType: !8634)
!8634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !417, line: 41, size: 64, elements: !8635)
!8635 = !{!8636, !8642}
!8636 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8634, file: !417, line: 42, baseType: !8637, size: 32)
!8637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8638, size: 32)
!8638 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !417, line: 39, baseType: !8639)
!8639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !417, line: 35, size: 32, elements: !8640)
!8640 = !{!8641}
!8641 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8639, file: !417, line: 36, baseType: !426, size: 32)
!8642 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8634, file: !417, line: 43, baseType: !8637, size: 32, offset: 32)
!8643 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8630, file: !220, line: 1711, baseType: !8644, size: 32, offset: 64)
!8644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !8645)
!8645 = !{!8646}
!8646 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8644, file: !334, line: 52, baseType: !22, size: 32)
!8647 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8630, file: !220, line: 1712, baseType: !8648, size: 64, offset: 96)
!8648 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !8649)
!8649 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !8650)
!8650 = !{!8651}
!8651 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8649, file: !261, line: 232, baseType: !8652, size: 64)
!8652 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !8653)
!8653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !8654)
!8654 = !{!8655, !8661}
!8655 = !DIDerivedType(tag: DW_TAG_member, scope: !8653, file: !235, line: 38, baseType: !8656, size: 32)
!8656 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8653, file: !235, line: 38, size: 32, elements: !8657)
!8657 = !{!8658, !8660}
!8658 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8656, file: !235, line: 39, baseType: !8659, size: 32)
!8659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8653, size: 32)
!8660 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8656, file: !235, line: 40, baseType: !8659, size: 32)
!8661 = !DIDerivedType(tag: DW_TAG_member, scope: !8653, file: !235, line: 42, baseType: !8662, size: 32, offset: 32)
!8662 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8653, file: !235, line: 42, size: 32, elements: !8663)
!8663 = !{!8664, !8665}
!8664 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8662, file: !235, line: 43, baseType: !8659, size: 32)
!8665 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8662, file: !235, line: 44, baseType: !8659, size: 32)
!8666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8667, size: 32)
!8667 = !DISubroutineType(types: !8668)
!8668 = !{!143, !1239, !143}
!8669 = !{!8670, !8671, !8672}
!8670 = !DILocalVariable(name: "avail", arg: 1, scope: !8623, file: !1121, line: 560, type: !8626)
!8671 = !DILocalVariable(name: "lines", arg: 2, scope: !8623, file: !1121, line: 560, type: !8626)
!8672 = !DILocalVariable(name: "completion", arg: 3, scope: !8623, file: !1121, line: 561, type: !8666)
!8673 = !DILocation(line: 0, scope: !8623)
!8674 = !DILocation(line: 566, column: 1, scope: !8623)
!8675 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1283, file: !1283, line: 523, type: !1146, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8676)
!8676 = !{!8677, !8678, !8679, !8680, !8681}
!8677 = !DILocalVariable(name: "dev", arg: 1, scope: !8675, file: !1283, line: 523, type: !1148)
!8678 = !DILocalVariable(name: "pin", arg: 2, scope: !8675, file: !1283, line: 524, type: !154)
!8679 = !DILocalVariable(name: "flags", arg: 3, scope: !8675, file: !1283, line: 524, type: !155)
!8680 = !DILocalVariable(name: "err", scope: !8675, file: !1283, line: 526, type: !118)
!8681 = !DILocalVariable(name: "pincfg", scope: !8675, file: !1283, line: 527, type: !118)
!8682 = !DILocation(line: 0, scope: !8675)
!8683 = !DILocation(line: 527, column: 2, scope: !8675)
!8684 = !DILocation(line: 532, column: 8, scope: !8675)
!8685 = !DILocation(line: 533, column: 10, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !8675, file: !1283, line: 533, column: 6)
!8687 = !DILocation(line: 533, column: 6, scope: !8675)
!8688 = !DILocation(line: 543, column: 13, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8675, file: !1283, line: 543, column: 6)
!8690 = !DILocation(line: 543, column: 28, scope: !8689)
!8691 = !DILocation(line: 543, column: 6, scope: !8675)
!8692 = !DILocation(line: 544, column: 14, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8694, file: !1283, line: 544, column: 7)
!8694 = distinct !DILexicalBlock(scope: !8689, file: !1283, line: 543, column: 34)
!8695 = !DILocation(line: 544, column: 39, scope: !8693)
!8696 = !DILocation(line: 544, column: 7, scope: !8694)
!8697 = !DILocation(line: 545, column: 38, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8693, file: !1283, line: 544, column: 45)
!8699 = !DILocation(line: 545, column: 4, scope: !8698)
!8700 = !DILocation(line: 546, column: 3, scope: !8698)
!8701 = !DILocation(line: 546, column: 21, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8693, file: !1283, line: 546, column: 14)
!8703 = !DILocation(line: 546, column: 45, scope: !8702)
!8704 = !DILocation(line: 546, column: 14, scope: !8693)
!8705 = !DILocation(line: 547, column: 40, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8702, file: !1283, line: 546, column: 51)
!8707 = !DILocation(line: 547, column: 4, scope: !8706)
!8708 = !DILocation(line: 548, column: 3, scope: !8706)
!8709 = !DILocation(line: 551, column: 32, scope: !8675)
!8710 = !DILocation(line: 551, column: 37, scope: !8675)
!8711 = !DILocation(line: 551, column: 2, scope: !8675)
!8712 = !DILocation(line: 554, column: 6, scope: !8675)
!8713 = !DILocation(line: 562, column: 1, scope: !8675)
!8714 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1283, file: !1283, line: 410, type: !8715, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8717)
!8715 = !DISubroutineType(types: !8716)
!8716 = !{!118, !1148, !986}
!8717 = !{!8718, !8719, !8720, !8722}
!8718 = !DILocalVariable(name: "dev", arg: 1, scope: !8714, file: !1283, line: 410, type: !1148)
!8719 = !DILocalVariable(name: "value", arg: 2, scope: !8714, file: !1283, line: 410, type: !986)
!8720 = !DILocalVariable(name: "cfg", scope: !8714, file: !1283, line: 412, type: !8721)
!8721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 32)
!8722 = !DILocalVariable(name: "gpio", scope: !8714, file: !1283, line: 413, type: !1215)
!8723 = !DILocation(line: 0, scope: !8714)
!8724 = !DILocation(line: 412, column: 45, scope: !8714)
!8725 = !DILocation(line: 413, column: 44, scope: !8714)
!8726 = !DILocation(line: 415, column: 11, scope: !8714)
!8727 = !DILocation(line: 415, column: 9, scope: !8714)
!8728 = !DILocation(line: 417, column: 2, scope: !8714)
!8729 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1283, file: !1283, line: 420, type: !1169, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8730)
!8730 = !{!8731, !8732, !8733, !8734, !8735, !8736}
!8731 = !DILocalVariable(name: "dev", arg: 1, scope: !8729, file: !1283, line: 420, type: !1148)
!8732 = !DILocalVariable(name: "mask", arg: 2, scope: !8729, file: !1283, line: 421, type: !167)
!8733 = !DILocalVariable(name: "value", arg: 3, scope: !8729, file: !1283, line: 422, type: !162)
!8734 = !DILocalVariable(name: "cfg", scope: !8729, file: !1283, line: 424, type: !8721)
!8735 = !DILocalVariable(name: "gpio", scope: !8729, file: !1283, line: 425, type: !1215)
!8736 = !DILocalVariable(name: "port_value", scope: !8729, file: !1283, line: 426, type: !156)
!8737 = !DILocation(line: 0, scope: !8729)
!8738 = !DILocation(line: 424, column: 45, scope: !8729)
!8739 = !DILocation(line: 425, column: 44, scope: !8729)
!8740 = !DILocation(line: 430, column: 15, scope: !8729)
!8741 = !DILocation(line: 431, column: 46, scope: !8729)
!8742 = !DILocation(line: 431, column: 44, scope: !8729)
!8743 = !DILocation(line: 431, column: 61, scope: !8729)
!8744 = !DILocation(line: 431, column: 53, scope: !8729)
!8745 = !DILocation(line: 431, column: 2, scope: !8729)
!8746 = !DILocation(line: 435, column: 2, scope: !8729)
!8747 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1283, file: !1283, line: 438, type: !1173, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8748)
!8748 = !{!8749, !8750, !8751, !8752}
!8749 = !DILocalVariable(name: "dev", arg: 1, scope: !8747, file: !1283, line: 438, type: !1148)
!8750 = !DILocalVariable(name: "pins", arg: 2, scope: !8747, file: !1283, line: 439, type: !167)
!8751 = !DILocalVariable(name: "cfg", scope: !8747, file: !1283, line: 441, type: !8721)
!8752 = !DILocalVariable(name: "gpio", scope: !8747, file: !1283, line: 442, type: !1215)
!8753 = !DILocation(line: 0, scope: !8747)
!8754 = !DILocation(line: 441, column: 45, scope: !8747)
!8755 = !DILocation(line: 442, column: 44, scope: !8747)
!8756 = !DILocation(line: 448, column: 2, scope: !8747)
!8757 = !DILocation(line: 450, column: 2, scope: !8747)
!8758 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1283, file: !1283, line: 453, type: !1173, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8759)
!8759 = !{!8760, !8761, !8762, !8763}
!8760 = !DILocalVariable(name: "dev", arg: 1, scope: !8758, file: !1283, line: 453, type: !1148)
!8761 = !DILocalVariable(name: "pins", arg: 2, scope: !8758, file: !1283, line: 454, type: !167)
!8762 = !DILocalVariable(name: "cfg", scope: !8758, file: !1283, line: 456, type: !8721)
!8763 = !DILocalVariable(name: "gpio", scope: !8758, file: !1283, line: 457, type: !1215)
!8764 = !DILocation(line: 0, scope: !8758)
!8765 = !DILocation(line: 456, column: 45, scope: !8758)
!8766 = !DILocation(line: 457, column: 44, scope: !8758)
!8767 = !DILocation(line: 467, column: 2, scope: !8758)
!8768 = !DILocation(line: 470, column: 2, scope: !8758)
!8769 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1283, file: !1283, line: 473, type: !1173, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8770)
!8770 = !{!8771, !8772, !8773, !8774}
!8771 = !DILocalVariable(name: "dev", arg: 1, scope: !8769, file: !1283, line: 473, type: !1148)
!8772 = !DILocalVariable(name: "pins", arg: 2, scope: !8769, file: !1283, line: 474, type: !167)
!8773 = !DILocalVariable(name: "cfg", scope: !8769, file: !1283, line: 476, type: !8721)
!8774 = !DILocalVariable(name: "gpio", scope: !8769, file: !1283, line: 477, type: !1215)
!8775 = !DILocation(line: 0, scope: !8769)
!8776 = !DILocation(line: 476, column: 45, scope: !8769)
!8777 = !DILocation(line: 477, column: 44, scope: !8769)
!8778 = !DILocation(line: 484, column: 2, scope: !8769)
!8779 = !DILocation(line: 487, column: 2, scope: !8769)
!8780 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1283, file: !1283, line: 594, type: !1179, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8781)
!8781 = !{!8782, !8783, !8784, !8785, !8786, !8787, !8789, !8790, !8791}
!8782 = !DILocalVariable(name: "dev", arg: 1, scope: !8780, file: !1283, line: 594, type: !1148)
!8783 = !DILocalVariable(name: "pin", arg: 2, scope: !8780, file: !1283, line: 595, type: !154)
!8784 = !DILocalVariable(name: "mode", arg: 3, scope: !8780, file: !1283, line: 596, type: !101)
!8785 = !DILocalVariable(name: "trig", arg: 4, scope: !8780, file: !1283, line: 597, type: !107)
!8786 = !DILocalVariable(name: "cfg", scope: !8780, file: !1283, line: 599, type: !8721)
!8787 = !DILocalVariable(name: "data", scope: !8780, file: !1283, line: 600, type: !8788)
!8788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 32)
!8789 = !DILocalVariable(name: "edge", scope: !8780, file: !1283, line: 601, type: !118)
!8790 = !DILocalVariable(name: "err", scope: !8780, file: !1283, line: 602, type: !118)
!8791 = !DILabel(scope: !8780, name: "exit", file: !1283, line: 643)
!8792 = !DILocation(line: 0, scope: !8780)
!8793 = !DILocation(line: 599, column: 45, scope: !8780)
!8794 = !DILocation(line: 604, column: 6, scope: !8780)
!8795 = !DILocation(line: 605, column: 34, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8797, file: !1283, line: 605, column: 7)
!8797 = distinct !DILexicalBlock(scope: !8798, file: !1283, line: 604, column: 38)
!8798 = distinct !DILexicalBlock(scope: !8780, file: !1283, line: 604, column: 6)
!8799 = !DILocation(line: 605, column: 7, scope: !8796)
!8800 = !DILocation(line: 605, column: 47, scope: !8796)
!8801 = !DILocation(line: 605, column: 39, scope: !8796)
!8802 = !DILocation(line: 605, column: 7, scope: !8797)
!8803 = !DILocation(line: 606, column: 4, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8796, file: !1283, line: 605, column: 53)
!8805 = !DILocation(line: 607, column: 4, scope: !8804)
!8806 = !DILocation(line: 608, column: 4, scope: !8804)
!8807 = !DILocation(line: 609, column: 3, scope: !8804)
!8808 = !DILocation(line: 600, column: 38, scope: !8780)
!8809 = !DILocation(line: 620, column: 30, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8780, file: !1283, line: 620, column: 6)
!8811 = !DILocation(line: 620, column: 6, scope: !8810)
!8812 = !DILocation(line: 620, column: 57, scope: !8810)
!8813 = !DILocation(line: 620, column: 6, scope: !8780)
!8814 = !DILocation(line: 625, column: 29, scope: !8780)
!8815 = !DILocation(line: 625, column: 2, scope: !8780)
!8816 = !DILocation(line: 627, column: 2, scope: !8780)
!8817 = !DILocation(line: 630, column: 3, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8780, file: !1283, line: 627, column: 16)
!8819 = !DILocation(line: 633, column: 3, scope: !8818)
!8820 = !DILocation(line: 636, column: 3, scope: !8818)
!8821 = !DILocation(line: 639, column: 2, scope: !8780)
!8822 = !DILocation(line: 641, column: 2, scope: !8780)
!8823 = !DILocation(line: 643, column: 1, scope: !8780)
!8824 = !DILocation(line: 644, column: 2, scope: !8780)
!8825 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1283, file: !1283, line: 647, type: !1183, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8826)
!8826 = !{!8827, !8828, !8829, !8830}
!8827 = !DILocalVariable(name: "dev", arg: 1, scope: !8825, file: !1283, line: 647, type: !1148)
!8828 = !DILocalVariable(name: "callback", arg: 2, scope: !8825, file: !1283, line: 648, type: !1185)
!8829 = !DILocalVariable(name: "set", arg: 3, scope: !8825, file: !1283, line: 649, type: !146)
!8830 = !DILocalVariable(name: "data", scope: !8825, file: !1283, line: 651, type: !8788)
!8831 = !DILocation(line: 0, scope: !8825)
!8832 = !DILocation(line: 651, column: 38, scope: !8825)
!8833 = !DILocation(line: 653, column: 37, scope: !8825)
!8834 = !DILocation(line: 653, column: 9, scope: !8825)
!8835 = !DILocation(line: 653, column: 2, scope: !8825)
!8836 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8837, file: !8837, line: 38, type: !8838, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8841)
!8837 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8838 = !DISubroutineType(types: !8839)
!8839 = !{!118, !8840, !1185, !146}
!8840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 32)
!8841 = !{!8842, !8843, !8844}
!8842 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8836, file: !8837, line: 38, type: !8840)
!8843 = !DILocalVariable(name: "callback", arg: 2, scope: !8836, file: !8837, line: 39, type: !1185)
!8844 = !DILocalVariable(name: "set", arg: 3, scope: !8836, file: !8837, line: 40, type: !146)
!8845 = !DILocation(line: 0, scope: !8836)
!8846 = !DILocation(line: 42, column: 2, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8848, file: !8837, line: 42, column: 2)
!8848 = distinct !DILexicalBlock(scope: !8836, file: !8837, line: 42, column: 2)
!8849 = !DILocation(line: 42, column: 2, scope: !8848)
!8850 = !DILocation(line: 42, column: 2, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8847, file: !8837, line: 42, column: 2)
!8852 = !DILocation(line: 43, column: 2, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8854, file: !8837, line: 43, column: 2)
!8854 = distinct !DILexicalBlock(scope: !8836, file: !8837, line: 43, column: 2)
!8855 = !DILocation(line: 43, column: 2, scope: !8854)
!8856 = !DILocation(line: 43, column: 2, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8853, file: !8837, line: 43, column: 2)
!8858 = !DILocation(line: 45, column: 7, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8836, file: !8837, line: 45, column: 6)
!8860 = !DILocation(line: 45, column: 6, scope: !8836)
!8861 = !DILocation(line: 46, column: 56, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8863, file: !8837, line: 46, column: 7)
!8863 = distinct !DILexicalBlock(scope: !8859, file: !8837, line: 45, column: 38)
!8864 = !DILocation(line: 46, column: 8, scope: !8862)
!8865 = !DILocation(line: 46, column: 7, scope: !8863)
!8866 = !DILocation(line: 51, column: 13, scope: !8859)
!8867 = !DILocation(line: 56, column: 43, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8869, file: !8837, line: 55, column: 11)
!8869 = distinct !DILexicalBlock(scope: !8836, file: !8837, line: 55, column: 6)
!8870 = !DILocation(line: 56, column: 3, scope: !8868)
!8871 = !DILocation(line: 57, column: 2, scope: !8868)
!8872 = !DILocation(line: 60, column: 1, scope: !8836)
!8873 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !187, file: !187, line: 261, type: !8874, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8876)
!8874 = !DISubroutineType(types: !8875)
!8875 = !{!146, !8840}
!8876 = !{!8877}
!8877 = !DILocalVariable(name: "list", arg: 1, scope: !8873, file: !187, line: 261, type: !8840)
!8878 = !DILocation(line: 0, scope: !8873)
!8879 = !DILocation(line: 261, column: 1, scope: !8873)
!8880 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !187, file: !187, line: 417, type: !8881, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8883)
!8881 = !DISubroutineType(types: !8882)
!8882 = !{!146, !8840, !1356}
!8883 = !{!8884, !8885, !8886, !8887}
!8884 = !DILocalVariable(name: "list", arg: 1, scope: !8880, file: !187, line: 417, type: !8840)
!8885 = !DILocalVariable(name: "node", arg: 2, scope: !8880, file: !187, line: 417, type: !1356)
!8886 = !DILocalVariable(name: "prev", scope: !8880, file: !187, line: 417, type: !1356)
!8887 = !DILocalVariable(name: "test", scope: !8880, file: !187, line: 417, type: !1356)
!8888 = !DILocation(line: 0, scope: !8880)
!8889 = !DILocation(line: 417, column: 1, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8880, file: !187, line: 417, column: 1)
!8891 = !DILocation(line: 417, column: 1, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8890, file: !187, line: 417, column: 1)
!8893 = !DILocation(line: 417, column: 1, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8895, file: !187, line: 417, column: 1)
!8895 = distinct !DILexicalBlock(scope: !8892, file: !187, line: 417, column: 1)
!8896 = !DILocation(line: 417, column: 1, scope: !8895)
!8897 = distinct !{!8897, !8889, !8889}
!8898 = !DILocation(line: 417, column: 1, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8894, file: !187, line: 417, column: 1)
!8900 = !DILocation(line: 417, column: 1, scope: !8880)
!8901 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !187, file: !187, line: 298, type: !8902, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8904)
!8902 = !DISubroutineType(types: !8903)
!8903 = !{null, !8840, !1356}
!8904 = !{!8905, !8906}
!8905 = !DILocalVariable(name: "list", arg: 1, scope: !8901, file: !187, line: 298, type: !8840)
!8906 = !DILocalVariable(name: "node", arg: 2, scope: !8901, file: !187, line: 298, type: !1356)
!8907 = !DILocation(line: 0, scope: !8901)
!8908 = !DILocation(line: 298, column: 1, scope: !8901)
!8909 = !DILocation(line: 298, column: 1, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8901, file: !187, line: 298, column: 1)
!8911 = !DILocation(line: 298, column: 1, scope: !8912)
!8912 = distinct !DILexicalBlock(scope: !8910, file: !187, line: 298, column: 1)
!8913 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !187, file: !187, line: 231, type: !8914, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8916)
!8914 = !DISubroutineType(types: !8915)
!8915 = !{!1356, !8840}
!8916 = !{!8917}
!8917 = !DILocalVariable(name: "list", arg: 1, scope: !8913, file: !187, line: 231, type: !8840)
!8918 = !DILocation(line: 0, scope: !8913)
!8919 = !DILocation(line: 233, column: 15, scope: !8913)
!8920 = !DILocation(line: 233, column: 2, scope: !8913)
!8921 = distinct !DISubprogram(name: "z_snode_next_set", scope: !187, file: !187, line: 209, type: !8922, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8924)
!8922 = !DISubroutineType(types: !8923)
!8923 = !{null, !1356, !1356}
!8924 = !{!8925, !8926}
!8925 = !DILocalVariable(name: "parent", arg: 1, scope: !8921, file: !187, line: 209, type: !1356)
!8926 = !DILocalVariable(name: "child", arg: 2, scope: !8921, file: !187, line: 209, type: !1356)
!8927 = !DILocation(line: 0, scope: !8921)
!8928 = !DILocation(line: 211, column: 10, scope: !8921)
!8929 = !DILocation(line: 211, column: 15, scope: !8921)
!8930 = !DILocation(line: 212, column: 1, scope: !8921)
!8931 = distinct !DISubprogram(name: "z_slist_head_set", scope: !187, file: !187, line: 214, type: !8902, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8932)
!8932 = !{!8933, !8934}
!8933 = !DILocalVariable(name: "list", arg: 1, scope: !8931, file: !187, line: 214, type: !8840)
!8934 = !DILocalVariable(name: "node", arg: 2, scope: !8931, file: !187, line: 214, type: !1356)
!8935 = !DILocation(line: 0, scope: !8931)
!8936 = !DILocation(line: 216, column: 8, scope: !8931)
!8937 = !DILocation(line: 216, column: 13, scope: !8931)
!8938 = !DILocation(line: 217, column: 1, scope: !8931)
!8939 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !187, file: !187, line: 243, type: !8914, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8940)
!8940 = !{!8941}
!8941 = !DILocalVariable(name: "list", arg: 1, scope: !8939, file: !187, line: 243, type: !8840)
!8942 = !DILocation(line: 0, scope: !8939)
!8943 = !DILocation(line: 245, column: 15, scope: !8939)
!8944 = !DILocation(line: 245, column: 2, scope: !8939)
!8945 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !187, file: !187, line: 219, type: !8902, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8946)
!8946 = !{!8947, !8948}
!8947 = !DILocalVariable(name: "list", arg: 1, scope: !8945, file: !187, line: 219, type: !8840)
!8948 = !DILocalVariable(name: "node", arg: 2, scope: !8945, file: !187, line: 219, type: !1356)
!8949 = !DILocation(line: 0, scope: !8945)
!8950 = !DILocation(line: 221, column: 8, scope: !8945)
!8951 = !DILocation(line: 221, column: 13, scope: !8945)
!8952 = !DILocation(line: 222, column: 1, scope: !8945)
!8953 = distinct !DISubprogram(name: "sys_slist_remove", scope: !187, file: !187, line: 401, type: !8954, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8956)
!8954 = !DISubroutineType(types: !8955)
!8955 = !{null, !8840, !1356, !1356}
!8956 = !{!8957, !8958, !8959}
!8957 = !DILocalVariable(name: "list", arg: 1, scope: !8953, file: !187, line: 401, type: !8840)
!8958 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8953, file: !187, line: 401, type: !1356)
!8959 = !DILocalVariable(name: "node", arg: 3, scope: !8953, file: !187, line: 401, type: !1356)
!8960 = !DILocation(line: 0, scope: !8953)
!8961 = !DILocation(line: 401, column: 1, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8953, file: !187, line: 401, column: 1)
!8963 = !DILocation(line: 0, scope: !8962)
!8964 = !DILocation(line: 401, column: 1, scope: !8953)
!8965 = !DILocation(line: 401, column: 1, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8962, file: !187, line: 401, column: 1)
!8967 = !DILocation(line: 401, column: 1, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8966, file: !187, line: 401, column: 1)
!8969 = !DILocation(line: 401, column: 1, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8968, file: !187, line: 401, column: 1)
!8971 = !DILocation(line: 401, column: 1, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8962, file: !187, line: 401, column: 1)
!8973 = !DILocation(line: 401, column: 1, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8972, file: !187, line: 401, column: 1)
!8975 = !DILocation(line: 401, column: 1, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8974, file: !187, line: 401, column: 1)
!8977 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !187, file: !187, line: 285, type: !8978, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8980)
!8978 = !DISubroutineType(types: !8979)
!8979 = !{!1356, !1356}
!8980 = !{!8981}
!8981 = !DILocalVariable(name: "node", arg: 1, scope: !8977, file: !187, line: 285, type: !1356)
!8982 = !DILocation(line: 0, scope: !8977)
!8983 = !DILocation(line: 285, column: 1, scope: !8977)
!8984 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !187, file: !187, line: 274, type: !8978, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8985)
!8985 = !{!8986}
!8986 = !DILocalVariable(name: "node", arg: 1, scope: !8984, file: !187, line: 274, type: !1356)
!8987 = !DILocation(line: 0, scope: !8984)
!8988 = !DILocation(line: 274, column: 1, scope: !8984)
!8989 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !187, file: !187, line: 204, type: !8978, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8990)
!8990 = !{!8991}
!8991 = !DILocalVariable(name: "node", arg: 1, scope: !8989, file: !187, line: 204, type: !1356)
!8992 = !DILocation(line: 0, scope: !8989)
!8993 = !DILocation(line: 206, column: 15, scope: !8989)
!8994 = !DILocation(line: 206, column: 2, scope: !8989)
!8995 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1283, file: !1283, line: 342, type: !439, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8996)
!8996 = !{!8997, !8998, !8999}
!8997 = !DILocalVariable(name: "pin", arg: 1, scope: !8995, file: !1283, line: 342, type: !118)
!8998 = !DILocalVariable(name: "line", scope: !8995, file: !1283, line: 344, type: !156)
!8999 = !DILocalVariable(name: "port", scope: !8995, file: !1283, line: 345, type: !118)
!9000 = !DILocation(line: 0, scope: !8995)
!9001 = !DILocation(line: 344, column: 18, scope: !8995)
!9002 = !{i32 983040, i32 0}
!9003 = !DILocation(line: 356, column: 9, scope: !8995)
!9004 = !DILocation(line: 370, column: 2, scope: !8995)
!9005 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1283, file: !1283, line: 37, type: !849, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9006)
!9006 = !{!9007, !9008, !9009}
!9007 = !DILocalVariable(name: "line", arg: 1, scope: !9005, file: !1283, line: 37, type: !118)
!9008 = !DILocalVariable(name: "arg", arg: 2, scope: !9005, file: !1283, line: 37, type: !117)
!9009 = !DILocalVariable(name: "data", scope: !9005, file: !1283, line: 39, type: !8788)
!9010 = !DILocation(line: 0, scope: !9005)
!9011 = !DILocation(line: 41, column: 29, scope: !9005)
!9012 = !DILocation(line: 41, column: 39, scope: !9005)
!9013 = !DILocation(line: 41, column: 44, scope: !9005)
!9014 = !DILocation(line: 41, column: 2, scope: !9005)
!9015 = !DILocation(line: 42, column: 1, scope: !9005)
!9016 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1283, file: !1283, line: 376, type: !9017, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9019)
!9017 = !DISubroutineType(types: !9018)
!9018 = !{!118, !118, !118}
!9019 = !{!9020, !9021, !9022, !9024, !9025}
!9020 = !DILocalVariable(name: "port", arg: 1, scope: !9016, file: !1283, line: 376, type: !118)
!9021 = !DILocalVariable(name: "pin", arg: 2, scope: !9016, file: !1283, line: 376, type: !118)
!9022 = !DILocalVariable(name: "clk", scope: !9016, file: !1283, line: 386, type: !9023)
!9023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1148)
!9024 = !DILocalVariable(name: "pclken", scope: !9016, file: !1283, line: 387, type: !1399)
!9025 = !DILocalVariable(name: "ret", scope: !9016, file: !1283, line: 396, type: !118)
!9026 = !DILocation(line: 0, scope: !9016)
!9027 = !DILocation(line: 387, column: 2, scope: !9016)
!9028 = !DILocation(line: 387, column: 22, scope: !9016)
!9029 = !DILocation(line: 399, column: 8, scope: !9016)
!9030 = !DILocation(line: 400, column: 10, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9016, file: !1283, line: 400, column: 6)
!9032 = !DILocation(line: 400, column: 6, scope: !9016)
!9033 = !DILocation(line: 405, column: 2, scope: !9016)
!9034 = !DILocation(line: 407, column: 2, scope: !9016)
!9035 = !DILocation(line: 408, column: 1, scope: !9016)
!9036 = distinct !DISubprogram(name: "clock_control_on", scope: !935, file: !935, line: 123, type: !1248, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9037)
!9037 = !{!9038, !9039, !9040}
!9038 = !DILocalVariable(name: "dev", arg: 1, scope: !9036, file: !935, line: 123, type: !1148)
!9039 = !DILocalVariable(name: "sys", arg: 2, scope: !9036, file: !935, line: 124, type: !1030)
!9040 = !DILocalVariable(name: "api", scope: !9036, file: !935, line: 126, type: !1241)
!9041 = !DILocation(line: 0, scope: !9036)
!9042 = !DILocation(line: 127, column: 49, scope: !9036)
!9043 = !DILocation(line: 129, column: 14, scope: !9036)
!9044 = !DILocation(line: 129, column: 9, scope: !9036)
!9045 = !DILocation(line: 129, column: 2, scope: !9036)
!9046 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1283, file: !1283, line: 311, type: !8168, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9047)
!9047 = !{!9048, !9049, !9050}
!9048 = !DILocalVariable(name: "port", arg: 1, scope: !9046, file: !1283, line: 311, type: !118)
!9049 = !DILocalVariable(name: "pin", arg: 2, scope: !9046, file: !1283, line: 311, type: !118)
!9050 = !DILocalVariable(name: "line", scope: !9046, file: !1283, line: 313, type: !156)
!9051 = !DILocation(line: 0, scope: !9046)
!9052 = !DILocation(line: 313, column: 18, scope: !9046)
!9053 = !DILocation(line: 337, column: 2, scope: !9046)
!9054 = !DILocation(line: 340, column: 1, scope: !9046)
!9055 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1283, file: !1283, line: 295, type: !9056, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9058)
!9056 = !DISubroutineType(types: !9057)
!9057 = !{!156, !118}
!9058 = !{!9059}
!9059 = !DILocalVariable(name: "pin", arg: 1, scope: !9055, file: !1283, line: 295, type: !118)
!9060 = !DILocation(line: 0, scope: !9055)
!9061 = !DILocation(line: 307, column: 46, scope: !9055)
!9062 = !DILocation(line: 307, column: 27, scope: !9055)
!9063 = !DILocation(line: 307, column: 32, scope: !9055)
!9064 = !DILocation(line: 307, column: 14, scope: !9055)
!9065 = !DILocation(line: 307, column: 39, scope: !9055)
!9066 = !DILocation(line: 307, column: 2, scope: !9055)
!9067 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6158, file: !6158, line: 671, type: !9068, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9070)
!9068 = !DISubroutineType(types: !9069)
!9069 = !{null, !156, !156}
!9070 = !{!9071, !9072}
!9071 = !DILocalVariable(name: "Port", arg: 1, scope: !9067, file: !6158, line: 671, type: !156)
!9072 = !DILocalVariable(name: "Line", arg: 2, scope: !9067, file: !6158, line: 671, type: !156)
!9073 = !DILocation(line: 0, scope: !9067)
!9074 = !DILocation(line: 673, column: 3, scope: !9067)
!9075 = !DILocalVariable(name: "value", arg: 1, scope: !9076, file: !6311, line: 373, type: !156)
!9076 = distinct !DISubprogram(name: "__RBIT", scope: !6311, file: !6311, line: 373, type: !7357, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9077)
!9077 = !{!9075, !9078}
!9078 = !DILocalVariable(name: "result", scope: !9076, file: !6311, line: 375, type: !156)
!9079 = !DILocation(line: 0, scope: !9076, inlinedAt: !9080)
!9080 = distinct !DILocation(line: 673, column: 3, scope: !9067)
!9081 = !DILocation(line: 380, column: 4, scope: !9076, inlinedAt: !9080)
!9082 = !{i64 2833972}
!9083 = !DILocalVariable(name: "value", arg: 1, scope: !9084, file: !6311, line: 403, type: !156)
!9084 = distinct !DISubprogram(name: "__CLZ", scope: !6311, file: !6311, line: 403, type: !9085, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9087)
!9085 = !DISubroutineType(types: !9086)
!9086 = !{!143, !156}
!9087 = !{!9083}
!9088 = !DILocation(line: 0, scope: !9084, inlinedAt: !9089)
!9089 = distinct !DILocation(line: 673, column: 3, scope: !9067)
!9090 = !DILocation(line: 414, column: 7, scope: !9084, inlinedAt: !9089)
!9091 = !DILocation(line: 674, column: 1, scope: !9067)
!9092 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8837, file: !8837, line: 69, type: !9093, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9095)
!9093 = !DISubroutineType(types: !9094)
!9094 = !{null, !8840, !1148, !156}
!9095 = !{!9096, !9097, !9098, !9099, !9100}
!9096 = !DILocalVariable(name: "list", arg: 1, scope: !9092, file: !8837, line: 69, type: !8840)
!9097 = !DILocalVariable(name: "port", arg: 2, scope: !9092, file: !8837, line: 70, type: !1148)
!9098 = !DILocalVariable(name: "pins", arg: 3, scope: !9092, file: !8837, line: 71, type: !156)
!9099 = !DILocalVariable(name: "cb", scope: !9092, file: !8837, line: 73, type: !1185)
!9100 = !DILocalVariable(name: "tmp", scope: !9092, file: !8837, line: 73, type: !1185)
!9101 = !DILocation(line: 0, scope: !9092)
!9102 = !DILocation(line: 75, column: 2, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9092, file: !8837, line: 75, column: 2)
!9104 = !DILocation(line: 0, scope: !9103)
!9105 = !DILocation(line: 76, column: 11, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9107, file: !8837, line: 76, column: 7)
!9107 = distinct !DILexicalBlock(scope: !9108, file: !8837, line: 75, column: 57)
!9108 = distinct !DILexicalBlock(scope: !9103, file: !8837, line: 75, column: 2)
!9109 = !DILocation(line: 76, column: 20, scope: !9106)
!9110 = !DILocation(line: 76, column: 7, scope: !9107)
!9111 = !DILocation(line: 77, column: 4, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9113, file: !8837, line: 77, column: 4)
!9113 = distinct !DILexicalBlock(scope: !9114, file: !8837, line: 77, column: 4)
!9114 = distinct !DILexicalBlock(scope: !9106, file: !8837, line: 76, column: 28)
!9115 = !DILocation(line: 77, column: 4, scope: !9113)
!9116 = !DILocation(line: 77, column: 4, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9112, file: !8837, line: 77, column: 4)
!9118 = !DILocation(line: 78, column: 4, scope: !9114)
!9119 = !DILocation(line: 79, column: 3, scope: !9114)
!9120 = !DILocation(line: 75, column: 2, scope: !9108)
!9121 = !DILocation(line: 81, column: 1, scope: !9092)
!9122 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6158, file: !6158, line: 710, type: !7357, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9123)
!9123 = !{!9124}
!9124 = !DILocalVariable(name: "Line", arg: 1, scope: !9122, file: !6158, line: 710, type: !156)
!9125 = !DILocation(line: 0, scope: !9122)
!9126 = !DILocation(line: 712, column: 21, scope: !9122)
!9127 = !DILocation(line: 0, scope: !9076, inlinedAt: !9128)
!9128 = distinct !DILocation(line: 712, column: 76, scope: !9122)
!9129 = !DILocation(line: 380, column: 4, scope: !9076, inlinedAt: !9128)
!9130 = !DILocation(line: 0, scope: !9084, inlinedAt: !9131)
!9131 = distinct !DILocation(line: 712, column: 76, scope: !9122)
!9132 = !DILocation(line: 414, column: 7, scope: !9084, inlinedAt: !9131)
!9133 = !DILocation(line: 712, column: 73, scope: !9122)
!9134 = !DILocation(line: 712, column: 3, scope: !9122)
!9135 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9136, file: !9136, line: 910, type: !9137, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9139)
!9136 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9137 = !DISubroutineType(types: !9138)
!9138 = !{null, !1215, !156}
!9139 = !{!9140, !9141}
!9140 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9135, file: !9136, line: 910, type: !1215)
!9141 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9135, file: !9136, line: 910, type: !156)
!9142 = !DILocation(line: 0, scope: !9135)
!9143 = !DILocation(line: 912, column: 3, scope: !9135)
!9144 = !DILocation(line: 913, column: 1, scope: !9135)
!9145 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9136, file: !9136, line: 823, type: !9146, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9148)
!9146 = !DISubroutineType(types: !9147)
!9147 = !{!156, !1215}
!9148 = !{!9149}
!9149 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9145, file: !9136, line: 823, type: !1215)
!9150 = !DILocation(line: 0, scope: !9145)
!9151 = !DILocation(line: 825, column: 21, scope: !9145)
!9152 = !DILocation(line: 825, column: 3, scope: !9145)
!9153 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9136, file: !9136, line: 812, type: !9137, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9154)
!9154 = !{!9155, !9156}
!9155 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9153, file: !9136, line: 812, type: !1215)
!9156 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9153, file: !9136, line: 812, type: !156)
!9157 = !DILocation(line: 0, scope: !9153)
!9158 = !DILocation(line: 814, column: 3, scope: !9153)
!9159 = !DILocation(line: 815, column: 1, scope: !9153)
!9160 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9136, file: !9136, line: 771, type: !9146, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9161)
!9161 = !{!9162}
!9162 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9160, file: !9136, line: 771, type: !1215)
!9163 = !DILocation(line: 0, scope: !9160)
!9164 = !DILocation(line: 773, column: 21, scope: !9160)
!9165 = !DILocation(line: 773, column: 3, scope: !9160)
!9166 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1283, file: !1283, line: 47, type: !9167, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9169)
!9167 = !DISubroutineType(types: !9168)
!9168 = !{!118, !155, !2579}
!9169 = !{!9170, !9171}
!9170 = !DILocalVariable(name: "flags", arg: 1, scope: !9166, file: !1283, line: 47, type: !155)
!9171 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9166, file: !1283, line: 47, type: !2579)
!9172 = !DILocation(line: 0, scope: !9166)
!9173 = !DILocation(line: 50, column: 13, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9166, file: !1283, line: 50, column: 6)
!9175 = !DILocation(line: 50, column: 28, scope: !9174)
!9176 = !DILocation(line: 50, column: 6, scope: !9166)
!9177 = !DILocation(line: 53, column: 11, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9174, file: !1283, line: 50, column: 34)
!9179 = !DILocation(line: 55, column: 14, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9178, file: !1283, line: 55, column: 7)
!9181 = !DILocation(line: 55, column: 35, scope: !9180)
!9182 = !DILocation(line: 55, column: 7, scope: !9178)
!9183 = !DILocation(line: 56, column: 14, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9185, file: !1283, line: 56, column: 8)
!9185 = distinct !DILexicalBlock(scope: !9180, file: !1283, line: 55, column: 41)
!9186 = !DILocation(line: 56, column: 8, scope: !9185)
!9187 = !DILocation(line: 0, scope: !9180)
!9188 = !DILocation(line: 66, column: 14, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9178, file: !1283, line: 66, column: 7)
!9190 = !DILocation(line: 66, column: 30, scope: !9189)
!9191 = !DILocation(line: 66, column: 7, scope: !9178)
!9192 = !DILocation(line: 67, column: 12, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !9189, file: !1283, line: 66, column: 36)
!9194 = !DILocation(line: 68, column: 3, scope: !9193)
!9195 = !DILocation(line: 68, column: 21, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9189, file: !1283, line: 68, column: 14)
!9197 = !DILocation(line: 68, column: 39, scope: !9196)
!9198 = !DILocation(line: 68, column: 14, scope: !9189)
!9199 = !DILocation(line: 69, column: 12, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9196, file: !1283, line: 68, column: 45)
!9201 = !DILocation(line: 70, column: 3, scope: !9200)
!9202 = !DILocation(line: 72, column: 21, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9174, file: !1283, line: 72, column: 14)
!9204 = !DILocation(line: 72, column: 35, scope: !9203)
!9205 = !DILocation(line: 72, column: 14, scope: !9174)
!9206 = !DILocation(line: 77, column: 14, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9208, file: !1283, line: 77, column: 7)
!9208 = distinct !DILexicalBlock(scope: !9203, file: !1283, line: 72, column: 41)
!9209 = !DILocation(line: 77, column: 30, scope: !9207)
!9210 = !DILocation(line: 77, column: 7, scope: !9208)
!9211 = !DILocation(line: 0, scope: !9174)
!9212 = !DILocation(line: 90, column: 1, scope: !9166)
!9213 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1283, file: !1283, line: 157, type: !9214, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9216)
!9214 = !DISubroutineType(types: !9215)
!9215 = !{null, !1148, !118, !118, !118}
!9216 = !{!9217, !9218, !9219, !9220, !9221, !9222, !9223, !9224, !9225, !9226, !9227}
!9217 = !DILocalVariable(name: "dev", arg: 1, scope: !9213, file: !1283, line: 157, type: !1148)
!9218 = !DILocalVariable(name: "pin", arg: 2, scope: !9213, file: !1283, line: 157, type: !118)
!9219 = !DILocalVariable(name: "conf", arg: 3, scope: !9213, file: !1283, line: 158, type: !118)
!9220 = !DILocalVariable(name: "func", arg: 4, scope: !9213, file: !1283, line: 158, type: !118)
!9221 = !DILocalVariable(name: "cfg", scope: !9213, file: !1283, line: 160, type: !8721)
!9222 = !DILocalVariable(name: "gpio", scope: !9213, file: !1283, line: 161, type: !1215)
!9223 = !DILocalVariable(name: "pin_ll", scope: !9213, file: !1283, line: 163, type: !118)
!9224 = !DILocalVariable(name: "mode", scope: !9213, file: !1283, line: 227, type: !32)
!9225 = !DILocalVariable(name: "otype", scope: !9213, file: !1283, line: 227, type: !32)
!9226 = !DILocalVariable(name: "ospeed", scope: !9213, file: !1283, line: 227, type: !32)
!9227 = !DILocalVariable(name: "pupd", scope: !9213, file: !1283, line: 227, type: !32)
!9228 = !DILocation(line: 0, scope: !9213)
!9229 = !DILocation(line: 160, column: 45, scope: !9213)
!9230 = !DILocation(line: 161, column: 44, scope: !9213)
!9231 = !DILocation(line: 163, column: 15, scope: !9213)
!9232 = !DILocation(line: 229, column: 14, scope: !9213)
!9233 = !DILocation(line: 246, column: 47, scope: !9213)
!9234 = !DILocation(line: 246, column: 2, scope: !9213)
!9235 = !DILocation(line: 248, column: 43, scope: !9213)
!9236 = !DILocation(line: 248, column: 2, scope: !9213)
!9237 = !DILocation(line: 250, column: 40, scope: !9213)
!9238 = !DILocation(line: 250, column: 2, scope: !9213)
!9239 = !DILocation(line: 252, column: 11, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9213, file: !1283, line: 252, column: 6)
!9241 = !DILocation(line: 252, column: 6, scope: !9213)
!9242 = !DILocation(line: 253, column: 11, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9244, file: !1283, line: 253, column: 7)
!9244 = distinct !DILexicalBlock(scope: !9240, file: !1283, line: 252, column: 36)
!9245 = !DILocation(line: 253, column: 7, scope: !9244)
!9246 = !DILocation(line: 254, column: 4, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !9243, file: !1283, line: 253, column: 16)
!9248 = !DILocation(line: 255, column: 3, scope: !9247)
!9249 = !DILocation(line: 256, column: 4, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9243, file: !1283, line: 255, column: 10)
!9251 = !DILocation(line: 260, column: 40, scope: !9213)
!9252 = !DILocation(line: 260, column: 2, scope: !9213)
!9253 = !DILocation(line: 265, column: 1, scope: !9213)
!9254 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1283, file: !1283, line: 137, type: !9056, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9255)
!9255 = !{!9256, !9257}
!9256 = !DILocalVariable(name: "pin", arg: 1, scope: !9254, file: !1283, line: 137, type: !118)
!9257 = !DILocalVariable(name: "pinval", scope: !9254, file: !1283, line: 139, type: !156)
!9258 = !DILocation(line: 0, scope: !9254)
!9259 = !DILocation(line: 149, column: 13, scope: !9254)
!9260 = !DILocation(line: 151, column: 2, scope: !9254)
!9261 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9136, file: !9136, line: 342, type: !9262, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9264)
!9262 = !DISubroutineType(types: !9263)
!9263 = !{null, !1215, !156, !156}
!9264 = !{!9265, !9266, !9267}
!9265 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9261, file: !9136, line: 342, type: !1215)
!9266 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9261, file: !9136, line: 342, type: !156)
!9267 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9261, file: !9136, line: 342, type: !156)
!9268 = !DILocation(line: 0, scope: !9261)
!9269 = !DILocation(line: 344, column: 3, scope: !9261)
!9270 = !DILocation(line: 345, column: 1, scope: !9261)
!9271 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9136, file: !9136, line: 413, type: !9262, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9272)
!9272 = !{!9273, !9274, !9275}
!9273 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9271, file: !9136, line: 413, type: !1215)
!9274 = !DILocalVariable(name: "Pin", arg: 2, scope: !9271, file: !9136, line: 413, type: !156)
!9275 = !DILocalVariable(name: "Speed", arg: 3, scope: !9271, file: !9136, line: 413, type: !156)
!9276 = !DILocation(line: 0, scope: !9271)
!9277 = !DILocation(line: 415, column: 3, scope: !9271)
!9278 = !DILocation(line: 0, scope: !9076, inlinedAt: !9279)
!9279 = distinct !DILocation(line: 415, column: 3, scope: !9271)
!9280 = !DILocation(line: 380, column: 4, scope: !9076, inlinedAt: !9279)
!9281 = !DILocation(line: 0, scope: !9084, inlinedAt: !9282)
!9282 = distinct !DILocation(line: 415, column: 3, scope: !9271)
!9283 = !DILocation(line: 414, column: 7, scope: !9084, inlinedAt: !9282)
!9284 = !DILocation(line: 0, scope: !9076, inlinedAt: !9285)
!9285 = distinct !DILocation(line: 415, column: 3, scope: !9271)
!9286 = !DILocation(line: 0, scope: !9084, inlinedAt: !9287)
!9287 = distinct !DILocation(line: 415, column: 3, scope: !9271)
!9288 = !DILocation(line: 417, column: 1, scope: !9271)
!9289 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9136, file: !9136, line: 484, type: !9262, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9290)
!9290 = !{!9291, !9292, !9293}
!9291 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9289, file: !9136, line: 484, type: !1215)
!9292 = !DILocalVariable(name: "Pin", arg: 2, scope: !9289, file: !9136, line: 484, type: !156)
!9293 = !DILocalVariable(name: "Pull", arg: 3, scope: !9289, file: !9136, line: 484, type: !156)
!9294 = !DILocation(line: 0, scope: !9289)
!9295 = !DILocation(line: 486, column: 3, scope: !9289)
!9296 = !DILocation(line: 0, scope: !9076, inlinedAt: !9297)
!9297 = distinct !DILocation(line: 486, column: 3, scope: !9289)
!9298 = !DILocation(line: 380, column: 4, scope: !9076, inlinedAt: !9297)
!9299 = !DILocation(line: 0, scope: !9084, inlinedAt: !9300)
!9300 = distinct !DILocation(line: 486, column: 3, scope: !9289)
!9301 = !DILocation(line: 414, column: 7, scope: !9084, inlinedAt: !9300)
!9302 = !DILocation(line: 0, scope: !9076, inlinedAt: !9303)
!9303 = distinct !DILocation(line: 486, column: 3, scope: !9289)
!9304 = !DILocation(line: 0, scope: !9084, inlinedAt: !9305)
!9305 = distinct !DILocation(line: 486, column: 3, scope: !9289)
!9306 = !DILocation(line: 487, column: 1, scope: !9289)
!9307 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9136, file: !9136, line: 556, type: !9262, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9308)
!9308 = !{!9309, !9310, !9311}
!9309 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9307, file: !9136, line: 556, type: !1215)
!9310 = !DILocalVariable(name: "Pin", arg: 2, scope: !9307, file: !9136, line: 556, type: !156)
!9311 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9307, file: !9136, line: 556, type: !156)
!9312 = !DILocation(line: 0, scope: !9307)
!9313 = !DILocation(line: 558, column: 3, scope: !9307)
!9314 = !DILocation(line: 0, scope: !9076, inlinedAt: !9315)
!9315 = distinct !DILocation(line: 558, column: 3, scope: !9307)
!9316 = !DILocation(line: 380, column: 4, scope: !9076, inlinedAt: !9315)
!9317 = !DILocation(line: 0, scope: !9084, inlinedAt: !9318)
!9318 = distinct !DILocation(line: 558, column: 3, scope: !9307)
!9319 = !DILocation(line: 414, column: 7, scope: !9084, inlinedAt: !9318)
!9320 = !DILocation(line: 0, scope: !9076, inlinedAt: !9321)
!9321 = distinct !DILocation(line: 558, column: 3, scope: !9307)
!9322 = !DILocation(line: 0, scope: !9084, inlinedAt: !9323)
!9323 = distinct !DILocation(line: 558, column: 3, scope: !9307)
!9324 = !DILocation(line: 560, column: 1, scope: !9307)
!9325 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9136, file: !9136, line: 633, type: !9262, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9326)
!9326 = !{!9327, !9328, !9329}
!9327 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9325, file: !9136, line: 633, type: !1215)
!9328 = !DILocalVariable(name: "Pin", arg: 2, scope: !9325, file: !9136, line: 633, type: !156)
!9329 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9325, file: !9136, line: 633, type: !156)
!9330 = !DILocation(line: 0, scope: !9325)
!9331 = !DILocation(line: 635, column: 3, scope: !9325)
!9332 = !DILocation(line: 0, scope: !9076, inlinedAt: !9333)
!9333 = distinct !DILocation(line: 635, column: 3, scope: !9325)
!9334 = !DILocation(line: 380, column: 4, scope: !9076, inlinedAt: !9333)
!9335 = !DILocation(line: 0, scope: !9084, inlinedAt: !9336)
!9336 = distinct !DILocation(line: 635, column: 3, scope: !9325)
!9337 = !DILocation(line: 414, column: 7, scope: !9084, inlinedAt: !9336)
!9338 = !DILocation(line: 0, scope: !9076, inlinedAt: !9339)
!9339 = distinct !DILocation(line: 635, column: 3, scope: !9325)
!9340 = !DILocation(line: 0, scope: !9084, inlinedAt: !9341)
!9341 = distinct !DILocation(line: 635, column: 3, scope: !9325)
!9342 = !DILocation(line: 637, column: 1, scope: !9325)
!9343 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9136, file: !9136, line: 273, type: !9262, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9344)
!9344 = !{!9345, !9346, !9347}
!9345 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9343, file: !9136, line: 273, type: !1215)
!9346 = !DILocalVariable(name: "Pin", arg: 2, scope: !9343, file: !9136, line: 273, type: !156)
!9347 = !DILocalVariable(name: "Mode", arg: 3, scope: !9343, file: !9136, line: 273, type: !156)
!9348 = !DILocation(line: 0, scope: !9343)
!9349 = !DILocation(line: 275, column: 3, scope: !9343)
!9350 = !DILocation(line: 0, scope: !9076, inlinedAt: !9351)
!9351 = distinct !DILocation(line: 275, column: 3, scope: !9343)
!9352 = !DILocation(line: 380, column: 4, scope: !9076, inlinedAt: !9351)
!9353 = !DILocation(line: 0, scope: !9084, inlinedAt: !9354)
!9354 = distinct !DILocation(line: 275, column: 3, scope: !9343)
!9355 = !DILocation(line: 414, column: 7, scope: !9084, inlinedAt: !9354)
!9356 = !DILocation(line: 0, scope: !9076, inlinedAt: !9357)
!9357 = distinct !DILocation(line: 275, column: 3, scope: !9343)
!9358 = !DILocation(line: 0, scope: !9084, inlinedAt: !9359)
!9359 = distinct !DILocation(line: 275, column: 3, scope: !9343)
!9360 = !DILocation(line: 276, column: 1, scope: !9343)
!9361 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1283, file: !1283, line: 698, type: !1296, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9362)
!9362 = !{!9363, !9364, !9365}
!9363 = !DILocalVariable(name: "dev", arg: 1, scope: !9361, file: !1283, line: 698, type: !1148)
!9364 = !DILocalVariable(name: "data", scope: !9361, file: !1283, line: 700, type: !8788)
!9365 = !DILocalVariable(name: "ret", scope: !9361, file: !1283, line: 701, type: !118)
!9366 = !DILocation(line: 0, scope: !9361)
!9367 = !DILocation(line: 700, column: 38, scope: !9361)
!9368 = !DILocation(line: 703, column: 8, scope: !9361)
!9369 = !DILocation(line: 703, column: 12, scope: !9361)
!9370 = !DILocation(line: 705, column: 7, scope: !9371)
!9371 = distinct !DILexicalBlock(scope: !9361, file: !1283, line: 705, column: 6)
!9372 = !DILocation(line: 705, column: 6, scope: !9361)
!9373 = !DILocation(line: 722, column: 8, scope: !9361)
!9374 = !DILocation(line: 723, column: 10, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9361, file: !1283, line: 723, column: 6)
!9376 = !DILocation(line: 723, column: 6, scope: !9361)
!9377 = !DILocation(line: 731, column: 1, scope: !9361)
!9378 = distinct !DISubprogram(name: "device_is_ready", scope: !3356, file: !3356, line: 47, type: !9379, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9381)
!9379 = !DISubroutineType(types: !9380)
!9380 = !{!146, !1148}
!9381 = !{!9382}
!9382 = !DILocalVariable(name: "dev", arg: 1, scope: !9378, file: !3356, line: 47, type: !1148)
!9383 = !DILocation(line: 0, scope: !9378)
!9384 = !DILocation(line: 55, column: 2, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9378, file: !3356, line: 55, column: 2)
!9386 = !{i64 2154267147}
!9387 = !DILocation(line: 56, column: 9, scope: !9378)
!9388 = !DILocation(line: 56, column: 2, scope: !9378)
!9389 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1283, file: !1283, line: 270, type: !9390, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9392)
!9390 = !DISubroutineType(types: !9391)
!9391 = !{!118, !1148, !146}
!9392 = !{!9393, !9394, !9395, !9396, !9397}
!9393 = !DILocalVariable(name: "dev", arg: 1, scope: !9389, file: !1283, line: 270, type: !1148)
!9394 = !DILocalVariable(name: "on", arg: 2, scope: !9389, file: !1283, line: 270, type: !146)
!9395 = !DILocalVariable(name: "cfg", scope: !9389, file: !1283, line: 272, type: !8721)
!9396 = !DILocalVariable(name: "ret", scope: !9389, file: !1283, line: 273, type: !118)
!9397 = !DILocalVariable(name: "clk", scope: !9389, file: !1283, line: 278, type: !9023)
!9398 = !DILocation(line: 0, scope: !9389)
!9399 = !DILocation(line: 272, column: 45, scope: !9389)
!9400 = !DILocation(line: 282, column: 38, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9402, file: !1283, line: 280, column: 10)
!9402 = distinct !DILexicalBlock(scope: !9389, file: !1283, line: 280, column: 6)
!9403 = !DILocation(line: 282, column: 6, scope: !9401)
!9404 = !DILocation(line: 281, column: 9, scope: !9401)
!9405 = !DILocation(line: 293, column: 1, scope: !9389)
!9406 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !9379, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9407)
!9407 = !{!9408}
!9408 = !DILocalVariable(name: "dev", arg: 1, scope: !9406, file: !130, line: 730, type: !1148)
!9409 = !DILocation(line: 0, scope: !9406)
!9410 = !DILocation(line: 732, column: 9, scope: !9406)
!9411 = !DILocation(line: 732, column: 2, scope: !9406)
!9412 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1283, file: !1283, line: 496, type: !9413, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9415)
!9413 = !DISubroutineType(types: !9414)
!9414 = !{!118, !1148, !118, !118, !118}
!9415 = !{!9416, !9417, !9418, !9419, !9420, !9421}
!9416 = !DILocalVariable(name: "dev", arg: 1, scope: !9412, file: !1283, line: 496, type: !1148)
!9417 = !DILocalVariable(name: "pin", arg: 2, scope: !9412, file: !1283, line: 496, type: !118)
!9418 = !DILocalVariable(name: "conf", arg: 3, scope: !9412, file: !1283, line: 496, type: !118)
!9419 = !DILocalVariable(name: "func", arg: 4, scope: !9412, file: !1283, line: 496, type: !118)
!9420 = !DILocalVariable(name: "ret", scope: !9412, file: !1283, line: 498, type: !118)
!9421 = !DILocalVariable(name: "gpio_out", scope: !9422, file: !1283, line: 508, type: !156)
!9422 = distinct !DILexicalBlock(scope: !9423, file: !1283, line: 507, column: 27)
!9423 = distinct !DILexicalBlock(scope: !9412, file: !1283, line: 507, column: 6)
!9424 = !DILocation(line: 0, scope: !9412)
!9425 = !DILocation(line: 505, column: 2, scope: !9412)
!9426 = !DILocation(line: 507, column: 11, scope: !9423)
!9427 = !DILocation(line: 507, column: 6, scope: !9412)
!9428 = !DILocation(line: 508, column: 28, scope: !9422)
!9429 = !DILocation(line: 0, scope: !9422)
!9430 = !DILocation(line: 510, column: 16, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9422, file: !1283, line: 510, column: 7)
!9432 = !DILocation(line: 0, scope: !9431)
!9433 = !DILocation(line: 510, column: 7, scope: !9422)
!9434 = !DILocation(line: 511, column: 4, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9431, file: !1283, line: 510, column: 32)
!9436 = !DILocation(line: 512, column: 3, scope: !9435)
!9437 = !DILocation(line: 513, column: 4, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9439, file: !1283, line: 512, column: 39)
!9439 = distinct !DILexicalBlock(scope: !9431, file: !1283, line: 512, column: 14)
!9440 = !DILocation(line: 514, column: 3, scope: !9438)
!9441 = !DILocation(line: 518, column: 1, scope: !9412)
!9442 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1556, file: !1556, line: 526, type: !1459, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9443)
!9443 = !{!9444, !9445, !9446}
!9444 = !DILocalVariable(name: "dev", arg: 1, scope: !9442, file: !1556, line: 526, type: !1461)
!9445 = !DILocalVariable(name: "c", arg: 2, scope: !9442, file: !1556, line: 526, type: !1091)
!9446 = !DILocalVariable(name: "config", scope: !9442, file: !1556, line: 528, type: !9447)
!9447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 32)
!9448 = !DILocation(line: 0, scope: !9442)
!9449 = !DILocation(line: 528, column: 48, scope: !9442)
!9450 = !DILocation(line: 531, column: 40, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9442, file: !1556, line: 531, column: 6)
!9452 = !DILocation(line: 531, column: 6, scope: !9451)
!9453 = !DILocation(line: 531, column: 6, scope: !9442)
!9454 = !DILocation(line: 532, column: 34, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9451, file: !1556, line: 531, column: 48)
!9456 = !DILocation(line: 532, column: 3, scope: !9455)
!9457 = !DILocation(line: 533, column: 2, scope: !9455)
!9458 = !DILocation(line: 539, column: 42, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9442, file: !1556, line: 539, column: 6)
!9460 = !DILocation(line: 539, column: 7, scope: !9459)
!9461 = !DILocation(line: 539, column: 6, scope: !9442)
!9462 = !DILocation(line: 543, column: 52, scope: !9442)
!9463 = !DILocation(line: 543, column: 22, scope: !9442)
!9464 = !DILocation(line: 543, column: 5, scope: !9442)
!9465 = !DILocation(line: 545, column: 2, scope: !9442)
!9466 = !DILocation(line: 546, column: 1, scope: !9442)
!9467 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1556, file: !1556, line: 548, type: !1478, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9468)
!9468 = !{!9469, !9470, !9471, !9472}
!9469 = !DILocalVariable(name: "dev", arg: 1, scope: !9467, file: !1556, line: 548, type: !1461)
!9470 = !DILocalVariable(name: "c", arg: 2, scope: !9467, file: !1556, line: 549, type: !144)
!9471 = !DILocalVariable(name: "config", scope: !9467, file: !1556, line: 551, type: !9447)
!9472 = !DILocalVariable(name: "key", scope: !9467, file: !1556, line: 555, type: !32)
!9473 = !DILocation(line: 0, scope: !9467)
!9474 = !DILocation(line: 551, column: 48, scope: !9467)
!9475 = !DILocation(line: 562, column: 2, scope: !9467)
!9476 = !DILocation(line: 563, column: 41, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9478, file: !1556, line: 563, column: 7)
!9478 = distinct !DILexicalBlock(scope: !9467, file: !1556, line: 562, column: 12)
!9479 = !DILocation(line: 563, column: 7, scope: !9477)
!9480 = !DILocation(line: 563, column: 7, scope: !9478)
!9481 = !DILocation(line: 55, column: 2, scope: !9482, inlinedAt: !9486)
!9482 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6137, file: !6137, line: 42, type: !6138, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9483)
!9483 = !{!9484, !9485}
!9484 = !DILocalVariable(name: "key", scope: !9482, file: !6137, line: 44, type: !32)
!9485 = !DILocalVariable(name: "tmp", scope: !9482, file: !6137, line: 53, type: !32)
!9486 = distinct !DILocation(line: 564, column: 10, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9477, file: !1556, line: 563, column: 49)
!9488 = !{i64 1999517}
!9489 = !DILocation(line: 0, scope: !9482, inlinedAt: !9486)
!9490 = !DILocation(line: 565, column: 42, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9487, file: !1556, line: 565, column: 8)
!9492 = !DILocation(line: 565, column: 8, scope: !9491)
!9493 = !DILocation(line: 565, column: 8, scope: !9487)
!9494 = !DILocalVariable(name: "key", arg: 1, scope: !9495, file: !6137, line: 84, type: !32)
!9495 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6137, file: !6137, line: 84, type: !6148, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9496)
!9496 = !{!9494}
!9497 = !DILocation(line: 0, scope: !9495, inlinedAt: !9498)
!9498 = distinct !DILocation(line: 568, column: 4, scope: !9487)
!9499 = !DILocation(line: 95, column: 2, scope: !9495, inlinedAt: !9498)
!9500 = !{i64 2000334}
!9501 = !DILocation(line: 569, column: 3, scope: !9487)
!9502 = distinct !{!9502, !9475, !9503}
!9503 = !DILocation(line: 570, column: 2, scope: !9467)
!9504 = !DILocation(line: 592, column: 33, scope: !9467)
!9505 = !DILocation(line: 592, column: 2, scope: !9467)
!9506 = !DILocation(line: 0, scope: !9495, inlinedAt: !9507)
!9507 = distinct !DILocation(line: 593, column: 2, scope: !9467)
!9508 = !DILocation(line: 95, column: 2, scope: !9495, inlinedAt: !9507)
!9509 = !DILocation(line: 594, column: 1, scope: !9467)
!9510 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1556, file: !1556, line: 596, type: !1482, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9511)
!9511 = !{!9512, !9513, !9514}
!9512 = !DILocalVariable(name: "dev", arg: 1, scope: !9510, file: !1556, line: 596, type: !1461)
!9513 = !DILocalVariable(name: "config", scope: !9510, file: !1556, line: 598, type: !9447)
!9514 = !DILocalVariable(name: "err", scope: !9510, file: !1556, line: 599, type: !156)
!9515 = !DILocation(line: 0, scope: !9510)
!9516 = !DILocation(line: 598, column: 48, scope: !9510)
!9517 = !DILocation(line: 606, column: 40, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9510, file: !1556, line: 606, column: 6)
!9519 = !DILocation(line: 606, column: 6, scope: !9518)
!9520 = !DILocation(line: 606, column: 6, scope: !9510)
!9521 = !DILocation(line: 610, column: 39, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9510, file: !1556, line: 610, column: 6)
!9523 = !DILocation(line: 610, column: 6, scope: !9522)
!9524 = !DILocation(line: 610, column: 6, scope: !9510)
!9525 = !DILocation(line: 614, column: 39, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9510, file: !1556, line: 614, column: 6)
!9527 = !DILocation(line: 614, column: 6, scope: !9526)
!9528 = !DILocation(line: 614, column: 6, scope: !9510)
!9529 = !DILocation(line: 619, column: 40, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9510, file: !1556, line: 619, column: 6)
!9531 = !DILocation(line: 619, column: 6, scope: !9530)
!9532 = !DILocation(line: 619, column: 6, scope: !9510)
!9533 = !DILocation(line: 623, column: 10, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9510, file: !1556, line: 623, column: 6)
!9535 = !DILocation(line: 623, column: 6, scope: !9510)
!9536 = !DILocation(line: 624, column: 34, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9534, file: !1556, line: 623, column: 24)
!9538 = !DILocation(line: 624, column: 3, scope: !9537)
!9539 = !DILocation(line: 625, column: 2, scope: !9537)
!9540 = !DILocation(line: 632, column: 10, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9510, file: !1556, line: 632, column: 6)
!9542 = !DILocation(line: 632, column: 6, scope: !9510)
!9543 = !DILocation(line: 633, column: 34, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9541, file: !1556, line: 632, column: 32)
!9545 = !DILocation(line: 633, column: 3, scope: !9544)
!9546 = !DILocation(line: 634, column: 2, scope: !9544)
!9547 = !DILocation(line: 636, column: 10, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9510, file: !1556, line: 636, column: 6)
!9549 = !DILocation(line: 636, column: 6, scope: !9510)
!9550 = !DILocation(line: 637, column: 33, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9548, file: !1556, line: 636, column: 31)
!9552 = !DILocation(line: 637, column: 3, scope: !9551)
!9553 = !DILocation(line: 638, column: 2, scope: !9551)
!9554 = !DILocation(line: 640, column: 10, scope: !9555)
!9555 = distinct !DILexicalBlock(scope: !9510, file: !1556, line: 640, column: 6)
!9556 = !DILocation(line: 640, column: 6, scope: !9510)
!9557 = !DILocation(line: 641, column: 33, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9555, file: !1556, line: 640, column: 32)
!9559 = !DILocation(line: 641, column: 3, scope: !9558)
!9560 = !DILocation(line: 642, column: 2, scope: !9558)
!9561 = !DILocation(line: 646, column: 32, scope: !9510)
!9562 = !DILocation(line: 646, column: 2, scope: !9510)
!9563 = !DILocation(line: 648, column: 2, scope: !9510)
!9564 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1556, file: !1556, line: 419, type: !1486, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9565)
!9565 = !{!9566, !9567, !9568, !9569, !9571, !9572, !9573, !9574}
!9566 = !DILocalVariable(name: "dev", arg: 1, scope: !9564, file: !1556, line: 419, type: !1461)
!9567 = !DILocalVariable(name: "cfg", arg: 2, scope: !9564, file: !1556, line: 420, type: !1488)
!9568 = !DILocalVariable(name: "config", scope: !9564, file: !1556, line: 422, type: !9447)
!9569 = !DILocalVariable(name: "data", scope: !9564, file: !1556, line: 423, type: !9570)
!9570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 32)
!9571 = !DILocalVariable(name: "parity", scope: !9564, file: !1556, line: 424, type: !6587)
!9572 = !DILocalVariable(name: "stopbits", scope: !9564, file: !1556, line: 425, type: !6587)
!9573 = !DILocalVariable(name: "databits", scope: !9564, file: !1556, line: 426, type: !6587)
!9574 = !DILocalVariable(name: "flowctrl", scope: !9564, file: !1556, line: 428, type: !6587)
!9575 = !DILocation(line: 0, scope: !9564)
!9576 = !DILocation(line: 422, column: 48, scope: !9564)
!9577 = !DILocation(line: 423, column: 38, scope: !9564)
!9578 = !DILocation(line: 424, column: 56, scope: !9564)
!9579 = !DILocation(line: 424, column: 51, scope: !9564)
!9580 = !DILocation(line: 424, column: 26, scope: !9564)
!9581 = !DILocation(line: 425, column: 60, scope: !9564)
!9582 = !DILocation(line: 425, column: 55, scope: !9564)
!9583 = !DILocation(line: 425, column: 28, scope: !9564)
!9584 = !DILocation(line: 426, column: 60, scope: !9564)
!9585 = !DILocation(line: 426, column: 55, scope: !9564)
!9586 = !DILocation(line: 426, column: 28, scope: !9564)
!9587 = !DILocation(line: 428, column: 58, scope: !9564)
!9588 = !DILocation(line: 428, column: 53, scope: !9564)
!9589 = !DILocation(line: 428, column: 28, scope: !9564)
!9590 = !DILocation(line: 431, column: 44, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9564, file: !1556, line: 431, column: 6)
!9592 = !DILocation(line: 438, column: 22, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9564, file: !1556, line: 437, column: 6)
!9594 = !DILocation(line: 437, column: 6, scope: !9564)
!9595 = !DILocation(line: 448, column: 6, scope: !9564)
!9596 = !DILocation(line: 465, column: 47, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9564, file: !1556, line: 465, column: 6)
!9598 = !DILocation(line: 475, column: 21, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9564, file: !1556, line: 475, column: 6)
!9600 = !DILocation(line: 475, column: 6, scope: !9564)
!9601 = !DILocation(line: 476, column: 8, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9603, file: !1556, line: 476, column: 7)
!9603 = distinct !DILexicalBlock(scope: !9599, file: !1556, line: 475, column: 49)
!9604 = !DILocation(line: 477, column: 34, scope: !9602)
!9605 = !DILocation(line: 476, column: 7, scope: !9603)
!9606 = !DILocation(line: 482, column: 27, scope: !9564)
!9607 = !DILocation(line: 482, column: 2, scope: !9564)
!9608 = !DILocation(line: 484, column: 16, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9564, file: !1556, line: 484, column: 6)
!9610 = !DILocation(line: 484, column: 13, scope: !9609)
!9611 = !DILocation(line: 484, column: 6, scope: !9564)
!9612 = !DILocation(line: 485, column: 3, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9609, file: !1556, line: 484, column: 44)
!9614 = !DILocation(line: 486, column: 2, scope: !9613)
!9615 = !DILocation(line: 488, column: 18, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9564, file: !1556, line: 488, column: 6)
!9617 = !DILocation(line: 488, column: 15, scope: !9616)
!9618 = !DILocation(line: 488, column: 6, scope: !9564)
!9619 = !DILocation(line: 489, column: 3, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9616, file: !1556, line: 488, column: 48)
!9621 = !DILocation(line: 490, column: 2, scope: !9620)
!9622 = !DILocation(line: 492, column: 18, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9564, file: !1556, line: 492, column: 6)
!9624 = !DILocation(line: 492, column: 15, scope: !9623)
!9625 = !DILocation(line: 492, column: 6, scope: !9564)
!9626 = !DILocation(line: 493, column: 3, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9623, file: !1556, line: 492, column: 48)
!9628 = !DILocation(line: 494, column: 2, scope: !9627)
!9629 = !DILocation(line: 496, column: 18, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9564, file: !1556, line: 496, column: 6)
!9631 = !DILocation(line: 496, column: 15, scope: !9630)
!9632 = !DILocation(line: 496, column: 6, scope: !9564)
!9633 = !DILocation(line: 497, column: 3, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9630, file: !1556, line: 496, column: 46)
!9635 = !DILocation(line: 498, column: 2, scope: !9634)
!9636 = !DILocation(line: 500, column: 11, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9564, file: !1556, line: 500, column: 6)
!9638 = !DILocation(line: 500, column: 29, scope: !9637)
!9639 = !DILocation(line: 500, column: 20, scope: !9637)
!9640 = !DILocation(line: 500, column: 6, scope: !9564)
!9641 = !DILocation(line: 501, column: 3, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9637, file: !1556, line: 500, column: 40)
!9643 = !DILocation(line: 502, column: 26, scope: !9642)
!9644 = !DILocation(line: 502, column: 19, scope: !9642)
!9645 = !DILocation(line: 503, column: 2, scope: !9642)
!9646 = !DILocation(line: 505, column: 26, scope: !9564)
!9647 = !DILocation(line: 505, column: 2, scope: !9564)
!9648 = !DILocation(line: 506, column: 2, scope: !9564)
!9649 = !DILocation(line: 507, column: 1, scope: !9564)
!9650 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1556, file: !1556, line: 509, type: !1499, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9651)
!9651 = !{!9652, !9653, !9654}
!9652 = !DILocalVariable(name: "dev", arg: 1, scope: !9650, file: !1556, line: 509, type: !1461)
!9653 = !DILocalVariable(name: "cfg", arg: 2, scope: !9650, file: !1556, line: 510, type: !1501)
!9654 = !DILocalVariable(name: "data", scope: !9650, file: !1556, line: 512, type: !9570)
!9655 = !DILocation(line: 0, scope: !9650)
!9656 = !DILocation(line: 512, column: 38, scope: !9650)
!9657 = !DILocation(line: 514, column: 24, scope: !9650)
!9658 = !DILocation(line: 514, column: 7, scope: !9650)
!9659 = !DILocation(line: 514, column: 16, scope: !9650)
!9660 = !DILocation(line: 515, column: 41, scope: !9650)
!9661 = !{i32 0, i32 1537}
!9662 = !DILocation(line: 515, column: 16, scope: !9650)
!9663 = !DILocation(line: 515, column: 7, scope: !9650)
!9664 = !DILocation(line: 515, column: 14, scope: !9650)
!9665 = !DILocation(line: 517, column: 3, scope: !9650)
!9666 = !{i32 0, i32 12289}
!9667 = !DILocation(line: 516, column: 19, scope: !9650)
!9668 = !DILocation(line: 516, column: 7, scope: !9650)
!9669 = !DILocation(line: 516, column: 17, scope: !9650)
!9670 = !DILocation(line: 519, column: 3, scope: !9650)
!9671 = !DILocation(line: 519, column: 33, scope: !9650)
!9672 = !DILocation(line: 518, column: 19, scope: !9650)
!9673 = !DILocation(line: 518, column: 7, scope: !9650)
!9674 = !DILocation(line: 518, column: 17, scope: !9650)
!9675 = !DILocation(line: 521, column: 3, scope: !9650)
!9676 = !{i32 0, i32 769}
!9677 = !DILocation(line: 520, column: 19, scope: !9650)
!9678 = !DILocation(line: 520, column: 7, scope: !9650)
!9679 = !DILocation(line: 520, column: 17, scope: !9650)
!9680 = !DILocation(line: 522, column: 2, scope: !9650)
!9681 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1556, file: !1556, line: 205, type: !9682, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9684)
!9682 = !DISubroutineType(types: !9683)
!9683 = !{!156, !1461}
!9684 = !{!9685, !9686}
!9685 = !DILocalVariable(name: "dev", arg: 1, scope: !9681, file: !1556, line: 205, type: !1461)
!9686 = !DILocalVariable(name: "config", scope: !9681, file: !1556, line: 207, type: !9447)
!9687 = !DILocation(line: 0, scope: !9681)
!9688 = !DILocation(line: 207, column: 48, scope: !9681)
!9689 = !DILocation(line: 209, column: 36, scope: !9681)
!9690 = !DILocation(line: 209, column: 9, scope: !9681)
!9691 = !DILocation(line: 209, column: 2, scope: !9681)
!9692 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1556, file: !1556, line: 270, type: !9693, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9695)
!9693 = !DISubroutineType(types: !9694)
!9694 = !{!1427, !156}
!9695 = !{!9696}
!9696 = !DILocalVariable(name: "parity", arg: 1, scope: !9692, file: !1556, line: 270, type: !156)
!9697 = !DILocation(line: 0, scope: !9692)
!9698 = !DILocation(line: 272, column: 2, scope: !9692)
!9699 = !DILocation(line: 281, column: 1, scope: !9692)
!9700 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1556, file: !1556, line: 220, type: !9682, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9701)
!9701 = !{!9702, !9703}
!9702 = !DILocalVariable(name: "dev", arg: 1, scope: !9700, file: !1556, line: 220, type: !1461)
!9703 = !DILocalVariable(name: "config", scope: !9700, file: !1556, line: 222, type: !9447)
!9704 = !DILocation(line: 0, scope: !9700)
!9705 = !DILocation(line: 222, column: 48, scope: !9700)
!9706 = !DILocation(line: 224, column: 44, scope: !9700)
!9707 = !DILocation(line: 224, column: 9, scope: !9700)
!9708 = !DILocation(line: 224, column: 2, scope: !9700)
!9709 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1556, file: !1556, line: 304, type: !9710, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9712)
!9710 = !DISubroutineType(types: !9711)
!9711 = !{!1441, !156}
!9712 = !{!9713}
!9713 = !DILocalVariable(name: "sb", arg: 1, scope: !9709, file: !1556, line: 304, type: !156)
!9714 = !DILocation(line: 0, scope: !9709)
!9715 = !DILocation(line: 306, column: 2, scope: !9709)
!9716 = !DILocation(line: 0, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9709, file: !1556, line: 306, column: 14)
!9718 = !DILocation(line: 323, column: 1, scope: !9709)
!9719 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1556, file: !1556, line: 235, type: !9682, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9720)
!9720 = !{!9721, !9722}
!9721 = !DILocalVariable(name: "dev", arg: 1, scope: !9719, file: !1556, line: 235, type: !1461)
!9722 = !DILocalVariable(name: "config", scope: !9719, file: !1556, line: 237, type: !9447)
!9723 = !DILocation(line: 0, scope: !9719)
!9724 = !DILocation(line: 237, column: 48, scope: !9719)
!9725 = !DILocation(line: 239, column: 39, scope: !9719)
!9726 = !DILocation(line: 239, column: 9, scope: !9719)
!9727 = !DILocation(line: 239, column: 2, scope: !9719)
!9728 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1556, file: !1556, line: 355, type: !9729, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9731)
!9729 = !DISubroutineType(types: !9730)
!9730 = !{!1434, !156, !156}
!9731 = !{!9732, !9733}
!9732 = !DILocalVariable(name: "db", arg: 1, scope: !9728, file: !1556, line: 355, type: !156)
!9733 = !DILocalVariable(name: "p", arg: 2, scope: !9728, file: !1556, line: 356, type: !156)
!9734 = !DILocation(line: 0, scope: !9728)
!9735 = !DILocation(line: 358, column: 2, scope: !9728)
!9736 = !DILocation(line: 384, column: 1, scope: !9728)
!9737 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1556, file: !1556, line: 250, type: !9682, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9738)
!9738 = !{!9739, !9740}
!9739 = !DILocalVariable(name: "dev", arg: 1, scope: !9737, file: !1556, line: 250, type: !1461)
!9740 = !DILocalVariable(name: "config", scope: !9737, file: !1556, line: 252, type: !9447)
!9741 = !DILocation(line: 0, scope: !9737)
!9742 = !DILocation(line: 252, column: 48, scope: !9737)
!9743 = !DILocation(line: 254, column: 40, scope: !9737)
!9744 = !DILocation(line: 254, column: 9, scope: !9737)
!9745 = !DILocation(line: 254, column: 2, scope: !9737)
!9746 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1556, file: !1556, line: 409, type: !9747, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9749)
!9747 = !DISubroutineType(types: !9748)
!9748 = !{!1447, !156}
!9749 = !{!9750}
!9750 = !DILocalVariable(name: "fc", arg: 1, scope: !9746, file: !1556, line: 409, type: !156)
!9751 = !DILocation(line: 0, scope: !9746)
!9752 = !DILocation(line: 411, column: 9, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9746, file: !1556, line: 411, column: 6)
!9754 = !DILocation(line: 416, column: 1, scope: !9746)
!9755 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9756, file: !9756, line: 967, type: !9757, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9759)
!9756 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9757 = !DISubroutineType(types: !9758)
!9758 = !{!156, !1502}
!9759 = !{!9760}
!9760 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9755, file: !9756, line: 967, type: !1502)
!9761 = !DILocation(line: 0, scope: !9755)
!9762 = !DILocation(line: 969, column: 21, scope: !9755)
!9763 = !DILocation(line: 969, column: 3, scope: !9755)
!9764 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9756, file: !9756, line: 601, type: !9757, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9765)
!9765 = !{!9766}
!9766 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9764, file: !9756, line: 601, type: !1502)
!9767 = !DILocation(line: 0, scope: !9764)
!9768 = !DILocation(line: 603, column: 21, scope: !9764)
!9769 = !DILocation(line: 603, column: 3, scope: !9764)
!9770 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9756, file: !9756, line: 820, type: !9757, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9771)
!9771 = !{!9772}
!9772 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9770, file: !9756, line: 820, type: !1502)
!9773 = !DILocation(line: 0, scope: !9770)
!9774 = !DILocation(line: 822, column: 21, scope: !9770)
!9775 = !DILocation(line: 822, column: 3, scope: !9770)
!9776 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9756, file: !9756, line: 547, type: !9757, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9777)
!9777 = !{!9778}
!9778 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9776, file: !9756, line: 547, type: !1502)
!9779 = !DILocation(line: 0, scope: !9776)
!9780 = !DILocation(line: 549, column: 21, scope: !9776)
!9781 = !DILocation(line: 549, column: 3, scope: !9776)
!9782 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1556, file: !1556, line: 257, type: !9783, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9785)
!9783 = !DISubroutineType(types: !9784)
!9784 = !{!156, !1427}
!9785 = !{!9786}
!9786 = !DILocalVariable(name: "parity", arg: 1, scope: !9782, file: !1556, line: 257, type: !1427)
!9787 = !DILocation(line: 0, scope: !9782)
!9788 = !DILocation(line: 259, column: 2, scope: !9782)
!9789 = !DILocation(line: 268, column: 1, scope: !9782)
!9790 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1556, file: !1556, line: 283, type: !9791, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9793)
!9791 = !DISubroutineType(types: !9792)
!9792 = !{!156, !1441}
!9793 = !{!9794}
!9794 = !DILocalVariable(name: "sb", arg: 1, scope: !9790, file: !1556, line: 283, type: !1441)
!9795 = !DILocation(line: 0, scope: !9790)
!9796 = !DILocation(line: 285, column: 2, scope: !9790)
!9797 = !DILocation(line: 0, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9790, file: !1556, line: 285, column: 14)
!9799 = !DILocation(line: 302, column: 1, scope: !9790)
!9800 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1556, file: !1556, line: 325, type: !9801, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9803)
!9801 = !DISubroutineType(types: !9802)
!9802 = !{!156, !1434, !1427}
!9803 = !{!9804, !9805}
!9804 = !DILocalVariable(name: "db", arg: 1, scope: !9800, file: !1556, line: 325, type: !1434)
!9805 = !DILocalVariable(name: "p", arg: 2, scope: !9800, file: !1556, line: 326, type: !1427)
!9806 = !DILocation(line: 0, scope: !9800)
!9807 = !DILocation(line: 328, column: 2, scope: !9800)
!9808 = !DILocation(line: 353, column: 1, scope: !9800)
!9809 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1556, file: !1556, line: 393, type: !9810, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9812)
!9810 = !DISubroutineType(types: !9811)
!9811 = !{!156, !1447}
!9812 = !{!9813}
!9813 = !DILocalVariable(name: "fc", arg: 1, scope: !9809, file: !1556, line: 393, type: !1447)
!9814 = !DILocation(line: 0, scope: !9809)
!9815 = !DILocation(line: 395, column: 9, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9809, file: !1556, line: 395, column: 6)
!9817 = !DILocation(line: 400, column: 1, scope: !9809)
!9818 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9756, file: !9756, line: 424, type: !9819, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9821)
!9819 = !DISubroutineType(types: !9820)
!9820 = !{null, !1502}
!9821 = !{!9822}
!9822 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9818, file: !9756, line: 424, type: !1502)
!9823 = !DILocation(line: 0, scope: !9818)
!9824 = !DILocation(line: 426, column: 3, scope: !9818)
!9825 = !DILocation(line: 427, column: 1, scope: !9818)
!9826 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1556, file: !1556, line: 197, type: !9827, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9829)
!9827 = !DISubroutineType(types: !9828)
!9828 = !{null, !1461, !156}
!9829 = !{!9830, !9831, !9832}
!9830 = !DILocalVariable(name: "dev", arg: 1, scope: !9826, file: !1556, line: 197, type: !1461)
!9831 = !DILocalVariable(name: "parity", arg: 2, scope: !9826, file: !1556, line: 198, type: !156)
!9832 = !DILocalVariable(name: "config", scope: !9826, file: !1556, line: 200, type: !9447)
!9833 = !DILocation(line: 0, scope: !9826)
!9834 = !DILocation(line: 200, column: 48, scope: !9826)
!9835 = !DILocation(line: 202, column: 29, scope: !9826)
!9836 = !DILocation(line: 202, column: 2, scope: !9826)
!9837 = !DILocation(line: 203, column: 1, scope: !9826)
!9838 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1556, file: !1556, line: 212, type: !9827, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9839)
!9839 = !{!9840, !9841, !9842}
!9840 = !DILocalVariable(name: "dev", arg: 1, scope: !9838, file: !1556, line: 212, type: !1461)
!9841 = !DILocalVariable(name: "stopbits", arg: 2, scope: !9838, file: !1556, line: 213, type: !156)
!9842 = !DILocalVariable(name: "config", scope: !9838, file: !1556, line: 215, type: !9447)
!9843 = !DILocation(line: 0, scope: !9838)
!9844 = !DILocation(line: 215, column: 48, scope: !9838)
!9845 = !DILocation(line: 217, column: 37, scope: !9838)
!9846 = !DILocation(line: 217, column: 2, scope: !9838)
!9847 = !DILocation(line: 218, column: 1, scope: !9838)
!9848 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1556, file: !1556, line: 227, type: !9827, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9849)
!9849 = !{!9850, !9851, !9852}
!9850 = !DILocalVariable(name: "dev", arg: 1, scope: !9848, file: !1556, line: 227, type: !1461)
!9851 = !DILocalVariable(name: "databits", arg: 2, scope: !9848, file: !1556, line: 228, type: !156)
!9852 = !DILocalVariable(name: "config", scope: !9848, file: !1556, line: 230, type: !9447)
!9853 = !DILocation(line: 0, scope: !9848)
!9854 = !DILocation(line: 230, column: 48, scope: !9848)
!9855 = !DILocation(line: 232, column: 32, scope: !9848)
!9856 = !DILocation(line: 232, column: 2, scope: !9848)
!9857 = !DILocation(line: 233, column: 1, scope: !9848)
!9858 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1556, file: !1556, line: 242, type: !9827, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9859)
!9859 = !{!9860, !9861, !9862}
!9860 = !DILocalVariable(name: "dev", arg: 1, scope: !9858, file: !1556, line: 242, type: !1461)
!9861 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !9858, file: !1556, line: 243, type: !156)
!9862 = !DILocalVariable(name: "config", scope: !9858, file: !1556, line: 245, type: !9447)
!9863 = !DILocation(line: 0, scope: !9858)
!9864 = !DILocation(line: 245, column: 48, scope: !9858)
!9865 = !DILocation(line: 247, column: 33, scope: !9858)
!9866 = !DILocation(line: 247, column: 2, scope: !9858)
!9867 = !DILocation(line: 248, column: 1, scope: !9858)
!9868 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1556, file: !1556, line: 107, type: !9827, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9869)
!9869 = !{!9870, !9871, !9872, !9873, !9874}
!9870 = !DILocalVariable(name: "dev", arg: 1, scope: !9868, file: !1556, line: 107, type: !1461)
!9871 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !9868, file: !1556, line: 107, type: !156)
!9872 = !DILocalVariable(name: "config", scope: !9868, file: !1556, line: 109, type: !9447)
!9873 = !DILocalVariable(name: "data", scope: !9868, file: !1556, line: 110, type: !9570)
!9874 = !DILocalVariable(name: "clock_rate", scope: !9868, file: !1556, line: 112, type: !156)
!9875 = !DILocation(line: 0, scope: !9868)
!9876 = !DILocation(line: 109, column: 48, scope: !9868)
!9877 = !DILocation(line: 110, column: 38, scope: !9868)
!9878 = !DILocation(line: 112, column: 2, scope: !9868)
!9879 = !DILocation(line: 123, column: 36, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9881, file: !1556, line: 123, column: 7)
!9881 = distinct !DILexicalBlock(scope: !9882, file: !1556, line: 122, column: 9)
!9882 = distinct !DILexicalBlock(scope: !9868, file: !1556, line: 115, column: 6)
!9883 = !DILocation(line: 124, column: 42, scope: !9880)
!9884 = !DILocation(line: 123, column: 7, scope: !9880)
!9885 = !DILocation(line: 125, column: 22, scope: !9880)
!9886 = !DILocation(line: 123, column: 7, scope: !9881)
!9887 = !DILocation(line: 176, column: 36, scope: !9868)
!9888 = !DILocation(line: 176, column: 3, scope: !9868)
!9889 = !DILocation(line: 179, column: 32, scope: !9868)
!9890 = !DILocation(line: 180, column: 10, scope: !9868)
!9891 = !DILocation(line: 179, column: 3, scope: !9868)
!9892 = !DILocation(line: 189, column: 3, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9894, file: !1556, line: 189, column: 3)
!9894 = distinct !DILexicalBlock(scope: !9868, file: !1556, line: 189, column: 3)
!9895 = !DILocation(line: 189, column: 3, scope: !9894)
!9896 = !DILocation(line: 189, column: 3, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9893, file: !1556, line: 189, column: 3)
!9898 = !DILocation(line: 195, column: 1, scope: !9868)
!9899 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9756, file: !9756, line: 410, type: !9819, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9900)
!9900 = !{!9901}
!9901 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9899, file: !9756, line: 410, type: !1502)
!9902 = !DILocation(line: 0, scope: !9899)
!9903 = !DILocation(line: 412, column: 3, scope: !9899)
!9904 = !DILocation(line: 413, column: 1, scope: !9899)
!9905 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !935, file: !935, line: 216, type: !1535, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9906)
!9906 = !{!9907, !9908, !9909, !9910}
!9907 = !DILocalVariable(name: "dev", arg: 1, scope: !9905, file: !935, line: 216, type: !1461)
!9908 = !DILocalVariable(name: "sys", arg: 2, scope: !9905, file: !935, line: 217, type: !1030)
!9909 = !DILocalVariable(name: "rate", arg: 3, scope: !9905, file: !935, line: 218, type: !986)
!9910 = !DILocalVariable(name: "api", scope: !9905, file: !935, line: 220, type: !1513)
!9911 = !DILocation(line: 0, scope: !9905)
!9912 = !DILocation(line: 221, column: 49, scope: !9905)
!9913 = !DILocation(line: 223, column: 11, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9905, file: !935, line: 223, column: 6)
!9915 = !DILocation(line: 223, column: 20, scope: !9914)
!9916 = !DILocation(line: 223, column: 6, scope: !9905)
!9917 = !DILocation(line: 227, column: 9, scope: !9905)
!9918 = !DILocation(line: 227, column: 2, scope: !9905)
!9919 = !DILocation(line: 228, column: 1, scope: !9905)
!9920 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9756, file: !9756, line: 615, type: !9921, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9923)
!9921 = !DISubroutineType(types: !9922)
!9922 = !{null, !1502, !156}
!9923 = !{!9924, !9925}
!9924 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9920, file: !9756, line: 615, type: !1502)
!9925 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !9920, file: !9756, line: 615, type: !156)
!9926 = !DILocation(line: 0, scope: !9920)
!9927 = !DILocation(line: 617, column: 3, scope: !9920)
!9928 = !DILocation(line: 618, column: 1, scope: !9920)
!9929 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9756, file: !9756, line: 1020, type: !9930, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9932)
!9930 = !DISubroutineType(types: !9931)
!9931 = !{null, !1502, !156, !156, !156}
!9932 = !{!9933, !9934, !9935, !9936}
!9933 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9929, file: !9756, line: 1020, type: !1502)
!9934 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !9929, file: !9756, line: 1020, type: !156)
!9935 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !9929, file: !9756, line: 1020, type: !156)
!9936 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !9929, file: !9756, line: 1021, type: !156)
!9937 = !DILocation(line: 0, scope: !9929)
!9938 = !DILocation(line: 1029, column: 30, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !9940, file: !9756, line: 1028, column: 3)
!9940 = distinct !DILexicalBlock(scope: !9929, file: !9756, line: 1023, column: 7)
!9941 = !DILocation(line: 1029, column: 19, scope: !9939)
!9942 = !DILocation(line: 1029, column: 13, scope: !9939)
!9943 = !DILocation(line: 1029, column: 17, scope: !9939)
!9944 = !DILocation(line: 1031, column: 1, scope: !9929)
!9945 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9756, file: !9756, line: 949, type: !9921, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9946)
!9946 = !{!9947, !9948}
!9947 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9945, file: !9756, line: 949, type: !1502)
!9948 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !9945, file: !9756, line: 949, type: !156)
!9949 = !DILocation(line: 0, scope: !9945)
!9950 = !DILocation(line: 951, column: 3, scope: !9945)
!9951 = !DILocation(line: 952, column: 1, scope: !9945)
!9952 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9756, file: !9756, line: 588, type: !9921, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9953)
!9953 = !{!9954, !9955}
!9954 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9952, file: !9756, line: 588, type: !1502)
!9955 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9952, file: !9756, line: 588, type: !156)
!9956 = !DILocation(line: 0, scope: !9952)
!9957 = !DILocation(line: 590, column: 3, scope: !9952)
!9958 = !DILocation(line: 591, column: 1, scope: !9952)
!9959 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9756, file: !9756, line: 805, type: !9921, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9960)
!9960 = !{!9961, !9962}
!9961 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9959, file: !9756, line: 805, type: !1502)
!9962 = !DILocalVariable(name: "StopBits", arg: 2, scope: !9959, file: !9756, line: 805, type: !156)
!9963 = !DILocation(line: 0, scope: !9959)
!9964 = !DILocation(line: 807, column: 3, scope: !9959)
!9965 = !DILocation(line: 808, column: 1, scope: !9959)
!9966 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9756, file: !9756, line: 532, type: !9921, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9967)
!9967 = !{!9968, !9969}
!9968 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9966, file: !9756, line: 532, type: !1502)
!9969 = !DILocalVariable(name: "Parity", arg: 2, scope: !9966, file: !9756, line: 532, type: !156)
!9970 = !DILocation(line: 0, scope: !9966)
!9971 = !DILocation(line: 534, column: 3, scope: !9966)
!9972 = !DILocation(line: 535, column: 1, scope: !9966)
!9973 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9756, file: !9756, line: 1770, type: !9757, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9974)
!9974 = !{!9975}
!9975 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9973, file: !9756, line: 1770, type: !1502)
!9976 = !DILocation(line: 0, scope: !9973)
!9977 = !DILocation(line: 1772, column: 11, scope: !9973)
!9978 = !DILocation(line: 1772, column: 46, scope: !9973)
!9979 = !DILocation(line: 1772, column: 3, scope: !9973)
!9980 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9756, file: !9756, line: 1737, type: !9757, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9981)
!9981 = !{!9982}
!9982 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9980, file: !9756, line: 1737, type: !1502)
!9983 = !DILocation(line: 0, scope: !9980)
!9984 = !DILocation(line: 1739, column: 11, scope: !9980)
!9985 = !DILocation(line: 1739, column: 3, scope: !9980)
!9986 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9756, file: !9756, line: 1748, type: !9757, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9987)
!9987 = !{!9988}
!9988 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9986, file: !9756, line: 1748, type: !1502)
!9989 = !DILocation(line: 0, scope: !9986)
!9990 = !DILocation(line: 1750, column: 11, scope: !9986)
!9991 = !DILocation(line: 1750, column: 45, scope: !9986)
!9992 = !DILocation(line: 1750, column: 3, scope: !9986)
!9993 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9756, file: !9756, line: 1827, type: !9757, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !9994)
!9994 = !{!9995}
!9995 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9993, file: !9756, line: 1827, type: !1502)
!9996 = !DILocation(line: 0, scope: !9993)
!9997 = !DILocation(line: 1829, column: 11, scope: !9993)
!9998 = !DILocation(line: 1829, column: 46, scope: !9993)
!9999 = !DILocation(line: 1829, column: 3, scope: !9993)
!10000 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9756, file: !9756, line: 1992, type: !9819, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10001)
!10001 = !{!10002}
!10002 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10000, file: !9756, line: 1992, type: !1502)
!10003 = !DILocation(line: 0, scope: !10000)
!10004 = !DILocation(line: 1994, column: 3, scope: !10000)
!10005 = !DILocation(line: 1995, column: 1, scope: !10000)
!10006 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9756, file: !9756, line: 1934, type: !9819, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10007)
!10007 = !{!10008, !10009}
!10008 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10006, file: !9756, line: 1934, type: !1502)
!10009 = !DILocalVariable(name: "tmpreg", scope: !10006, file: !9756, line: 1936, type: !452)
!10010 = !DILocation(line: 0, scope: !10006)
!10011 = !DILocation(line: 1936, column: 3, scope: !10006)
!10012 = !DILocation(line: 1936, column: 17, scope: !10006)
!10013 = !DILocation(line: 1937, column: 20, scope: !10006)
!10014 = !DILocation(line: 1937, column: 10, scope: !10006)
!10015 = !DILocation(line: 1938, column: 10, scope: !10006)
!10016 = !DILocation(line: 1939, column: 20, scope: !10006)
!10017 = !DILocation(line: 1939, column: 10, scope: !10006)
!10018 = !DILocation(line: 1940, column: 10, scope: !10006)
!10019 = !DILocation(line: 1941, column: 1, scope: !10006)
!10020 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9756, file: !9756, line: 1877, type: !9819, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10021)
!10021 = !{!10022, !10023}
!10022 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10020, file: !9756, line: 1877, type: !1502)
!10023 = !DILocalVariable(name: "tmpreg", scope: !10020, file: !9756, line: 1879, type: !452)
!10024 = !DILocation(line: 0, scope: !10020)
!10025 = !DILocation(line: 1879, column: 3, scope: !10020)
!10026 = !DILocation(line: 1879, column: 17, scope: !10020)
!10027 = !DILocation(line: 1880, column: 20, scope: !10020)
!10028 = !DILocation(line: 1880, column: 10, scope: !10020)
!10029 = !DILocation(line: 1881, column: 10, scope: !10020)
!10030 = !DILocation(line: 1882, column: 20, scope: !10020)
!10031 = !DILocation(line: 1882, column: 10, scope: !10020)
!10032 = !DILocation(line: 1883, column: 10, scope: !10020)
!10033 = !DILocation(line: 1884, column: 1, scope: !10020)
!10034 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9756, file: !9756, line: 1896, type: !9819, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10035)
!10035 = !{!10036, !10037}
!10036 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10034, file: !9756, line: 1896, type: !1502)
!10037 = !DILocalVariable(name: "tmpreg", scope: !10034, file: !9756, line: 1898, type: !452)
!10038 = !DILocation(line: 0, scope: !10034)
!10039 = !DILocation(line: 1898, column: 3, scope: !10034)
!10040 = !DILocation(line: 1898, column: 17, scope: !10034)
!10041 = !DILocation(line: 1899, column: 20, scope: !10034)
!10042 = !DILocation(line: 1899, column: 10, scope: !10034)
!10043 = !DILocation(line: 1900, column: 10, scope: !10034)
!10044 = !DILocation(line: 1901, column: 20, scope: !10034)
!10045 = !DILocation(line: 1901, column: 10, scope: !10034)
!10046 = !DILocation(line: 1902, column: 10, scope: !10034)
!10047 = !DILocation(line: 1903, column: 1, scope: !10034)
!10048 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9756, file: !9756, line: 1915, type: !9819, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10049)
!10049 = !{!10050, !10051}
!10050 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10048, file: !9756, line: 1915, type: !1502)
!10051 = !DILocalVariable(name: "tmpreg", scope: !10048, file: !9756, line: 1917, type: !452)
!10052 = !DILocation(line: 0, scope: !10048)
!10053 = !DILocation(line: 1917, column: 3, scope: !10048)
!10054 = !DILocation(line: 1917, column: 17, scope: !10048)
!10055 = !DILocation(line: 1918, column: 20, scope: !10048)
!10056 = !DILocation(line: 1918, column: 10, scope: !10048)
!10057 = !DILocation(line: 1919, column: 10, scope: !10048)
!10058 = !DILocation(line: 1920, column: 20, scope: !10048)
!10059 = !DILocation(line: 1920, column: 10, scope: !10048)
!10060 = !DILocation(line: 1921, column: 10, scope: !10048)
!10061 = !DILocation(line: 1922, column: 1, scope: !10048)
!10062 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9756, file: !9756, line: 1814, type: !9757, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10063)
!10063 = !{!10064}
!10064 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10062, file: !9756, line: 1814, type: !1502)
!10065 = !DILocation(line: 0, scope: !10062)
!10066 = !DILocation(line: 1816, column: 11, scope: !10062)
!10067 = !DILocation(line: 1816, column: 46, scope: !10062)
!10068 = !DILocation(line: 1816, column: 3, scope: !10062)
!10069 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9756, file: !9756, line: 2426, type: !10070, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10072)
!10070 = !DISubroutineType(types: !10071)
!10071 = !{null, !1502, !143}
!10072 = !{!10073, !10074}
!10073 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10069, file: !9756, line: 2426, type: !1502)
!10074 = !DILocalVariable(name: "Value", arg: 2, scope: !10069, file: !9756, line: 2426, type: !143)
!10075 = !DILocation(line: 0, scope: !10069)
!10076 = !DILocation(line: 2428, column: 16, scope: !10069)
!10077 = !DILocation(line: 2428, column: 11, scope: !10069)
!10078 = !DILocation(line: 2428, column: 14, scope: !10069)
!10079 = !DILocation(line: 2429, column: 1, scope: !10069)
!10080 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9756, file: !9756, line: 1792, type: !9757, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10081)
!10081 = !{!10082}
!10082 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10080, file: !9756, line: 1792, type: !1502)
!10083 = !DILocation(line: 0, scope: !10080)
!10084 = !DILocation(line: 1794, column: 11, scope: !10080)
!10085 = !DILocation(line: 1794, column: 47, scope: !10080)
!10086 = !DILocation(line: 1794, column: 3, scope: !10080)
!10087 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9756, file: !9756, line: 2403, type: !10088, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10090)
!10088 = !DISubroutineType(types: !10089)
!10089 = !{!143, !1502}
!10090 = !{!10091}
!10091 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10087, file: !9756, line: 2403, type: !1502)
!10092 = !DILocation(line: 0, scope: !10087)
!10093 = !DILocation(line: 2405, column: 20, scope: !10087)
!10094 = !DILocation(line: 2405, column: 10, scope: !10087)
!10095 = !DILocation(line: 2405, column: 3, scope: !10087)
!10096 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1556, file: !1556, line: 1583, type: !1482, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10097)
!10097 = !{!10098, !10099, !10100, !10101, !10102, !10103}
!10098 = !DILocalVariable(name: "dev", arg: 1, scope: !10096, file: !1556, line: 1583, type: !1461)
!10099 = !DILocalVariable(name: "config", scope: !10096, file: !1556, line: 1585, type: !9447)
!10100 = !DILocalVariable(name: "data", scope: !10096, file: !1556, line: 1586, type: !9570)
!10101 = !DILocalVariable(name: "ll_parity", scope: !10096, file: !1556, line: 1587, type: !156)
!10102 = !DILocalVariable(name: "ll_datawidth", scope: !10096, file: !1556, line: 1588, type: !156)
!10103 = !DILocalVariable(name: "err", scope: !10096, file: !1556, line: 1589, type: !118)
!10104 = !DILocation(line: 0, scope: !10096)
!10105 = !DILocation(line: 1585, column: 48, scope: !10096)
!10106 = !DILocation(line: 1586, column: 38, scope: !10096)
!10107 = !DILocation(line: 1591, column: 2, scope: !10096)
!10108 = !DILocation(line: 1593, column: 29, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10096, file: !1556, line: 1593, column: 6)
!10110 = !DILocation(line: 1593, column: 7, scope: !10109)
!10111 = !DILocation(line: 1593, column: 6, scope: !10096)
!10112 = !DILocation(line: 1599, column: 31, scope: !10096)
!10113 = !DILocation(line: 1599, column: 71, scope: !10096)
!10114 = !DILocation(line: 1599, column: 8, scope: !10096)
!10115 = !DILocation(line: 1600, column: 10, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10096, file: !1556, line: 1600, column: 6)
!10117 = !DILocation(line: 1600, column: 6, scope: !10096)
!10118 = !DILocation(line: 1616, column: 36, scope: !10096)
!10119 = !DILocation(line: 1616, column: 8, scope: !10096)
!10120 = !DILocation(line: 1617, column: 10, scope: !10121)
!10121 = distinct !DILexicalBlock(scope: !10096, file: !1556, line: 1617, column: 6)
!10122 = !DILocation(line: 1617, column: 6, scope: !10096)
!10123 = !DILocation(line: 1621, column: 27, scope: !10096)
!10124 = !DILocation(line: 1621, column: 2, scope: !10096)
!10125 = !DILocation(line: 1624, column: 40, scope: !10096)
!10126 = !DILocation(line: 1624, column: 2, scope: !10096)
!10127 = !DILocation(line: 1630, column: 14, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10096, file: !1556, line: 1630, column: 6)
!10129 = !DILocation(line: 1630, column: 6, scope: !10096)
!10130 = !DILocation(line: 1638, column: 2, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10132, file: !1556, line: 1634, column: 34)
!10132 = distinct !DILexicalBlock(scope: !10128, file: !1556, line: 1634, column: 13)
!10133 = !DILocation(line: 0, scope: !10128)
!10134 = !DILocation(line: 1649, column: 35, scope: !10096)
!10135 = !DILocation(line: 1649, column: 2, scope: !10096)
!10136 = !DILocation(line: 1654, column: 14, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10096, file: !1556, line: 1654, column: 6)
!10138 = !DILocation(line: 1654, column: 6, scope: !10096)
!10139 = !DILocation(line: 1655, column: 3, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10137, file: !1556, line: 1654, column: 31)
!10141 = !DILocation(line: 1656, column: 2, scope: !10140)
!10142 = !DILocation(line: 1659, column: 37, scope: !10096)
!10143 = !DILocation(line: 1659, column: 2, scope: !10096)
!10144 = !DILocation(line: 1662, column: 14, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10096, file: !1556, line: 1662, column: 6)
!10146 = !DILocation(line: 1662, column: 6, scope: !10096)
!10147 = !DILocation(line: 1663, column: 37, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10145, file: !1556, line: 1662, column: 27)
!10149 = !DILocation(line: 1663, column: 3, scope: !10148)
!10150 = !DILocation(line: 1664, column: 2, scope: !10148)
!10151 = !DILocation(line: 1684, column: 26, scope: !10096)
!10152 = !DILocation(line: 1684, column: 2, scope: !10096)
!10153 = !DILocation(line: 1722, column: 2, scope: !10096)
!10154 = !DILocation(line: 1724, column: 1, scope: !10096)
!10155 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1556, file: !1556, line: 651, type: !10156, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10158)
!10156 = !DISubroutineType(types: !10157)
!10157 = !{null, !1461}
!10158 = !{!10159, !10160, !10161}
!10159 = !DILocalVariable(name: "dev", arg: 1, scope: !10155, file: !1556, line: 651, type: !1461)
!10160 = !DILocalVariable(name: "data", scope: !10155, file: !1556, line: 653, type: !9570)
!10161 = !DILocalVariable(name: "clk", scope: !10155, file: !1556, line: 654, type: !10162)
!10162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1461)
!10163 = !DILocation(line: 0, scope: !10155)
!10164 = !DILocation(line: 653, column: 38, scope: !10155)
!10165 = !DILocation(line: 656, column: 8, scope: !10155)
!10166 = !DILocation(line: 656, column: 14, scope: !10155)
!10167 = !DILocation(line: 657, column: 1, scope: !10155)
!10168 = distinct !DISubprogram(name: "device_is_ready", scope: !3356, file: !3356, line: 47, type: !10169, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10171)
!10169 = !DISubroutineType(types: !10170)
!10170 = !{!146, !1461}
!10171 = !{!10172}
!10172 = !DILocalVariable(name: "dev", arg: 1, scope: !10168, file: !3356, line: 47, type: !1461)
!10173 = !DILocation(line: 0, scope: !10168)
!10174 = !DILocation(line: 55, column: 2, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10168, file: !3356, line: 55, column: 2)
!10176 = !{i64 2154358310}
!10177 = !DILocation(line: 56, column: 9, scope: !10168)
!10178 = !DILocation(line: 56, column: 2, scope: !10168)
!10179 = distinct !DISubprogram(name: "clock_control_on", scope: !935, file: !935, line: 123, type: !1520, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10180)
!10180 = !{!10181, !10182, !10183}
!10181 = !DILocalVariable(name: "dev", arg: 1, scope: !10179, file: !935, line: 123, type: !1461)
!10182 = !DILocalVariable(name: "sys", arg: 2, scope: !10179, file: !935, line: 124, type: !1030)
!10183 = !DILocalVariable(name: "api", scope: !10179, file: !935, line: 126, type: !1513)
!10184 = !DILocation(line: 0, scope: !10179)
!10185 = !DILocation(line: 127, column: 49, scope: !10179)
!10186 = !DILocation(line: 129, column: 14, scope: !10179)
!10187 = !DILocation(line: 129, column: 9, scope: !10179)
!10188 = !DILocation(line: 129, column: 2, scope: !10179)
!10189 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1583, file: !1583, line: 342, type: !10190, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10192)
!10190 = !DISubroutineType(types: !10191)
!10191 = !{!118, !1631, !143}
!10192 = !{!10193, !10194, !10195, !10196}
!10193 = !DILocalVariable(name: "config", arg: 1, scope: !10189, file: !1583, line: 342, type: !1631)
!10194 = !DILocalVariable(name: "id", arg: 2, scope: !10189, file: !1583, line: 343, type: !143)
!10195 = !DILocalVariable(name: "ret", scope: !10189, file: !1583, line: 345, type: !118)
!10196 = !DILocalVariable(name: "state", scope: !10189, file: !1583, line: 346, type: !1586)
!10197 = !DILocation(line: 0, scope: !10189)
!10198 = !DILocation(line: 346, column: 2, scope: !10189)
!10199 = !DILocation(line: 348, column: 8, scope: !10189)
!10200 = !DILocation(line: 349, column: 10, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10189, file: !1583, line: 349, column: 6)
!10202 = !DILocation(line: 349, column: 6, scope: !10189)
!10203 = !DILocation(line: 353, column: 44, scope: !10189)
!10204 = !DILocation(line: 353, column: 9, scope: !10189)
!10205 = !DILocation(line: 353, column: 2, scope: !10189)
!10206 = !DILocation(line: 354, column: 1, scope: !10189)
!10207 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9756, file: !9756, line: 497, type: !9921, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10208)
!10208 = !{!10209, !10210, !10211}
!10209 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10207, file: !9756, line: 497, type: !1502)
!10210 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10207, file: !9756, line: 497, type: !156)
!10211 = !DILocalVariable(name: "val", scope: !10212, file: !9756, line: 499, type: !156)
!10212 = distinct !DILexicalBlock(scope: !10207, file: !9756, line: 499, column: 3)
!10213 = !DILocation(line: 0, scope: !10207)
!10214 = !DILocation(line: 499, column: 3, scope: !10212)
!10215 = !DILocalVariable(name: "addr", arg: 1, scope: !10216, file: !6311, line: 476, type: !1552)
!10216 = distinct !DISubprogram(name: "__LDREXW", scope: !6311, file: !6311, line: 476, type: !10217, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10219)
!10217 = !DISubroutineType(types: !10218)
!10218 = !{!156, !1552}
!10219 = !{!10215, !10220}
!10220 = !DILocalVariable(name: "result", scope: !10216, file: !6311, line: 478, type: !156)
!10221 = !DILocation(line: 0, scope: !10216, inlinedAt: !10222)
!10222 = distinct !DILocation(line: 499, column: 3, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10212, file: !9756, line: 499, column: 3)
!10224 = !DILocation(line: 480, column: 4, scope: !10216, inlinedAt: !10222)
!10225 = !{i64 2861579}
!10226 = !DILocation(line: 499, column: 3, scope: !10223)
!10227 = !DILocation(line: 0, scope: !10212)
!10228 = !DILocalVariable(name: "value", arg: 1, scope: !10229, file: !6311, line: 527, type: !156)
!10229 = distinct !DISubprogram(name: "__STREXW", scope: !6311, file: !6311, line: 527, type: !10230, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10232)
!10230 = !DISubroutineType(types: !10231)
!10231 = !{!156, !156, !1552}
!10232 = !{!10228, !10233, !10234}
!10233 = !DILocalVariable(name: "addr", arg: 2, scope: !10229, file: !6311, line: 527, type: !1552)
!10234 = !DILocalVariable(name: "result", scope: !10229, file: !6311, line: 529, type: !156)
!10235 = !DILocation(line: 0, scope: !10229, inlinedAt: !10236)
!10236 = distinct !DILocation(line: 499, column: 3, scope: !10212)
!10237 = !DILocation(line: 531, column: 4, scope: !10229, inlinedAt: !10236)
!10238 = !{i64 2863015}
!10239 = distinct !{!10239, !10214, !10214}
!10240 = !DILocation(line: 500, column: 1, scope: !10207)
!10241 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9756, file: !9756, line: 850, type: !9930, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10242)
!10242 = !{!10243, !10244, !10245, !10246}
!10243 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10241, file: !9756, line: 850, type: !1502)
!10244 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10241, file: !9756, line: 850, type: !156)
!10245 = !DILocalVariable(name: "Parity", arg: 3, scope: !10241, file: !9756, line: 850, type: !156)
!10246 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10241, file: !9756, line: 851, type: !156)
!10247 = !DILocation(line: 0, scope: !10241)
!10248 = !DILocation(line: 853, column: 3, scope: !10241)
!10249 = !DILocation(line: 854, column: 3, scope: !10241)
!10250 = !DILocation(line: 855, column: 1, scope: !10241)
!10251 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9756, file: !9756, line: 1337, type: !9819, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10252)
!10252 = !{!10253}
!10253 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10251, file: !9756, line: 1337, type: !1502)
!10254 = !DILocation(line: 0, scope: !10251)
!10255 = !DILocation(line: 1339, column: 3, scope: !10251)
!10256 = !DILocation(line: 1340, column: 1, scope: !10251)
!10257 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1583, file: !1583, line: 316, type: !10258, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10260)
!10258 = !DISubroutineType(types: !10259)
!10259 = !{!118, !1631, !1586}
!10260 = !{!10261, !10262, !10263}
!10261 = !DILocalVariable(name: "config", arg: 1, scope: !10257, file: !1583, line: 317, type: !1631)
!10262 = !DILocalVariable(name: "state", arg: 2, scope: !10257, file: !1583, line: 318, type: !1586)
!10263 = !DILocalVariable(name: "reg", scope: !10257, file: !1583, line: 320, type: !22)
!10264 = !DILocation(line: 0, scope: !10257)
!10265 = !DILocation(line: 329, column: 39, scope: !10257)
!10266 = !DILocation(line: 329, column: 52, scope: !10257)
!10267 = !DILocation(line: 329, column: 9, scope: !10257)
!10268 = !DILocation(line: 329, column: 2, scope: !10257)
!10269 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !10169, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1417, retainedNodes: !10270)
!10270 = !{!10271}
!10271 = !DILocalVariable(name: "dev", arg: 1, scope: !10269, file: !130, line: 730, type: !1461)
!10272 = !DILocation(line: 0, scope: !10269)
!10273 = !DILocation(line: 732, column: 9, scope: !10269)
!10274 = !DILocation(line: 732, column: 2, scope: !10269)
!10275 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1710, file: !1710, line: 270, type: !1716, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1634, retainedNodes: !10276)
!10276 = !{!10277}
!10277 = !DILocalVariable(name: "dev", arg: 1, scope: !10275, file: !1710, line: 270, type: !1718)
!10278 = !DILocation(line: 0, scope: !10275)
!10279 = !DILocation(line: 274, column: 2, scope: !10275)
!10280 = !DILocation(line: 275, column: 12, scope: !10275)
!10281 = !DILocation(line: 276, column: 15, scope: !10275)
!10282 = !DILocation(line: 277, column: 16, scope: !10275)
!10283 = !DILocation(line: 278, column: 15, scope: !10275)
!10284 = !DILocation(line: 279, column: 16, scope: !10275)
!10285 = !DILocation(line: 282, column: 2, scope: !10275)
!10286 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !656, file: !656, line: 1814, type: !6351, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1634, retainedNodes: !10287)
!10287 = !{!10288, !10289}
!10288 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10286, file: !656, line: 1814, type: !891)
!10289 = !DILocalVariable(name: "priority", arg: 2, scope: !10286, file: !656, line: 1814, type: !156)
!10290 = !DILocation(line: 0, scope: !10286)
!10291 = !DILocation(line: 1822, column: 46, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10293, file: !656, line: 1821, column: 3)
!10293 = distinct !DILexicalBlock(scope: !10286, file: !656, line: 1816, column: 7)
!10294 = !DILocation(line: 1824, column: 1, scope: !10286)
!10295 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1710, file: !1710, line: 118, type: !6248, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1634, retainedNodes: !10296)
!10296 = !{!10297, !10298}
!10297 = !DILocalVariable(name: "arg", arg: 1, scope: !10295, file: !1710, line: 118, type: !117)
!10298 = !DILocalVariable(name: "dticks", scope: !10295, file: !1710, line: 121, type: !156)
!10299 = !DILocation(line: 0, scope: !10295)
!10300 = !DILocation(line: 124, column: 2, scope: !10295)
!10301 = !DILocation(line: 129, column: 17, scope: !10295)
!10302 = !DILocation(line: 129, column: 14, scope: !10295)
!10303 = !DILocation(line: 130, column: 15, scope: !10295)
!10304 = !DILocation(line: 145, column: 27, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10306, file: !1710, line: 132, column: 16)
!10306 = distinct !DILexicalBlock(scope: !10295, file: !1710, line: 132, column: 6)
!10307 = !DILocation(line: 145, column: 25, scope: !10305)
!10308 = !DILocation(line: 145, column: 45, scope: !10305)
!10309 = !DILocation(line: 146, column: 30, scope: !10305)
!10310 = !DILocation(line: 146, column: 20, scope: !10305)
!10311 = !DILocation(line: 147, column: 3, scope: !10305)
!10312 = !DILocation(line: 151, column: 2, scope: !10295)
!10313 = !DILocation(line: 152, column: 1, scope: !10295)
!10314 = distinct !DISubprogram(name: "elapsed", scope: !1710, file: !1710, line: 85, type: !6398, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1634, retainedNodes: !10315)
!10315 = !{!10316, !10317, !10318}
!10316 = !DILocalVariable(name: "val1", scope: !10314, file: !1710, line: 87, type: !156)
!10317 = !DILocalVariable(name: "ctrl", scope: !10314, file: !1710, line: 88, type: !156)
!10318 = !DILocalVariable(name: "val2", scope: !10314, file: !1710, line: 89, type: !156)
!10319 = !DILocation(line: 87, column: 27, scope: !10314)
!10320 = !DILocation(line: 0, scope: !10314)
!10321 = !DILocation(line: 88, column: 27, scope: !10314)
!10322 = !DILocation(line: 89, column: 27, scope: !10314)
!10323 = !DILocation(line: 105, column: 12, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10314, file: !1710, line: 105, column: 6)
!10325 = !DILocation(line: 106, column: 6, scope: !10324)
!10326 = !DILocation(line: 107, column: 16, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !10324, file: !1710, line: 106, column: 24)
!10328 = !DILocation(line: 111, column: 18, scope: !10327)
!10329 = !DILocation(line: 112, column: 2, scope: !10327)
!10330 = !DILocation(line: 114, column: 20, scope: !10314)
!10331 = !DILocation(line: 114, column: 30, scope: !10314)
!10332 = !DILocation(line: 114, column: 28, scope: !10314)
!10333 = !DILocation(line: 114, column: 2, scope: !10314)
!10334 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1710, file: !1710, line: 154, type: !10335, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1634, retainedNodes: !10337)
!10335 = !DISubroutineType(types: !10336)
!10336 = !{null, !362, !146}
!10337 = !{!10338, !10339, !10340, !10341, !10342, !10343, !10344, !10349, !10350}
!10338 = !DILocalVariable(name: "ticks", arg: 1, scope: !10334, file: !1710, line: 154, type: !362)
!10339 = !DILocalVariable(name: "idle", arg: 2, scope: !10334, file: !1710, line: 154, type: !146)
!10340 = !DILocalVariable(name: "delay", scope: !10334, file: !1710, line: 169, type: !156)
!10341 = !DILocalVariable(name: "val1", scope: !10334, file: !1710, line: 170, type: !156)
!10342 = !DILocalVariable(name: "val2", scope: !10334, file: !1710, line: 170, type: !156)
!10343 = !DILocalVariable(name: "last_load_", scope: !10334, file: !1710, line: 171, type: !156)
!10344 = !DILocalVariable(name: "key", scope: !10334, file: !1710, line: 176, type: !10345)
!10345 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !10346)
!10346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !10347)
!10347 = !{!10348}
!10348 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10346, file: !334, line: 33, baseType: !118, size: 32)
!10349 = !DILocalVariable(name: "pending", scope: !10334, file: !1710, line: 178, type: !156)
!10350 = !DILocalVariable(name: "unannounced", scope: !10334, file: !1710, line: 185, type: !156)
!10351 = !DILocation(line: 0, scope: !10334)
!10352 = !DILocation(line: 162, column: 49, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10334, file: !1710, line: 162, column: 6)
!10354 = !DILocation(line: 163, column: 17, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !10353, file: !1710, line: 162, column: 78)
!10356 = !DILocation(line: 164, column: 13, scope: !10355)
!10357 = !DILocation(line: 165, column: 3, scope: !10355)
!10358 = !DILocation(line: 171, column: 24, scope: !10334)
!10359 = !DILocation(line: 173, column: 10, scope: !10334)
!10360 = !DILocation(line: 174, column: 10, scope: !10334)
!10361 = !DILocalVariable(name: "l", arg: 1, scope: !10362, file: !334, line: 136, type: !10365)
!10362 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !10363, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1634, retainedNodes: !10366)
!10363 = !DISubroutineType(types: !10364)
!10364 = !{!10345, !10365}
!10365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 32)
!10366 = !{!10361, !10367}
!10367 = !DILocalVariable(name: "k", scope: !10362, file: !334, line: 139, type: !10345)
!10368 = !DILocation(line: 0, scope: !10362, inlinedAt: !10369)
!10369 = distinct !DILocation(line: 176, column: 25, scope: !10334)
!10370 = !DILocation(line: 55, column: 2, scope: !10371, inlinedAt: !10375)
!10371 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6137, file: !6137, line: 42, type: !6138, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1634, retainedNodes: !10372)
!10372 = !{!10373, !10374}
!10373 = !DILocalVariable(name: "key", scope: !10371, file: !6137, line: 44, type: !32)
!10374 = !DILocalVariable(name: "tmp", scope: !10371, file: !6137, line: 53, type: !32)
!10375 = distinct !DILocation(line: 145, column: 10, scope: !10362, inlinedAt: !10369)
!10376 = !{i64 1924117}
!10377 = !DILocation(line: 0, scope: !10371, inlinedAt: !10375)
!10378 = !DILocation(line: 148, column: 2, scope: !10379, inlinedAt: !10369)
!10379 = distinct !DILexicalBlock(scope: !10380, file: !334, line: 148, column: 2)
!10380 = distinct !DILexicalBlock(scope: !10362, file: !334, line: 148, column: 2)
!10381 = !DILocation(line: 148, column: 2, scope: !10380, inlinedAt: !10369)
!10382 = !DILocation(line: 148, column: 2, scope: !10383, inlinedAt: !10369)
!10383 = distinct !DILexicalBlock(scope: !10379, file: !334, line: 148, column: 2)
!10384 = !DILocation(line: 160, column: 2, scope: !10362, inlinedAt: !10369)
!10385 = !DILocation(line: 178, column: 21, scope: !10334)
!10386 = !DILocation(line: 180, column: 18, scope: !10334)
!10387 = !DILocation(line: 182, column: 14, scope: !10334)
!10388 = !DILocation(line: 183, column: 15, scope: !10334)
!10389 = !DILocation(line: 185, column: 39, scope: !10334)
!10390 = !DILocation(line: 185, column: 37, scope: !10334)
!10391 = !DILocation(line: 187, column: 27, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10334, file: !1710, line: 187, column: 6)
!10393 = !DILocation(line: 187, column: 6, scope: !10334)
!10394 = !DILocation(line: 202, column: 27, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10392, file: !1710, line: 195, column: 9)
!10396 = !DILocation(line: 202, column: 48, scope: !10395)
!10397 = !DILocation(line: 203, column: 9, scope: !10395)
!10398 = !DILocation(line: 204, column: 11, scope: !10395)
!10399 = !DILocation(line: 205, column: 13, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10395, file: !1710, line: 205, column: 7)
!10401 = !DILocation(line: 205, column: 7, scope: !10395)
!10402 = !DILocation(line: 0, scope: !10392)
!10403 = !DILocation(line: 212, column: 18, scope: !10334)
!10404 = !DILocation(line: 214, column: 28, scope: !10334)
!10405 = !DILocation(line: 214, column: 16, scope: !10334)
!10406 = !DILocation(line: 215, column: 15, scope: !10334)
!10407 = !DILocation(line: 227, column: 11, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10334, file: !1710, line: 227, column: 6)
!10409 = !DILocation(line: 227, column: 6, scope: !10334)
!10410 = !DILocation(line: 228, column: 15, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10408, file: !1710, line: 227, column: 19)
!10412 = !DILocation(line: 228, column: 38, scope: !10411)
!10413 = !DILocation(line: 228, column: 24, scope: !10411)
!10414 = !DILocation(line: 229, column: 2, scope: !10411)
!10415 = !DILocation(line: 230, column: 24, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10408, file: !1710, line: 229, column: 9)
!10417 = !DILocation(line: 230, column: 15, scope: !10416)
!10418 = !DILocation(line: 0, scope: !10408)
!10419 = !DILocalVariable(name: "key", arg: 2, scope: !10420, file: !334, line: 190, type: !10345)
!10420 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !10421, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1634, retainedNodes: !10423)
!10421 = !DISubroutineType(types: !10422)
!10422 = !{null, !10365, !10345}
!10423 = !{!10424, !10419}
!10424 = !DILocalVariable(name: "l", arg: 1, scope: !10420, file: !334, line: 189, type: !10365)
!10425 = !DILocation(line: 0, scope: !10420, inlinedAt: !10426)
!10426 = distinct !DILocation(line: 232, column: 2, scope: !10334)
!10427 = !DILocation(line: 194, column: 2, scope: !10428, inlinedAt: !10426)
!10428 = distinct !DILexicalBlock(scope: !10429, file: !334, line: 194, column: 2)
!10429 = distinct !DILexicalBlock(scope: !10420, file: !334, line: 194, column: 2)
!10430 = !DILocation(line: 194, column: 2, scope: !10429, inlinedAt: !10426)
!10431 = !DILocation(line: 194, column: 2, scope: !10432, inlinedAt: !10426)
!10432 = distinct !DILexicalBlock(scope: !10428, file: !334, line: 194, column: 2)
!10433 = !DILocalVariable(name: "key", arg: 1, scope: !10434, file: !6137, line: 84, type: !32)
!10434 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6137, file: !6137, line: 84, type: !6148, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1634, retainedNodes: !10435)
!10435 = !{!10433}
!10436 = !DILocation(line: 0, scope: !10434, inlinedAt: !10437)
!10437 = distinct !DILocation(line: 215, column: 2, scope: !10420, inlinedAt: !10426)
!10438 = !DILocation(line: 95, column: 2, scope: !10434, inlinedAt: !10437)
!10439 = !{i64 1924934}
!10440 = !DILocation(line: 234, column: 1, scope: !10334)
!10441 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1710, file: !1710, line: 236, type: !6398, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1634, retainedNodes: !10442)
!10442 = !{!10443, !10444}
!10443 = !DILocalVariable(name: "key", scope: !10441, file: !1710, line: 242, type: !10345)
!10444 = !DILocalVariable(name: "cyc", scope: !10441, file: !1710, line: 243, type: !156)
!10445 = !DILocation(line: 0, scope: !10362, inlinedAt: !10446)
!10446 = distinct !DILocation(line: 242, column: 25, scope: !10441)
!10447 = !DILocation(line: 55, column: 2, scope: !10371, inlinedAt: !10448)
!10448 = distinct !DILocation(line: 145, column: 10, scope: !10362, inlinedAt: !10446)
!10449 = !DILocation(line: 0, scope: !10371, inlinedAt: !10448)
!10450 = !DILocation(line: 148, column: 2, scope: !10379, inlinedAt: !10446)
!10451 = !DILocation(line: 148, column: 2, scope: !10380, inlinedAt: !10446)
!10452 = !DILocation(line: 148, column: 2, scope: !10383, inlinedAt: !10446)
!10453 = !DILocation(line: 160, column: 2, scope: !10362, inlinedAt: !10446)
!10454 = !DILocation(line: 0, scope: !10441)
!10455 = !DILocation(line: 243, column: 17, scope: !10441)
!10456 = !DILocation(line: 243, column: 29, scope: !10441)
!10457 = !DILocation(line: 243, column: 43, scope: !10441)
!10458 = !DILocation(line: 0, scope: !10420, inlinedAt: !10459)
!10459 = distinct !DILocation(line: 245, column: 2, scope: !10441)
!10460 = !DILocation(line: 194, column: 2, scope: !10428, inlinedAt: !10459)
!10461 = !DILocation(line: 194, column: 2, scope: !10429, inlinedAt: !10459)
!10462 = !DILocation(line: 194, column: 2, scope: !10432, inlinedAt: !10459)
!10463 = !DILocation(line: 243, column: 27, scope: !10441)
!10464 = !DILocation(line: 243, column: 41, scope: !10441)
!10465 = !DILocation(line: 0, scope: !10434, inlinedAt: !10466)
!10466 = distinct !DILocation(line: 215, column: 2, scope: !10420, inlinedAt: !10459)
!10467 = !DILocation(line: 95, column: 2, scope: !10434, inlinedAt: !10466)
!10468 = !DILocation(line: 246, column: 13, scope: !10441)
!10469 = !DILocation(line: 246, column: 2, scope: !10441)
!10470 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1710, file: !1710, line: 249, type: !6398, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1634, retainedNodes: !10471)
!10471 = !{!10472, !10473}
!10472 = !DILocalVariable(name: "key", scope: !10470, file: !1710, line: 251, type: !10345)
!10473 = !DILocalVariable(name: "ret", scope: !10470, file: !1710, line: 252, type: !156)
!10474 = !DILocation(line: 0, scope: !10362, inlinedAt: !10475)
!10475 = distinct !DILocation(line: 251, column: 25, scope: !10470)
!10476 = !DILocation(line: 55, column: 2, scope: !10371, inlinedAt: !10477)
!10477 = distinct !DILocation(line: 145, column: 10, scope: !10362, inlinedAt: !10475)
!10478 = !DILocation(line: 0, scope: !10371, inlinedAt: !10477)
!10479 = !DILocation(line: 148, column: 2, scope: !10379, inlinedAt: !10475)
!10480 = !DILocation(line: 148, column: 2, scope: !10380, inlinedAt: !10475)
!10481 = !DILocation(line: 148, column: 2, scope: !10383, inlinedAt: !10475)
!10482 = !DILocation(line: 160, column: 2, scope: !10362, inlinedAt: !10475)
!10483 = !DILocation(line: 0, scope: !10470)
!10484 = !DILocation(line: 252, column: 17, scope: !10470)
!10485 = !DILocation(line: 252, column: 29, scope: !10470)
!10486 = !DILocation(line: 0, scope: !10420, inlinedAt: !10487)
!10487 = distinct !DILocation(line: 254, column: 2, scope: !10470)
!10488 = !DILocation(line: 194, column: 2, scope: !10428, inlinedAt: !10487)
!10489 = !DILocation(line: 194, column: 2, scope: !10429, inlinedAt: !10487)
!10490 = !DILocation(line: 194, column: 2, scope: !10432, inlinedAt: !10487)
!10491 = !DILocation(line: 252, column: 27, scope: !10470)
!10492 = !DILocation(line: 0, scope: !10434, inlinedAt: !10493)
!10493 = distinct !DILocation(line: 215, column: 2, scope: !10420, inlinedAt: !10487)
!10494 = !DILocation(line: 95, column: 2, scope: !10434, inlinedAt: !10493)
!10495 = !DILocation(line: 255, column: 2, scope: !10470)
!10496 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1710, file: !1710, line: 258, type: !365, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1634, retainedNodes: !2101)
!10497 = !DILocation(line: 260, column: 6, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !10496, file: !1710, line: 260, column: 6)
!10499 = !DILocation(line: 260, column: 16, scope: !10498)
!10500 = !DILocation(line: 260, column: 6, scope: !10496)
!10501 = !DILocation(line: 261, column: 17, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10498, file: !1710, line: 260, column: 34)
!10503 = !DILocation(line: 262, column: 2, scope: !10502)
!10504 = !DILocation(line: 263, column: 1, scope: !10496)
!10505 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1710, file: !1710, line: 265, type: !365, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1634, retainedNodes: !2101)
!10506 = !DILocation(line: 267, column: 16, scope: !10505)
!10507 = !DILocation(line: 268, column: 1, scope: !10505)
!10508 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10509, file: !10509, line: 9, type: !10510, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2939, retainedNodes: !10533)
!10509 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10510 = !DISubroutineType(types: !10511)
!10511 = !{!118, !10512, !143, !10532}
!10512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10513, size: 32)
!10513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10514)
!10514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1583, line: 60, size: 64, elements: !10515)
!10515 = !{!10516, !10531}
!10516 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10514, file: !1583, line: 69, baseType: !10517, size: 32)
!10517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10518, size: 32)
!10518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10519)
!10519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1583, line: 50, size: 64, elements: !10520)
!10520 = !{!10521, !10529, !10530}
!10521 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10519, file: !1583, line: 52, baseType: !10522, size: 32)
!10522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10523, size: 32)
!10523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10524)
!10524 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1594, line: 37, baseType: !10525)
!10525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1594, line: 32, size: 64, elements: !10526)
!10526 = !{!10527, !10528}
!10527 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10525, file: !1594, line: 34, baseType: !156, size: 32)
!10528 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10525, file: !1594, line: 36, baseType: !156, size: 32, offset: 32)
!10529 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10519, file: !1583, line: 54, baseType: !143, size: 8, offset: 32)
!10530 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10519, file: !1583, line: 56, baseType: !143, size: 8, offset: 40)
!10531 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10514, file: !1583, line: 71, baseType: !143, size: 8, offset: 32)
!10532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10517, size: 32)
!10533 = !{!10534, !10535, !10536}
!10534 = !DILocalVariable(name: "config", arg: 1, scope: !10508, file: !10509, line: 9, type: !10512)
!10535 = !DILocalVariable(name: "id", arg: 2, scope: !10508, file: !10509, line: 9, type: !143)
!10536 = !DILocalVariable(name: "state", arg: 3, scope: !10508, file: !10509, line: 10, type: !10532)
!10537 = !DILocation(line: 0, scope: !10508)
!10538 = !DILocation(line: 12, column: 20, scope: !10508)
!10539 = !DILocation(line: 13, column: 27, scope: !10508)
!10540 = !DILocation(line: 13, column: 42, scope: !10508)
!10541 = !DILocation(line: 13, column: 19, scope: !10508)
!10542 = !DILocation(line: 13, column: 16, scope: !10508)
!10543 = !DILocation(line: 13, column: 2, scope: !10508)
!10544 = distinct !{!10544, !10543, !10545}
!10545 = !DILocation(line: 19, column: 2, scope: !10508)
!10546 = !DILocation(line: 14, column: 23, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10548, file: !10509, line: 14, column: 7)
!10548 = distinct !DILexicalBlock(scope: !10508, file: !10509, line: 13, column: 54)
!10549 = !DILocation(line: 14, column: 10, scope: !10547)
!10550 = !DILocation(line: 18, column: 11, scope: !10548)
!10551 = !DILocation(line: 14, column: 7, scope: !10548)
!10552 = !DILocation(line: 22, column: 1, scope: !10508)
!10553 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1829, file: !1829, line: 193, type: !10554, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1747, retainedNodes: !10563)
!10554 = !DISubroutineType(types: !10555)
!10555 = !{!118, !10556, !143, !22}
!10556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10557, size: 32)
!10557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10558)
!10558 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1594, line: 37, baseType: !10559)
!10559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1594, line: 32, size: 64, elements: !10560)
!10560 = !{!10561, !10562}
!10561 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10559, file: !1594, line: 34, baseType: !156, size: 32)
!10562 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10559, file: !1594, line: 36, baseType: !156, size: 32, offset: 32)
!10563 = !{!10564, !10565, !10566, !10567, !10568, !10569, !10570, !10571, !10573}
!10564 = !DILocalVariable(name: "pins", arg: 1, scope: !10553, file: !1829, line: 193, type: !10556)
!10565 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10553, file: !1829, line: 193, type: !143)
!10566 = !DILocalVariable(name: "reg", arg: 3, scope: !10553, file: !1829, line: 194, type: !22)
!10567 = !DILocalVariable(name: "pin", scope: !10553, file: !1829, line: 196, type: !156)
!10568 = !DILocalVariable(name: "mux", scope: !10553, file: !1829, line: 196, type: !156)
!10569 = !DILocalVariable(name: "pin_cgf", scope: !10553, file: !1829, line: 197, type: !156)
!10570 = !DILocalVariable(name: "ret", scope: !10553, file: !1829, line: 198, type: !118)
!10571 = !DILocalVariable(name: "i", scope: !10572, file: !1829, line: 209, type: !143)
!10572 = distinct !DILexicalBlock(scope: !10553, file: !1829, line: 209, column: 2)
!10573 = !DILocalVariable(name: "gpio_out", scope: !10574, file: !1829, line: 239, type: !156)
!10574 = distinct !DILexicalBlock(scope: !10575, file: !1829, line: 238, column: 55)
!10575 = distinct !DILexicalBlock(scope: !10576, file: !1829, line: 238, column: 14)
!10576 = distinct !DILexicalBlock(scope: !10577, file: !1829, line: 236, column: 14)
!10577 = distinct !DILexicalBlock(scope: !10578, file: !1829, line: 234, column: 7)
!10578 = distinct !DILexicalBlock(scope: !10579, file: !1829, line: 209, column: 41)
!10579 = distinct !DILexicalBlock(scope: !10572, file: !1829, line: 209, column: 2)
!10580 = !DILocation(line: 0, scope: !10553)
!10581 = !DILocation(line: 0, scope: !10572)
!10582 = !DILocation(line: 209, column: 25, scope: !10579)
!10583 = !DILocation(line: 209, column: 2, scope: !10572)
!10584 = distinct !{!10584, !10583, !10585}
!10585 = !DILocation(line: 259, column: 2, scope: !10572)
!10586 = !DILocation(line: 210, column: 17, scope: !10578)
!10587 = !DILocation(line: 234, column: 7, scope: !10577)
!10588 = !DILocation(line: 234, column: 33, scope: !10577)
!10589 = !DILocation(line: 234, column: 7, scope: !10578)
!10590 = !DILocation(line: 235, column: 22, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10577, file: !1829, line: 234, column: 49)
!10592 = !DILocation(line: 235, column: 29, scope: !10591)
!10593 = !DILocation(line: 236, column: 3, scope: !10591)
!10594 = !DILocation(line: 236, column: 14, scope: !10577)
!10595 = !DILocation(line: 239, column: 32, scope: !10574)
!10596 = !DILocation(line: 0, scope: !10574)
!10597 = !DILocation(line: 241, column: 8, scope: !10574)
!10598 = !DILocation(line: 246, column: 3, scope: !10574)
!10599 = !DILocation(line: 252, column: 9, scope: !10578)
!10600 = !DILocation(line: 255, column: 9, scope: !10578)
!10601 = !DILocation(line: 256, column: 11, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10578, file: !1829, line: 256, column: 7)
!10603 = !DILocation(line: 209, column: 37, scope: !10579)
!10604 = !DILocation(line: 256, column: 7, scope: !10578)
!10605 = !DILocation(line: 262, column: 1, scope: !10553)
!10606 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1829, file: !1829, line: 176, type: !10607, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1747, retainedNodes: !10609)
!10607 = !DISubroutineType(types: !10608)
!10608 = !{!118, !156, !156, !156}
!10609 = !{!10610, !10611, !10612, !10613}
!10610 = !DILocalVariable(name: "pin", arg: 1, scope: !10606, file: !1829, line: 176, type: !156)
!10611 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10606, file: !1829, line: 176, type: !156)
!10612 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10606, file: !1829, line: 176, type: !156)
!10613 = !DILocalVariable(name: "port_device", scope: !10606, file: !1829, line: 178, type: !1759)
!10614 = !DILocation(line: 0, scope: !10606)
!10615 = !DILocation(line: 180, column: 22, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10606, file: !1829, line: 180, column: 6)
!10617 = !DILocation(line: 180, column: 6, scope: !10606)
!10618 = !DILocation(line: 180, column: 6, scope: !10616)
!10619 = !DILocation(line: 184, column: 16, scope: !10606)
!10620 = !DILocation(line: 186, column: 19, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10606, file: !1829, line: 186, column: 6)
!10622 = !DILocation(line: 186, column: 28, scope: !10621)
!10623 = !DILocation(line: 186, column: 33, scope: !10621)
!10624 = !DILocation(line: 186, column: 6, scope: !10606)
!10625 = !DILocation(line: 190, column: 43, scope: !10606)
!10626 = !DILocation(line: 190, column: 9, scope: !10606)
!10627 = !DILocation(line: 190, column: 2, scope: !10606)
!10628 = !DILocation(line: 191, column: 1, scope: !10606)
!10629 = distinct !DISubprogram(name: "device_is_ready", scope: !3356, file: !3356, line: 47, type: !10630, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1747, retainedNodes: !10632)
!10630 = !DISubroutineType(types: !10631)
!10631 = !{!146, !1759}
!10632 = !{!10633}
!10633 = !DILocalVariable(name: "dev", arg: 1, scope: !10629, file: !3356, line: 47, type: !1759)
!10634 = !DILocation(line: 0, scope: !10629)
!10635 = !DILocation(line: 55, column: 2, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10629, file: !3356, line: 55, column: 2)
!10637 = !{i64 2149162187}
!10638 = !DILocation(line: 56, column: 9, scope: !10629)
!10639 = !DILocation(line: 56, column: 2, scope: !10629)
!10640 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !130, file: !130, line: 730, type: !10630, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1747, retainedNodes: !10641)
!10641 = !{!10642}
!10642 = !DILocalVariable(name: "dev", arg: 1, scope: !10640, file: !130, line: 730, type: !1759)
!10643 = !DILocation(line: 0, scope: !10640)
!10644 = !DILocation(line: 732, column: 9, scope: !10640)
!10645 = !DILocation(line: 732, column: 2, scope: !10640)
!10646 = distinct !DISubprogram(name: "SystemInit", scope: !1879, file: !1879, line: 167, type: !365, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1837, retainedNodes: !2101)
!10647 = !DILocation(line: 182, column: 1, scope: !10646)
!10648 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1879, file: !1879, line: 220, type: !365, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1837, retainedNodes: !10649)
!10649 = !{!10650, !10651, !10652, !10653, !10654}
!10650 = !DILocalVariable(name: "tmp", scope: !10648, file: !1879, line: 222, type: !156)
!10651 = !DILocalVariable(name: "pllvco", scope: !10648, file: !1879, line: 222, type: !156)
!10652 = !DILocalVariable(name: "pllp", scope: !10648, file: !1879, line: 222, type: !156)
!10653 = !DILocalVariable(name: "pllsource", scope: !10648, file: !1879, line: 222, type: !156)
!10654 = !DILocalVariable(name: "pllm", scope: !10648, file: !1879, line: 222, type: !156)
!10655 = !DILocation(line: 0, scope: !10648)
!10656 = !DILocation(line: 225, column: 14, scope: !10648)
!10657 = !DILocation(line: 225, column: 19, scope: !10648)
!10658 = !DILocation(line: 227, column: 3, scope: !10648)
!10659 = !DILocation(line: 234, column: 7, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10648, file: !1879, line: 228, column: 3)
!10661 = !DILocation(line: 240, column: 25, scope: !10660)
!10662 = !DILocation(line: 241, column: 19, scope: !10660)
!10663 = !DILocation(line: 241, column: 27, scope: !10660)
!10664 = !DILocation(line: 243, column: 21, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10660, file: !1879, line: 243, column: 11)
!10666 = !DILocation(line: 0, scope: !10665)
!10667 = !DILocation(line: 254, column: 22, scope: !10660)
!10668 = !DILocation(line: 254, column: 62, scope: !10660)
!10669 = !DILocation(line: 255, column: 31, scope: !10660)
!10670 = !DILocation(line: 256, column: 7, scope: !10660)
!10671 = !DILocation(line: 0, scope: !10660)
!10672 = !DILocation(line: 263, column: 30, scope: !10648)
!10673 = !DILocation(line: 263, column: 52, scope: !10648)
!10674 = !DILocation(line: 263, column: 9, scope: !10648)
!10675 = !DILocation(line: 265, column: 19, scope: !10648)
!10676 = !DILocation(line: 266, column: 1, scope: !10648)
!10677 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10678, file: !10678, line: 200, type: !10679, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !2101)
!10678 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10679 = !DISubroutineType(types: !10680)
!10680 = !{!10681}
!10681 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2945, line: 44, baseType: !2944)
!10682 = !DILocation(line: 202, column: 3, scope: !10677)
!10683 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10678, file: !10678, line: 219, type: !10684, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !10708)
!10684 = !DISubroutineType(types: !10685)
!10685 = !{!10681, !10686}
!10686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10687, size: 32)
!10687 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10688, line: 70, baseType: !10689)
!10688 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10689 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10688, line: 49, size: 384, elements: !10690)
!10690 = !{!10691, !10692, !10693, !10694, !10695, !10696, !10697}
!10691 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10689, file: !10688, line: 51, baseType: !156, size: 32)
!10692 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10689, file: !10688, line: 54, baseType: !156, size: 32, offset: 32)
!10693 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10689, file: !10688, line: 57, baseType: !156, size: 32, offset: 64)
!10694 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10689, file: !10688, line: 60, baseType: !156, size: 32, offset: 96)
!10695 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10689, file: !10688, line: 63, baseType: !156, size: 32, offset: 128)
!10696 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10689, file: !10688, line: 66, baseType: !156, size: 32, offset: 160)
!10697 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10689, file: !10688, line: 69, baseType: !10698, size: 192, offset: 192)
!10698 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10699, line: 73, baseType: !10700)
!10699 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10700 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10699, line: 45, size: 192, elements: !10701)
!10701 = !{!10702, !10703, !10704, !10705, !10706, !10707}
!10702 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10700, file: !10699, line: 47, baseType: !156, size: 32)
!10703 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10700, file: !10699, line: 50, baseType: !156, size: 32, offset: 32)
!10704 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10700, file: !10699, line: 53, baseType: !156, size: 32, offset: 64)
!10705 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10700, file: !10699, line: 56, baseType: !156, size: 32, offset: 96)
!10706 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10700, file: !10699, line: 60, baseType: !156, size: 32, offset: 128)
!10707 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !10700, file: !10699, line: 63, baseType: !156, size: 32, offset: 160)
!10708 = !{!10709, !10710, !10711, !10712, !10716}
!10709 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10683, file: !10678, line: 219, type: !10686)
!10710 = !DILocalVariable(name: "tickstart", scope: !10683, file: !10678, line: 221, type: !156)
!10711 = !DILocalVariable(name: "pll_config", scope: !10683, file: !10678, line: 221, type: !156)
!10712 = !DILocalVariable(name: "pwrclkchanged", scope: !10713, file: !10678, line: 391, type: !10715)
!10713 = distinct !DILexicalBlock(scope: !10714, file: !10678, line: 390, column: 3)
!10714 = distinct !DILexicalBlock(scope: !10683, file: !10678, line: 389, column: 6)
!10715 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !930, line: 188, baseType: !2951)
!10716 = !DILocalVariable(name: "tmpreg", scope: !10717, file: !10678, line: 400, type: !452)
!10717 = distinct !DILexicalBlock(scope: !10718, file: !10678, line: 400, column: 7)
!10718 = distinct !DILexicalBlock(scope: !10719, file: !10678, line: 399, column: 5)
!10719 = distinct !DILexicalBlock(scope: !10713, file: !10678, line: 398, column: 8)
!10720 = !DILocation(line: 0, scope: !10683)
!10721 = !DILocation(line: 224, column: 24, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10683, file: !10678, line: 224, column: 6)
!10723 = !DILocation(line: 224, column: 6, scope: !10683)
!10724 = !DILocation(line: 232, column: 27, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10683, file: !10678, line: 232, column: 6)
!10726 = !DILocation(line: 232, column: 43, scope: !10725)
!10727 = !DILocation(line: 232, column: 69, scope: !10725)
!10728 = !DILocation(line: 232, column: 6, scope: !10683)
!10729 = !DILocation(line: 237, column: 9, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10731, file: !10678, line: 237, column: 8)
!10731 = distinct !DILexicalBlock(scope: !10725, file: !10678, line: 233, column: 3)
!10732 = !DILocation(line: 237, column: 39, scope: !10730)
!10733 = !DILocation(line: 237, column: 60, scope: !10730)
!10734 = !DILocation(line: 238, column: 9, scope: !10730)
!10735 = !DILocation(line: 238, column: 39, scope: !10730)
!10736 = !DILocation(line: 238, column: 60, scope: !10730)
!10737 = !DILocation(line: 238, column: 70, scope: !10730)
!10738 = !DILocation(line: 238, column: 78, scope: !10730)
!10739 = !DILocation(line: 238, column: 100, scope: !10730)
!10740 = !DILocation(line: 237, column: 8, scope: !10731)
!10741 = !DILocation(line: 240, column: 11, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10743, file: !10678, line: 240, column: 10)
!10743 = distinct !DILexicalBlock(scope: !10730, file: !10678, line: 239, column: 5)
!10744 = !DILocation(line: 240, column: 57, scope: !10742)
!10745 = !DILocation(line: 240, column: 80, scope: !10742)
!10746 = !DILocation(line: 240, column: 89, scope: !10742)
!10747 = !DILocation(line: 240, column: 10, scope: !10743)
!10748 = !DILocation(line: 248, column: 7, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10750, file: !10678, line: 248, column: 7)
!10750 = distinct !DILexicalBlock(scope: !10751, file: !10678, line: 248, column: 7)
!10751 = distinct !DILexicalBlock(scope: !10730, file: !10678, line: 246, column: 5)
!10752 = !DILocation(line: 248, column: 7, scope: !10750)
!10753 = !DILocation(line: 248, column: 7, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10749, file: !10678, line: 248, column: 7)
!10755 = !DILocation(line: 248, column: 7, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10757, file: !10678, line: 248, column: 7)
!10757 = distinct !DILexicalBlock(scope: !10749, file: !10678, line: 248, column: 7)
!10758 = !DILocation(line: 248, column: 7, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10757, file: !10678, line: 248, column: 7)
!10760 = !DILocation(line: 0, scope: !10749)
!10761 = !DILocation(line: 251, column: 30, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10751, file: !10678, line: 251, column: 10)
!10763 = !DILocation(line: 251, column: 40, scope: !10762)
!10764 = !DILocation(line: 0, scope: !10762)
!10765 = !DILocation(line: 251, column: 10, scope: !10751)
!10766 = !DILocation(line: 257, column: 15, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10762, file: !10678, line: 252, column: 7)
!10768 = !DILocation(line: 257, column: 51, scope: !10767)
!10769 = !DILocation(line: 257, column: 9, scope: !10767)
!10770 = !DILocation(line: 259, column: 15, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10772, file: !10678, line: 259, column: 14)
!10772 = distinct !DILexicalBlock(scope: !10767, file: !10678, line: 258, column: 9)
!10773 = !DILocation(line: 259, column: 29, scope: !10771)
!10774 = !DILocation(line: 259, column: 43, scope: !10771)
!10775 = !DILocation(line: 259, column: 14, scope: !10772)
!10776 = distinct !{!10776, !10769, !10777}
!10777 = !DILocation(line: 263, column: 9, scope: !10767)
!10778 = !DILocation(line: 271, column: 15, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10762, file: !10678, line: 266, column: 7)
!10780 = !DILocation(line: 271, column: 9, scope: !10779)
!10781 = !DILocation(line: 273, column: 15, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10783, file: !10678, line: 273, column: 14)
!10783 = distinct !DILexicalBlock(scope: !10779, file: !10678, line: 272, column: 9)
!10784 = !DILocation(line: 273, column: 29, scope: !10782)
!10785 = !DILocation(line: 273, column: 43, scope: !10782)
!10786 = !DILocation(line: 273, column: 14, scope: !10783)
!10787 = distinct !{!10787, !10780, !10788}
!10788 = !DILocation(line: 277, column: 9, scope: !10779)
!10789 = !DILocation(line: 282, column: 27, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10683, file: !10678, line: 282, column: 6)
!10791 = !DILocation(line: 282, column: 43, scope: !10790)
!10792 = !DILocation(line: 282, column: 69, scope: !10790)
!10793 = !DILocation(line: 282, column: 6, scope: !10683)
!10794 = !DILocation(line: 289, column: 9, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10796, file: !10678, line: 289, column: 8)
!10796 = distinct !DILexicalBlock(scope: !10790, file: !10678, line: 283, column: 3)
!10797 = !DILocation(line: 289, column: 39, scope: !10795)
!10798 = !DILocation(line: 289, column: 60, scope: !10795)
!10799 = !DILocation(line: 290, column: 9, scope: !10795)
!10800 = !DILocation(line: 290, column: 39, scope: !10795)
!10801 = !DILocation(line: 290, column: 60, scope: !10795)
!10802 = !DILocation(line: 290, column: 70, scope: !10795)
!10803 = !DILocation(line: 290, column: 78, scope: !10795)
!10804 = !DILocation(line: 290, column: 100, scope: !10795)
!10805 = !DILocation(line: 289, column: 8, scope: !10796)
!10806 = !DILocation(line: 293, column: 11, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10808, file: !10678, line: 293, column: 10)
!10808 = distinct !DILexicalBlock(scope: !10795, file: !10678, line: 291, column: 5)
!10809 = !DILocation(line: 293, column: 57, scope: !10807)
!10810 = !DILocation(line: 293, column: 80, scope: !10807)
!10811 = !DILocation(line: 293, column: 89, scope: !10807)
!10812 = !DILocation(line: 293, column: 10, scope: !10808)
!10813 = !DILocation(line: 307, column: 30, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10815, file: !10678, line: 307, column: 10)
!10815 = distinct !DILexicalBlock(scope: !10795, file: !10678, line: 305, column: 5)
!10816 = !DILocation(line: 307, column: 39, scope: !10814)
!10817 = !DILocation(line: 307, column: 10, scope: !10815)
!10818 = !DILocation(line: 310, column: 9, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10814, file: !10678, line: 308, column: 7)
!10820 = !DILocation(line: 313, column: 21, scope: !10819)
!10821 = !DILocation(line: 316, column: 9, scope: !10819)
!10822 = !DILocation(line: 316, column: 15, scope: !10819)
!10823 = !DILocation(line: 316, column: 51, scope: !10819)
!10824 = !DILocation(line: 318, column: 15, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10826, file: !10678, line: 318, column: 14)
!10826 = distinct !DILexicalBlock(scope: !10819, file: !10678, line: 317, column: 9)
!10827 = !DILocation(line: 318, column: 29, scope: !10825)
!10828 = !DILocation(line: 318, column: 43, scope: !10825)
!10829 = !DILocation(line: 318, column: 14, scope: !10826)
!10830 = distinct !{!10830, !10821, !10831}
!10831 = !DILocation(line: 322, column: 9, scope: !10819)
!10832 = !DILocation(line: 330, column: 9, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10814, file: !10678, line: 328, column: 7)
!10834 = !DILocation(line: 333, column: 21, scope: !10833)
!10835 = !DILocation(line: 336, column: 9, scope: !10833)
!10836 = !DILocation(line: 336, column: 15, scope: !10833)
!10837 = !DILocation(line: 338, column: 15, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10839, file: !10678, line: 338, column: 14)
!10839 = distinct !DILexicalBlock(scope: !10833, file: !10678, line: 337, column: 9)
!10840 = !DILocation(line: 338, column: 29, scope: !10838)
!10841 = !DILocation(line: 338, column: 43, scope: !10838)
!10842 = !DILocation(line: 338, column: 14, scope: !10839)
!10843 = distinct !{!10843, !10835, !10844}
!10844 = !DILocation(line: 342, column: 9, scope: !10833)
!10845 = !DILocation(line: 0, scope: !10795)
!10846 = !DILocation(line: 347, column: 27, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10683, file: !10678, line: 347, column: 6)
!10848 = !DILocation(line: 347, column: 43, scope: !10847)
!10849 = !DILocation(line: 347, column: 69, scope: !10847)
!10850 = !DILocation(line: 347, column: 6, scope: !10683)
!10851 = !DILocation(line: 353, column: 28, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10853, file: !10678, line: 353, column: 8)
!10853 = distinct !DILexicalBlock(scope: !10847, file: !10678, line: 348, column: 3)
!10854 = !DILocation(line: 353, column: 37, scope: !10852)
!10855 = !DILocation(line: 353, column: 8, scope: !10853)
!10856 = !DILocation(line: 356, column: 7, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10852, file: !10678, line: 354, column: 5)
!10858 = !DILocation(line: 359, column: 19, scope: !10857)
!10859 = !DILocation(line: 362, column: 7, scope: !10857)
!10860 = !DILocation(line: 362, column: 13, scope: !10857)
!10861 = !DILocation(line: 362, column: 49, scope: !10857)
!10862 = !DILocation(line: 364, column: 13, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10864, file: !10678, line: 364, column: 12)
!10864 = distinct !DILexicalBlock(scope: !10857, file: !10678, line: 363, column: 7)
!10865 = !DILocation(line: 364, column: 27, scope: !10863)
!10866 = !DILocation(line: 364, column: 41, scope: !10863)
!10867 = !DILocation(line: 364, column: 12, scope: !10864)
!10868 = distinct !{!10868, !10859, !10869}
!10869 = !DILocation(line: 368, column: 7, scope: !10857)
!10870 = !DILocation(line: 373, column: 7, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10852, file: !10678, line: 371, column: 5)
!10872 = !DILocation(line: 376, column: 19, scope: !10871)
!10873 = !DILocation(line: 379, column: 7, scope: !10871)
!10874 = !DILocation(line: 379, column: 13, scope: !10871)
!10875 = !DILocation(line: 381, column: 13, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10877, file: !10678, line: 381, column: 12)
!10877 = distinct !DILexicalBlock(scope: !10871, file: !10678, line: 380, column: 7)
!10878 = !DILocation(line: 381, column: 27, scope: !10876)
!10879 = !DILocation(line: 381, column: 41, scope: !10876)
!10880 = !DILocation(line: 381, column: 12, scope: !10877)
!10881 = distinct !{!10881, !10873, !10882}
!10882 = !DILocation(line: 385, column: 7, scope: !10871)
!10883 = !DILocation(line: 389, column: 27, scope: !10714)
!10884 = !DILocation(line: 389, column: 43, scope: !10714)
!10885 = !DILocation(line: 389, column: 69, scope: !10714)
!10886 = !DILocation(line: 389, column: 6, scope: !10683)
!10887 = !DILocation(line: 0, scope: !10713)
!10888 = !DILocation(line: 398, column: 8, scope: !10719)
!10889 = !DILocation(line: 398, column: 8, scope: !10713)
!10890 = !DILocation(line: 400, column: 7, scope: !10717)
!10891 = !DILocation(line: 400, column: 7, scope: !10718)
!10892 = !DILocation(line: 402, column: 5, scope: !10718)
!10893 = !DILocation(line: 404, column: 8, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10713, file: !10678, line: 404, column: 8)
!10895 = !DILocation(line: 404, column: 8, scope: !10713)
!10896 = !DILocation(line: 407, column: 7, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10894, file: !10678, line: 405, column: 5)
!10898 = !DILocation(line: 410, column: 19, scope: !10897)
!10899 = !DILocation(line: 412, column: 7, scope: !10897)
!10900 = !DILocation(line: 412, column: 13, scope: !10897)
!10901 = !DILocation(line: 414, column: 13, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10903, file: !10678, line: 414, column: 12)
!10903 = distinct !DILexicalBlock(scope: !10897, file: !10678, line: 413, column: 7)
!10904 = !DILocation(line: 414, column: 27, scope: !10902)
!10905 = !DILocation(line: 414, column: 40, scope: !10902)
!10906 = !DILocation(line: 414, column: 12, scope: !10903)
!10907 = distinct !{!10907, !10899, !10908}
!10908 = !DILocation(line: 418, column: 7, scope: !10897)
!10909 = !DILocation(line: 422, column: 5, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10911, file: !10678, line: 422, column: 5)
!10911 = distinct !DILexicalBlock(scope: !10713, file: !10678, line: 422, column: 5)
!10912 = !DILocation(line: 422, column: 5, scope: !10911)
!10913 = !DILocation(line: 422, column: 5, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10910, file: !10678, line: 422, column: 5)
!10915 = !DILocation(line: 422, column: 5, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10917, file: !10678, line: 422, column: 5)
!10917 = distinct !DILexicalBlock(scope: !10910, file: !10678, line: 422, column: 5)
!10918 = !DILocation(line: 422, column: 5, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10917, file: !10678, line: 422, column: 5)
!10920 = !DILocation(line: 0, scope: !10910)
!10921 = !DILocation(line: 424, column: 28, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10713, file: !10678, line: 424, column: 8)
!10923 = !DILocation(line: 424, column: 38, scope: !10922)
!10924 = !DILocation(line: 0, scope: !10922)
!10925 = !DILocation(line: 424, column: 8, scope: !10713)
!10926 = !DILocation(line: 430, column: 13, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10922, file: !10678, line: 425, column: 5)
!10928 = !DILocation(line: 430, column: 49, scope: !10927)
!10929 = !DILocation(line: 430, column: 7, scope: !10927)
!10930 = !DILocation(line: 432, column: 13, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10932, file: !10678, line: 432, column: 12)
!10932 = distinct !DILexicalBlock(scope: !10927, file: !10678, line: 431, column: 7)
!10933 = !DILocation(line: 432, column: 27, scope: !10931)
!10934 = !DILocation(line: 432, column: 41, scope: !10931)
!10935 = !DILocation(line: 432, column: 12, scope: !10932)
!10936 = distinct !{!10936, !10929, !10937}
!10937 = !DILocation(line: 436, column: 7, scope: !10927)
!10938 = !DILocation(line: 444, column: 13, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10922, file: !10678, line: 439, column: 5)
!10940 = !DILocation(line: 444, column: 7, scope: !10939)
!10941 = !DILocation(line: 446, column: 13, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10943, file: !10678, line: 446, column: 12)
!10943 = distinct !DILexicalBlock(scope: !10939, file: !10678, line: 445, column: 7)
!10944 = !DILocation(line: 446, column: 27, scope: !10942)
!10945 = !DILocation(line: 446, column: 41, scope: !10942)
!10946 = !DILocation(line: 446, column: 12, scope: !10943)
!10947 = distinct !{!10947, !10940, !10948}
!10948 = !DILocation(line: 450, column: 7, scope: !10939)
!10949 = !DILocation(line: 454, column: 8, scope: !10713)
!10950 = !DILocation(line: 456, column: 7, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10952, file: !10678, line: 455, column: 5)
!10952 = distinct !DILexicalBlock(scope: !10713, file: !10678, line: 454, column: 8)
!10953 = !DILocation(line: 457, column: 5, scope: !10951)
!10954 = !DILocation(line: 462, column: 31, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10683, file: !10678, line: 462, column: 7)
!10956 = !DILocation(line: 462, column: 41, scope: !10955)
!10957 = !DILocation(line: 462, column: 7, scope: !10683)
!10958 = !DILocation(line: 465, column: 8, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10960, file: !10678, line: 465, column: 8)
!10960 = distinct !DILexicalBlock(scope: !10955, file: !10678, line: 463, column: 3)
!10961 = !DILocation(line: 465, column: 38, scope: !10959)
!10962 = !DILocation(line: 465, column: 8, scope: !10960)
!10963 = !DILocation(line: 467, column: 44, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10965, file: !10678, line: 467, column: 10)
!10965 = distinct !DILexicalBlock(scope: !10959, file: !10678, line: 466, column: 5)
!10966 = !DILocation(line: 0, scope: !10964)
!10967 = !DILocation(line: 467, column: 10, scope: !10965)
!10968 = !DILocation(line: 483, column: 15, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10964, file: !10678, line: 468, column: 7)
!10970 = !DILocation(line: 483, column: 9, scope: !10969)
!10971 = !DILocation(line: 485, column: 15, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10973, file: !10678, line: 485, column: 14)
!10973 = distinct !DILexicalBlock(scope: !10969, file: !10678, line: 484, column: 9)
!10974 = !DILocation(line: 485, column: 29, scope: !10972)
!10975 = !DILocation(line: 485, column: 43, scope: !10972)
!10976 = !DILocation(line: 485, column: 14, scope: !10973)
!10977 = distinct !{!10977, !10970, !10978}
!10978 = !DILocation(line: 489, column: 9, scope: !10969)
!10979 = !DILocation(line: 492, column: 9, scope: !10969)
!10980 = !DILocation(line: 498, column: 9, scope: !10969)
!10981 = !DILocation(line: 501, column: 21, scope: !10969)
!10982 = !DILocation(line: 504, column: 9, scope: !10969)
!10983 = !DILocation(line: 504, column: 15, scope: !10969)
!10984 = !DILocation(line: 504, column: 51, scope: !10969)
!10985 = !DILocation(line: 506, column: 15, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !10987, file: !10678, line: 506, column: 14)
!10987 = distinct !DILexicalBlock(scope: !10969, file: !10678, line: 505, column: 9)
!10988 = !DILocation(line: 506, column: 29, scope: !10986)
!10989 = !DILocation(line: 506, column: 43, scope: !10986)
!10990 = !DILocation(line: 506, column: 14, scope: !10987)
!10991 = distinct !{!10991, !10982, !10992}
!10992 = !DILocation(line: 510, column: 9, scope: !10969)
!10993 = !DILocation(line: 521, column: 15, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10964, file: !10678, line: 513, column: 7)
!10995 = !DILocation(line: 521, column: 9, scope: !10994)
!10996 = !DILocation(line: 523, column: 15, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10998, file: !10678, line: 523, column: 14)
!10998 = distinct !DILexicalBlock(scope: !10994, file: !10678, line: 522, column: 9)
!10999 = !DILocation(line: 523, column: 29, scope: !10997)
!11000 = !DILocation(line: 523, column: 43, scope: !10997)
!11001 = !DILocation(line: 523, column: 14, scope: !10998)
!11002 = distinct !{!11002, !10995, !11003}
!11003 = !DILocation(line: 527, column: 9, scope: !10994)
!11004 = !DILocation(line: 533, column: 44, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !11006, file: !10678, line: 533, column: 10)
!11006 = distinct !DILexicalBlock(scope: !10959, file: !10678, line: 531, column: 5)
!11007 = !DILocation(line: 533, column: 10, scope: !11006)
!11008 = !DILocation(line: 540, column: 27, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11005, file: !10678, line: 538, column: 7)
!11010 = !DILocation(line: 551, column: 14, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !11009, file: !10678, line: 550, column: 13)
!11012 = !DILocation(line: 551, column: 81, scope: !11011)
!11013 = !DILocation(line: 551, column: 55, scope: !11011)
!11014 = !DILocation(line: 551, column: 92, scope: !11011)
!11015 = !DILocation(line: 552, column: 14, scope: !11011)
!11016 = !DILocation(line: 552, column: 80, scope: !11011)
!11017 = !DILocation(line: 552, column: 53, scope: !11011)
!11018 = !DILocation(line: 552, column: 111, scope: !11011)
!11019 = !DILocation(line: 553, column: 14, scope: !11011)
!11020 = !DILocation(line: 553, column: 80, scope: !11011)
!11021 = !DILocation(line: 553, column: 86, scope: !11011)
!11022 = !DILocation(line: 553, column: 53, scope: !11011)
!11023 = !DILocation(line: 553, column: 111, scope: !11011)
!11024 = !DILocation(line: 554, column: 14, scope: !11011)
!11025 = !DILocation(line: 554, column: 82, scope: !11011)
!11026 = !DILocation(line: 554, column: 101, scope: !11011)
!11027 = !DILocation(line: 554, column: 53, scope: !11011)
!11028 = !DILocation(line: 554, column: 126, scope: !11011)
!11029 = !DILocation(line: 555, column: 14, scope: !11011)
!11030 = !DILocation(line: 555, column: 80, scope: !11011)
!11031 = !DILocation(line: 555, column: 85, scope: !11011)
!11032 = !DILocation(line: 555, column: 53, scope: !11011)
!11033 = !DILocation(line: 550, column: 13, scope: !11009)
!11034 = !DILocation(line: 563, column: 3, scope: !10683)
!11035 = !DILocation(line: 564, column: 1, scope: !10683)
!11036 = !DISubprogram(name: "HAL_GetTick", scope: !11037, file: !11037, line: 234, type: !6398, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2101)
!11037 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11038 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !10678, file: !10678, line: 591, type: !11039, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !11050)
!11039 = !DISubroutineType(types: !11040)
!11040 = !{!10681, !11041, !156}
!11041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11042, size: 32)
!11042 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !10688, line: 92, baseType: !11043)
!11043 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10688, line: 75, size: 160, elements: !11044)
!11044 = !{!11045, !11046, !11047, !11048, !11049}
!11045 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11043, file: !10688, line: 77, baseType: !156, size: 32)
!11046 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11043, file: !10688, line: 80, baseType: !156, size: 32, offset: 32)
!11047 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11043, file: !10688, line: 83, baseType: !156, size: 32, offset: 64)
!11048 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11043, file: !10688, line: 86, baseType: !156, size: 32, offset: 96)
!11049 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11043, file: !10688, line: 89, baseType: !156, size: 32, offset: 128)
!11050 = !{!11051, !11052, !11053}
!11051 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11038, file: !10678, line: 591, type: !11041)
!11052 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11038, file: !10678, line: 591, type: !156)
!11053 = !DILocalVariable(name: "tickstart", scope: !11038, file: !10678, line: 593, type: !156)
!11054 = !DILocation(line: 0, scope: !11038)
!11055 = !DILocation(line: 596, column: 24, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11038, file: !10678, line: 596, column: 6)
!11057 = !DILocation(line: 596, column: 6, scope: !11038)
!11058 = !DILocation(line: 610, column: 17, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11038, file: !10678, line: 610, column: 6)
!11060 = !DILocation(line: 610, column: 15, scope: !11059)
!11061 = !DILocation(line: 610, column: 6, scope: !11038)
!11062 = !DILocation(line: 613, column: 5, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11059, file: !10678, line: 611, column: 3)
!11064 = !DILocation(line: 617, column: 8, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11063, file: !10678, line: 617, column: 8)
!11066 = !DILocation(line: 617, column: 34, scope: !11065)
!11067 = !DILocation(line: 617, column: 8, scope: !11063)
!11068 = !DILocation(line: 624, column: 27, scope: !11069)
!11069 = distinct !DILexicalBlock(scope: !11038, file: !10678, line: 624, column: 6)
!11070 = !DILocation(line: 624, column: 38, scope: !11069)
!11071 = !DILocation(line: 624, column: 60, scope: !11069)
!11072 = !DILocation(line: 624, column: 6, scope: !11038)
!11073 = !DILocation(line: 628, column: 40, scope: !11074)
!11074 = distinct !DILexicalBlock(scope: !11075, file: !10678, line: 628, column: 8)
!11075 = distinct !DILexicalBlock(scope: !11069, file: !10678, line: 625, column: 3)
!11076 = !DILocation(line: 628, column: 63, scope: !11074)
!11077 = !DILocation(line: 628, column: 8, scope: !11075)
!11078 = !DILocation(line: 630, column: 7, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11074, file: !10678, line: 629, column: 5)
!11080 = !DILocation(line: 633, column: 29, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11075, file: !10678, line: 633, column: 8)
!11082 = !DILocation(line: 631, column: 5, scope: !11079)
!11083 = !DILocation(line: 633, column: 40, scope: !11081)
!11084 = !DILocation(line: 633, column: 63, scope: !11081)
!11085 = !DILocation(line: 633, column: 8, scope: !11075)
!11086 = !DILocation(line: 635, column: 7, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11081, file: !10678, line: 634, column: 5)
!11088 = !DILocation(line: 636, column: 5, scope: !11087)
!11089 = !DILocation(line: 639, column: 5, scope: !11075)
!11090 = !DILocation(line: 643, column: 27, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11038, file: !10678, line: 643, column: 6)
!11092 = !DILocation(line: 640, column: 3, scope: !11075)
!11093 = !DILocation(line: 643, column: 38, scope: !11091)
!11094 = !DILocation(line: 643, column: 62, scope: !11091)
!11095 = !DILocation(line: 643, column: 6, scope: !11038)
!11096 = !DILocation(line: 648, column: 27, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11098, file: !10678, line: 648, column: 8)
!11098 = distinct !DILexicalBlock(scope: !11091, file: !10678, line: 644, column: 3)
!11099 = !DILocation(line: 648, column: 8, scope: !11098)
!11100 = !DILocation(line: 651, column: 10, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11102, file: !10678, line: 651, column: 10)
!11102 = distinct !DILexicalBlock(scope: !11097, file: !10678, line: 649, column: 5)
!11103 = !DILocation(line: 651, column: 46, scope: !11101)
!11104 = !DILocation(line: 651, column: 10, scope: !11102)
!11105 = !DILocation(line: 661, column: 10, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11107, file: !10678, line: 661, column: 10)
!11107 = distinct !DILexicalBlock(scope: !11108, file: !10678, line: 659, column: 5)
!11108 = distinct !DILexicalBlock(scope: !11097, file: !10678, line: 657, column: 13)
!11109 = !DILocation(line: 661, column: 46, scope: !11106)
!11110 = !DILocation(line: 661, column: 10, scope: !11107)
!11111 = !DILocation(line: 670, column: 10, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11113, file: !10678, line: 670, column: 10)
!11113 = distinct !DILexicalBlock(scope: !11108, file: !10678, line: 668, column: 5)
!11114 = !DILocation(line: 670, column: 46, scope: !11112)
!11115 = !DILocation(line: 670, column: 10, scope: !11113)
!11116 = !DILocation(line: 676, column: 5, scope: !11098)
!11117 = !DILocation(line: 679, column: 17, scope: !11098)
!11118 = !DILocation(line: 681, column: 5, scope: !11098)
!11119 = !DILocation(line: 681, column: 12, scope: !11098)
!11120 = !DILocation(line: 681, column: 65, scope: !11098)
!11121 = !DILocation(line: 681, column: 78, scope: !11098)
!11122 = !DILocation(line: 681, column: 42, scope: !11098)
!11123 = !DILocation(line: 683, column: 12, scope: !11124)
!11124 = distinct !DILexicalBlock(scope: !11125, file: !10678, line: 683, column: 11)
!11125 = distinct !DILexicalBlock(scope: !11098, file: !10678, line: 682, column: 5)
!11126 = !DILocation(line: 683, column: 26, scope: !11124)
!11127 = !DILocation(line: 683, column: 39, scope: !11124)
!11128 = !DILocation(line: 683, column: 11, scope: !11125)
!11129 = distinct !{!11129, !11118, !11130}
!11130 = !DILocation(line: 687, column: 5, scope: !11098)
!11131 = !DILocation(line: 691, column: 17, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11038, file: !10678, line: 691, column: 6)
!11133 = !DILocation(line: 691, column: 15, scope: !11132)
!11134 = !DILocation(line: 691, column: 6, scope: !11038)
!11135 = !DILocation(line: 694, column: 5, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11132, file: !10678, line: 692, column: 3)
!11137 = !DILocation(line: 698, column: 8, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11136, file: !10678, line: 698, column: 8)
!11139 = !DILocation(line: 698, column: 34, scope: !11138)
!11140 = !DILocation(line: 698, column: 8, scope: !11136)
!11141 = !DILocation(line: 705, column: 27, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11038, file: !10678, line: 705, column: 6)
!11143 = !DILocation(line: 705, column: 38, scope: !11142)
!11144 = !DILocation(line: 705, column: 61, scope: !11142)
!11145 = !DILocation(line: 705, column: 6, scope: !11038)
!11146 = !DILocation(line: 708, column: 5, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11142, file: !10678, line: 706, column: 3)
!11148 = !DILocation(line: 712, column: 27, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11038, file: !10678, line: 712, column: 6)
!11150 = !DILocation(line: 709, column: 3, scope: !11147)
!11151 = !DILocation(line: 712, column: 38, scope: !11149)
!11152 = !DILocation(line: 712, column: 61, scope: !11149)
!11153 = !DILocation(line: 712, column: 6, scope: !11038)
!11154 = !DILocation(line: 715, column: 5, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11149, file: !10678, line: 713, column: 3)
!11156 = !DILocation(line: 716, column: 3, scope: !11155)
!11157 = !DILocation(line: 719, column: 21, scope: !11038)
!11158 = !DILocation(line: 719, column: 70, scope: !11038)
!11159 = !DILocation(line: 719, column: 91, scope: !11038)
!11160 = !DILocation(line: 719, column: 50, scope: !11038)
!11161 = !DILocation(line: 719, column: 47, scope: !11038)
!11162 = !DILocation(line: 719, column: 19, scope: !11038)
!11163 = !DILocation(line: 722, column: 17, scope: !11038)
!11164 = !DILocation(line: 722, column: 3, scope: !11038)
!11165 = !DILocation(line: 724, column: 3, scope: !11038)
!11166 = !DILocation(line: 725, column: 1, scope: !11038)
!11167 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10678, file: !10678, line: 885, type: !6398, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !11168)
!11168 = !{!11169, !11170, !11171, !11172}
!11169 = !DILocalVariable(name: "pllm", scope: !11167, file: !10678, line: 887, type: !156)
!11170 = !DILocalVariable(name: "pllvco", scope: !11167, file: !10678, line: 887, type: !156)
!11171 = !DILocalVariable(name: "pllp", scope: !11167, file: !10678, line: 887, type: !156)
!11172 = !DILocalVariable(name: "sysclockfreq", scope: !11167, file: !10678, line: 888, type: !156)
!11173 = !DILocation(line: 0, scope: !11167)
!11174 = !DILocation(line: 891, column: 16, scope: !11167)
!11175 = !DILocation(line: 891, column: 21, scope: !11167)
!11176 = !DILocation(line: 891, column: 3, scope: !11167)
!11177 = !DILocation(line: 901, column: 7, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11179, file: !10678, line: 899, column: 5)
!11179 = distinct !DILexicalBlock(scope: !11167, file: !10678, line: 892, column: 3)
!11180 = !DILocation(line: 907, column: 19, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11179, file: !10678, line: 904, column: 5)
!11182 = !DILocation(line: 907, column: 27, scope: !11181)
!11183 = !DILocation(line: 908, column: 10, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11181, file: !10678, line: 908, column: 10)
!11185 = !DILocation(line: 908, column: 40, scope: !11184)
!11186 = !DILocation(line: 0, scope: !11184)
!11187 = !DILocation(line: 908, column: 10, scope: !11181)
!11188 = !DILocation(line: 911, column: 53, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11184, file: !10678, line: 909, column: 7)
!11190 = !DILocation(line: 911, column: 130, scope: !11189)
!11191 = !DILocation(line: 912, column: 7, scope: !11189)
!11192 = !DILocation(line: 916, column: 56, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11184, file: !10678, line: 914, column: 7)
!11194 = !DILocation(line: 916, column: 53, scope: !11193)
!11195 = !DILocation(line: 916, column: 132, scope: !11193)
!11196 = !DILocation(line: 916, column: 130, scope: !11193)
!11197 = !DILocation(line: 916, column: 18, scope: !11193)
!11198 = !DILocation(line: 918, column: 23, scope: !11181)
!11199 = !DILocation(line: 918, column: 82, scope: !11181)
!11200 = !DILocation(line: 920, column: 28, scope: !11181)
!11201 = !DILocation(line: 921, column: 7, scope: !11181)
!11202 = !DILocation(line: 0, scope: !11179)
!11203 = !DILocation(line: 929, column: 3, scope: !11167)
!11204 = !DISubprogram(name: "HAL_InitTick", scope: !11037, file: !11037, line: 223, type: !11205, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2101)
!11205 = !DISubroutineType(types: !11206)
!11206 = !{!10681, !156}
!11207 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !10678, file: !10678, line: 775, type: !11208, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !11210)
!11208 = !DISubroutineType(types: !11209)
!11209 = !{null, !156, !156, !156}
!11210 = !{!11211, !11212, !11213, !11214, !11224, !11228}
!11211 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11207, file: !10678, line: 775, type: !156)
!11212 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11207, file: !10678, line: 775, type: !156)
!11213 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11207, file: !10678, line: 775, type: !156)
!11214 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11207, file: !10678, line: 777, type: !11215)
!11215 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11216, line: 62, baseType: !11217)
!11216 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11217 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11216, line: 46, size: 160, elements: !11218)
!11218 = !{!11219, !11220, !11221, !11222, !11223}
!11219 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11217, file: !11216, line: 48, baseType: !156, size: 32)
!11220 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11217, file: !11216, line: 51, baseType: !156, size: 32, offset: 32)
!11221 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11217, file: !11216, line: 54, baseType: !156, size: 32, offset: 64)
!11222 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11217, file: !11216, line: 57, baseType: !156, size: 32, offset: 96)
!11223 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11217, file: !11216, line: 60, baseType: !156, size: 32, offset: 128)
!11224 = !DILocalVariable(name: "tmpreg", scope: !11225, file: !10678, line: 787, type: !452)
!11225 = distinct !DILexicalBlock(scope: !11226, file: !10678, line: 787, column: 5)
!11226 = distinct !DILexicalBlock(scope: !11227, file: !10678, line: 783, column: 3)
!11227 = distinct !DILexicalBlock(scope: !11207, file: !10678, line: 782, column: 6)
!11228 = !DILocalVariable(name: "tmpreg", scope: !11229, file: !10678, line: 811, type: !452)
!11229 = distinct !DILexicalBlock(scope: !11230, file: !10678, line: 811, column: 5)
!11230 = distinct !DILexicalBlock(scope: !11227, file: !10678, line: 807, column: 3)
!11231 = !DILocation(line: 0, scope: !11207)
!11232 = !DILocation(line: 777, column: 3, scope: !11207)
!11233 = !DILocation(line: 777, column: 20, scope: !11207)
!11234 = !DILocation(line: 782, column: 15, scope: !11227)
!11235 = !DILocation(line: 782, column: 6, scope: !11207)
!11236 = !DILocation(line: 787, column: 5, scope: !11225)
!11237 = !DILocation(line: 787, column: 5, scope: !11226)
!11238 = !DILocation(line: 790, column: 21, scope: !11226)
!11239 = !DILocation(line: 790, column: 25, scope: !11226)
!11240 = !DILocation(line: 791, column: 21, scope: !11226)
!11241 = !DILocation(line: 791, column: 26, scope: !11226)
!11242 = !DILocation(line: 792, column: 21, scope: !11226)
!11243 = !DILocation(line: 792, column: 27, scope: !11226)
!11244 = !DILocation(line: 793, column: 21, scope: !11226)
!11245 = !DILocation(line: 793, column: 26, scope: !11226)
!11246 = !DILocation(line: 794, column: 21, scope: !11226)
!11247 = !DILocation(line: 794, column: 31, scope: !11226)
!11248 = !DILocation(line: 795, column: 5, scope: !11226)
!11249 = !DILocation(line: 798, column: 5, scope: !11226)
!11250 = !DILocation(line: 804, column: 3, scope: !11226)
!11251 = !DILocation(line: 811, column: 5, scope: !11229)
!11252 = !DILocation(line: 811, column: 5, scope: !11230)
!11253 = !DILocation(line: 814, column: 21, scope: !11230)
!11254 = !DILocation(line: 814, column: 25, scope: !11230)
!11255 = !DILocation(line: 815, column: 21, scope: !11230)
!11256 = !DILocation(line: 815, column: 26, scope: !11230)
!11257 = !DILocation(line: 816, column: 21, scope: !11230)
!11258 = !DILocation(line: 816, column: 27, scope: !11230)
!11259 = !DILocation(line: 817, column: 21, scope: !11230)
!11260 = !DILocation(line: 817, column: 26, scope: !11230)
!11261 = !DILocation(line: 818, column: 21, scope: !11230)
!11262 = !DILocation(line: 818, column: 31, scope: !11230)
!11263 = !DILocation(line: 819, column: 5, scope: !11230)
!11264 = !DILocation(line: 822, column: 5, scope: !11230)
!11265 = !DILocation(line: 0, scope: !11227)
!11266 = !DILocation(line: 830, column: 1, scope: !11207)
!11267 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11216, file: !11216, line: 224, type: !11268, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2101)
!11268 = !DISubroutineType(types: !11269)
!11269 = !{null, !3014, !11270}
!11270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11215, size: 32)
!11271 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !10678, file: !10678, line: 841, type: !365, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !2101)
!11272 = !DILocation(line: 843, column: 38, scope: !11271)
!11273 = !DILocation(line: 844, column: 1, scope: !11271)
!11274 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !10678, file: !10678, line: 850, type: !365, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !2101)
!11275 = !DILocation(line: 852, column: 38, scope: !11274)
!11276 = !DILocation(line: 853, column: 1, scope: !11274)
!11277 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !10678, file: !10678, line: 941, type: !6398, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !2101)
!11278 = !DILocation(line: 943, column: 10, scope: !11277)
!11279 = !DILocation(line: 943, column: 3, scope: !11277)
!11280 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !10678, file: !10678, line: 952, type: !6398, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !2101)
!11281 = !DILocation(line: 955, column: 11, scope: !11280)
!11282 = !DILocation(line: 955, column: 56, scope: !11280)
!11283 = !DILocation(line: 955, column: 78, scope: !11280)
!11284 = !DILocation(line: 955, column: 36, scope: !11280)
!11285 = !DILocation(line: 955, column: 33, scope: !11280)
!11286 = !DILocation(line: 955, column: 3, scope: !11280)
!11287 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !10678, file: !10678, line: 964, type: !6398, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !2101)
!11288 = !DILocation(line: 967, column: 11, scope: !11287)
!11289 = !DILocation(line: 967, column: 55, scope: !11287)
!11290 = !DILocation(line: 967, column: 77, scope: !11287)
!11291 = !DILocation(line: 967, column: 35, scope: !11287)
!11292 = !DILocation(line: 967, column: 32, scope: !11287)
!11293 = !DILocation(line: 967, column: 3, scope: !11287)
!11294 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10678, file: !10678, line: 977, type: !11295, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !11297)
!11295 = !DISubroutineType(types: !11296)
!11296 = !{null, !10686}
!11297 = !{!11298}
!11298 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11294, file: !10678, line: 977, type: !10686)
!11299 = !DILocation(line: 0, scope: !11294)
!11300 = !DILocation(line: 980, column: 22, scope: !11294)
!11301 = !DILocation(line: 980, column: 37, scope: !11294)
!11302 = !DILocation(line: 983, column: 12, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11294, file: !10678, line: 983, column: 6)
!11304 = !DILocation(line: 983, column: 15, scope: !11303)
!11305 = !DILocation(line: 983, column: 31, scope: !11303)
!11306 = !DILocation(line: 983, column: 6, scope: !11294)
!11307 = !DILocation(line: 985, column: 24, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11303, file: !10678, line: 984, column: 3)
!11309 = !DILocation(line: 985, column: 33, scope: !11308)
!11310 = !DILocation(line: 986, column: 3, scope: !11308)
!11311 = !DILocation(line: 987, column: 17, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11303, file: !10678, line: 987, column: 11)
!11313 = !DILocation(line: 987, column: 20, scope: !11312)
!11314 = !DILocation(line: 987, column: 35, scope: !11312)
!11315 = !DILocation(line: 0, scope: !11312)
!11316 = !DILocation(line: 987, column: 11, scope: !11303)
!11317 = !DILocation(line: 989, column: 33, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11312, file: !10678, line: 988, column: 3)
!11319 = !DILocation(line: 990, column: 3, scope: !11318)
!11320 = !DILocation(line: 993, column: 33, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11312, file: !10678, line: 992, column: 3)
!11322 = !DILocation(line: 997, column: 12, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11294, file: !10678, line: 997, column: 6)
!11324 = !DILocation(line: 997, column: 15, scope: !11323)
!11325 = !DILocation(line: 1003, column: 24, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11323, file: !10678, line: 1002, column: 3)
!11327 = !DILocation(line: 1003, column: 33, scope: !11326)
!11328 = !DILocation(line: 1006, column: 61, scope: !11294)
!11329 = !DILocation(line: 1006, column: 81, scope: !11294)
!11330 = !DILocation(line: 1006, column: 22, scope: !11294)
!11331 = !DILocation(line: 1006, column: 42, scope: !11294)
!11332 = !DILocation(line: 1009, column: 12, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11294, file: !10678, line: 1009, column: 6)
!11334 = !DILocation(line: 1009, column: 17, scope: !11333)
!11335 = !DILocation(line: 1009, column: 35, scope: !11333)
!11336 = !DILocation(line: 1009, column: 6, scope: !11294)
!11337 = !DILocation(line: 1011, column: 24, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11333, file: !10678, line: 1010, column: 3)
!11339 = !DILocation(line: 1011, column: 33, scope: !11338)
!11340 = !DILocation(line: 1012, column: 3, scope: !11338)
!11341 = !DILocation(line: 1013, column: 17, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11333, file: !10678, line: 1013, column: 11)
!11343 = !DILocation(line: 1013, column: 22, scope: !11342)
!11344 = !DILocation(line: 1013, column: 39, scope: !11342)
!11345 = !DILocation(line: 0, scope: !11342)
!11346 = !DILocation(line: 1013, column: 11, scope: !11333)
!11347 = !DILocation(line: 1015, column: 33, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11342, file: !10678, line: 1014, column: 3)
!11349 = !DILocation(line: 1016, column: 3, scope: !11348)
!11350 = !DILocation(line: 1019, column: 33, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11342, file: !10678, line: 1018, column: 3)
!11352 = !DILocation(line: 1023, column: 12, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !11294, file: !10678, line: 1023, column: 6)
!11354 = !DILocation(line: 1023, column: 16, scope: !11353)
!11355 = !DILocation(line: 1029, column: 24, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !11353, file: !10678, line: 1028, column: 3)
!11357 = !DILocation(line: 1029, column: 33, scope: !11356)
!11358 = !DILocation(line: 1033, column: 12, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11294, file: !10678, line: 1033, column: 6)
!11360 = !DILocation(line: 1033, column: 15, scope: !11359)
!11361 = !DILocation(line: 1033, column: 30, scope: !11359)
!11362 = !DILocation(line: 1033, column: 6, scope: !11294)
!11363 = !DILocation(line: 1039, column: 28, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11359, file: !10678, line: 1038, column: 3)
!11365 = !DILocation(line: 1039, column: 37, scope: !11364)
!11366 = !DILocation(line: 1041, column: 54, scope: !11294)
!11367 = !DILocation(line: 1041, column: 62, scope: !11294)
!11368 = !DILocation(line: 1041, column: 26, scope: !11294)
!11369 = !DILocation(line: 1041, column: 36, scope: !11294)
!11370 = !DILocation(line: 1042, column: 49, scope: !11294)
!11371 = !DILocation(line: 1042, column: 57, scope: !11294)
!11372 = !DILocation(line: 1042, column: 26, scope: !11294)
!11373 = !DILocation(line: 1042, column: 31, scope: !11294)
!11374 = !DILocation(line: 1043, column: 50, scope: !11294)
!11375 = !DILocation(line: 1043, column: 78, scope: !11294)
!11376 = !DILocation(line: 1043, column: 26, scope: !11294)
!11377 = !DILocation(line: 1043, column: 31, scope: !11294)
!11378 = !DILocation(line: 1044, column: 52, scope: !11294)
!11379 = !DILocation(line: 1044, column: 102, scope: !11294)
!11380 = !DILocation(line: 1044, column: 109, scope: !11294)
!11381 = !DILocation(line: 1044, column: 26, scope: !11294)
!11382 = !DILocation(line: 1044, column: 31, scope: !11294)
!11383 = !DILocation(line: 1045, column: 50, scope: !11294)
!11384 = !DILocation(line: 1045, column: 78, scope: !11294)
!11385 = !DILocation(line: 1045, column: 26, scope: !11294)
!11386 = !DILocation(line: 1045, column: 31, scope: !11294)
!11387 = !DILocation(line: 1046, column: 1, scope: !11294)
!11388 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !10678, file: !10678, line: 1056, type: !11389, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !11391)
!11389 = !DISubroutineType(types: !11390)
!11390 = !{null, !11041, !986}
!11391 = !{!11392, !11393}
!11392 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11388, file: !10678, line: 1056, type: !11041)
!11393 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11388, file: !10678, line: 1056, type: !986)
!11394 = !DILocation(line: 0, scope: !11388)
!11395 = !DILocation(line: 1059, column: 22, scope: !11388)
!11396 = !DILocation(line: 1059, column: 32, scope: !11388)
!11397 = !DILocation(line: 1062, column: 53, scope: !11388)
!11398 = !DILocation(line: 1062, column: 58, scope: !11388)
!11399 = !DILocation(line: 1062, column: 22, scope: !11388)
!11400 = !DILocation(line: 1062, column: 35, scope: !11388)
!11401 = !DILocation(line: 1065, column: 54, scope: !11388)
!11402 = !DILocation(line: 1065, column: 59, scope: !11388)
!11403 = !DILocation(line: 1065, column: 22, scope: !11388)
!11404 = !DILocation(line: 1065, column: 36, scope: !11388)
!11405 = !DILocation(line: 1068, column: 55, scope: !11388)
!11406 = !DILocation(line: 1068, column: 60, scope: !11388)
!11407 = !DILocation(line: 1068, column: 22, scope: !11388)
!11408 = !DILocation(line: 1068, column: 37, scope: !11388)
!11409 = !DILocation(line: 1071, column: 56, scope: !11388)
!11410 = !DILocation(line: 1071, column: 79, scope: !11388)
!11411 = !DILocation(line: 1071, column: 22, scope: !11388)
!11412 = !DILocation(line: 1071, column: 37, scope: !11388)
!11413 = !DILocation(line: 1074, column: 34, scope: !11388)
!11414 = !DILocation(line: 1074, column: 38, scope: !11388)
!11415 = !DILocation(line: 1074, column: 14, scope: !11388)
!11416 = !DILocation(line: 1075, column: 1, scope: !11388)
!11417 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !10678, file: !10678, line: 1082, type: !365, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !2101)
!11418 = !DILocation(line: 1085, column: 6, scope: !11419)
!11419 = distinct !DILexicalBlock(scope: !11417, file: !10678, line: 1085, column: 6)
!11420 = !DILocation(line: 1085, column: 6, scope: !11417)
!11421 = !DILocation(line: 1088, column: 5, scope: !11422)
!11422 = distinct !DILexicalBlock(scope: !11419, file: !10678, line: 1086, column: 3)
!11423 = !DILocation(line: 1091, column: 5, scope: !11422)
!11424 = !DILocation(line: 1092, column: 3, scope: !11422)
!11425 = !DILocation(line: 1093, column: 1, scope: !11417)
!11426 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !10678, file: !10678, line: 1099, type: !365, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2941, retainedNodes: !2101)
!11427 = !DILocation(line: 1104, column: 1, scope: !11426)
!11428 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11429, file: !11429, line: 257, type: !6408, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11430)
!11429 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11430 = !{!11431}
!11431 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11428, file: !11429, line: 257, type: !156)
!11432 = !DILocation(line: 0, scope: !11428)
!11433 = !DILocation(line: 260, column: 3, scope: !11428)
!11434 = !DILocation(line: 261, column: 1, scope: !11428)
!11435 = distinct !DISubprogram(name: "LL_InitTick", scope: !11436, file: !11436, line: 260, type: !9068, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11437)
!11436 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11437 = !{!11438, !11439}
!11438 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11435, file: !11436, line: 260, type: !156)
!11439 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11435, file: !11436, line: 260, type: !156)
!11440 = !DILocation(line: 0, scope: !11435)
!11441 = !DILocation(line: 263, column: 46, scope: !11435)
!11442 = !DILocation(line: 263, column: 55, scope: !11435)
!11443 = !DILocation(line: 263, column: 18, scope: !11435)
!11444 = !DILocation(line: 264, column: 18, scope: !11435)
!11445 = !DILocation(line: 265, column: 18, scope: !11435)
!11446 = !DILocation(line: 267, column: 1, scope: !11435)
!11447 = distinct !DISubprogram(name: "LL_mDelay", scope: !11429, file: !11429, line: 273, type: !6408, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11448)
!11448 = !{!11449, !11450}
!11449 = !DILocalVariable(name: "Delay", arg: 1, scope: !11447, file: !11429, line: 273, type: !156)
!11450 = !DILocalVariable(name: "tmp", scope: !11447, file: !11429, line: 275, type: !452)
!11451 = !DILocation(line: 0, scope: !11447)
!11452 = !DILocation(line: 275, column: 3, scope: !11447)
!11453 = !DILocation(line: 275, column: 18, scope: !11447)
!11454 = !DILocation(line: 275, column: 33, scope: !11447)
!11455 = !DILocation(line: 277, column: 10, scope: !11447)
!11456 = !DILocation(line: 280, column: 12, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11447, file: !11429, line: 280, column: 6)
!11458 = !DILocation(line: 285, column: 3, scope: !11447)
!11459 = !DILocation(line: 287, column: 18, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11461, file: !11429, line: 287, column: 8)
!11461 = distinct !DILexicalBlock(scope: !11447, file: !11429, line: 286, column: 3)
!11462 = !DILocation(line: 292, column: 1, scope: !11447)
!11463 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11429, file: !11429, line: 323, type: !6408, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11464)
!11464 = !{!11465}
!11465 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11463, file: !11429, line: 323, type: !156)
!11466 = !DILocation(line: 0, scope: !11463)
!11467 = !DILocation(line: 326, column: 19, scope: !11463)
!11468 = !DILocation(line: 327, column: 1, scope: !11463)
!11469 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11429, file: !11429, line: 338, type: !11470, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11473)
!11470 = !DISubroutineType(types: !11471)
!11471 = !{!11472, !156}
!11472 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !930, line: 201, baseType: !929)
!11473 = !{!11474, !11475, !11476, !11477, !11478}
!11474 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11469, file: !11429, line: 338, type: !156)
!11475 = !DILocalVariable(name: "timeout", scope: !11469, file: !11429, line: 340, type: !156)
!11476 = !DILocalVariable(name: "getlatency", scope: !11469, file: !11429, line: 341, type: !156)
!11477 = !DILocalVariable(name: "latency", scope: !11469, file: !11429, line: 342, type: !156)
!11478 = !DILocalVariable(name: "status", scope: !11469, file: !11429, line: 343, type: !11472)
!11479 = !DILocation(line: 0, scope: !11469)
!11480 = !DILocation(line: 347, column: 21, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11469, file: !11429, line: 347, column: 6)
!11482 = !DILocation(line: 347, column: 6, scope: !11469)
!11483 = !DILocation(line: 353, column: 8, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11485, file: !11429, line: 353, column: 8)
!11485 = distinct !DILexicalBlock(scope: !11481, file: !11429, line: 352, column: 3)
!11486 = !DILocation(line: 353, column: 40, scope: !11484)
!11487 = !DILocation(line: 353, column: 8, scope: !11485)
!11488 = !DILocation(line: 374, column: 55, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11490, file: !11429, line: 374, column: 10)
!11490 = distinct !DILexicalBlock(scope: !11484, file: !11429, line: 354, column: 5)
!11491 = !DILocation(line: 368, column: 26, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11490, file: !11429, line: 368, column: 10)
!11493 = !DILocation(line: 368, column: 55, scope: !11492)
!11494 = !DILocation(line: 380, column: 57, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11496, file: !11429, line: 380, column: 12)
!11496 = distinct !DILexicalBlock(scope: !11489, file: !11429, line: 379, column: 7)
!11497 = !DILocation(line: 387, column: 8, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11485, file: !11429, line: 387, column: 8)
!11499 = !DILocation(line: 387, column: 40, scope: !11498)
!11500 = !DILocation(line: 387, column: 8, scope: !11485)
!11501 = !DILocation(line: 407, column: 26, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11503, file: !11429, line: 407, column: 10)
!11503 = distinct !DILexicalBlock(scope: !11498, file: !11429, line: 388, column: 5)
!11504 = !DILocation(line: 407, column: 55, scope: !11502)
!11505 = !DILocation(line: 413, column: 28, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11507, file: !11429, line: 413, column: 12)
!11507 = distinct !DILexicalBlock(scope: !11502, file: !11429, line: 412, column: 7)
!11508 = !DILocation(line: 413, column: 57, scope: !11506)
!11509 = !DILocation(line: 0, scope: !11485)
!11510 = !DILocation(line: 420, column: 8, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11485, file: !11429, line: 420, column: 8)
!11512 = !DILocation(line: 420, column: 40, scope: !11511)
!11513 = !DILocation(line: 420, column: 8, scope: !11485)
!11514 = !DILocation(line: 429, column: 26, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11516, file: !11429, line: 429, column: 10)
!11516 = distinct !DILexicalBlock(scope: !11511, file: !11429, line: 421, column: 5)
!11517 = !DILocation(line: 429, column: 55, scope: !11515)
!11518 = !DILocation(line: 435, column: 28, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11520, file: !11429, line: 435, column: 12)
!11520 = distinct !DILexicalBlock(scope: !11515, file: !11429, line: 434, column: 7)
!11521 = !DILocation(line: 435, column: 57, scope: !11519)
!11522 = !DILocation(line: 444, column: 5, scope: !11485)
!11523 = !DILocation(line: 448, column: 5, scope: !11485)
!11524 = !DILocation(line: 451, column: 18, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !11485, file: !11429, line: 449, column: 5)
!11526 = !DILocation(line: 452, column: 12, scope: !11525)
!11527 = !DILocation(line: 453, column: 26, scope: !11485)
!11528 = !DILocation(line: 453, column: 38, scope: !11485)
!11529 = !DILocation(line: 453, column: 5, scope: !11525)
!11530 = distinct !{!11530, !11523, !11531}
!11531 = !DILocation(line: 453, column: 54, scope: !11485)
!11532 = !DILocation(line: 0, scope: !11481)
!11533 = !DILocation(line: 464, column: 3, scope: !11469)
!11534 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11535, file: !11535, line: 519, type: !6398, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !2101)
!11535 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11536 = !DILocation(line: 521, column: 21, scope: !11534)
!11537 = !DILocation(line: 521, column: 3, scope: !11534)
!11538 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6158, file: !6158, line: 1543, type: !6408, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11539)
!11539 = !{!11540}
!11540 = !DILocalVariable(name: "Latency", arg: 1, scope: !11538, file: !6158, line: 1543, type: !156)
!11541 = !DILocation(line: 0, scope: !11538)
!11542 = !DILocation(line: 1545, column: 3, scope: !11538)
!11543 = !DILocation(line: 1546, column: 1, scope: !11538)
!11544 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6158, file: !6158, line: 1569, type: !6398, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !2101)
!11545 = !DILocation(line: 1571, column: 21, scope: !11544)
!11546 = !DILocation(line: 1571, column: 3, scope: !11544)
!11547 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11429, file: !11429, line: 483, type: !11548, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11564)
!11548 = !DISubroutineType(types: !11549)
!11549 = !{!11472, !11550, !11557}
!11550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11551, size: 32)
!11551 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11436, line: 114, baseType: !11552)
!11552 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11436, line: 94, size: 96, elements: !11553)
!11553 = !{!11554, !11555, !11556}
!11554 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11552, file: !11436, line: 96, baseType: !156, size: 32)
!11555 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11552, file: !11436, line: 102, baseType: !156, size: 32, offset: 32)
!11556 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11552, file: !11436, line: 109, baseType: !156, size: 32, offset: 64)
!11557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11558, size: 32)
!11558 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11436, line: 139, baseType: !11559)
!11559 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11436, line: 119, size: 96, elements: !11560)
!11560 = !{!11561, !11562, !11563}
!11561 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11559, file: !11436, line: 121, baseType: !156, size: 32)
!11562 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11559, file: !11436, line: 127, baseType: !156, size: 32, offset: 32)
!11563 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11559, file: !11436, line: 133, baseType: !156, size: 32, offset: 64)
!11564 = !{!11565, !11566, !11567, !11568}
!11565 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11547, file: !11429, line: 483, type: !11550)
!11566 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11547, file: !11429, line: 484, type: !11557)
!11567 = !DILocalVariable(name: "status", scope: !11547, file: !11429, line: 486, type: !11472)
!11568 = !DILocalVariable(name: "pllfreq", scope: !11547, file: !11429, line: 487, type: !156)
!11569 = !DILocation(line: 0, scope: !11547)
!11570 = !DILocation(line: 490, column: 6, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11547, file: !11429, line: 490, column: 6)
!11572 = !DILocation(line: 490, column: 25, scope: !11571)
!11573 = !DILocation(line: 490, column: 6, scope: !11547)
!11574 = !DILocation(line: 493, column: 15, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11571, file: !11429, line: 491, column: 3)
!11576 = !DILocation(line: 496, column: 8, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11575, file: !11429, line: 496, column: 8)
!11578 = !DILocation(line: 496, column: 29, scope: !11577)
!11579 = !DILocation(line: 496, column: 8, scope: !11575)
!11580 = !DILocation(line: 498, column: 7, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11577, file: !11429, line: 497, column: 5)
!11582 = !DILocation(line: 499, column: 7, scope: !11581)
!11583 = !DILocation(line: 499, column: 14, scope: !11581)
!11584 = !DILocation(line: 499, column: 35, scope: !11581)
!11585 = distinct !{!11585, !11582, !11586}
!11586 = !DILocation(line: 502, column: 7, scope: !11581)
!11587 = !DILocation(line: 506, column: 76, scope: !11575)
!11588 = !DILocation(line: 506, column: 103, scope: !11575)
!11589 = !DILocation(line: 507, column: 54, scope: !11575)
!11590 = !DILocation(line: 506, column: 5, scope: !11575)
!11591 = !DILocation(line: 510, column: 14, scope: !11575)
!11592 = !DILocation(line: 511, column: 3, scope: !11575)
!11593 = !DILocation(line: 0, scope: !11571)
!11594 = !DILocation(line: 518, column: 3, scope: !11547)
!11595 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11429, file: !11429, line: 642, type: !11596, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11598)
!11596 = !DISubroutineType(types: !11597)
!11597 = !{!11472}
!11598 = !{!11599}
!11599 = !DILocalVariable(name: "status", scope: !11595, file: !11429, line: 644, type: !11472)
!11600 = !DILocation(line: 0, scope: !11595)
!11601 = !DILocation(line: 647, column: 6, scope: !11602)
!11602 = distinct !DILexicalBlock(scope: !11595, file: !11429, line: 647, column: 6)
!11603 = !DILocation(line: 647, column: 27, scope: !11602)
!11604 = !DILocation(line: 663, column: 6, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11595, file: !11429, line: 663, column: 6)
!11606 = !DILocation(line: 663, column: 30, scope: !11605)
!11607 = !DILocation(line: 663, column: 6, scope: !11595)
!11608 = !DILocation(line: 669, column: 3, scope: !11595)
!11609 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11429, file: !11429, line: 611, type: !11610, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11612)
!11610 = !DISubroutineType(types: !11611)
!11611 = !{!156, !156, !11550}
!11612 = !{!11613, !11614, !11615}
!11613 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11609, file: !11429, line: 611, type: !156)
!11614 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11609, file: !11429, line: 611, type: !11550)
!11615 = !DILocalVariable(name: "pllfreq", scope: !11609, file: !11429, line: 613, type: !156)
!11616 = !DILocation(line: 0, scope: !11609)
!11617 = !DILocation(line: 622, column: 56, scope: !11609)
!11618 = !DILocation(line: 622, column: 61, scope: !11609)
!11619 = !DILocation(line: 622, column: 32, scope: !11609)
!11620 = !DILocation(line: 626, column: 45, scope: !11609)
!11621 = !DILocation(line: 626, column: 50, scope: !11609)
!11622 = !DILocation(line: 626, column: 21, scope: !11609)
!11623 = !DILocation(line: 630, column: 47, scope: !11609)
!11624 = !DILocation(line: 630, column: 82, scope: !11609)
!11625 = !DILocation(line: 630, column: 21, scope: !11609)
!11626 = !DILocation(line: 633, column: 3, scope: !11609)
!11627 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8407, file: !8407, line: 3007, type: !6398, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !2101)
!11628 = !DILocation(line: 3009, column: 11, scope: !11627)
!11629 = !DILocation(line: 3009, column: 44, scope: !11627)
!11630 = !DILocation(line: 3009, column: 3, scope: !11627)
!11631 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8407, file: !8407, line: 2987, type: !365, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !2101)
!11632 = !DILocation(line: 2989, column: 3, scope: !11631)
!11633 = !DILocation(line: 2990, column: 1, scope: !11631)
!11634 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8407, file: !8407, line: 4304, type: !8531, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11635)
!11635 = !{!11636, !11637, !11638, !11639}
!11636 = !DILocalVariable(name: "Source", arg: 1, scope: !11634, file: !8407, line: 4304, type: !156)
!11637 = !DILocalVariable(name: "PLLM", arg: 2, scope: !11634, file: !8407, line: 4304, type: !156)
!11638 = !DILocalVariable(name: "PLLN", arg: 3, scope: !11634, file: !8407, line: 4304, type: !156)
!11639 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !11634, file: !8407, line: 4304, type: !156)
!11640 = !DILocation(line: 0, scope: !11634)
!11641 = !DILocation(line: 4306, column: 3, scope: !11634)
!11642 = !DILocation(line: 4308, column: 3, scope: !11634)
!11643 = !DILocation(line: 4312, column: 1, scope: !11634)
!11644 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11429, file: !11429, line: 681, type: !11645, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11647)
!11645 = !DISubroutineType(types: !11646)
!11646 = !{!11472, !156, !11557}
!11647 = !{!11648, !11649, !11650, !11651}
!11648 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !11644, file: !11429, line: 681, type: !156)
!11649 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11644, file: !11429, line: 681, type: !11557)
!11650 = !DILocalVariable(name: "status", scope: !11644, file: !11429, line: 683, type: !11472)
!11651 = !DILocalVariable(name: "hclk_frequency", scope: !11644, file: !11429, line: 684, type: !156)
!11652 = !DILocation(line: 0, scope: !11644)
!11653 = !DILocation(line: 691, column: 20, scope: !11644)
!11654 = !DILocation(line: 694, column: 6, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11644, file: !11429, line: 694, column: 6)
!11656 = !DILocation(line: 694, column: 22, scope: !11655)
!11657 = !DILocation(line: 694, column: 6, scope: !11644)
!11658 = !DILocation(line: 697, column: 14, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !11655, file: !11429, line: 695, column: 3)
!11660 = !DILocation(line: 701, column: 13, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !11644, file: !11429, line: 701, column: 6)
!11662 = !DILocation(line: 701, column: 6, scope: !11644)
!11663 = !DILocation(line: 704, column: 5, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11661, file: !11429, line: 702, column: 3)
!11665 = !DILocation(line: 705, column: 5, scope: !11664)
!11666 = !DILocation(line: 705, column: 12, scope: !11664)
!11667 = !DILocation(line: 705, column: 33, scope: !11664)
!11668 = distinct !{!11668, !11665, !11669}
!11669 = !DILocation(line: 708, column: 5, scope: !11664)
!11670 = !DILocation(line: 711, column: 49, scope: !11664)
!11671 = !DILocation(line: 711, column: 5, scope: !11664)
!11672 = !DILocation(line: 712, column: 5, scope: !11664)
!11673 = !DILocation(line: 713, column: 5, scope: !11664)
!11674 = !DILocation(line: 713, column: 12, scope: !11664)
!11675 = !DILocation(line: 713, column: 37, scope: !11664)
!11676 = distinct !{!11676, !11673, !11677}
!11677 = !DILocation(line: 716, column: 5, scope: !11664)
!11678 = !DILocation(line: 719, column: 50, scope: !11664)
!11679 = !DILocation(line: 719, column: 5, scope: !11664)
!11680 = !DILocation(line: 720, column: 50, scope: !11664)
!11681 = !DILocation(line: 720, column: 5, scope: !11664)
!11682 = !DILocation(line: 721, column: 3, scope: !11664)
!11683 = !DILocation(line: 724, column: 6, scope: !11684)
!11684 = distinct !DILexicalBlock(scope: !11644, file: !11429, line: 724, column: 6)
!11685 = !DILocation(line: 724, column: 22, scope: !11684)
!11686 = !DILocation(line: 724, column: 6, scope: !11644)
!11687 = !DILocation(line: 727, column: 14, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11684, file: !11429, line: 725, column: 3)
!11689 = !DILocation(line: 728, column: 3, scope: !11688)
!11690 = !DILocation(line: 731, column: 13, scope: !11691)
!11691 = distinct !DILexicalBlock(scope: !11644, file: !11429, line: 731, column: 6)
!11692 = !DILocation(line: 731, column: 6, scope: !11644)
!11693 = !DILocation(line: 733, column: 5, scope: !11694)
!11694 = distinct !DILexicalBlock(scope: !11691, file: !11429, line: 732, column: 3)
!11695 = !DILocation(line: 734, column: 3, scope: !11694)
!11696 = !DILocation(line: 736, column: 3, scope: !11644)
!11697 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8407, file: !8407, line: 4184, type: !365, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !2101)
!11698 = !DILocation(line: 4186, column: 3, scope: !11697)
!11699 = !DILocation(line: 4187, column: 1, scope: !11697)
!11700 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8407, file: !8407, line: 4205, type: !6398, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !2101)
!11701 = !DILocation(line: 4207, column: 11, scope: !11700)
!11702 = !DILocation(line: 4207, column: 44, scope: !11700)
!11703 = !DILocation(line: 4207, column: 3, scope: !11700)
!11704 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8407, file: !8407, line: 3224, type: !6408, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11705)
!11705 = !{!11706}
!11706 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11704, file: !8407, line: 3224, type: !156)
!11707 = !DILocation(line: 0, scope: !11704)
!11708 = !DILocation(line: 3226, column: 3, scope: !11704)
!11709 = !DILocation(line: 3227, column: 1, scope: !11704)
!11710 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8407, file: !8407, line: 3188, type: !6408, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11711)
!11711 = !{!11712}
!11712 = !DILocalVariable(name: "Source", arg: 1, scope: !11710, file: !8407, line: 3188, type: !156)
!11713 = !DILocation(line: 0, scope: !11710)
!11714 = !DILocation(line: 3190, column: 3, scope: !11710)
!11715 = !DILocation(line: 3191, column: 1, scope: !11710)
!11716 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8407, file: !8407, line: 3204, type: !6398, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !2101)
!11717 = !DILocation(line: 3206, column: 21, scope: !11716)
!11718 = !DILocation(line: 3206, column: 3, scope: !11716)
!11719 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8407, file: !8407, line: 3240, type: !6408, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11720)
!11720 = !{!11721}
!11721 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11719, file: !8407, line: 3240, type: !156)
!11722 = !DILocation(line: 0, scope: !11719)
!11723 = !DILocation(line: 3242, column: 3, scope: !11719)
!11724 = !DILocation(line: 3243, column: 1, scope: !11719)
!11725 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8407, file: !8407, line: 3256, type: !6408, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11726)
!11726 = !{!11727}
!11727 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11725, file: !8407, line: 3256, type: !156)
!11728 = !DILocation(line: 0, scope: !11725)
!11729 = !DILocation(line: 3258, column: 3, scope: !11725)
!11730 = !DILocation(line: 3259, column: 1, scope: !11725)
!11731 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8407, file: !8407, line: 5153, type: !6398, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !2101)
!11732 = !DILocation(line: 5155, column: 11, scope: !11731)
!11733 = !DILocation(line: 5155, column: 47, scope: !11731)
!11734 = !DILocation(line: 5155, column: 3, scope: !11731)
!11735 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11429, file: !11429, line: 540, type: !11736, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !11738)
!11736 = !DISubroutineType(types: !11737)
!11737 = !{!11472, !156, !156, !11550, !11557}
!11738 = !{!11739, !11740, !11741, !11742, !11743, !11744}
!11739 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !11735, file: !11429, line: 540, type: !156)
!11740 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !11735, file: !11429, line: 540, type: !156)
!11741 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !11735, file: !11429, line: 541, type: !11550)
!11742 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !11735, file: !11429, line: 541, type: !11557)
!11743 = !DILocalVariable(name: "status", scope: !11735, file: !11429, line: 543, type: !11472)
!11744 = !DILocalVariable(name: "pllfreq", scope: !11735, file: !11429, line: 544, type: !156)
!11745 = !DILocation(line: 0, scope: !11735)
!11746 = !DILocation(line: 551, column: 6, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !11735, file: !11429, line: 551, column: 6)
!11748 = !DILocation(line: 551, column: 25, scope: !11747)
!11749 = !DILocation(line: 551, column: 6, scope: !11735)
!11750 = !DILocation(line: 554, column: 15, scope: !11751)
!11751 = distinct !DILexicalBlock(scope: !11747, file: !11429, line: 552, column: 3)
!11752 = !DILocation(line: 557, column: 8, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11751, file: !11429, line: 557, column: 8)
!11754 = !DILocation(line: 557, column: 29, scope: !11753)
!11755 = !DILocation(line: 557, column: 8, scope: !11751)
!11756 = !DILocation(line: 560, column: 20, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11758, file: !11429, line: 560, column: 10)
!11758 = distinct !DILexicalBlock(scope: !11753, file: !11429, line: 558, column: 5)
!11759 = !DILocation(line: 560, column: 10, scope: !11758)
!11760 = !DILocation(line: 562, column: 9, scope: !11761)
!11761 = distinct !DILexicalBlock(scope: !11757, file: !11429, line: 561, column: 7)
!11762 = !DILocation(line: 563, column: 7, scope: !11761)
!11763 = !DILocation(line: 566, column: 9, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11757, file: !11429, line: 565, column: 7)
!11765 = !DILocation(line: 570, column: 7, scope: !11758)
!11766 = !DILocation(line: 571, column: 7, scope: !11758)
!11767 = !DILocation(line: 571, column: 14, scope: !11758)
!11768 = !DILocation(line: 571, column: 35, scope: !11758)
!11769 = distinct !{!11769, !11766, !11770}
!11770 = !DILocation(line: 574, column: 7, scope: !11758)
!11771 = !DILocation(line: 578, column: 76, scope: !11751)
!11772 = !DILocation(line: 578, column: 103, scope: !11751)
!11773 = !DILocation(line: 579, column: 54, scope: !11751)
!11774 = !DILocation(line: 578, column: 5, scope: !11751)
!11775 = !DILocation(line: 582, column: 14, scope: !11751)
!11776 = !DILocation(line: 583, column: 3, scope: !11751)
!11777 = !DILocation(line: 0, scope: !11747)
!11778 = !DILocation(line: 590, column: 3, scope: !11735)
!11779 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8407, file: !8407, line: 2969, type: !6398, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !2101)
!11780 = !DILocation(line: 2971, column: 11, scope: !11779)
!11781 = !DILocation(line: 2971, column: 44, scope: !11779)
!11782 = !DILocation(line: 2971, column: 3, scope: !11779)
!11783 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8407, file: !8407, line: 2929, type: !365, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !2101)
!11784 = !DILocation(line: 2931, column: 3, scope: !11783)
!11785 = !DILocation(line: 2932, column: 1, scope: !11783)
!11786 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8407, file: !8407, line: 2939, type: !365, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !2101)
!11787 = !DILocation(line: 2941, column: 3, scope: !11786)
!11788 = !DILocation(line: 2942, column: 1, scope: !11786)
!11789 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8407, file: !8407, line: 2949, type: !365, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3027, retainedNodes: !2101)
!11790 = !DILocation(line: 2951, column: 3, scope: !11789)
!11791 = !DILocation(line: 2952, column: 1, scope: !11789)
!11792 = distinct !DISubprogram(name: "z_device_state_init", scope: !11793, file: !11793, line: 23, type: !365, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !11794)
!11793 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11794 = !{!11795}
!11795 = !DILocalVariable(name: "dev", scope: !11792, file: !11793, line: 25, type: !11796)
!11796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11797, size: 32)
!11797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11798)
!11798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !130, line: 378, size: 192, elements: !11799)
!11799 = !{!11800, !11801, !11802, !11803, !11809, !11810}
!11800 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11798, file: !130, line: 380, baseType: !133, size: 32)
!11801 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11798, file: !130, line: 382, baseType: !13, size: 32, offset: 32)
!11802 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11798, file: !130, line: 384, baseType: !13, size: 32, offset: 64)
!11803 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11798, file: !130, line: 386, baseType: !11804, size: 32, offset: 96)
!11804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11805, size: 32)
!11805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !130, line: 351, size: 16, elements: !11806)
!11806 = !{!11807, !11808}
!11807 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11805, file: !130, line: 359, baseType: !143, size: 8)
!11808 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11805, file: !130, line: 364, baseType: !146, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11809 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11798, file: !130, line: 388, baseType: !117, size: 32, offset: 128)
!11810 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11798, file: !130, line: 396, baseType: !149, size: 32, offset: 160)
!11811 = !DILocation(line: 0, scope: !11792)
!11812 = !DILocation(line: 31, column: 1, scope: !11792)
!11813 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11793, file: !11793, line: 33, type: !11814, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !11816)
!11814 = !DISubroutineType(types: !11815)
!11815 = !{!11796, !133}
!11816 = !{!11817, !11818}
!11817 = !DILocalVariable(name: "name", arg: 1, scope: !11813, file: !11793, line: 33, type: !133)
!11818 = !DILocalVariable(name: "dev", scope: !11813, file: !11793, line: 35, type: !11796)
!11819 = !DILocation(line: 0, scope: !11813)
!11820 = !DILocation(line: 40, column: 12, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11813, file: !11793, line: 40, column: 6)
!11822 = !DILocation(line: 40, column: 21, scope: !11821)
!11823 = !DILocation(line: 40, column: 25, scope: !11821)
!11824 = !DILocation(line: 40, column: 33, scope: !11821)
!11825 = !DILocation(line: 40, column: 6, scope: !11813)
!11826 = !DILocation(line: 55, column: 2, scope: !11827)
!11827 = distinct !DILexicalBlock(scope: !11813, file: !11793, line: 55, column: 2)
!11828 = !DILocation(line: 50, column: 7, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !11830, file: !11793, line: 50, column: 7)
!11830 = distinct !DILexicalBlock(scope: !11831, file: !11793, line: 49, column: 57)
!11831 = distinct !DILexicalBlock(scope: !11832, file: !11793, line: 49, column: 2)
!11832 = distinct !DILexicalBlock(scope: !11813, file: !11793, line: 49, column: 2)
!11833 = !DILocation(line: 50, column: 30, scope: !11829)
!11834 = !DILocation(line: 50, column: 39, scope: !11829)
!11835 = !DILocation(line: 50, column: 44, scope: !11829)
!11836 = !DILocation(line: 50, column: 7, scope: !11830)
!11837 = !DILocation(line: 49, column: 53, scope: !11831)
!11838 = !DILocation(line: 49, column: 33, scope: !11831)
!11839 = !DILocation(line: 49, column: 2, scope: !11832)
!11840 = distinct !{!11840, !11839, !11841}
!11841 = !DILocation(line: 53, column: 2, scope: !11832)
!11842 = !DILocation(line: 56, column: 7, scope: !11843)
!11843 = distinct !DILexicalBlock(scope: !11844, file: !11793, line: 56, column: 7)
!11844 = distinct !DILexicalBlock(scope: !11845, file: !11793, line: 55, column: 57)
!11845 = distinct !DILexicalBlock(scope: !11827, file: !11793, line: 55, column: 2)
!11846 = !DILocation(line: 56, column: 30, scope: !11843)
!11847 = !DILocation(line: 56, column: 52, scope: !11843)
!11848 = !DILocation(line: 56, column: 34, scope: !11843)
!11849 = !DILocation(line: 56, column: 58, scope: !11843)
!11850 = !DILocation(line: 56, column: 7, scope: !11844)
!11851 = !DILocation(line: 55, column: 53, scope: !11845)
!11852 = !DILocation(line: 55, column: 33, scope: !11845)
!11853 = distinct !{!11853, !11826, !11854}
!11854 = !DILocation(line: 59, column: 2, scope: !11827)
!11855 = !DILocation(line: 62, column: 1, scope: !11813)
!11856 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11793, file: !11793, line: 93, type: !11857, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !11859)
!11857 = !DISubroutineType(types: !11858)
!11858 = !{!146, !11796}
!11859 = !{!11860}
!11860 = !DILocalVariable(name: "dev", arg: 1, scope: !11856, file: !11793, line: 93, type: !11796)
!11861 = !DILocation(line: 0, scope: !11856)
!11862 = !DILocation(line: 99, column: 10, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11856, file: !11793, line: 99, column: 6)
!11864 = !DILocation(line: 99, column: 6, scope: !11856)
!11865 = !DILocation(line: 103, column: 14, scope: !11856)
!11866 = !DILocation(line: 103, column: 21, scope: !11856)
!11867 = !DILocation(line: 103, column: 33, scope: !11856)
!11868 = !DILocation(line: 103, column: 49, scope: !11856)
!11869 = !DILocation(line: 103, column: 58, scope: !11856)
!11870 = !DILocation(line: 104, column: 1, scope: !11856)
!11871 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11793, file: !11793, line: 87, type: !11872, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !11875)
!11872 = !DISubroutineType(types: !11873)
!11873 = !{!315, !11874}
!11874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11796, size: 32)
!11875 = !{!11876}
!11876 = !DILocalVariable(name: "devices", arg: 1, scope: !11871, file: !11793, line: 87, type: !11874)
!11877 = !DILocation(line: 0, scope: !11871)
!11878 = !DILocation(line: 89, column: 11, scope: !11871)
!11879 = !DILocation(line: 90, column: 2, scope: !11871)
!11880 = distinct !DISubprogram(name: "device_required_foreach", scope: !11793, file: !11793, line: 125, type: !11881, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !11887)
!11881 = !DISubroutineType(types: !11882)
!11882 = !{!118, !11796, !11883, !117}
!11883 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !130, line: 471, baseType: !11884)
!11884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11885, size: 32)
!11885 = !DISubroutineType(types: !11886)
!11886 = !{!118, !11796, !117}
!11887 = !{!11888, !11889, !11890, !11891, !11892}
!11888 = !DILocalVariable(name: "dev", arg: 1, scope: !11880, file: !11793, line: 125, type: !11796)
!11889 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11880, file: !11793, line: 126, type: !11883)
!11890 = !DILocalVariable(name: "context", arg: 3, scope: !11880, file: !11793, line: 127, type: !117)
!11891 = !DILocalVariable(name: "handle_count", scope: !11880, file: !11793, line: 129, type: !315)
!11892 = !DILocalVariable(name: "handles", scope: !11880, file: !11793, line: 130, type: !149)
!11893 = !DILocation(line: 0, scope: !11880)
!11894 = !DILocation(line: 129, column: 2, scope: !11880)
!11895 = !DILocation(line: 129, column: 9, scope: !11880)
!11896 = !DILocation(line: 130, column: 35, scope: !11880)
!11897 = !DILocation(line: 132, column: 33, scope: !11880)
!11898 = !DILocation(line: 132, column: 9, scope: !11880)
!11899 = !DILocation(line: 133, column: 1, scope: !11880)
!11900 = !DILocation(line: 132, column: 2, scope: !11880)
!11901 = distinct !DISubprogram(name: "device_required_handles_get", scope: !130, file: !130, line: 493, type: !11902, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !11904)
!11902 = !DISubroutineType(types: !11903)
!11903 = !{!149, !11796, !2586}
!11904 = !{!11905, !11906, !11907, !11908}
!11905 = !DILocalVariable(name: "dev", arg: 1, scope: !11901, file: !130, line: 493, type: !11796)
!11906 = !DILocalVariable(name: "count", arg: 2, scope: !11901, file: !130, line: 493, type: !2586)
!11907 = !DILocalVariable(name: "rv", scope: !11901, file: !130, line: 495, type: !149)
!11908 = !DILocalVariable(name: "i", scope: !11909, file: !130, line: 498, type: !315)
!11909 = distinct !DILexicalBlock(scope: !11910, file: !130, line: 497, column: 18)
!11910 = distinct !DILexicalBlock(scope: !11901, file: !130, line: 497, column: 6)
!11911 = !DILocation(line: 0, scope: !11901)
!11912 = !DILocation(line: 495, column: 35, scope: !11901)
!11913 = !DILocation(line: 497, column: 9, scope: !11910)
!11914 = !DILocation(line: 497, column: 6, scope: !11901)
!11915 = !DILocation(line: 0, scope: !11909)
!11916 = !DILocation(line: 500, column: 11, scope: !11909)
!11917 = !DILocation(line: 500, column: 40, scope: !11909)
!11918 = !DILocation(line: 502, column: 4, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11909, file: !130, line: 501, column: 40)
!11920 = distinct !{!11920, !11921, !11922}
!11921 = !DILocation(line: 500, column: 3, scope: !11909)
!11922 = !DILocation(line: 503, column: 3, scope: !11909)
!11923 = !DILocation(line: 504, column: 10, scope: !11909)
!11924 = !DILocation(line: 505, column: 2, scope: !11909)
!11925 = !DILocation(line: 507, column: 2, scope: !11901)
!11926 = distinct !DISubprogram(name: "device_visitor", scope: !11793, file: !11793, line: 106, type: !11927, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !11929)
!11927 = !DISubroutineType(types: !11928)
!11928 = !{!118, !149, !315, !11883, !117}
!11929 = !{!11930, !11931, !11932, !11933, !11934, !11936, !11939, !11940}
!11930 = !DILocalVariable(name: "handles", arg: 1, scope: !11926, file: !11793, line: 106, type: !149)
!11931 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11926, file: !11793, line: 107, type: !315)
!11932 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11926, file: !11793, line: 108, type: !11883)
!11933 = !DILocalVariable(name: "context", arg: 4, scope: !11926, file: !11793, line: 109, type: !117)
!11934 = !DILocalVariable(name: "i", scope: !11935, file: !11793, line: 112, type: !315)
!11935 = distinct !DILexicalBlock(scope: !11926, file: !11793, line: 112, column: 2)
!11936 = !DILocalVariable(name: "dh", scope: !11937, file: !11793, line: 113, type: !151)
!11937 = distinct !DILexicalBlock(scope: !11938, file: !11793, line: 112, column: 44)
!11938 = distinct !DILexicalBlock(scope: !11935, file: !11793, line: 112, column: 2)
!11939 = !DILocalVariable(name: "rdev", scope: !11937, file: !11793, line: 114, type: !11796)
!11940 = !DILocalVariable(name: "rc", scope: !11937, file: !11793, line: 115, type: !118)
!11941 = !DILocation(line: 0, scope: !11926)
!11942 = !DILocation(line: 0, scope: !11935)
!11943 = !DILocation(line: 112, column: 23, scope: !11938)
!11944 = !DILocation(line: 112, column: 2, scope: !11935)
!11945 = distinct !{!11945, !11944, !11946}
!11946 = !DILocation(line: 120, column: 2, scope: !11935)
!11947 = !DILocation(line: 113, column: 24, scope: !11937)
!11948 = !DILocation(line: 0, scope: !11937)
!11949 = !DILocation(line: 114, column: 31, scope: !11937)
!11950 = !DILocation(line: 115, column: 12, scope: !11937)
!11951 = !DILocation(line: 117, column: 10, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11937, file: !11793, line: 117, column: 7)
!11953 = !DILocation(line: 112, column: 39, scope: !11938)
!11954 = !DILocation(line: 123, column: 1, scope: !11926)
!11955 = distinct !DISubprogram(name: "device_from_handle", scope: !130, file: !130, line: 439, type: !11956, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !11958)
!11956 = !DISubroutineType(types: !11957)
!11957 = !{!11796, !151}
!11958 = !{!11959, !11960, !11961}
!11959 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11955, file: !130, line: 439, type: !151)
!11960 = !DILocalVariable(name: "dev", scope: !11955, file: !130, line: 443, type: !11796)
!11961 = !DILocalVariable(name: "numdev", scope: !11955, file: !130, line: 444, type: !315)
!11962 = !DILocation(line: 0, scope: !11955)
!11963 = !DILocation(line: 446, column: 7, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11955, file: !130, line: 446, column: 6)
!11965 = !DILocation(line: 446, column: 18, scope: !11964)
!11966 = !DILocation(line: 446, column: 23, scope: !11964)
!11967 = !DILocation(line: 450, column: 2, scope: !11955)
!11968 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11793, file: !11793, line: 135, type: !11881, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !11969)
!11969 = !{!11970, !11971, !11972, !11973, !11974}
!11970 = !DILocalVariable(name: "dev", arg: 1, scope: !11968, file: !11793, line: 135, type: !11796)
!11971 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11968, file: !11793, line: 136, type: !11883)
!11972 = !DILocalVariable(name: "context", arg: 3, scope: !11968, file: !11793, line: 137, type: !117)
!11973 = !DILocalVariable(name: "handle_count", scope: !11968, file: !11793, line: 139, type: !315)
!11974 = !DILocalVariable(name: "handles", scope: !11968, file: !11793, line: 140, type: !149)
!11975 = !DILocation(line: 0, scope: !11968)
!11976 = !DILocation(line: 139, column: 2, scope: !11968)
!11977 = !DILocation(line: 139, column: 9, scope: !11968)
!11978 = !DILocation(line: 140, column: 35, scope: !11968)
!11979 = !DILocation(line: 142, column: 33, scope: !11968)
!11980 = !DILocation(line: 142, column: 9, scope: !11968)
!11981 = !DILocation(line: 143, column: 1, scope: !11968)
!11982 = !DILocation(line: 142, column: 2, scope: !11968)
!11983 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !130, file: !130, line: 573, type: !11902, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3092, retainedNodes: !11984)
!11984 = !{!11985, !11986, !11987, !11988, !11989}
!11985 = !DILocalVariable(name: "dev", arg: 1, scope: !11983, file: !130, line: 573, type: !11796)
!11986 = !DILocalVariable(name: "count", arg: 2, scope: !11983, file: !130, line: 573, type: !2586)
!11987 = !DILocalVariable(name: "rv", scope: !11983, file: !130, line: 575, type: !149)
!11988 = !DILocalVariable(name: "region", scope: !11983, file: !130, line: 576, type: !315)
!11989 = !DILocalVariable(name: "i", scope: !11983, file: !130, line: 577, type: !315)
!11990 = !DILocation(line: 0, scope: !11983)
!11991 = !DILocation(line: 575, column: 35, scope: !11983)
!11992 = !DILocation(line: 579, column: 9, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11983, file: !130, line: 579, column: 6)
!11994 = !DILocation(line: 579, column: 6, scope: !11983)
!11995 = !DILocation(line: 582, column: 8, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11997, file: !130, line: 582, column: 8)
!11997 = distinct !DILexicalBlock(scope: !11998, file: !130, line: 581, column: 23)
!11998 = distinct !DILexicalBlock(scope: !11993, file: !130, line: 579, column: 18)
!11999 = !DILocation(line: 582, column: 12, scope: !11996)
!12000 = !DILocation(line: 585, column: 6, scope: !11997)
!12001 = !DILocation(line: 0, scope: !11998)
!12002 = !DILocation(line: 581, column: 17, scope: !11998)
!12003 = !DILocation(line: 581, column: 3, scope: !11998)
!12004 = !DILocation(line: 588, column: 10, scope: !11998)
!12005 = !DILocation(line: 588, column: 16, scope: !11998)
!12006 = !DILocation(line: 589, column: 4, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !11998, file: !130, line: 588, column: 39)
!12008 = !DILocation(line: 588, column: 3, scope: !11998)
!12009 = distinct !{!12009, !12008, !12010}
!12010 = !DILocation(line: 590, column: 3, scope: !11998)
!12011 = !DILocation(line: 591, column: 10, scope: !11998)
!12012 = !DILocation(line: 592, column: 2, scope: !11998)
!12013 = !DILocation(line: 575, column: 25, scope: !11983)
!12014 = !DILocation(line: 594, column: 2, scope: !11983)
!12015 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1892, file: !1892, line: 49, type: !12016, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1889, retainedNodes: !2101)
!12016 = !DISubroutineType(types: !12017)
!12017 = !{!2579}
!12018 = !DILocation(line: 51, column: 10, scope: !12015)
!12019 = !DILocation(line: 51, column: 20, scope: !12015)
!12020 = !DILocation(line: 51, column: 2, scope: !12015)
!12021 = distinct !DISubprogram(name: "coredump", scope: !3099, file: !3099, line: 209, type: !12022, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12170)
!12022 = !DISubroutineType(types: !12023)
!12023 = !{null, !32, !12024, !12068}
!12024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12025, size: 32)
!12025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12026)
!12026 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2713, line: 141, baseType: !12027)
!12027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2713, line: 97, size: 256, elements: !12028)
!12028 = !{!12029}
!12029 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12027, file: !2713, line: 107, baseType: !12030, size: 256)
!12030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2713, line: 98, size: 256, elements: !12031)
!12031 = !{!12032, !12037, !12042, !12047, !12052, !12057, !12062, !12067}
!12032 = !DIDerivedType(tag: DW_TAG_member, scope: !12030, file: !2713, line: 99, baseType: !12033, size: 32)
!12033 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12030, file: !2713, line: 99, size: 32, elements: !12034)
!12034 = !{!12035, !12036}
!12035 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12033, file: !2713, line: 99, baseType: !156, size: 32)
!12036 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12033, file: !2713, line: 99, baseType: !156, size: 32)
!12037 = !DIDerivedType(tag: DW_TAG_member, scope: !12030, file: !2713, line: 100, baseType: !12038, size: 32, offset: 32)
!12038 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12030, file: !2713, line: 100, size: 32, elements: !12039)
!12039 = !{!12040, !12041}
!12040 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12038, file: !2713, line: 100, baseType: !156, size: 32)
!12041 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12038, file: !2713, line: 100, baseType: !156, size: 32)
!12042 = !DIDerivedType(tag: DW_TAG_member, scope: !12030, file: !2713, line: 101, baseType: !12043, size: 32, offset: 64)
!12043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12030, file: !2713, line: 101, size: 32, elements: !12044)
!12044 = !{!12045, !12046}
!12045 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12043, file: !2713, line: 101, baseType: !156, size: 32)
!12046 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12043, file: !2713, line: 101, baseType: !156, size: 32)
!12047 = !DIDerivedType(tag: DW_TAG_member, scope: !12030, file: !2713, line: 102, baseType: !12048, size: 32, offset: 96)
!12048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12030, file: !2713, line: 102, size: 32, elements: !12049)
!12049 = !{!12050, !12051}
!12050 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12048, file: !2713, line: 102, baseType: !156, size: 32)
!12051 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12048, file: !2713, line: 102, baseType: !156, size: 32)
!12052 = !DIDerivedType(tag: DW_TAG_member, scope: !12030, file: !2713, line: 103, baseType: !12053, size: 32, offset: 128)
!12053 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12030, file: !2713, line: 103, size: 32, elements: !12054)
!12054 = !{!12055, !12056}
!12055 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12053, file: !2713, line: 103, baseType: !156, size: 32)
!12056 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12053, file: !2713, line: 103, baseType: !156, size: 32)
!12057 = !DIDerivedType(tag: DW_TAG_member, scope: !12030, file: !2713, line: 104, baseType: !12058, size: 32, offset: 160)
!12058 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12030, file: !2713, line: 104, size: 32, elements: !12059)
!12059 = !{!12060, !12061}
!12060 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12058, file: !2713, line: 104, baseType: !156, size: 32)
!12061 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12058, file: !2713, line: 104, baseType: !156, size: 32)
!12062 = !DIDerivedType(tag: DW_TAG_member, scope: !12030, file: !2713, line: 105, baseType: !12063, size: 32, offset: 192)
!12063 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12030, file: !2713, line: 105, size: 32, elements: !12064)
!12064 = !{!12065, !12066}
!12065 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12063, file: !2713, line: 105, baseType: !156, size: 32)
!12066 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12063, file: !2713, line: 105, baseType: !156, size: 32)
!12067 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12030, file: !2713, line: 106, baseType: !156, size: 32, offset: 224)
!12068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12069, size: 32)
!12069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !12070)
!12070 = !{!12071, !12129, !12141, !12142, !12143, !12144, !12150, !12165}
!12071 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12069, file: !225, line: 247, baseType: !12072, size: 384)
!12072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !12073)
!12073 = !{!12074, !12098, !12105, !12106, !12107, !12116, !12117, !12118}
!12074 = !DIDerivedType(tag: DW_TAG_member, scope: !12072, file: !225, line: 60, baseType: !12075, size: 64)
!12075 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12072, file: !225, line: 60, size: 64, elements: !12076)
!12076 = !{!12077, !12092}
!12077 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12075, file: !225, line: 61, baseType: !12078, size: 64)
!12078 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !12079)
!12079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !235, line: 37, size: 64, elements: !12080)
!12080 = !{!12081, !12087}
!12081 = !DIDerivedType(tag: DW_TAG_member, scope: !12079, file: !235, line: 38, baseType: !12082, size: 32)
!12082 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12079, file: !235, line: 38, size: 32, elements: !12083)
!12083 = !{!12084, !12086}
!12084 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12082, file: !235, line: 39, baseType: !12085, size: 32)
!12085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12079, size: 32)
!12086 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12082, file: !235, line: 40, baseType: !12085, size: 32)
!12087 = !DIDerivedType(tag: DW_TAG_member, scope: !12079, file: !235, line: 42, baseType: !12088, size: 32, offset: 32)
!12088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12079, file: !235, line: 42, size: 32, elements: !12089)
!12089 = !{!12090, !12091}
!12090 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12088, file: !235, line: 43, baseType: !12085, size: 32)
!12091 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12088, file: !235, line: 44, baseType: !12085, size: 32)
!12092 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12075, file: !225, line: 62, baseType: !12093, size: 64)
!12093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !12094)
!12094 = !{!12095}
!12095 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12093, file: !251, line: 50, baseType: !12096, size: 64)
!12096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12097, size: 64, elements: !256)
!12097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12093, size: 32)
!12098 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12072, file: !225, line: 68, baseType: !12099, size: 32, offset: 64)
!12099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12100, size: 32)
!12100 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !12101)
!12101 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !12102)
!12102 = !{!12103}
!12103 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12101, file: !261, line: 232, baseType: !12104, size: 64)
!12104 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !12079)
!12105 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12072, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!12106 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12072, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!12107 = !DIDerivedType(tag: DW_TAG_member, scope: !12072, file: !225, line: 90, baseType: !12108, size: 16, offset: 112)
!12108 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12072, file: !225, line: 90, size: 16, elements: !12109)
!12109 = !{!12110, !12115}
!12110 = !DIDerivedType(tag: DW_TAG_member, scope: !12108, file: !225, line: 91, baseType: !12111, size: 16)
!12111 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12108, file: !225, line: 91, size: 16, elements: !12112)
!12112 = !{!12113, !12114}
!12113 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12111, file: !225, line: 96, baseType: !275, size: 8)
!12114 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12111, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!12115 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12108, file: !225, line: 100, baseType: !279, size: 16)
!12116 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12072, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!12117 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12072, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!12118 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12072, file: !225, line: 131, baseType: !12119, size: 192, offset: 192)
!12119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !12120)
!12120 = !{!12121, !12122, !12128}
!12121 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12119, file: !261, line: 245, baseType: !12078, size: 64)
!12122 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12119, file: !261, line: 246, baseType: !12123, size: 32, offset: 64)
!12123 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !12124)
!12124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12125, size: 32)
!12125 = !DISubroutineType(types: !12126)
!12126 = !{null, !12127}
!12127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12119, size: 32)
!12128 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12119, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!12129 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12069, file: !225, line: 250, baseType: !12130, size: 288, offset: 384)
!12130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !12131)
!12131 = !{!12132, !12133, !12134, !12135, !12136, !12137, !12138, !12139, !12140}
!12132 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12130, file: !296, line: 26, baseType: !156, size: 32)
!12133 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12130, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!12134 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12130, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!12135 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12130, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!12136 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12130, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!12137 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12130, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!12138 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12130, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!12139 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12130, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!12140 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12130, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!12141 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12069, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!12142 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12069, file: !225, line: 256, baseType: !12100, size: 64, offset: 704)
!12143 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12069, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!12144 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12069, file: !225, line: 300, baseType: !12145, size: 96, offset: 800)
!12145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !12146)
!12146 = !{!12147, !12148, !12149}
!12147 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12145, file: !225, line: 153, baseType: !22, size: 32)
!12148 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12145, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!12149 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12145, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!12150 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12069, file: !225, line: 325, baseType: !12151, size: 32, offset: 896)
!12151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12152, size: 32)
!12152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !12153)
!12153 = !{!12154, !12160, !12161}
!12154 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12152, file: !220, line: 5074, baseType: !12155, size: 96)
!12155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !12156)
!12156 = !{!12157, !12158, !12159}
!12157 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12155, file: !324, line: 57, baseType: !327, size: 32)
!12158 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12155, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!12159 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12155, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!12160 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12152, file: !220, line: 5075, baseType: !12100, size: 64, offset: 96)
!12161 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12152, file: !220, line: 5076, baseType: !12162, size: 32, offset: 160)
!12162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !12163)
!12163 = !{!12164}
!12164 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12162, file: !334, line: 52, baseType: !22, size: 32)
!12165 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12069, file: !225, line: 343, baseType: !12166, size: 64, offset: 928)
!12166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !12167)
!12167 = !{!12168, !12169}
!12168 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12166, file: !296, line: 63, baseType: !156, size: 32)
!12169 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12166, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!12170 = !{!12171, !12172, !12173}
!12171 = !DILocalVariable(name: "reason", arg: 1, scope: !12021, file: !3099, line: 209, type: !32)
!12172 = !DILocalVariable(name: "esf", arg: 2, scope: !12021, file: !3099, line: 209, type: !12024)
!12173 = !DILocalVariable(name: "thread", arg: 3, scope: !12021, file: !3099, line: 210, type: !12068)
!12174 = !DILocation(line: 0, scope: !12021)
!12175 = !DILocation(line: 212, column: 1, scope: !12021)
!12176 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3099, file: !3099, line: 214, type: !12177, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12179)
!12177 = !DISubroutineType(types: !12178)
!12178 = !{null, !22, !22}
!12179 = !{!12180, !12181}
!12180 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12176, file: !3099, line: 214, type: !22)
!12181 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12176, file: !3099, line: 214, type: !22)
!12182 = !DILocation(line: 0, scope: !12176)
!12183 = !DILocation(line: 216, column: 1, scope: !12176)
!12184 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3099, file: !3099, line: 218, type: !12185, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12187)
!12185 = !DISubroutineType(types: !12186)
!12186 = !{null, !1933, !315}
!12187 = !{!12188, !12189}
!12188 = !DILocalVariable(name: "buf", arg: 1, scope: !12184, file: !3099, line: 218, type: !1933)
!12189 = !DILocalVariable(name: "buflen", arg: 2, scope: !12184, file: !3099, line: 218, type: !315)
!12190 = !DILocation(line: 0, scope: !12184)
!12191 = !DILocation(line: 220, column: 1, scope: !12184)
!12192 = distinct !DISubprogram(name: "coredump_query", scope: !3099, file: !3099, line: 222, type: !12193, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12195)
!12193 = !DISubroutineType(types: !12194)
!12194 = !{!118, !3098, !117}
!12195 = !{!12196, !12197}
!12196 = !DILocalVariable(name: "query_id", arg: 1, scope: !12192, file: !3099, line: 222, type: !3098)
!12197 = !DILocalVariable(name: "arg", arg: 2, scope: !12192, file: !3099, line: 222, type: !117)
!12198 = !DILocation(line: 0, scope: !12192)
!12199 = !DILocation(line: 224, column: 2, scope: !12192)
!12200 = distinct !DISubprogram(name: "coredump_cmd", scope: !3099, file: !3099, line: 227, type: !12201, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12203)
!12201 = !DISubroutineType(types: !12202)
!12202 = !{!118, !3105, !117}
!12203 = !{!12204, !12205}
!12204 = !DILocalVariable(name: "query_id", arg: 1, scope: !12200, file: !3099, line: 227, type: !3105)
!12205 = !DILocalVariable(name: "arg", arg: 2, scope: !12200, file: !3099, line: 227, type: !117)
!12206 = !DILocation(line: 0, scope: !12200)
!12207 = !DILocation(line: 229, column: 2, scope: !12200)
!12208 = distinct !DISubprogram(name: "arch_system_halt", scope: !12209, file: !12209, line: 23, type: !6148, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12210)
!12209 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12210 = !{!12211}
!12211 = !DILocalVariable(name: "reason", arg: 1, scope: !12208, file: !12209, line: 23, type: !32)
!12212 = !DILocation(line: 0, scope: !12208)
!12213 = !DILocation(line: 55, column: 2, scope: !12214, inlinedAt: !12218)
!12214 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6137, file: !6137, line: 42, type: !6138, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12215)
!12215 = !{!12216, !12217}
!12216 = !DILocalVariable(name: "key", scope: !12214, file: !6137, line: 44, type: !32)
!12217 = !DILocalVariable(name: "tmp", scope: !12214, file: !6137, line: 53, type: !32)
!12218 = distinct !DILocation(line: 31, column: 8, scope: !12208)
!12219 = !{i64 1952077}
!12220 = !DILocation(line: 0, scope: !12214, inlinedAt: !12218)
!12221 = !DILocation(line: 32, column: 2, scope: !12208)
!12222 = !DILocation(line: 32, column: 2, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12224, file: !12209, line: 32, column: 2)
!12224 = distinct !DILexicalBlock(scope: !12208, file: !12209, line: 32, column: 2)
!12225 = distinct !{!12225, !12226, !12227}
!12226 = !DILocation(line: 32, column: 2, scope: !12224)
!12227 = !DILocation(line: 34, column: 2, scope: !12224)
!12228 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12209, file: !12209, line: 39, type: !12229, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12231)
!12229 = !DISubroutineType(types: !12230)
!12230 = !{null, !32, !12024}
!12231 = !{!12232, !12233}
!12232 = !DILocalVariable(name: "reason", arg: 1, scope: !12228, file: !12209, line: 39, type: !32)
!12233 = !DILocalVariable(name: "esf", arg: 2, scope: !12228, file: !12209, line: 40, type: !12024)
!12234 = !DILocation(line: 0, scope: !12228)
!12235 = !DILocation(line: 46, column: 2, scope: !12228)
!12236 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12209, file: !12209, line: 81, type: !6148, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12237)
!12237 = !{!12238}
!12238 = !DILocalVariable(name: "reason", arg: 1, scope: !12236, file: !12209, line: 81, type: !32)
!12239 = !DILocation(line: 0, scope: !12236)
!12240 = !DILocation(line: 83, column: 2, scope: !12236)
!12241 = distinct !DISubprogram(name: "z_fatal_error", scope: !12209, file: !12209, line: 96, type: !12229, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12242)
!12242 = !{!12243, !12244, !12245, !12246}
!12243 = !DILocalVariable(name: "reason", arg: 1, scope: !12241, file: !12209, line: 96, type: !32)
!12244 = !DILocalVariable(name: "esf", arg: 2, scope: !12241, file: !12209, line: 96, type: !12024)
!12245 = !DILocalVariable(name: "key", scope: !12241, file: !12209, line: 102, type: !32)
!12246 = !DILocalVariable(name: "thread", scope: !12241, file: !12209, line: 103, type: !12068)
!12247 = !DILocation(line: 0, scope: !12241)
!12248 = !DILocation(line: 55, column: 2, scope: !12214, inlinedAt: !12249)
!12249 = distinct !DILocation(line: 102, column: 21, scope: !12241)
!12250 = !DILocation(line: 0, scope: !12214, inlinedAt: !12249)
!12251 = !DILocation(line: 131, column: 2, scope: !12241)
!12252 = !DILocation(line: 147, column: 3, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12254, file: !12209, line: 147, column: 3)
!12254 = distinct !DILexicalBlock(scope: !12255, file: !12209, line: 147, column: 3)
!12255 = distinct !DILexicalBlock(scope: !12256, file: !12209, line: 146, column: 32)
!12256 = distinct !DILexicalBlock(scope: !12241, file: !12209, line: 146, column: 6)
!12257 = !DILocation(line: 147, column: 3, scope: !12254)
!12258 = !DILocation(line: 147, column: 3, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12253, file: !12209, line: 147, column: 3)
!12260 = !DILocation(line: 104, column: 4, scope: !12241)
!12261 = !DILocalVariable(name: "key", arg: 1, scope: !12262, file: !6137, line: 84, type: !32)
!12262 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6137, file: !6137, line: 84, type: !6148, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12263)
!12263 = !{!12261}
!12264 = !DILocation(line: 0, scope: !12262, inlinedAt: !12265)
!12265 = distinct !DILocation(line: 186, column: 2, scope: !12241)
!12266 = !DILocation(line: 95, column: 2, scope: !12262, inlinedAt: !12265)
!12267 = !{i64 1952894}
!12268 = !DILocation(line: 189, column: 3, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12270, file: !12209, line: 188, column: 41)
!12270 = distinct !DILexicalBlock(scope: !12241, file: !12209, line: 188, column: 6)
!12271 = !DILocation(line: 191, column: 1, scope: !12241)
!12272 = distinct !DISubprogram(name: "k_current_get", scope: !220, file: !220, line: 530, type: !12273, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !2101)
!12273 = !DISubroutineType(types: !12274)
!12274 = !{!12275}
!12275 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !12068)
!12276 = !DILocation(line: 535, column: 9, scope: !12272)
!12277 = !DILocation(line: 535, column: 2, scope: !12272)
!12278 = distinct !DISubprogram(name: "k_thread_abort", scope: !3450, file: !3450, line: 188, type: !12279, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !12281)
!12279 = !DISubroutineType(types: !12280)
!12280 = !{null, !12275}
!12281 = !{!12282}
!12282 = !DILocalVariable(name: "thread", arg: 1, scope: !12278, file: !3450, line: 188, type: !12275)
!12283 = !DILocation(line: 0, scope: !12278)
!12284 = !DILocation(line: 197, column: 2, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12278, file: !3450, line: 197, column: 2)
!12286 = !{i64 2154071709}
!12287 = !DILocation(line: 198, column: 2, scope: !12278)
!12288 = !DILocation(line: 199, column: 1, scope: !12278)
!12289 = distinct !DISubprogram(name: "z_current_get", scope: !3450, file: !3450, line: 173, type: !12273, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3095, retainedNodes: !2101)
!12290 = !DILocation(line: 180, column: 2, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12289, file: !3450, line: 180, column: 2)
!12292 = !{i64 2154071641}
!12293 = !DILocation(line: 181, column: 9, scope: !12289)
!12294 = !DILocation(line: 181, column: 2, scope: !12289)
!12295 = distinct !DISubprogram(name: "z_early_memset", scope: !1900, file: !1900, line: 108, type: !12296, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !12298)
!12296 = !DISubroutineType(types: !12297)
!12297 = !{null, !117, !118, !315}
!12298 = !{!12299, !12300, !12301}
!12299 = !DILocalVariable(name: "dst", arg: 1, scope: !12295, file: !1900, line: 108, type: !117)
!12300 = !DILocalVariable(name: "c", arg: 2, scope: !12295, file: !1900, line: 108, type: !118)
!12301 = !DILocalVariable(name: "n", arg: 3, scope: !12295, file: !1900, line: 108, type: !315)
!12302 = !DILocation(line: 0, scope: !12295)
!12303 = !DILocation(line: 110, column: 9, scope: !12295)
!12304 = !DILocation(line: 111, column: 1, scope: !12295)
!12305 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1900, file: !1900, line: 121, type: !12306, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !12308)
!12306 = !DISubroutineType(types: !12307)
!12307 = !{null, !117, !13, !315}
!12308 = !{!12309, !12310, !12311}
!12309 = !DILocalVariable(name: "dst", arg: 1, scope: !12305, file: !1900, line: 121, type: !117)
!12310 = !DILocalVariable(name: "src", arg: 2, scope: !12305, file: !1900, line: 121, type: !13)
!12311 = !DILocalVariable(name: "n", arg: 3, scope: !12305, file: !1900, line: 121, type: !315)
!12312 = !DILocation(line: 0, scope: !12305)
!12313 = !DILocation(line: 123, column: 9, scope: !12305)
!12314 = !DILocation(line: 124, column: 1, scope: !12305)
!12315 = distinct !DISubprogram(name: "z_bss_zero", scope: !1900, file: !1900, line: 132, type: !365, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !2101)
!12316 = !DILocation(line: 143, column: 2, scope: !12315)
!12317 = !DILocation(line: 168, column: 1, scope: !12315)
!12318 = distinct !DISubprogram(name: "z_init_cpu", scope: !1900, file: !1900, line: 372, type: !8011, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !12319)
!12319 = !{!12320}
!12320 = !DILocalVariable(name: "id", arg: 1, scope: !12318, file: !1900, line: 372, type: !118)
!12321 = !DILocation(line: 0, scope: !12318)
!12322 = !DILocation(line: 374, column: 2, scope: !12318)
!12323 = !DILocation(line: 375, column: 34, scope: !12318)
!12324 = !DILocation(line: 375, column: 19, scope: !12318)
!12325 = !DILocation(line: 375, column: 31, scope: !12318)
!12326 = !DILocation(line: 376, column: 24, scope: !12318)
!12327 = !DILocation(line: 376, column: 19, scope: !12318)
!12328 = !DILocation(line: 376, column: 22, scope: !12318)
!12329 = !DILocation(line: 378, column: 26, scope: !12318)
!12330 = !DILocation(line: 378, column: 4, scope: !12318)
!12331 = !DILocation(line: 378, column: 50, scope: !12318)
!12332 = !DILocation(line: 377, column: 19, scope: !12318)
!12333 = !DILocation(line: 377, column: 29, scope: !12318)
!12334 = !DILocation(line: 384, column: 1, scope: !12318)
!12335 = distinct !DISubprogram(name: "init_idle_thread", scope: !1900, file: !1900, line: 343, type: !8011, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !12336)
!12336 = !{!12337, !12338, !12339, !12342}
!12337 = !DILocalVariable(name: "i", arg: 1, scope: !12335, file: !1900, line: 343, type: !118)
!12338 = !DILocalVariable(name: "thread", scope: !12335, file: !1900, line: 345, type: !1993)
!12339 = !DILocalVariable(name: "stack", scope: !12335, file: !1900, line: 346, type: !12340)
!12340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12341, size: 32)
!12341 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !345, line: 44, baseType: !2110)
!12342 = !DILocalVariable(name: "tname", scope: !12335, file: !1900, line: 358, type: !1239)
!12343 = !DILocation(line: 0, scope: !12335)
!12344 = !DILocation(line: 345, column: 29, scope: !12335)
!12345 = !DILocation(line: 346, column: 28, scope: !12335)
!12346 = !DILocation(line: 362, column: 37, scope: !12335)
!12347 = !DILocation(line: 362, column: 36, scope: !12335)
!12348 = !DILocation(line: 361, column: 2, scope: !12335)
!12349 = !DILocation(line: 365, column: 2, scope: !12335)
!12350 = !DILocation(line: 370, column: 1, scope: !12335)
!12351 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !347, file: !347, line: 331, type: !12352, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !12354)
!12352 = !DISubroutineType(types: !12353)
!12353 = !{!1239, !12340}
!12354 = !{!12355}
!12355 = !DILocalVariable(name: "sym", arg: 1, scope: !12351, file: !347, line: 331, type: !12340)
!12356 = !DILocation(line: 0, scope: !12351)
!12357 = !DILocation(line: 333, column: 21, scope: !12351)
!12358 = !DILocation(line: 333, column: 2, scope: !12351)
!12359 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12360, file: !12360, line: 155, type: !12361, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !12363)
!12360 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12361 = !DISubroutineType(types: !12362)
!12362 = !{null, !1993}
!12363 = !{!12364}
!12364 = !DILocalVariable(name: "thread", arg: 1, scope: !12359, file: !12360, line: 155, type: !1993)
!12365 = !DILocation(line: 0, scope: !12359)
!12366 = !DILocation(line: 157, column: 15, scope: !12359)
!12367 = !DILocation(line: 157, column: 28, scope: !12359)
!12368 = !DILocation(line: 158, column: 1, scope: !12359)
!12369 = distinct !DISubprogram(name: "z_cstart", scope: !1900, file: !1900, line: 501, type: !365, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !12370)
!12370 = !{!12371}
!12371 = !DILocalVariable(name: "dummy_thread", scope: !12369, file: !1900, line: 518, type: !1994)
!12372 = !DILocation(line: 507, column: 2, scope: !12369)
!12373 = !DILocation(line: 43, column: 14, scope: !12374, inlinedAt: !12378)
!12374 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12375, file: !12375, line: 40, type: !365, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !12376)
!12375 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12376 = !{!12377}
!12377 = !DILocalVariable(name: "msp", scope: !12374, file: !12375, line: 42, type: !156)
!12378 = distinct !DILocation(line: 44, column: 2, scope: !12379, inlinedAt: !12381)
!12379 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12380, file: !12380, line: 42, type: !365, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !2101)
!12380 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12381 = distinct !DILocation(line: 510, column: 2, scope: !12369)
!12382 = !DILocation(line: 43, column: 3, scope: !12374, inlinedAt: !12378)
!12383 = !DILocation(line: 43, column: 60, scope: !12374, inlinedAt: !12378)
!12384 = !DILocation(line: 0, scope: !12374, inlinedAt: !12378)
!12385 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12386, file: !6311, line: 1153, type: !156)
!12386 = distinct !DISubprogram(name: "__set_MSP", scope: !6311, file: !6311, line: 1153, type: !6408, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !12387)
!12387 = !{!12385}
!12388 = !DILocation(line: 0, scope: !12386, inlinedAt: !12389)
!12389 = distinct !DILocation(line: 46, column: 2, scope: !12374, inlinedAt: !12378)
!12390 = !DILocation(line: 1155, column: 3, scope: !12386, inlinedAt: !12389)
!12391 = !{i64 2849321}
!12392 = !DILocation(line: 62, column: 11, scope: !12374, inlinedAt: !12378)
!12393 = !DILocation(line: 102, column: 2, scope: !12394, inlinedAt: !12395)
!12394 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7137, file: !7137, line: 97, type: !365, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !2101)
!12395 = distinct !DILocation(line: 45, column: 2, scope: !12379, inlinedAt: !12381)
!12396 = !DILocation(line: 108, column: 2, scope: !12394, inlinedAt: !12395)
!12397 = !DILocation(line: 112, column: 2, scope: !12394, inlinedAt: !12395)
!12398 = !DILocation(line: 113, column: 2, scope: !12394, inlinedAt: !12395)
!12399 = !DILocation(line: 114, column: 2, scope: !12394, inlinedAt: !12395)
!12400 = !DILocation(line: 116, column: 2, scope: !12394, inlinedAt: !12395)
!12401 = !DILocation(line: 123, column: 13, scope: !12394, inlinedAt: !12395)
!12402 = !DILocation(line: 46, column: 2, scope: !12379, inlinedAt: !12381)
!12403 = !DILocation(line: 47, column: 2, scope: !12379, inlinedAt: !12381)
!12404 = !DILocation(line: 174, column: 12, scope: !12405, inlinedAt: !12406)
!12405 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7137, file: !7137, line: 169, type: !365, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !2101)
!12406 = distinct !DILocation(line: 48, column: 2, scope: !12379, inlinedAt: !12381)
!12407 = !DILocation(line: 179, column: 12, scope: !12405, inlinedAt: !12406)
!12408 = !DILocation(line: 50, column: 2, scope: !12379, inlinedAt: !12381)
!12409 = !DILocation(line: 57, column: 2, scope: !12379, inlinedAt: !12381)
!12410 = !DILocation(line: 518, column: 2, scope: !12369)
!12411 = !DILocation(line: 518, column: 18, scope: !12369)
!12412 = !DILocation(line: 520, column: 2, scope: !12369)
!12413 = !DILocation(line: 523, column: 2, scope: !12369)
!12414 = !DILocation(line: 526, column: 2, scope: !12369)
!12415 = !DILocation(line: 527, column: 2, scope: !12369)
!12416 = !DILocation(line: 543, column: 24, scope: !12369)
!12417 = !DILocation(line: 543, column: 2, scope: !12369)
!12418 = !DILocation(line: 0, scope: !2127)
!12419 = !DILocation(line: 246, column: 15, scope: !2145)
!12420 = !DILocation(line: 246, column: 36, scope: !2144)
!12421 = !DILocation(line: 246, column: 2, scope: !2145)
!12422 = !DILocation(line: 247, column: 37, scope: !2143)
!12423 = !DILocation(line: 0, scope: !2143)
!12424 = !DILocation(line: 248, column: 19, scope: !2143)
!12425 = !DILocation(line: 248, column: 12, scope: !2143)
!12426 = !DILocation(line: 250, column: 11, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !2143, file: !1900, line: 250, column: 7)
!12428 = !DILocation(line: 250, column: 7, scope: !2143)
!12429 = !DILocation(line: 254, column: 11, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12431, file: !1900, line: 254, column: 8)
!12431 = distinct !DILexicalBlock(scope: !12427, file: !1900, line: 250, column: 20)
!12432 = !DILocation(line: 254, column: 8, scope: !12431)
!12433 = !DILocation(line: 255, column: 9, scope: !12434)
!12434 = distinct !DILexicalBlock(scope: !12430, file: !1900, line: 254, column: 17)
!12435 = !DILocation(line: 258, column: 9, scope: !12434)
!12436 = !DILocation(line: 261, column: 28, scope: !12434)
!12437 = !DILocation(line: 261, column: 10, scope: !12434)
!12438 = !DILocation(line: 261, column: 17, scope: !12434)
!12439 = !DILocation(line: 261, column: 26, scope: !12434)
!12440 = !DILocation(line: 262, column: 4, scope: !12434)
!12441 = !DILocation(line: 263, column: 9, scope: !12431)
!12442 = !DILocation(line: 263, column: 16, scope: !12431)
!12443 = !DILocation(line: 263, column: 28, scope: !12431)
!12444 = !DILocation(line: 264, column: 3, scope: !12431)
!12445 = !DILocation(line: 246, column: 60, scope: !2144)
!12446 = distinct !{!12446, !12421, !12447}
!12447 = !DILocation(line: 265, column: 2, scope: !2145)
!12448 = !DILocation(line: 266, column: 1, scope: !2127)
!12449 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !656, file: !656, line: 1814, type: !6351, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !12450)
!12450 = !{!12451, !12452}
!12451 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12449, file: !656, line: 1814, type: !891)
!12452 = !DILocalVariable(name: "priority", arg: 2, scope: !12449, file: !656, line: 1814, type: !156)
!12453 = !DILocation(line: 0, scope: !12449)
!12454 = !DILocation(line: 1822, column: 48, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12456, file: !656, line: 1821, column: 3)
!12456 = distinct !DILexicalBlock(scope: !12449, file: !656, line: 1816, column: 7)
!12457 = !DILocation(line: 1822, column: 32, scope: !12455)
!12458 = !DILocation(line: 1822, column: 40, scope: !12455)
!12459 = !DILocation(line: 1822, column: 5, scope: !12455)
!12460 = !DILocation(line: 1822, column: 46, scope: !12455)
!12461 = !DILocation(line: 1824, column: 1, scope: !12449)
!12462 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12380, file: !12380, line: 32, type: !365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2101)
!12463 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12464, file: !12464, line: 215, type: !12361, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !12465)
!12464 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12465 = !{!12466}
!12466 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12463, file: !12464, line: 215, type: !1993)
!12467 = !DILocation(line: 0, scope: !12463)
!12468 = !DILocation(line: 217, column: 21, scope: !12463)
!12469 = !DILocation(line: 217, column: 34, scope: !12463)
!12470 = !DILocation(line: 221, column: 21, scope: !12463)
!12471 = !DILocation(line: 221, column: 34, scope: !12463)
!12472 = !DILocation(line: 223, column: 27, scope: !12463)
!12473 = !DILocation(line: 223, column: 33, scope: !12463)
!12474 = !DILocation(line: 224, column: 27, scope: !12463)
!12475 = !DILocation(line: 224, column: 32, scope: !12463)
!12476 = !DILocation(line: 230, column: 2, scope: !12463)
!12477 = !DILocation(line: 239, column: 24, scope: !12463)
!12478 = !DILocation(line: 240, column: 1, scope: !12463)
!12479 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1900, file: !1900, line: 399, type: !12480, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !12482)
!12480 = !DISubroutineType(types: !12481)
!12481 = !{!1239}
!12482 = !{!12483}
!12483 = !DILocalVariable(name: "stack_ptr", scope: !12479, file: !1900, line: 401, type: !1239)
!12484 = !DILocation(line: 404, column: 2, scope: !12479)
!12485 = !DILocation(line: 416, column: 24, scope: !12479)
!12486 = !DILocation(line: 418, column: 14, scope: !12479)
!12487 = !DILocation(line: 0, scope: !12479)
!12488 = !DILocation(line: 423, column: 2, scope: !12479)
!12489 = !DILocation(line: 424, column: 2, scope: !12479)
!12490 = !DILocation(line: 426, column: 2, scope: !12479)
!12491 = !DILocation(line: 428, column: 2, scope: !12479)
!12492 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1900, file: !1900, line: 432, type: !12493, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !12495)
!12493 = !DISubroutineType(types: !12494)
!12494 = !{null, !1239}
!12495 = !{!12496}
!12496 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12492, file: !1900, line: 432, type: !1239)
!12497 = !DILocation(line: 0, scope: !12492)
!12498 = !DILocation(line: 435, column: 2, scope: !12492)
!12499 = !DILocation(line: 445, column: 2, scope: !12492)
!12500 = distinct !DISubprogram(name: "bg_thread_main", scope: !1900, file: !1900, line: 277, type: !354, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1896, retainedNodes: !12501)
!12501 = !{!12502, !12503, !12504}
!12502 = !DILocalVariable(name: "unused1", arg: 1, scope: !12500, file: !1900, line: 277, type: !117)
!12503 = !DILocalVariable(name: "unused2", arg: 2, scope: !12500, file: !1900, line: 277, type: !117)
!12504 = !DILocalVariable(name: "unused3", arg: 3, scope: !12500, file: !1900, line: 277, type: !117)
!12505 = !DILocation(line: 0, scope: !12500)
!12506 = !DILocation(line: 291, column: 20, scope: !12500)
!12507 = !DILocation(line: 293, column: 2, scope: !12500)
!12508 = !DILocation(line: 297, column: 2, scope: !12500)
!12509 = !DILocation(line: 305, column: 2, scope: !12500)
!12510 = !DILocation(line: 307, column: 2, scope: !12500)
!12511 = !DILocation(line: 330, column: 8, scope: !12500)
!12512 = !DILocation(line: 333, column: 34, scope: !12500)
!12513 = !DILocation(line: 339, column: 1, scope: !12500)
!12514 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2156, file: !2156, line: 45, type: !12515, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12523)
!12515 = !DISubroutineType(types: !12516)
!12516 = !{null, !12517, !117}
!12517 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !220, line: 103, baseType: !12518)
!12518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12519, size: 32)
!12519 = !DISubroutineType(types: !12520)
!12520 = !{null, !12521, !117}
!12521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12522, size: 32)
!12522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2161)
!12523 = !{!12524, !12525}
!12524 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12514, file: !2156, line: 45, type: !12517)
!12525 = !DILocalVariable(name: "user_data", arg: 2, scope: !12514, file: !2156, line: 45, type: !117)
!12526 = !DILocation(line: 0, scope: !12514)
!12527 = !DILocation(line: 71, column: 1, scope: !12514)
!12528 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2156, file: !2156, line: 73, type: !12515, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12529)
!12529 = !{!12530, !12531}
!12530 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12528, file: !2156, line: 73, type: !12517)
!12531 = !DILocalVariable(name: "user_data", arg: 2, scope: !12528, file: !2156, line: 73, type: !117)
!12532 = !DILocation(line: 0, scope: !12528)
!12533 = !DILocation(line: 95, column: 1, scope: !12528)
!12534 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2156, file: !2156, line: 97, type: !7138, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !2101)
!12535 = !DILocation(line: 1031, column: 3, scope: !12536, inlinedAt: !12539)
!12536 = distinct !DISubprogram(name: "__get_IPSR", scope: !6311, file: !6311, line: 1027, type: !6398, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12537)
!12537 = !{!12538}
!12538 = !DILocalVariable(name: "result", scope: !12536, file: !6311, line: 1029, type: !156)
!12539 = distinct !DILocation(line: 48, column: 10, scope: !12540, inlinedAt: !12541)
!12540 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7137, file: !7137, line: 46, type: !7138, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !2101)
!12541 = distinct !DILocation(line: 99, column: 9, scope: !12534)
!12542 = !{i64 2854972}
!12543 = !DILocation(line: 0, scope: !12536, inlinedAt: !12539)
!12544 = !DILocation(line: 48, column: 9, scope: !12540, inlinedAt: !12541)
!12545 = !DILocation(line: 99, column: 2, scope: !12534)
!12546 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2156, file: !2156, line: 106, type: !365, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !2101)
!12547 = !DILocation(line: 108, column: 2, scope: !12546)
!12548 = !DILocation(line: 108, column: 17, scope: !12546)
!12549 = !DILocation(line: 108, column: 30, scope: !12546)
!12550 = !DILocation(line: 109, column: 1, scope: !12546)
!12551 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2156, file: !2156, line: 116, type: !365, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !2101)
!12552 = !DILocation(line: 118, column: 2, scope: !12551)
!12553 = !DILocation(line: 118, column: 17, scope: !12551)
!12554 = !DILocation(line: 118, column: 30, scope: !12551)
!12555 = !DILocation(line: 119, column: 1, scope: !12551)
!12556 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2156, file: !2156, line: 126, type: !7138, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !2101)
!12557 = !DILocation(line: 128, column: 10, scope: !12556)
!12558 = !DILocation(line: 128, column: 25, scope: !12556)
!12559 = !DILocation(line: 128, column: 38, scope: !12556)
!12560 = !DILocation(line: 128, column: 53, scope: !12556)
!12561 = !DILocation(line: 128, column: 2, scope: !12556)
!12562 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2156, file: !2156, line: 187, type: !12563, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12565)
!12563 = !DISubroutineType(types: !12564)
!12564 = !{!118, !2160, !133}
!12565 = !{!12566, !12567}
!12566 = !DILocalVariable(name: "thread", arg: 1, scope: !12562, file: !2156, line: 187, type: !2160)
!12567 = !DILocalVariable(name: "value", arg: 2, scope: !12562, file: !2156, line: 187, type: !133)
!12568 = !DILocation(line: 0, scope: !12562)
!12569 = !DILocation(line: 206, column: 2, scope: !12562)
!12570 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2156, file: !2156, line: 238, type: !12571, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12573)
!12571 = !DISubroutineType(types: !12572)
!12572 = !{!133, !2160}
!12573 = !{!12574}
!12574 = !DILocalVariable(name: "thread", arg: 1, scope: !12570, file: !2156, line: 238, type: !2160)
!12575 = !DILocation(line: 0, scope: !12570)
!12576 = !DILocation(line: 244, column: 2, scope: !12570)
!12577 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2156, file: !2156, line: 248, type: !12578, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12580)
!12578 = !DISubroutineType(types: !12579)
!12579 = !{!118, !2159, !1239, !315}
!12580 = !{!12581, !12582, !12583}
!12581 = !DILocalVariable(name: "thread", arg: 1, scope: !12577, file: !2156, line: 248, type: !2159)
!12582 = !DILocalVariable(name: "buf", arg: 2, scope: !12577, file: !2156, line: 248, type: !1239)
!12583 = !DILocalVariable(name: "size", arg: 3, scope: !12577, file: !2156, line: 248, type: !315)
!12584 = !DILocation(line: 0, scope: !12577)
!12585 = !DILocation(line: 257, column: 2, scope: !12577)
!12586 = !DILocation(line: 0, scope: !2155)
!12587 = !DILocation(line: 281, column: 11, scope: !12588)
!12588 = distinct !DILexicalBlock(scope: !2155, file: !2156, line: 281, column: 6)
!12589 = !DILocation(line: 281, column: 20, scope: !12588)
!12590 = !DILocation(line: 275, column: 45, scope: !2155)
!12591 = !DILocation(line: 285, column: 10, scope: !2155)
!12592 = !DILocation(line: 0, scope: !2278)
!12593 = !DILocation(line: 293, column: 39, scope: !12594)
!12594 = distinct !DILexicalBlock(scope: !2278, file: !2156, line: 293, column: 2)
!12595 = !DILocation(line: 293, column: 2, scope: !2278)
!12596 = !DILocation(line: 273, column: 14, scope: !2155)
!12597 = !DILocation(line: 309, column: 2, scope: !2155)
!12598 = !DILocation(line: 309, column: 11, scope: !2155)
!12599 = !DILocation(line: 311, column: 2, scope: !2155)
!12600 = !DILocation(line: 293, column: 26, scope: !12594)
!12601 = !DILocation(line: 294, column: 9, scope: !12602)
!12602 = distinct !DILexicalBlock(scope: !12594, file: !2156, line: 293, column: 54)
!12603 = !DILocation(line: 295, column: 21, scope: !12604)
!12604 = distinct !DILexicalBlock(scope: !12602, file: !2156, line: 295, column: 7)
!12605 = !DILocation(line: 295, column: 28, scope: !12604)
!12606 = !DILocation(line: 295, column: 7, scope: !12602)
!12607 = !DILocation(line: 299, column: 25, scope: !12602)
!12608 = !DILocation(line: 299, column: 41, scope: !12602)
!12609 = !DILocation(line: 300, column: 7, scope: !12602)
!12610 = !DILocation(line: 300, column: 26, scope: !12602)
!12611 = !DILocation(line: 299, column: 10, scope: !12602)
!12612 = !DILocation(line: 299, column: 7, scope: !12602)
!12613 = !DILocation(line: 302, column: 16, scope: !12602)
!12614 = !DILocation(line: 304, column: 20, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12602, file: !2156, line: 304, column: 7)
!12616 = !DILocation(line: 304, column: 7, scope: !12602)
!12617 = !DILocation(line: 305, column: 26, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12615, file: !2156, line: 304, column: 26)
!12619 = !DILocation(line: 305, column: 42, scope: !12618)
!12620 = !DILocation(line: 305, column: 11, scope: !12618)
!12621 = !DILocation(line: 305, column: 8, scope: !12618)
!12622 = !DILocation(line: 306, column: 3, scope: !12618)
!12623 = !DILocation(line: 293, column: 50, scope: !12594)
!12624 = !DILocation(line: 312, column: 1, scope: !2155)
!12625 = distinct !DISubprogram(name: "copy_bytes", scope: !2156, file: !2156, line: 261, type: !12626, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12628)
!12626 = !DISubroutineType(types: !12627)
!12627 = !{!315, !1239, !315, !133, !315}
!12628 = !{!12629, !12630, !12631, !12632, !12633}
!12629 = !DILocalVariable(name: "dest", arg: 1, scope: !12625, file: !2156, line: 261, type: !1239)
!12630 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12625, file: !2156, line: 261, type: !315)
!12631 = !DILocalVariable(name: "src", arg: 3, scope: !12625, file: !2156, line: 261, type: !133)
!12632 = !DILocalVariable(name: "src_size", arg: 4, scope: !12625, file: !2156, line: 261, type: !315)
!12633 = !DILocalVariable(name: "bytes_to_copy", scope: !12625, file: !2156, line: 263, type: !315)
!12634 = !DILocation(line: 0, scope: !12625)
!12635 = !DILocation(line: 265, column: 18, scope: !12625)
!12636 = !DILocation(line: 266, column: 2, scope: !12625)
!12637 = !DILocation(line: 268, column: 2, scope: !12625)
!12638 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2156, file: !2156, line: 383, type: !12639, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12641)
!12639 = !DISubroutineType(types: !12640)
!12640 = !{null, !2160}
!12641 = !{!12642}
!12642 = !DILocalVariable(name: "thread", arg: 1, scope: !12638, file: !2156, line: 383, type: !2160)
!12643 = !DILocation(line: 0, scope: !12638)
!12644 = !DILocation(line: 387, column: 2, scope: !12638)
!12645 = !DILocation(line: 388, column: 1, scope: !12638)
!12646 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2156, file: !2156, line: 528, type: !12647, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12654)
!12647 = !DISubroutineType(types: !12648)
!12648 = !{!1239, !2160, !12649, !315, !352, !117, !117, !117, !118, !156, !133}
!12649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12650, size: 32)
!12650 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !345, line: 44, baseType: !12651)
!12651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !347, line: 47, size: 8, elements: !12652)
!12652 = !{!12653}
!12653 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12651, file: !347, line: 48, baseType: !135, size: 8)
!12654 = !{!12655, !12656, !12657, !12658, !12659, !12660, !12661, !12662, !12663, !12664, !12665}
!12655 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12646, file: !2156, line: 528, type: !2160)
!12656 = !DILocalVariable(name: "stack", arg: 2, scope: !12646, file: !2156, line: 529, type: !12649)
!12657 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12646, file: !2156, line: 529, type: !315)
!12658 = !DILocalVariable(name: "entry", arg: 4, scope: !12646, file: !2156, line: 530, type: !352)
!12659 = !DILocalVariable(name: "p1", arg: 5, scope: !12646, file: !2156, line: 531, type: !117)
!12660 = !DILocalVariable(name: "p2", arg: 6, scope: !12646, file: !2156, line: 531, type: !117)
!12661 = !DILocalVariable(name: "p3", arg: 7, scope: !12646, file: !2156, line: 531, type: !117)
!12662 = !DILocalVariable(name: "prio", arg: 8, scope: !12646, file: !2156, line: 532, type: !118)
!12663 = !DILocalVariable(name: "options", arg: 9, scope: !12646, file: !2156, line: 532, type: !156)
!12664 = !DILocalVariable(name: "name", arg: 10, scope: !12646, file: !2156, line: 532, type: !133)
!12665 = !DILocalVariable(name: "stack_ptr", scope: !12646, file: !2156, line: 534, type: !1239)
!12666 = !DILocation(line: 0, scope: !12646)
!12667 = !DILocation(line: 536, column: 2, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12669, file: !2156, line: 536, column: 2)
!12669 = distinct !DILexicalBlock(scope: !12670, file: !2156, line: 536, column: 2)
!12670 = distinct !DILexicalBlock(scope: !12646, file: !2156, line: 536, column: 2)
!12671 = !DILocation(line: 536, column: 2, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12668, file: !2156, line: 536, column: 2)
!12673 = !DILocation(line: 550, column: 28, scope: !12646)
!12674 = !DILocation(line: 550, column: 2, scope: !12646)
!12675 = !DILocation(line: 553, column: 34, scope: !12646)
!12676 = !DILocation(line: 553, column: 2, scope: !12646)
!12677 = !DILocation(line: 554, column: 14, scope: !12646)
!12678 = !DILocation(line: 564, column: 2, scope: !12646)
!12679 = !DILocation(line: 567, column: 14, scope: !12646)
!12680 = !DILocation(line: 567, column: 24, scope: !12646)
!12681 = !DILocation(line: 612, column: 7, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12646, file: !2156, line: 612, column: 6)
!12683 = !DILocation(line: 612, column: 6, scope: !12646)
!12684 = !DILocation(line: 627, column: 40, scope: !12646)
!12685 = !DILocation(line: 637, column: 2, scope: !12646)
!12686 = !DILocation(line: 613, column: 15, scope: !12687)
!12687 = distinct !DILexicalBlock(scope: !12682, file: !2156, line: 612, column: 17)
!12688 = !DILocation(line: 613, column: 29, scope: !12687)
!12689 = !DILocation(line: 638, column: 1, scope: !12646)
!12690 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12360, file: !12360, line: 78, type: !12691, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12693)
!12691 = !DISubroutineType(types: !12692)
!12692 = !{!146, !117}
!12693 = !{!12694}
!12694 = !DILocalVariable(name: "entry_point", arg: 1, scope: !12690, file: !12360, line: 78, type: !117)
!12695 = !DILocation(line: 0, scope: !12690)
!12696 = !DILocation(line: 80, column: 21, scope: !12690)
!12697 = !DILocation(line: 80, column: 2, scope: !12690)
!12698 = distinct !DISubprogram(name: "z_waitq_init", scope: !12699, file: !12699, line: 47, type: !12700, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12702)
!12699 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12700 = !DISubroutineType(types: !12701)
!12701 = !{null, !2191}
!12702 = !{!12703}
!12703 = !DILocalVariable(name: "w", arg: 1, scope: !12698, file: !12699, line: 47, type: !2191)
!12704 = !DILocation(line: 0, scope: !12698)
!12705 = !DILocation(line: 49, column: 21, scope: !12698)
!12706 = !DILocation(line: 49, column: 2, scope: !12698)
!12707 = !DILocation(line: 50, column: 1, scope: !12698)
!12708 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2156, file: !2156, line: 791, type: !12709, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12712)
!12709 = !DISubroutineType(types: !12710)
!12710 = !{null, !12711, !118, !156, !32}
!12711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 32)
!12712 = !{!12713, !12714, !12715, !12716}
!12713 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12708, file: !2156, line: 791, type: !12711)
!12714 = !DILocalVariable(name: "priority", arg: 2, scope: !12708, file: !2156, line: 791, type: !118)
!12715 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12708, file: !2156, line: 792, type: !156)
!12716 = !DILocalVariable(name: "options", arg: 4, scope: !12708, file: !2156, line: 792, type: !32)
!12717 = !DILocation(line: 0, scope: !12708)
!12718 = !DILocation(line: 795, column: 15, scope: !12708)
!12719 = !DILocation(line: 795, column: 25, scope: !12708)
!12720 = !DILocation(line: 796, column: 30, scope: !12708)
!12721 = !DILocation(line: 796, column: 15, scope: !12708)
!12722 = !DILocation(line: 796, column: 28, scope: !12708)
!12723 = !DILocation(line: 797, column: 30, scope: !12708)
!12724 = !DILocation(line: 797, column: 15, scope: !12708)
!12725 = !DILocation(line: 797, column: 28, scope: !12708)
!12726 = !DILocation(line: 799, column: 22, scope: !12708)
!12727 = !DILocation(line: 799, column: 15, scope: !12708)
!12728 = !DILocation(line: 799, column: 20, scope: !12708)
!12729 = !DILocation(line: 801, column: 15, scope: !12708)
!12730 = !DILocation(line: 801, column: 28, scope: !12708)
!12731 = !DILocation(line: 814, column: 2, scope: !12708)
!12732 = !DILocation(line: 815, column: 1, scope: !12708)
!12733 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2156, file: !2156, line: 449, type: !12734, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12736)
!12734 = !DISubroutineType(types: !12735)
!12735 = !{!1239, !2160, !12649, !315}
!12736 = !{!12737, !12738, !12739, !12740, !12741, !12742, !12743, !12744}
!12737 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12733, file: !2156, line: 449, type: !2160)
!12738 = !DILocalVariable(name: "stack", arg: 2, scope: !12733, file: !2156, line: 450, type: !12649)
!12739 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12733, file: !2156, line: 450, type: !315)
!12740 = !DILocalVariable(name: "stack_obj_size", scope: !12733, file: !2156, line: 452, type: !315)
!12741 = !DILocalVariable(name: "stack_buf_size", scope: !12733, file: !2156, line: 452, type: !315)
!12742 = !DILocalVariable(name: "stack_ptr", scope: !12733, file: !2156, line: 453, type: !1239)
!12743 = !DILocalVariable(name: "stack_buf_start", scope: !12733, file: !2156, line: 453, type: !1239)
!12744 = !DILocalVariable(name: "delta", scope: !12733, file: !2156, line: 454, type: !315)
!12745 = !DILocation(line: 0, scope: !12733)
!12746 = !DILocation(line: 465, column: 20, scope: !12747)
!12747 = distinct !DILexicalBlock(scope: !12733, file: !2156, line: 463, column: 2)
!12748 = !DILocation(line: 466, column: 21, scope: !12747)
!12749 = !DILocation(line: 473, column: 28, scope: !12733)
!12750 = !DILocation(line: 514, column: 33, scope: !12733)
!12751 = !DILocation(line: 514, column: 25, scope: !12733)
!12752 = !DILocation(line: 514, column: 31, scope: !12733)
!12753 = !DILocation(line: 515, column: 25, scope: !12733)
!12754 = !DILocation(line: 515, column: 30, scope: !12733)
!12755 = !DILocation(line: 516, column: 25, scope: !12733)
!12756 = !DILocation(line: 516, column: 31, scope: !12733)
!12757 = !DILocation(line: 520, column: 2, scope: !12733)
!12758 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !347, file: !347, line: 331, type: !12759, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12761)
!12759 = !DISubroutineType(types: !12760)
!12760 = !{!1239, !12649}
!12761 = !{!12762}
!12762 = !DILocalVariable(name: "sym", arg: 1, scope: !12758, file: !347, line: 331, type: !12649)
!12763 = !DILocation(line: 0, scope: !12758)
!12764 = !DILocation(line: 333, column: 21, scope: !12758)
!12765 = !DILocation(line: 333, column: 2, scope: !12758)
!12766 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12767, file: !12767, line: 40, type: !12768, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12770)
!12767 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12768 = !DISubroutineType(types: !12769)
!12769 = !{null, !12711}
!12770 = !{!12771}
!12771 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12766, file: !12767, line: 40, type: !12711)
!12772 = !DILocation(line: 0, scope: !12766)
!12773 = !DILocation(line: 42, column: 31, scope: !12766)
!12774 = !DILocation(line: 42, column: 2, scope: !12766)
!12775 = !DILocation(line: 43, column: 1, scope: !12766)
!12776 = distinct !DISubprogram(name: "z_init_timeout", scope: !12767, file: !12767, line: 25, type: !2217, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12777)
!12777 = !{!12778}
!12778 = !DILocalVariable(name: "to", arg: 1, scope: !12776, file: !12767, line: 25, type: !2219)
!12779 = !DILocation(line: 0, scope: !12776)
!12780 = !DILocation(line: 27, column: 22, scope: !12776)
!12781 = !DILocation(line: 27, column: 2, scope: !12776)
!12782 = !DILocation(line: 28, column: 1, scope: !12776)
!12783 = distinct !DISubprogram(name: "sys_dnode_init", scope: !235, file: !235, line: 211, type: !12784, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12786)
!12784 = !DISubroutineType(types: !12785)
!12785 = !{null, !2265}
!12786 = !{!12787}
!12787 = !DILocalVariable(name: "node", arg: 1, scope: !12783, file: !235, line: 211, type: !2265)
!12788 = !DILocation(line: 0, scope: !12783)
!12789 = !DILocation(line: 213, column: 8, scope: !12783)
!12790 = !DILocation(line: 213, column: 13, scope: !12783)
!12791 = !DILocation(line: 214, column: 8, scope: !12783)
!12792 = !DILocation(line: 214, column: 13, scope: !12783)
!12793 = !DILocation(line: 215, column: 1, scope: !12783)
!12794 = distinct !DISubprogram(name: "sys_dlist_init", scope: !235, file: !235, line: 197, type: !12795, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12798)
!12795 = !DISubroutineType(types: !12796)
!12796 = !{null, !12797}
!12797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 32)
!12798 = !{!12799}
!12799 = !DILocalVariable(name: "list", arg: 1, scope: !12794, file: !235, line: 197, type: !12797)
!12800 = !DILocation(line: 0, scope: !12794)
!12801 = !DILocation(line: 199, column: 8, scope: !12794)
!12802 = !DILocation(line: 199, column: 13, scope: !12794)
!12803 = !DILocation(line: 200, column: 8, scope: !12794)
!12804 = !DILocation(line: 200, column: 13, scope: !12794)
!12805 = !DILocation(line: 201, column: 1, scope: !12794)
!12806 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2156, file: !2156, line: 641, type: !12807, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12813)
!12807 = !DISubroutineType(types: !12808)
!12808 = !{!2159, !2160, !12649, !315, !352, !117, !117, !117, !118, !156, !12809}
!12809 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !12810)
!12810 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !12811)
!12811 = !{!12812}
!12812 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12810, file: !114, line: 66, baseType: !113, size: 64)
!12813 = !{!12814, !12815, !12816, !12817, !12818, !12819, !12820, !12821, !12822, !12823}
!12814 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12806, file: !2156, line: 641, type: !2160)
!12815 = !DILocalVariable(name: "stack", arg: 2, scope: !12806, file: !2156, line: 642, type: !12649)
!12816 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12806, file: !2156, line: 643, type: !315)
!12817 = !DILocalVariable(name: "entry", arg: 4, scope: !12806, file: !2156, line: 643, type: !352)
!12818 = !DILocalVariable(name: "p1", arg: 5, scope: !12806, file: !2156, line: 644, type: !117)
!12819 = !DILocalVariable(name: "p2", arg: 6, scope: !12806, file: !2156, line: 644, type: !117)
!12820 = !DILocalVariable(name: "p3", arg: 7, scope: !12806, file: !2156, line: 644, type: !117)
!12821 = !DILocalVariable(name: "prio", arg: 8, scope: !12806, file: !2156, line: 645, type: !118)
!12822 = !DILocalVariable(name: "options", arg: 9, scope: !12806, file: !2156, line: 645, type: !156)
!12823 = !DILocalVariable(name: "delay", arg: 10, scope: !12806, file: !2156, line: 645, type: !12809)
!12824 = !DILocation(line: 0, scope: !12806)
!12825 = !DILocation(line: 1031, column: 3, scope: !12536, inlinedAt: !12826)
!12826 = distinct !DILocation(line: 48, column: 10, scope: !12540, inlinedAt: !12827)
!12827 = distinct !DILocation(line: 647, column: 2, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12829, file: !2156, line: 647, column: 2)
!12829 = distinct !DILexicalBlock(scope: !12806, file: !2156, line: 647, column: 2)
!12830 = !DILocation(line: 0, scope: !12536, inlinedAt: !12826)
!12831 = !DILocation(line: 48, column: 9, scope: !12540, inlinedAt: !12827)
!12832 = !DILocation(line: 647, column: 2, scope: !12829)
!12833 = !DILocation(line: 647, column: 2, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12828, file: !2156, line: 647, column: 2)
!12835 = !DILocation(line: 649, column: 2, scope: !12806)
!12836 = !DILocation(line: 652, column: 7, scope: !12837)
!12837 = distinct !DILexicalBlock(scope: !12806, file: !2156, line: 652, column: 6)
!12838 = !DILocation(line: 652, column: 6, scope: !12806)
!12839 = !DILocation(line: 653, column: 3, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12837, file: !2156, line: 652, column: 39)
!12841 = !DILocation(line: 654, column: 2, scope: !12840)
!12842 = !DILocation(line: 656, column: 2, scope: !12806)
!12843 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2156, file: !2156, line: 401, type: !12844, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12846)
!12844 = !DISubroutineType(types: !12845)
!12845 = !{null, !2160, !12809}
!12846 = !{!12847, !12848}
!12847 = !DILocalVariable(name: "thread", arg: 1, scope: !12843, file: !2156, line: 401, type: !2160)
!12848 = !DILocalVariable(name: "delay", arg: 2, scope: !12843, file: !2156, line: 401, type: !12809)
!12849 = !DILocation(line: 0, scope: !12843)
!12850 = !DILocation(line: 404, column: 6, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !12843, file: !2156, line: 404, column: 6)
!12852 = !DILocation(line: 404, column: 6, scope: !12843)
!12853 = !DILocation(line: 405, column: 3, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12851, file: !2156, line: 404, column: 38)
!12855 = !DILocation(line: 406, column: 2, scope: !12854)
!12856 = !DILocation(line: 407, column: 3, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12851, file: !2156, line: 406, column: 9)
!12858 = !DILocation(line: 413, column: 1, scope: !12843)
!12859 = distinct !DISubprogram(name: "k_thread_start", scope: !3450, file: !3450, line: 205, type: !12860, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12862)
!12860 = !DISubroutineType(types: !12861)
!12861 = !{null, !2159}
!12862 = !{!12863}
!12863 = !DILocalVariable(name: "thread", arg: 1, scope: !12859, file: !3450, line: 205, type: !2159)
!12864 = !DILocation(line: 0, scope: !12859)
!12865 = !DILocation(line: 214, column: 2, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12859, file: !3450, line: 214, column: 2)
!12867 = !{i64 2154096933}
!12868 = !DILocation(line: 215, column: 2, scope: !12859)
!12869 = !DILocation(line: 216, column: 1, scope: !12859)
!12870 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12767, file: !12767, line: 47, type: !12844, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12871)
!12871 = !{!12872, !12873}
!12872 = !DILocalVariable(name: "thread", arg: 1, scope: !12870, file: !12767, line: 47, type: !2160)
!12873 = !DILocalVariable(name: "ticks", arg: 2, scope: !12870, file: !12767, line: 47, type: !12809)
!12874 = !DILocation(line: 0, scope: !12870)
!12875 = !DILocation(line: 49, column: 30, scope: !12870)
!12876 = !DILocation(line: 49, column: 2, scope: !12870)
!12877 = !DILocation(line: 50, column: 1, scope: !12870)
!12878 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2156, file: !2156, line: 748, type: !365, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12879)
!12879 = !{!12880, !12897}
!12880 = !DILocalVariable(name: "thread_data", scope: !12881, file: !2156, line: 750, type: !12882)
!12881 = distinct !DILexicalBlock(scope: !12878, file: !2156, line: 750, column: 2)
!12882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12883, size: 32)
!12883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !220, line: 620, size: 384, elements: !12884)
!12884 = !{!12885, !12886, !12887, !12888, !12889, !12890, !12891, !12892, !12893, !12894, !12895, !12896}
!12885 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12883, file: !220, line: 621, baseType: !2160, size: 32)
!12886 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12883, file: !220, line: 622, baseType: !12649, size: 32, offset: 32)
!12887 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12883, file: !220, line: 623, baseType: !32, size: 32, offset: 64)
!12888 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12883, file: !220, line: 624, baseType: !352, size: 32, offset: 96)
!12889 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12883, file: !220, line: 625, baseType: !117, size: 32, offset: 128)
!12890 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12883, file: !220, line: 626, baseType: !117, size: 32, offset: 160)
!12891 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12883, file: !220, line: 627, baseType: !117, size: 32, offset: 192)
!12892 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12883, file: !220, line: 628, baseType: !118, size: 32, offset: 224)
!12893 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12883, file: !220, line: 629, baseType: !156, size: 32, offset: 256)
!12894 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12883, file: !220, line: 630, baseType: !362, size: 32, offset: 288)
!12895 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12883, file: !220, line: 631, baseType: !364, size: 32, offset: 320)
!12896 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12883, file: !220, line: 632, baseType: !133, size: 32, offset: 352)
!12897 = !DILocalVariable(name: "thread_data", scope: !12898, file: !2156, line: 781, type: !12882)
!12898 = distinct !DILexicalBlock(scope: !12878, file: !2156, line: 781, column: 2)
!12899 = !DILocation(line: 0, scope: !12881)
!12900 = !DILocation(line: 750, column: 2, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12902, file: !2156, line: 750, column: 2)
!12902 = distinct !DILexicalBlock(scope: !12903, file: !2156, line: 750, column: 2)
!12903 = distinct !DILexicalBlock(scope: !12881, file: !2156, line: 750, column: 2)
!12904 = !DILocation(line: 750, column: 2, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12906, file: !2156, line: 750, column: 2)
!12906 = distinct !DILexicalBlock(scope: !12901, file: !2156, line: 750, column: 2)
!12907 = !DILocation(line: 750, column: 2, scope: !12902)
!12908 = !DILocation(line: 750, column: 2, scope: !12881)
!12909 = !DILocation(line: 780, column: 2, scope: !12878)
!12910 = !DILocation(line: 0, scope: !12898)
!12911 = !DILocation(line: 781, column: 2, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12913, file: !2156, line: 781, column: 2)
!12913 = distinct !DILexicalBlock(scope: !12914, file: !2156, line: 781, column: 2)
!12914 = distinct !DILexicalBlock(scope: !12898, file: !2156, line: 781, column: 2)
!12915 = !DILocation(line: 752, column: 17, scope: !12916)
!12916 = distinct !DILexicalBlock(scope: !12903, file: !2156, line: 750, column: 38)
!12917 = !DILocation(line: 753, column: 17, scope: !12916)
!12918 = !DILocation(line: 754, column: 17, scope: !12916)
!12919 = !DILocation(line: 755, column: 17, scope: !12916)
!12920 = !DILocation(line: 756, column: 17, scope: !12916)
!12921 = !DILocation(line: 757, column: 17, scope: !12916)
!12922 = !DILocation(line: 758, column: 17, scope: !12916)
!12923 = !DILocation(line: 759, column: 17, scope: !12916)
!12924 = !DILocation(line: 760, column: 17, scope: !12916)
!12925 = !DILocation(line: 751, column: 3, scope: !12916)
!12926 = !DILocation(line: 763, column: 16, scope: !12916)
!12927 = !DILocation(line: 763, column: 29, scope: !12916)
!12928 = !DILocation(line: 763, column: 39, scope: !12916)
!12929 = !DILocation(line: 750, column: 2, scope: !12903)
!12930 = !DILocation(line: 750, column: 2, scope: !12906)
!12931 = distinct !{!12931, !12908, !12932}
!12932 = !DILocation(line: 764, column: 2, scope: !12881)
!12933 = !DILocation(line: 781, column: 2, scope: !12934)
!12934 = distinct !DILexicalBlock(scope: !12935, file: !2156, line: 781, column: 2)
!12935 = distinct !DILexicalBlock(scope: !12912, file: !2156, line: 781, column: 2)
!12936 = !DILocation(line: 781, column: 2, scope: !12913)
!12937 = !DILocation(line: 781, column: 2, scope: !12898)
!12938 = !DILocation(line: 787, column: 2, scope: !12878)
!12939 = !DILocation(line: 788, column: 1, scope: !12878)
!12940 = !DILocation(line: 782, column: 20, scope: !12941)
!12941 = distinct !DILexicalBlock(scope: !12942, file: !2156, line: 782, column: 7)
!12942 = distinct !DILexicalBlock(scope: !12914, file: !2156, line: 781, column: 38)
!12943 = !DILocation(line: 782, column: 31, scope: !12941)
!12944 = !DILocation(line: 782, column: 7, scope: !12942)
!12945 = !DILocation(line: 783, column: 37, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12941, file: !2156, line: 782, column: 51)
!12947 = !DILocation(line: 784, column: 10, scope: !12946)
!12948 = !DILocation(line: 783, column: 4, scope: !12946)
!12949 = !DILocation(line: 785, column: 3, scope: !12946)
!12950 = !DILocation(line: 781, column: 2, scope: !12914)
!12951 = !DILocation(line: 781, column: 2, scope: !12935)
!12952 = distinct !{!12952, !12937, !12953}
!12953 = !DILocation(line: 786, column: 2, scope: !12898)
!12954 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3417, file: !3417, line: 403, type: !3418, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12955)
!12955 = !{!12956}
!12956 = !DILocalVariable(name: "t", arg: 1, scope: !12954, file: !3417, line: 403, type: !213)
!12957 = !DILocation(line: 0, scope: !12954)
!12958 = !DILocalVariable(name: "t", arg: 1, scope: !12959, file: !3417, line: 102, type: !213)
!12959 = distinct !DISubprogram(name: "z_tmcvt", scope: !3417, file: !3417, line: 102, type: !3425, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12960)
!12960 = !{!12958, !12961, !12962, !12963, !12964, !12965, !12966, !12967, !12968, !12969, !12970}
!12961 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12959, file: !3417, line: 102, type: !156)
!12962 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12959, file: !3417, line: 103, type: !156)
!12963 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12959, file: !3417, line: 103, type: !146)
!12964 = !DILocalVariable(name: "result32", arg: 5, scope: !12959, file: !3417, line: 104, type: !146)
!12965 = !DILocalVariable(name: "round_up", arg: 6, scope: !12959, file: !3417, line: 104, type: !146)
!12966 = !DILocalVariable(name: "round_off", arg: 7, scope: !12959, file: !3417, line: 105, type: !146)
!12967 = !DILocalVariable(name: "mul_ratio", scope: !12959, file: !3417, line: 107, type: !146)
!12968 = !DILocalVariable(name: "div_ratio", scope: !12959, file: !3417, line: 109, type: !146)
!12969 = !DILocalVariable(name: "off", scope: !12959, file: !3417, line: 116, type: !213)
!12970 = !DILocalVariable(name: "rdivisor", scope: !12971, file: !3417, line: 119, type: !156)
!12971 = distinct !DILexicalBlock(scope: !12972, file: !3417, line: 118, column: 18)
!12972 = distinct !DILexicalBlock(scope: !12959, file: !3417, line: 118, column: 6)
!12973 = !DILocation(line: 0, scope: !12959, inlinedAt: !12974)
!12974 = distinct !DILocation(line: 406, column: 9, scope: !12954)
!12975 = !DILocation(line: 145, column: 13, scope: !12976, inlinedAt: !12974)
!12976 = distinct !DILexicalBlock(scope: !12977, file: !3417, line: 144, column: 10)
!12977 = distinct !DILexicalBlock(scope: !12978, file: !3417, line: 142, column: 7)
!12978 = distinct !DILexicalBlock(scope: !12979, file: !3417, line: 141, column: 24)
!12979 = distinct !DILexicalBlock(scope: !12980, file: !3417, line: 141, column: 13)
!12980 = distinct !DILexicalBlock(scope: !12959, file: !3417, line: 134, column: 6)
!12981 = !DILocation(line: 406, column: 2, scope: !12954)
!12982 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2156, file: !2156, line: 817, type: !3833, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12983)
!12983 = !{!12984, !12985, !12986, !12987}
!12984 = !DILocalVariable(name: "entry", arg: 1, scope: !12982, file: !2156, line: 817, type: !352)
!12985 = !DILocalVariable(name: "p1", arg: 2, scope: !12982, file: !2156, line: 818, type: !117)
!12986 = !DILocalVariable(name: "p2", arg: 3, scope: !12982, file: !2156, line: 818, type: !117)
!12987 = !DILocalVariable(name: "p3", arg: 4, scope: !12982, file: !2156, line: 818, type: !117)
!12988 = !DILocation(line: 0, scope: !12982)
!12989 = !DILocation(line: 822, column: 2, scope: !12982)
!12990 = !DILocation(line: 822, column: 17, scope: !12982)
!12991 = !DILocation(line: 822, column: 30, scope: !12982)
!12992 = !DILocation(line: 823, column: 2, scope: !12982)
!12993 = !DILocation(line: 845, column: 2, scope: !12982)
!12994 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2156, file: !2156, line: 853, type: !12995, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !12998)
!12995 = !DISubroutineType(types: !12996)
!12996 = !{!146, !12997}
!12997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 32)
!12998 = !{!12999, !13000}
!12999 = !DILocalVariable(name: "l", arg: 1, scope: !12994, file: !2156, line: 853, type: !12997)
!13000 = !DILocalVariable(name: "thread_cpu", scope: !12994, file: !2156, line: 855, type: !22)
!13001 = !DILocation(line: 0, scope: !12994)
!13002 = !DILocation(line: 855, column: 28, scope: !12994)
!13003 = !DILocation(line: 857, column: 17, scope: !13004)
!13004 = distinct !DILexicalBlock(scope: !12994, file: !2156, line: 857, column: 6)
!13005 = !DILocation(line: 857, column: 6, scope: !12994)
!13006 = !DILocation(line: 858, column: 19, scope: !13007)
!13007 = distinct !DILexicalBlock(scope: !13008, file: !2156, line: 858, column: 7)
!13008 = distinct !DILexicalBlock(scope: !13004, file: !2156, line: 857, column: 24)
!13009 = !DILocation(line: 858, column: 42, scope: !13007)
!13010 = !DILocation(line: 858, column: 28, scope: !13007)
!13011 = !DILocation(line: 858, column: 25, scope: !13007)
!13012 = !DILocation(line: 858, column: 7, scope: !13008)
!13013 = !DILocation(line: 862, column: 2, scope: !12994)
!13014 = !DILocation(line: 863, column: 1, scope: !12994)
!13015 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2156, file: !2156, line: 865, type: !12995, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !13016)
!13016 = !{!13017}
!13017 = !DILocalVariable(name: "l", arg: 1, scope: !13015, file: !2156, line: 865, type: !12997)
!13018 = !DILocation(line: 0, scope: !13015)
!13019 = !DILocation(line: 867, column: 9, scope: !13020)
!13020 = distinct !DILexicalBlock(scope: !13015, file: !2156, line: 867, column: 6)
!13021 = !DILocation(line: 867, column: 38, scope: !13020)
!13022 = !DILocation(line: 867, column: 24, scope: !13020)
!13023 = !DILocation(line: 867, column: 54, scope: !13020)
!13024 = !DILocation(line: 867, column: 43, scope: !13020)
!13025 = !DILocation(line: 867, column: 41, scope: !13020)
!13026 = !DILocation(line: 867, column: 20, scope: !13020)
!13027 = !DILocation(line: 867, column: 6, scope: !13015)
!13028 = !DILocation(line: 870, column: 16, scope: !13015)
!13029 = !DILocation(line: 871, column: 2, scope: !13015)
!13030 = !DILocation(line: 872, column: 1, scope: !13015)
!13031 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2156, file: !2156, line: 874, type: !13032, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !13034)
!13032 = !DISubroutineType(types: !13033)
!13033 = !{null, !12997}
!13034 = !{!13035}
!13035 = !DILocalVariable(name: "l", arg: 1, scope: !13031, file: !2156, line: 874, type: !12997)
!13036 = !DILocation(line: 0, scope: !13031)
!13037 = !DILocation(line: 876, column: 32, scope: !13031)
!13038 = !DILocation(line: 876, column: 18, scope: !13031)
!13039 = !DILocation(line: 876, column: 48, scope: !13031)
!13040 = !DILocation(line: 876, column: 37, scope: !13031)
!13041 = !DILocation(line: 876, column: 35, scope: !13031)
!13042 = !DILocation(line: 876, column: 5, scope: !13031)
!13043 = !DILocation(line: 876, column: 16, scope: !13031)
!13044 = !DILocation(line: 877, column: 1, scope: !13031)
!13045 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2156, file: !2156, line: 888, type: !13046, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !13048)
!13046 = !DISubroutineType(types: !13047)
!13047 = !{!118, !2160}
!13048 = !{!13049}
!13049 = !DILocalVariable(name: "thread", arg: 1, scope: !13045, file: !2156, line: 888, type: !2160)
!13050 = !DILocation(line: 0, scope: !13045)
!13051 = !DILocation(line: 893, column: 2, scope: !13045)
!13052 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2156, file: !2156, line: 897, type: !13053, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !13055)
!13053 = !DISubroutineType(types: !13054)
!13054 = !{!118, !2160, !32}
!13055 = !{!13056, !13057}
!13056 = !DILocalVariable(name: "thread", arg: 1, scope: !13052, file: !2156, line: 897, type: !2160)
!13057 = !DILocalVariable(name: "options", arg: 2, scope: !13052, file: !2156, line: 897, type: !32)
!13058 = !DILocation(line: 0, scope: !13052)
!13059 = !DILocation(line: 902, column: 2, scope: !13052)
!13060 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2156, file: !2156, line: 1072, type: !13061, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !13066)
!13061 = !DISubroutineType(types: !13062)
!13062 = !{!118, !2159, !13063}
!13063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13064, size: 32)
!13064 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !225, line: 234, baseType: !13065)
!13065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !225, line: 192, elements: !2101)
!13066 = !{!13067, !13068}
!13067 = !DILocalVariable(name: "thread", arg: 1, scope: !13060, file: !2156, line: 1072, type: !2159)
!13068 = !DILocalVariable(name: "stats", arg: 2, scope: !13060, file: !2156, line: 1073, type: !13063)
!13069 = !DILocation(line: 0, scope: !13060)
!13070 = !DILocation(line: 1075, column: 14, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13060, file: !2156, line: 1075, column: 6)
!13072 = !DILocation(line: 1075, column: 23, scope: !13071)
!13073 = !DILocation(line: 1086, column: 1, scope: !13060)
!13074 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2156, file: !2156, line: 1088, type: !13075, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2262, retainedNodes: !13077)
!13075 = !DISubroutineType(types: !13076)
!13076 = !{!118, !13063}
!13077 = !{!13078}
!13078 = !DILocalVariable(name: "stats", arg: 1, scope: !13074, file: !2156, line: 1088, type: !13063)
!13079 = !DILocation(line: 0, scope: !13074)
!13080 = !DILocation(line: 1094, column: 12, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13074, file: !2156, line: 1094, column: 6)
!13082 = !DILocation(line: 1120, column: 1, scope: !13074)
!13083 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13084, file: !13084, line: 20, type: !365, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !2101)
!13084 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13085 = !DILocation(line: 30, column: 2, scope: !13083)
!13086 = !DILocation(line: 31, column: 1, scope: !13083)
!13087 = distinct !DISubprogram(name: "idle", scope: !13084, file: !13084, line: 33, type: !354, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !13088)
!13088 = !{!13089, !13090, !13091}
!13089 = !DILocalVariable(name: "unused1", arg: 1, scope: !13087, file: !13084, line: 33, type: !117)
!13090 = !DILocalVariable(name: "unused2", arg: 2, scope: !13087, file: !13084, line: 33, type: !117)
!13091 = !DILocalVariable(name: "unused3", arg: 3, scope: !13087, file: !13084, line: 33, type: !117)
!13092 = !DILocation(line: 0, scope: !13087)
!13093 = !DILocation(line: 39, column: 2, scope: !13094)
!13094 = distinct !DILexicalBlock(scope: !13095, file: !13084, line: 39, column: 2)
!13095 = distinct !DILexicalBlock(scope: !13087, file: !13084, line: 39, column: 2)
!13096 = !DILocation(line: 39, column: 2, scope: !13095)
!13097 = !DILocation(line: 39, column: 2, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13094, file: !13084, line: 39, column: 2)
!13099 = !DILocation(line: 55, column: 2, scope: !13100, inlinedAt: !13104)
!13100 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6137, file: !6137, line: 42, type: !6138, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !13101)
!13101 = !{!13102, !13103}
!13102 = !DILocalVariable(name: "key", scope: !13100, file: !6137, line: 44, type: !32)
!13103 = !DILocalVariable(name: "tmp", scope: !13100, file: !6137, line: 53, type: !32)
!13104 = distinct !DILocation(line: 62, column: 10, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13087, file: !13084, line: 41, column: 15)
!13106 = !{i64 1950419}
!13107 = !DILocation(line: 0, scope: !13100, inlinedAt: !13104)
!13108 = !DILocation(line: 86, column: 3, scope: !13105)
!13109 = !DILocation(line: 41, column: 2, scope: !13087)
!13110 = distinct !{!13110, !13109, !13111}
!13111 = !DILocation(line: 105, column: 2, scope: !13087)
!13112 = distinct !DISubprogram(name: "k_cpu_idle", scope: !220, file: !220, line: 5627, type: !365, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !2101)
!13113 = !DILocation(line: 5629, column: 2, scope: !13112)
!13114 = !DILocation(line: 5630, column: 1, scope: !13112)
!13115 = !DISubprogram(name: "arch_cpu_idle", scope: !345, file: !345, line: 167, type: !365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2101)
!13116 = distinct !DISubprogram(name: "z_queue_node_peek", scope: !3131, file: !3131, line: 30, type: !13117, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13119)
!13117 = !DISubroutineType(types: !13118)
!13118 = !{!117, !3140, !146}
!13119 = !{!13120, !13121, !13122, !13123}
!13120 = !DILocalVariable(name: "node", arg: 1, scope: !13116, file: !3131, line: 30, type: !3140)
!13121 = !DILocalVariable(name: "needs_free", arg: 2, scope: !13116, file: !3131, line: 30, type: !146)
!13122 = !DILocalVariable(name: "ret", scope: !13116, file: !3131, line: 32, type: !117)
!13123 = !DILocalVariable(name: "anode", scope: !13124, file: !3131, line: 40, type: !3129)
!13124 = distinct !DILexicalBlock(scope: !13125, file: !3131, line: 34, column: 68)
!13125 = distinct !DILexicalBlock(scope: !13116, file: !3131, line: 34, column: 6)
!13126 = !DILocation(line: 0, scope: !13116)
!13127 = !DILocation(line: 34, column: 12, scope: !13125)
!13128 = !DILocation(line: 34, column: 21, scope: !13125)
!13129 = !DILocation(line: 34, column: 25, scope: !13125)
!13130 = !DILocation(line: 34, column: 52, scope: !13125)
!13131 = !DILocation(line: 34, column: 6, scope: !13116)
!13132 = !DILocation(line: 0, scope: !13124)
!13133 = !DILocation(line: 43, column: 16, scope: !13124)
!13134 = !DILocation(line: 44, column: 7, scope: !13124)
!13135 = !DILocation(line: 42, column: 11, scope: !13124)
!13136 = !DILocation(line: 45, column: 4, scope: !13137)
!13137 = distinct !DILexicalBlock(scope: !13138, file: !3131, line: 44, column: 19)
!13138 = distinct !DILexicalBlock(scope: !13124, file: !3131, line: 44, column: 7)
!13139 = !DILocation(line: 46, column: 3, scope: !13137)
!13140 = !DILocation(line: 52, column: 9, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13125, file: !3131, line: 47, column: 9)
!13142 = !DILocation(line: 0, scope: !13125)
!13143 = !DILocation(line: 55, column: 2, scope: !13116)
!13144 = distinct !DISubprogram(name: "sys_sfnode_flags_get", scope: !417, file: !417, line: 270, type: !13145, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13147)
!13145 = !DISubroutineType(types: !13146)
!13146 = !{!143, !3140}
!13147 = !{!13148}
!13148 = !DILocalVariable(name: "node", arg: 1, scope: !13144, file: !417, line: 270, type: !3140)
!13149 = !DILocation(line: 0, scope: !13144)
!13150 = !DILocation(line: 272, column: 15, scope: !13144)
!13151 = !DILocation(line: 272, column: 9, scope: !13144)
!13152 = !DILocation(line: 272, column: 2, scope: !13144)
!13153 = distinct !DISubprogram(name: "z_impl_k_queue_init", scope: !3131, file: !3131, line: 58, type: !13154, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13175)
!13154 = !DISubroutineType(types: !13155)
!13155 = !{null, !13156}
!13156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13157, size: 32)
!13157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !220, line: 1709, size: 160, elements: !13158)
!13158 = !{!13159, !13165, !13169}
!13159 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !13157, file: !220, line: 1710, baseType: !13160, size: 64)
!13160 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !417, line: 46, baseType: !13161)
!13161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !417, line: 41, size: 64, elements: !13162)
!13162 = !{!13163, !13164}
!13163 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13161, file: !417, line: 42, baseType: !3140, size: 32)
!13164 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13161, file: !417, line: 43, baseType: !3140, size: 32, offset: 32)
!13165 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13157, file: !220, line: 1711, baseType: !13166, size: 32, offset: 64)
!13166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !13167)
!13167 = !{!13168}
!13168 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13166, file: !334, line: 52, baseType: !22, size: 32)
!13169 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13157, file: !220, line: 1712, baseType: !13170, size: 64, offset: 96)
!13170 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !13171)
!13171 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !13172)
!13172 = !{!13173}
!13173 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13171, file: !261, line: 232, baseType: !13174, size: 64)
!13174 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !3143)
!13175 = !{!13176}
!13176 = !DILocalVariable(name: "queue", arg: 1, scope: !13153, file: !3131, line: 58, type: !13156)
!13177 = !DILocation(line: 0, scope: !13153)
!13178 = !DILocation(line: 60, column: 26, scope: !13153)
!13179 = !DILocation(line: 60, column: 2, scope: !13153)
!13180 = !DILocation(line: 61, column: 16, scope: !13153)
!13181 = !DILocation(line: 62, column: 23, scope: !13153)
!13182 = !DILocation(line: 62, column: 2, scope: !13153)
!13183 = !DILocation(line: 70, column: 1, scope: !13153)
!13184 = distinct !DISubprogram(name: "sys_sflist_init", scope: !417, file: !417, line: 202, type: !13185, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13188)
!13185 = !DISubroutineType(types: !13186)
!13186 = !{null, !13187}
!13187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13160, size: 32)
!13188 = !{!13189}
!13189 = !DILocalVariable(name: "list", arg: 1, scope: !13184, file: !417, line: 202, type: !13187)
!13190 = !DILocation(line: 0, scope: !13184)
!13191 = !DILocation(line: 204, column: 8, scope: !13184)
!13192 = !DILocation(line: 204, column: 13, scope: !13184)
!13193 = !DILocation(line: 205, column: 8, scope: !13184)
!13194 = !DILocation(line: 205, column: 13, scope: !13184)
!13195 = !DILocation(line: 206, column: 1, scope: !13184)
!13196 = distinct !DISubprogram(name: "z_waitq_init", scope: !12699, file: !12699, line: 47, type: !13197, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13200)
!13197 = !DISubroutineType(types: !13198)
!13198 = !{null, !13199}
!13199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13170, size: 32)
!13200 = !{!13201}
!13201 = !DILocalVariable(name: "w", arg: 1, scope: !13196, file: !12699, line: 47, type: !13199)
!13202 = !DILocation(line: 0, scope: !13196)
!13203 = !DILocation(line: 49, column: 21, scope: !13196)
!13204 = !DILocation(line: 49, column: 2, scope: !13196)
!13205 = !DILocation(line: 50, column: 1, scope: !13196)
!13206 = distinct !DISubprogram(name: "sys_dlist_init", scope: !235, file: !235, line: 197, type: !13207, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13210)
!13207 = !DISubroutineType(types: !13208)
!13208 = !{null, !13209}
!13209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13174, size: 32)
!13210 = !{!13211}
!13211 = !DILocalVariable(name: "list", arg: 1, scope: !13206, file: !235, line: 197, type: !13209)
!13212 = !DILocation(line: 0, scope: !13206)
!13213 = !DILocation(line: 199, column: 8, scope: !13206)
!13214 = !DILocation(line: 199, column: 13, scope: !13206)
!13215 = !DILocation(line: 200, column: 8, scope: !13206)
!13216 = !DILocation(line: 200, column: 13, scope: !13206)
!13217 = !DILocation(line: 201, column: 1, scope: !13206)
!13218 = distinct !DISubprogram(name: "z_impl_k_queue_cancel_wait", scope: !3131, file: !3131, line: 94, type: !13154, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13219)
!13219 = !{!13220, !13221, !13226}
!13220 = !DILocalVariable(name: "queue", arg: 1, scope: !13218, file: !3131, line: 94, type: !13156)
!13221 = !DILocalVariable(name: "key", scope: !13218, file: !3131, line: 98, type: !13222)
!13222 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !13223)
!13223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !13224)
!13224 = !{!13225}
!13225 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13223, file: !334, line: 33, baseType: !118, size: 32)
!13226 = !DILocalVariable(name: "first_pending_thread", scope: !13218, file: !3131, line: 99, type: !13227)
!13227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13228, size: 32)
!13228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !13229)
!13229 = !{!13230, !13268, !13280, !13281, !13282, !13283, !13289, !13301}
!13230 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13228, file: !225, line: 247, baseType: !13231, size: 384)
!13231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !13232)
!13232 = !{!13233, !13243, !13244, !13245, !13246, !13255, !13256, !13257}
!13233 = !DIDerivedType(tag: DW_TAG_member, scope: !13231, file: !225, line: 60, baseType: !13234, size: 64)
!13234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13231, file: !225, line: 60, size: 64, elements: !13235)
!13235 = !{!13236, !13237}
!13236 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13234, file: !225, line: 61, baseType: !3142, size: 64)
!13237 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13234, file: !225, line: 62, baseType: !13238, size: 64)
!13238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !13239)
!13239 = !{!13240}
!13240 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13238, file: !251, line: 50, baseType: !13241, size: 64)
!13241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13242, size: 64, elements: !256)
!13242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13238, size: 32)
!13243 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13231, file: !225, line: 68, baseType: !13199, size: 32, offset: 64)
!13244 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13231, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!13245 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13231, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!13246 = !DIDerivedType(tag: DW_TAG_member, scope: !13231, file: !225, line: 90, baseType: !13247, size: 16, offset: 112)
!13247 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13231, file: !225, line: 90, size: 16, elements: !13248)
!13248 = !{!13249, !13254}
!13249 = !DIDerivedType(tag: DW_TAG_member, scope: !13247, file: !225, line: 91, baseType: !13250, size: 16)
!13250 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13247, file: !225, line: 91, size: 16, elements: !13251)
!13251 = !{!13252, !13253}
!13252 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13250, file: !225, line: 96, baseType: !275, size: 8)
!13253 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13250, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!13254 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13247, file: !225, line: 100, baseType: !279, size: 16)
!13255 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13231, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!13256 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13231, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!13257 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13231, file: !225, line: 131, baseType: !13258, size: 192, offset: 192)
!13258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !13259)
!13259 = !{!13260, !13261, !13267}
!13260 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13258, file: !261, line: 245, baseType: !3142, size: 64)
!13261 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13258, file: !261, line: 246, baseType: !13262, size: 32, offset: 64)
!13262 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !13263)
!13263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13264, size: 32)
!13264 = !DISubroutineType(types: !13265)
!13265 = !{null, !13266}
!13266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13258, size: 32)
!13267 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13258, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!13268 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13228, file: !225, line: 250, baseType: !13269, size: 288, offset: 384)
!13269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !13270)
!13270 = !{!13271, !13272, !13273, !13274, !13275, !13276, !13277, !13278, !13279}
!13271 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13269, file: !296, line: 26, baseType: !156, size: 32)
!13272 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13269, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!13273 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13269, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!13274 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13269, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!13275 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13269, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!13276 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13269, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!13277 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13269, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!13278 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13269, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!13279 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13269, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!13280 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13228, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!13281 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13228, file: !225, line: 256, baseType: !13170, size: 64, offset: 704)
!13282 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13228, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!13283 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13228, file: !225, line: 300, baseType: !13284, size: 96, offset: 800)
!13284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !13285)
!13285 = !{!13286, !13287, !13288}
!13286 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13284, file: !225, line: 153, baseType: !22, size: 32)
!13287 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13284, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!13288 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13284, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!13289 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13228, file: !225, line: 325, baseType: !13290, size: 32, offset: 896)
!13290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13291, size: 32)
!13291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !13292)
!13292 = !{!13293, !13299, !13300}
!13293 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13291, file: !220, line: 5074, baseType: !13294, size: 96)
!13294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !13295)
!13295 = !{!13296, !13297, !13298}
!13296 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13294, file: !324, line: 57, baseType: !327, size: 32)
!13297 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13294, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!13298 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13294, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!13299 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13291, file: !220, line: 5075, baseType: !13170, size: 64, offset: 96)
!13300 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13291, file: !220, line: 5076, baseType: !13166, size: 32, offset: 160)
!13301 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13228, file: !225, line: 343, baseType: !13302, size: 64, offset: 928)
!13302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !13303)
!13303 = !{!13304, !13305}
!13304 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13302, file: !296, line: 63, baseType: !156, size: 32)
!13305 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13302, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!13306 = !DILocation(line: 0, scope: !13218)
!13307 = !DILocation(line: 98, column: 45, scope: !13218)
!13308 = !DILocalVariable(name: "l", arg: 1, scope: !13309, file: !334, line: 136, type: !13312)
!13309 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !13310, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13313)
!13310 = !DISubroutineType(types: !13311)
!13311 = !{!13222, !13312}
!13312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13166, size: 32)
!13313 = !{!13308, !13314}
!13314 = !DILocalVariable(name: "k", scope: !13309, file: !334, line: 139, type: !13222)
!13315 = !DILocation(line: 0, scope: !13309, inlinedAt: !13316)
!13316 = distinct !DILocation(line: 98, column: 25, scope: !13218)
!13317 = !DILocation(line: 55, column: 2, scope: !13318, inlinedAt: !13322)
!13318 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6137, file: !6137, line: 42, type: !6138, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13319)
!13319 = !{!13320, !13321}
!13320 = !DILocalVariable(name: "key", scope: !13318, file: !6137, line: 44, type: !32)
!13321 = !DILocalVariable(name: "tmp", scope: !13318, file: !6137, line: 53, type: !32)
!13322 = distinct !DILocation(line: 145, column: 10, scope: !13309, inlinedAt: !13316)
!13323 = !{i64 1958160}
!13324 = !DILocation(line: 0, scope: !13318, inlinedAt: !13322)
!13325 = !DILocation(line: 148, column: 2, scope: !13326, inlinedAt: !13316)
!13326 = distinct !DILexicalBlock(scope: !13327, file: !334, line: 148, column: 2)
!13327 = distinct !DILexicalBlock(scope: !13309, file: !334, line: 148, column: 2)
!13328 = !DILocation(line: 148, column: 2, scope: !13327, inlinedAt: !13316)
!13329 = !DILocation(line: 148, column: 2, scope: !13330, inlinedAt: !13316)
!13330 = distinct !DILexicalBlock(scope: !13326, file: !334, line: 148, column: 2)
!13331 = !DILocation(line: 160, column: 2, scope: !13309, inlinedAt: !13316)
!13332 = !DILocation(line: 101, column: 55, scope: !13218)
!13333 = !DILocation(line: 101, column: 25, scope: !13218)
!13334 = !DILocation(line: 103, column: 27, scope: !13335)
!13335 = distinct !DILexicalBlock(scope: !13218, file: !3131, line: 103, column: 6)
!13336 = !DILocation(line: 103, column: 6, scope: !13218)
!13337 = !DILocation(line: 104, column: 3, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !13335, file: !3131, line: 103, column: 36)
!13339 = !DILocation(line: 105, column: 2, scope: !13338)
!13340 = !DILocation(line: 108, column: 2, scope: !13218)
!13341 = !DILocation(line: 109, column: 1, scope: !13218)
!13342 = distinct !DISubprogram(name: "prepare_thread_to_run", scope: !3131, file: !3131, line: 81, type: !13343, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13345)
!13343 = !DISubroutineType(types: !13344)
!13344 = !{null, !13227, !117}
!13345 = !{!13346, !13347}
!13346 = !DILocalVariable(name: "thread", arg: 1, scope: !13342, file: !3131, line: 81, type: !13227)
!13347 = !DILocalVariable(name: "data", arg: 2, scope: !13342, file: !3131, line: 81, type: !117)
!13348 = !DILocation(line: 0, scope: !13342)
!13349 = !DILocalVariable(name: "thread", arg: 1, scope: !13350, file: !13351, line: 134, type: !13227)
!13350 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13351, file: !13351, line: 134, type: !13352, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13354)
!13351 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13352 = !DISubroutineType(types: !13353)
!13353 = !{null, !13227, !32, !117}
!13354 = !{!13349, !13355, !13356}
!13355 = !DILocalVariable(name: "value", arg: 2, scope: !13350, file: !13351, line: 135, type: !32)
!13356 = !DILocalVariable(name: "data", arg: 3, scope: !13350, file: !13351, line: 136, type: !117)
!13357 = !DILocation(line: 0, scope: !13350, inlinedAt: !13358)
!13358 = distinct !DILocation(line: 83, column: 2, scope: !13342)
!13359 = !DILocalVariable(name: "thread", arg: 1, scope: !13360, file: !12380, line: 65, type: !13227)
!13360 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12380, file: !12380, line: 65, type: !13361, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13363)
!13361 = !DISubroutineType(types: !13362)
!13362 = !{null, !13227, !32}
!13363 = !{!13359, !13364}
!13364 = !DILocalVariable(name: "value", arg: 2, scope: !13360, file: !12380, line: 65, type: !32)
!13365 = !DILocation(line: 0, scope: !13360, inlinedAt: !13366)
!13366 = distinct !DILocation(line: 138, column: 2, scope: !13350, inlinedAt: !13358)
!13367 = !DILocation(line: 67, column: 15, scope: !13360, inlinedAt: !13366)
!13368 = !DILocation(line: 67, column: 33, scope: !13360, inlinedAt: !13366)
!13369 = !DILocation(line: 139, column: 15, scope: !13350, inlinedAt: !13358)
!13370 = !DILocation(line: 139, column: 25, scope: !13350, inlinedAt: !13358)
!13371 = !DILocation(line: 84, column: 2, scope: !13342)
!13372 = !DILocation(line: 85, column: 1, scope: !13342)
!13373 = distinct !DISubprogram(name: "k_queue_insert", scope: !3131, file: !3131, line: 175, type: !13374, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13376)
!13374 = !DISubroutineType(types: !13375)
!13375 = !{null, !13156, !117, !117}
!13376 = !{!13377, !13378, !13379}
!13377 = !DILocalVariable(name: "queue", arg: 1, scope: !13373, file: !3131, line: 175, type: !13156)
!13378 = !DILocalVariable(name: "prev", arg: 2, scope: !13373, file: !3131, line: 175, type: !117)
!13379 = !DILocalVariable(name: "data", arg: 3, scope: !13373, file: !3131, line: 175, type: !117)
!13380 = !DILocation(line: 0, scope: !13373)
!13381 = !DILocation(line: 179, column: 8, scope: !13373)
!13382 = !DILocation(line: 182, column: 1, scope: !13373)
!13383 = distinct !DISubprogram(name: "queue_insert", scope: !3131, file: !3131, line: 120, type: !13384, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13386)
!13384 = !DISubroutineType(types: !13385)
!13385 = !{!362, !13156, !117, !117, !146, !146}
!13386 = !{!13387, !13388, !13389, !13390, !13391, !13392, !13393, !13394}
!13387 = !DILocalVariable(name: "queue", arg: 1, scope: !13383, file: !3131, line: 120, type: !13156)
!13388 = !DILocalVariable(name: "prev", arg: 2, scope: !13383, file: !3131, line: 120, type: !117)
!13389 = !DILocalVariable(name: "data", arg: 3, scope: !13383, file: !3131, line: 120, type: !117)
!13390 = !DILocalVariable(name: "alloc", arg: 4, scope: !13383, file: !3131, line: 121, type: !146)
!13391 = !DILocalVariable(name: "is_append", arg: 5, scope: !13383, file: !3131, line: 121, type: !146)
!13392 = !DILocalVariable(name: "first_pending_thread", scope: !13383, file: !3131, line: 123, type: !13227)
!13393 = !DILocalVariable(name: "key", scope: !13383, file: !3131, line: 124, type: !13222)
!13394 = !DILocalVariable(name: "anode", scope: !13395, file: !3131, line: 146, type: !3129)
!13395 = distinct !DILexicalBlock(scope: !13396, file: !3131, line: 145, column: 13)
!13396 = distinct !DILexicalBlock(scope: !13383, file: !3131, line: 145, column: 6)
!13397 = !DILocation(line: 0, scope: !13383)
!13398 = !DILocation(line: 124, column: 45, scope: !13383)
!13399 = !DILocation(line: 0, scope: !13309, inlinedAt: !13400)
!13400 = distinct !DILocation(line: 124, column: 25, scope: !13383)
!13401 = !DILocation(line: 55, column: 2, scope: !13318, inlinedAt: !13402)
!13402 = distinct !DILocation(line: 145, column: 10, scope: !13309, inlinedAt: !13400)
!13403 = !DILocation(line: 0, scope: !13318, inlinedAt: !13402)
!13404 = !DILocation(line: 148, column: 2, scope: !13326, inlinedAt: !13400)
!13405 = !DILocation(line: 148, column: 2, scope: !13327, inlinedAt: !13400)
!13406 = !DILocation(line: 148, column: 2, scope: !13330, inlinedAt: !13400)
!13407 = !DILocation(line: 160, column: 2, scope: !13309, inlinedAt: !13400)
!13408 = !DILocation(line: 128, column: 6, scope: !13383)
!13409 = !DILocation(line: 129, column: 39, scope: !13410)
!13410 = distinct !DILexicalBlock(scope: !13411, file: !3131, line: 128, column: 17)
!13411 = distinct !DILexicalBlock(scope: !13383, file: !3131, line: 128, column: 6)
!13412 = !DILocation(line: 129, column: 10, scope: !13410)
!13413 = !DILocation(line: 130, column: 2, scope: !13410)
!13414 = !DILocation(line: 131, column: 55, scope: !13383)
!13415 = !DILocation(line: 131, column: 25, scope: !13383)
!13416 = !DILocation(line: 133, column: 27, scope: !13417)
!13417 = distinct !DILexicalBlock(scope: !13383, file: !3131, line: 133, column: 6)
!13418 = !DILocation(line: 133, column: 6, scope: !13383)
!13419 = !DILocation(line: 136, column: 3, scope: !13420)
!13420 = distinct !DILexicalBlock(scope: !13417, file: !3131, line: 133, column: 36)
!13421 = !DILocation(line: 137, column: 3, scope: !13420)
!13422 = !DILocation(line: 141, column: 3, scope: !13420)
!13423 = !DILocation(line: 145, column: 6, scope: !13383)
!13424 = !DILocation(line: 148, column: 11, scope: !13395)
!13425 = !DILocation(line: 0, scope: !13395)
!13426 = !DILocation(line: 149, column: 13, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13395, file: !3131, line: 149, column: 7)
!13428 = !DILocation(line: 149, column: 7, scope: !13395)
!13429 = !DILocalVariable(name: "key", arg: 2, scope: !13430, file: !334, line: 190, type: !13222)
!13430 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !13431, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13433)
!13431 = !DISubroutineType(types: !13432)
!13432 = !{null, !13312, !13222}
!13433 = !{!13434, !13429}
!13434 = !DILocalVariable(name: "l", arg: 1, scope: !13430, file: !334, line: 189, type: !13312)
!13435 = !DILocation(line: 0, scope: !13430, inlinedAt: !13436)
!13436 = distinct !DILocation(line: 150, column: 4, scope: !13437)
!13437 = distinct !DILexicalBlock(scope: !13427, file: !3131, line: 149, column: 22)
!13438 = !DILocation(line: 194, column: 2, scope: !13439, inlinedAt: !13436)
!13439 = distinct !DILexicalBlock(scope: !13440, file: !334, line: 194, column: 2)
!13440 = distinct !DILexicalBlock(scope: !13430, file: !334, line: 194, column: 2)
!13441 = !DILocation(line: 194, column: 2, scope: !13440, inlinedAt: !13436)
!13442 = !DILocation(line: 194, column: 2, scope: !13443, inlinedAt: !13436)
!13443 = distinct !DILexicalBlock(scope: !13439, file: !334, line: 194, column: 2)
!13444 = !DILocalVariable(name: "key", arg: 1, scope: !13445, file: !6137, line: 84, type: !32)
!13445 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6137, file: !6137, line: 84, type: !6148, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13446)
!13446 = !{!13444}
!13447 = !DILocation(line: 0, scope: !13445, inlinedAt: !13448)
!13448 = distinct !DILocation(line: 215, column: 2, scope: !13430, inlinedAt: !13436)
!13449 = !DILocation(line: 95, column: 2, scope: !13445, inlinedAt: !13448)
!13450 = !{i64 1958977}
!13451 = !DILocation(line: 157, column: 10, scope: !13395)
!13452 = !DILocation(line: 157, column: 15, scope: !13395)
!13453 = !DILocation(line: 158, column: 27, scope: !13395)
!13454 = !DILocation(line: 158, column: 3, scope: !13395)
!13455 = !DILocation(line: 161, column: 19, scope: !13456)
!13456 = distinct !DILexicalBlock(scope: !13396, file: !3131, line: 160, column: 9)
!13457 = !DILocation(line: 161, column: 3, scope: !13456)
!13458 = !DILocation(line: 166, column: 42, scope: !13383)
!13459 = !DILocation(line: 166, column: 28, scope: !13383)
!13460 = !DILocation(line: 166, column: 36, scope: !13383)
!13461 = !DILocation(line: 166, column: 2, scope: !13383)
!13462 = !DILocation(line: 168, column: 2, scope: !13383)
!13463 = !DILocation(line: 172, column: 2, scope: !13383)
!13464 = !DILocation(line: 173, column: 1, scope: !13383)
!13465 = distinct !DISubprogram(name: "sys_sflist_peek_tail", scope: !417, file: !417, line: 255, type: !13466, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13468)
!13466 = !DISubroutineType(types: !13467)
!13467 = !{!3140, !13187}
!13468 = !{!13469}
!13469 = !DILocalVariable(name: "list", arg: 1, scope: !13465, file: !417, line: 255, type: !13187)
!13470 = !DILocation(line: 0, scope: !13465)
!13471 = !DILocation(line: 257, column: 15, scope: !13465)
!13472 = !DILocation(line: 257, column: 2, scope: !13465)
!13473 = distinct !DISubprogram(name: "z_thread_malloc", scope: !13351, file: !13351, line: 102, type: !13474, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13475)
!13474 = !DISubroutineType(types: !3094)
!13475 = !{!13476}
!13476 = !DILocalVariable(name: "size", arg: 1, scope: !13473, file: !13351, line: 102, type: !315)
!13477 = !DILocation(line: 0, scope: !13473)
!13478 = !DILocation(line: 104, column: 9, scope: !13473)
!13479 = !DILocation(line: 104, column: 2, scope: !13473)
!13480 = distinct !DISubprogram(name: "sys_sfnode_init", scope: !417, file: !417, line: 288, type: !13481, scopeLine: 289, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13483)
!13481 = !DISubroutineType(types: !13482)
!13482 = !{null, !3140, !143}
!13483 = !{!13484, !13485}
!13484 = !DILocalVariable(name: "node", arg: 1, scope: !13480, file: !417, line: 288, type: !3140)
!13485 = !DILocalVariable(name: "flags", arg: 2, scope: !13480, file: !417, line: 288, type: !143)
!13486 = !DILocation(line: 0, scope: !13480)
!13487 = !DILocation(line: 290, column: 2, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13489, file: !417, line: 290, column: 2)
!13489 = distinct !DILexicalBlock(scope: !13480, file: !417, line: 290, column: 2)
!13490 = !DILocation(line: 290, column: 2, scope: !13489)
!13491 = !DILocation(line: 290, column: 2, scope: !13492)
!13492 = distinct !DILexicalBlock(scope: !13488, file: !417, line: 290, column: 2)
!13493 = !DILocation(line: 291, column: 8, scope: !13480)
!13494 = !DILocation(line: 291, column: 23, scope: !13480)
!13495 = !DILocation(line: 292, column: 1, scope: !13480)
!13496 = distinct !DISubprogram(name: "sys_sflist_insert", scope: !417, file: !417, line: 420, type: !13497, scopeLine: 420, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13499)
!13497 = !DISubroutineType(types: !13498)
!13498 = !{null, !13187, !3140, !3140}
!13499 = !{!13500, !13501, !13502}
!13500 = !DILocalVariable(name: "list", arg: 1, scope: !13496, file: !417, line: 420, type: !13187)
!13501 = !DILocalVariable(name: "prev", arg: 2, scope: !13496, file: !417, line: 420, type: !3140)
!13502 = !DILocalVariable(name: "node", arg: 3, scope: !13496, file: !417, line: 420, type: !3140)
!13503 = !DILocation(line: 0, scope: !13496)
!13504 = !DILocation(line: 420, column: 1, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13496, file: !417, line: 420, column: 1)
!13506 = !DILocation(line: 420, column: 1, scope: !13496)
!13507 = !DILocation(line: 420, column: 1, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13505, file: !417, line: 420, column: 1)
!13509 = !DILocation(line: 420, column: 1, scope: !13510)
!13510 = distinct !DILexicalBlock(scope: !13505, file: !417, line: 420, column: 1)
!13511 = !DILocation(line: 420, column: 1, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13510, file: !417, line: 420, column: 1)
!13513 = !DILocation(line: 420, column: 1, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13510, file: !417, line: 420, column: 1)
!13515 = distinct !DISubprogram(name: "sys_sflist_prepend", scope: !417, file: !417, line: 360, type: !13516, scopeLine: 360, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13518)
!13516 = !DISubroutineType(types: !13517)
!13517 = !{null, !13187, !3140}
!13518 = !{!13519, !13520}
!13519 = !DILocalVariable(name: "list", arg: 1, scope: !13515, file: !417, line: 360, type: !13187)
!13520 = !DILocalVariable(name: "node", arg: 2, scope: !13515, file: !417, line: 360, type: !3140)
!13521 = !DILocation(line: 0, scope: !13515)
!13522 = !DILocation(line: 360, column: 1, scope: !13515)
!13523 = !DILocation(line: 360, column: 1, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13515, file: !417, line: 360, column: 1)
!13525 = !DILocation(line: 360, column: 1, scope: !13526)
!13526 = distinct !DILexicalBlock(scope: !13524, file: !417, line: 360, column: 1)
!13527 = distinct !DISubprogram(name: "z_sfnode_next_peek", scope: !417, file: !417, line: 211, type: !13528, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13530)
!13528 = !DISubroutineType(types: !13529)
!13529 = !{!3140, !3140}
!13530 = !{!13531}
!13531 = !DILocalVariable(name: "node", arg: 1, scope: !13527, file: !417, line: 211, type: !3140)
!13532 = !DILocation(line: 0, scope: !13527)
!13533 = !DILocation(line: 213, column: 32, scope: !13527)
!13534 = !DILocation(line: 213, column: 47, scope: !13527)
!13535 = !DILocation(line: 213, column: 9, scope: !13527)
!13536 = !DILocation(line: 213, column: 2, scope: !13527)
!13537 = distinct !DISubprogram(name: "sys_sflist_append", scope: !417, file: !417, line: 373, type: !13516, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13538)
!13538 = !{!13539, !13540}
!13539 = !DILocalVariable(name: "list", arg: 1, scope: !13537, file: !417, line: 373, type: !13187)
!13540 = !DILocalVariable(name: "node", arg: 2, scope: !13537, file: !417, line: 373, type: !3140)
!13541 = !DILocation(line: 0, scope: !13537)
!13542 = !DILocation(line: 373, column: 1, scope: !13537)
!13543 = !DILocation(line: 373, column: 1, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13537, file: !417, line: 373, column: 1)
!13545 = !DILocation(line: 373, column: 1, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13544, file: !417, line: 373, column: 1)
!13547 = !DILocation(line: 373, column: 1, scope: !13548)
!13548 = distinct !DILexicalBlock(scope: !13544, file: !417, line: 373, column: 1)
!13549 = distinct !DISubprogram(name: "z_sfnode_next_set", scope: !417, file: !417, line: 218, type: !13550, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13552)
!13550 = !DISubroutineType(types: !13551)
!13551 = !{null, !3140, !3140}
!13552 = !{!13553, !13554, !13555}
!13553 = !DILocalVariable(name: "parent", arg: 1, scope: !13549, file: !417, line: 218, type: !3140)
!13554 = !DILocalVariable(name: "child", arg: 2, scope: !13549, file: !417, line: 219, type: !3140)
!13555 = !DILocalVariable(name: "cur_flags", scope: !13549, file: !417, line: 221, type: !143)
!13556 = !DILocation(line: 0, scope: !13549)
!13557 = !DILocation(line: 221, column: 22, scope: !13549)
!13558 = !DILocation(line: 223, column: 27, scope: !13549)
!13559 = !DILocation(line: 223, column: 39, scope: !13549)
!13560 = !DILocation(line: 223, column: 37, scope: !13549)
!13561 = !DILocation(line: 223, column: 10, scope: !13549)
!13562 = !DILocation(line: 223, column: 25, scope: !13549)
!13563 = !DILocation(line: 224, column: 1, scope: !13549)
!13564 = distinct !DISubprogram(name: "z_sflist_tail_set", scope: !417, file: !417, line: 231, type: !13516, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13565)
!13565 = !{!13566, !13567}
!13566 = !DILocalVariable(name: "list", arg: 1, scope: !13564, file: !417, line: 231, type: !13187)
!13567 = !DILocalVariable(name: "node", arg: 2, scope: !13564, file: !417, line: 231, type: !3140)
!13568 = !DILocation(line: 0, scope: !13564)
!13569 = !DILocation(line: 233, column: 8, scope: !13564)
!13570 = !DILocation(line: 233, column: 13, scope: !13564)
!13571 = !DILocation(line: 234, column: 1, scope: !13564)
!13572 = distinct !DISubprogram(name: "z_sflist_head_set", scope: !417, file: !417, line: 226, type: !13516, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13573)
!13573 = !{!13574, !13575}
!13574 = !DILocalVariable(name: "list", arg: 1, scope: !13572, file: !417, line: 226, type: !13187)
!13575 = !DILocalVariable(name: "node", arg: 2, scope: !13572, file: !417, line: 226, type: !3140)
!13576 = !DILocation(line: 0, scope: !13572)
!13577 = !DILocation(line: 228, column: 8, scope: !13572)
!13578 = !DILocation(line: 228, column: 13, scope: !13572)
!13579 = !DILocation(line: 229, column: 1, scope: !13572)
!13580 = distinct !DISubprogram(name: "sys_sflist_peek_head", scope: !417, file: !417, line: 243, type: !13466, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13581)
!13581 = !{!13582}
!13582 = !DILocalVariable(name: "list", arg: 1, scope: !13580, file: !417, line: 243, type: !13187)
!13583 = !DILocation(line: 0, scope: !13580)
!13584 = !DILocation(line: 245, column: 15, scope: !13580)
!13585 = !DILocation(line: 245, column: 2, scope: !13580)
!13586 = distinct !DISubprogram(name: "k_queue_append", scope: !3131, file: !3131, line: 184, type: !13587, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13589)
!13587 = !DISubroutineType(types: !13588)
!13588 = !{null, !13156, !117}
!13589 = !{!13590, !13591}
!13590 = !DILocalVariable(name: "queue", arg: 1, scope: !13586, file: !3131, line: 184, type: !13156)
!13591 = !DILocalVariable(name: "data", arg: 2, scope: !13586, file: !3131, line: 184, type: !117)
!13592 = !DILocation(line: 0, scope: !13586)
!13593 = !DILocation(line: 188, column: 8, scope: !13586)
!13594 = !DILocation(line: 191, column: 1, scope: !13586)
!13595 = distinct !DISubprogram(name: "k_queue_prepend", scope: !3131, file: !3131, line: 193, type: !13587, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13596)
!13596 = !{!13597, !13598}
!13597 = !DILocalVariable(name: "queue", arg: 1, scope: !13595, file: !3131, line: 193, type: !13156)
!13598 = !DILocalVariable(name: "data", arg: 2, scope: !13595, file: !3131, line: 193, type: !117)
!13599 = !DILocation(line: 0, scope: !13595)
!13600 = !DILocation(line: 197, column: 8, scope: !13595)
!13601 = !DILocation(line: 200, column: 1, scope: !13595)
!13602 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_append", scope: !3131, file: !3131, line: 202, type: !13603, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13605)
!13603 = !DISubroutineType(types: !13604)
!13604 = !{!362, !13156, !117}
!13605 = !{!13606, !13607, !13608}
!13606 = !DILocalVariable(name: "queue", arg: 1, scope: !13602, file: !3131, line: 202, type: !13156)
!13607 = !DILocalVariable(name: "data", arg: 2, scope: !13602, file: !3131, line: 202, type: !117)
!13608 = !DILocalVariable(name: "ret", scope: !13602, file: !3131, line: 206, type: !362)
!13609 = !DILocation(line: 0, scope: !13602)
!13610 = !DILocation(line: 206, column: 16, scope: !13602)
!13611 = !DILocation(line: 210, column: 2, scope: !13602)
!13612 = distinct !DISubprogram(name: "z_impl_k_queue_alloc_prepend", scope: !3131, file: !3131, line: 223, type: !13603, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13613)
!13613 = !{!13614, !13615, !13616}
!13614 = !DILocalVariable(name: "queue", arg: 1, scope: !13612, file: !3131, line: 223, type: !13156)
!13615 = !DILocalVariable(name: "data", arg: 2, scope: !13612, file: !3131, line: 223, type: !117)
!13616 = !DILocalVariable(name: "ret", scope: !13612, file: !3131, line: 227, type: !362)
!13617 = !DILocation(line: 0, scope: !13612)
!13618 = !DILocation(line: 227, column: 16, scope: !13612)
!13619 = !DILocation(line: 231, column: 2, scope: !13612)
!13620 = distinct !DISubprogram(name: "k_queue_append_list", scope: !3131, file: !3131, line: 244, type: !13621, scopeLine: 245, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13623)
!13621 = !DISubroutineType(types: !13622)
!13622 = !{!118, !13156, !117, !117}
!13623 = !{!13624, !13625, !13626, !13627, !13628}
!13624 = !DILocalVariable(name: "queue", arg: 1, scope: !13620, file: !3131, line: 244, type: !13156)
!13625 = !DILocalVariable(name: "head", arg: 2, scope: !13620, file: !3131, line: 244, type: !117)
!13626 = !DILocalVariable(name: "tail", arg: 3, scope: !13620, file: !3131, line: 244, type: !117)
!13627 = !DILocalVariable(name: "key", scope: !13620, file: !3131, line: 255, type: !13222)
!13628 = !DILocalVariable(name: "thread", scope: !13620, file: !3131, line: 256, type: !13227)
!13629 = !DILocation(line: 0, scope: !13620)
!13630 = !DILocation(line: 249, column: 2, scope: !13631)
!13631 = distinct !DILexicalBlock(scope: !13620, file: !3131, line: 249, column: 2)
!13632 = !DILocation(line: 255, column: 45, scope: !13620)
!13633 = !DILocation(line: 0, scope: !13309, inlinedAt: !13634)
!13634 = distinct !DILocation(line: 255, column: 25, scope: !13620)
!13635 = !DILocation(line: 55, column: 2, scope: !13318, inlinedAt: !13636)
!13636 = distinct !DILocation(line: 145, column: 10, scope: !13309, inlinedAt: !13634)
!13637 = !DILocation(line: 0, scope: !13318, inlinedAt: !13636)
!13638 = !DILocation(line: 148, column: 2, scope: !13326, inlinedAt: !13634)
!13639 = !DILocation(line: 148, column: 2, scope: !13327, inlinedAt: !13634)
!13640 = !DILocation(line: 148, column: 2, scope: !13330, inlinedAt: !13634)
!13641 = !DILocation(line: 160, column: 2, scope: !13309, inlinedAt: !13634)
!13642 = !DILocation(line: 259, column: 42, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !13644, file: !3131, line: 258, column: 20)
!13644 = distinct !DILexicalBlock(scope: !13620, file: !3131, line: 258, column: 6)
!13645 = !DILocation(line: 259, column: 12, scope: !13643)
!13646 = !DILocation(line: 262, column: 24, scope: !13620)
!13647 = !DILocation(line: 262, column: 2, scope: !13620)
!13648 = !DILocation(line: 263, column: 3, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13620, file: !3131, line: 262, column: 45)
!13650 = !DILocation(line: 264, column: 11, scope: !13649)
!13651 = !DILocation(line: 264, column: 10, scope: !13649)
!13652 = !DILocation(line: 265, column: 12, scope: !13649)
!13653 = !DILocation(line: 262, column: 15, scope: !13620)
!13654 = distinct !{!13654, !13647, !13655}
!13655 = !DILocation(line: 266, column: 2, scope: !13620)
!13656 = !DILocation(line: 268, column: 6, scope: !13620)
!13657 = !DILocation(line: 269, column: 34, scope: !13658)
!13658 = distinct !DILexicalBlock(scope: !13659, file: !3131, line: 268, column: 20)
!13659 = distinct !DILexicalBlock(scope: !13620, file: !3131, line: 268, column: 6)
!13660 = !DILocation(line: 269, column: 3, scope: !13658)
!13661 = !DILocation(line: 270, column: 2, scope: !13658)
!13662 = !DILocation(line: 275, column: 2, scope: !13620)
!13663 = !DILocation(line: 277, column: 1, scope: !13620)
!13664 = distinct !DISubprogram(name: "sys_sflist_append_list", scope: !417, file: !417, line: 391, type: !13665, scopeLine: 391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13667)
!13665 = !DISubroutineType(types: !13666)
!13666 = !{null, !13187, !117, !117}
!13667 = !{!13668, !13669, !13670}
!13668 = !DILocalVariable(name: "list", arg: 1, scope: !13664, file: !417, line: 391, type: !13187)
!13669 = !DILocalVariable(name: "head", arg: 2, scope: !13664, file: !417, line: 391, type: !117)
!13670 = !DILocalVariable(name: "tail", arg: 3, scope: !13664, file: !417, line: 391, type: !117)
!13671 = !DILocation(line: 0, scope: !13664)
!13672 = !DILocation(line: 391, column: 1, scope: !13673)
!13673 = distinct !DILexicalBlock(scope: !13664, file: !417, line: 391, column: 1)
!13674 = !DILocation(line: 391, column: 1, scope: !13675)
!13675 = distinct !DILexicalBlock(scope: !13676, file: !417, line: 391, column: 1)
!13676 = distinct !DILexicalBlock(scope: !13673, file: !417, line: 391, column: 1)
!13677 = !DILocation(line: 0, scope: !13675)
!13678 = !DILocation(line: 391, column: 1, scope: !13676)
!13679 = !DILocation(line: 391, column: 1, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13675, file: !417, line: 391, column: 1)
!13681 = !DILocation(line: 391, column: 1, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13675, file: !417, line: 391, column: 1)
!13683 = !DILocation(line: 391, column: 1, scope: !13664)
!13684 = distinct !DISubprogram(name: "k_queue_merge_slist", scope: !3131, file: !3131, line: 279, type: !13685, scopeLine: 280, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13699)
!13685 = !DISubroutineType(types: !13686)
!13686 = !{!118, !13156, !13687}
!13687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13688, size: 32)
!13688 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !187, line: 40, baseType: !13689)
!13689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !187, line: 35, size: 64, elements: !13690)
!13690 = !{!13691, !13698}
!13691 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13689, file: !187, line: 36, baseType: !13692, size: 32)
!13692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13693, size: 32)
!13693 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !187, line: 33, baseType: !13694)
!13694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !187, line: 29, size: 32, elements: !13695)
!13695 = !{!13696}
!13696 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13694, file: !187, line: 30, baseType: !13697, size: 32)
!13697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13694, size: 32)
!13698 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13689, file: !187, line: 37, baseType: !13692, size: 32, offset: 32)
!13699 = !{!13700, !13701, !13702}
!13700 = !DILocalVariable(name: "queue", arg: 1, scope: !13684, file: !3131, line: 279, type: !13156)
!13701 = !DILocalVariable(name: "list", arg: 2, scope: !13684, file: !3131, line: 279, type: !13687)
!13702 = !DILocalVariable(name: "ret", scope: !13684, file: !3131, line: 281, type: !118)
!13703 = !DILocation(line: 0, scope: !13684)
!13704 = !DILocation(line: 286, column: 2, scope: !13705)
!13705 = distinct !DILexicalBlock(scope: !13684, file: !3131, line: 286, column: 2)
!13706 = !DILocation(line: 286, column: 2, scope: !13684)
!13707 = !DILocation(line: 301, column: 41, scope: !13684)
!13708 = !DILocation(line: 301, column: 53, scope: !13684)
!13709 = !DILocation(line: 301, column: 8, scope: !13684)
!13710 = !DILocation(line: 302, column: 2, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13684, file: !3131, line: 302, column: 2)
!13712 = !DILocation(line: 302, column: 2, scope: !13684)
!13713 = !DILocation(line: 307, column: 2, scope: !13684)
!13714 = !DILocation(line: 311, column: 2, scope: !13684)
!13715 = !DILocation(line: 312, column: 1, scope: !13684)
!13716 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !187, file: !187, line: 261, type: !13717, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13719)
!13717 = !DISubroutineType(types: !13718)
!13718 = !{!146, !13687}
!13719 = !{!13720}
!13720 = !DILocalVariable(name: "list", arg: 1, scope: !13716, file: !187, line: 261, type: !13687)
!13721 = !DILocation(line: 0, scope: !13716)
!13722 = !DILocation(line: 261, column: 1, scope: !13716)
!13723 = distinct !DISubprogram(name: "sys_slist_init", scope: !187, file: !187, line: 196, type: !13724, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13726)
!13724 = !DISubroutineType(types: !13725)
!13725 = !{null, !13687}
!13726 = !{!13727}
!13727 = !DILocalVariable(name: "list", arg: 1, scope: !13723, file: !187, line: 196, type: !13687)
!13728 = !DILocation(line: 0, scope: !13723)
!13729 = !DILocation(line: 198, column: 8, scope: !13723)
!13730 = !DILocation(line: 198, column: 13, scope: !13723)
!13731 = !DILocation(line: 199, column: 8, scope: !13723)
!13732 = !DILocation(line: 199, column: 13, scope: !13723)
!13733 = !DILocation(line: 200, column: 1, scope: !13723)
!13734 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !187, file: !187, line: 231, type: !13735, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13737)
!13735 = !DISubroutineType(types: !13736)
!13736 = !{!13692, !13687}
!13737 = !{!13738}
!13738 = !DILocalVariable(name: "list", arg: 1, scope: !13734, file: !187, line: 231, type: !13687)
!13739 = !DILocation(line: 0, scope: !13734)
!13740 = !DILocation(line: 233, column: 15, scope: !13734)
!13741 = !DILocation(line: 233, column: 2, scope: !13734)
!13742 = distinct !DISubprogram(name: "z_impl_k_queue_get", scope: !3131, file: !3131, line: 314, type: !13743, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13749)
!13743 = !DISubroutineType(types: !13744)
!13744 = !{!117, !13156, !13745}
!13745 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !13746)
!13746 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !13747)
!13747 = !{!13748}
!13748 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13746, file: !114, line: 66, baseType: !113, size: 64)
!13749 = !{!13750, !13751, !13752, !13753, !13754, !13757}
!13750 = !DILocalVariable(name: "queue", arg: 1, scope: !13742, file: !3131, line: 314, type: !13156)
!13751 = !DILocalVariable(name: "timeout", arg: 2, scope: !13742, file: !3131, line: 314, type: !13745)
!13752 = !DILocalVariable(name: "key", scope: !13742, file: !3131, line: 316, type: !13222)
!13753 = !DILocalVariable(name: "data", scope: !13742, file: !3131, line: 317, type: !117)
!13754 = !DILocalVariable(name: "node", scope: !13755, file: !3131, line: 322, type: !3140)
!13755 = distinct !DILexicalBlock(scope: !13756, file: !3131, line: 321, column: 52)
!13756 = distinct !DILexicalBlock(scope: !13742, file: !3131, line: 321, column: 6)
!13757 = !DILocalVariable(name: "ret", scope: !13742, file: !3131, line: 343, type: !118)
!13758 = !DILocation(line: 0, scope: !13742)
!13759 = !DILocation(line: 316, column: 45, scope: !13742)
!13760 = !DILocation(line: 0, scope: !13309, inlinedAt: !13761)
!13761 = distinct !DILocation(line: 316, column: 25, scope: !13742)
!13762 = !DILocation(line: 55, column: 2, scope: !13318, inlinedAt: !13763)
!13763 = distinct !DILocation(line: 145, column: 10, scope: !13309, inlinedAt: !13761)
!13764 = !DILocation(line: 0, scope: !13318, inlinedAt: !13763)
!13765 = !DILocation(line: 148, column: 2, scope: !13326, inlinedAt: !13761)
!13766 = !DILocation(line: 148, column: 2, scope: !13327, inlinedAt: !13761)
!13767 = !DILocation(line: 148, column: 2, scope: !13330, inlinedAt: !13761)
!13768 = !DILocation(line: 160, column: 2, scope: !13309, inlinedAt: !13761)
!13769 = !DILocation(line: 321, column: 6, scope: !13756)
!13770 = !DILocation(line: 321, column: 6, scope: !13742)
!13771 = !{!"branch_weights", i32 1, i32 2000}
!13772 = !DILocation(line: 324, column: 10, scope: !13755)
!13773 = !DILocation(line: 0, scope: !13755)
!13774 = !DILocation(line: 325, column: 10, scope: !13755)
!13775 = !DILocation(line: 0, scope: !13430, inlinedAt: !13776)
!13776 = distinct !DILocation(line: 326, column: 3, scope: !13755)
!13777 = !DILocation(line: 194, column: 2, scope: !13439, inlinedAt: !13776)
!13778 = !DILocation(line: 194, column: 2, scope: !13440, inlinedAt: !13776)
!13779 = !DILocation(line: 194, column: 2, scope: !13443, inlinedAt: !13776)
!13780 = !DILocation(line: 0, scope: !13445, inlinedAt: !13781)
!13781 = distinct !DILocation(line: 215, column: 2, scope: !13430, inlinedAt: !13776)
!13782 = !DILocation(line: 95, column: 2, scope: !13445, inlinedAt: !13781)
!13783 = !DILocation(line: 335, column: 6, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13742, file: !3131, line: 335, column: 6)
!13785 = !DILocation(line: 335, column: 6, scope: !13742)
!13786 = !DILocation(line: 0, scope: !13430, inlinedAt: !13787)
!13787 = distinct !DILocation(line: 336, column: 3, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !13784, file: !3131, line: 335, column: 40)
!13789 = !DILocation(line: 194, column: 2, scope: !13439, inlinedAt: !13787)
!13790 = !DILocation(line: 194, column: 2, scope: !13440, inlinedAt: !13787)
!13791 = !DILocation(line: 194, column: 2, scope: !13443, inlinedAt: !13787)
!13792 = !DILocation(line: 0, scope: !13445, inlinedAt: !13793)
!13793 = distinct !DILocation(line: 215, column: 2, scope: !13430, inlinedAt: !13787)
!13794 = !DILocation(line: 95, column: 2, scope: !13445, inlinedAt: !13793)
!13795 = !DILocation(line: 340, column: 3, scope: !13788)
!13796 = !DILocation(line: 343, column: 51, scope: !13742)
!13797 = !DILocation(line: 343, column: 12, scope: !13742)
!13798 = !DILocation(line: 348, column: 14, scope: !13742)
!13799 = !DILocation(line: 348, column: 9, scope: !13742)
!13800 = !DILocation(line: 348, column: 29, scope: !13742)
!13801 = !DILocation(line: 348, column: 44, scope: !13742)
!13802 = !DILocation(line: 349, column: 1, scope: !13742)
!13803 = distinct !DISubprogram(name: "sys_sflist_is_empty", scope: !417, file: !417, line: 323, type: !13804, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13806)
!13804 = !DISubroutineType(types: !13805)
!13805 = !{!146, !13187}
!13806 = !{!13807}
!13807 = !DILocalVariable(name: "list", arg: 1, scope: !13803, file: !417, line: 323, type: !13187)
!13808 = !DILocation(line: 0, scope: !13803)
!13809 = !DILocation(line: 323, column: 1, scope: !13803)
!13810 = distinct !DISubprogram(name: "sys_sflist_get_not_empty", scope: !417, file: !417, line: 434, type: !13466, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13811)
!13811 = !{!13812, !13813}
!13812 = !DILocalVariable(name: "list", arg: 1, scope: !13810, file: !417, line: 434, type: !13187)
!13813 = !DILocalVariable(name: "node", scope: !13810, file: !417, line: 434, type: !3140)
!13814 = !DILocation(line: 0, scope: !13810)
!13815 = !DILocation(line: 434, column: 1, scope: !13810)
!13816 = !DILocation(line: 434, column: 1, scope: !13817)
!13817 = distinct !DILexicalBlock(scope: !13810, file: !417, line: 434, column: 1)
!13818 = !DILocation(line: 434, column: 1, scope: !13819)
!13819 = distinct !DILexicalBlock(scope: !13817, file: !417, line: 434, column: 1)
!13820 = distinct !DISubprogram(name: "k_queue_remove", scope: !3131, file: !3131, line: 351, type: !13821, scopeLine: 352, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13823)
!13821 = !DISubroutineType(types: !13822)
!13822 = !{!146, !13156, !117}
!13823 = !{!13824, !13825, !13826}
!13824 = !DILocalVariable(name: "queue", arg: 1, scope: !13820, file: !3131, line: 351, type: !13156)
!13825 = !DILocalVariable(name: "data", arg: 2, scope: !13820, file: !3131, line: 351, type: !117)
!13826 = !DILocalVariable(name: "ret", scope: !13820, file: !3131, line: 355, type: !146)
!13827 = !DILocation(line: 0, scope: !13820)
!13828 = !DILocation(line: 355, column: 48, scope: !13820)
!13829 = !DILocation(line: 355, column: 56, scope: !13820)
!13830 = !DILocation(line: 355, column: 13, scope: !13820)
!13831 = !DILocation(line: 359, column: 2, scope: !13820)
!13832 = distinct !DISubprogram(name: "sys_sflist_find_and_remove", scope: !417, file: !417, line: 478, type: !13833, scopeLine: 478, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13835)
!13833 = !DISubroutineType(types: !13834)
!13834 = !{!146, !13187, !3140}
!13835 = !{!13836, !13837, !13838, !13839}
!13836 = !DILocalVariable(name: "list", arg: 1, scope: !13832, file: !417, line: 478, type: !13187)
!13837 = !DILocalVariable(name: "node", arg: 2, scope: !13832, file: !417, line: 478, type: !3140)
!13838 = !DILocalVariable(name: "prev", scope: !13832, file: !417, line: 478, type: !3140)
!13839 = !DILocalVariable(name: "test", scope: !13832, file: !417, line: 478, type: !3140)
!13840 = !DILocation(line: 0, scope: !13832)
!13841 = !DILocation(line: 478, column: 1, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !13832, file: !417, line: 478, column: 1)
!13843 = !DILocation(line: 478, column: 1, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13842, file: !417, line: 478, column: 1)
!13845 = !DILocation(line: 478, column: 1, scope: !13846)
!13846 = distinct !DILexicalBlock(scope: !13847, file: !417, line: 478, column: 1)
!13847 = distinct !DILexicalBlock(scope: !13844, file: !417, line: 478, column: 1)
!13848 = !DILocation(line: 478, column: 1, scope: !13847)
!13849 = distinct !{!13849, !13841, !13841}
!13850 = !DILocation(line: 478, column: 1, scope: !13851)
!13851 = distinct !DILexicalBlock(scope: !13846, file: !417, line: 478, column: 1)
!13852 = !DILocation(line: 478, column: 1, scope: !13832)
!13853 = distinct !DISubprogram(name: "sys_sflist_remove", scope: !417, file: !417, line: 463, type: !13497, scopeLine: 463, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13854)
!13854 = !{!13855, !13856, !13857}
!13855 = !DILocalVariable(name: "list", arg: 1, scope: !13853, file: !417, line: 463, type: !13187)
!13856 = !DILocalVariable(name: "prev_node", arg: 2, scope: !13853, file: !417, line: 463, type: !3140)
!13857 = !DILocalVariable(name: "node", arg: 3, scope: !13853, file: !417, line: 463, type: !3140)
!13858 = !DILocation(line: 0, scope: !13853)
!13859 = !DILocation(line: 463, column: 1, scope: !13860)
!13860 = distinct !DILexicalBlock(scope: !13853, file: !417, line: 463, column: 1)
!13861 = !DILocation(line: 0, scope: !13860)
!13862 = !DILocation(line: 463, column: 1, scope: !13853)
!13863 = !DILocation(line: 463, column: 1, scope: !13864)
!13864 = distinct !DILexicalBlock(scope: !13860, file: !417, line: 463, column: 1)
!13865 = !DILocation(line: 463, column: 1, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !13864, file: !417, line: 463, column: 1)
!13867 = !DILocation(line: 463, column: 1, scope: !13868)
!13868 = distinct !DILexicalBlock(scope: !13866, file: !417, line: 463, column: 1)
!13869 = !DILocation(line: 463, column: 1, scope: !13870)
!13870 = distinct !DILexicalBlock(scope: !13860, file: !417, line: 463, column: 1)
!13871 = !DILocation(line: 463, column: 1, scope: !13872)
!13872 = distinct !DILexicalBlock(scope: !13870, file: !417, line: 463, column: 1)
!13873 = !DILocation(line: 463, column: 1, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !13872, file: !417, line: 463, column: 1)
!13875 = distinct !DISubprogram(name: "sys_sflist_peek_next", scope: !417, file: !417, line: 347, type: !13528, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13876)
!13876 = !{!13877}
!13877 = !DILocalVariable(name: "node", arg: 1, scope: !13875, file: !417, line: 347, type: !3140)
!13878 = !DILocation(line: 0, scope: !13875)
!13879 = !DILocation(line: 347, column: 1, scope: !13875)
!13880 = distinct !DISubprogram(name: "sys_sflist_peek_next_no_check", scope: !417, file: !417, line: 336, type: !13528, scopeLine: 336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13881)
!13881 = !{!13882}
!13882 = !DILocalVariable(name: "node", arg: 1, scope: !13880, file: !417, line: 336, type: !3140)
!13883 = !DILocation(line: 0, scope: !13880)
!13884 = !DILocation(line: 336, column: 1, scope: !13880)
!13885 = distinct !DISubprogram(name: "k_queue_unique_append", scope: !3131, file: !3131, line: 362, type: !13821, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13886)
!13886 = !{!13887, !13888, !13889}
!13887 = !DILocalVariable(name: "queue", arg: 1, scope: !13885, file: !3131, line: 362, type: !13156)
!13888 = !DILocalVariable(name: "data", arg: 2, scope: !13885, file: !3131, line: 362, type: !117)
!13889 = !DILocalVariable(name: "test", scope: !13885, file: !3131, line: 366, type: !3140)
!13890 = !DILocation(line: 0, scope: !13885)
!13891 = !DILocation(line: 368, column: 2, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !13885, file: !3131, line: 368, column: 2)
!13893 = !DILocation(line: 368, column: 2, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13892, file: !3131, line: 368, column: 2)
!13895 = !DILocation(line: 369, column: 12, scope: !13896)
!13896 = distinct !DILexicalBlock(scope: !13897, file: !3131, line: 369, column: 7)
!13897 = distinct !DILexicalBlock(scope: !13894, file: !3131, line: 368, column: 49)
!13898 = !DILocation(line: 369, column: 7, scope: !13897)
!13899 = distinct !{!13899, !13891, !13900}
!13900 = !DILocation(line: 374, column: 2, scope: !13892)
!13901 = !DILocation(line: 376, column: 2, scope: !13885)
!13902 = !DILocation(line: 380, column: 2, scope: !13885)
!13903 = !DILocation(line: 381, column: 1, scope: !13885)
!13904 = distinct !DISubprogram(name: "z_impl_k_queue_peek_head", scope: !3131, file: !3131, line: 383, type: !13905, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13907)
!13905 = !DISubroutineType(types: !13906)
!13906 = !{!117, !13156}
!13907 = !{!13908, !13909}
!13908 = !DILocalVariable(name: "queue", arg: 1, scope: !13904, file: !3131, line: 383, type: !13156)
!13909 = !DILocalVariable(name: "ret", scope: !13904, file: !3131, line: 385, type: !117)
!13910 = !DILocation(line: 0, scope: !13904)
!13911 = !DILocation(line: 385, column: 61, scope: !13904)
!13912 = !DILocation(line: 385, column: 32, scope: !13904)
!13913 = !DILocation(line: 385, column: 14, scope: !13904)
!13914 = !DILocation(line: 389, column: 2, scope: !13904)
!13915 = distinct !DISubprogram(name: "z_impl_k_queue_peek_tail", scope: !3131, file: !3131, line: 392, type: !13905, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13916)
!13916 = !{!13917, !13918}
!13917 = !DILocalVariable(name: "queue", arg: 1, scope: !13915, file: !3131, line: 392, type: !13156)
!13918 = !DILocalVariable(name: "ret", scope: !13915, file: !3131, line: 394, type: !117)
!13919 = !DILocation(line: 0, scope: !13915)
!13920 = !DILocation(line: 394, column: 61, scope: !13915)
!13921 = !DILocation(line: 394, column: 32, scope: !13915)
!13922 = !DILocation(line: 394, column: 14, scope: !13915)
!13923 = !DILocation(line: 398, column: 2, scope: !13915)
!13924 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2392, file: !2392, line: 93, type: !13925, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !13927)
!13925 = !DISubroutineType(types: !13926)
!13926 = !{!362, !2285, !2285}
!13927 = !{!13928, !13929, !13930, !13931}
!13928 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13924, file: !2392, line: 93, type: !2285)
!13929 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13924, file: !2392, line: 94, type: !2285)
!13930 = !DILocalVariable(name: "b1", scope: !13924, file: !2392, line: 97, type: !362)
!13931 = !DILocalVariable(name: "b2", scope: !13924, file: !2392, line: 98, type: !362)
!13932 = !DILocation(line: 0, scope: !13924)
!13933 = !DILocation(line: 97, column: 30, scope: !13924)
!13934 = !DILocation(line: 98, column: 30, scope: !13924)
!13935 = !DILocation(line: 100, column: 9, scope: !13936)
!13936 = distinct !DILexicalBlock(scope: !13924, file: !2392, line: 100, column: 6)
!13937 = !DILocation(line: 100, column: 6, scope: !13924)
!13938 = !DILocation(line: 125, column: 1, scope: !13924)
!13939 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2392, file: !2392, line: 428, type: !13940, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !13942)
!13940 = !DISubroutineType(types: !13941)
!13941 = !{null, !2285}
!13942 = !{!13943}
!13943 = !DILocalVariable(name: "curr", arg: 1, scope: !13939, file: !2392, line: 428, type: !2285)
!13944 = !DILocation(line: 0, scope: !13939)
!13945 = !DILocation(line: 434, column: 6, scope: !13946)
!13946 = distinct !DILexicalBlock(scope: !13939, file: !2392, line: 434, column: 6)
!13947 = !DILocation(line: 434, column: 23, scope: !13946)
!13948 = !DILocation(line: 434, column: 6, scope: !13939)
!13949 = !DILocation(line: 435, column: 50, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13946, file: !2392, line: 434, column: 29)
!13951 = !DILocation(line: 435, column: 48, scope: !13950)
!13952 = !DILocation(line: 435, column: 29, scope: !13950)
!13953 = !DILocation(line: 436, column: 24, scope: !13950)
!13954 = !DILocation(line: 436, column: 3, scope: !13950)
!13955 = !DILocation(line: 437, column: 2, scope: !13950)
!13956 = !DILocation(line: 438, column: 1, scope: !13939)
!13957 = distinct !DISubprogram(name: "slice_time", scope: !2392, file: !2392, line: 407, type: !13958, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !13960)
!13958 = !DISubroutineType(types: !13959)
!13959 = !{!118, !2285}
!13960 = !{!13961, !13962}
!13961 = !DILocalVariable(name: "curr", arg: 1, scope: !13957, file: !2392, line: 407, type: !2285)
!13962 = !DILocalVariable(name: "ret", scope: !13957, file: !2392, line: 409, type: !118)
!13963 = !DILocation(line: 0, scope: !13957)
!13964 = !DILocation(line: 409, column: 12, scope: !13957)
!13965 = !DILocation(line: 416, column: 2, scope: !13957)
!13966 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2392, file: !2392, line: 440, type: !13967, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !13969)
!13967 = !DISubroutineType(types: !13968)
!13968 = !{null, !362, !118}
!13969 = !{!13970, !13971, !13972, !13978}
!13970 = !DILocalVariable(name: "slice", arg: 1, scope: !13966, file: !2392, line: 440, type: !362)
!13971 = !DILocalVariable(name: "prio", arg: 2, scope: !13966, file: !2392, line: 440, type: !118)
!13972 = !DILocalVariable(name: "__i", scope: !13973, file: !2392, line: 442, type: !13974)
!13973 = distinct !DILexicalBlock(scope: !13966, file: !2392, line: 442, column: 2)
!13974 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !13975)
!13975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !13976)
!13976 = !{!13977}
!13977 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13975, file: !334, line: 33, baseType: !118, size: 32)
!13978 = !DILocalVariable(name: "__key", scope: !13973, file: !2392, line: 442, type: !13974)
!13979 = !DILocation(line: 0, scope: !13966)
!13980 = !DILocation(line: 0, scope: !13973)
!13981 = !DILocalVariable(name: "l", arg: 1, scope: !13982, file: !334, line: 136, type: !13985)
!13982 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !13983, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !13986)
!13983 = !DISubroutineType(types: !13984)
!13984 = !{!13974, !13985}
!13985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 32)
!13986 = !{!13981, !13987}
!13987 = !DILocalVariable(name: "k", scope: !13982, file: !334, line: 139, type: !13974)
!13988 = !DILocation(line: 0, scope: !13982, inlinedAt: !13989)
!13989 = distinct !DILocation(line: 442, column: 2, scope: !13973)
!13990 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !13995)
!13991 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6137, file: !6137, line: 42, type: !6138, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !13992)
!13992 = !{!13993, !13994}
!13993 = !DILocalVariable(name: "key", scope: !13991, file: !6137, line: 44, type: !32)
!13994 = !DILocalVariable(name: "tmp", scope: !13991, file: !6137, line: 53, type: !32)
!13995 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !13989)
!13996 = !{i64 1994390}
!13997 = !DILocation(line: 0, scope: !13991, inlinedAt: !13995)
!13998 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !13989)
!13999 = distinct !DILexicalBlock(scope: !14000, file: !334, line: 148, column: 2)
!14000 = distinct !DILexicalBlock(scope: !13982, file: !334, line: 148, column: 2)
!14001 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !13989)
!14002 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !13989)
!14003 = distinct !DILexicalBlock(scope: !13999, file: !334, line: 148, column: 2)
!14004 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !13989)
!14005 = !DILocation(line: 443, column: 29, scope: !14006)
!14006 = distinct !DILexicalBlock(scope: !14007, file: !2392, line: 442, column: 26)
!14007 = distinct !DILexicalBlock(scope: !13973, file: !2392, line: 442, column: 2)
!14008 = !DILocation(line: 444, column: 17, scope: !14006)
!14009 = !DILocation(line: 445, column: 51, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !14006, file: !2392, line: 445, column: 7)
!14011 = !DILocation(line: 445, column: 7, scope: !14006)
!14012 = !DILocation(line: 0, scope: !14006)
!14013 = !DILocation(line: 451, column: 18, scope: !14006)
!14014 = !DILocation(line: 452, column: 3, scope: !14006)
!14015 = !DILocalVariable(name: "key", arg: 2, scope: !14016, file: !334, line: 190, type: !13974)
!14016 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !14017, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14019)
!14017 = !DISubroutineType(types: !14018)
!14018 = !{null, !13985, !13974}
!14019 = !{!14020, !14015}
!14020 = !DILocalVariable(name: "l", arg: 1, scope: !14016, file: !334, line: 189, type: !13985)
!14021 = !DILocation(line: 0, scope: !14016, inlinedAt: !14022)
!14022 = distinct !DILocation(line: 442, column: 2, scope: !14007)
!14023 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !14022)
!14024 = distinct !DILexicalBlock(scope: !14025, file: !334, line: 194, column: 2)
!14025 = distinct !DILexicalBlock(scope: !14016, file: !334, line: 194, column: 2)
!14026 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !14022)
!14027 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !14022)
!14028 = distinct !DILexicalBlock(scope: !14024, file: !334, line: 194, column: 2)
!14029 = !DILocalVariable(name: "key", arg: 1, scope: !14030, file: !6137, line: 84, type: !32)
!14030 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6137, file: !6137, line: 84, type: !6148, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14031)
!14031 = !{!14029}
!14032 = !DILocation(line: 0, scope: !14030, inlinedAt: !14033)
!14033 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !14022)
!14034 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !14033)
!14035 = !{i64 1995207}
!14036 = !DILocation(line: 454, column: 1, scope: !13966)
!14037 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3417, file: !3417, line: 389, type: !7357, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14038)
!14038 = !{!14039}
!14039 = !DILocalVariable(name: "t", arg: 1, scope: !14037, file: !3417, line: 389, type: !156)
!14040 = !DILocation(line: 0, scope: !14037)
!14041 = !DILocalVariable(name: "t", arg: 1, scope: !14042, file: !3417, line: 102, type: !213)
!14042 = distinct !DISubprogram(name: "z_tmcvt", scope: !3417, file: !3417, line: 102, type: !3425, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14043)
!14043 = !{!14041, !14044, !14045, !14046, !14047, !14048, !14049, !14050, !14051, !14052, !14053}
!14044 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14042, file: !3417, line: 102, type: !156)
!14045 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14042, file: !3417, line: 103, type: !156)
!14046 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14042, file: !3417, line: 103, type: !146)
!14047 = !DILocalVariable(name: "result32", arg: 5, scope: !14042, file: !3417, line: 104, type: !146)
!14048 = !DILocalVariable(name: "round_up", arg: 6, scope: !14042, file: !3417, line: 104, type: !146)
!14049 = !DILocalVariable(name: "round_off", arg: 7, scope: !14042, file: !3417, line: 105, type: !146)
!14050 = !DILocalVariable(name: "mul_ratio", scope: !14042, file: !3417, line: 107, type: !146)
!14051 = !DILocalVariable(name: "div_ratio", scope: !14042, file: !3417, line: 109, type: !146)
!14052 = !DILocalVariable(name: "off", scope: !14042, file: !3417, line: 116, type: !213)
!14053 = !DILocalVariable(name: "rdivisor", scope: !14054, file: !3417, line: 119, type: !156)
!14054 = distinct !DILexicalBlock(scope: !14055, file: !3417, line: 118, column: 18)
!14055 = distinct !DILexicalBlock(scope: !14042, file: !3417, line: 118, column: 6)
!14056 = !DILocation(line: 0, scope: !14042, inlinedAt: !14057)
!14057 = distinct !DILocation(line: 392, column: 9, scope: !14037)
!14058 = !DILocation(line: 143, column: 25, scope: !14059, inlinedAt: !14057)
!14059 = distinct !DILexicalBlock(scope: !14060, file: !3417, line: 142, column: 17)
!14060 = distinct !DILexicalBlock(scope: !14061, file: !3417, line: 142, column: 7)
!14061 = distinct !DILexicalBlock(scope: !14062, file: !3417, line: 141, column: 24)
!14062 = distinct !DILexicalBlock(scope: !14063, file: !3417, line: 141, column: 13)
!14063 = distinct !DILexicalBlock(scope: !14042, file: !3417, line: 134, column: 6)
!14064 = !DILocation(line: 392, column: 2, scope: !14037)
!14065 = distinct !DISubprogram(name: "z_time_slice", scope: !2392, file: !2392, line: 502, type: !8011, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14066)
!14066 = !{!14067, !14068}
!14067 = !DILocalVariable(name: "ticks", arg: 1, scope: !14065, file: !2392, line: 502, type: !118)
!14068 = !DILocalVariable(name: "key", scope: !14065, file: !2392, line: 511, type: !13974)
!14069 = !DILocation(line: 0, scope: !14065)
!14070 = !DILocation(line: 0, scope: !13982, inlinedAt: !14071)
!14071 = distinct !DILocation(line: 511, column: 25, scope: !14065)
!14072 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !14073)
!14073 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !14071)
!14074 = !DILocation(line: 0, scope: !13991, inlinedAt: !14073)
!14075 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !14071)
!14076 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !14071)
!14077 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !14071)
!14078 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !14071)
!14079 = !DILocation(line: 514, column: 6, scope: !14080)
!14080 = distinct !DILexicalBlock(scope: !14065, file: !2392, line: 514, column: 6)
!14081 = !DILocation(line: 514, column: 25, scope: !14080)
!14082 = !DILocation(line: 514, column: 22, scope: !14080)
!14083 = !DILocation(line: 514, column: 6, scope: !14065)
!14084 = !DILocation(line: 515, column: 3, scope: !14085)
!14085 = distinct !DILexicalBlock(scope: !14080, file: !2392, line: 514, column: 35)
!14086 = !DILocation(line: 0, scope: !14016, inlinedAt: !14087)
!14087 = distinct !DILocation(line: 516, column: 3, scope: !14085)
!14088 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !14087)
!14089 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !14087)
!14090 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !14087)
!14091 = !DILocation(line: 0, scope: !14030, inlinedAt: !14092)
!14092 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !14087)
!14093 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !14092)
!14094 = !DILocation(line: 517, column: 3, scope: !14085)
!14095 = !DILocation(line: 519, column: 18, scope: !14065)
!14096 = !DILocation(line: 522, column: 6, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14065, file: !2392, line: 522, column: 6)
!14098 = !DILocation(line: 522, column: 27, scope: !14097)
!14099 = !DILocation(line: 522, column: 30, scope: !14097)
!14100 = !DILocation(line: 522, column: 6, scope: !14065)
!14101 = !DILocation(line: 523, column: 30, scope: !14102)
!14102 = distinct !DILexicalBlock(scope: !14103, file: !2392, line: 523, column: 7)
!14103 = distinct !DILexicalBlock(scope: !14097, file: !2392, line: 522, column: 51)
!14104 = !DILocation(line: 523, column: 13, scope: !14102)
!14105 = !DILocation(line: 523, column: 7, scope: !14103)
!14106 = !DILocation(line: 530, column: 10, scope: !14107)
!14107 = distinct !DILexicalBlock(scope: !14102, file: !2392, line: 523, column: 43)
!14108 = !DILocation(line: 531, column: 3, scope: !14107)
!14109 = !DILocation(line: 532, column: 30, scope: !14110)
!14110 = distinct !DILexicalBlock(scope: !14102, file: !2392, line: 531, column: 10)
!14111 = !DILocation(line: 535, column: 29, scope: !14112)
!14112 = distinct !DILexicalBlock(scope: !14097, file: !2392, line: 534, column: 9)
!14113 = !DILocation(line: 0, scope: !14016, inlinedAt: !14114)
!14114 = distinct !DILocation(line: 537, column: 2, scope: !14065)
!14115 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !14114)
!14116 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !14114)
!14117 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !14114)
!14118 = !DILocation(line: 0, scope: !14030, inlinedAt: !14119)
!14119 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !14114)
!14120 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !14119)
!14121 = !DILocation(line: 538, column: 1, scope: !14065)
!14122 = distinct !DISubprogram(name: "sliceable", scope: !2392, file: !2392, line: 468, type: !14123, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14125)
!14123 = !DISubroutineType(types: !14124)
!14124 = !{!146, !2285}
!14125 = !{!14126, !14127}
!14126 = !DILocalVariable(name: "thread", arg: 1, scope: !14122, file: !2392, line: 468, type: !2285)
!14127 = !DILocalVariable(name: "ret", scope: !14122, file: !2392, line: 470, type: !146)
!14128 = !DILocation(line: 0, scope: !14122)
!14129 = !DILocation(line: 470, column: 13, scope: !14122)
!14130 = !DILocation(line: 471, column: 3, scope: !14122)
!14131 = !DILocation(line: 471, column: 7, scope: !14122)
!14132 = !DILocation(line: 472, column: 3, scope: !14122)
!14133 = !DILocation(line: 472, column: 37, scope: !14122)
!14134 = !DILocation(line: 472, column: 24, scope: !14122)
!14135 = !DILocation(line: 472, column: 43, scope: !14122)
!14136 = !DILocation(line: 472, column: 7, scope: !14122)
!14137 = !DILocation(line: 473, column: 3, scope: !14122)
!14138 = !DILocation(line: 473, column: 7, scope: !14122)
!14139 = !DILocation(line: 473, column: 6, scope: !14122)
!14140 = !DILocation(line: 479, column: 2, scope: !14122)
!14141 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2392, file: !2392, line: 482, type: !14142, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14144)
!14142 = !DISubroutineType(types: !14143)
!14143 = !{!13974, !13974}
!14144 = !{!14145, !14146}
!14145 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14141, file: !2392, line: 482, type: !13974)
!14146 = !DILocalVariable(name: "curr", scope: !14141, file: !2392, line: 484, type: !2285)
!14147 = !DILocation(line: 0, scope: !14141)
!14148 = !DILocation(line: 484, column: 26, scope: !14141)
!14149 = !DILocation(line: 493, column: 7, scope: !14150)
!14150 = distinct !DILexicalBlock(scope: !14141, file: !2392, line: 493, column: 6)
!14151 = !DILocation(line: 493, column: 6, scope: !14141)
!14152 = !DILocation(line: 494, column: 3, scope: !14153)
!14153 = distinct !DILexicalBlock(scope: !14150, file: !2392, line: 493, column: 49)
!14154 = !DILocation(line: 495, column: 2, scope: !14153)
!14155 = !DILocation(line: 496, column: 2, scope: !14141)
!14156 = !DILocation(line: 499, column: 1, scope: !14141)
!14157 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12360, file: !12360, line: 106, type: !14123, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14158)
!14158 = !{!14159, !14160}
!14159 = !DILocalVariable(name: "thread", arg: 1, scope: !14157, file: !12360, line: 106, type: !2285)
!14160 = !DILocalVariable(name: "state", scope: !14157, file: !12360, line: 108, type: !143)
!14161 = !DILocation(line: 0, scope: !14157)
!14162 = !DILocation(line: 108, column: 31, scope: !14157)
!14163 = !DILocation(line: 110, column: 16, scope: !14157)
!14164 = !DILocation(line: 111, column: 41, scope: !14157)
!14165 = !DILocation(line: 110, column: 2, scope: !14157)
!14166 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2392, file: !2392, line: 393, type: !13940, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14167)
!14167 = !{!14168}
!14168 = !DILocalVariable(name: "thread", arg: 1, scope: !14166, file: !2392, line: 393, type: !2285)
!14169 = !DILocation(line: 0, scope: !14166)
!14170 = !DILocation(line: 395, column: 6, scope: !14171)
!14171 = distinct !DILexicalBlock(scope: !14166, file: !2392, line: 395, column: 6)
!14172 = !DILocation(line: 395, column: 6, scope: !14166)
!14173 = !DILocalVariable(name: "thread", arg: 1, scope: !14174, file: !2392, line: 264, type: !2285)
!14174 = distinct !DISubprogram(name: "dequeue_thread", scope: !2392, file: !2392, line: 264, type: !13940, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14175)
!14175 = !{!14173}
!14176 = !DILocation(line: 0, scope: !14174, inlinedAt: !14177)
!14177 = distinct !DILocation(line: 396, column: 3, scope: !14178)
!14178 = distinct !DILexicalBlock(scope: !14171, file: !2392, line: 395, column: 34)
!14179 = !DILocation(line: 266, column: 15, scope: !14174, inlinedAt: !14177)
!14180 = !DILocation(line: 266, column: 28, scope: !14174, inlinedAt: !14177)
!14181 = !DILocalVariable(name: "thread", arg: 1, scope: !14182, file: !2392, line: 232, type: !2285)
!14182 = distinct !DISubprogram(name: "runq_remove", scope: !2392, file: !2392, line: 232, type: !13940, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14183)
!14183 = !{!14181}
!14184 = !DILocation(line: 0, scope: !14182, inlinedAt: !14185)
!14185 = distinct !DILocation(line: 268, column: 3, scope: !14186, inlinedAt: !14177)
!14186 = distinct !DILexicalBlock(scope: !14187, file: !2392, line: 267, column: 35)
!14187 = distinct !DILexicalBlock(scope: !14174, file: !2392, line: 267, column: 6)
!14188 = !DILocation(line: 234, column: 2, scope: !14182, inlinedAt: !14185)
!14189 = !DILocation(line: 397, column: 2, scope: !14178)
!14190 = !DILocalVariable(name: "thread", arg: 1, scope: !14191, file: !2392, line: 250, type: !2285)
!14191 = distinct !DISubprogram(name: "queue_thread", scope: !2392, file: !2392, line: 250, type: !13940, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14192)
!14192 = !{!14190}
!14193 = !DILocation(line: 0, scope: !14191, inlinedAt: !14194)
!14194 = distinct !DILocation(line: 398, column: 2, scope: !14166)
!14195 = !DILocation(line: 252, column: 15, scope: !14191, inlinedAt: !14194)
!14196 = !DILocation(line: 252, column: 28, scope: !14191, inlinedAt: !14194)
!14197 = !DILocalVariable(name: "thread", arg: 1, scope: !14198, file: !2392, line: 227, type: !2285)
!14198 = distinct !DISubprogram(name: "runq_add", scope: !2392, file: !2392, line: 227, type: !13940, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14199)
!14199 = !{!14197}
!14200 = !DILocation(line: 0, scope: !14198, inlinedAt: !14201)
!14201 = distinct !DILocation(line: 254, column: 3, scope: !14202, inlinedAt: !14194)
!14202 = distinct !DILexicalBlock(scope: !14203, file: !2392, line: 253, column: 35)
!14203 = distinct !DILexicalBlock(scope: !14191, file: !2392, line: 253, column: 6)
!14204 = !DILocalVariable(name: "pq", arg: 1, scope: !14205, file: !2392, line: 181, type: !14208)
!14205 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2392, file: !2392, line: 181, type: !14206, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14209)
!14206 = !DISubroutineType(types: !14207)
!14207 = !{null, !14208, !2285}
!14208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 32)
!14209 = !{!14204, !14210, !14211}
!14210 = !DILocalVariable(name: "thread", arg: 2, scope: !14205, file: !2392, line: 182, type: !2285)
!14211 = !DILocalVariable(name: "t", scope: !14205, file: !2392, line: 184, type: !2285)
!14212 = !DILocation(line: 0, scope: !14205, inlinedAt: !14213)
!14213 = distinct !DILocation(line: 229, column: 2, scope: !14198, inlinedAt: !14201)
!14214 = !DILocation(line: 186, column: 2, scope: !14215, inlinedAt: !14213)
!14215 = distinct !DILexicalBlock(scope: !14216, file: !2392, line: 186, column: 2)
!14216 = distinct !DILexicalBlock(scope: !14205, file: !2392, line: 186, column: 2)
!14217 = !DILocation(line: 186, column: 2, scope: !14216, inlinedAt: !14213)
!14218 = !DILocation(line: 186, column: 2, scope: !14219, inlinedAt: !14213)
!14219 = distinct !DILexicalBlock(scope: !14215, file: !2392, line: 186, column: 2)
!14220 = !DILocation(line: 188, column: 2, scope: !14221, inlinedAt: !14213)
!14221 = distinct !DILexicalBlock(scope: !14205, file: !2392, line: 188, column: 2)
!14222 = !DILocation(line: 188, column: 2, scope: !14223, inlinedAt: !14213)
!14223 = distinct !DILexicalBlock(scope: !14221, file: !2392, line: 188, column: 2)
!14224 = !DILocation(line: 0, scope: !14221, inlinedAt: !14213)
!14225 = !DILocation(line: 189, column: 7, scope: !14226, inlinedAt: !14213)
!14226 = distinct !DILexicalBlock(scope: !14227, file: !2392, line: 189, column: 7)
!14227 = distinct !DILexicalBlock(scope: !14223, file: !2392, line: 188, column: 56)
!14228 = !DILocation(line: 189, column: 35, scope: !14226, inlinedAt: !14213)
!14229 = !DILocation(line: 189, column: 7, scope: !14227, inlinedAt: !14213)
!14230 = !DILocation(line: 191, column: 21, scope: !14231, inlinedAt: !14213)
!14231 = distinct !DILexicalBlock(scope: !14226, file: !2392, line: 189, column: 40)
!14232 = !DILocation(line: 190, column: 4, scope: !14231, inlinedAt: !14213)
!14233 = !DILocation(line: 192, column: 4, scope: !14231, inlinedAt: !14213)
!14234 = distinct !{!14234, !14220, !14235}
!14235 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !14213)
!14236 = !DILocation(line: 196, column: 37, scope: !14205, inlinedAt: !14213)
!14237 = !DILocation(line: 196, column: 2, scope: !14205, inlinedAt: !14213)
!14238 = !DILocation(line: 197, column: 1, scope: !14205, inlinedAt: !14213)
!14239 = !DILocation(line: 399, column: 25, scope: !14166)
!14240 = !DILocation(line: 399, column: 22, scope: !14166)
!14241 = !DILocation(line: 399, column: 2, scope: !14166)
!14242 = !DILocation(line: 400, column: 1, scope: !14166)
!14243 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12360, file: !12360, line: 136, type: !14123, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14244)
!14244 = !{!14245}
!14245 = !DILocalVariable(name: "thread", arg: 1, scope: !14243, file: !12360, line: 136, type: !2285)
!14246 = !DILocation(line: 0, scope: !14243)
!14247 = !DILocation(line: 138, column: 9, scope: !14243)
!14248 = !DILocation(line: 138, column: 2, scope: !14243)
!14249 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2392, file: !2392, line: 1137, type: !14206, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14250)
!14250 = !{!14251, !14252}
!14251 = !DILocalVariable(name: "pq", arg: 1, scope: !14249, file: !2392, line: 1137, type: !14208)
!14252 = !DILocalVariable(name: "thread", arg: 2, scope: !14249, file: !2392, line: 1137, type: !2285)
!14253 = !DILocation(line: 0, scope: !14249)
!14254 = !DILocation(line: 1139, column: 2, scope: !14255)
!14255 = distinct !DILexicalBlock(scope: !14256, file: !2392, line: 1139, column: 2)
!14256 = distinct !DILexicalBlock(scope: !14249, file: !2392, line: 1139, column: 2)
!14257 = !DILocation(line: 1139, column: 2, scope: !14256)
!14258 = !DILocation(line: 1139, column: 2, scope: !14259)
!14259 = distinct !DILexicalBlock(scope: !14255, file: !2392, line: 1139, column: 2)
!14260 = !DILocation(line: 1141, column: 33, scope: !14249)
!14261 = !DILocation(line: 1141, column: 2, scope: !14249)
!14262 = !DILocation(line: 1142, column: 1, scope: !14249)
!14263 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12360, file: !12360, line: 83, type: !14123, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14264)
!14264 = !{!14265}
!14265 = !DILocalVariable(name: "thread", arg: 1, scope: !14263, file: !12360, line: 83, type: !2285)
!14266 = !DILocation(line: 0, scope: !14263)
!14267 = !DILocation(line: 89, column: 16, scope: !14263)
!14268 = !DILocation(line: 89, column: 2, scope: !14263)
!14269 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !235, file: !235, line: 294, type: !14270, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14272)
!14270 = !DISubroutineType(types: !14271)
!14271 = !{!2388, !14208}
!14272 = !{!14273}
!14273 = !DILocalVariable(name: "list", arg: 1, scope: !14269, file: !235, line: 294, type: !14208)
!14274 = !DILocation(line: 0, scope: !14269)
!14275 = !DILocation(line: 296, column: 9, scope: !14269)
!14276 = !DILocation(line: 296, column: 49, scope: !14269)
!14277 = !DILocation(line: 296, column: 2, scope: !14269)
!14278 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !235, file: !235, line: 443, type: !14279, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14281)
!14279 = !DISubroutineType(types: !14280)
!14280 = !{null, !2388, !2388}
!14281 = !{!14282, !14283, !14284}
!14282 = !DILocalVariable(name: "successor", arg: 1, scope: !14278, file: !235, line: 443, type: !2388)
!14283 = !DILocalVariable(name: "node", arg: 2, scope: !14278, file: !235, line: 443, type: !2388)
!14284 = !DILocalVariable(name: "prev", scope: !14278, file: !235, line: 445, type: !14285)
!14285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2388)
!14286 = !DILocation(line: 0, scope: !14278)
!14287 = !DILocation(line: 445, column: 39, scope: !14278)
!14288 = !DILocation(line: 447, column: 8, scope: !14278)
!14289 = !DILocation(line: 447, column: 13, scope: !14278)
!14290 = !DILocation(line: 448, column: 8, scope: !14278)
!14291 = !DILocation(line: 448, column: 13, scope: !14278)
!14292 = !DILocation(line: 449, column: 8, scope: !14278)
!14293 = !DILocation(line: 449, column: 13, scope: !14278)
!14294 = !DILocation(line: 450, column: 18, scope: !14278)
!14295 = !DILocation(line: 451, column: 1, scope: !14278)
!14296 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !235, file: !235, line: 341, type: !14297, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14299)
!14297 = !DISubroutineType(types: !14298)
!14298 = !{!2388, !14208, !2388}
!14299 = !{!14300, !14301}
!14300 = !DILocalVariable(name: "list", arg: 1, scope: !14296, file: !235, line: 341, type: !14208)
!14301 = !DILocalVariable(name: "node", arg: 2, scope: !14296, file: !235, line: 342, type: !2388)
!14302 = !DILocation(line: 0, scope: !14296)
!14303 = !DILocation(line: 344, column: 15, scope: !14296)
!14304 = !DILocation(line: 344, column: 9, scope: !14296)
!14305 = !DILocation(line: 344, column: 26, scope: !14296)
!14306 = !DILocation(line: 344, column: 2, scope: !14296)
!14307 = distinct !DISubprogram(name: "sys_dlist_append", scope: !235, file: !235, line: 404, type: !14308, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14310)
!14308 = !DISubroutineType(types: !14309)
!14309 = !{null, !14208, !2388}
!14310 = !{!14311, !14312, !14313}
!14311 = !DILocalVariable(name: "list", arg: 1, scope: !14307, file: !235, line: 404, type: !14208)
!14312 = !DILocalVariable(name: "node", arg: 2, scope: !14307, file: !235, line: 404, type: !2388)
!14313 = !DILocalVariable(name: "tail", scope: !14307, file: !235, line: 406, type: !14285)
!14314 = !DILocation(line: 0, scope: !14307)
!14315 = !DILocation(line: 406, column: 34, scope: !14307)
!14316 = !DILocation(line: 408, column: 8, scope: !14307)
!14317 = !DILocation(line: 408, column: 13, scope: !14307)
!14318 = !DILocation(line: 409, column: 8, scope: !14307)
!14319 = !DILocation(line: 409, column: 13, scope: !14307)
!14320 = !DILocation(line: 411, column: 8, scope: !14307)
!14321 = !DILocation(line: 411, column: 13, scope: !14307)
!14322 = !DILocation(line: 412, column: 13, scope: !14307)
!14323 = !DILocation(line: 413, column: 1, scope: !14307)
!14324 = distinct !DISubprogram(name: "update_cache", scope: !2392, file: !2392, line: 559, type: !8011, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14325)
!14325 = !{!14326, !14327}
!14326 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14324, file: !2392, line: 559, type: !118)
!14327 = !DILocalVariable(name: "thread", scope: !14324, file: !2392, line: 562, type: !2285)
!14328 = !DILocation(line: 0, scope: !14324)
!14329 = !DILocation(line: 239, column: 9, scope: !14330, inlinedAt: !14333)
!14330 = distinct !DISubprogram(name: "runq_best", scope: !2392, file: !2392, line: 237, type: !14331, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !2101)
!14331 = !DISubroutineType(types: !14332)
!14332 = !{!2285}
!14333 = distinct !DILocation(line: 314, column: 28, scope: !14334, inlinedAt: !14337)
!14334 = distinct !DISubprogram(name: "next_up", scope: !2392, file: !2392, line: 312, type: !14331, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14335)
!14335 = !{!14336}
!14336 = !DILocalVariable(name: "thread", scope: !14334, file: !2392, line: 314, type: !2285)
!14337 = distinct !DILocation(line: 562, column: 28, scope: !14324)
!14338 = !DILocation(line: 0, scope: !14334, inlinedAt: !14337)
!14339 = !DILocation(line: 340, column: 17, scope: !14334, inlinedAt: !14337)
!14340 = !DILocation(line: 340, column: 9, scope: !14334, inlinedAt: !14337)
!14341 = !DILocalVariable(name: "thread", arg: 1, scope: !14342, file: !2392, line: 127, type: !2285)
!14342 = distinct !DISubprogram(name: "should_preempt", scope: !2392, file: !2392, line: 127, type: !14343, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14345)
!14343 = !DISubroutineType(types: !14344)
!14344 = !{!146, !2285, !118}
!14345 = !{!14341, !14346}
!14346 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14342, file: !2392, line: 128, type: !118)
!14347 = !DILocation(line: 0, scope: !14342, inlinedAt: !14348)
!14348 = distinct !DILocation(line: 564, column: 6, scope: !14349)
!14349 = distinct !DILexicalBlock(scope: !14324, file: !2392, line: 564, column: 6)
!14350 = !DILocation(line: 133, column: 17, scope: !14351, inlinedAt: !14348)
!14351 = distinct !DILexicalBlock(scope: !14342, file: !2392, line: 133, column: 6)
!14352 = !DILocation(line: 0, scope: !14349)
!14353 = !DILocation(line: 133, column: 6, scope: !14342, inlinedAt: !14348)
!14354 = !DILocation(line: 137, column: 2, scope: !14355, inlinedAt: !14348)
!14355 = distinct !DILexicalBlock(scope: !14356, file: !2392, line: 137, column: 2)
!14356 = distinct !DILexicalBlock(scope: !14342, file: !2392, line: 137, column: 2)
!14357 = !DILocation(line: 137, column: 2, scope: !14356, inlinedAt: !14348)
!14358 = !DILocation(line: 137, column: 2, scope: !14359, inlinedAt: !14348)
!14359 = distinct !DILexicalBlock(scope: !14355, file: !2392, line: 137, column: 2)
!14360 = !DILocation(line: 140, column: 6, scope: !14361, inlinedAt: !14348)
!14361 = distinct !DILexicalBlock(scope: !14342, file: !2392, line: 140, column: 6)
!14362 = !DILocation(line: 140, column: 6, scope: !14342, inlinedAt: !14348)
!14363 = !DILocation(line: 150, column: 9, scope: !14364, inlinedAt: !14348)
!14364 = distinct !DILexicalBlock(scope: !14342, file: !2392, line: 149, column: 6)
!14365 = !DILocation(line: 149, column: 6, scope: !14342, inlinedAt: !14348)
!14366 = !DILocation(line: 157, column: 6, scope: !14367, inlinedAt: !14348)
!14367 = distinct !DILexicalBlock(scope: !14342, file: !2392, line: 157, column: 6)
!14368 = !DILocation(line: 564, column: 6, scope: !14324)
!14369 = !DILocation(line: 566, column: 14, scope: !14370)
!14370 = distinct !DILexicalBlock(scope: !14371, file: !2392, line: 566, column: 7)
!14371 = distinct !DILexicalBlock(scope: !14349, file: !2392, line: 564, column: 42)
!14372 = !DILocation(line: 566, column: 7, scope: !14371)
!14373 = !DILocation(line: 567, column: 4, scope: !14374)
!14374 = distinct !DILexicalBlock(scope: !14370, file: !2392, line: 566, column: 27)
!14375 = !DILocation(line: 568, column: 3, scope: !14374)
!14376 = !DILocation(line: 585, column: 1, scope: !14324)
!14377 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2392, file: !2392, line: 1144, type: !14378, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14380)
!14378 = !DISubroutineType(types: !14379)
!14379 = !{!2285, !14208}
!14380 = !{!14381, !14382, !14383}
!14381 = !DILocalVariable(name: "pq", arg: 1, scope: !14377, file: !2392, line: 1144, type: !14208)
!14382 = !DILocalVariable(name: "thread", scope: !14377, file: !2392, line: 1146, type: !2285)
!14383 = !DILocalVariable(name: "n", scope: !14377, file: !2392, line: 1147, type: !2388)
!14384 = !DILocation(line: 0, scope: !14377)
!14385 = !DILocation(line: 1147, column: 19, scope: !14377)
!14386 = !DILocation(line: 1152, column: 2, scope: !14377)
!14387 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12360, file: !12360, line: 115, type: !14123, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14388)
!14388 = !{!14389}
!14389 = !DILocalVariable(name: "thread", arg: 1, scope: !14387, file: !12360, line: 115, type: !2285)
!14390 = !DILocation(line: 0, scope: !14387)
!14391 = !DILocation(line: 117, column: 46, scope: !14387)
!14392 = !DILocation(line: 117, column: 10, scope: !14387)
!14393 = !DILocation(line: 117, column: 9, scope: !14387)
!14394 = !DILocation(line: 117, column: 2, scope: !14387)
!14395 = distinct !DISubprogram(name: "is_preempt", scope: !2392, file: !2392, line: 62, type: !13958, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14396)
!14396 = !{!14397}
!14397 = !DILocalVariable(name: "thread", arg: 1, scope: !14395, file: !2392, line: 62, type: !2285)
!14398 = !DILocation(line: 0, scope: !14395)
!14399 = !DILocation(line: 65, column: 22, scope: !14395)
!14400 = !DILocation(line: 65, column: 30, scope: !14395)
!14401 = !DILocation(line: 65, column: 2, scope: !14395)
!14402 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12767, file: !12767, line: 35, type: !14403, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14407)
!14403 = !DISubroutineType(types: !14404)
!14404 = !{!146, !14405}
!14405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14406, size: 32)
!14406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2336)
!14407 = !{!14408}
!14408 = !DILocalVariable(name: "to", arg: 1, scope: !14402, file: !12767, line: 35, type: !14405)
!14409 = !DILocation(line: 0, scope: !14402)
!14410 = !DILocation(line: 37, column: 35, scope: !14402)
!14411 = !DILocation(line: 37, column: 10, scope: !14402)
!14412 = !DILocation(line: 37, column: 9, scope: !14402)
!14413 = !DILocation(line: 37, column: 2, scope: !14402)
!14414 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !235, file: !235, line: 225, type: !14415, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14419)
!14415 = !DISubroutineType(types: !14416)
!14416 = !{!146, !14417}
!14417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14418, size: 32)
!14418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2295)
!14419 = !{!14420}
!14420 = !DILocalVariable(name: "node", arg: 1, scope: !14414, file: !235, line: 225, type: !14417)
!14421 = !DILocation(line: 0, scope: !14414)
!14422 = !DILocation(line: 227, column: 15, scope: !14414)
!14423 = !DILocation(line: 227, column: 20, scope: !14414)
!14424 = !DILocation(line: 227, column: 2, scope: !14414)
!14425 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !235, file: !235, line: 325, type: !14297, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14426)
!14426 = !{!14427, !14428}
!14427 = !DILocalVariable(name: "list", arg: 1, scope: !14425, file: !235, line: 325, type: !14208)
!14428 = !DILocalVariable(name: "node", arg: 2, scope: !14425, file: !235, line: 326, type: !2388)
!14429 = !DILocation(line: 0, scope: !14425)
!14430 = !DILocation(line: 328, column: 24, scope: !14425)
!14431 = !DILocation(line: 328, column: 15, scope: !14425)
!14432 = !DILocation(line: 328, column: 9, scope: !14425)
!14433 = !DILocation(line: 328, column: 45, scope: !14425)
!14434 = !DILocation(line: 328, column: 2, scope: !14425)
!14435 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !235, file: !235, line: 266, type: !14436, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14438)
!14436 = !DISubroutineType(types: !14437)
!14437 = !{!146, !14208}
!14438 = !{!14439}
!14439 = !DILocalVariable(name: "list", arg: 1, scope: !14435, file: !235, line: 266, type: !14208)
!14440 = !DILocation(line: 0, scope: !14435)
!14441 = !DILocation(line: 268, column: 15, scope: !14435)
!14442 = !DILocation(line: 268, column: 20, scope: !14435)
!14443 = !DILocation(line: 268, column: 2, scope: !14435)
!14444 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !235, file: !235, line: 496, type: !14445, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14447)
!14445 = !DISubroutineType(types: !14446)
!14446 = !{null, !2388}
!14447 = !{!14448, !14449, !14450}
!14448 = !DILocalVariable(name: "node", arg: 1, scope: !14444, file: !235, line: 496, type: !2388)
!14449 = !DILocalVariable(name: "prev", scope: !14444, file: !235, line: 498, type: !14285)
!14450 = !DILocalVariable(name: "next", scope: !14444, file: !235, line: 499, type: !14285)
!14451 = !DILocation(line: 0, scope: !14444)
!14452 = !DILocation(line: 498, column: 34, scope: !14444)
!14453 = !DILocation(line: 499, column: 34, scope: !14444)
!14454 = !DILocation(line: 501, column: 8, scope: !14444)
!14455 = !DILocation(line: 501, column: 13, scope: !14444)
!14456 = !DILocation(line: 502, column: 8, scope: !14444)
!14457 = !DILocation(line: 502, column: 13, scope: !14444)
!14458 = !DILocation(line: 503, column: 2, scope: !14444)
!14459 = !DILocation(line: 504, column: 1, scope: !14444)
!14460 = distinct !DISubprogram(name: "sys_dnode_init", scope: !235, file: !235, line: 211, type: !14445, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14461)
!14461 = !{!14462}
!14462 = !DILocalVariable(name: "node", arg: 1, scope: !14460, file: !235, line: 211, type: !2388)
!14463 = !DILocation(line: 0, scope: !14460)
!14464 = !DILocation(line: 213, column: 8, scope: !14460)
!14465 = !DILocation(line: 213, column: 13, scope: !14460)
!14466 = !DILocation(line: 214, column: 8, scope: !14460)
!14467 = !DILocation(line: 214, column: 13, scope: !14460)
!14468 = !DILocation(line: 215, column: 1, scope: !14460)
!14469 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12360, file: !12360, line: 131, type: !14470, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14472)
!14470 = !DISubroutineType(types: !14471)
!14471 = !{!146, !2285, !156}
!14472 = !{!14473, !14474}
!14473 = !DILocalVariable(name: "thread", arg: 1, scope: !14469, file: !12360, line: 131, type: !2285)
!14474 = !DILocalVariable(name: "state", arg: 2, scope: !14469, file: !12360, line: 131, type: !156)
!14475 = !DILocation(line: 0, scope: !14469)
!14476 = !DILocation(line: 133, column: 23, scope: !14469)
!14477 = !DILocation(line: 133, column: 10, scope: !14469)
!14478 = !DILocation(line: 133, column: 36, scope: !14469)
!14479 = !DILocation(line: 133, column: 45, scope: !14469)
!14480 = !DILocation(line: 133, column: 2, scope: !14469)
!14481 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12360, file: !12360, line: 211, type: !14482, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14484)
!14482 = !DISubroutineType(types: !14483)
!14483 = !{!146, !118, !118}
!14484 = !{!14485, !14486}
!14485 = !DILocalVariable(name: "prio", arg: 1, scope: !14481, file: !12360, line: 211, type: !118)
!14486 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14481, file: !12360, line: 211, type: !118)
!14487 = !DILocation(line: 0, scope: !14481)
!14488 = !DILocation(line: 213, column: 9, scope: !14481)
!14489 = !DILocation(line: 213, column: 2, scope: !14481)
!14490 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12360, file: !12360, line: 206, type: !14482, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14491)
!14491 = !{!14492, !14493}
!14492 = !DILocalVariable(name: "prio1", arg: 1, scope: !14490, file: !12360, line: 206, type: !118)
!14493 = !DILocalVariable(name: "prio2", arg: 2, scope: !14490, file: !12360, line: 206, type: !118)
!14494 = !DILocation(line: 0, scope: !14490)
!14495 = !DILocation(line: 208, column: 15, scope: !14490)
!14496 = !DILocation(line: 208, column: 2, scope: !14490)
!14497 = distinct !DISubprogram(name: "z_ready_thread", scope: !2392, file: !2392, line: 635, type: !13940, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14498)
!14498 = !{!14499, !14500, !14502}
!14499 = !DILocalVariable(name: "thread", arg: 1, scope: !14497, file: !2392, line: 635, type: !2285)
!14500 = !DILocalVariable(name: "__i", scope: !14501, file: !2392, line: 637, type: !13974)
!14501 = distinct !DILexicalBlock(scope: !14497, file: !2392, line: 637, column: 2)
!14502 = !DILocalVariable(name: "__key", scope: !14501, file: !2392, line: 637, type: !13974)
!14503 = !DILocation(line: 0, scope: !14497)
!14504 = !DILocation(line: 0, scope: !14501)
!14505 = !DILocation(line: 0, scope: !13982, inlinedAt: !14506)
!14506 = distinct !DILocation(line: 637, column: 2, scope: !14501)
!14507 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !14508)
!14508 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !14506)
!14509 = !DILocation(line: 0, scope: !13991, inlinedAt: !14508)
!14510 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !14506)
!14511 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !14506)
!14512 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !14506)
!14513 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !14506)
!14514 = !DILocation(line: 639, column: 4, scope: !14515)
!14515 = distinct !DILexicalBlock(scope: !14516, file: !2392, line: 638, column: 41)
!14516 = distinct !DILexicalBlock(scope: !14517, file: !2392, line: 638, column: 7)
!14517 = distinct !DILexicalBlock(scope: !14518, file: !2392, line: 637, column: 26)
!14518 = distinct !DILexicalBlock(scope: !14501, file: !2392, line: 637, column: 2)
!14519 = !DILocation(line: 0, scope: !14016, inlinedAt: !14520)
!14520 = distinct !DILocation(line: 637, column: 2, scope: !14518)
!14521 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !14520)
!14522 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !14520)
!14523 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !14520)
!14524 = !DILocation(line: 0, scope: !14030, inlinedAt: !14525)
!14525 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !14520)
!14526 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !14525)
!14527 = !DILocation(line: 642, column: 1, scope: !14497)
!14528 = distinct !DISubprogram(name: "ready_thread", scope: !2392, file: !2392, line: 617, type: !13940, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14529)
!14529 = !{!14530}
!14530 = !DILocalVariable(name: "thread", arg: 1, scope: !14528, file: !2392, line: 617, type: !2285)
!14531 = !DILocation(line: 0, scope: !14528)
!14532 = !DILocation(line: 626, column: 7, scope: !14533)
!14533 = distinct !DILexicalBlock(scope: !14528, file: !2392, line: 626, column: 6)
!14534 = !DILocation(line: 626, column: 34, scope: !14533)
!14535 = !DILocation(line: 626, column: 37, scope: !14533)
!14536 = !DILocation(line: 626, column: 6, scope: !14528)
!14537 = !DILocation(line: 0, scope: !14191, inlinedAt: !14538)
!14538 = distinct !DILocation(line: 629, column: 3, scope: !14539)
!14539 = distinct !DILexicalBlock(scope: !14533, file: !2392, line: 626, column: 64)
!14540 = !DILocation(line: 252, column: 15, scope: !14191, inlinedAt: !14538)
!14541 = !DILocation(line: 252, column: 28, scope: !14191, inlinedAt: !14538)
!14542 = !DILocation(line: 0, scope: !14198, inlinedAt: !14543)
!14543 = distinct !DILocation(line: 254, column: 3, scope: !14202, inlinedAt: !14538)
!14544 = !DILocation(line: 0, scope: !14205, inlinedAt: !14545)
!14545 = distinct !DILocation(line: 229, column: 2, scope: !14198, inlinedAt: !14543)
!14546 = !DILocation(line: 186, column: 2, scope: !14215, inlinedAt: !14545)
!14547 = !DILocation(line: 186, column: 2, scope: !14216, inlinedAt: !14545)
!14548 = !DILocation(line: 186, column: 2, scope: !14219, inlinedAt: !14545)
!14549 = !DILocation(line: 188, column: 2, scope: !14221, inlinedAt: !14545)
!14550 = !DILocation(line: 188, column: 2, scope: !14223, inlinedAt: !14545)
!14551 = !DILocation(line: 0, scope: !14221, inlinedAt: !14545)
!14552 = !DILocation(line: 189, column: 7, scope: !14226, inlinedAt: !14545)
!14553 = !DILocation(line: 189, column: 35, scope: !14226, inlinedAt: !14545)
!14554 = !DILocation(line: 189, column: 7, scope: !14227, inlinedAt: !14545)
!14555 = !DILocation(line: 191, column: 21, scope: !14231, inlinedAt: !14545)
!14556 = !DILocation(line: 190, column: 4, scope: !14231, inlinedAt: !14545)
!14557 = !DILocation(line: 192, column: 4, scope: !14231, inlinedAt: !14545)
!14558 = distinct !{!14558, !14549, !14559}
!14559 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !14545)
!14560 = !DILocation(line: 196, column: 37, scope: !14205, inlinedAt: !14545)
!14561 = !DILocation(line: 196, column: 2, scope: !14205, inlinedAt: !14545)
!14562 = !DILocation(line: 197, column: 1, scope: !14205, inlinedAt: !14545)
!14563 = !DILocation(line: 630, column: 3, scope: !14539)
!14564 = !DILocation(line: 632, column: 2, scope: !14539)
!14565 = !DILocation(line: 633, column: 1, scope: !14528)
!14566 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12360, file: !12360, line: 120, type: !14123, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14567)
!14567 = !{!14568}
!14568 = !DILocalVariable(name: "thread", arg: 1, scope: !14566, file: !12360, line: 120, type: !2285)
!14569 = !DILocation(line: 0, scope: !14566)
!14570 = !DILocation(line: 122, column: 12, scope: !14566)
!14571 = !DILocation(line: 122, column: 62, scope: !14566)
!14572 = !DILocation(line: 123, column: 4, scope: !14566)
!14573 = !DILocation(line: 122, column: 2, scope: !14566)
!14574 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2392, file: !2392, line: 644, type: !13940, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14575)
!14575 = !{!14576, !14577, !14579}
!14576 = !DILocalVariable(name: "thread", arg: 1, scope: !14574, file: !2392, line: 644, type: !2285)
!14577 = !DILocalVariable(name: "__i", scope: !14578, file: !2392, line: 646, type: !13974)
!14578 = distinct !DILexicalBlock(scope: !14574, file: !2392, line: 646, column: 2)
!14579 = !DILocalVariable(name: "__key", scope: !14578, file: !2392, line: 646, type: !13974)
!14580 = !DILocation(line: 0, scope: !14574)
!14581 = !DILocation(line: 0, scope: !14578)
!14582 = !DILocation(line: 0, scope: !13982, inlinedAt: !14583)
!14583 = distinct !DILocation(line: 646, column: 2, scope: !14578)
!14584 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !14585)
!14585 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !14583)
!14586 = !DILocation(line: 0, scope: !13991, inlinedAt: !14585)
!14587 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !14583)
!14588 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !14583)
!14589 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !14583)
!14590 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !14583)
!14591 = !DILocation(line: 647, column: 3, scope: !14592)
!14592 = distinct !DILexicalBlock(scope: !14593, file: !2392, line: 646, column: 26)
!14593 = distinct !DILexicalBlock(scope: !14578, file: !2392, line: 646, column: 2)
!14594 = !DILocation(line: 0, scope: !14016, inlinedAt: !14595)
!14595 = distinct !DILocation(line: 646, column: 2, scope: !14593)
!14596 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !14595)
!14597 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !14595)
!14598 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !14595)
!14599 = !DILocation(line: 0, scope: !14030, inlinedAt: !14600)
!14600 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !14595)
!14601 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !14600)
!14602 = !DILocation(line: 649, column: 1, scope: !14574)
!14603 = distinct !DISubprogram(name: "z_sched_start", scope: !2392, file: !2392, line: 651, type: !13940, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14604)
!14604 = !{!14605, !14606}
!14605 = !DILocalVariable(name: "thread", arg: 1, scope: !14603, file: !2392, line: 651, type: !2285)
!14606 = !DILocalVariable(name: "key", scope: !14603, file: !2392, line: 653, type: !13974)
!14607 = !DILocation(line: 0, scope: !14603)
!14608 = !DILocation(line: 0, scope: !13982, inlinedAt: !14609)
!14609 = distinct !DILocation(line: 653, column: 25, scope: !14603)
!14610 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !14611)
!14611 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !14609)
!14612 = !DILocation(line: 0, scope: !13991, inlinedAt: !14611)
!14613 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !14609)
!14614 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !14609)
!14615 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !14609)
!14616 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !14609)
!14617 = !DILocation(line: 655, column: 6, scope: !14618)
!14618 = distinct !DILexicalBlock(scope: !14603, file: !2392, line: 655, column: 6)
!14619 = !DILocation(line: 655, column: 6, scope: !14603)
!14620 = !DILocation(line: 0, scope: !14016, inlinedAt: !14621)
!14621 = distinct !DILocation(line: 656, column: 3, scope: !14622)
!14622 = distinct !DILexicalBlock(scope: !14618, file: !2392, line: 655, column: 36)
!14623 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !14621)
!14624 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !14621)
!14625 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !14621)
!14626 = !DILocation(line: 0, scope: !14030, inlinedAt: !14627)
!14627 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !14621)
!14628 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !14627)
!14629 = !DILocation(line: 657, column: 3, scope: !14622)
!14630 = !DILocation(line: 660, column: 2, scope: !14603)
!14631 = !DILocation(line: 661, column: 2, scope: !14603)
!14632 = !DILocation(line: 662, column: 2, scope: !14603)
!14633 = !DILocation(line: 663, column: 1, scope: !14603)
!14634 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12360, file: !12360, line: 126, type: !14123, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14635)
!14635 = !{!14636}
!14636 = !DILocalVariable(name: "thread", arg: 1, scope: !14634, file: !12360, line: 126, type: !2285)
!14637 = !DILocation(line: 0, scope: !14634)
!14638 = !DILocation(line: 128, column: 23, scope: !14634)
!14639 = !DILocation(line: 128, column: 36, scope: !14634)
!14640 = !DILocation(line: 128, column: 56, scope: !14634)
!14641 = !DILocation(line: 128, column: 2, scope: !14634)
!14642 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12360, file: !12360, line: 155, type: !13940, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14643)
!14643 = !{!14644}
!14644 = !DILocalVariable(name: "thread", arg: 1, scope: !14642, file: !12360, line: 155, type: !2285)
!14645 = !DILocation(line: 0, scope: !14642)
!14646 = !DILocation(line: 157, column: 15, scope: !14642)
!14647 = !DILocation(line: 157, column: 28, scope: !14642)
!14648 = !DILocation(line: 158, column: 1, scope: !14642)
!14649 = distinct !DISubprogram(name: "z_reschedule", scope: !2392, file: !2392, line: 967, type: !14017, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14650)
!14650 = !{!14651, !14652}
!14651 = !DILocalVariable(name: "lock", arg: 1, scope: !14649, file: !2392, line: 967, type: !13985)
!14652 = !DILocalVariable(name: "key", arg: 2, scope: !14649, file: !2392, line: 967, type: !13974)
!14653 = !DILocation(line: 0, scope: !14649)
!14654 = !DILocation(line: 969, column: 6, scope: !14655)
!14655 = distinct !DILexicalBlock(scope: !14649, file: !2392, line: 969, column: 6)
!14656 = !DILocation(line: 969, column: 23, scope: !14655)
!14657 = !DILocation(line: 969, column: 26, scope: !14655)
!14658 = !DILocation(line: 969, column: 6, scope: !14649)
!14659 = !DILocalVariable(name: "key", arg: 2, scope: !14660, file: !12464, line: 193, type: !13974)
!14660 = distinct !DISubprogram(name: "z_swap", scope: !12464, file: !12464, line: 193, type: !14661, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14663)
!14661 = !DISubroutineType(types: !14662)
!14662 = !{!118, !13985, !13974}
!14663 = !{!14664, !14659}
!14664 = !DILocalVariable(name: "lock", arg: 1, scope: !14660, file: !12464, line: 193, type: !13985)
!14665 = !DILocation(line: 0, scope: !14660, inlinedAt: !14666)
!14666 = distinct !DILocation(line: 970, column: 3, scope: !14667)
!14667 = distinct !DILexicalBlock(scope: !14655, file: !2392, line: 969, column: 39)
!14668 = !DILocalVariable(name: "l", arg: 1, scope: !14669, file: !334, line: 221, type: !13985)
!14669 = distinct !DISubprogram(name: "k_spin_release", scope: !334, file: !334, line: 221, type: !14670, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14672)
!14670 = !DISubroutineType(types: !14671)
!14671 = !{null, !13985}
!14672 = !{!14668}
!14673 = !DILocation(line: 0, scope: !14669, inlinedAt: !14674)
!14674 = distinct !DILocation(line: 195, column: 2, scope: !14660, inlinedAt: !14666)
!14675 = !DILocation(line: 225, column: 2, scope: !14676, inlinedAt: !14674)
!14676 = distinct !DILexicalBlock(scope: !14677, file: !334, line: 225, column: 2)
!14677 = distinct !DILexicalBlock(scope: !14669, file: !334, line: 225, column: 2)
!14678 = !DILocation(line: 225, column: 2, scope: !14677, inlinedAt: !14674)
!14679 = !DILocation(line: 225, column: 2, scope: !14680, inlinedAt: !14674)
!14680 = distinct !DILexicalBlock(scope: !14676, file: !334, line: 225, column: 2)
!14681 = !DILocation(line: 196, column: 9, scope: !14660, inlinedAt: !14666)
!14682 = !DILocation(line: 971, column: 2, scope: !14667)
!14683 = !DILocation(line: 0, scope: !14016, inlinedAt: !14684)
!14684 = distinct !DILocation(line: 972, column: 3, scope: !14685)
!14685 = distinct !DILexicalBlock(scope: !14655, file: !2392, line: 971, column: 9)
!14686 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !14684)
!14687 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !14684)
!14688 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !14684)
!14689 = !DILocation(line: 0, scope: !14030, inlinedAt: !14690)
!14690 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !14684)
!14691 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !14690)
!14692 = !DILocation(line: 975, column: 1, scope: !14649)
!14693 = distinct !DISubprogram(name: "resched", scope: !2392, file: !2392, line: 940, type: !14694, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14696)
!14694 = !DISubroutineType(types: !14695)
!14695 = !{!146, !156}
!14696 = !{!14697}
!14697 = !DILocalVariable(name: "key", arg: 1, scope: !14693, file: !2392, line: 940, type: !156)
!14698 = !DILocation(line: 0, scope: !14693)
!14699 = !DILocalVariable(name: "key", arg: 1, scope: !14700, file: !6137, line: 112, type: !32)
!14700 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6137, file: !6137, line: 112, type: !14701, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14703)
!14701 = !DISubroutineType(types: !14702)
!14702 = !{!146, !32}
!14703 = !{!14699}
!14704 = !DILocation(line: 0, scope: !14700, inlinedAt: !14705)
!14705 = distinct !DILocation(line: 946, column: 9, scope: !14693)
!14706 = !DILocation(line: 115, column: 13, scope: !14700, inlinedAt: !14705)
!14707 = !DILocation(line: 946, column: 32, scope: !14693)
!14708 = !DILocation(line: 1031, column: 3, scope: !14709, inlinedAt: !14712)
!14709 = distinct !DISubprogram(name: "__get_IPSR", scope: !6311, file: !6311, line: 1027, type: !6398, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14710)
!14710 = !{!14711}
!14711 = !DILocalVariable(name: "result", scope: !14709, file: !6311, line: 1029, type: !156)
!14712 = distinct !DILocation(line: 48, column: 10, scope: !14713, inlinedAt: !14714)
!14713 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7137, file: !7137, line: 46, type: !7138, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !2101)
!14714 = distinct !DILocation(line: 946, column: 36, scope: !14693)
!14715 = !{i64 2872129}
!14716 = !DILocation(line: 0, scope: !14709, inlinedAt: !14712)
!14717 = !DILocation(line: 48, column: 9, scope: !14713, inlinedAt: !14714)
!14718 = !DILocation(line: 946, column: 2, scope: !14693)
!14719 = distinct !DISubprogram(name: "need_swap", scope: !2392, file: !2392, line: 953, type: !7138, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14720)
!14720 = !{!14721}
!14721 = !DILocalVariable(name: "new_thread", scope: !14719, file: !2392, line: 959, type: !2285)
!14722 = !DILocation(line: 962, column: 31, scope: !14719)
!14723 = !DILocation(line: 0, scope: !14719)
!14724 = !DILocation(line: 963, column: 23, scope: !14719)
!14725 = !DILocation(line: 963, column: 20, scope: !14719)
!14726 = !DILocation(line: 963, column: 2, scope: !14719)
!14727 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12464, file: !12464, line: 181, type: !6321, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14728)
!14728 = !{!14729, !14730}
!14729 = !DILocalVariable(name: "key", arg: 1, scope: !14727, file: !12464, line: 181, type: !32)
!14730 = !DILocalVariable(name: "ret", scope: !14727, file: !12464, line: 183, type: !118)
!14731 = !DILocation(line: 0, scope: !14727)
!14732 = !DILocation(line: 185, column: 8, scope: !14727)
!14733 = !DILocation(line: 186, column: 2, scope: !14727)
!14734 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2392, file: !2392, line: 665, type: !13940, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14735)
!14735 = !{!14736, !14737, !14739}
!14736 = !DILocalVariable(name: "thread", arg: 1, scope: !14734, file: !2392, line: 665, type: !2285)
!14737 = !DILocalVariable(name: "__i", scope: !14738, file: !2392, line: 671, type: !13974)
!14738 = distinct !DILexicalBlock(scope: !14734, file: !2392, line: 671, column: 2)
!14739 = !DILocalVariable(name: "__key", scope: !14738, file: !2392, line: 671, type: !13974)
!14740 = !DILocation(line: 0, scope: !14734)
!14741 = !DILocation(line: 669, column: 8, scope: !14734)
!14742 = !DILocation(line: 0, scope: !14738)
!14743 = !DILocation(line: 0, scope: !13982, inlinedAt: !14744)
!14744 = distinct !DILocation(line: 671, column: 2, scope: !14738)
!14745 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !14746)
!14746 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !14744)
!14747 = !DILocation(line: 0, scope: !13991, inlinedAt: !14746)
!14748 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !14744)
!14749 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !14744)
!14750 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !14744)
!14751 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !14744)
!14752 = !DILocation(line: 672, column: 7, scope: !14753)
!14753 = distinct !DILexicalBlock(scope: !14754, file: !2392, line: 672, column: 7)
!14754 = distinct !DILexicalBlock(scope: !14755, file: !2392, line: 671, column: 26)
!14755 = distinct !DILexicalBlock(scope: !14738, file: !2392, line: 671, column: 2)
!14756 = !DILocation(line: 672, column: 7, scope: !14754)
!14757 = !DILocation(line: 0, scope: !14174, inlinedAt: !14758)
!14758 = distinct !DILocation(line: 673, column: 4, scope: !14759)
!14759 = distinct !DILexicalBlock(scope: !14753, file: !2392, line: 672, column: 35)
!14760 = !DILocation(line: 266, column: 15, scope: !14174, inlinedAt: !14758)
!14761 = !DILocation(line: 266, column: 28, scope: !14174, inlinedAt: !14758)
!14762 = !DILocation(line: 0, scope: !14182, inlinedAt: !14763)
!14763 = distinct !DILocation(line: 268, column: 3, scope: !14186, inlinedAt: !14758)
!14764 = !DILocation(line: 234, column: 2, scope: !14182, inlinedAt: !14763)
!14765 = !DILocation(line: 674, column: 3, scope: !14759)
!14766 = !DILocation(line: 675, column: 3, scope: !14754)
!14767 = !DILocation(line: 676, column: 26, scope: !14754)
!14768 = !DILocation(line: 676, column: 23, scope: !14754)
!14769 = !DILocation(line: 676, column: 3, scope: !14754)
!14770 = !DILocation(line: 0, scope: !14016, inlinedAt: !14771)
!14771 = distinct !DILocation(line: 671, column: 2, scope: !14755)
!14772 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !14771)
!14773 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !14771)
!14774 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !14771)
!14775 = !DILocation(line: 0, scope: !14030, inlinedAt: !14776)
!14776 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !14771)
!14777 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !14776)
!14778 = !DILocation(line: 679, column: 16, scope: !14779)
!14779 = distinct !DILexicalBlock(scope: !14734, file: !2392, line: 679, column: 6)
!14780 = !DILocation(line: 679, column: 13, scope: !14779)
!14781 = !DILocation(line: 679, column: 6, scope: !14734)
!14782 = !DILocation(line: 680, column: 3, scope: !14783)
!14783 = distinct !DILexicalBlock(scope: !14779, file: !2392, line: 679, column: 26)
!14784 = !DILocation(line: 681, column: 2, scope: !14783)
!14785 = !DILocation(line: 684, column: 1, scope: !14734)
!14786 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12767, file: !12767, line: 52, type: !13958, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14787)
!14787 = !{!14788}
!14788 = !DILocalVariable(name: "thread", arg: 1, scope: !14786, file: !12767, line: 52, type: !2285)
!14789 = !DILocation(line: 0, scope: !14786)
!14790 = !DILocation(line: 54, column: 39, scope: !14786)
!14791 = !DILocation(line: 54, column: 9, scope: !14786)
!14792 = !DILocation(line: 54, column: 2, scope: !14786)
!14793 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12360, file: !12360, line: 141, type: !13940, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14794)
!14794 = !{!14795}
!14795 = !DILocalVariable(name: "thread", arg: 1, scope: !14793, file: !12360, line: 141, type: !2285)
!14796 = !DILocation(line: 0, scope: !14793)
!14797 = !DILocation(line: 143, column: 15, scope: !14793)
!14798 = !DILocation(line: 143, column: 28, scope: !14793)
!14799 = !DILocation(line: 146, column: 1, scope: !14793)
!14800 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12360, file: !12360, line: 73, type: !365, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !2101)
!14801 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !14802)
!14802 = distinct !DILocation(line: 75, column: 30, scope: !14800)
!14803 = !DILocation(line: 0, scope: !13991, inlinedAt: !14802)
!14804 = !DILocation(line: 75, column: 9, scope: !14800)
!14805 = !DILocation(line: 76, column: 1, scope: !14800)
!14806 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2392, file: !2392, line: 977, type: !6408, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14807)
!14807 = !{!14808}
!14808 = !DILocalVariable(name: "key", arg: 1, scope: !14806, file: !2392, line: 977, type: !156)
!14809 = !DILocation(line: 0, scope: !14806)
!14810 = !DILocation(line: 979, column: 6, scope: !14811)
!14811 = distinct !DILexicalBlock(scope: !14806, file: !2392, line: 979, column: 6)
!14812 = !DILocation(line: 979, column: 6, scope: !14806)
!14813 = !DILocation(line: 980, column: 3, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14811, file: !2392, line: 979, column: 20)
!14815 = !DILocation(line: 981, column: 2, scope: !14814)
!14816 = !DILocation(line: 0, scope: !14030, inlinedAt: !14817)
!14817 = distinct !DILocation(line: 982, column: 3, scope: !14818)
!14818 = distinct !DILexicalBlock(scope: !14811, file: !2392, line: 981, column: 9)
!14819 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !14817)
!14820 = !DILocation(line: 985, column: 1, scope: !14806)
!14821 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2392, file: !2392, line: 695, type: !13940, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14822)
!14822 = !{!14823, !14824}
!14823 = !DILocalVariable(name: "thread", arg: 1, scope: !14821, file: !2392, line: 695, type: !2285)
!14824 = !DILocalVariable(name: "key", scope: !14821, file: !2392, line: 699, type: !13974)
!14825 = !DILocation(line: 0, scope: !14821)
!14826 = !DILocation(line: 0, scope: !13982, inlinedAt: !14827)
!14827 = distinct !DILocation(line: 699, column: 25, scope: !14821)
!14828 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !14829)
!14829 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !14827)
!14830 = !DILocation(line: 0, scope: !13991, inlinedAt: !14829)
!14831 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !14827)
!14832 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !14827)
!14833 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !14827)
!14834 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !14827)
!14835 = !DILocation(line: 702, column: 7, scope: !14836)
!14836 = distinct !DILexicalBlock(scope: !14821, file: !2392, line: 702, column: 6)
!14837 = !DILocation(line: 702, column: 6, scope: !14821)
!14838 = !DILocation(line: 0, scope: !14016, inlinedAt: !14839)
!14839 = distinct !DILocation(line: 703, column: 3, scope: !14840)
!14840 = distinct !DILexicalBlock(scope: !14836, file: !2392, line: 702, column: 38)
!14841 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !14839)
!14842 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !14839)
!14843 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !14839)
!14844 = !DILocation(line: 0, scope: !14030, inlinedAt: !14845)
!14845 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !14839)
!14846 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !14845)
!14847 = !DILocation(line: 704, column: 3, scope: !14840)
!14848 = !DILocation(line: 707, column: 2, scope: !14821)
!14849 = !DILocation(line: 708, column: 2, scope: !14821)
!14850 = !DILocation(line: 710, column: 2, scope: !14821)
!14851 = !DILocation(line: 713, column: 1, scope: !14821)
!14852 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12360, file: !12360, line: 96, type: !14123, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14853)
!14853 = !{!14854}
!14854 = !DILocalVariable(name: "thread", arg: 1, scope: !14852, file: !12360, line: 96, type: !2285)
!14855 = !DILocation(line: 0, scope: !14852)
!14856 = !DILocation(line: 98, column: 23, scope: !14852)
!14857 = !DILocation(line: 98, column: 36, scope: !14852)
!14858 = !DILocation(line: 98, column: 57, scope: !14852)
!14859 = !DILocation(line: 98, column: 2, scope: !14852)
!14860 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12360, file: !12360, line: 148, type: !13940, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14861)
!14861 = !{!14862}
!14862 = !DILocalVariable(name: "thread", arg: 1, scope: !14860, file: !12360, line: 148, type: !2285)
!14863 = !DILocation(line: 0, scope: !14860)
!14864 = !DILocation(line: 150, column: 15, scope: !14860)
!14865 = !DILocation(line: 150, column: 28, scope: !14860)
!14866 = !DILocation(line: 153, column: 1, scope: !14860)
!14867 = distinct !DISubprogram(name: "z_pend_thread", scope: !2392, file: !2392, line: 770, type: !14868, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14874)
!14868 = !DISubroutineType(types: !14869)
!14869 = !{null, !2285, !2316, !14870}
!14870 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !14871)
!14871 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !14872)
!14872 = !{!14873}
!14873 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14871, file: !114, line: 66, baseType: !113, size: 64)
!14874 = !{!14875, !14876, !14877, !14878, !14880}
!14875 = !DILocalVariable(name: "thread", arg: 1, scope: !14867, file: !2392, line: 770, type: !2285)
!14876 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14867, file: !2392, line: 770, type: !2316)
!14877 = !DILocalVariable(name: "timeout", arg: 3, scope: !14867, file: !2392, line: 771, type: !14870)
!14878 = !DILocalVariable(name: "__i", scope: !14879, file: !2392, line: 774, type: !13974)
!14879 = distinct !DILexicalBlock(scope: !14867, file: !2392, line: 774, column: 2)
!14880 = !DILocalVariable(name: "__key", scope: !14879, file: !2392, line: 774, type: !13974)
!14881 = !DILocation(line: 0, scope: !14867)
!14882 = !DILocation(line: 773, column: 2, scope: !14883)
!14883 = distinct !DILexicalBlock(scope: !14884, file: !2392, line: 773, column: 2)
!14884 = distinct !DILexicalBlock(scope: !14867, file: !2392, line: 773, column: 2)
!14885 = !DILocation(line: 773, column: 2, scope: !14884)
!14886 = !DILocation(line: 773, column: 2, scope: !14887)
!14887 = distinct !DILexicalBlock(scope: !14883, file: !2392, line: 773, column: 2)
!14888 = !DILocation(line: 0, scope: !14879)
!14889 = !DILocation(line: 0, scope: !13982, inlinedAt: !14890)
!14890 = distinct !DILocation(line: 774, column: 2, scope: !14879)
!14891 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !14892)
!14892 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !14890)
!14893 = !DILocation(line: 0, scope: !13991, inlinedAt: !14892)
!14894 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !14890)
!14895 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !14890)
!14896 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !14890)
!14897 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !14890)
!14898 = !DILocation(line: 775, column: 3, scope: !14899)
!14899 = distinct !DILexicalBlock(scope: !14900, file: !2392, line: 774, column: 26)
!14900 = distinct !DILexicalBlock(scope: !14879, file: !2392, line: 774, column: 2)
!14901 = !DILocation(line: 0, scope: !14016, inlinedAt: !14902)
!14902 = distinct !DILocation(line: 774, column: 2, scope: !14900)
!14903 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !14902)
!14904 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !14902)
!14905 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !14902)
!14906 = !DILocation(line: 0, scope: !14030, inlinedAt: !14907)
!14907 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !14902)
!14908 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !14907)
!14909 = !DILocation(line: 777, column: 1, scope: !14867)
!14910 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2392, file: !2392, line: 79, type: !14123, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14911)
!14911 = !{!14912}
!14912 = !DILocalVariable(name: "thread", arg: 1, scope: !14910, file: !2392, line: 79, type: !2285)
!14913 = !DILocation(line: 0, scope: !14910)
!14914 = !DILocation(line: 81, column: 23, scope: !14910)
!14915 = !DILocation(line: 81, column: 36, scope: !14910)
!14916 = !DILocation(line: 81, column: 53, scope: !14910)
!14917 = !DILocation(line: 81, column: 2, scope: !14910)
!14918 = distinct !DISubprogram(name: "pend_locked", scope: !2392, file: !2392, line: 760, type: !14868, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14919)
!14919 = !{!14920, !14921, !14922}
!14920 = !DILocalVariable(name: "thread", arg: 1, scope: !14918, file: !2392, line: 760, type: !2285)
!14921 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14918, file: !2392, line: 760, type: !2316)
!14922 = !DILocalVariable(name: "timeout", arg: 3, scope: !14918, file: !2392, line: 761, type: !14870)
!14923 = !DILocation(line: 0, scope: !14918)
!14924 = !DILocation(line: 766, column: 2, scope: !14918)
!14925 = !DILocation(line: 767, column: 2, scope: !14918)
!14926 = !DILocation(line: 768, column: 1, scope: !14918)
!14927 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2392, file: !2392, line: 740, type: !14928, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14930)
!14928 = !DISubroutineType(types: !14929)
!14929 = !{null, !2285, !2316}
!14930 = !{!14931, !14932}
!14931 = !DILocalVariable(name: "thread", arg: 1, scope: !14927, file: !2392, line: 740, type: !2285)
!14932 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14927, file: !2392, line: 740, type: !2316)
!14933 = !DILocation(line: 0, scope: !14927)
!14934 = !DILocation(line: 742, column: 2, scope: !14927)
!14935 = !DILocation(line: 743, column: 2, scope: !14927)
!14936 = !DILocation(line: 747, column: 13, scope: !14937)
!14937 = distinct !DILexicalBlock(scope: !14927, file: !2392, line: 747, column: 6)
!14938 = !DILocation(line: 747, column: 6, scope: !14927)
!14939 = !DILocation(line: 748, column: 16, scope: !14940)
!14940 = distinct !DILexicalBlock(scope: !14937, file: !2392, line: 747, column: 22)
!14941 = !DILocation(line: 748, column: 26, scope: !14940)
!14942 = !DILocation(line: 749, column: 28, scope: !14940)
!14943 = !DILocation(line: 0, scope: !14205, inlinedAt: !14944)
!14944 = distinct !DILocation(line: 749, column: 3, scope: !14940)
!14945 = !DILocation(line: 186, column: 2, scope: !14215, inlinedAt: !14944)
!14946 = !DILocation(line: 186, column: 2, scope: !14216, inlinedAt: !14944)
!14947 = !DILocation(line: 186, column: 2, scope: !14219, inlinedAt: !14944)
!14948 = !DILocation(line: 188, column: 2, scope: !14221, inlinedAt: !14944)
!14949 = !DILocation(line: 188, column: 2, scope: !14223, inlinedAt: !14944)
!14950 = !DILocation(line: 0, scope: !14221, inlinedAt: !14944)
!14951 = !DILocation(line: 189, column: 7, scope: !14226, inlinedAt: !14944)
!14952 = !DILocation(line: 189, column: 35, scope: !14226, inlinedAt: !14944)
!14953 = !DILocation(line: 189, column: 7, scope: !14227, inlinedAt: !14944)
!14954 = !DILocation(line: 191, column: 21, scope: !14231, inlinedAt: !14944)
!14955 = !DILocation(line: 190, column: 4, scope: !14231, inlinedAt: !14944)
!14956 = !DILocation(line: 192, column: 4, scope: !14231, inlinedAt: !14944)
!14957 = distinct !{!14957, !14948, !14958}
!14958 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !14944)
!14959 = !DILocation(line: 196, column: 37, scope: !14205, inlinedAt: !14944)
!14960 = !DILocation(line: 196, column: 2, scope: !14205, inlinedAt: !14944)
!14961 = !DILocation(line: 197, column: 1, scope: !14205, inlinedAt: !14944)
!14962 = !DILocation(line: 751, column: 1, scope: !14927)
!14963 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2392, file: !2392, line: 753, type: !14964, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14966)
!14964 = !DISubroutineType(types: !14965)
!14965 = !{null, !2285, !14870}
!14966 = !{!14967, !14968}
!14967 = !DILocalVariable(name: "thread", arg: 1, scope: !14963, file: !2392, line: 753, type: !2285)
!14968 = !DILocalVariable(name: "timeout", arg: 2, scope: !14963, file: !2392, line: 753, type: !14870)
!14969 = !DILocation(line: 0, scope: !14963)
!14970 = !DILocation(line: 755, column: 7, scope: !14971)
!14971 = distinct !DILexicalBlock(scope: !14963, file: !2392, line: 755, column: 6)
!14972 = !DILocation(line: 755, column: 6, scope: !14963)
!14973 = !DILocation(line: 756, column: 3, scope: !14974)
!14974 = distinct !DILexicalBlock(scope: !14971, file: !2392, line: 755, column: 41)
!14975 = !DILocation(line: 757, column: 2, scope: !14974)
!14976 = !DILocation(line: 758, column: 1, scope: !14963)
!14977 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12767, file: !12767, line: 47, type: !14964, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14978)
!14978 = !{!14979, !14980}
!14979 = !DILocalVariable(name: "thread", arg: 1, scope: !14977, file: !12767, line: 47, type: !2285)
!14980 = !DILocalVariable(name: "ticks", arg: 2, scope: !14977, file: !12767, line: 47, type: !14870)
!14981 = !DILocation(line: 0, scope: !14977)
!14982 = !DILocation(line: 49, column: 30, scope: !14977)
!14983 = !DILocation(line: 49, column: 2, scope: !14977)
!14984 = !DILocation(line: 50, column: 1, scope: !14977)
!14985 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2392, file: !2392, line: 795, type: !2342, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !14986)
!14986 = !{!14987, !14988, !14989, !14991, !14992}
!14987 = !DILocalVariable(name: "timeout", arg: 1, scope: !14985, file: !2392, line: 795, type: !2344)
!14988 = !DILocalVariable(name: "thread", scope: !14985, file: !2392, line: 797, type: !2285)
!14989 = !DILocalVariable(name: "__i", scope: !14990, file: !2392, line: 800, type: !13974)
!14990 = distinct !DILexicalBlock(scope: !14985, file: !2392, line: 800, column: 2)
!14991 = !DILocalVariable(name: "__key", scope: !14990, file: !2392, line: 800, type: !13974)
!14992 = !DILocalVariable(name: "killed", scope: !14993, file: !2392, line: 801, type: !146)
!14993 = distinct !DILexicalBlock(scope: !14994, file: !2392, line: 800, column: 26)
!14994 = distinct !DILexicalBlock(scope: !14990, file: !2392, line: 800, column: 2)
!14995 = !DILocation(line: 0, scope: !14985)
!14996 = !DILocation(line: 797, column: 28, scope: !14985)
!14997 = !DILocation(line: 0, scope: !14990)
!14998 = !DILocation(line: 0, scope: !13982, inlinedAt: !14999)
!14999 = distinct !DILocation(line: 800, column: 2, scope: !14990)
!15000 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !15001)
!15001 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !14999)
!15002 = !DILocation(line: 0, scope: !13991, inlinedAt: !15001)
!15003 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !14999)
!15004 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !14999)
!15005 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !14999)
!15006 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !14999)
!15007 = !DILocation(line: 801, column: 27, scope: !14993)
!15008 = !DILocation(line: 801, column: 32, scope: !14993)
!15009 = !DILocation(line: 801, column: 61, scope: !14993)
!15010 = !DILocation(line: 0, scope: !14993)
!15011 = !DILocation(line: 804, column: 7, scope: !14993)
!15012 = !DILocation(line: 805, column: 21, scope: !15013)
!15013 = distinct !DILexicalBlock(scope: !15014, file: !2392, line: 805, column: 8)
!15014 = distinct !DILexicalBlock(scope: !15015, file: !2392, line: 804, column: 16)
!15015 = distinct !DILexicalBlock(scope: !14993, file: !2392, line: 804, column: 7)
!15016 = !DILocation(line: 805, column: 31, scope: !15013)
!15017 = !DILocation(line: 805, column: 8, scope: !15014)
!15018 = !DILocation(line: 806, column: 5, scope: !15019)
!15019 = distinct !DILexicalBlock(scope: !15013, file: !2392, line: 805, column: 40)
!15020 = !DILocation(line: 807, column: 4, scope: !15019)
!15021 = !DILocation(line: 808, column: 4, scope: !15014)
!15022 = !DILocation(line: 809, column: 4, scope: !15014)
!15023 = !DILocation(line: 810, column: 4, scope: !15014)
!15024 = !DILocation(line: 811, column: 3, scope: !15014)
!15025 = !DILocation(line: 0, scope: !14016, inlinedAt: !15026)
!15026 = distinct !DILocation(line: 800, column: 2, scope: !14994)
!15027 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !15026)
!15028 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !15026)
!15029 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !15026)
!15030 = !DILocation(line: 0, scope: !14030, inlinedAt: !15031)
!15031 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !15026)
!15032 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !15031)
!15033 = !DILocation(line: 813, column: 1, scope: !14985)
!15034 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2392, file: !2392, line: 779, type: !13940, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15035)
!15035 = !{!15036}
!15036 = !DILocalVariable(name: "thread", arg: 1, scope: !15034, file: !2392, line: 779, type: !2285)
!15037 = !DILocation(line: 0, scope: !15034)
!15038 = !DILocation(line: 781, column: 21, scope: !15034)
!15039 = !DILocation(line: 781, column: 2, scope: !15034)
!15040 = !DILocation(line: 782, column: 2, scope: !15034)
!15041 = !DILocation(line: 783, column: 15, scope: !15034)
!15042 = !DILocation(line: 783, column: 25, scope: !15034)
!15043 = !DILocation(line: 784, column: 1, scope: !15034)
!15044 = distinct !DISubprogram(name: "pended_on_thread", scope: !2392, file: !2392, line: 724, type: !15045, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15047)
!15045 = !DISubroutineType(types: !15046)
!15046 = !{!2316, !2285}
!15047 = !{!15048}
!15048 = !DILocalVariable(name: "thread", arg: 1, scope: !15044, file: !2392, line: 724, type: !2285)
!15049 = !DILocation(line: 0, scope: !15044)
!15050 = !DILocation(line: 726, column: 2, scope: !15051)
!15051 = distinct !DILexicalBlock(scope: !15052, file: !2392, line: 726, column: 2)
!15052 = distinct !DILexicalBlock(scope: !15044, file: !2392, line: 726, column: 2)
!15053 = !DILocation(line: 726, column: 2, scope: !15052)
!15054 = !DILocation(line: 726, column: 2, scope: !15055)
!15055 = distinct !DILexicalBlock(scope: !15051, file: !2392, line: 726, column: 2)
!15056 = !DILocation(line: 728, column: 2, scope: !15044)
!15057 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12360, file: !12360, line: 165, type: !13940, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15058)
!15058 = !{!15059}
!15059 = !DILocalVariable(name: "thread", arg: 1, scope: !15057, file: !12360, line: 165, type: !2285)
!15060 = !DILocation(line: 0, scope: !15057)
!15061 = !DILocation(line: 167, column: 15, scope: !15057)
!15062 = !DILocation(line: 167, column: 28, scope: !15057)
!15063 = !DILocation(line: 168, column: 1, scope: !15057)
!15064 = distinct !DISubprogram(name: "unready_thread", scope: !2392, file: !2392, line: 731, type: !13940, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15065)
!15065 = !{!15066}
!15066 = !DILocalVariable(name: "thread", arg: 1, scope: !15064, file: !2392, line: 731, type: !2285)
!15067 = !DILocation(line: 0, scope: !15064)
!15068 = !DILocation(line: 733, column: 6, scope: !15069)
!15069 = distinct !DILexicalBlock(scope: !15064, file: !2392, line: 733, column: 6)
!15070 = !DILocation(line: 733, column: 6, scope: !15064)
!15071 = !DILocation(line: 0, scope: !14174, inlinedAt: !15072)
!15072 = distinct !DILocation(line: 734, column: 3, scope: !15073)
!15073 = distinct !DILexicalBlock(scope: !15069, file: !2392, line: 733, column: 34)
!15074 = !DILocation(line: 266, column: 15, scope: !14174, inlinedAt: !15072)
!15075 = !DILocation(line: 266, column: 28, scope: !14174, inlinedAt: !15072)
!15076 = !DILocation(line: 0, scope: !14182, inlinedAt: !15077)
!15077 = distinct !DILocation(line: 268, column: 3, scope: !14186, inlinedAt: !15072)
!15078 = !DILocation(line: 234, column: 2, scope: !14182, inlinedAt: !15077)
!15079 = !DILocation(line: 735, column: 2, scope: !15073)
!15080 = !DILocation(line: 736, column: 25, scope: !15064)
!15081 = !DILocation(line: 736, column: 22, scope: !15064)
!15082 = !DILocation(line: 736, column: 2, scope: !15064)
!15083 = !DILocation(line: 737, column: 1, scope: !15064)
!15084 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12360, file: !12360, line: 160, type: !13940, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15085)
!15085 = !{!15086}
!15086 = !DILocalVariable(name: "thread", arg: 1, scope: !15084, file: !12360, line: 160, type: !2285)
!15087 = !DILocation(line: 0, scope: !15084)
!15088 = !DILocation(line: 162, column: 15, scope: !15084)
!15089 = !DILocation(line: 162, column: 28, scope: !15084)
!15090 = !DILocation(line: 163, column: 1, scope: !15084)
!15091 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2392, file: !2392, line: 786, type: !13940, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15092)
!15092 = !{!15093, !15094, !15096}
!15093 = !DILocalVariable(name: "thread", arg: 1, scope: !15091, file: !2392, line: 786, type: !2285)
!15094 = !DILocalVariable(name: "__i", scope: !15095, file: !2392, line: 788, type: !13974)
!15095 = distinct !DILexicalBlock(scope: !15091, file: !2392, line: 788, column: 2)
!15096 = !DILocalVariable(name: "__key", scope: !15095, file: !2392, line: 788, type: !13974)
!15097 = !DILocation(line: 0, scope: !15091)
!15098 = !DILocation(line: 0, scope: !15095)
!15099 = !DILocation(line: 0, scope: !13982, inlinedAt: !15100)
!15100 = distinct !DILocation(line: 788, column: 2, scope: !15095)
!15101 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !15102)
!15102 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !15100)
!15103 = !DILocation(line: 0, scope: !13991, inlinedAt: !15102)
!15104 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !15100)
!15105 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !15100)
!15106 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !15100)
!15107 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !15100)
!15108 = !DILocation(line: 789, column: 3, scope: !15109)
!15109 = distinct !DILexicalBlock(scope: !15110, file: !2392, line: 788, column: 26)
!15110 = distinct !DILexicalBlock(scope: !15095, file: !2392, line: 788, column: 2)
!15111 = !DILocation(line: 0, scope: !14016, inlinedAt: !15112)
!15112 = distinct !DILocation(line: 788, column: 2, scope: !15110)
!15113 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !15112)
!15114 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !15112)
!15115 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !15112)
!15116 = !DILocation(line: 0, scope: !14030, inlinedAt: !15117)
!15117 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !15112)
!15118 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !15117)
!15119 = !DILocation(line: 791, column: 1, scope: !15091)
!15120 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2392, file: !2392, line: 816, type: !15121, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15123)
!15121 = !DISubroutineType(types: !15122)
!15122 = !{!118, !156, !2316, !14870}
!15123 = !{!15124, !15125, !15126, !15127, !15128, !15130}
!15124 = !DILocalVariable(name: "key", arg: 1, scope: !15120, file: !2392, line: 816, type: !156)
!15125 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15120, file: !2392, line: 816, type: !2316)
!15126 = !DILocalVariable(name: "timeout", arg: 3, scope: !15120, file: !2392, line: 816, type: !14870)
!15127 = !DILocalVariable(name: "ret", scope: !15120, file: !2392, line: 828, type: !118)
!15128 = !DILocalVariable(name: "__i", scope: !15129, file: !2392, line: 829, type: !13974)
!15129 = distinct !DILexicalBlock(scope: !15120, file: !2392, line: 829, column: 2)
!15130 = !DILocalVariable(name: "__key", scope: !15129, file: !2392, line: 829, type: !13974)
!15131 = !DILocation(line: 0, scope: !15120)
!15132 = !DILocation(line: 823, column: 14, scope: !15120)
!15133 = !DILocation(line: 823, column: 2, scope: !15120)
!15134 = !DILocation(line: 826, column: 20, scope: !15120)
!15135 = !DILocation(line: 826, column: 18, scope: !15120)
!15136 = !DILocation(line: 828, column: 12, scope: !15120)
!15137 = !DILocation(line: 0, scope: !15129)
!15138 = !DILocation(line: 0, scope: !13982, inlinedAt: !15139)
!15139 = distinct !DILocation(line: 829, column: 2, scope: !15129)
!15140 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !15141)
!15141 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !15139)
!15142 = !DILocation(line: 0, scope: !13991, inlinedAt: !15141)
!15143 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !15139)
!15144 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !15139)
!15145 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !15139)
!15146 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !15139)
!15147 = !DILocation(line: 830, column: 7, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !15149, file: !2392, line: 830, column: 7)
!15149 = distinct !DILexicalBlock(scope: !15150, file: !2392, line: 829, column: 26)
!15150 = distinct !DILexicalBlock(scope: !15129, file: !2392, line: 829, column: 2)
!15151 = !DILocation(line: 830, column: 26, scope: !15148)
!15152 = !DILocation(line: 830, column: 23, scope: !15148)
!15153 = !DILocation(line: 830, column: 7, scope: !15149)
!15154 = !DILocation(line: 831, column: 20, scope: !15155)
!15155 = distinct !DILexicalBlock(scope: !15148, file: !2392, line: 830, column: 36)
!15156 = !DILocation(line: 832, column: 3, scope: !15155)
!15157 = !DILocation(line: 0, scope: !14016, inlinedAt: !15158)
!15158 = distinct !DILocation(line: 829, column: 2, scope: !15150)
!15159 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !15158)
!15160 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !15158)
!15161 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !15158)
!15162 = !DILocation(line: 0, scope: !14030, inlinedAt: !15163)
!15163 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !15158)
!15164 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !15163)
!15165 = !DILocation(line: 834, column: 2, scope: !15120)
!15166 = distinct !DISubprogram(name: "z_pend_curr", scope: !2392, file: !2392, line: 840, type: !15167, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15169)
!15167 = !DISubroutineType(types: !15168)
!15168 = !{!118, !13985, !13974, !2316, !14870}
!15169 = !{!15170, !15171, !15172, !15173}
!15170 = !DILocalVariable(name: "lock", arg: 1, scope: !15166, file: !2392, line: 840, type: !13985)
!15171 = !DILocalVariable(name: "key", arg: 2, scope: !15166, file: !2392, line: 840, type: !13974)
!15172 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15166, file: !2392, line: 841, type: !2316)
!15173 = !DILocalVariable(name: "timeout", arg: 4, scope: !15166, file: !2392, line: 841, type: !14870)
!15174 = !DILocation(line: 0, scope: !15166)
!15175 = !DILocation(line: 844, column: 20, scope: !15166)
!15176 = !DILocation(line: 844, column: 18, scope: !15166)
!15177 = !DILocation(line: 846, column: 2, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !15179, file: !2392, line: 846, column: 2)
!15179 = distinct !DILexicalBlock(scope: !15166, file: !2392, line: 846, column: 2)
!15180 = !DILocation(line: 846, column: 2, scope: !15179)
!15181 = !DILocation(line: 846, column: 2, scope: !15182)
!15182 = distinct !DILexicalBlock(scope: !15178, file: !2392, line: 846, column: 2)
!15183 = !DILocation(line: 0, scope: !13982, inlinedAt: !15184)
!15184 = distinct !DILocation(line: 856, column: 9, scope: !15166)
!15185 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !15186)
!15186 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !15184)
!15187 = !DILocation(line: 0, scope: !13991, inlinedAt: !15186)
!15188 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !15184)
!15189 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !15184)
!15190 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !15184)
!15191 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !15184)
!15192 = !DILocation(line: 857, column: 14, scope: !15166)
!15193 = !DILocation(line: 857, column: 2, scope: !15166)
!15194 = !DILocation(line: 0, scope: !14669, inlinedAt: !15195)
!15195 = distinct !DILocation(line: 858, column: 2, scope: !15166)
!15196 = !DILocation(line: 225, column: 2, scope: !14676, inlinedAt: !15195)
!15197 = !DILocation(line: 225, column: 2, scope: !14677, inlinedAt: !15195)
!15198 = !DILocation(line: 225, column: 2, scope: !14680, inlinedAt: !15195)
!15199 = !DILocation(line: 0, scope: !14660, inlinedAt: !15200)
!15200 = distinct !DILocation(line: 859, column: 9, scope: !15166)
!15201 = !DILocation(line: 0, scope: !14669, inlinedAt: !15202)
!15202 = distinct !DILocation(line: 195, column: 2, scope: !14660, inlinedAt: !15200)
!15203 = !DILocation(line: 225, column: 2, scope: !14676, inlinedAt: !15202)
!15204 = !DILocation(line: 225, column: 2, scope: !14677, inlinedAt: !15202)
!15205 = !DILocation(line: 225, column: 2, scope: !14680, inlinedAt: !15202)
!15206 = !DILocation(line: 196, column: 9, scope: !14660, inlinedAt: !15200)
!15207 = !DILocation(line: 859, column: 2, scope: !15166)
!15208 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2392, file: !2392, line: 862, type: !15209, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15211)
!15209 = !DISubroutineType(types: !15210)
!15210 = !{!2285, !2316}
!15211 = !{!15212, !15213, !15214, !15216}
!15212 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15208, file: !2392, line: 862, type: !2316)
!15213 = !DILocalVariable(name: "thread", scope: !15208, file: !2392, line: 864, type: !2285)
!15214 = !DILocalVariable(name: "__i", scope: !15215, file: !2392, line: 866, type: !13974)
!15215 = distinct !DILexicalBlock(scope: !15208, file: !2392, line: 866, column: 2)
!15216 = !DILocalVariable(name: "__key", scope: !15215, file: !2392, line: 866, type: !13974)
!15217 = !DILocation(line: 0, scope: !15208)
!15218 = !DILocation(line: 0, scope: !15215)
!15219 = !DILocation(line: 0, scope: !13982, inlinedAt: !15220)
!15220 = distinct !DILocation(line: 866, column: 2, scope: !15215)
!15221 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !15222)
!15222 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !15220)
!15223 = !DILocation(line: 0, scope: !13991, inlinedAt: !15222)
!15224 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !15220)
!15225 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !15220)
!15226 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !15220)
!15227 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !15220)
!15228 = !DILocation(line: 867, column: 12, scope: !15229)
!15229 = distinct !DILexicalBlock(scope: !15230, file: !2392, line: 866, column: 26)
!15230 = distinct !DILexicalBlock(scope: !15215, file: !2392, line: 866, column: 2)
!15231 = !DILocation(line: 869, column: 14, scope: !15232)
!15232 = distinct !DILexicalBlock(scope: !15229, file: !2392, line: 869, column: 7)
!15233 = !DILocation(line: 869, column: 7, scope: !15229)
!15234 = !DILocation(line: 870, column: 4, scope: !15235)
!15235 = distinct !DILexicalBlock(scope: !15232, file: !2392, line: 869, column: 23)
!15236 = !DILocation(line: 871, column: 3, scope: !15235)
!15237 = !DILocation(line: 0, scope: !14016, inlinedAt: !15238)
!15238 = distinct !DILocation(line: 866, column: 2, scope: !15230)
!15239 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !15238)
!15240 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !15238)
!15241 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !15238)
!15242 = !DILocation(line: 0, scope: !14030, inlinedAt: !15243)
!15243 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !15238)
!15244 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !15243)
!15245 = !DILocation(line: 874, column: 2, scope: !15208)
!15246 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2392, file: !2392, line: 877, type: !15209, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15247)
!15247 = !{!15248, !15249, !15250, !15252}
!15248 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15246, file: !2392, line: 877, type: !2316)
!15249 = !DILocalVariable(name: "thread", scope: !15246, file: !2392, line: 879, type: !2285)
!15250 = !DILocalVariable(name: "__i", scope: !15251, file: !2392, line: 881, type: !13974)
!15251 = distinct !DILexicalBlock(scope: !15246, file: !2392, line: 881, column: 2)
!15252 = !DILocalVariable(name: "__key", scope: !15251, file: !2392, line: 881, type: !13974)
!15253 = !DILocation(line: 0, scope: !15246)
!15254 = !DILocation(line: 0, scope: !15251)
!15255 = !DILocation(line: 0, scope: !13982, inlinedAt: !15256)
!15256 = distinct !DILocation(line: 881, column: 2, scope: !15251)
!15257 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !15258)
!15258 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !15256)
!15259 = !DILocation(line: 0, scope: !13991, inlinedAt: !15258)
!15260 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !15256)
!15261 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !15256)
!15262 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !15256)
!15263 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !15256)
!15264 = !DILocation(line: 882, column: 12, scope: !15265)
!15265 = distinct !DILexicalBlock(scope: !15266, file: !2392, line: 881, column: 26)
!15266 = distinct !DILexicalBlock(scope: !15251, file: !2392, line: 881, column: 2)
!15267 = !DILocation(line: 884, column: 14, scope: !15268)
!15268 = distinct !DILexicalBlock(scope: !15265, file: !2392, line: 884, column: 7)
!15269 = !DILocation(line: 884, column: 7, scope: !15265)
!15270 = !DILocation(line: 885, column: 4, scope: !15271)
!15271 = distinct !DILexicalBlock(scope: !15268, file: !2392, line: 884, column: 23)
!15272 = !DILocation(line: 886, column: 10, scope: !15271)
!15273 = !DILocation(line: 887, column: 3, scope: !15271)
!15274 = !DILocation(line: 0, scope: !14016, inlinedAt: !15275)
!15275 = distinct !DILocation(line: 881, column: 2, scope: !15266)
!15276 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !15275)
!15277 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !15275)
!15278 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !15275)
!15279 = !DILocation(line: 0, scope: !14030, inlinedAt: !15280)
!15280 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !15275)
!15281 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !15280)
!15282 = !DILocation(line: 890, column: 2, scope: !15246)
!15283 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2392, file: !2392, line: 893, type: !13940, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15284)
!15284 = !{!15285}
!15285 = !DILocalVariable(name: "thread", arg: 1, scope: !15283, file: !2392, line: 893, type: !2285)
!15286 = !DILocation(line: 0, scope: !15283)
!15287 = !DILocation(line: 0, scope: !15091, inlinedAt: !15288)
!15288 = distinct !DILocation(line: 895, column: 2, scope: !15283)
!15289 = !DILocation(line: 0, scope: !15095, inlinedAt: !15288)
!15290 = !DILocation(line: 0, scope: !13982, inlinedAt: !15291)
!15291 = distinct !DILocation(line: 788, column: 2, scope: !15095, inlinedAt: !15288)
!15292 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !15293)
!15293 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !15291)
!15294 = !DILocation(line: 0, scope: !13991, inlinedAt: !15293)
!15295 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !15291)
!15296 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !15291)
!15297 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !15291)
!15298 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !15291)
!15299 = !DILocation(line: 789, column: 3, scope: !15109, inlinedAt: !15288)
!15300 = !DILocation(line: 0, scope: !14016, inlinedAt: !15301)
!15301 = distinct !DILocation(line: 788, column: 2, scope: !15110, inlinedAt: !15288)
!15302 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !15301)
!15303 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !15301)
!15304 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !15301)
!15305 = !DILocation(line: 0, scope: !14030, inlinedAt: !15306)
!15306 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !15301)
!15307 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !15306)
!15308 = !DILocation(line: 896, column: 8, scope: !15283)
!15309 = !DILocation(line: 897, column: 1, scope: !15283)
!15310 = distinct !DISubprogram(name: "z_set_prio", scope: !2392, file: !2392, line: 902, type: !14343, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15311)
!15311 = !{!15312, !15313, !15314, !15315, !15317}
!15312 = !DILocalVariable(name: "thread", arg: 1, scope: !15310, file: !2392, line: 902, type: !2285)
!15313 = !DILocalVariable(name: "prio", arg: 2, scope: !15310, file: !2392, line: 902, type: !118)
!15314 = !DILocalVariable(name: "need_sched", scope: !15310, file: !2392, line: 904, type: !146)
!15315 = !DILocalVariable(name: "__i", scope: !15316, file: !2392, line: 906, type: !13974)
!15316 = distinct !DILexicalBlock(scope: !15310, file: !2392, line: 906, column: 2)
!15317 = !DILocalVariable(name: "__key", scope: !15316, file: !2392, line: 906, type: !13974)
!15318 = !DILocation(line: 0, scope: !15310)
!15319 = !DILocation(line: 0, scope: !15316)
!15320 = !DILocation(line: 0, scope: !13982, inlinedAt: !15321)
!15321 = distinct !DILocation(line: 906, column: 2, scope: !15316)
!15322 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !15323)
!15323 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !15321)
!15324 = !DILocation(line: 0, scope: !13991, inlinedAt: !15323)
!15325 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !15321)
!15326 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !15321)
!15327 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !15321)
!15328 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !15321)
!15329 = !DILocation(line: 907, column: 16, scope: !15330)
!15330 = distinct !DILexicalBlock(scope: !15331, file: !2392, line: 906, column: 26)
!15331 = distinct !DILexicalBlock(scope: !15316, file: !2392, line: 906, column: 2)
!15332 = !DILocation(line: 909, column: 7, scope: !15330)
!15333 = !DILocation(line: 0, scope: !14174, inlinedAt: !15334)
!15334 = distinct !DILocation(line: 912, column: 5, scope: !15335)
!15335 = distinct !DILexicalBlock(scope: !15336, file: !2392, line: 911, column: 63)
!15336 = distinct !DILexicalBlock(scope: !15337, file: !2392, line: 911, column: 8)
!15337 = distinct !DILexicalBlock(scope: !15338, file: !2392, line: 909, column: 19)
!15338 = distinct !DILexicalBlock(scope: !15330, file: !2392, line: 909, column: 7)
!15339 = !DILocation(line: 266, column: 28, scope: !14174, inlinedAt: !15334)
!15340 = !DILocation(line: 0, scope: !14182, inlinedAt: !15341)
!15341 = distinct !DILocation(line: 268, column: 3, scope: !14186, inlinedAt: !15334)
!15342 = !DILocation(line: 234, column: 2, scope: !14182, inlinedAt: !15341)
!15343 = !DILocation(line: 913, column: 23, scope: !15335)
!15344 = !DILocation(line: 0, scope: !14191, inlinedAt: !15345)
!15345 = distinct !DILocation(line: 914, column: 5, scope: !15335)
!15346 = !DILocation(line: 252, column: 28, scope: !14191, inlinedAt: !15345)
!15347 = !DILocation(line: 0, scope: !14198, inlinedAt: !15348)
!15348 = distinct !DILocation(line: 254, column: 3, scope: !14202, inlinedAt: !15345)
!15349 = !DILocation(line: 0, scope: !14205, inlinedAt: !15350)
!15350 = distinct !DILocation(line: 229, column: 2, scope: !14198, inlinedAt: !15348)
!15351 = !DILocation(line: 186, column: 2, scope: !14215, inlinedAt: !15350)
!15352 = !DILocation(line: 186, column: 2, scope: !14216, inlinedAt: !15350)
!15353 = !DILocation(line: 186, column: 2, scope: !14219, inlinedAt: !15350)
!15354 = !DILocation(line: 188, column: 2, scope: !14221, inlinedAt: !15350)
!15355 = !DILocation(line: 188, column: 2, scope: !14223, inlinedAt: !15350)
!15356 = !DILocation(line: 0, scope: !14221, inlinedAt: !15350)
!15357 = !DILocation(line: 189, column: 7, scope: !14226, inlinedAt: !15350)
!15358 = !DILocation(line: 189, column: 35, scope: !14226, inlinedAt: !15350)
!15359 = !DILocation(line: 189, column: 7, scope: !14227, inlinedAt: !15350)
!15360 = !DILocation(line: 190, column: 4, scope: !14231, inlinedAt: !15350)
!15361 = !DILocation(line: 192, column: 4, scope: !14231, inlinedAt: !15350)
!15362 = distinct !{!15362, !15354, !15363}
!15363 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !15350)
!15364 = !DILocation(line: 196, column: 2, scope: !14205, inlinedAt: !15350)
!15365 = !DILocation(line: 197, column: 1, scope: !14205, inlinedAt: !15350)
!15366 = !DILocation(line: 918, column: 4, scope: !15337)
!15367 = !DILocation(line: 919, column: 3, scope: !15337)
!15368 = !DILocation(line: 920, column: 22, scope: !15369)
!15369 = distinct !DILexicalBlock(scope: !15338, file: !2392, line: 919, column: 10)
!15370 = !DILocation(line: 0, scope: !14016, inlinedAt: !15371)
!15371 = distinct !DILocation(line: 906, column: 2, scope: !15331)
!15372 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !15371)
!15373 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !15371)
!15374 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !15371)
!15375 = !DILocation(line: 0, scope: !14030, inlinedAt: !15376)
!15376 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !15371)
!15377 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !15376)
!15378 = !DILocation(line: 926, column: 2, scope: !15310)
!15379 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2392, file: !2392, line: 929, type: !15380, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15382)
!15380 = !DISubroutineType(types: !15381)
!15381 = !{null, !2285, !118}
!15382 = !{!15383, !15384, !15385}
!15383 = !DILocalVariable(name: "thread", arg: 1, scope: !15379, file: !2392, line: 929, type: !2285)
!15384 = !DILocalVariable(name: "prio", arg: 2, scope: !15379, file: !2392, line: 929, type: !118)
!15385 = !DILocalVariable(name: "need_sched", scope: !15379, file: !2392, line: 931, type: !146)
!15386 = !DILocation(line: 0, scope: !15379)
!15387 = !DILocation(line: 931, column: 20, scope: !15379)
!15388 = !DILocation(line: 935, column: 17, scope: !15389)
!15389 = distinct !DILexicalBlock(scope: !15379, file: !2392, line: 935, column: 6)
!15390 = !DILocation(line: 935, column: 20, scope: !15389)
!15391 = !DILocation(line: 935, column: 35, scope: !15389)
!15392 = !DILocation(line: 935, column: 48, scope: !15389)
!15393 = !DILocation(line: 935, column: 6, scope: !15379)
!15394 = !DILocation(line: 936, column: 3, scope: !15395)
!15395 = distinct !DILexicalBlock(scope: !15389, file: !2392, line: 935, column: 55)
!15396 = !DILocation(line: 937, column: 2, scope: !15395)
!15397 = !DILocation(line: 938, column: 1, scope: !15379)
!15398 = distinct !DISubprogram(name: "k_sched_lock", scope: !2392, file: !2392, line: 987, type: !365, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15399)
!15399 = !{!15400, !15402}
!15400 = !DILocalVariable(name: "__i", scope: !15401, file: !2392, line: 989, type: !13974)
!15401 = distinct !DILexicalBlock(scope: !15398, file: !2392, line: 989, column: 2)
!15402 = !DILocalVariable(name: "__key", scope: !15401, file: !2392, line: 989, type: !13974)
!15403 = !DILocation(line: 0, scope: !15401)
!15404 = !DILocation(line: 0, scope: !13982, inlinedAt: !15405)
!15405 = distinct !DILocation(line: 989, column: 2, scope: !15401)
!15406 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !15407)
!15407 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !15405)
!15408 = !DILocation(line: 0, scope: !13991, inlinedAt: !15407)
!15409 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !15405)
!15410 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !15405)
!15411 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !15405)
!15412 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !15405)
!15413 = !DILocation(line: 992, column: 3, scope: !15414)
!15414 = distinct !DILexicalBlock(scope: !15415, file: !2392, line: 989, column: 26)
!15415 = distinct !DILexicalBlock(scope: !15401, file: !2392, line: 989, column: 2)
!15416 = !DILocation(line: 0, scope: !14016, inlinedAt: !15417)
!15417 = distinct !DILocation(line: 989, column: 2, scope: !15415)
!15418 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !15417)
!15419 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !15417)
!15420 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !15417)
!15421 = !DILocation(line: 0, scope: !14030, inlinedAt: !15422)
!15422 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !15417)
!15423 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !15422)
!15424 = !DILocation(line: 994, column: 1, scope: !15398)
!15425 = distinct !DISubprogram(name: "z_sched_lock", scope: !12360, file: !12360, line: 251, type: !365, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !2101)
!15426 = !DILocation(line: 1031, column: 3, scope: !14709, inlinedAt: !15427)
!15427 = distinct !DILocation(line: 48, column: 10, scope: !14713, inlinedAt: !15428)
!15428 = distinct !DILocation(line: 253, column: 2, scope: !15429)
!15429 = distinct !DILexicalBlock(scope: !15430, file: !12360, line: 253, column: 2)
!15430 = distinct !DILexicalBlock(scope: !15425, file: !12360, line: 253, column: 2)
!15431 = !DILocation(line: 0, scope: !14709, inlinedAt: !15427)
!15432 = !DILocation(line: 48, column: 9, scope: !14713, inlinedAt: !15428)
!15433 = !DILocation(line: 253, column: 2, scope: !15430)
!15434 = !DILocation(line: 253, column: 2, scope: !15435)
!15435 = distinct !DILexicalBlock(scope: !15429, file: !12360, line: 253, column: 2)
!15436 = !DILocation(line: 254, column: 2, scope: !15437)
!15437 = distinct !DILexicalBlock(scope: !15438, file: !12360, line: 254, column: 2)
!15438 = distinct !DILexicalBlock(scope: !15425, file: !12360, line: 254, column: 2)
!15439 = !DILocation(line: 254, column: 2, scope: !15438)
!15440 = !DILocation(line: 254, column: 2, scope: !15441)
!15441 = distinct !DILexicalBlock(scope: !15437, file: !12360, line: 254, column: 2)
!15442 = !DILocation(line: 256, column: 2, scope: !15425)
!15443 = !DILocation(line: 258, column: 2, scope: !15444)
!15444 = distinct !DILexicalBlock(scope: !15425, file: !12360, line: 258, column: 2)
!15445 = !{i64 2154198340}
!15446 = !DILocation(line: 259, column: 1, scope: !15425)
!15447 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2392, file: !2392, line: 996, type: !365, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15448)
!15448 = !{!15449, !15451}
!15449 = !DILocalVariable(name: "__i", scope: !15450, file: !2392, line: 998, type: !13974)
!15450 = distinct !DILexicalBlock(scope: !15447, file: !2392, line: 998, column: 2)
!15451 = !DILocalVariable(name: "__key", scope: !15450, file: !2392, line: 998, type: !13974)
!15452 = !DILocation(line: 0, scope: !15450)
!15453 = !DILocation(line: 0, scope: !13982, inlinedAt: !15454)
!15454 = distinct !DILocation(line: 998, column: 2, scope: !15450)
!15455 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !15456)
!15456 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !15454)
!15457 = !DILocation(line: 0, scope: !13991, inlinedAt: !15456)
!15458 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !15454)
!15459 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !15454)
!15460 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !15454)
!15461 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !15454)
!15462 = !DILocation(line: 999, column: 3, scope: !15463)
!15463 = distinct !DILexicalBlock(scope: !15464, file: !2392, line: 999, column: 3)
!15464 = distinct !DILexicalBlock(scope: !15465, file: !2392, line: 999, column: 3)
!15465 = distinct !DILexicalBlock(scope: !15466, file: !2392, line: 998, column: 26)
!15466 = distinct !DILexicalBlock(scope: !15450, file: !2392, line: 998, column: 2)
!15467 = !DILocation(line: 999, column: 3, scope: !15464)
!15468 = !DILocation(line: 999, column: 3, scope: !15469)
!15469 = distinct !DILexicalBlock(scope: !15463, file: !2392, line: 999, column: 3)
!15470 = !DILocation(line: 1031, column: 3, scope: !14709, inlinedAt: !15471)
!15471 = distinct !DILocation(line: 48, column: 10, scope: !14713, inlinedAt: !15472)
!15472 = distinct !DILocation(line: 1000, column: 3, scope: !15473)
!15473 = distinct !DILexicalBlock(scope: !15474, file: !2392, line: 1000, column: 3)
!15474 = distinct !DILexicalBlock(scope: !15465, file: !2392, line: 1000, column: 3)
!15475 = !DILocation(line: 0, scope: !14709, inlinedAt: !15471)
!15476 = !DILocation(line: 48, column: 9, scope: !14713, inlinedAt: !15472)
!15477 = !DILocation(line: 1000, column: 3, scope: !15474)
!15478 = !DILocation(line: 1000, column: 3, scope: !15479)
!15479 = distinct !DILexicalBlock(scope: !15473, file: !2392, line: 1000, column: 3)
!15480 = !DILocation(line: 1002, column: 5, scope: !15465)
!15481 = !DILocation(line: 1002, column: 20, scope: !15465)
!15482 = !DILocation(line: 1002, column: 3, scope: !15465)
!15483 = !DILocation(line: 1003, column: 3, scope: !15465)
!15484 = !DILocation(line: 0, scope: !14016, inlinedAt: !15485)
!15485 = distinct !DILocation(line: 998, column: 2, scope: !15466)
!15486 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !15485)
!15487 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !15485)
!15488 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !15485)
!15489 = !DILocation(line: 0, scope: !14030, inlinedAt: !15490)
!15490 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !15485)
!15491 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !15490)
!15492 = !DILocation(line: 1011, column: 2, scope: !15447)
!15493 = !DILocation(line: 1012, column: 1, scope: !15447)
!15494 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2392, file: !2392, line: 1014, type: !14331, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !2101)
!15495 = !DILocation(line: 1028, column: 25, scope: !15494)
!15496 = !DILocation(line: 1028, column: 2, scope: !15494)
!15497 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2392, file: !2392, line: 1155, type: !15498, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15500)
!15498 = !DISubroutineType(types: !15499)
!15499 = !{!146, !2314, !2314}
!15500 = !{!15501, !15502, !15503, !15504, !15505}
!15501 = !DILocalVariable(name: "a", arg: 1, scope: !15497, file: !2392, line: 1155, type: !2314)
!15502 = !DILocalVariable(name: "b", arg: 2, scope: !15497, file: !2392, line: 1155, type: !2314)
!15503 = !DILocalVariable(name: "thread_a", scope: !15497, file: !2392, line: 1157, type: !2285)
!15504 = !DILocalVariable(name: "thread_b", scope: !15497, file: !2392, line: 1157, type: !2285)
!15505 = !DILocalVariable(name: "cmp", scope: !15497, file: !2392, line: 1158, type: !362)
!15506 = !DILocation(line: 0, scope: !15497)
!15507 = !DILocation(line: 1160, column: 13, scope: !15497)
!15508 = !DILocation(line: 1161, column: 13, scope: !15497)
!15509 = !DILocation(line: 1163, column: 8, scope: !15497)
!15510 = !DILocation(line: 1165, column: 10, scope: !15511)
!15511 = distinct !DILexicalBlock(scope: !15497, file: !2392, line: 1165, column: 6)
!15512 = !DILocation(line: 1165, column: 6, scope: !15497)
!15513 = !DILocation(line: 1167, column: 17, scope: !15514)
!15514 = distinct !DILexicalBlock(scope: !15511, file: !2392, line: 1167, column: 13)
!15515 = !DILocation(line: 1167, column: 13, scope: !15511)
!15516 = !DILocation(line: 1170, column: 25, scope: !15517)
!15517 = distinct !DILexicalBlock(scope: !15514, file: !2392, line: 1169, column: 9)
!15518 = !DILocation(line: 1170, column: 52, scope: !15517)
!15519 = !DILocation(line: 1170, column: 35, scope: !15517)
!15520 = !DILocation(line: 1170, column: 3, scope: !15517)
!15521 = !DILocation(line: 0, scope: !15511)
!15522 = !DILocation(line: 1173, column: 1, scope: !15497)
!15523 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2392, file: !2392, line: 1175, type: !15524, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15539)
!15524 = !DISubroutineType(types: !15525)
!15525 = !{null, !15526, !2285}
!15526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15527, size: 32)
!15527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15528, line: 37, size: 128, elements: !15529)
!15528 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15529 = !{!15530, !15538}
!15530 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15527, file: !15528, line: 38, baseType: !15531, size: 96)
!15531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !251, line: 83, size: 96, elements: !15532)
!15532 = !{!15533, !15534, !15537}
!15533 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15531, file: !251, line: 84, baseType: !2314, size: 32)
!15534 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15531, file: !251, line: 85, baseType: !15535, size: 32, offset: 32)
!15535 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !251, line: 81, baseType: !15536)
!15536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15498, size: 32)
!15537 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15531, file: !251, line: 86, baseType: !118, size: 32, offset: 64)
!15538 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15527, file: !15528, line: 39, baseType: !118, size: 32, offset: 96)
!15539 = !{!15540, !15541, !15542, !15543, !15552}
!15540 = !DILocalVariable(name: "pq", arg: 1, scope: !15523, file: !2392, line: 1175, type: !15526)
!15541 = !DILocalVariable(name: "thread", arg: 2, scope: !15523, file: !2392, line: 1175, type: !2285)
!15542 = !DILocalVariable(name: "t", scope: !15523, file: !2392, line: 1177, type: !2285)
!15543 = !DILocalVariable(name: "__f", scope: !15544, file: !2392, line: 1190, type: !15547)
!15544 = distinct !DILexicalBlock(scope: !15545, file: !2392, line: 1190, column: 3)
!15545 = distinct !DILexicalBlock(scope: !15546, file: !2392, line: 1189, column: 27)
!15546 = distinct !DILexicalBlock(scope: !15523, file: !2392, line: 1189, column: 6)
!15547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !251, line: 155, size: 96, elements: !15548)
!15548 = !{!15549, !15550, !15551}
!15549 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15547, file: !251, line: 156, baseType: !2387, size: 32)
!15550 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15547, file: !251, line: 157, baseType: !1933, size: 32, offset: 32)
!15551 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15547, file: !251, line: 158, baseType: !362, size: 32, offset: 64)
!15552 = !DILocalVariable(name: "n", scope: !15553, file: !2392, line: 1190, type: !2314)
!15553 = distinct !DILexicalBlock(scope: !15554, file: !2392, line: 1190, column: 3)
!15554 = distinct !DILexicalBlock(scope: !15544, file: !2392, line: 1190, column: 3)
!15555 = !DILocation(line: 0, scope: !15523)
!15556 = !DILocation(line: 1179, column: 2, scope: !15557)
!15557 = distinct !DILexicalBlock(scope: !15558, file: !2392, line: 1179, column: 2)
!15558 = distinct !DILexicalBlock(scope: !15523, file: !2392, line: 1179, column: 2)
!15559 = !DILocation(line: 1179, column: 2, scope: !15558)
!15560 = !DILocation(line: 1179, column: 2, scope: !15561)
!15561 = distinct !DILexicalBlock(scope: !15557, file: !2392, line: 1179, column: 2)
!15562 = !DILocation(line: 1181, column: 31, scope: !15523)
!15563 = !DILocation(line: 1181, column: 45, scope: !15523)
!15564 = !DILocation(line: 1181, column: 15, scope: !15523)
!15565 = !DILocation(line: 1181, column: 25, scope: !15523)
!15566 = !DILocation(line: 1189, column: 11, scope: !15546)
!15567 = !DILocation(line: 1189, column: 7, scope: !15546)
!15568 = !DILocation(line: 1189, column: 6, scope: !15523)
!15569 = !DILocation(line: 1190, column: 3, scope: !15544)
!15570 = !DILocation(line: 1190, column: 3, scope: !15553)
!15571 = !DILocation(line: 0, scope: !15553)
!15572 = !DILocation(line: 1190, column: 3, scope: !15554)
!15573 = !DILocation(line: 1193, column: 2, scope: !15545)
!15574 = !DILocation(line: 1191, column: 42, scope: !15575)
!15575 = distinct !DILexicalBlock(scope: !15554, file: !2392, line: 1190, column: 54)
!15576 = !DILocation(line: 1191, column: 12, scope: !15575)
!15577 = !DILocation(line: 1191, column: 22, scope: !15575)
!15578 = distinct !{!15578, !15569, !15579}
!15579 = !DILocation(line: 1192, column: 3, scope: !15544)
!15580 = !DILocation(line: 1195, column: 17, scope: !15523)
!15581 = !DILocation(line: 1195, column: 37, scope: !15523)
!15582 = !DILocation(line: 1195, column: 2, scope: !15523)
!15583 = !DILocation(line: 1196, column: 1, scope: !15523)
!15584 = !DISubprogram(name: "z_rb_foreach_next", scope: !251, file: !251, line: 176, type: !15585, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2101)
!15585 = !DISubroutineType(types: !15586)
!15586 = !{!2314, !15587, !15588}
!15587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15531, size: 32)
!15588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15547, size: 32)
!15589 = !DISubprogram(name: "rb_insert", scope: !251, file: !251, line: 105, type: !15590, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2101)
!15590 = !DISubroutineType(types: !15591)
!15591 = !{null, !15587, !2314}
!15592 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2392, file: !2392, line: 1198, type: !15524, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15593)
!15593 = !{!15594, !15595}
!15594 = !DILocalVariable(name: "pq", arg: 1, scope: !15592, file: !2392, line: 1198, type: !15526)
!15595 = !DILocalVariable(name: "thread", arg: 2, scope: !15592, file: !2392, line: 1198, type: !2285)
!15596 = !DILocation(line: 0, scope: !15592)
!15597 = !DILocation(line: 1200, column: 2, scope: !15598)
!15598 = distinct !DILexicalBlock(scope: !15599, file: !2392, line: 1200, column: 2)
!15599 = distinct !DILexicalBlock(scope: !15592, file: !2392, line: 1200, column: 2)
!15600 = !DILocation(line: 1200, column: 2, scope: !15599)
!15601 = !DILocation(line: 1200, column: 2, scope: !15602)
!15602 = distinct !DILexicalBlock(scope: !15598, file: !2392, line: 1200, column: 2)
!15603 = !DILocation(line: 1202, column: 17, scope: !15592)
!15604 = !DILocation(line: 1202, column: 37, scope: !15592)
!15605 = !DILocation(line: 1202, column: 2, scope: !15592)
!15606 = !DILocation(line: 1204, column: 16, scope: !15607)
!15607 = distinct !DILexicalBlock(scope: !15592, file: !2392, line: 1204, column: 6)
!15608 = !DILocation(line: 1204, column: 7, scope: !15607)
!15609 = !DILocation(line: 1204, column: 6, scope: !15592)
!15610 = !DILocation(line: 1205, column: 7, scope: !15611)
!15611 = distinct !DILexicalBlock(scope: !15607, file: !2392, line: 1204, column: 22)
!15612 = !DILocation(line: 1205, column: 22, scope: !15611)
!15613 = !DILocation(line: 1206, column: 2, scope: !15611)
!15614 = !DILocation(line: 1207, column: 1, scope: !15592)
!15615 = !DISubprogram(name: "rb_remove", scope: !251, file: !251, line: 110, type: !15590, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2101)
!15616 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2392, file: !2392, line: 1209, type: !15617, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15619)
!15617 = !DISubroutineType(types: !15618)
!15618 = !{!2285, !15526}
!15619 = !{!15620, !15621, !15622}
!15620 = !DILocalVariable(name: "pq", arg: 1, scope: !15616, file: !2392, line: 1209, type: !15526)
!15621 = !DILocalVariable(name: "thread", scope: !15616, file: !2392, line: 1211, type: !2285)
!15622 = !DILocalVariable(name: "n", scope: !15616, file: !2392, line: 1212, type: !2314)
!15623 = !DILocation(line: 0, scope: !15616)
!15624 = !DILocation(line: 1212, column: 37, scope: !15616)
!15625 = !DILocation(line: 1212, column: 21, scope: !15616)
!15626 = !DILocation(line: 1217, column: 2, scope: !15616)
!15627 = distinct !DISubprogram(name: "rb_get_min", scope: !251, file: !251, line: 115, type: !15628, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15630)
!15628 = !DISubroutineType(types: !15629)
!15629 = !{!2314, !15587}
!15630 = !{!15631}
!15631 = !DILocalVariable(name: "tree", arg: 1, scope: !15627, file: !251, line: 115, type: !15587)
!15632 = !DILocation(line: 0, scope: !15627)
!15633 = !DILocation(line: 117, column: 9, scope: !15627)
!15634 = !DILocation(line: 117, column: 2, scope: !15627)
!15635 = !DISubprogram(name: "z_rb_get_minmax", scope: !251, file: !251, line: 100, type: !15636, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2101)
!15636 = !DISubroutineType(types: !15637)
!15637 = !{!2314, !15587, !143}
!15638 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2392, file: !2392, line: 1246, type: !15639, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15649)
!15639 = !DISubroutineType(types: !15640)
!15640 = !{!2285, !15641}
!15641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15642, size: 32)
!15642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15528, line: 53, size: 2080, elements: !15643)
!15643 = !{!15644, !15648}
!15644 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15642, file: !15528, line: 54, baseType: !15645, size: 2048)
!15645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2321, size: 2048, elements: !15646)
!15646 = !{!15647}
!15647 = !DISubrange(count: 32)
!15648 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15642, file: !15528, line: 55, baseType: !32, size: 32, offset: 2048)
!15649 = !{!15650, !15651, !15652, !15653}
!15650 = !DILocalVariable(name: "pq", arg: 1, scope: !15638, file: !2392, line: 1246, type: !15641)
!15651 = !DILocalVariable(name: "thread", scope: !15638, file: !2392, line: 1252, type: !2285)
!15652 = !DILocalVariable(name: "l", scope: !15638, file: !2392, line: 1253, type: !14208)
!15653 = !DILocalVariable(name: "n", scope: !15638, file: !2392, line: 1254, type: !2388)
!15654 = !DILocation(line: 0, scope: !15638)
!15655 = !DILocation(line: 1248, column: 11, scope: !15656)
!15656 = distinct !DILexicalBlock(scope: !15638, file: !2392, line: 1248, column: 6)
!15657 = !DILocation(line: 1248, column: 7, scope: !15656)
!15658 = !DILocation(line: 1248, column: 6, scope: !15638)
!15659 = !DILocation(line: 1253, column: 31, scope: !15638)
!15660 = !DILocation(line: 1253, column: 20, scope: !15638)
!15661 = !DILocation(line: 1254, column: 19, scope: !15638)
!15662 = !DILocation(line: 1260, column: 1, scope: !15638)
!15663 = distinct !DISubprogram(name: "z_unpend_all", scope: !2392, file: !2392, line: 1262, type: !15664, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15666)
!15664 = !DISubroutineType(types: !15665)
!15665 = !{!118, !2316}
!15666 = !{!15667, !15668, !15669}
!15667 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15663, file: !2392, line: 1262, type: !2316)
!15668 = !DILocalVariable(name: "need_sched", scope: !15663, file: !2392, line: 1264, type: !118)
!15669 = !DILocalVariable(name: "thread", scope: !15663, file: !2392, line: 1265, type: !2285)
!15670 = !DILocation(line: 0, scope: !15663)
!15671 = !DILocation(line: 1267, column: 19, scope: !15663)
!15672 = !DILocation(line: 1267, column: 41, scope: !15663)
!15673 = !DILocation(line: 1267, column: 2, scope: !15663)
!15674 = !DILocation(line: 1268, column: 3, scope: !15675)
!15675 = distinct !DILexicalBlock(scope: !15663, file: !2392, line: 1267, column: 50)
!15676 = !DILocation(line: 1269, column: 3, scope: !15675)
!15677 = distinct !{!15677, !15673, !15678}
!15678 = !DILocation(line: 1271, column: 2, scope: !15663)
!15679 = !DILocation(line: 1273, column: 2, scope: !15663)
!15680 = distinct !DISubprogram(name: "z_waitq_head", scope: !12699, file: !12699, line: 52, type: !15209, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15681)
!15681 = !{!15682}
!15682 = !DILocalVariable(name: "w", arg: 1, scope: !15680, file: !12699, line: 52, type: !2316)
!15683 = !DILocation(line: 0, scope: !15680)
!15684 = !DILocation(line: 54, column: 52, scope: !15680)
!15685 = !DILocation(line: 54, column: 28, scope: !15680)
!15686 = !DILocation(line: 54, column: 9, scope: !15680)
!15687 = !DILocation(line: 54, column: 2, scope: !15680)
!15688 = distinct !DISubprogram(name: "init_ready_q", scope: !2392, file: !2392, line: 1276, type: !15689, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15696)
!15689 = !DISubroutineType(types: !15690)
!15690 = !{null, !15691}
!15691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15692, size: 32)
!15692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !261, line: 83, size: 96, elements: !15693)
!15693 = !{!15694, !15695}
!15694 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15692, file: !261, line: 86, baseType: !2285, size: 32)
!15695 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15692, file: !261, line: 90, baseType: !2321, size: 64, offset: 32)
!15696 = !{!15697}
!15697 = !DILocalVariable(name: "rq", arg: 1, scope: !15688, file: !2392, line: 1276, type: !15691)
!15698 = !DILocation(line: 0, scope: !15688)
!15699 = !DILocation(line: 1289, column: 22, scope: !15688)
!15700 = !DILocation(line: 1289, column: 2, scope: !15688)
!15701 = !DILocation(line: 1291, column: 1, scope: !15688)
!15702 = distinct !DISubprogram(name: "sys_dlist_init", scope: !235, file: !235, line: 197, type: !15703, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15705)
!15703 = !DISubroutineType(types: !15704)
!15704 = !{null, !14208}
!15705 = !{!15706}
!15706 = !DILocalVariable(name: "list", arg: 1, scope: !15702, file: !235, line: 197, type: !14208)
!15707 = !DILocation(line: 0, scope: !15702)
!15708 = !DILocation(line: 199, column: 8, scope: !15702)
!15709 = !DILocation(line: 199, column: 13, scope: !15702)
!15710 = !DILocation(line: 200, column: 8, scope: !15702)
!15711 = !DILocation(line: 200, column: 13, scope: !15702)
!15712 = !DILocation(line: 201, column: 1, scope: !15702)
!15713 = distinct !DISubprogram(name: "z_sched_init", scope: !2392, file: !2392, line: 1293, type: !365, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !2101)
!15714 = !DILocation(line: 1302, column: 2, scope: !15713)
!15715 = !DILocation(line: 1306, column: 2, scope: !15713)
!15716 = !DILocation(line: 1309, column: 1, scope: !15713)
!15717 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2392, file: !2392, line: 1311, type: !15718, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15721)
!15718 = !DISubroutineType(types: !15719)
!15719 = !{!118, !15720}
!15720 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !225, line: 347, baseType: !2285)
!15721 = !{!15722}
!15722 = !DILocalVariable(name: "thread", arg: 1, scope: !15717, file: !2392, line: 1311, type: !15720)
!15723 = !DILocation(line: 0, scope: !15717)
!15724 = !DILocation(line: 1313, column: 22, scope: !15717)
!15725 = !DILocation(line: 1313, column: 9, scope: !15717)
!15726 = !DILocation(line: 1313, column: 2, scope: !15717)
!15727 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2392, file: !2392, line: 1325, type: !15728, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15730)
!15728 = !DISubroutineType(types: !15729)
!15729 = !{null, !15720, !118}
!15730 = !{!15731, !15732, !15733}
!15731 = !DILocalVariable(name: "thread", arg: 1, scope: !15727, file: !2392, line: 1325, type: !15720)
!15732 = !DILocalVariable(name: "prio", arg: 2, scope: !15727, file: !2392, line: 1325, type: !118)
!15733 = !DILocalVariable(name: "th", scope: !15727, file: !2392, line: 1334, type: !2285)
!15734 = !DILocation(line: 0, scope: !15727)
!15735 = !DILocation(line: 1331, column: 2, scope: !15736)
!15736 = distinct !DILexicalBlock(scope: !15737, file: !2392, line: 1331, column: 2)
!15737 = distinct !DILexicalBlock(scope: !15738, file: !2392, line: 1331, column: 2)
!15738 = distinct !DILexicalBlock(scope: !15727, file: !2392, line: 1331, column: 2)
!15739 = !DILocation(line: 1331, column: 2, scope: !15740)
!15740 = distinct !DILexicalBlock(scope: !15736, file: !2392, line: 1331, column: 2)
!15741 = !DILocation(line: 1031, column: 3, scope: !14709, inlinedAt: !15742)
!15742 = distinct !DILocation(line: 48, column: 10, scope: !14713, inlinedAt: !15743)
!15743 = distinct !DILocation(line: 1332, column: 2, scope: !15744)
!15744 = distinct !DILexicalBlock(scope: !15745, file: !2392, line: 1332, column: 2)
!15745 = distinct !DILexicalBlock(scope: !15727, file: !2392, line: 1332, column: 2)
!15746 = !DILocation(line: 0, scope: !14709, inlinedAt: !15742)
!15747 = !DILocation(line: 48, column: 9, scope: !14713, inlinedAt: !15743)
!15748 = !DILocation(line: 1332, column: 2, scope: !15745)
!15749 = !DILocation(line: 1332, column: 2, scope: !15750)
!15750 = distinct !DILexicalBlock(scope: !15744, file: !2392, line: 1332, column: 2)
!15751 = !DILocation(line: 1336, column: 2, scope: !15727)
!15752 = !DILocation(line: 1337, column: 1, scope: !15727)
!15753 = distinct !DISubprogram(name: "k_can_yield", scope: !2392, file: !2392, line: 1384, type: !7138, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !2101)
!15754 = !DILocation(line: 1386, column: 11, scope: !15753)
!15755 = !DILocation(line: 1386, column: 29, scope: !15753)
!15756 = !DILocation(line: 1386, column: 32, scope: !15753)
!15757 = !DILocation(line: 1386, column: 46, scope: !15753)
!15758 = !DILocation(line: 1387, column: 28, scope: !15753)
!15759 = !DILocation(line: 1387, column: 4, scope: !15753)
!15760 = !DILocation(line: 1386, column: 2, scope: !15753)
!15761 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !220, file: !220, line: 989, type: !7138, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !2101)
!15762 = !DILocation(line: 993, column: 10, scope: !15761)
!15763 = !DILocation(line: 993, column: 2, scope: !15761)
!15764 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2392, file: !2392, line: 1390, type: !365, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15765)
!15765 = !{!15766}
!15766 = !DILocalVariable(name: "key", scope: !15764, file: !2392, line: 1396, type: !13974)
!15767 = !DILocation(line: 1031, column: 3, scope: !14709, inlinedAt: !15768)
!15768 = distinct !DILocation(line: 48, column: 10, scope: !14713, inlinedAt: !15769)
!15769 = distinct !DILocation(line: 1392, column: 2, scope: !15770)
!15770 = distinct !DILexicalBlock(scope: !15771, file: !2392, line: 1392, column: 2)
!15771 = distinct !DILexicalBlock(scope: !15764, file: !2392, line: 1392, column: 2)
!15772 = !DILocation(line: 0, scope: !14709, inlinedAt: !15768)
!15773 = !DILocation(line: 48, column: 9, scope: !14713, inlinedAt: !15769)
!15774 = !DILocation(line: 1392, column: 2, scope: !15771)
!15775 = !DILocation(line: 1392, column: 2, scope: !15776)
!15776 = distinct !DILexicalBlock(scope: !15770, file: !2392, line: 1392, column: 2)
!15777 = !DILocation(line: 0, scope: !13982, inlinedAt: !15778)
!15778 = distinct !DILocation(line: 1396, column: 25, scope: !15764)
!15779 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !15780)
!15780 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !15778)
!15781 = !DILocation(line: 0, scope: !13991, inlinedAt: !15780)
!15782 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !15778)
!15783 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !15778)
!15784 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !15778)
!15785 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !15778)
!15786 = !DILocation(line: 0, scope: !15764)
!15787 = !DILocation(line: 1400, column: 18, scope: !15788)
!15788 = distinct !DILexicalBlock(scope: !15789, file: !2392, line: 1399, column: 36)
!15789 = distinct !DILexicalBlock(scope: !15764, file: !2392, line: 1398, column: 6)
!15790 = !DILocation(line: 0, scope: !14174, inlinedAt: !15791)
!15791 = distinct !DILocation(line: 1400, column: 3, scope: !15788)
!15792 = !DILocation(line: 266, column: 15, scope: !14174, inlinedAt: !15791)
!15793 = !DILocation(line: 266, column: 28, scope: !14174, inlinedAt: !15791)
!15794 = !DILocation(line: 0, scope: !14182, inlinedAt: !15795)
!15795 = distinct !DILocation(line: 268, column: 3, scope: !14186, inlinedAt: !15791)
!15796 = !DILocation(line: 234, column: 2, scope: !14182, inlinedAt: !15795)
!15797 = !DILocation(line: 1402, column: 15, scope: !15764)
!15798 = !DILocation(line: 0, scope: !14191, inlinedAt: !15799)
!15799 = distinct !DILocation(line: 1402, column: 2, scope: !15764)
!15800 = !DILocation(line: 252, column: 15, scope: !14191, inlinedAt: !15799)
!15801 = !DILocation(line: 252, column: 28, scope: !14191, inlinedAt: !15799)
!15802 = !DILocation(line: 0, scope: !14198, inlinedAt: !15803)
!15803 = distinct !DILocation(line: 254, column: 3, scope: !14202, inlinedAt: !15799)
!15804 = !DILocation(line: 0, scope: !14205, inlinedAt: !15805)
!15805 = distinct !DILocation(line: 229, column: 2, scope: !14198, inlinedAt: !15803)
!15806 = !DILocation(line: 186, column: 2, scope: !14215, inlinedAt: !15805)
!15807 = !DILocation(line: 186, column: 2, scope: !14216, inlinedAt: !15805)
!15808 = !DILocation(line: 186, column: 2, scope: !14219, inlinedAt: !15805)
!15809 = !DILocation(line: 188, column: 2, scope: !14221, inlinedAt: !15805)
!15810 = !DILocation(line: 188, column: 2, scope: !14223, inlinedAt: !15805)
!15811 = !DILocation(line: 0, scope: !14221, inlinedAt: !15805)
!15812 = !DILocation(line: 189, column: 7, scope: !14226, inlinedAt: !15805)
!15813 = !DILocation(line: 189, column: 35, scope: !14226, inlinedAt: !15805)
!15814 = !DILocation(line: 189, column: 7, scope: !14227, inlinedAt: !15805)
!15815 = !DILocation(line: 191, column: 21, scope: !14231, inlinedAt: !15805)
!15816 = !DILocation(line: 190, column: 4, scope: !14231, inlinedAt: !15805)
!15817 = !DILocation(line: 192, column: 4, scope: !14231, inlinedAt: !15805)
!15818 = distinct !{!15818, !15809, !15819}
!15819 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !15805)
!15820 = !DILocation(line: 196, column: 37, scope: !14205, inlinedAt: !15805)
!15821 = !DILocation(line: 196, column: 2, scope: !14205, inlinedAt: !15805)
!15822 = !DILocation(line: 197, column: 1, scope: !14205, inlinedAt: !15805)
!15823 = !DILocation(line: 1403, column: 2, scope: !15764)
!15824 = !DILocation(line: 0, scope: !14660, inlinedAt: !15825)
!15825 = distinct !DILocation(line: 1404, column: 2, scope: !15764)
!15826 = !DILocation(line: 0, scope: !14669, inlinedAt: !15827)
!15827 = distinct !DILocation(line: 195, column: 2, scope: !14660, inlinedAt: !15825)
!15828 = !DILocation(line: 225, column: 2, scope: !14676, inlinedAt: !15827)
!15829 = !DILocation(line: 225, column: 2, scope: !14677, inlinedAt: !15827)
!15830 = !DILocation(line: 225, column: 2, scope: !14680, inlinedAt: !15827)
!15831 = !DILocation(line: 196, column: 9, scope: !14660, inlinedAt: !15825)
!15832 = !DILocation(line: 1405, column: 1, scope: !15764)
!15833 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2392, file: !2392, line: 1459, type: !15834, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15836)
!15834 = !DISubroutineType(types: !15835)
!15835 = !{!362, !14870}
!15836 = !{!15837, !15838, !15839}
!15837 = !DILocalVariable(name: "timeout", arg: 1, scope: !15833, file: !2392, line: 1459, type: !14870)
!15838 = !DILocalVariable(name: "ticks", scope: !15833, file: !2392, line: 1461, type: !113)
!15839 = !DILocalVariable(name: "ret", scope: !15833, file: !2392, line: 1480, type: !362)
!15840 = !DILocation(line: 0, scope: !15833)
!15841 = !DILocation(line: 1031, column: 3, scope: !14709, inlinedAt: !15842)
!15842 = distinct !DILocation(line: 48, column: 10, scope: !14713, inlinedAt: !15843)
!15843 = distinct !DILocation(line: 1463, column: 2, scope: !15844)
!15844 = distinct !DILexicalBlock(scope: !15845, file: !2392, line: 1463, column: 2)
!15845 = distinct !DILexicalBlock(scope: !15833, file: !2392, line: 1463, column: 2)
!15846 = !DILocation(line: 0, scope: !14709, inlinedAt: !15842)
!15847 = !DILocation(line: 48, column: 9, scope: !14713, inlinedAt: !15843)
!15848 = !DILocation(line: 1463, column: 2, scope: !15845)
!15849 = !DILocation(line: 1463, column: 2, scope: !15850)
!15850 = distinct !DILexicalBlock(scope: !15844, file: !2392, line: 1463, column: 2)
!15851 = !DILocation(line: 1468, column: 6, scope: !15852)
!15852 = distinct !DILexicalBlock(scope: !15833, file: !2392, line: 1468, column: 6)
!15853 = !DILocation(line: 1468, column: 6, scope: !15833)
!15854 = !DILocation(line: 1469, column: 20, scope: !15855)
!15855 = distinct !DILexicalBlock(scope: !15852, file: !2392, line: 1468, column: 40)
!15856 = !DILocation(line: 1469, column: 3, scope: !15855)
!15857 = !DILocation(line: 1473, column: 3, scope: !15855)
!15858 = !DILocation(line: 1478, column: 10, scope: !15833)
!15859 = !DILocation(line: 1480, column: 16, scope: !15833)
!15860 = !DILocation(line: 1485, column: 1, scope: !15833)
!15861 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3450, file: !3450, line: 310, type: !15862, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15864)
!15862 = !DISubroutineType(types: !15863)
!15863 = !{null, !15720}
!15864 = !{!15865}
!15865 = !DILocalVariable(name: "thread", arg: 1, scope: !15861, file: !3450, line: 310, type: !15720)
!15866 = !DILocation(line: 0, scope: !15861)
!15867 = !DILocation(line: 319, column: 2, scope: !15868)
!15868 = distinct !DILexicalBlock(scope: !15861, file: !3450, line: 319, column: 2)
!15869 = !{i64 2154114498}
!15870 = !DILocation(line: 320, column: 2, scope: !15861)
!15871 = !DILocation(line: 321, column: 1, scope: !15861)
!15872 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2392, file: !2392, line: 1415, type: !15873, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15875)
!15873 = !DISubroutineType(types: !15874)
!15874 = !{!362, !113}
!15875 = !{!15876, !15877, !15878, !15879}
!15876 = !DILocalVariable(name: "ticks", arg: 1, scope: !15872, file: !2392, line: 1415, type: !113)
!15877 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15872, file: !2392, line: 1418, type: !156)
!15878 = !DILocalVariable(name: "timeout", scope: !15872, file: !2392, line: 1430, type: !14870)
!15879 = !DILocalVariable(name: "key", scope: !15872, file: !2392, line: 1437, type: !13974)
!15880 = !DILocation(line: 0, scope: !15872)
!15881 = !DILocation(line: 1031, column: 3, scope: !14709, inlinedAt: !15882)
!15882 = distinct !DILocation(line: 48, column: 10, scope: !14713, inlinedAt: !15883)
!15883 = distinct !DILocation(line: 1420, column: 2, scope: !15884)
!15884 = distinct !DILexicalBlock(scope: !15885, file: !2392, line: 1420, column: 2)
!15885 = distinct !DILexicalBlock(scope: !15872, file: !2392, line: 1420, column: 2)
!15886 = !DILocation(line: 0, scope: !14709, inlinedAt: !15882)
!15887 = !DILocation(line: 48, column: 9, scope: !14713, inlinedAt: !15883)
!15888 = !DILocation(line: 1420, column: 2, scope: !15885)
!15889 = !DILocation(line: 1420, column: 2, scope: !15890)
!15890 = distinct !DILexicalBlock(scope: !15884, file: !2392, line: 1420, column: 2)
!15891 = !DILocation(line: 1425, column: 12, scope: !15892)
!15892 = distinct !DILexicalBlock(scope: !15872, file: !2392, line: 1425, column: 6)
!15893 = !DILocation(line: 1425, column: 6, scope: !15872)
!15894 = !DILocation(line: 1426, column: 3, scope: !15895)
!15895 = distinct !DILexicalBlock(scope: !15892, file: !2392, line: 1425, column: 18)
!15896 = !DILocation(line: 1427, column: 3, scope: !15895)
!15897 = !DILocation(line: 1431, column: 24, scope: !15898)
!15898 = distinct !DILexicalBlock(scope: !15872, file: !2392, line: 1431, column: 6)
!15899 = !DILocation(line: 1431, column: 6, scope: !15872)
!15900 = !DILocation(line: 1432, column: 35, scope: !15901)
!15901 = distinct !DILexicalBlock(scope: !15898, file: !2392, line: 1431, column: 30)
!15902 = !DILocation(line: 1432, column: 27, scope: !15901)
!15903 = !DILocation(line: 1433, column: 2, scope: !15901)
!15904 = !DILocation(line: 1434, column: 27, scope: !15905)
!15905 = distinct !DILexicalBlock(scope: !15898, file: !2392, line: 1433, column: 9)
!15906 = !DILocation(line: 0, scope: !15898)
!15907 = !DILocation(line: 0, scope: !13982, inlinedAt: !15908)
!15908 = distinct !DILocation(line: 1437, column: 25, scope: !15872)
!15909 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !15910)
!15910 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !15908)
!15911 = !DILocation(line: 0, scope: !13991, inlinedAt: !15910)
!15912 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !15908)
!15913 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !15908)
!15914 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !15908)
!15915 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !15908)
!15916 = !DILocation(line: 1440, column: 20, scope: !15872)
!15917 = !DILocation(line: 1440, column: 18, scope: !15872)
!15918 = !DILocation(line: 1442, column: 2, scope: !15872)
!15919 = !DILocation(line: 1443, column: 23, scope: !15872)
!15920 = !DILocation(line: 1443, column: 2, scope: !15872)
!15921 = !DILocation(line: 1444, column: 29, scope: !15872)
!15922 = !DILocation(line: 1444, column: 2, scope: !15872)
!15923 = !DILocation(line: 0, scope: !14660, inlinedAt: !15924)
!15924 = distinct !DILocation(line: 1446, column: 8, scope: !15872)
!15925 = !DILocation(line: 0, scope: !14669, inlinedAt: !15926)
!15926 = distinct !DILocation(line: 195, column: 2, scope: !14660, inlinedAt: !15924)
!15927 = !DILocation(line: 225, column: 2, scope: !14676, inlinedAt: !15926)
!15928 = !DILocation(line: 225, column: 2, scope: !14677, inlinedAt: !15926)
!15929 = !DILocation(line: 225, column: 2, scope: !14680, inlinedAt: !15926)
!15930 = !DILocation(line: 196, column: 9, scope: !14660, inlinedAt: !15924)
!15931 = !DILocation(line: 1448, column: 2, scope: !15932)
!15932 = distinct !DILexicalBlock(scope: !15933, file: !2392, line: 1448, column: 2)
!15933 = distinct !DILexicalBlock(scope: !15872, file: !2392, line: 1448, column: 2)
!15934 = !DILocation(line: 1448, column: 2, scope: !15933)
!15935 = !DILocation(line: 1448, column: 2, scope: !15936)
!15936 = distinct !DILexicalBlock(scope: !15932, file: !2392, line: 1448, column: 2)
!15937 = !DILocation(line: 1450, column: 10, scope: !15872)
!15938 = !DILocation(line: 1450, column: 45, scope: !15872)
!15939 = !DILocation(line: 1450, column: 43, scope: !15872)
!15940 = !DILocation(line: 1451, column: 6, scope: !15872)
!15941 = !DILocation(line: 1457, column: 1, scope: !15872)
!15942 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3417, file: !3417, line: 1103, type: !3418, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15943)
!15943 = !{!15944}
!15944 = !DILocalVariable(name: "t", arg: 1, scope: !15942, file: !3417, line: 1103, type: !213)
!15945 = !DILocation(line: 0, scope: !15942)
!15946 = !DILocation(line: 0, scope: !14042, inlinedAt: !15947)
!15947 = distinct !DILocation(line: 1106, column: 9, scope: !15942)
!15948 = !DILocation(line: 139, column: 13, scope: !15949, inlinedAt: !15947)
!15949 = distinct !DILexicalBlock(scope: !15950, file: !3417, line: 138, column: 10)
!15950 = distinct !DILexicalBlock(scope: !15951, file: !3417, line: 136, column: 7)
!15951 = distinct !DILexicalBlock(scope: !14063, file: !3417, line: 134, column: 17)
!15952 = !DILocation(line: 1106, column: 2, scope: !15942)
!15953 = distinct !DISubprogram(name: "k_yield", scope: !3450, file: !3450, line: 140, type: !365, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !2101)
!15954 = !DILocation(line: 148, column: 2, scope: !15955)
!15955 = distinct !DILexicalBlock(scope: !15953, file: !3450, line: 148, column: 2)
!15956 = !{i64 2154113818}
!15957 = !DILocation(line: 149, column: 2, scope: !15953)
!15958 = !DILocation(line: 150, column: 1, scope: !15953)
!15959 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2392, file: !2392, line: 1495, type: !15960, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15962)
!15960 = !DISubroutineType(types: !15961)
!15961 = !{!362, !118}
!15962 = !{!15963, !15964}
!15963 = !DILocalVariable(name: "us", arg: 1, scope: !15959, file: !2392, line: 1495, type: !118)
!15964 = !DILocalVariable(name: "ticks", scope: !15959, file: !2392, line: 1497, type: !362)
!15965 = !DILocation(line: 0, scope: !15959)
!15966 = !DILocation(line: 1501, column: 31, scope: !15959)
!15967 = !DILocation(line: 1501, column: 10, scope: !15959)
!15968 = !DILocation(line: 1502, column: 23, scope: !15959)
!15969 = !DILocation(line: 1502, column: 10, scope: !15959)
!15970 = !DILocation(line: 1506, column: 31, scope: !15959)
!15971 = !DILocation(line: 1506, column: 9, scope: !15959)
!15972 = !DILocation(line: 1506, column: 2, scope: !15959)
!15973 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3417, file: !3417, line: 571, type: !3418, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15974)
!15974 = !{!15975}
!15975 = !DILocalVariable(name: "t", arg: 1, scope: !15973, file: !3417, line: 571, type: !213)
!15976 = !DILocation(line: 0, scope: !15973)
!15977 = !DILocation(line: 0, scope: !14042, inlinedAt: !15978)
!15978 = distinct !DILocation(line: 574, column: 9, scope: !15973)
!15979 = !DILocation(line: 135, column: 5, scope: !15951, inlinedAt: !15978)
!15980 = !DILocation(line: 139, column: 13, scope: !15949, inlinedAt: !15978)
!15981 = !DILocation(line: 574, column: 2, scope: !15973)
!15982 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3417, file: !3417, line: 1187, type: !3418, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15983)
!15983 = !{!15984}
!15984 = !DILocalVariable(name: "t", arg: 1, scope: !15982, file: !3417, line: 1187, type: !213)
!15985 = !DILocation(line: 0, scope: !15982)
!15986 = !DILocation(line: 0, scope: !14042, inlinedAt: !15987)
!15987 = distinct !DILocation(line: 1190, column: 9, scope: !15982)
!15988 = !DILocation(line: 145, column: 13, scope: !15989, inlinedAt: !15987)
!15989 = distinct !DILexicalBlock(scope: !14060, file: !3417, line: 144, column: 10)
!15990 = !DILocation(line: 1190, column: 2, scope: !15982)
!15991 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2392, file: !2392, line: 1517, type: !15862, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !15992)
!15992 = !{!15993}
!15993 = !DILocalVariable(name: "thread", arg: 1, scope: !15991, file: !2392, line: 1517, type: !15720)
!15994 = !DILocation(line: 0, scope: !15991)
!15995 = !DILocation(line: 1521, column: 6, scope: !15996)
!15996 = distinct !DILexicalBlock(scope: !15991, file: !2392, line: 1521, column: 6)
!15997 = !DILocation(line: 1521, column: 6, scope: !15991)
!15998 = !DILocation(line: 1525, column: 6, scope: !15999)
!15999 = distinct !DILexicalBlock(scope: !15991, file: !2392, line: 1525, column: 6)
!16000 = !DILocation(line: 1525, column: 37, scope: !15999)
!16001 = !DILocation(line: 1525, column: 6, scope: !15991)
!16002 = !DILocation(line: 1527, column: 20, scope: !16003)
!16003 = distinct !DILexicalBlock(scope: !16004, file: !2392, line: 1527, column: 7)
!16004 = distinct !DILexicalBlock(scope: !15999, file: !2392, line: 1525, column: 42)
!16005 = !DILocation(line: 1527, column: 33, scope: !16003)
!16006 = !DILocation(line: 1527, column: 7, scope: !16004)
!16007 = !DILocation(line: 1532, column: 2, scope: !15991)
!16008 = !DILocation(line: 1533, column: 2, scope: !15991)
!16009 = !DILocation(line: 1031, column: 3, scope: !14709, inlinedAt: !16010)
!16010 = distinct !DILocation(line: 48, column: 10, scope: !14713, inlinedAt: !16011)
!16011 = distinct !DILocation(line: 1537, column: 7, scope: !16012)
!16012 = distinct !DILexicalBlock(scope: !15991, file: !2392, line: 1537, column: 6)
!16013 = !DILocation(line: 0, scope: !14709, inlinedAt: !16010)
!16014 = !DILocation(line: 48, column: 9, scope: !14713, inlinedAt: !16011)
!16015 = !DILocation(line: 1537, column: 6, scope: !15991)
!16016 = !DILocation(line: 1538, column: 3, scope: !16017)
!16017 = distinct !DILexicalBlock(scope: !16012, file: !2392, line: 1537, column: 25)
!16018 = !DILocation(line: 1539, column: 2, scope: !16017)
!16019 = !DILocation(line: 1540, column: 1, scope: !15991)
!16020 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12360, file: !12360, line: 101, type: !14123, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !16021)
!16021 = !{!16022}
!16022 = !DILocalVariable(name: "thread", arg: 1, scope: !16020, file: !12360, line: 101, type: !2285)
!16023 = !DILocation(line: 0, scope: !16020)
!16024 = !DILocation(line: 103, column: 23, scope: !16020)
!16025 = !DILocation(line: 103, column: 36, scope: !16020)
!16026 = !DILocation(line: 103, column: 55, scope: !16020)
!16027 = !DILocation(line: 103, column: 2, scope: !16020)
!16028 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2392, file: !2392, line: 1567, type: !16029, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !16031)
!16029 = !DISubroutineType(types: !16030)
!16030 = !{!15720}
!16031 = !{!16032}
!16032 = !DILocalVariable(name: "ret", scope: !16028, file: !2392, line: 1577, type: !15720)
!16033 = !DILocation(line: 1577, column: 30, scope: !16028)
!16034 = !DILocation(line: 0, scope: !16028)
!16035 = !DILocation(line: 1582, column: 2, scope: !16028)
!16036 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2392, file: !2392, line: 1593, type: !7426, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !2101)
!16037 = !DILocation(line: 1031, column: 3, scope: !14709, inlinedAt: !16038)
!16038 = distinct !DILocation(line: 48, column: 10, scope: !14713, inlinedAt: !16039)
!16039 = distinct !DILocation(line: 1595, column: 10, scope: !16036)
!16040 = !DILocation(line: 0, scope: !14709, inlinedAt: !16038)
!16041 = !DILocation(line: 48, column: 9, scope: !14713, inlinedAt: !16039)
!16042 = !DILocation(line: 1595, column: 27, scope: !16036)
!16043 = !DILocation(line: 1595, column: 41, scope: !16036)
!16044 = !DILocation(line: 1595, column: 30, scope: !16036)
!16045 = !DILocation(line: 1595, column: 2, scope: !16036)
!16046 = distinct !DISubprogram(name: "z_thread_abort", scope: !2392, file: !2392, line: 1725, type: !13940, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !16047)
!16047 = !{!16048, !16049}
!16048 = !DILocalVariable(name: "thread", arg: 1, scope: !16046, file: !2392, line: 1725, type: !2285)
!16049 = !DILocalVariable(name: "key", scope: !16046, file: !2392, line: 1727, type: !13974)
!16050 = !DILocation(line: 0, scope: !16046)
!16051 = !DILocation(line: 0, scope: !13982, inlinedAt: !16052)
!16052 = distinct !DILocation(line: 1727, column: 25, scope: !16046)
!16053 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !16054)
!16054 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !16052)
!16055 = !DILocation(line: 0, scope: !13991, inlinedAt: !16054)
!16056 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !16052)
!16057 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !16052)
!16058 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !16052)
!16059 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !16052)
!16060 = !DILocation(line: 1729, column: 20, scope: !16061)
!16061 = distinct !DILexicalBlock(scope: !16046, file: !2392, line: 1729, column: 6)
!16062 = !DILocation(line: 1729, column: 33, scope: !16061)
!16063 = !DILocation(line: 1729, column: 48, scope: !16061)
!16064 = !DILocation(line: 1729, column: 6, scope: !16046)
!16065 = !DILocation(line: 0, scope: !14016, inlinedAt: !16066)
!16066 = distinct !DILocation(line: 1730, column: 3, scope: !16067)
!16067 = distinct !DILexicalBlock(scope: !16061, file: !2392, line: 1729, column: 54)
!16068 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !16066)
!16069 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !16066)
!16070 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !16066)
!16071 = !DILocation(line: 0, scope: !14030, inlinedAt: !16072)
!16072 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !16066)
!16073 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !16072)
!16074 = !DILocation(line: 1731, column: 3, scope: !16075)
!16075 = distinct !DILexicalBlock(scope: !16076, file: !2392, line: 1731, column: 3)
!16076 = distinct !DILexicalBlock(scope: !16077, file: !2392, line: 1731, column: 3)
!16077 = distinct !DILexicalBlock(scope: !16067, file: !2392, line: 1731, column: 3)
!16078 = !DILocation(line: 1736, column: 20, scope: !16079)
!16079 = distinct !DILexicalBlock(scope: !16046, file: !2392, line: 1736, column: 6)
!16080 = !DILocation(line: 1736, column: 33, scope: !16079)
!16081 = !DILocation(line: 1736, column: 49, scope: !16079)
!16082 = !DILocation(line: 1736, column: 6, scope: !16046)
!16083 = !DILocation(line: 0, scope: !14016, inlinedAt: !16084)
!16084 = distinct !DILocation(line: 1737, column: 3, scope: !16085)
!16085 = distinct !DILexicalBlock(scope: !16079, file: !2392, line: 1736, column: 56)
!16086 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !16084)
!16087 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !16084)
!16088 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !16084)
!16089 = !DILocation(line: 0, scope: !14030, inlinedAt: !16090)
!16090 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !16084)
!16091 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !16090)
!16092 = !DILocation(line: 1738, column: 3, scope: !16085)
!16093 = !DILocation(line: 1775, column: 2, scope: !16046)
!16094 = !DILocation(line: 1776, column: 16, scope: !16095)
!16095 = distinct !DILexicalBlock(scope: !16046, file: !2392, line: 1776, column: 6)
!16096 = !DILocation(line: 1776, column: 13, scope: !16095)
!16097 = !DILocation(line: 1776, column: 25, scope: !16095)
!16098 = !DILocation(line: 1031, column: 3, scope: !14709, inlinedAt: !16099)
!16099 = distinct !DILocation(line: 48, column: 10, scope: !14713, inlinedAt: !16100)
!16100 = distinct !DILocation(line: 1776, column: 29, scope: !16095)
!16101 = !DILocation(line: 0, scope: !14709, inlinedAt: !16099)
!16102 = !DILocation(line: 48, column: 9, scope: !14713, inlinedAt: !16100)
!16103 = !DILocation(line: 1776, column: 6, scope: !16046)
!16104 = !DILocation(line: 0, scope: !14660, inlinedAt: !16105)
!16105 = distinct !DILocation(line: 1777, column: 3, scope: !16106)
!16106 = distinct !DILexicalBlock(scope: !16095, file: !2392, line: 1776, column: 47)
!16107 = !DILocation(line: 0, scope: !14669, inlinedAt: !16108)
!16108 = distinct !DILocation(line: 195, column: 2, scope: !14660, inlinedAt: !16105)
!16109 = !DILocation(line: 225, column: 2, scope: !14676, inlinedAt: !16108)
!16110 = !DILocation(line: 225, column: 2, scope: !14677, inlinedAt: !16108)
!16111 = !DILocation(line: 225, column: 2, scope: !14680, inlinedAt: !16108)
!16112 = !DILocation(line: 196, column: 9, scope: !14660, inlinedAt: !16105)
!16113 = !DILocation(line: 1778, column: 3, scope: !16114)
!16114 = distinct !DILexicalBlock(scope: !16115, file: !2392, line: 1778, column: 3)
!16115 = distinct !DILexicalBlock(scope: !16116, file: !2392, line: 1778, column: 3)
!16116 = distinct !DILexicalBlock(scope: !16106, file: !2392, line: 1778, column: 3)
!16117 = !DILocation(line: 0, scope: !14016, inlinedAt: !16118)
!16118 = distinct !DILocation(line: 1780, column: 2, scope: !16046)
!16119 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !16118)
!16120 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !16118)
!16121 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !16118)
!16122 = !DILocation(line: 0, scope: !14030, inlinedAt: !16123)
!16123 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !16118)
!16124 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !16123)
!16125 = !DILocation(line: 1781, column: 1, scope: !16046)
!16126 = distinct !DISubprogram(name: "end_thread", scope: !2392, file: !2392, line: 1690, type: !13940, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !16127)
!16127 = !{!16128}
!16128 = !DILocalVariable(name: "thread", arg: 1, scope: !16126, file: !2392, line: 1690, type: !2285)
!16129 = !DILocation(line: 0, scope: !16126)
!16130 = !DILocation(line: 1695, column: 20, scope: !16131)
!16131 = distinct !DILexicalBlock(scope: !16126, file: !2392, line: 1695, column: 6)
!16132 = !DILocation(line: 1695, column: 33, scope: !16131)
!16133 = !DILocation(line: 1695, column: 49, scope: !16131)
!16134 = !DILocation(line: 1695, column: 6, scope: !16126)
!16135 = !DILocation(line: 1697, column: 29, scope: !16136)
!16136 = distinct !DILexicalBlock(scope: !16131, file: !2392, line: 1695, column: 56)
!16137 = !DILocation(line: 1698, column: 7, scope: !16138)
!16138 = distinct !DILexicalBlock(scope: !16136, file: !2392, line: 1698, column: 7)
!16139 = !DILocation(line: 1698, column: 7, scope: !16136)
!16140 = !DILocation(line: 0, scope: !14174, inlinedAt: !16141)
!16141 = distinct !DILocation(line: 1699, column: 4, scope: !16142)
!16142 = distinct !DILexicalBlock(scope: !16138, file: !2392, line: 1698, column: 35)
!16143 = !DILocation(line: 266, column: 28, scope: !14174, inlinedAt: !16141)
!16144 = !DILocation(line: 0, scope: !14182, inlinedAt: !16145)
!16145 = distinct !DILocation(line: 268, column: 3, scope: !14186, inlinedAt: !16141)
!16146 = !DILocation(line: 234, column: 2, scope: !14182, inlinedAt: !16145)
!16147 = !DILocation(line: 1700, column: 3, scope: !16142)
!16148 = !DILocation(line: 1701, column: 20, scope: !16149)
!16149 = distinct !DILexicalBlock(scope: !16136, file: !2392, line: 1701, column: 7)
!16150 = !DILocation(line: 1701, column: 30, scope: !16149)
!16151 = !DILocation(line: 1701, column: 7, scope: !16136)
!16152 = !DILocation(line: 1702, column: 4, scope: !16153)
!16153 = distinct !DILexicalBlock(scope: !16149, file: !2392, line: 1701, column: 39)
!16154 = !DILocation(line: 1703, column: 3, scope: !16153)
!16155 = !DILocation(line: 1704, column: 9, scope: !16136)
!16156 = !DILocation(line: 1705, column: 23, scope: !16136)
!16157 = !DILocation(line: 1705, column: 3, scope: !16136)
!16158 = !DILocation(line: 1706, column: 3, scope: !16136)
!16159 = !DILocation(line: 1722, column: 2, scope: !16136)
!16160 = !DILocation(line: 1723, column: 1, scope: !16126)
!16161 = distinct !DISubprogram(name: "unpend_all", scope: !2392, file: !2392, line: 1674, type: !16162, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !16164)
!16162 = !DISubroutineType(types: !16163)
!16163 = !{null, !2316}
!16164 = !{!16165, !16166}
!16165 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16161, file: !2392, line: 1674, type: !2316)
!16166 = !DILocalVariable(name: "thread", scope: !16161, file: !2392, line: 1676, type: !2285)
!16167 = !DILocation(line: 0, scope: !16161)
!16168 = !DILocation(line: 1678, column: 19, scope: !16161)
!16169 = !DILocation(line: 1678, column: 41, scope: !16161)
!16170 = !DILocation(line: 1678, column: 2, scope: !16161)
!16171 = !DILocation(line: 1679, column: 3, scope: !16172)
!16172 = distinct !DILexicalBlock(scope: !16161, file: !2392, line: 1678, column: 50)
!16173 = !DILocation(line: 1680, column: 9, scope: !16172)
!16174 = !DILocalVariable(name: "thread", arg: 1, scope: !16175, file: !12380, line: 65, type: !2285)
!16175 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12380, file: !12380, line: 65, type: !16176, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !16178)
!16176 = !DISubroutineType(types: !16177)
!16177 = !{null, !2285, !32}
!16178 = !{!16174, !16179}
!16179 = !DILocalVariable(name: "value", arg: 2, scope: !16175, file: !12380, line: 65, type: !32)
!16180 = !DILocation(line: 0, scope: !16175, inlinedAt: !16181)
!16181 = distinct !DILocation(line: 1681, column: 3, scope: !16172)
!16182 = !DILocation(line: 67, column: 15, scope: !16175, inlinedAt: !16181)
!16183 = !DILocation(line: 67, column: 33, scope: !16175, inlinedAt: !16181)
!16184 = !DILocation(line: 1682, column: 3, scope: !16172)
!16185 = distinct !{!16185, !16170, !16186}
!16186 = !DILocation(line: 1683, column: 2, scope: !16161)
!16187 = !DILocation(line: 1684, column: 1, scope: !16161)
!16188 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2392, file: !2392, line: 1794, type: !16189, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !16191)
!16189 = !DISubroutineType(types: !16190)
!16190 = !{!118, !2285, !14870}
!16191 = !{!16192, !16193, !16194, !16195}
!16192 = !DILocalVariable(name: "thread", arg: 1, scope: !16188, file: !2392, line: 1794, type: !2285)
!16193 = !DILocalVariable(name: "timeout", arg: 2, scope: !16188, file: !2392, line: 1794, type: !14870)
!16194 = !DILocalVariable(name: "key", scope: !16188, file: !2392, line: 1796, type: !13974)
!16195 = !DILocalVariable(name: "ret", scope: !16188, file: !2392, line: 1797, type: !118)
!16196 = !DILocation(line: 0, scope: !16188)
!16197 = !DILocation(line: 0, scope: !13982, inlinedAt: !16198)
!16198 = distinct !DILocation(line: 1796, column: 25, scope: !16188)
!16199 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !16200)
!16200 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !16198)
!16201 = !DILocation(line: 0, scope: !13991, inlinedAt: !16200)
!16202 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !16198)
!16203 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !16198)
!16204 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !16198)
!16205 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !16198)
!16206 = !DILocation(line: 1801, column: 20, scope: !16207)
!16207 = distinct !DILexicalBlock(scope: !16188, file: !2392, line: 1801, column: 6)
!16208 = !DILocation(line: 1801, column: 33, scope: !16207)
!16209 = !DILocation(line: 1801, column: 49, scope: !16207)
!16210 = !DILocation(line: 1801, column: 6, scope: !16188)
!16211 = !DILocation(line: 1803, column: 13, scope: !16212)
!16212 = distinct !DILexicalBlock(scope: !16207, file: !2392, line: 1803, column: 13)
!16213 = !DILocation(line: 1803, column: 13, scope: !16207)
!16214 = !DILocation(line: 1805, column: 24, scope: !16215)
!16215 = distinct !DILexicalBlock(scope: !16212, file: !2392, line: 1805, column: 13)
!16216 = !DILocation(line: 1805, column: 21, scope: !16215)
!16217 = !DILocation(line: 1805, column: 34, scope: !16215)
!16218 = !DILocation(line: 1806, column: 20, scope: !16215)
!16219 = !DILocation(line: 1806, column: 44, scope: !16215)
!16220 = !DILocation(line: 1806, column: 30, scope: !16215)
!16221 = !DILocation(line: 1805, column: 13, scope: !16212)
!16222 = !DILocation(line: 1031, column: 3, scope: !14709, inlinedAt: !16223)
!16223 = distinct !DILocation(line: 48, column: 10, scope: !14713, inlinedAt: !16224)
!16224 = distinct !DILocation(line: 1809, column: 3, scope: !16225)
!16225 = distinct !DILexicalBlock(scope: !16226, file: !2392, line: 1809, column: 3)
!16226 = distinct !DILexicalBlock(scope: !16227, file: !2392, line: 1809, column: 3)
!16227 = distinct !DILexicalBlock(scope: !16215, file: !2392, line: 1808, column: 9)
!16228 = !DILocation(line: 0, scope: !14709, inlinedAt: !16223)
!16229 = !DILocation(line: 48, column: 9, scope: !14713, inlinedAt: !16224)
!16230 = !DILocation(line: 1809, column: 3, scope: !16226)
!16231 = !DILocation(line: 1809, column: 3, scope: !16232)
!16232 = distinct !DILexicalBlock(scope: !16225, file: !2392, line: 1809, column: 3)
!16233 = !DILocation(line: 1810, column: 23, scope: !16227)
!16234 = !DILocation(line: 1810, column: 42, scope: !16227)
!16235 = !DILocation(line: 1810, column: 3, scope: !16227)
!16236 = !DILocation(line: 1811, column: 22, scope: !16227)
!16237 = !DILocation(line: 1811, column: 3, scope: !16227)
!16238 = !DILocation(line: 0, scope: !14660, inlinedAt: !16239)
!16239 = distinct !DILocation(line: 1814, column: 9, scope: !16227)
!16240 = !DILocation(line: 0, scope: !14669, inlinedAt: !16241)
!16241 = distinct !DILocation(line: 195, column: 2, scope: !14660, inlinedAt: !16239)
!16242 = !DILocation(line: 225, column: 2, scope: !14676, inlinedAt: !16241)
!16243 = !DILocation(line: 225, column: 2, scope: !14677, inlinedAt: !16241)
!16244 = !DILocation(line: 225, column: 2, scope: !14680, inlinedAt: !16241)
!16245 = !DILocation(line: 196, column: 9, scope: !14660, inlinedAt: !16239)
!16246 = !DILocation(line: 1817, column: 3, scope: !16227)
!16247 = !DILocation(line: 0, scope: !16207)
!16248 = !DILocation(line: 0, scope: !14016, inlinedAt: !16249)
!16249 = distinct !DILocation(line: 1822, column: 2, scope: !16188)
!16250 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !16249)
!16251 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !16249)
!16252 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !16249)
!16253 = !DILocation(line: 0, scope: !14030, inlinedAt: !16254)
!16254 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !16249)
!16255 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !16254)
!16256 = !DILocation(line: 1823, column: 2, scope: !16188)
!16257 = !DILocation(line: 1824, column: 1, scope: !16188)
!16258 = distinct !DISubprogram(name: "z_sched_wake", scope: !2392, file: !2392, line: 1882, type: !16259, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !16261)
!16259 = !DISubroutineType(types: !16260)
!16260 = !{!146, !2316, !118, !117}
!16261 = !{!16262, !16263, !16264, !16265, !16266, !16267, !16269}
!16262 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16258, file: !2392, line: 1882, type: !2316)
!16263 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16258, file: !2392, line: 1882, type: !118)
!16264 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16258, file: !2392, line: 1882, type: !117)
!16265 = !DILocalVariable(name: "thread", scope: !16258, file: !2392, line: 1884, type: !2285)
!16266 = !DILocalVariable(name: "ret", scope: !16258, file: !2392, line: 1885, type: !146)
!16267 = !DILocalVariable(name: "__i", scope: !16268, file: !2392, line: 1887, type: !13974)
!16268 = distinct !DILexicalBlock(scope: !16258, file: !2392, line: 1887, column: 2)
!16269 = !DILocalVariable(name: "__key", scope: !16268, file: !2392, line: 1887, type: !13974)
!16270 = !DILocation(line: 0, scope: !16258)
!16271 = !DILocation(line: 0, scope: !16268)
!16272 = !DILocation(line: 0, scope: !13982, inlinedAt: !16273)
!16273 = distinct !DILocation(line: 1887, column: 2, scope: !16268)
!16274 = !DILocation(line: 55, column: 2, scope: !13991, inlinedAt: !16275)
!16275 = distinct !DILocation(line: 145, column: 10, scope: !13982, inlinedAt: !16273)
!16276 = !DILocation(line: 0, scope: !13991, inlinedAt: !16275)
!16277 = !DILocation(line: 148, column: 2, scope: !13999, inlinedAt: !16273)
!16278 = !DILocation(line: 148, column: 2, scope: !14000, inlinedAt: !16273)
!16279 = !DILocation(line: 148, column: 2, scope: !14003, inlinedAt: !16273)
!16280 = !DILocation(line: 160, column: 2, scope: !13982, inlinedAt: !16273)
!16281 = !DILocation(line: 1888, column: 12, scope: !16282)
!16282 = distinct !DILexicalBlock(scope: !16283, file: !2392, line: 1887, column: 26)
!16283 = distinct !DILexicalBlock(scope: !16268, file: !2392, line: 1887, column: 2)
!16284 = !DILocation(line: 1890, column: 14, scope: !16285)
!16285 = distinct !DILexicalBlock(scope: !16282, file: !2392, line: 1890, column: 7)
!16286 = !DILocation(line: 1890, column: 7, scope: !16282)
!16287 = !DILocalVariable(name: "thread", arg: 1, scope: !16288, file: !13351, line: 134, type: !2285)
!16288 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13351, file: !13351, line: 134, type: !16289, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !16291)
!16289 = !DISubroutineType(types: !16290)
!16290 = !{null, !2285, !32, !117}
!16291 = !{!16287, !16292, !16293}
!16292 = !DILocalVariable(name: "value", arg: 2, scope: !16288, file: !13351, line: 135, type: !32)
!16293 = !DILocalVariable(name: "data", arg: 3, scope: !16288, file: !13351, line: 136, type: !117)
!16294 = !DILocation(line: 0, scope: !16288, inlinedAt: !16295)
!16295 = distinct !DILocation(line: 1891, column: 4, scope: !16296)
!16296 = distinct !DILexicalBlock(scope: !16285, file: !2392, line: 1890, column: 23)
!16297 = !DILocation(line: 0, scope: !16175, inlinedAt: !16298)
!16298 = distinct !DILocation(line: 138, column: 2, scope: !16288, inlinedAt: !16295)
!16299 = !DILocation(line: 67, column: 15, scope: !16175, inlinedAt: !16298)
!16300 = !DILocation(line: 67, column: 33, scope: !16175, inlinedAt: !16298)
!16301 = !DILocation(line: 139, column: 15, scope: !16288, inlinedAt: !16295)
!16302 = !DILocation(line: 139, column: 25, scope: !16288, inlinedAt: !16295)
!16303 = !DILocation(line: 1894, column: 4, scope: !16296)
!16304 = !DILocation(line: 1895, column: 10, scope: !16296)
!16305 = !DILocation(line: 1896, column: 4, scope: !16296)
!16306 = !DILocation(line: 1898, column: 3, scope: !16296)
!16307 = !DILocation(line: 0, scope: !14016, inlinedAt: !16308)
!16308 = distinct !DILocation(line: 1887, column: 2, scope: !16283)
!16309 = !DILocation(line: 194, column: 2, scope: !14024, inlinedAt: !16308)
!16310 = !DILocation(line: 194, column: 2, scope: !14025, inlinedAt: !16308)
!16311 = !DILocation(line: 194, column: 2, scope: !14028, inlinedAt: !16308)
!16312 = !DILocation(line: 0, scope: !14030, inlinedAt: !16313)
!16313 = distinct !DILocation(line: 215, column: 2, scope: !14016, inlinedAt: !16308)
!16314 = !DILocation(line: 95, column: 2, scope: !14030, inlinedAt: !16313)
!16315 = !DILocation(line: 1901, column: 2, scope: !16258)
!16316 = distinct !DISubprogram(name: "z_sched_wait", scope: !2392, file: !2392, line: 1904, type: !16317, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !16319)
!16317 = !DISubroutineType(types: !16318)
!16318 = !{!118, !13985, !13974, !2316, !14870, !3139}
!16319 = !{!16320, !16321, !16322, !16323, !16324, !16325}
!16320 = !DILocalVariable(name: "lock", arg: 1, scope: !16316, file: !2392, line: 1904, type: !13985)
!16321 = !DILocalVariable(name: "key", arg: 2, scope: !16316, file: !2392, line: 1904, type: !13974)
!16322 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16316, file: !2392, line: 1905, type: !2316)
!16323 = !DILocalVariable(name: "timeout", arg: 4, scope: !16316, file: !2392, line: 1905, type: !14870)
!16324 = !DILocalVariable(name: "data", arg: 5, scope: !16316, file: !2392, line: 1905, type: !3139)
!16325 = !DILocalVariable(name: "ret", scope: !16316, file: !2392, line: 1907, type: !118)
!16326 = !DILocation(line: 0, scope: !16316)
!16327 = !DILocation(line: 1907, column: 12, scope: !16316)
!16328 = !DILocation(line: 1909, column: 11, scope: !16329)
!16329 = distinct !DILexicalBlock(scope: !16316, file: !2392, line: 1909, column: 6)
!16330 = !DILocation(line: 1909, column: 6, scope: !16316)
!16331 = !DILocation(line: 1910, column: 11, scope: !16332)
!16332 = distinct !DILexicalBlock(scope: !16329, file: !2392, line: 1909, column: 20)
!16333 = !DILocation(line: 1910, column: 26, scope: !16332)
!16334 = !DILocation(line: 1910, column: 9, scope: !16332)
!16335 = !DILocation(line: 1911, column: 2, scope: !16332)
!16336 = !DILocation(line: 1912, column: 2, scope: !16316)
!16337 = distinct !DISubprogram(name: "z_data_copy", scope: !16338, file: !16338, line: 22, type: !365, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3156, retainedNodes: !2101)
!16338 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16339 = !DILocation(line: 24, column: 2, scope: !16337)
!16340 = !DILocation(line: 27, column: 2, scope: !16337)
!16341 = !DILocation(line: 71, column: 1, scope: !16337)
!16342 = distinct !DISubprogram(name: "z_add_timeout", scope: !2429, file: !2429, line: 88, type: !16343, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16349)
!16343 = !DISubroutineType(types: !16344)
!16344 = !{null, !2402, !2421, !16345}
!16345 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !16346)
!16346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !16347)
!16347 = !{!16348}
!16348 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16346, file: !114, line: 66, baseType: !113, size: 64)
!16349 = !{!16350, !16351, !16352, !16353, !16359, !16360, !16363, !16366}
!16350 = !DILocalVariable(name: "to", arg: 1, scope: !16342, file: !2429, line: 88, type: !2402)
!16351 = !DILocalVariable(name: "fn", arg: 2, scope: !16342, file: !2429, line: 88, type: !2421)
!16352 = !DILocalVariable(name: "timeout", arg: 3, scope: !16342, file: !2429, line: 89, type: !16345)
!16353 = !DILocalVariable(name: "__i", scope: !16354, file: !2429, line: 102, type: !16355)
!16354 = distinct !DILexicalBlock(scope: !16342, file: !2429, line: 102, column: 2)
!16355 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !16356)
!16356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !16357)
!16357 = !{!16358}
!16358 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16356, file: !334, line: 33, baseType: !118, size: 32)
!16359 = !DILocalVariable(name: "__key", scope: !16354, file: !2429, line: 102, type: !16355)
!16360 = !DILocalVariable(name: "t", scope: !16361, file: !2429, line: 103, type: !2402)
!16361 = distinct !DILexicalBlock(scope: !16362, file: !2429, line: 102, column: 24)
!16362 = distinct !DILexicalBlock(scope: !16354, file: !2429, line: 102, column: 2)
!16363 = !DILocalVariable(name: "ticks", scope: !16364, file: !2429, line: 107, type: !113)
!16364 = distinct !DILexicalBlock(scope: !16365, file: !2429, line: 106, column: 39)
!16365 = distinct !DILexicalBlock(scope: !16361, file: !2429, line: 105, column: 7)
!16366 = !DILocalVariable(name: "next_time", scope: !16367, file: !2429, line: 137, type: !362)
!16367 = distinct !DILexicalBlock(scope: !16368, file: !2429, line: 127, column: 22)
!16368 = distinct !DILexicalBlock(scope: !16361, file: !2429, line: 127, column: 7)
!16369 = !DILocation(line: 0, scope: !16342)
!16370 = !DILocation(line: 91, column: 6, scope: !16371)
!16371 = distinct !DILexicalBlock(scope: !16342, file: !2429, line: 91, column: 6)
!16372 = !DILocation(line: 91, column: 6, scope: !16342)
!16373 = !DILocation(line: 99, column: 2, scope: !16374)
!16374 = distinct !DILexicalBlock(scope: !16375, file: !2429, line: 99, column: 2)
!16375 = distinct !DILexicalBlock(scope: !16342, file: !2429, line: 99, column: 2)
!16376 = !DILocation(line: 99, column: 2, scope: !16375)
!16377 = !DILocation(line: 99, column: 2, scope: !16378)
!16378 = distinct !DILexicalBlock(scope: !16374, file: !2429, line: 99, column: 2)
!16379 = !DILocation(line: 100, column: 6, scope: !16342)
!16380 = !DILocation(line: 100, column: 9, scope: !16342)
!16381 = !DILocation(line: 0, scope: !16354)
!16382 = !DILocalVariable(name: "l", arg: 1, scope: !16383, file: !334, line: 136, type: !16386)
!16383 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !16384, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16387)
!16384 = !DISubroutineType(types: !16385)
!16385 = !{!16355, !16386}
!16386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 32)
!16387 = !{!16382, !16388}
!16388 = !DILocalVariable(name: "k", scope: !16383, file: !334, line: 139, type: !16355)
!16389 = !DILocation(line: 0, scope: !16383, inlinedAt: !16390)
!16390 = distinct !DILocation(line: 102, column: 2, scope: !16354)
!16391 = !DILocation(line: 55, column: 2, scope: !16392, inlinedAt: !16396)
!16392 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6137, file: !6137, line: 42, type: !6138, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16393)
!16393 = !{!16394, !16395}
!16394 = !DILocalVariable(name: "key", scope: !16392, file: !6137, line: 44, type: !32)
!16395 = !DILocalVariable(name: "tmp", scope: !16392, file: !6137, line: 53, type: !32)
!16396 = distinct !DILocation(line: 145, column: 10, scope: !16383, inlinedAt: !16390)
!16397 = !{i64 1955932}
!16398 = !DILocation(line: 0, scope: !16392, inlinedAt: !16396)
!16399 = !DILocation(line: 148, column: 2, scope: !16400, inlinedAt: !16390)
!16400 = distinct !DILexicalBlock(scope: !16401, file: !334, line: 148, column: 2)
!16401 = distinct !DILexicalBlock(scope: !16383, file: !334, line: 148, column: 2)
!16402 = !DILocation(line: 148, column: 2, scope: !16401, inlinedAt: !16390)
!16403 = !DILocation(line: 148, column: 2, scope: !16404, inlinedAt: !16390)
!16404 = distinct !DILexicalBlock(scope: !16400, file: !334, line: 148, column: 2)
!16405 = !DILocation(line: 160, column: 2, scope: !16383, inlinedAt: !16390)
!16406 = !DILocation(line: 106, column: 33, scope: !16365)
!16407 = !DILocation(line: 105, column: 7, scope: !16361)
!16408 = !DILocation(line: 107, column: 50, scope: !16364)
!16409 = !DILocation(line: 107, column: 48, scope: !16364)
!16410 = !DILocation(line: 0, scope: !16364)
!16411 = !DILocation(line: 109, column: 17, scope: !16364)
!16412 = !DILocation(line: 110, column: 3, scope: !16364)
!16413 = !DILocation(line: 111, column: 31, scope: !16414)
!16414 = distinct !DILexicalBlock(scope: !16365, file: !2429, line: 110, column: 10)
!16415 = !DILocation(line: 111, column: 37, scope: !16414)
!16416 = !DILocation(line: 111, column: 35, scope: !16414)
!16417 = !DILocation(line: 0, scope: !16365)
!16418 = !DILocation(line: 109, column: 8, scope: !16364)
!16419 = !DILocation(line: 109, column: 15, scope: !16364)
!16420 = !DILocation(line: 114, column: 12, scope: !16421)
!16421 = distinct !DILexicalBlock(scope: !16361, file: !2429, line: 114, column: 3)
!16422 = !DILocation(line: 0, scope: !16361)
!16423 = !DILocation(line: 114, column: 3, scope: !16421)
!16424 = !DILocation(line: 115, column: 24, scope: !16425)
!16425 = distinct !DILexicalBlock(scope: !16426, file: !2429, line: 115, column: 8)
!16426 = distinct !DILexicalBlock(scope: !16427, file: !2429, line: 114, column: 45)
!16427 = distinct !DILexicalBlock(scope: !16421, file: !2429, line: 114, column: 3)
!16428 = !DILocation(line: 115, column: 11, scope: !16425)
!16429 = !DILocation(line: 115, column: 18, scope: !16425)
!16430 = !DILocation(line: 115, column: 8, scope: !16426)
!16431 = !DILocation(line: 116, column: 15, scope: !16432)
!16432 = distinct !DILexicalBlock(scope: !16425, file: !2429, line: 115, column: 32)
!16433 = !DILocation(line: 117, column: 26, scope: !16432)
!16434 = !DILocation(line: 117, column: 5, scope: !16432)
!16435 = !DILocation(line: 123, column: 7, scope: !16361)
!16436 = !DILocation(line: 120, column: 15, scope: !16426)
!16437 = !DILocation(line: 114, column: 36, scope: !16427)
!16438 = distinct !{!16438, !16423, !16439}
!16439 = !DILocation(line: 121, column: 3, scope: !16421)
!16440 = !DILocation(line: 124, column: 4, scope: !16441)
!16441 = distinct !DILexicalBlock(scope: !16442, file: !2429, line: 123, column: 18)
!16442 = distinct !DILexicalBlock(scope: !16361, file: !2429, line: 123, column: 7)
!16443 = !DILocation(line: 125, column: 3, scope: !16441)
!16444 = !DILocation(line: 127, column: 13, scope: !16368)
!16445 = !DILocation(line: 127, column: 10, scope: !16368)
!16446 = !DILocation(line: 127, column: 7, scope: !16361)
!16447 = !DILocation(line: 137, column: 24, scope: !16367)
!16448 = !DILocation(line: 0, scope: !16367)
!16449 = !DILocation(line: 139, column: 18, scope: !16450)
!16450 = distinct !DILexicalBlock(scope: !16367, file: !2429, line: 139, column: 8)
!16451 = !DILocation(line: 139, column: 23, scope: !16450)
!16452 = !DILocation(line: 141, column: 5, scope: !16453)
!16453 = distinct !DILexicalBlock(scope: !16450, file: !2429, line: 140, column: 48)
!16454 = !DILocation(line: 142, column: 4, scope: !16453)
!16455 = !DILocalVariable(name: "key", arg: 2, scope: !16456, file: !334, line: 190, type: !16355)
!16456 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !16457, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16459)
!16457 = !DISubroutineType(types: !16458)
!16458 = !{null, !16386, !16355}
!16459 = !{!16460, !16455}
!16460 = !DILocalVariable(name: "l", arg: 1, scope: !16456, file: !334, line: 189, type: !16386)
!16461 = !DILocation(line: 0, scope: !16456, inlinedAt: !16462)
!16462 = distinct !DILocation(line: 102, column: 2, scope: !16362)
!16463 = !DILocation(line: 194, column: 2, scope: !16464, inlinedAt: !16462)
!16464 = distinct !DILexicalBlock(scope: !16465, file: !334, line: 194, column: 2)
!16465 = distinct !DILexicalBlock(scope: !16456, file: !334, line: 194, column: 2)
!16466 = !DILocation(line: 194, column: 2, scope: !16465, inlinedAt: !16462)
!16467 = !DILocation(line: 194, column: 2, scope: !16468, inlinedAt: !16462)
!16468 = distinct !DILexicalBlock(scope: !16464, file: !334, line: 194, column: 2)
!16469 = !DILocalVariable(name: "key", arg: 1, scope: !16470, file: !6137, line: 84, type: !32)
!16470 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6137, file: !6137, line: 84, type: !6148, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16471)
!16471 = !{!16469}
!16472 = !DILocation(line: 0, scope: !16470, inlinedAt: !16473)
!16473 = distinct !DILocation(line: 215, column: 2, scope: !16456, inlinedAt: !16462)
!16474 = !DILocation(line: 95, column: 2, scope: !16470, inlinedAt: !16473)
!16475 = !{i64 1956749}
!16476 = !DILocation(line: 148, column: 1, scope: !16342)
!16477 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !235, file: !235, line: 225, type: !16478, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16482)
!16478 = !DISubroutineType(types: !16479)
!16479 = !{!146, !16480}
!16480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16481, size: 32)
!16481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2406)
!16482 = !{!16483}
!16483 = !DILocalVariable(name: "node", arg: 1, scope: !16477, file: !235, line: 225, type: !16480)
!16484 = !DILocation(line: 0, scope: !16477)
!16485 = !DILocation(line: 227, column: 15, scope: !16477)
!16486 = !DILocation(line: 227, column: 20, scope: !16477)
!16487 = !DILocation(line: 227, column: 2, scope: !16477)
!16488 = distinct !DISubprogram(name: "elapsed", scope: !2429, file: !2429, line: 62, type: !16489, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !2101)
!16489 = !DISubroutineType(types: !16490)
!16490 = !{!362}
!16491 = !DILocation(line: 64, column: 9, scope: !16488)
!16492 = !DILocation(line: 64, column: 28, scope: !16488)
!16493 = !DILocation(line: 64, column: 35, scope: !16488)
!16494 = !DILocation(line: 64, column: 2, scope: !16488)
!16495 = distinct !DISubprogram(name: "first", scope: !2429, file: !2429, line: 39, type: !16496, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16498)
!16496 = !DISubroutineType(types: !16497)
!16497 = !{!2402}
!16498 = !{!16499}
!16499 = !DILocalVariable(name: "t", scope: !16495, file: !2429, line: 41, type: !16500)
!16500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 32)
!16501 = !DILocation(line: 41, column: 19, scope: !16495)
!16502 = !DILocation(line: 0, scope: !16495)
!16503 = !DILocation(line: 43, column: 9, scope: !16495)
!16504 = !DILocation(line: 43, column: 2, scope: !16495)
!16505 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !235, file: !235, line: 443, type: !16506, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16508)
!16506 = !DISubroutineType(types: !16507)
!16507 = !{null, !16500, !16500}
!16508 = !{!16509, !16510, !16511}
!16509 = !DILocalVariable(name: "successor", arg: 1, scope: !16505, file: !235, line: 443, type: !16500)
!16510 = !DILocalVariable(name: "node", arg: 2, scope: !16505, file: !235, line: 443, type: !16500)
!16511 = !DILocalVariable(name: "prev", scope: !16505, file: !235, line: 445, type: !16512)
!16512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16500)
!16513 = !DILocation(line: 0, scope: !16505)
!16514 = !DILocation(line: 445, column: 39, scope: !16505)
!16515 = !DILocation(line: 447, column: 8, scope: !16505)
!16516 = !DILocation(line: 447, column: 13, scope: !16505)
!16517 = !DILocation(line: 448, column: 8, scope: !16505)
!16518 = !DILocation(line: 448, column: 13, scope: !16505)
!16519 = !DILocation(line: 449, column: 8, scope: !16505)
!16520 = !DILocation(line: 449, column: 13, scope: !16505)
!16521 = !DILocation(line: 450, column: 18, scope: !16505)
!16522 = !DILocation(line: 451, column: 1, scope: !16505)
!16523 = distinct !DISubprogram(name: "next", scope: !2429, file: !2429, line: 46, type: !16524, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16526)
!16524 = !DISubroutineType(types: !16525)
!16525 = !{!2402, !2402}
!16526 = !{!16527, !16528}
!16527 = !DILocalVariable(name: "t", arg: 1, scope: !16523, file: !2429, line: 46, type: !2402)
!16528 = !DILocalVariable(name: "n", scope: !16523, file: !2429, line: 48, type: !16500)
!16529 = !DILocation(line: 0, scope: !16523)
!16530 = !DILocation(line: 48, column: 58, scope: !16523)
!16531 = !DILocation(line: 48, column: 19, scope: !16523)
!16532 = !DILocation(line: 50, column: 9, scope: !16523)
!16533 = !DILocation(line: 50, column: 2, scope: !16523)
!16534 = distinct !DISubprogram(name: "sys_dlist_append", scope: !235, file: !235, line: 404, type: !16535, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16538)
!16535 = !DISubroutineType(types: !16536)
!16536 = !{null, !16537, !16500}
!16537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 32)
!16538 = !{!16539, !16540, !16541}
!16539 = !DILocalVariable(name: "list", arg: 1, scope: !16534, file: !235, line: 404, type: !16537)
!16540 = !DILocalVariable(name: "node", arg: 2, scope: !16534, file: !235, line: 404, type: !16500)
!16541 = !DILocalVariable(name: "tail", scope: !16534, file: !235, line: 406, type: !16512)
!16542 = !DILocation(line: 0, scope: !16534)
!16543 = !DILocation(line: 406, column: 34, scope: !16534)
!16544 = !DILocation(line: 408, column: 8, scope: !16534)
!16545 = !DILocation(line: 408, column: 13, scope: !16534)
!16546 = !DILocation(line: 409, column: 8, scope: !16534)
!16547 = !DILocation(line: 409, column: 13, scope: !16534)
!16548 = !DILocation(line: 411, column: 8, scope: !16534)
!16549 = !DILocation(line: 411, column: 13, scope: !16534)
!16550 = !DILocation(line: 412, column: 13, scope: !16534)
!16551 = !DILocation(line: 413, column: 1, scope: !16534)
!16552 = distinct !DISubprogram(name: "next_timeout", scope: !2429, file: !2429, line: 67, type: !16489, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16553)
!16553 = !{!16554, !16555, !16556}
!16554 = !DILocalVariable(name: "to", scope: !16552, file: !2429, line: 69, type: !2402)
!16555 = !DILocalVariable(name: "ticks_elapsed", scope: !16552, file: !2429, line: 70, type: !362)
!16556 = !DILocalVariable(name: "ret", scope: !16552, file: !2429, line: 71, type: !362)
!16557 = !DILocation(line: 69, column: 24, scope: !16552)
!16558 = !DILocation(line: 0, scope: !16552)
!16559 = !DILocation(line: 70, column: 26, scope: !16552)
!16560 = !DILocation(line: 73, column: 10, scope: !16561)
!16561 = distinct !DILexicalBlock(scope: !16552, file: !2429, line: 73, column: 6)
!16562 = !DILocation(line: 73, column: 19, scope: !16561)
!16563 = !DILocation(line: 74, column: 21, scope: !16561)
!16564 = !DILocation(line: 74, column: 30, scope: !16561)
!16565 = !DILocation(line: 74, column: 28, scope: !16561)
!16566 = !DILocation(line: 74, column: 45, scope: !16561)
!16567 = !DILocation(line: 73, column: 6, scope: !16552)
!16568 = !DILocation(line: 77, column: 9, scope: !16569)
!16569 = distinct !DILexicalBlock(scope: !16561, file: !2429, line: 76, column: 9)
!16570 = !DILocation(line: 0, scope: !16561)
!16571 = !DILocation(line: 81, column: 20, scope: !16572)
!16572 = distinct !DILexicalBlock(scope: !16552, file: !2429, line: 81, column: 6)
!16573 = !DILocation(line: 81, column: 6, scope: !16572)
!16574 = !DILocation(line: 81, column: 32, scope: !16572)
!16575 = !DILocation(line: 85, column: 2, scope: !16552)
!16576 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !235, file: !235, line: 341, type: !16577, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16579)
!16577 = !DISubroutineType(types: !16578)
!16578 = !{!16500, !16537, !16500}
!16579 = !{!16580, !16581}
!16580 = !DILocalVariable(name: "list", arg: 1, scope: !16576, file: !235, line: 341, type: !16537)
!16581 = !DILocalVariable(name: "node", arg: 2, scope: !16576, file: !235, line: 342, type: !16500)
!16582 = !DILocation(line: 0, scope: !16576)
!16583 = !DILocation(line: 344, column: 15, scope: !16576)
!16584 = !DILocation(line: 344, column: 9, scope: !16576)
!16585 = !DILocation(line: 344, column: 26, scope: !16576)
!16586 = !DILocation(line: 344, column: 2, scope: !16576)
!16587 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !235, file: !235, line: 325, type: !16577, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16588)
!16588 = !{!16589, !16590}
!16589 = !DILocalVariable(name: "list", arg: 1, scope: !16587, file: !235, line: 325, type: !16537)
!16590 = !DILocalVariable(name: "node", arg: 2, scope: !16587, file: !235, line: 326, type: !16500)
!16591 = !DILocation(line: 0, scope: !16587)
!16592 = !DILocation(line: 328, column: 24, scope: !16587)
!16593 = !DILocation(line: 328, column: 15, scope: !16587)
!16594 = !DILocation(line: 328, column: 9, scope: !16587)
!16595 = !DILocation(line: 328, column: 45, scope: !16587)
!16596 = !DILocation(line: 328, column: 2, scope: !16587)
!16597 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !235, file: !235, line: 294, type: !16598, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16600)
!16598 = !DISubroutineType(types: !16599)
!16599 = !{!16500, !16537}
!16600 = !{!16601}
!16601 = !DILocalVariable(name: "list", arg: 1, scope: !16597, file: !235, line: 294, type: !16537)
!16602 = !DILocation(line: 0, scope: !16597)
!16603 = !DILocation(line: 296, column: 9, scope: !16597)
!16604 = !DILocation(line: 296, column: 2, scope: !16597)
!16605 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !235, file: !235, line: 266, type: !16606, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16608)
!16606 = !DISubroutineType(types: !16607)
!16607 = !{!146, !16537}
!16608 = !{!16609}
!16609 = !DILocalVariable(name: "list", arg: 1, scope: !16605, file: !235, line: 266, type: !16537)
!16610 = !DILocation(line: 0, scope: !16605)
!16611 = !DILocation(line: 268, column: 15, scope: !16605)
!16612 = !DILocation(line: 268, column: 20, scope: !16605)
!16613 = !DILocation(line: 268, column: 2, scope: !16605)
!16614 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2429, file: !2429, line: 150, type: !16615, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16617)
!16615 = !DISubroutineType(types: !16616)
!16616 = !{!118, !2402}
!16617 = !{!16618, !16619, !16620, !16622}
!16618 = !DILocalVariable(name: "to", arg: 1, scope: !16614, file: !2429, line: 150, type: !2402)
!16619 = !DILocalVariable(name: "ret", scope: !16614, file: !2429, line: 152, type: !118)
!16620 = !DILocalVariable(name: "__i", scope: !16621, file: !2429, line: 154, type: !16355)
!16621 = distinct !DILexicalBlock(scope: !16614, file: !2429, line: 154, column: 2)
!16622 = !DILocalVariable(name: "__key", scope: !16621, file: !2429, line: 154, type: !16355)
!16623 = !DILocation(line: 0, scope: !16614)
!16624 = !DILocation(line: 0, scope: !16621)
!16625 = !DILocation(line: 0, scope: !16383, inlinedAt: !16626)
!16626 = distinct !DILocation(line: 154, column: 2, scope: !16621)
!16627 = !DILocation(line: 55, column: 2, scope: !16392, inlinedAt: !16628)
!16628 = distinct !DILocation(line: 145, column: 10, scope: !16383, inlinedAt: !16626)
!16629 = !DILocation(line: 0, scope: !16392, inlinedAt: !16628)
!16630 = !DILocation(line: 148, column: 2, scope: !16400, inlinedAt: !16626)
!16631 = !DILocation(line: 148, column: 2, scope: !16401, inlinedAt: !16626)
!16632 = !DILocation(line: 148, column: 2, scope: !16404, inlinedAt: !16626)
!16633 = !DILocation(line: 160, column: 2, scope: !16383, inlinedAt: !16626)
!16634 = !DILocation(line: 155, column: 7, scope: !16635)
!16635 = distinct !DILexicalBlock(scope: !16636, file: !2429, line: 155, column: 7)
!16636 = distinct !DILexicalBlock(scope: !16637, file: !2429, line: 154, column: 24)
!16637 = distinct !DILexicalBlock(scope: !16621, file: !2429, line: 154, column: 2)
!16638 = !DILocation(line: 155, column: 7, scope: !16636)
!16639 = !DILocation(line: 156, column: 4, scope: !16640)
!16640 = distinct !DILexicalBlock(scope: !16635, file: !2429, line: 155, column: 39)
!16641 = !DILocation(line: 158, column: 3, scope: !16640)
!16642 = !DILocation(line: 0, scope: !16456, inlinedAt: !16643)
!16643 = distinct !DILocation(line: 154, column: 2, scope: !16637)
!16644 = !DILocation(line: 194, column: 2, scope: !16464, inlinedAt: !16643)
!16645 = !DILocation(line: 194, column: 2, scope: !16465, inlinedAt: !16643)
!16646 = !DILocation(line: 194, column: 2, scope: !16468, inlinedAt: !16643)
!16647 = !DILocation(line: 0, scope: !16470, inlinedAt: !16648)
!16648 = distinct !DILocation(line: 215, column: 2, scope: !16456, inlinedAt: !16643)
!16649 = !DILocation(line: 95, column: 2, scope: !16470, inlinedAt: !16648)
!16650 = !DILocation(line: 161, column: 2, scope: !16614)
!16651 = distinct !DISubprogram(name: "remove_timeout", scope: !2429, file: !2429, line: 53, type: !2423, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16652)
!16652 = !{!16653}
!16653 = !DILocalVariable(name: "t", arg: 1, scope: !16651, file: !2429, line: 53, type: !2402)
!16654 = !DILocation(line: 0, scope: !16651)
!16655 = !DILocation(line: 55, column: 6, scope: !16656)
!16656 = distinct !DILexicalBlock(scope: !16651, file: !2429, line: 55, column: 6)
!16657 = !DILocation(line: 55, column: 14, scope: !16656)
!16658 = !DILocation(line: 55, column: 6, scope: !16651)
!16659 = !DILocation(line: 56, column: 25, scope: !16660)
!16660 = distinct !DILexicalBlock(scope: !16656, file: !2429, line: 55, column: 23)
!16661 = !DILocation(line: 56, column: 12, scope: !16660)
!16662 = !DILocation(line: 56, column: 19, scope: !16660)
!16663 = !DILocation(line: 57, column: 2, scope: !16660)
!16664 = !DILocation(line: 59, column: 23, scope: !16651)
!16665 = !DILocation(line: 59, column: 2, scope: !16651)
!16666 = !DILocation(line: 60, column: 1, scope: !16651)
!16667 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !235, file: !235, line: 496, type: !16668, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16670)
!16668 = !DISubroutineType(types: !16669)
!16669 = !{null, !16500}
!16670 = !{!16671, !16672, !16673}
!16671 = !DILocalVariable(name: "node", arg: 1, scope: !16667, file: !235, line: 496, type: !16500)
!16672 = !DILocalVariable(name: "prev", scope: !16667, file: !235, line: 498, type: !16512)
!16673 = !DILocalVariable(name: "next", scope: !16667, file: !235, line: 499, type: !16512)
!16674 = !DILocation(line: 0, scope: !16667)
!16675 = !DILocation(line: 498, column: 34, scope: !16667)
!16676 = !DILocation(line: 499, column: 34, scope: !16667)
!16677 = !DILocation(line: 501, column: 8, scope: !16667)
!16678 = !DILocation(line: 501, column: 13, scope: !16667)
!16679 = !DILocation(line: 502, column: 8, scope: !16667)
!16680 = !DILocation(line: 502, column: 13, scope: !16667)
!16681 = !DILocation(line: 503, column: 2, scope: !16667)
!16682 = !DILocation(line: 504, column: 1, scope: !16667)
!16683 = distinct !DISubprogram(name: "sys_dnode_init", scope: !235, file: !235, line: 211, type: !16668, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16684)
!16684 = !{!16685}
!16685 = !DILocalVariable(name: "node", arg: 1, scope: !16683, file: !235, line: 211, type: !16500)
!16686 = !DILocation(line: 0, scope: !16683)
!16687 = !DILocation(line: 213, column: 8, scope: !16683)
!16688 = !DILocation(line: 213, column: 13, scope: !16683)
!16689 = !DILocation(line: 214, column: 8, scope: !16683)
!16690 = !DILocation(line: 214, column: 13, scope: !16683)
!16691 = !DILocation(line: 215, column: 1, scope: !16683)
!16692 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2429, file: !2429, line: 183, type: !16693, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16697)
!16693 = !DISubroutineType(types: !16694)
!16694 = !{!113, !16695}
!16695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16696, size: 32)
!16696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2403)
!16697 = !{!16698, !16699, !16700, !16702}
!16698 = !DILocalVariable(name: "timeout", arg: 1, scope: !16692, file: !2429, line: 183, type: !16695)
!16699 = !DILocalVariable(name: "ticks", scope: !16692, file: !2429, line: 185, type: !113)
!16700 = !DILocalVariable(name: "__i", scope: !16701, file: !2429, line: 187, type: !16355)
!16701 = distinct !DILexicalBlock(scope: !16692, file: !2429, line: 187, column: 2)
!16702 = !DILocalVariable(name: "__key", scope: !16701, file: !2429, line: 187, type: !16355)
!16703 = !DILocation(line: 0, scope: !16692)
!16704 = !DILocation(line: 0, scope: !16701)
!16705 = !DILocation(line: 0, scope: !16383, inlinedAt: !16706)
!16706 = distinct !DILocation(line: 187, column: 2, scope: !16701)
!16707 = !DILocation(line: 55, column: 2, scope: !16392, inlinedAt: !16708)
!16708 = distinct !DILocation(line: 145, column: 10, scope: !16383, inlinedAt: !16706)
!16709 = !DILocation(line: 0, scope: !16392, inlinedAt: !16708)
!16710 = !DILocation(line: 148, column: 2, scope: !16400, inlinedAt: !16706)
!16711 = !DILocation(line: 148, column: 2, scope: !16401, inlinedAt: !16706)
!16712 = !DILocation(line: 148, column: 2, scope: !16404, inlinedAt: !16706)
!16713 = !DILocation(line: 160, column: 2, scope: !16383, inlinedAt: !16706)
!16714 = !DILocation(line: 188, column: 11, scope: !16715)
!16715 = distinct !DILexicalBlock(scope: !16716, file: !2429, line: 187, column: 24)
!16716 = distinct !DILexicalBlock(scope: !16701, file: !2429, line: 187, column: 2)
!16717 = !DILocation(line: 0, scope: !16456, inlinedAt: !16718)
!16718 = distinct !DILocation(line: 187, column: 2, scope: !16716)
!16719 = !DILocation(line: 194, column: 2, scope: !16464, inlinedAt: !16718)
!16720 = !DILocation(line: 194, column: 2, scope: !16465, inlinedAt: !16718)
!16721 = !DILocation(line: 194, column: 2, scope: !16468, inlinedAt: !16718)
!16722 = !DILocation(line: 0, scope: !16470, inlinedAt: !16723)
!16723 = distinct !DILocation(line: 215, column: 2, scope: !16456, inlinedAt: !16718)
!16724 = !DILocation(line: 95, column: 2, scope: !16470, inlinedAt: !16723)
!16725 = !DILocation(line: 191, column: 2, scope: !16692)
!16726 = distinct !DISubprogram(name: "timeout_rem", scope: !2429, file: !2429, line: 165, type: !16693, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16727)
!16727 = !{!16728, !16729, !16730}
!16728 = !DILocalVariable(name: "timeout", arg: 1, scope: !16726, file: !2429, line: 165, type: !16695)
!16729 = !DILocalVariable(name: "ticks", scope: !16726, file: !2429, line: 167, type: !113)
!16730 = !DILocalVariable(name: "t", scope: !16731, file: !2429, line: 173, type: !2402)
!16731 = distinct !DILexicalBlock(scope: !16726, file: !2429, line: 173, column: 2)
!16732 = !DILocation(line: 0, scope: !16726)
!16733 = !DILocation(line: 169, column: 6, scope: !16734)
!16734 = distinct !DILexicalBlock(scope: !16726, file: !2429, line: 169, column: 6)
!16735 = !DILocation(line: 169, column: 6, scope: !16726)
!16736 = !DILocation(line: 173, column: 28, scope: !16731)
!16737 = !DILocation(line: 0, scope: !16731)
!16738 = !DILocation(line: 173, column: 39, scope: !16739)
!16739 = distinct !DILexicalBlock(scope: !16731, file: !2429, line: 173, column: 2)
!16740 = !DILocation(line: 173, column: 2, scope: !16731)
!16741 = !DILocation(line: 174, column: 15, scope: !16742)
!16742 = distinct !DILexicalBlock(scope: !16739, file: !2429, line: 173, column: 61)
!16743 = !DILocation(line: 174, column: 9, scope: !16742)
!16744 = !DILocation(line: 175, column: 15, scope: !16745)
!16745 = distinct !DILexicalBlock(scope: !16742, file: !2429, line: 175, column: 7)
!16746 = !DILocation(line: 175, column: 7, scope: !16742)
!16747 = !DILocation(line: 173, column: 52, scope: !16739)
!16748 = distinct !{!16748, !16740, !16749}
!16749 = !DILocation(line: 178, column: 2, scope: !16731)
!16750 = !DILocation(line: 180, column: 17, scope: !16726)
!16751 = !DILocation(line: 180, column: 15, scope: !16726)
!16752 = !DILocation(line: 180, column: 2, scope: !16726)
!16753 = !DILocation(line: 181, column: 1, scope: !16726)
!16754 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12767, file: !12767, line: 35, type: !16755, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16757)
!16755 = !DISubroutineType(types: !16756)
!16756 = !{!146, !16695}
!16757 = !{!16758}
!16758 = !DILocalVariable(name: "to", arg: 1, scope: !16754, file: !12767, line: 35, type: !16695)
!16759 = !DILocation(line: 0, scope: !16754)
!16760 = !DILocation(line: 37, column: 35, scope: !16754)
!16761 = !DILocation(line: 37, column: 10, scope: !16754)
!16762 = !DILocation(line: 37, column: 9, scope: !16754)
!16763 = !DILocation(line: 37, column: 2, scope: !16754)
!16764 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2429, file: !2429, line: 194, type: !16693, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16765)
!16765 = !{!16766, !16767, !16768, !16770}
!16766 = !DILocalVariable(name: "timeout", arg: 1, scope: !16764, file: !2429, line: 194, type: !16695)
!16767 = !DILocalVariable(name: "ticks", scope: !16764, file: !2429, line: 196, type: !113)
!16768 = !DILocalVariable(name: "__i", scope: !16769, file: !2429, line: 198, type: !16355)
!16769 = distinct !DILexicalBlock(scope: !16764, file: !2429, line: 198, column: 2)
!16770 = !DILocalVariable(name: "__key", scope: !16769, file: !2429, line: 198, type: !16355)
!16771 = !DILocation(line: 0, scope: !16764)
!16772 = !DILocation(line: 0, scope: !16769)
!16773 = !DILocation(line: 0, scope: !16383, inlinedAt: !16774)
!16774 = distinct !DILocation(line: 198, column: 2, scope: !16769)
!16775 = !DILocation(line: 55, column: 2, scope: !16392, inlinedAt: !16776)
!16776 = distinct !DILocation(line: 145, column: 10, scope: !16383, inlinedAt: !16774)
!16777 = !DILocation(line: 0, scope: !16392, inlinedAt: !16776)
!16778 = !DILocation(line: 148, column: 2, scope: !16400, inlinedAt: !16774)
!16779 = !DILocation(line: 148, column: 2, scope: !16401, inlinedAt: !16774)
!16780 = !DILocation(line: 148, column: 2, scope: !16404, inlinedAt: !16774)
!16781 = !DILocation(line: 160, column: 2, scope: !16383, inlinedAt: !16774)
!16782 = !DILocation(line: 199, column: 11, scope: !16783)
!16783 = distinct !DILexicalBlock(scope: !16784, file: !2429, line: 198, column: 24)
!16784 = distinct !DILexicalBlock(scope: !16769, file: !2429, line: 198, column: 2)
!16785 = !DILocation(line: 199, column: 23, scope: !16783)
!16786 = !DILocation(line: 0, scope: !16456, inlinedAt: !16787)
!16787 = distinct !DILocation(line: 198, column: 2, scope: !16784)
!16788 = !DILocation(line: 194, column: 2, scope: !16464, inlinedAt: !16787)
!16789 = !DILocation(line: 194, column: 2, scope: !16465, inlinedAt: !16787)
!16790 = !DILocation(line: 194, column: 2, scope: !16468, inlinedAt: !16787)
!16791 = !DILocation(line: 0, scope: !16470, inlinedAt: !16792)
!16792 = distinct !DILocation(line: 215, column: 2, scope: !16456, inlinedAt: !16787)
!16793 = !DILocation(line: 95, column: 2, scope: !16470, inlinedAt: !16792)
!16794 = !DILocation(line: 199, column: 21, scope: !16783)
!16795 = !DILocation(line: 202, column: 2, scope: !16764)
!16796 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2429, file: !2429, line: 205, type: !16489, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16797)
!16797 = !{!16798, !16799, !16801}
!16798 = !DILocalVariable(name: "ret", scope: !16796, file: !2429, line: 207, type: !362)
!16799 = !DILocalVariable(name: "__i", scope: !16800, file: !2429, line: 209, type: !16355)
!16800 = distinct !DILexicalBlock(scope: !16796, file: !2429, line: 209, column: 2)
!16801 = !DILocalVariable(name: "__key", scope: !16800, file: !2429, line: 209, type: !16355)
!16802 = !DILocation(line: 0, scope: !16796)
!16803 = !DILocation(line: 0, scope: !16800)
!16804 = !DILocation(line: 0, scope: !16383, inlinedAt: !16805)
!16805 = distinct !DILocation(line: 209, column: 2, scope: !16800)
!16806 = !DILocation(line: 55, column: 2, scope: !16392, inlinedAt: !16807)
!16807 = distinct !DILocation(line: 145, column: 10, scope: !16383, inlinedAt: !16805)
!16808 = !DILocation(line: 0, scope: !16392, inlinedAt: !16807)
!16809 = !DILocation(line: 148, column: 2, scope: !16400, inlinedAt: !16805)
!16810 = !DILocation(line: 148, column: 2, scope: !16401, inlinedAt: !16805)
!16811 = !DILocation(line: 148, column: 2, scope: !16404, inlinedAt: !16805)
!16812 = !DILocation(line: 160, column: 2, scope: !16383, inlinedAt: !16805)
!16813 = !DILocation(line: 210, column: 9, scope: !16814)
!16814 = distinct !DILexicalBlock(scope: !16815, file: !2429, line: 209, column: 24)
!16815 = distinct !DILexicalBlock(scope: !16800, file: !2429, line: 209, column: 2)
!16816 = !DILocation(line: 0, scope: !16456, inlinedAt: !16817)
!16817 = distinct !DILocation(line: 209, column: 2, scope: !16815)
!16818 = !DILocation(line: 194, column: 2, scope: !16464, inlinedAt: !16817)
!16819 = !DILocation(line: 194, column: 2, scope: !16465, inlinedAt: !16817)
!16820 = !DILocation(line: 194, column: 2, scope: !16468, inlinedAt: !16817)
!16821 = !DILocation(line: 0, scope: !16470, inlinedAt: !16822)
!16822 = distinct !DILocation(line: 215, column: 2, scope: !16456, inlinedAt: !16817)
!16823 = !DILocation(line: 95, column: 2, scope: !16470, inlinedAt: !16822)
!16824 = !DILocation(line: 212, column: 2, scope: !16796)
!16825 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2429, file: !2429, line: 215, type: !10335, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16826)
!16826 = !{!16827, !16828, !16829, !16831, !16832, !16835, !16836}
!16827 = !DILocalVariable(name: "ticks", arg: 1, scope: !16825, file: !2429, line: 215, type: !362)
!16828 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16825, file: !2429, line: 215, type: !146)
!16829 = !DILocalVariable(name: "__i", scope: !16830, file: !2429, line: 217, type: !16355)
!16830 = distinct !DILexicalBlock(scope: !16825, file: !2429, line: 217, column: 2)
!16831 = !DILocalVariable(name: "__key", scope: !16830, file: !2429, line: 217, type: !16355)
!16832 = !DILocalVariable(name: "next_to", scope: !16833, file: !2429, line: 218, type: !118)
!16833 = distinct !DILexicalBlock(scope: !16834, file: !2429, line: 217, column: 24)
!16834 = distinct !DILexicalBlock(scope: !16830, file: !2429, line: 217, column: 2)
!16835 = !DILocalVariable(name: "sooner", scope: !16833, file: !2429, line: 219, type: !146)
!16836 = !DILocalVariable(name: "imminent", scope: !16833, file: !2429, line: 221, type: !146)
!16837 = !DILocation(line: 0, scope: !16825)
!16838 = !DILocation(line: 0, scope: !16830)
!16839 = !DILocation(line: 0, scope: !16383, inlinedAt: !16840)
!16840 = distinct !DILocation(line: 217, column: 2, scope: !16830)
!16841 = !DILocation(line: 55, column: 2, scope: !16392, inlinedAt: !16842)
!16842 = distinct !DILocation(line: 145, column: 10, scope: !16383, inlinedAt: !16840)
!16843 = !DILocation(line: 0, scope: !16392, inlinedAt: !16842)
!16844 = !DILocation(line: 148, column: 2, scope: !16400, inlinedAt: !16840)
!16845 = !DILocation(line: 148, column: 2, scope: !16401, inlinedAt: !16840)
!16846 = !DILocation(line: 148, column: 2, scope: !16404, inlinedAt: !16840)
!16847 = !DILocation(line: 160, column: 2, scope: !16383, inlinedAt: !16840)
!16848 = !DILocation(line: 218, column: 17, scope: !16833)
!16849 = !DILocation(line: 0, scope: !16833)
!16850 = !DILocation(line: 221, column: 27, scope: !16833)
!16851 = !DILocation(line: 233, column: 17, scope: !16852)
!16852 = distinct !DILexicalBlock(scope: !16833, file: !2429, line: 233, column: 7)
!16853 = !DILocation(line: 234, column: 26, scope: !16854)
!16854 = distinct !DILexicalBlock(scope: !16852, file: !2429, line: 233, column: 56)
!16855 = !DILocation(line: 234, column: 4, scope: !16854)
!16856 = !DILocation(line: 235, column: 3, scope: !16854)
!16857 = !DILocation(line: 0, scope: !16456, inlinedAt: !16858)
!16858 = distinct !DILocation(line: 217, column: 2, scope: !16834)
!16859 = !DILocation(line: 194, column: 2, scope: !16464, inlinedAt: !16858)
!16860 = !DILocation(line: 194, column: 2, scope: !16465, inlinedAt: !16858)
!16861 = !DILocation(line: 194, column: 2, scope: !16468, inlinedAt: !16858)
!16862 = !DILocation(line: 0, scope: !16470, inlinedAt: !16863)
!16863 = distinct !DILocation(line: 215, column: 2, scope: !16456, inlinedAt: !16858)
!16864 = !DILocation(line: 95, column: 2, scope: !16470, inlinedAt: !16863)
!16865 = !DILocation(line: 237, column: 1, scope: !16825)
!16866 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2429, file: !2429, line: 239, type: !16867, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16869)
!16867 = !DISubroutineType(types: !16868)
!16868 = !{null, !362}
!16869 = !{!16870, !16871, !16872, !16874}
!16870 = !DILocalVariable(name: "ticks", arg: 1, scope: !16866, file: !2429, line: 239, type: !362)
!16871 = !DILocalVariable(name: "key", scope: !16866, file: !2429, line: 245, type: !16355)
!16872 = !DILocalVariable(name: "t", scope: !16873, file: !2429, line: 262, type: !2402)
!16873 = distinct !DILexicalBlock(scope: !16866, file: !2429, line: 261, column: 67)
!16874 = !DILocalVariable(name: "dt", scope: !16873, file: !2429, line: 263, type: !118)
!16875 = !DILocation(line: 0, scope: !16866)
!16876 = !DILocation(line: 242, column: 2, scope: !16866)
!16877 = !DILocation(line: 0, scope: !16383, inlinedAt: !16878)
!16878 = distinct !DILocation(line: 245, column: 25, scope: !16866)
!16879 = !DILocation(line: 55, column: 2, scope: !16392, inlinedAt: !16880)
!16880 = distinct !DILocation(line: 145, column: 10, scope: !16383, inlinedAt: !16878)
!16881 = !DILocation(line: 0, scope: !16392, inlinedAt: !16880)
!16882 = !DILocation(line: 148, column: 2, scope: !16400, inlinedAt: !16878)
!16883 = !DILocation(line: 148, column: 2, scope: !16401, inlinedAt: !16878)
!16884 = !DILocation(line: 148, column: 2, scope: !16404, inlinedAt: !16878)
!16885 = !DILocation(line: 160, column: 2, scope: !16383, inlinedAt: !16878)
!16886 = !DILocation(line: 261, column: 9, scope: !16866)
!16887 = !DILocation(line: 261, column: 17, scope: !16866)
!16888 = !DILocation(line: 261, column: 25, scope: !16866)
!16889 = !DILocation(line: 261, column: 37, scope: !16866)
!16890 = !DILocation(line: 261, column: 47, scope: !16866)
!16891 = !DILocation(line: 261, column: 44, scope: !16866)
!16892 = !DILocation(line: 261, column: 2, scope: !16866)
!16893 = !DILocation(line: 0, scope: !16873)
!16894 = !DILocation(line: 263, column: 12, scope: !16873)
!16895 = !DILocation(line: 265, column: 16, scope: !16873)
!16896 = !DILocation(line: 265, column: 13, scope: !16873)
!16897 = !DILocation(line: 266, column: 13, scope: !16873)
!16898 = !DILocation(line: 267, column: 3, scope: !16873)
!16899 = !DILocation(line: 0, scope: !16456, inlinedAt: !16900)
!16900 = distinct !DILocation(line: 269, column: 3, scope: !16873)
!16901 = !DILocation(line: 194, column: 2, scope: !16464, inlinedAt: !16900)
!16902 = !DILocation(line: 194, column: 2, scope: !16465, inlinedAt: !16900)
!16903 = !DILocation(line: 194, column: 2, scope: !16468, inlinedAt: !16900)
!16904 = !DILocation(line: 0, scope: !16470, inlinedAt: !16905)
!16905 = distinct !DILocation(line: 215, column: 2, scope: !16456, inlinedAt: !16900)
!16906 = !DILocation(line: 95, column: 2, scope: !16470, inlinedAt: !16905)
!16907 = !DILocation(line: 270, column: 6, scope: !16873)
!16908 = !DILocation(line: 270, column: 3, scope: !16873)
!16909 = !DILocation(line: 0, scope: !16383, inlinedAt: !16910)
!16910 = distinct !DILocation(line: 271, column: 9, scope: !16873)
!16911 = !DILocation(line: 55, column: 2, scope: !16392, inlinedAt: !16912)
!16912 = distinct !DILocation(line: 145, column: 10, scope: !16383, inlinedAt: !16910)
!16913 = !DILocation(line: 0, scope: !16392, inlinedAt: !16912)
!16914 = !DILocation(line: 148, column: 2, scope: !16400, inlinedAt: !16910)
!16915 = !DILocation(line: 148, column: 2, scope: !16401, inlinedAt: !16910)
!16916 = !DILocation(line: 148, column: 2, scope: !16404, inlinedAt: !16910)
!16917 = !DILocation(line: 160, column: 2, scope: !16383, inlinedAt: !16910)
!16918 = !DILocation(line: 272, column: 22, scope: !16873)
!16919 = distinct !{!16919, !16892, !16920}
!16920 = !DILocation(line: 273, column: 2, scope: !16866)
!16921 = !DILocation(line: 276, column: 19, scope: !16922)
!16922 = distinct !DILexicalBlock(scope: !16923, file: !2429, line: 275, column: 23)
!16923 = distinct !DILexicalBlock(scope: !16866, file: !2429, line: 275, column: 6)
!16924 = !DILocation(line: 277, column: 2, scope: !16922)
!16925 = !DILocation(line: 279, column: 15, scope: !16866)
!16926 = !DILocation(line: 279, column: 12, scope: !16866)
!16927 = !DILocation(line: 280, column: 21, scope: !16866)
!16928 = !DILocation(line: 282, column: 24, scope: !16866)
!16929 = !DILocation(line: 282, column: 2, scope: !16866)
!16930 = !DILocation(line: 0, scope: !16456, inlinedAt: !16931)
!16931 = distinct !DILocation(line: 284, column: 2, scope: !16866)
!16932 = !DILocation(line: 194, column: 2, scope: !16464, inlinedAt: !16931)
!16933 = !DILocation(line: 194, column: 2, scope: !16465, inlinedAt: !16931)
!16934 = !DILocation(line: 194, column: 2, scope: !16468, inlinedAt: !16931)
!16935 = !DILocation(line: 0, scope: !16470, inlinedAt: !16936)
!16936 = distinct !DILocation(line: 215, column: 2, scope: !16456, inlinedAt: !16931)
!16937 = !DILocation(line: 95, column: 2, scope: !16470, inlinedAt: !16936)
!16938 = !DILocation(line: 285, column: 1, scope: !16866)
!16939 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2429, file: !2429, line: 287, type: !16940, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16942)
!16940 = !DISubroutineType(types: !16941)
!16941 = !{!115}
!16942 = !{!16943, !16944, !16946}
!16943 = !DILocalVariable(name: "t", scope: !16939, file: !2429, line: 289, type: !213)
!16944 = !DILocalVariable(name: "__i", scope: !16945, file: !2429, line: 291, type: !16355)
!16945 = distinct !DILexicalBlock(scope: !16939, file: !2429, line: 291, column: 2)
!16946 = !DILocalVariable(name: "__key", scope: !16945, file: !2429, line: 291, type: !16355)
!16947 = !DILocation(line: 0, scope: !16939)
!16948 = !DILocation(line: 0, scope: !16945)
!16949 = !DILocation(line: 0, scope: !16383, inlinedAt: !16950)
!16950 = distinct !DILocation(line: 291, column: 2, scope: !16945)
!16951 = !DILocation(line: 55, column: 2, scope: !16392, inlinedAt: !16952)
!16952 = distinct !DILocation(line: 145, column: 10, scope: !16383, inlinedAt: !16950)
!16953 = !DILocation(line: 0, scope: !16392, inlinedAt: !16952)
!16954 = !DILocation(line: 148, column: 2, scope: !16400, inlinedAt: !16950)
!16955 = !DILocation(line: 148, column: 2, scope: !16401, inlinedAt: !16950)
!16956 = !DILocation(line: 148, column: 2, scope: !16404, inlinedAt: !16950)
!16957 = !DILocation(line: 160, column: 2, scope: !16383, inlinedAt: !16950)
!16958 = !DILocation(line: 292, column: 7, scope: !16959)
!16959 = distinct !DILexicalBlock(scope: !16960, file: !2429, line: 291, column: 24)
!16960 = distinct !DILexicalBlock(scope: !16945, file: !2429, line: 291, column: 2)
!16961 = !DILocation(line: 292, column: 19, scope: !16959)
!16962 = !DILocation(line: 0, scope: !16456, inlinedAt: !16963)
!16963 = distinct !DILocation(line: 291, column: 2, scope: !16960)
!16964 = !DILocation(line: 194, column: 2, scope: !16464, inlinedAt: !16963)
!16965 = !DILocation(line: 194, column: 2, scope: !16465, inlinedAt: !16963)
!16966 = !DILocation(line: 194, column: 2, scope: !16468, inlinedAt: !16963)
!16967 = !DILocation(line: 0, scope: !16470, inlinedAt: !16968)
!16968 = distinct !DILocation(line: 215, column: 2, scope: !16456, inlinedAt: !16963)
!16969 = !DILocation(line: 95, column: 2, scope: !16470, inlinedAt: !16968)
!16970 = !DILocation(line: 292, column: 17, scope: !16959)
!16971 = !DILocation(line: 294, column: 2, scope: !16939)
!16972 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2429, file: !2429, line: 297, type: !6398, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !2101)
!16973 = !DILocation(line: 300, column: 19, scope: !16972)
!16974 = !DILocation(line: 300, column: 9, scope: !16972)
!16975 = !DILocation(line: 300, column: 2, scope: !16972)
!16976 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2429, file: !2429, line: 306, type: !16940, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !2101)
!16977 = !DILocation(line: 308, column: 9, scope: !16976)
!16978 = !DILocation(line: 308, column: 2, scope: !16976)
!16979 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2429, file: !2429, line: 319, type: !6408, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !16980)
!16980 = !{!16981, !16982, !16983, !16984}
!16981 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16979, file: !2429, line: 319, type: !156)
!16982 = !DILocalVariable(name: "start_cycles", scope: !16979, file: !2429, line: 328, type: !156)
!16983 = !DILocalVariable(name: "cycles_to_wait", scope: !16979, file: !2429, line: 331, type: !156)
!16984 = !DILocalVariable(name: "current_cycles", scope: !16985, file: !2429, line: 338, type: !156)
!16985 = distinct !DILexicalBlock(scope: !16986, file: !2429, line: 337, column: 11)
!16986 = distinct !DILexicalBlock(scope: !16987, file: !2429, line: 337, column: 2)
!16987 = distinct !DILexicalBlock(scope: !16979, file: !2429, line: 337, column: 2)
!16988 = !DILocation(line: 0, scope: !16979)
!16989 = !DILocation(line: 322, column: 19, scope: !16990)
!16990 = distinct !DILexicalBlock(scope: !16979, file: !2429, line: 322, column: 6)
!16991 = !DILocation(line: 322, column: 6, scope: !16979)
!16992 = !DILocation(line: 328, column: 26, scope: !16979)
!16993 = !DILocation(line: 333, column: 43, scope: !16979)
!16994 = !DILocation(line: 337, column: 2, scope: !16979)
!16995 = !DILocation(line: 338, column: 29, scope: !16985)
!16996 = !DILocation(line: 0, scope: !16985)
!16997 = !DILocation(line: 341, column: 23, scope: !16998)
!16998 = distinct !DILexicalBlock(scope: !16985, file: !2429, line: 341, column: 7)
!16999 = !DILocation(line: 341, column: 39, scope: !16998)
!17000 = !DILocation(line: 349, column: 1, scope: !16979)
!17001 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !220, file: !220, line: 1675, type: !6398, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !2101)
!17002 = !DILocation(line: 1677, column: 9, scope: !17001)
!17003 = !DILocation(line: 1677, column: 2, scope: !17001)
!17004 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17005, file: !17005, line: 24, type: !6398, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !2101)
!17005 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17006 = !DILocation(line: 26, column: 9, scope: !17004)
!17007 = !DILocation(line: 26, column: 2, scope: !17004)
!17008 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2429, file: !2429, line: 364, type: !17009, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2399, retainedNodes: !17011)
!17009 = !DISubroutineType(types: !17010)
!17010 = !{!213, !16345}
!17011 = !{!17012, !17013}
!17012 = !DILocalVariable(name: "timeout", arg: 1, scope: !17008, file: !2429, line: 364, type: !16345)
!17013 = !DILocalVariable(name: "dt", scope: !17008, file: !2429, line: 366, type: !113)
!17014 = !DILocation(line: 0, scope: !17008)
!17015 = !DILocation(line: 368, column: 6, scope: !17008)
!17016 = !DILocation(line: 371, column: 10, scope: !17017)
!17017 = distinct !DILexicalBlock(scope: !17018, file: !2429, line: 370, column: 47)
!17018 = distinct !DILexicalBlock(scope: !17019, file: !2429, line: 370, column: 13)
!17019 = distinct !DILexicalBlock(scope: !17008, file: !2429, line: 368, column: 6)
!17020 = !DILocation(line: 371, column: 3, scope: !17017)
!17021 = !DILocation(line: 376, column: 58, scope: !17022)
!17022 = distinct !DILexicalBlock(scope: !17023, file: !2429, line: 376, column: 7)
!17023 = distinct !DILexicalBlock(scope: !17018, file: !2429, line: 372, column: 9)
!17024 = !DILocation(line: 376, column: 7, scope: !17023)
!17025 = !DILocation(line: 376, column: 43, scope: !17022)
!17026 = !DILocation(line: 377, column: 4, scope: !17027)
!17027 = distinct !DILexicalBlock(scope: !17022, file: !2429, line: 376, column: 64)
!17028 = !DILocation(line: 379, column: 10, scope: !17023)
!17029 = !DILocation(line: 379, column: 33, scope: !17023)
!17030 = !DILocation(line: 379, column: 31, scope: !17023)
!17031 = !DILocation(line: 379, column: 3, scope: !17023)
!17032 = !DILocation(line: 0, scope: !17019)
!17033 = !DILocation(line: 381, column: 1, scope: !17008)
!17034 = distinct !DISubprogram(name: "k_free", scope: !2446, file: !2446, line: 43, type: !6248, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17035)
!17035 = !{!17036, !17037}
!17036 = !DILocalVariable(name: "ptr", arg: 1, scope: !17034, file: !2446, line: 43, type: !117)
!17037 = !DILocalVariable(name: "heap_ref", scope: !17034, file: !2446, line: 45, type: !17038)
!17038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17039, size: 32)
!17039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 32)
!17040 = !DILocation(line: 0, scope: !17034)
!17041 = !DILocation(line: 47, column: 10, scope: !17042)
!17042 = distinct !DILexicalBlock(scope: !17034, file: !2446, line: 47, column: 6)
!17043 = !DILocation(line: 47, column: 6, scope: !17034)
!17044 = !DILocation(line: 49, column: 9, scope: !17045)
!17045 = distinct !DILexicalBlock(scope: !17042, file: !2446, line: 47, column: 19)
!17046 = !DILocation(line: 53, column: 15, scope: !17045)
!17047 = !DILocation(line: 53, column: 3, scope: !17045)
!17048 = !DILocation(line: 56, column: 2, scope: !17045)
!17049 = !DILocation(line: 57, column: 1, scope: !17034)
!17050 = distinct !DISubprogram(name: "k_aligned_alloc", scope: !2446, file: !2446, line: 64, type: !17051, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17053)
!17051 = !DISubroutineType(types: !17052)
!17052 = !{!117, !315, !315}
!17053 = !{!17054, !17055, !17056}
!17054 = !DILocalVariable(name: "align", arg: 1, scope: !17050, file: !2446, line: 64, type: !315)
!17055 = !DILocalVariable(name: "size", arg: 2, scope: !17050, file: !2446, line: 64, type: !315)
!17056 = !DILocalVariable(name: "ret", scope: !17050, file: !2446, line: 75, type: !117)
!17057 = !DILocation(line: 0, scope: !17050)
!17058 = !DILocation(line: 66, column: 2, scope: !17059)
!17059 = distinct !DILexicalBlock(scope: !17060, file: !2446, line: 66, column: 2)
!17060 = distinct !DILexicalBlock(scope: !17050, file: !2446, line: 66, column: 2)
!17061 = !DILocation(line: 66, column: 2, scope: !17062)
!17062 = distinct !DILexicalBlock(scope: !17059, file: !2446, line: 66, column: 2)
!17063 = !DILocation(line: 70, column: 2, scope: !17064)
!17064 = distinct !DILexicalBlock(scope: !17065, file: !2446, line: 70, column: 2)
!17065 = distinct !DILexicalBlock(scope: !17050, file: !2446, line: 70, column: 2)
!17066 = !DILocation(line: 70, column: 2, scope: !17065)
!17067 = !DILocation(line: 70, column: 2, scope: !17068)
!17068 = distinct !DILexicalBlock(scope: !17064, file: !2446, line: 70, column: 2)
!17069 = !DILocation(line: 75, column: 14, scope: !17050)
!17070 = !DILocation(line: 79, column: 2, scope: !17050)
!17071 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !2446, file: !2446, line: 12, type: !17072, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17074)
!17072 = !DISubroutineType(types: !17073)
!17073 = !{!117, !17039, !315, !315}
!17074 = !{!17075, !17076, !17077, !17078, !17079, !17080}
!17075 = !DILocalVariable(name: "heap", arg: 1, scope: !17071, file: !2446, line: 12, type: !17039)
!17076 = !DILocalVariable(name: "align", arg: 2, scope: !17071, file: !2446, line: 12, type: !315)
!17077 = !DILocalVariable(name: "size", arg: 3, scope: !17071, file: !2446, line: 12, type: !315)
!17078 = !DILocalVariable(name: "mem", scope: !17071, file: !2446, line: 14, type: !117)
!17079 = !DILocalVariable(name: "heap_ref", scope: !17071, file: !2446, line: 15, type: !17038)
!17080 = !DILocalVariable(name: "__align", scope: !17071, file: !2446, line: 16, type: !315)
!17081 = !DILocation(line: 0, scope: !17071)
!17082 = !DILocation(line: 24, column: 6, scope: !17083)
!17083 = distinct !DILexicalBlock(scope: !17071, file: !2446, line: 24, column: 6)
!17084 = !DILocation(line: 24, column: 6, scope: !17071)
!17085 = !DILocation(line: 27, column: 18, scope: !17071)
!17086 = !DILocation(line: 29, column: 44, scope: !17071)
!17087 = !DILocation(line: 29, column: 8, scope: !17071)
!17088 = !DILocation(line: 30, column: 10, scope: !17089)
!17089 = distinct !DILexicalBlock(scope: !17071, file: !2446, line: 30, column: 6)
!17090 = !DILocation(line: 30, column: 6, scope: !17071)
!17091 = !DILocation(line: 34, column: 13, scope: !17071)
!17092 = !DILocation(line: 35, column: 12, scope: !17071)
!17093 = !DILocation(line: 36, column: 8, scope: !17071)
!17094 = !DILocation(line: 37, column: 2, scope: !17095)
!17095 = distinct !DILexicalBlock(scope: !17096, file: !2446, line: 37, column: 2)
!17096 = distinct !DILexicalBlock(scope: !17071, file: !2446, line: 37, column: 2)
!17097 = !DILocation(line: 37, column: 2, scope: !17096)
!17098 = !DILocation(line: 37, column: 2, scope: !17099)
!17099 = distinct !DILexicalBlock(scope: !17095, file: !2446, line: 37, column: 2)
!17100 = !DILocation(line: 41, column: 1, scope: !17071)
!17101 = distinct !DISubprogram(name: "size_add_overflow", scope: !17102, file: !17102, line: 47, type: !17103, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17105)
!17102 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17103 = !DISubroutineType(types: !17104)
!17104 = !{!146, !315, !315, !2586}
!17105 = !{!17106, !17107, !17108}
!17106 = !DILocalVariable(name: "a", arg: 1, scope: !17101, file: !17102, line: 47, type: !315)
!17107 = !DILocalVariable(name: "b", arg: 2, scope: !17101, file: !17102, line: 47, type: !315)
!17108 = !DILocalVariable(name: "result", arg: 3, scope: !17101, file: !17102, line: 47, type: !2586)
!17109 = !DILocation(line: 0, scope: !17101)
!17110 = !DILocation(line: 49, column: 9, scope: !17101)
!17111 = !DILocation(line: 49, column: 2, scope: !17101)
!17112 = distinct !DISubprogram(name: "k_malloc", scope: !2446, file: !2446, line: 82, type: !13474, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17113)
!17113 = !{!17114, !17115}
!17114 = !DILocalVariable(name: "size", arg: 1, scope: !17112, file: !2446, line: 82, type: !315)
!17115 = !DILocalVariable(name: "ret", scope: !17112, file: !2446, line: 86, type: !117)
!17116 = !DILocation(line: 0, scope: !17112)
!17117 = !DILocation(line: 86, column: 14, scope: !17112)
!17118 = !DILocation(line: 90, column: 2, scope: !17112)
!17119 = distinct !DISubprogram(name: "k_calloc", scope: !2446, file: !2446, line: 93, type: !17051, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17120)
!17120 = !{!17121, !17122, !17123, !17124}
!17121 = !DILocalVariable(name: "nmemb", arg: 1, scope: !17119, file: !2446, line: 93, type: !315)
!17122 = !DILocalVariable(name: "size", arg: 2, scope: !17119, file: !2446, line: 93, type: !315)
!17123 = !DILocalVariable(name: "ret", scope: !17119, file: !2446, line: 95, type: !117)
!17124 = !DILocalVariable(name: "bounds", scope: !17119, file: !2446, line: 96, type: !315)
!17125 = !DILocation(line: 0, scope: !17119)
!17126 = !DILocation(line: 96, column: 2, scope: !17119)
!17127 = !DILocation(line: 100, column: 6, scope: !17128)
!17128 = distinct !DILexicalBlock(scope: !17119, file: !2446, line: 100, column: 6)
!17129 = !DILocation(line: 100, column: 6, scope: !17119)
!17130 = !DILocation(line: 106, column: 17, scope: !17119)
!17131 = !DILocation(line: 106, column: 8, scope: !17119)
!17132 = !DILocation(line: 107, column: 10, scope: !17133)
!17133 = distinct !DILexicalBlock(scope: !17119, file: !2446, line: 107, column: 6)
!17134 = !DILocation(line: 107, column: 6, scope: !17119)
!17135 = !DILocation(line: 108, column: 9, scope: !17136)
!17136 = distinct !DILexicalBlock(scope: !17133, file: !2446, line: 107, column: 19)
!17137 = !DILocation(line: 109, column: 2, scope: !17136)
!17138 = !DILocation(line: 114, column: 1, scope: !17119)
!17139 = distinct !DISubprogram(name: "size_mul_overflow", scope: !17102, file: !17102, line: 105, type: !17103, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17140)
!17140 = !{!17141, !17142, !17143}
!17141 = !DILocalVariable(name: "a", arg: 1, scope: !17139, file: !17102, line: 105, type: !315)
!17142 = !DILocalVariable(name: "b", arg: 2, scope: !17139, file: !17102, line: 105, type: !315)
!17143 = !DILocalVariable(name: "result", arg: 3, scope: !17139, file: !17102, line: 105, type: !2586)
!17144 = !DILocation(line: 0, scope: !17139)
!17145 = !DILocation(line: 107, column: 9, scope: !17139)
!17146 = !DILocation(line: 107, column: 2, scope: !17139)
!17147 = distinct !DISubprogram(name: "k_thread_system_pool_assign", scope: !2446, file: !2446, line: 116, type: !17148, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17220)
!17148 = !DISubroutineType(types: !17149)
!17149 = !{null, !17150}
!17150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17151, size: 32)
!17151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !225, line: 245, size: 1024, elements: !17152)
!17152 = !{!17153, !17193, !17205, !17206, !17207, !17208, !17214, !17215}
!17153 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !17151, file: !225, line: 247, baseType: !17154, size: 384)
!17154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !225, line: 57, size: 384, elements: !17155)
!17155 = !{!17156, !17167, !17169, !17170, !17171, !17180, !17181, !17182}
!17156 = !DIDerivedType(tag: DW_TAG_member, scope: !17154, file: !225, line: 60, baseType: !17157, size: 64)
!17157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17154, file: !225, line: 60, size: 64, elements: !17158)
!17158 = !{!17159, !17161}
!17159 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !17157, file: !225, line: 61, baseType: !17160, size: 64)
!17160 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !235, line: 49, baseType: !2461)
!17161 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !17157, file: !225, line: 62, baseType: !17162, size: 64)
!17162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !251, line: 49, size: 64, elements: !17163)
!17163 = !{!17164}
!17164 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !17162, file: !251, line: 50, baseType: !17165, size: 64)
!17165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17166, size: 64, elements: !256)
!17166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17162, size: 32)
!17167 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !17154, file: !225, line: 68, baseType: !17168, size: 32, offset: 64)
!17168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 32)
!17169 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !17154, file: !225, line: 71, baseType: !143, size: 8, offset: 96)
!17170 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !17154, file: !225, line: 74, baseType: !143, size: 8, offset: 104)
!17171 = !DIDerivedType(tag: DW_TAG_member, scope: !17154, file: !225, line: 90, baseType: !17172, size: 16, offset: 112)
!17172 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17154, file: !225, line: 90, size: 16, elements: !17173)
!17173 = !{!17174, !17179}
!17174 = !DIDerivedType(tag: DW_TAG_member, scope: !17172, file: !225, line: 91, baseType: !17175, size: 16)
!17175 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !17172, file: !225, line: 91, size: 16, elements: !17176)
!17176 = !{!17177, !17178}
!17177 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !17175, file: !225, line: 96, baseType: !275, size: 8)
!17178 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !17175, file: !225, line: 97, baseType: !143, size: 8, offset: 8)
!17179 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !17172, file: !225, line: 100, baseType: !279, size: 16)
!17180 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !17154, file: !225, line: 107, baseType: !156, size: 32, offset: 128)
!17181 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !17154, file: !225, line: 127, baseType: !117, size: 32, offset: 160)
!17182 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !17154, file: !225, line: 131, baseType: !17183, size: 192, offset: 192)
!17183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !261, line: 244, size: 192, elements: !17184)
!17184 = !{!17185, !17186, !17192}
!17185 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !17183, file: !261, line: 245, baseType: !17160, size: 64)
!17186 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !17183, file: !261, line: 246, baseType: !17187, size: 32, offset: 64)
!17187 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !261, line: 242, baseType: !17188)
!17188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17189, size: 32)
!17189 = !DISubroutineType(types: !17190)
!17190 = !{null, !17191}
!17191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17183, size: 32)
!17192 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !17183, file: !261, line: 249, baseType: !115, size: 64, offset: 128)
!17193 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !17151, file: !225, line: 250, baseType: !17194, size: 288, offset: 384)
!17194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !296, line: 25, size: 288, elements: !17195)
!17195 = !{!17196, !17197, !17198, !17199, !17200, !17201, !17202, !17203, !17204}
!17196 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !17194, file: !296, line: 26, baseType: !156, size: 32)
!17197 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !17194, file: !296, line: 27, baseType: !156, size: 32, offset: 32)
!17198 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !17194, file: !296, line: 28, baseType: !156, size: 32, offset: 64)
!17199 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !17194, file: !296, line: 29, baseType: !156, size: 32, offset: 96)
!17200 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !17194, file: !296, line: 30, baseType: !156, size: 32, offset: 128)
!17201 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !17194, file: !296, line: 31, baseType: !156, size: 32, offset: 160)
!17202 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !17194, file: !296, line: 32, baseType: !156, size: 32, offset: 192)
!17203 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !17194, file: !296, line: 33, baseType: !156, size: 32, offset: 224)
!17204 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !17194, file: !296, line: 34, baseType: !156, size: 32, offset: 256)
!17205 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !17151, file: !225, line: 253, baseType: !117, size: 32, offset: 672)
!17206 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !17151, file: !225, line: 256, baseType: !2456, size: 64, offset: 704)
!17207 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !17151, file: !225, line: 294, baseType: !118, size: 32, offset: 768)
!17208 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !17151, file: !225, line: 300, baseType: !17209, size: 96, offset: 800)
!17209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !225, line: 149, size: 96, elements: !17210)
!17210 = !{!17211, !17212, !17213}
!17211 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !17209, file: !225, line: 153, baseType: !22, size: 32)
!17212 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !17209, file: !225, line: 162, baseType: !315, size: 32, offset: 32)
!17213 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !17209, file: !225, line: 168, baseType: !315, size: 32, offset: 64)
!17214 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !17151, file: !225, line: 325, baseType: !17039, size: 32, offset: 896)
!17215 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !17151, file: !225, line: 343, baseType: !17216, size: 64, offset: 928)
!17216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !296, line: 60, size: 64, elements: !17217)
!17217 = !{!17218, !17219}
!17218 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !17216, file: !296, line: 63, baseType: !156, size: 32)
!17219 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !17216, file: !296, line: 66, baseType: !156, size: 32, offset: 32)
!17220 = !{!17221}
!17221 = !DILocalVariable(name: "thread", arg: 1, scope: !17147, file: !2446, line: 116, type: !17150)
!17222 = !DILocation(line: 0, scope: !17147)
!17223 = !DILocation(line: 118, column: 10, scope: !17147)
!17224 = !DILocation(line: 118, column: 24, scope: !17147)
!17225 = !DILocation(line: 119, column: 1, scope: !17147)
!17226 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !2446, file: !2446, line: 124, type: !17051, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !17227)
!17227 = !{!17228, !17229, !17230, !17231}
!17228 = !DILocalVariable(name: "align", arg: 1, scope: !17226, file: !2446, line: 124, type: !315)
!17229 = !DILocalVariable(name: "size", arg: 2, scope: !17226, file: !2446, line: 124, type: !315)
!17230 = !DILocalVariable(name: "ret", scope: !17226, file: !2446, line: 126, type: !117)
!17231 = !DILocalVariable(name: "heap", scope: !17226, file: !2446, line: 127, type: !17039)
!17232 = !DILocation(line: 0, scope: !17226)
!17233 = !DILocation(line: 129, column: 6, scope: !17234)
!17234 = distinct !DILexicalBlock(scope: !17226, file: !2446, line: 129, column: 6)
!17235 = !DILocation(line: 129, column: 6, scope: !17226)
!17236 = !DILocation(line: 132, column: 10, scope: !17237)
!17237 = distinct !DILexicalBlock(scope: !17234, file: !2446, line: 131, column: 9)
!17238 = !DILocation(line: 132, column: 20, scope: !17237)
!17239 = !DILocation(line: 135, column: 11, scope: !17240)
!17240 = distinct !DILexicalBlock(scope: !17226, file: !2446, line: 135, column: 6)
!17241 = !DILocation(line: 135, column: 6, scope: !17226)
!17242 = !DILocation(line: 136, column: 9, scope: !17243)
!17243 = distinct !DILexicalBlock(scope: !17240, file: !2446, line: 135, column: 20)
!17244 = !DILocation(line: 137, column: 2, scope: !17243)
!17245 = !DILocation(line: 0, scope: !17240)
!17246 = !DILocation(line: 141, column: 2, scope: !17226)
!17247 = distinct !DISubprogram(name: "main", scope: !17248, file: !17248, line: 27, type: !365, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !2101)
!17248 = !DIFile(filename: "zephyr/kernel/main_weak.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17249 = !DILocation(line: 38, column: 2, scope: !17250, inlinedAt: !17251)
!17250 = distinct !DISubprogram(name: "arch_nop", scope: !17005, file: !17005, line: 36, type: !365, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3159, retainedNodes: !2101)
!17251 = distinct !DILocation(line: 31, column: 2, scope: !17247)
!17252 = !{i64 1951843}
!17253 = !DILocation(line: 36, column: 1, scope: !17247)
!17254 = distinct !DISubprogram(name: "boot_banner", scope: !17255, file: !17255, line: 26, type: !365, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3161, retainedNodes: !2101)
!17255 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17256 = !DILocation(line: 34, column: 2, scope: !17254)
!17257 = !DILocation(line: 36, column: 1, scope: !17254)
!17258 = distinct !DISubprogram(name: "statics_init", scope: !2502, file: !2502, line: 21, type: !2508, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !17259)
!17259 = !{!17260, !17261}
!17260 = !DILocalVariable(name: "unused", arg: 1, scope: !17258, file: !2502, line: 21, type: !2510)
!17261 = !DILocalVariable(name: "h", scope: !17262, file: !2502, line: 24, type: !17263)
!17262 = distinct !DILexicalBlock(scope: !17258, file: !2502, line: 24, column: 2)
!17263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17264, size: 32)
!17264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !220, line: 5073, size: 192, elements: !17265)
!17265 = !{!17266, !17272, !17278}
!17266 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17264, file: !220, line: 5074, baseType: !17267, size: 96)
!17267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !17268)
!17268 = !{!17269, !17270, !17271}
!17269 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17267, file: !324, line: 57, baseType: !327, size: 32)
!17270 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17267, file: !324, line: 58, baseType: !117, size: 32, offset: 32)
!17271 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17267, file: !324, line: 59, baseType: !315, size: 32, offset: 64)
!17272 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17264, file: !220, line: 5075, baseType: !17273, size: 64, offset: 96)
!17273 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !261, line: 233, baseType: !17274)
!17274 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 231, size: 64, elements: !17275)
!17275 = !{!17276}
!17276 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17274, file: !261, line: 232, baseType: !17277, size: 64)
!17277 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !235, line: 48, baseType: !2488)
!17278 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17264, file: !220, line: 5076, baseType: !17279, size: 32, offset: 160)
!17279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, size: 32, elements: !17280)
!17280 = !{!17281}
!17281 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !17279, file: !334, line: 52, baseType: !22, size: 32)
!17282 = !DILocation(line: 0, scope: !17258)
!17283 = !DILocation(line: 0, scope: !17262)
!17284 = !DILocation(line: 24, column: 2, scope: !17285)
!17285 = distinct !DILexicalBlock(scope: !17286, file: !2502, line: 24, column: 2)
!17286 = distinct !DILexicalBlock(scope: !17287, file: !2502, line: 24, column: 2)
!17287 = distinct !DILexicalBlock(scope: !17262, file: !2502, line: 24, column: 2)
!17288 = !DILocation(line: 24, column: 2, scope: !17289)
!17289 = distinct !DILexicalBlock(scope: !17290, file: !2502, line: 24, column: 2)
!17290 = distinct !DILexicalBlock(scope: !17285, file: !2502, line: 24, column: 2)
!17291 = !DILocation(line: 24, column: 2, scope: !17286)
!17292 = !DILocation(line: 24, column: 2, scope: !17262)
!17293 = !DILocation(line: 52, column: 2, scope: !17258)
!17294 = !DILocation(line: 49, column: 27, scope: !17295)
!17295 = distinct !DILexicalBlock(scope: !17296, file: !2502, line: 48, column: 3)
!17296 = distinct !DILexicalBlock(scope: !17287, file: !2502, line: 24, column: 36)
!17297 = !DILocation(line: 49, column: 45, scope: !17295)
!17298 = !DILocation(line: 49, column: 4, scope: !17295)
!17299 = !DILocation(line: 24, column: 2, scope: !17287)
!17300 = !DILocation(line: 24, column: 2, scope: !17290)
!17301 = distinct !{!17301, !17292, !17302}
!17302 = !DILocation(line: 51, column: 2, scope: !17262)
!17303 = distinct !DISubprogram(name: "k_heap_init", scope: !2502, file: !2502, line: 13, type: !17304, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !17306)
!17304 = !DISubroutineType(types: !17305)
!17305 = !{null, !17263, !117, !315}
!17306 = !{!17307, !17308, !17309}
!17307 = !DILocalVariable(name: "h", arg: 1, scope: !17303, file: !2502, line: 13, type: !17263)
!17308 = !DILocalVariable(name: "mem", arg: 2, scope: !17303, file: !2502, line: 13, type: !117)
!17309 = !DILocalVariable(name: "bytes", arg: 3, scope: !17303, file: !2502, line: 13, type: !315)
!17310 = !DILocation(line: 0, scope: !17303)
!17311 = !DILocation(line: 15, column: 19, scope: !17303)
!17312 = !DILocation(line: 15, column: 2, scope: !17303)
!17313 = !DILocation(line: 16, column: 20, scope: !17303)
!17314 = !DILocation(line: 16, column: 2, scope: !17303)
!17315 = !DILocation(line: 19, column: 1, scope: !17303)
!17316 = distinct !DISubprogram(name: "z_waitq_init", scope: !12699, file: !12699, line: 47, type: !17317, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !17320)
!17317 = !DISubroutineType(types: !17318)
!17318 = !{null, !17319}
!17319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17273, size: 32)
!17320 = !{!17321}
!17321 = !DILocalVariable(name: "w", arg: 1, scope: !17316, file: !12699, line: 47, type: !17319)
!17322 = !DILocation(line: 0, scope: !17316)
!17323 = !DILocation(line: 49, column: 21, scope: !17316)
!17324 = !DILocation(line: 49, column: 2, scope: !17316)
!17325 = !DILocation(line: 50, column: 1, scope: !17316)
!17326 = distinct !DISubprogram(name: "sys_dlist_init", scope: !235, file: !235, line: 197, type: !17327, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !17330)
!17327 = !DISubroutineType(types: !17328)
!17328 = !{null, !17329}
!17329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17277, size: 32)
!17330 = !{!17331}
!17331 = !DILocalVariable(name: "list", arg: 1, scope: !17326, file: !235, line: 197, type: !17329)
!17332 = !DILocation(line: 0, scope: !17326)
!17333 = !DILocation(line: 199, column: 8, scope: !17326)
!17334 = !DILocation(line: 199, column: 13, scope: !17326)
!17335 = !DILocation(line: 200, column: 8, scope: !17326)
!17336 = !DILocation(line: 200, column: 13, scope: !17326)
!17337 = !DILocation(line: 201, column: 1, scope: !17326)
!17338 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2502, file: !2502, line: 64, type: !17339, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !17345)
!17339 = !DISubroutineType(types: !17340)
!17340 = !{!117, !17263, !315, !315, !17341}
!17341 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !114, line: 67, baseType: !17342)
!17342 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !114, line: 65, size: 64, elements: !17343)
!17343 = !{!17344}
!17344 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17342, file: !114, line: 66, baseType: !113, size: 64)
!17345 = !{!17346, !17347, !17348, !17349, !17350, !17351, !17352, !17353, !17358}
!17346 = !DILocalVariable(name: "h", arg: 1, scope: !17338, file: !2502, line: 64, type: !17263)
!17347 = !DILocalVariable(name: "align", arg: 2, scope: !17338, file: !2502, line: 64, type: !315)
!17348 = !DILocalVariable(name: "bytes", arg: 3, scope: !17338, file: !2502, line: 64, type: !315)
!17349 = !DILocalVariable(name: "timeout", arg: 4, scope: !17338, file: !2502, line: 65, type: !17341)
!17350 = !DILocalVariable(name: "now", scope: !17338, file: !2502, line: 67, type: !115)
!17351 = !DILocalVariable(name: "end", scope: !17338, file: !2502, line: 67, type: !115)
!17352 = !DILocalVariable(name: "ret", scope: !17338, file: !2502, line: 68, type: !117)
!17353 = !DILocalVariable(name: "key", scope: !17338, file: !2502, line: 72, type: !17354)
!17354 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !17355)
!17355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !17356)
!17356 = !{!17357}
!17357 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17355, file: !334, line: 33, baseType: !118, size: 32)
!17358 = !DILocalVariable(name: "blocked_alloc", scope: !17338, file: !2502, line: 78, type: !146)
!17359 = !DILocation(line: 0, scope: !17338)
!17360 = !DILocation(line: 67, column: 21, scope: !17338)
!17361 = !DILocation(line: 70, column: 8, scope: !17338)
!17362 = !DILocation(line: 72, column: 41, scope: !17338)
!17363 = !DILocalVariable(name: "l", arg: 1, scope: !17364, file: !334, line: 136, type: !17367)
!17364 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !17365, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !17368)
!17365 = !DISubroutineType(types: !17366)
!17366 = !{!17354, !17367}
!17367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17279, size: 32)
!17368 = !{!17363, !17369}
!17369 = !DILocalVariable(name: "k", scope: !17364, file: !334, line: 139, type: !17354)
!17370 = !DILocation(line: 0, scope: !17364, inlinedAt: !17371)
!17371 = distinct !DILocation(line: 72, column: 25, scope: !17338)
!17372 = !DILocation(line: 55, column: 2, scope: !17373, inlinedAt: !17377)
!17373 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6137, file: !6137, line: 42, type: !6138, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !17374)
!17374 = !{!17375, !17376}
!17375 = !DILocalVariable(name: "key", scope: !17373, file: !6137, line: 44, type: !32)
!17376 = !DILocalVariable(name: "tmp", scope: !17373, file: !6137, line: 53, type: !32)
!17377 = distinct !DILocation(line: 145, column: 10, scope: !17364, inlinedAt: !17371)
!17378 = !{i64 1950986}
!17379 = !DILocation(line: 0, scope: !17373, inlinedAt: !17377)
!17380 = !DILocation(line: 148, column: 2, scope: !17381, inlinedAt: !17371)
!17381 = distinct !DILexicalBlock(scope: !17382, file: !334, line: 148, column: 2)
!17382 = distinct !DILexicalBlock(scope: !17364, file: !334, line: 148, column: 2)
!17383 = !DILocation(line: 148, column: 2, scope: !17382, inlinedAt: !17371)
!17384 = !DILocation(line: 148, column: 2, scope: !17385, inlinedAt: !17371)
!17385 = distinct !DILexicalBlock(scope: !17381, file: !334, line: 148, column: 2)
!17386 = !DILocation(line: 160, column: 2, scope: !17364, inlinedAt: !17371)
!17387 = !DILocation(line: 1031, column: 3, scope: !17388, inlinedAt: !17391)
!17388 = distinct !DISubprogram(name: "__get_IPSR", scope: !6311, file: !6311, line: 1027, type: !6398, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !17389)
!17389 = !{!17390}
!17390 = !DILocalVariable(name: "result", scope: !17388, file: !6311, line: 1029, type: !156)
!17391 = distinct !DILocation(line: 48, column: 10, scope: !17392, inlinedAt: !17393)
!17392 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7137, file: !7137, line: 46, type: !7138, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !2101)
!17393 = distinct !DILocation(line: 76, column: 2, scope: !17394)
!17394 = distinct !DILexicalBlock(scope: !17395, file: !2502, line: 76, column: 2)
!17395 = distinct !DILexicalBlock(scope: !17338, file: !2502, line: 76, column: 2)
!17396 = !{i64 2828725}
!17397 = !DILocation(line: 0, scope: !17388, inlinedAt: !17391)
!17398 = !DILocation(line: 48, column: 9, scope: !17392, inlinedAt: !17393)
!17399 = !DILocation(line: 76, column: 2, scope: !17394)
!17400 = !DILocation(line: 81, column: 9, scope: !17401)
!17401 = distinct !DILexicalBlock(scope: !17338, file: !2502, line: 80, column: 22)
!17402 = !DILocation(line: 83, column: 9, scope: !17401)
!17403 = !DILocation(line: 85, column: 12, scope: !17404)
!17404 = distinct !DILexicalBlock(scope: !17401, file: !2502, line: 84, column: 7)
!17405 = !DILocation(line: 85, column: 21, scope: !17404)
!17406 = !DILocation(line: 76, column: 2, scope: !17407)
!17407 = distinct !DILexicalBlock(scope: !17394, file: !2502, line: 76, column: 2)
!17408 = !DILocation(line: 85, column: 30, scope: !17404)
!17409 = !DILocation(line: 85, column: 37, scope: !17404)
!17410 = !DILocation(line: 84, column: 7, scope: !17401)
!17411 = !DILocation(line: 99, column: 10, scope: !17401)
!17412 = !DILocation(line: 0, scope: !17364, inlinedAt: !17413)
!17413 = distinct !DILocation(line: 101, column: 9, scope: !17401)
!17414 = !DILocation(line: 55, column: 2, scope: !17373, inlinedAt: !17415)
!17415 = distinct !DILocation(line: 145, column: 10, scope: !17364, inlinedAt: !17413)
!17416 = !DILocation(line: 0, scope: !17373, inlinedAt: !17415)
!17417 = !DILocation(line: 148, column: 2, scope: !17381, inlinedAt: !17413)
!17418 = !DILocation(line: 148, column: 2, scope: !17382, inlinedAt: !17413)
!17419 = !DILocation(line: 148, column: 2, scope: !17385, inlinedAt: !17413)
!17420 = !DILocation(line: 160, column: 2, scope: !17364, inlinedAt: !17413)
!17421 = distinct !{!17421, !17422, !17423}
!17422 = !DILocation(line: 80, column: 2, scope: !17338)
!17423 = !DILocation(line: 102, column: 2, scope: !17338)
!17424 = !DILocalVariable(name: "key", arg: 2, scope: !17425, file: !334, line: 190, type: !17354)
!17425 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !17426, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !17428)
!17426 = !DISubroutineType(types: !17427)
!17427 = !{null, !17367, !17354}
!17428 = !{!17429, !17424}
!17429 = !DILocalVariable(name: "l", arg: 1, scope: !17425, file: !334, line: 189, type: !17367)
!17430 = !DILocation(line: 0, scope: !17425, inlinedAt: !17431)
!17431 = distinct !DILocation(line: 106, column: 2, scope: !17338)
!17432 = !DILocation(line: 194, column: 2, scope: !17433, inlinedAt: !17431)
!17433 = distinct !DILexicalBlock(scope: !17434, file: !334, line: 194, column: 2)
!17434 = distinct !DILexicalBlock(scope: !17425, file: !334, line: 194, column: 2)
!17435 = !DILocation(line: 194, column: 2, scope: !17434, inlinedAt: !17431)
!17436 = !DILocation(line: 194, column: 2, scope: !17437, inlinedAt: !17431)
!17437 = distinct !DILexicalBlock(scope: !17433, file: !334, line: 194, column: 2)
!17438 = !DILocalVariable(name: "key", arg: 1, scope: !17439, file: !6137, line: 84, type: !32)
!17439 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6137, file: !6137, line: 84, type: !6148, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !17440)
!17440 = !{!17438}
!17441 = !DILocation(line: 0, scope: !17439, inlinedAt: !17442)
!17442 = distinct !DILocation(line: 215, column: 2, scope: !17425, inlinedAt: !17431)
!17443 = !DILocation(line: 95, column: 2, scope: !17439, inlinedAt: !17442)
!17444 = !{i64 1951803}
!17445 = !DILocation(line: 107, column: 2, scope: !17338)
!17446 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2502, file: !2502, line: 110, type: !17447, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !17449)
!17447 = !DISubroutineType(types: !17448)
!17448 = !{!117, !17263, !315, !17341}
!17449 = !{!17450, !17451, !17452, !17453}
!17450 = !DILocalVariable(name: "h", arg: 1, scope: !17446, file: !2502, line: 110, type: !17263)
!17451 = !DILocalVariable(name: "bytes", arg: 2, scope: !17446, file: !2502, line: 110, type: !315)
!17452 = !DILocalVariable(name: "timeout", arg: 3, scope: !17446, file: !2502, line: 110, type: !17341)
!17453 = !DILocalVariable(name: "ret", scope: !17446, file: !2502, line: 114, type: !117)
!17454 = !DILocation(line: 0, scope: !17446)
!17455 = !DILocation(line: 114, column: 14, scope: !17446)
!17456 = !DILocation(line: 118, column: 2, scope: !17446)
!17457 = distinct !DISubprogram(name: "k_heap_free", scope: !2502, file: !2502, line: 121, type: !17458, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2483, retainedNodes: !17460)
!17458 = !DISubroutineType(types: !17459)
!17459 = !{null, !17263, !117}
!17460 = !{!17461, !17462, !17463}
!17461 = !DILocalVariable(name: "h", arg: 1, scope: !17457, file: !2502, line: 121, type: !17263)
!17462 = !DILocalVariable(name: "mem", arg: 2, scope: !17457, file: !2502, line: 121, type: !117)
!17463 = !DILocalVariable(name: "key", scope: !17457, file: !2502, line: 123, type: !17354)
!17464 = !DILocation(line: 0, scope: !17457)
!17465 = !DILocation(line: 123, column: 41, scope: !17457)
!17466 = !DILocation(line: 0, scope: !17364, inlinedAt: !17467)
!17467 = distinct !DILocation(line: 123, column: 25, scope: !17457)
!17468 = !DILocation(line: 55, column: 2, scope: !17373, inlinedAt: !17469)
!17469 = distinct !DILocation(line: 145, column: 10, scope: !17364, inlinedAt: !17467)
!17470 = !DILocation(line: 0, scope: !17373, inlinedAt: !17469)
!17471 = !DILocation(line: 148, column: 2, scope: !17381, inlinedAt: !17467)
!17472 = !DILocation(line: 148, column: 2, scope: !17382, inlinedAt: !17467)
!17473 = !DILocation(line: 148, column: 2, scope: !17385, inlinedAt: !17467)
!17474 = !DILocation(line: 160, column: 2, scope: !17364, inlinedAt: !17467)
!17475 = !DILocation(line: 125, column: 20, scope: !17457)
!17476 = !DILocation(line: 125, column: 2, scope: !17457)
!17477 = !DILocation(line: 128, column: 60, scope: !17478)
!17478 = distinct !DILexicalBlock(scope: !17457, file: !2502, line: 128, column: 6)
!17479 = !DILocation(line: 128, column: 43, scope: !17478)
!17480 = !DILocation(line: 128, column: 68, scope: !17478)
!17481 = !DILocation(line: 128, column: 6, scope: !17457)
!17482 = !DILocation(line: 129, column: 3, scope: !17483)
!17483 = distinct !DILexicalBlock(scope: !17478, file: !2502, line: 128, column: 74)
!17484 = !DILocation(line: 130, column: 2, scope: !17483)
!17485 = !DILocation(line: 0, scope: !17425, inlinedAt: !17486)
!17486 = distinct !DILocation(line: 131, column: 3, scope: !17487)
!17487 = distinct !DILexicalBlock(scope: !17478, file: !2502, line: 130, column: 9)
!17488 = !DILocation(line: 194, column: 2, scope: !17433, inlinedAt: !17486)
!17489 = !DILocation(line: 194, column: 2, scope: !17434, inlinedAt: !17486)
!17490 = !DILocation(line: 194, column: 2, scope: !17437, inlinedAt: !17486)
!17491 = !DILocation(line: 0, scope: !17439, inlinedAt: !17492)
!17492 = distinct !DILocation(line: 215, column: 2, scope: !17425, inlinedAt: !17486)
!17493 = !DILocation(line: 95, column: 2, scope: !17439, inlinedAt: !17492)
!17494 = !DILocation(line: 133, column: 1, scope: !17457)
