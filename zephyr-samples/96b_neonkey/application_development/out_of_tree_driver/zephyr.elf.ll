; ModuleID = 'build/96b_neonkey/out_of_tree_driver/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.z_arm_mpu_partition = type { i32, i32, %union.anon.15 }
%union.anon.15 = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %union.anon.15 }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %union.anon.15, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %union.anon.15, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.hello_world_driver_api = type { void (%struct.device*)* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %union.anon.15, %union.anon.15 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon.15, %union.anon.15, %union.anon.15, %union.anon.15, %union.anon.15, %union.anon.15, %union.anon.15, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %union.anon.15*, %union.anon.15* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [86 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [86 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230120 to i8*), void (i8*)* inttoptr (i32 134228267 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230120 to i8*), void (i8*)* inttoptr (i32 134228247 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230120 to i8*), void (i8*)* inttoptr (i32 134228237 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230120 to i8*), void (i8*)* inttoptr (i32 134228337 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230120 to i8*), void (i8*)* inttoptr (i32 134228327 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230120 to i8*), void (i8*)* inttoptr (i32 134228317 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230120 to i8*), void (i8*)* inttoptr (i32 134228307 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134230120 to i8*), void (i8*)* inttoptr (i32 134228297 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230120 to i8*), void (i8*)* inttoptr (i32 134228287 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230120 to i8*), void (i8*)* inttoptr (i32 134228277 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134230120 to i8*), void (i8*)* inttoptr (i32 134228257 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [27 x i8] c"Hello World from the app!\0A\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"CUSTOM_DRIVER\00", align 1
@dev = dso_local local_unnamed_addr global %struct.device* null, align 4, !dbg !25
@.str.2 = private unnamed_addr constant [26 x i8] c"device is %p, name is %s\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !134
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [39 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.device* @__device_hello_world to i8*), i8* bitcast (%struct.init_entry* @__init___device_hello_world to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !143
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !188
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %union.anon.15 { i32 101384192 } }], align 4, !dbg !217
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !225
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !371
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !407
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), %union.anon.15 { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.29, i32 0, i32 0), %union.anon.15 { i32 285933600 } }], align 4, !dbg !417
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !422
@.str.28 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.29 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !442
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !615
@.str.30 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !576
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !559
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.30, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !532
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !548
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !578
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !592
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !594
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !596
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !598
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !600
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !602
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !604
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !606
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !608
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !610
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 12, i16 32767], section ".__device_handles_pass2", align 2, !dbg !620
@.str.32 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !649
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !746
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !735
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 -134, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !787
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !640
@.str.41 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %union.anon.15 { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !853
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1130
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1100
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1086
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1031
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !638
@.str.1.42 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %union.anon.15 { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1132
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1104
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1102
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1048
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !636
@.str.2.43 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %union.anon.15 { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1145
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1108
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1106
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1054
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !634
@.str.3 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %union.anon.15 { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1147
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1112
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1110
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1060
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !632
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %union.anon.15 { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1149
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1116
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1114
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1066
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !630
@.str.5.44 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %union.anon.15 { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1151
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1120
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1118
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1072
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !628
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %union.anon.15 { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1153
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1124
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1122
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1078
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !626
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %union.anon.15 { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1155
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1128
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1126
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1084
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !647
@.str.50 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1157
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1352
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1313
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1354
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.50, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1304
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1306
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1315
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1323
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1346
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1349
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !719
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1376
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1485
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1487
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1483
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1454
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1489
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1029
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.42, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1046
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.43, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1052
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1058
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1064
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.44, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1070
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1076
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1082
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1579
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1621
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1624
@__devicehdl_hello_world = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !642
@.str.82 = private unnamed_addr constant [14 x i8] c"CUSTOM_DRIVER\00", align 1
@.compoundliteral = internal global %struct.hello_world_driver_api { void (%struct.device*)* @print_impl }, align 4
@__devstate_hello_world = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1631
@data = internal global %union.anon.15 zeroinitializer, align 4, !dbg !1666
@__device_hello_world = internal constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.82, i32 0, i32 0), i8* null, i8* bitcast (%struct.hello_world_driver_api* @.compoundliteral to i8*), %struct.device_state* @__devstate_hello_world, i8* bitcast (%union.anon.15* @data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_hello_world, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_150_", align 4, !dbg !1639
@__init___device_hello_world = internal constant %struct.init_entry { i32 (%struct.device*)* @init, %struct.device* @__device_hello_world }, section ".z_init_PRE_KERNEL_150_", align 4, !dbg !1655
@.str.1.83 = private unnamed_addr constant [33 x i8] c"Hello World from the kernel: %d\0A\00", align 1
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1671
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1678
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1888
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1897
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !1904
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1909
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.102 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.105, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.106, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.107, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.108, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.109, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.103, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.110, i32 0, i32 0)], align 4, !dbg !1937
@.str.104 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.105 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.106 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.107 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.108 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.109 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.103 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.110 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2049
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2062
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2170
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2173
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2175
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1902
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1899
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2177
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2213
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1766
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2211
@.str.165 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2798 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !2802, !srcloc !2803
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !2804, !srcloc !2805
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !2806, !srcloc !2807
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !2808, !srcloc !2809
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2810, !srcloc !2811
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !2812, !srcloc !2813
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !2814, !srcloc !2815
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !2816, !srcloc !2817
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !2818, !srcloc !2819
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !2820, !srcloc !2821
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !2822, !srcloc !2823
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !2824, !srcloc !2825
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !2826, !srcloc !2827
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !2828, !srcloc !2829
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !2830, !srcloc !2831
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !2832, !srcloc !2833
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !2834, !srcloc !2835
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !2836, !srcloc !2837
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2838, !srcloc !2839
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !2840, !srcloc !2841
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !2842, !srcloc !2843
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2844, !srcloc !2845
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !2846, !srcloc !2847
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2848, !srcloc !2849
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !2850, !srcloc !2851
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !2852, !srcloc !2853
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !2854, !srcloc !2855
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !2856, !srcloc !2859
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !2860, !srcloc !2861
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2862, !srcloc !2863
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2864, !srcloc !2865
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2866, !srcloc !2867
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2868, !srcloc !2869
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !2870, !srcloc !2871
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !2872, !srcloc !2873
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !2874, !srcloc !2875
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !2876, !srcloc !2877
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2878, !srcloc !2879
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2880, !srcloc !2881
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2882, !srcloc !2883
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2884, !srcloc !2885
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2886, !srcloc !2887
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2888, !srcloc !2889
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !2890, !srcloc !2891
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !2892, !srcloc !2893
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !2894, !srcloc !2895
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !2896, !srcloc !2897
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !2898, !srcloc !2899
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !2900, !srcloc !2901
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2902, !srcloc !2903
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !2904, !srcloc !2905
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2906, !srcloc !2907
  ret void, !dbg !2908
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @main() local_unnamed_addr #2 !dbg !2911 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i32 0, i32 0)) #24, !dbg !2912
  %1 = tail call fastcc %struct.device* @device_get_binding() #25, !dbg !2913
  store %struct.device* %1, %struct.device** @dev, align 4, !dbg !2914
  %2 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 0, !dbg !2915
  %3 = load i8*, i8** %2, align 4, !dbg !2915
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i32 0, i32 0), %struct.device* noundef %1, i8* noundef %3) #24, !dbg !2916
  tail call fastcc void @k_object_access_grant() #25, !dbg !2917
  tail call void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef nonnull @user_entry, i8* noundef null, i8* noundef null, i8* noundef null) #26, !dbg !2918
  unreachable, !dbg !2918
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.device* @device_get_binding() unnamed_addr #1 !dbg !2919 {
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), metadata !2924, metadata !DIExpression()), !dbg !2925
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !2926, !srcloc !2928
  %1 = tail call %struct.device* @z_impl_device_get_binding(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !2929
  ret %struct.device* %1, !dbg !2930
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !2931 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !3036, metadata !DIExpression()), !dbg !3038
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !3037, metadata !DIExpression()), !dbg !3038
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3039, !srcloc !3041
  ret void, !dbg !3042
}

; Function Attrs: noinline nounwind optsize
define internal void @user_entry(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !3043 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3047, metadata !DIExpression()), !dbg !3050
  call void @llvm.dbg.value(metadata i8* %1, metadata !3048, metadata !DIExpression()), !dbg !3050
  call void @llvm.dbg.value(metadata i8* %2, metadata !3049, metadata !DIExpression()), !dbg !3050
  %4 = load %struct.device*, %struct.device** @dev, align 4, !dbg !3051
  tail call fastcc void @hello_world_print(%struct.device* noundef %4) #25, !dbg !3052
  ret void, !dbg !3053
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @hello_world_print(%struct.device* noundef %0) unnamed_addr #1 !dbg !3054 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3059, metadata !DIExpression()), !dbg !3060
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3061, !srcloc !3063
  tail call fastcc void @z_impl_hello_world_print(%struct.device* noundef %0) #25, !dbg !3064
  ret void, !dbg !3065
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_hello_world_print(%struct.device* noundef %0) unnamed_addr #1 !dbg !3066 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3069, metadata !DIExpression()), !dbg !3077
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3078
  %3 = bitcast i8** %2 to %struct.hello_world_driver_api**, !dbg !3078
  %4 = load %struct.hello_world_driver_api*, %struct.hello_world_driver_api** %3, align 4, !dbg !3078
  call void @llvm.dbg.value(metadata %struct.hello_world_driver_api* %4, metadata !3070, metadata !DIExpression()), !dbg !3077
  %5 = getelementptr inbounds %struct.hello_world_driver_api, %struct.hello_world_driver_api* %4, i32 0, i32 0, !dbg !3079
  %6 = load void (%struct.device*)*, void (%struct.device*)** %5, align 4, !dbg !3079
  tail call void %6(%struct.device* noundef %0) #24, !dbg !3080
  ret void, !dbg !3081
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3082 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3084, metadata !DIExpression()), !dbg !3085
  ret i32 0, !dbg !3086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3087 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3091, metadata !DIExpression()), !dbg !3092
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3093
  ret void, !dbg !3094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3095 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3098
  ret i8* %1, !dbg !3099
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3100 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3112, metadata !DIExpression()), !dbg !3123
  call void @llvm.dbg.value(metadata i8* %0, metadata !3111, metadata !DIExpression()), !dbg !3123
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !3124
  ret void, !dbg !3126
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3131, metadata !DIExpression()), !dbg !3133
  call void @llvm.dbg.value(metadata i8* %1, metadata !3132, metadata !DIExpression()), !dbg !3133
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3134
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !3134
  ret i32 %4, !dbg !3135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3136 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3148, metadata !DIExpression()), !dbg !3149
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3145, metadata !DIExpression()), !dbg !3149
  call void @llvm.dbg.value(metadata i8* %1, metadata !3146, metadata !DIExpression()), !dbg !3149
  call void @llvm.dbg.value(metadata i8* %2, metadata !3147, metadata !DIExpression()), !dbg !3149
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !3150
  ret void, !dbg !3151
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3152 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3156, metadata !DIExpression()), !dbg !3159
  call void @llvm.dbg.value(metadata i32 %1, metadata !3157, metadata !DIExpression()), !dbg !3159
  call void @llvm.dbg.value(metadata i32 0, metadata !3158, metadata !DIExpression()), !dbg !3159
  %3 = icmp eq i32 %1, 0, !dbg !3160
  br i1 %3, label %13, label %4, !dbg !3163

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3158, metadata !DIExpression()), !dbg !3159
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3164
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3166
  %8 = load i8, i8* %7, align 1, !dbg !3166
  %9 = zext i8 %8 to i32, !dbg !3166
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !3164
  %11 = add nuw i32 %5, 1, !dbg !3167
  call void @llvm.dbg.value(metadata i32 %11, metadata !3158, metadata !DIExpression()), !dbg !3159
  %12 = icmp eq i32 %11, %1, !dbg !3160
  br i1 %12, label %13, label %4, !dbg !3163, !llvm.loop !3168

13:                                               ; preds = %4, %2
  ret void, !dbg !3170
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3171 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3175, metadata !DIExpression()), !dbg !3177
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3178
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3178
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3176, metadata !DIExpression()), !dbg !3179
  call void @llvm.va_start(i8* nonnull %3), !dbg !3180
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3181
  %5 = load i32, i32* %4, align 4, !dbg !3181
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3181
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !3181
  call void @llvm.va_end(i8* nonnull %3), !dbg !3182
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3183
  ret void, !dbg !3183
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3184 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3188, metadata !DIExpression()), !dbg !3193
  call void @llvm.dbg.value(metadata i32 %1, metadata !3189, metadata !DIExpression()), !dbg !3193
  call void @llvm.dbg.value(metadata i8* %2, metadata !3190, metadata !DIExpression()), !dbg !3193
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3194
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3194
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3191, metadata !DIExpression()), !dbg !3195
  call void @llvm.va_start(i8* nonnull %5), !dbg !3196
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3197
  %7 = load i32, i32* %6, align 4, !dbg !3197
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3197
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !3197
  call void @llvm.dbg.value(metadata i32 %9, metadata !3192, metadata !DIExpression()), !dbg !3193
  call void @llvm.va_end(i8* nonnull %5), !dbg !3198
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3199
  ret i32 %9, !dbg !3200
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3201 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3208, metadata !DIExpression()), !dbg !3215
  call void @llvm.dbg.value(metadata i8* %0, metadata !3205, metadata !DIExpression()), !dbg !3215
  call void @llvm.dbg.value(metadata i32 %1, metadata !3206, metadata !DIExpression()), !dbg !3215
  call void @llvm.dbg.value(metadata i8* %2, metadata !3207, metadata !DIExpression()), !dbg !3215
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3216
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3216
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3209, metadata !DIExpression()), !dbg !3217
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3218
  store i8* %0, i8** %7, align 4, !dbg !3218
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3218
  store i32 %1, i32* %8, align 4, !dbg !3218
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3218
  store i32 0, i32* %9, align 4, !dbg !3218
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !3219
  %10 = load i32, i32* %9, align 4, !dbg !3220
  %11 = load i32, i32* %8, align 4, !dbg !3222
  %12 = icmp slt i32 %10, %11, !dbg !3223
  br i1 %12, label %13, label %15, !dbg !3224

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3225
  store i8 0, i8* %14, align 1, !dbg !3227
  br label %15, !dbg !3228

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3229
  ret i32 %10, !dbg !3230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #8 !dbg !3231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3236, metadata !DIExpression()), !dbg !3238
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3237, metadata !DIExpression()), !dbg !3238
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3239
  %4 = load i8*, i8** %3, align 4, !dbg !3239
  %5 = icmp eq i8* %4, null, !dbg !3241
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3242
  br i1 %5, label %12, label %8, !dbg !3243

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3244
  %10 = load i32, i32* %9, align 4, !dbg !3244
  %11 = icmp slt i32 %7, %10, !dbg !3245
  br i1 %11, label %15, label %12, !dbg !3246

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3247
  %14 = add nsw i32 %7, 1, !dbg !3249
  store i32 %14, i32* %13, align 4, !dbg !3249
  br label %25, !dbg !3250

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3251
  %17 = icmp eq i32 %7, %16, !dbg !3253
  br i1 %17, label %18, label %21, !dbg !3254

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3255
  store i32 %19, i32* %6, align 4, !dbg !3255
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3257
  store i8 0, i8* %20, align 1, !dbg !3258
  br label %25, !dbg !3259

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3260
  %23 = add nsw i32 %7, 1, !dbg !3262
  store i32 %23, i32* %6, align 4, !dbg !3262
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3263
  store i8 %22, i8* %24, align 1, !dbg !3264
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3265
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !3266 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3274, metadata !DIExpression()), !dbg !3278
  call void @llvm.dbg.value(metadata i8* %1, metadata !3275, metadata !DIExpression()), !dbg !3278
  call void @llvm.dbg.value(metadata i8* %2, metadata !3276, metadata !DIExpression()), !dbg !3278
  call void @llvm.dbg.value(metadata i8* %3, metadata !3277, metadata !DIExpression()), !dbg !3278
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !3279
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !3280
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !3281
  unreachable, !dbg !3282
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3283 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !3387
  ret %struct.k_thread* %1, !dbg !3388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3389 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3394, metadata !DIExpression()), !dbg !3395
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3396, !srcloc !3398
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !3399
  ret void, !dbg !3400
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3401 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3402, !srcloc !3404
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !3405
  ret %struct.k_thread* %1, !dbg !3406
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !3407 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3420, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3417, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.value(metadata i8* %1, metadata !3418, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.value(metadata i8* %2, metadata !3419, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.value(metadata i32 %4, metadata !3421, metadata !DIExpression()), !dbg !3548
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !3549
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3549
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !3422, metadata !DIExpression()), !dbg !3550
  call void @llvm.dbg.value(metadata i32 0, metadata !3426, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.value(metadata i1 undef, metadata !3428, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3548
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !3551

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !3551

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !3552
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !3420, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.value(metadata i8* %30, metadata !3419, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.value(metadata i32 %29, metadata !3426, metadata !DIExpression()), !dbg !3548
  %31 = load i8, i8* %30, align 1, !dbg !3553
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !3551

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !3553
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !3554
  call void @llvm.dbg.value(metadata i8* %34, metadata !3419, metadata !DIExpression()), !dbg !3548
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #24, !dbg !3554
  call void @llvm.dbg.value(metadata i32 %35, metadata !3430, metadata !DIExpression()), !dbg !3555
  %36 = icmp slt i32 %35, 0, !dbg !3556
  %37 = add i32 %29, 1, !dbg !3554
  call void @llvm.dbg.value(metadata i32 undef, metadata !3426, metadata !DIExpression()), !dbg !3548
  br i1 %36, label %365, label %28, !llvm.loop !3558

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3560
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !3435, metadata !DIExpression()), !dbg !3561
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !3561
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !3480, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !3483, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i8* %30, metadata !3486, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32 -1, metadata !3487, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32 -1, metadata !3488, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i8* null, metadata !3489, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i8* %14, metadata !3490, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i8 0, metadata !3491, metadata !DIExpression()), !dbg !3562
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #25, !dbg !3563
  call void @llvm.dbg.value(metadata i8* %39, metadata !3419, metadata !DIExpression()), !dbg !3548
  %40 = load i24, i24* %15, align 8, !dbg !3564
  %41 = and i24 %40, 256, !dbg !3564
  %42 = icmp eq i24 %41, 0, !dbg !3564
  br i1 %42, label %51, label %43, !dbg !3566

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !3567
  call void @llvm.dbg.value(metadata i8* %44, metadata !3420, metadata !DIExpression()), !dbg !3548
  %45 = bitcast i8* %27 to i32*, !dbg !3567
  %46 = load i32, i32* %45, align 4, !dbg !3567
  call void @llvm.dbg.value(metadata i32 %46, metadata !3487, metadata !DIExpression()), !dbg !3562
  %47 = icmp slt i32 %46, 0, !dbg !3569
  br i1 %47, label %48, label %56, !dbg !3571

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !3572
  store i24 %49, i24* %15, align 8, !dbg !3572
  %50 = sub nsw i32 0, %46, !dbg !3574
  call void @llvm.dbg.value(metadata i32 %50, metadata !3487, metadata !DIExpression()), !dbg !3562
  br label %56, !dbg !3575

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !3576
  %53 = icmp eq i24 %52, 0, !dbg !3576
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !3578
  br label %56, !dbg !3578

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !3579
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !3562
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3420, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.value(metadata i32 %58, metadata !3487, metadata !DIExpression()), !dbg !3562
  %60 = and i24 %57, 1024, !dbg !3579
  %61 = icmp eq i24 %60, 0, !dbg !3579
  br i1 %61, label %69, label %62, !dbg !3580

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !3581
  call void @llvm.dbg.value(metadata i8* %63, metadata !3420, metadata !DIExpression()), !dbg !3548
  %64 = bitcast i8* %59 to i32*, !dbg !3581
  %65 = load i32, i32* %64, align 4, !dbg !3581
  call void @llvm.dbg.value(metadata i32 %65, metadata !3492, metadata !DIExpression()), !dbg !3582
  %66 = icmp slt i32 %65, 0, !dbg !3583
  br i1 %66, label %67, label %74, !dbg !3585

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !3586
  store i24 %68, i24* %15, align 8, !dbg !3586
  br label %74, !dbg !3588

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !3589
  %71 = icmp eq i24 %70, 0, !dbg !3589
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !3591
  br label %74, !dbg !3591

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !3592
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !3562
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !3562
  call void @llvm.dbg.value(metadata i8* %77, metadata !3420, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.value(metadata i32 %76, metadata !3488, metadata !DIExpression()), !dbg !3562
  store i32 0, i32* %16, align 4, !dbg !3593
  store i32 0, i32* %17, align 8, !dbg !3594
  %78 = lshr i24 %75, 16, !dbg !3592
  call void @llvm.dbg.value(metadata i24 %78, metadata !3495, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3562
  %79 = lshr i24 %75, 11, !dbg !3595
  %80 = and i24 %79, 15, !dbg !3595
  %81 = zext i24 %80 to i32, !dbg !3595
  call void @llvm.dbg.value(metadata i32 %81, metadata !3496, metadata !DIExpression()), !dbg !3562
  %82 = trunc i24 %78 to i3, !dbg !3596
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !3596

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !3597

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3600
  call void @llvm.dbg.value(metadata i8* %85, metadata !3420, metadata !DIExpression()), !dbg !3548
  %86 = bitcast i8* %77 to i32*, !dbg !3600
  %87 = load i32, i32* %86, align 4, !dbg !3600
  %88 = sext i32 %87 to i64, !dbg !3600
  store i64 %88, i64* %20, align 8, !dbg !3602
  br label %115, !dbg !3603

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3604
  call void @llvm.dbg.value(metadata i8* %90, metadata !3420, metadata !DIExpression()), !dbg !3548
  %91 = bitcast i8* %77 to i32*, !dbg !3604
  %92 = load i32, i32* %91, align 4, !dbg !3604
  %93 = sext i32 %92 to i64, !dbg !3604
  store i64 %93, i64* %20, align 8, !dbg !3607
  br label %115, !dbg !3608

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !3609
  %96 = add i32 %95, 7, !dbg !3609
  %97 = and i32 %96, -8, !dbg !3609
  %98 = inttoptr i32 %97 to i8*, !dbg !3609
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3609
  call void @llvm.dbg.value(metadata i8* %99, metadata !3420, metadata !DIExpression()), !dbg !3548
  %100 = inttoptr i32 %97 to i64*, !dbg !3609
  %101 = load i64, i64* %100, align 8, !dbg !3609
  store i64 %101, i64* %20, align 8, !dbg !3610
  br label %115, !dbg !3611

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !3612
  %104 = add i32 %103, 7, !dbg !3612
  %105 = and i32 %104, -8, !dbg !3612
  %106 = inttoptr i32 %105 to i8*, !dbg !3612
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !3612
  call void @llvm.dbg.value(metadata i8* %107, metadata !3420, metadata !DIExpression()), !dbg !3548
  %108 = inttoptr i32 %105 to i64*, !dbg !3612
  %109 = load i64, i64* %108, align 8, !dbg !3612
  store i64 %109, i64* %20, align 8, !dbg !3613
  br label %115, !dbg !3614

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3615
  call void @llvm.dbg.value(metadata i8* %111, metadata !3420, metadata !DIExpression()), !dbg !3548
  %112 = bitcast i8* %77 to i32*, !dbg !3615
  %113 = load i32, i32* %112, align 4, !dbg !3615
  %114 = sext i32 %113 to i64, !dbg !3616
  store i64 %114, i64* %20, align 8, !dbg !3617
  br label %115, !dbg !3618

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !3619
  call void @llvm.dbg.value(metadata i8* %117, metadata !3420, metadata !DIExpression()), !dbg !3548
  %118 = trunc i24 %79 to i4, !dbg !3620
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !3620

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !3621
  %121 = ashr exact i64 %120, 56, !dbg !3621
  store i64 %121, i64* %20, align 8, !dbg !3624
  br label %177, !dbg !3625

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !3626
  %124 = ashr exact i64 %123, 48, !dbg !3626
  store i64 %124, i64* %20, align 8, !dbg !3629
  br label %177, !dbg !3630

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !3631

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3634
  call void @llvm.dbg.value(metadata i8* %127, metadata !3420, metadata !DIExpression()), !dbg !3548
  %128 = bitcast i8* %77 to i32*, !dbg !3634
  %129 = load i32, i32* %128, align 4, !dbg !3634
  %130 = zext i32 %129 to i64, !dbg !3634
  store i64 %130, i64* %20, align 8, !dbg !3636
  br label %157, !dbg !3637

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3638
  call void @llvm.dbg.value(metadata i8* %132, metadata !3420, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.value(metadata i8* %132, metadata !3420, metadata !DIExpression()), !dbg !3548
  %133 = bitcast i8* %77 to i32*, !dbg !3638
  %134 = load i32, i32* %133, align 4, !dbg !3638
  %135 = zext i32 %134 to i64, !dbg !3638
  store i64 %135, i64* %20, align 8, !dbg !3638
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !3640
  %138 = add i32 %137, 7, !dbg !3640
  %139 = and i32 %138, -8, !dbg !3640
  %140 = inttoptr i32 %139 to i8*, !dbg !3640
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !3640
  call void @llvm.dbg.value(metadata i8* %141, metadata !3420, metadata !DIExpression()), !dbg !3548
  %142 = inttoptr i32 %139 to i64*, !dbg !3640
  %143 = load i64, i64* %142, align 8, !dbg !3640
  store i64 %143, i64* %20, align 8, !dbg !3641
  br label %157, !dbg !3642

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !3643
  %146 = add i32 %145, 7, !dbg !3643
  %147 = and i32 %146, -8, !dbg !3643
  %148 = inttoptr i32 %147 to i8*, !dbg !3643
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !3643
  call void @llvm.dbg.value(metadata i8* %149, metadata !3420, metadata !DIExpression()), !dbg !3548
  %150 = inttoptr i32 %147 to i64*, !dbg !3643
  %151 = load i64, i64* %150, align 8, !dbg !3643
  store i64 %151, i64* %20, align 8, !dbg !3644
  br label %157, !dbg !3645

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3646
  call void @llvm.dbg.value(metadata i8* %153, metadata !3420, metadata !DIExpression()), !dbg !3548
  %154 = bitcast i8* %77 to i32*, !dbg !3646
  %155 = load i32, i32* %154, align 4, !dbg !3646
  %156 = zext i32 %155 to i64, !dbg !3647
  store i64 %156, i64* %20, align 8, !dbg !3648
  br label %157, !dbg !3649

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !3650
  call void @llvm.dbg.value(metadata i8* %159, metadata !3420, metadata !DIExpression()), !dbg !3548
  %160 = trunc i24 %79 to i4, !dbg !3651
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !3651

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !3652
  store i64 %162, i64* %20, align 8, !dbg !3655
  br label %177, !dbg !3656

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !3657
  store i64 %164, i64* %20, align 8, !dbg !3660
  br label %177, !dbg !3661

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !3662
  %167 = add i32 %166, 7, !dbg !3662
  %168 = and i32 %167, -8, !dbg !3662
  %169 = inttoptr i32 %168 to i8*, !dbg !3662
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !3662
  call void @llvm.dbg.value(metadata i8* %170, metadata !3420, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.value(metadata i8* %170, metadata !3420, metadata !DIExpression()), !dbg !3548
  %171 = inttoptr i32 %168 to double*, !dbg !3662
  %172 = load double, double* %171, align 8, !dbg !3662
  store double %172, double* %19, align 8, !dbg !3662
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3666
  call void @llvm.dbg.value(metadata i8* %174, metadata !3420, metadata !DIExpression()), !dbg !3548
  %175 = bitcast i8* %77 to i8**, !dbg !3666
  %176 = load i8*, i8** %175, align 4, !dbg !3666
  store i8* %176, i8** %18, align 8, !dbg !3669
  br label %177, !dbg !3670

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !3562
  call void @llvm.dbg.value(metadata i8* %178, metadata !3420, metadata !DIExpression()), !dbg !3548
  %179 = and i24 %75, 3, !dbg !3671
  %180 = icmp eq i24 %179, 0, !dbg !3671
  br i1 %180, label %185, label %181, !dbg !3671

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #25, !dbg !3672
  call void @llvm.dbg.value(metadata i32 %182, metadata !3497, metadata !DIExpression()), !dbg !3673
  %183 = icmp slt i32 %182, 0, !dbg !3674
  %184 = add i32 %182, %29, !dbg !3672
  call void @llvm.dbg.value(metadata i32 undef, metadata !3426, metadata !DIExpression()), !dbg !3548
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !3676
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !3677

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #24, !dbg !3678
  call void @llvm.dbg.value(metadata i32 %188, metadata !3501, metadata !DIExpression()), !dbg !3679
  %189 = icmp slt i32 %188, 0, !dbg !3680
  %190 = add i32 %29, 1, !dbg !3678
  call void @llvm.dbg.value(metadata i32 undef, metadata !3426, metadata !DIExpression()), !dbg !3548
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !3682
  call void @llvm.dbg.value(metadata i8* %192, metadata !3489, metadata !DIExpression()), !dbg !3562
  %193 = icmp sgt i32 %76, -1, !dbg !3683
  br i1 %193, label %194, label %196, !dbg !3685

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #24, !dbg !3686
  call void @llvm.dbg.value(metadata i32 %195, metadata !3504, metadata !DIExpression()), !dbg !3688
  br label %241, !dbg !3689

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #24, !dbg !3690
  call void @llvm.dbg.value(metadata i32 %197, metadata !3504, metadata !DIExpression()), !dbg !3688
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !3489, metadata !DIExpression()), !dbg !3562
  %199 = load i64, i64* %20, align 8, !dbg !3692
  %200 = trunc i64 %199 to i8, !dbg !3693
  store i8 %200, i8* %10, align 1, !dbg !3694
  call void @llvm.dbg.value(metadata i8* %23, metadata !3490, metadata !DIExpression()), !dbg !3562
  br label %245, !dbg !3695

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !3696
  %203 = icmp eq i24 %202, 0, !dbg !3696
  %204 = trunc i24 %75 to i8, !dbg !3698
  %205 = shl i8 %204, 1, !dbg !3698
  %206 = and i8 %205, 32, !dbg !3698
  %207 = select i1 %203, i8 %206, i8 43, !dbg !3698
  call void @llvm.dbg.value(metadata i8 %207, metadata !3491, metadata !DIExpression()), !dbg !3562
  %208 = load i64, i64* %20, align 8, !dbg !3699
  call void @llvm.dbg.value(metadata i64 %208, metadata !3427, metadata !DIExpression()), !dbg !3548
  %209 = icmp slt i64 %208, 0, !dbg !3700
  br i1 %209, label %210, label %212, !dbg !3702

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !3491, metadata !DIExpression()), !dbg !3562
  %211 = sub nsw i64 0, %208, !dbg !3703
  store i64 %211, i64* %20, align 8, !dbg !3705
  br label %212, !dbg !3706

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !3562
  call void @llvm.dbg.value(metadata i8 %213, metadata !3491, metadata !DIExpression()), !dbg !3562
  %214 = load i64, i64* %20, align 8, !dbg !3707
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !3708
  call void @llvm.dbg.value(metadata i8* %215, metadata !3489, metadata !DIExpression()), !dbg !3562
  br label %216, !dbg !3709

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !3710
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !3711
  call void @llvm.dbg.value(metadata i8* %218, metadata !3489, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i8 %217, metadata !3491, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.label(metadata !3547), !dbg !3712
  %219 = icmp sgt i32 %76, -1, !dbg !3713
  br i1 %219, label %222, label %220, !dbg !3714

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !3715
  br label %245, !dbg !3714

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !3717
  %224 = sub i32 %22, %223, !dbg !3717
  call void @llvm.dbg.value(metadata i32 %224, metadata !3506, metadata !DIExpression()), !dbg !3718
  %225 = load i24, i24* %15, align 8, !dbg !3719
  %226 = and i24 %225, -65, !dbg !3719
  store i24 %226, i24* %15, align 8, !dbg !3719
  %227 = icmp ugt i32 %76, %224, !dbg !3720
  br i1 %227, label %228, label %245, !dbg !3722

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !3723
  store i32 %229, i32* %16, align 4, !dbg !3725
  br label %245, !dbg !3726

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !3727
  %232 = icmp eq i8* %231, null, !dbg !3729
  br i1 %232, label %245, label %233, !dbg !3730

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !3731
  %235 = zext i32 %234 to i64, !dbg !3731
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !3733
  call void @llvm.dbg.value(metadata i8* %236, metadata !3489, metadata !DIExpression()), !dbg !3562
  %237 = load i24, i24* %15, align 8, !dbg !3734
  %238 = or i24 %237, 1048576, !dbg !3734
  store i24 %238, i24* %15, align 8, !dbg !3734
  store i8 120, i8* %21, align 1, !dbg !3735
  br label %216, !dbg !3736

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !3737
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #25, !dbg !3740
  br label %363, !dbg !3741

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !3742
  call void @llvm.dbg.value(metadata i32 %242, metadata !3504, metadata !DIExpression()), !dbg !3688
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !3743
  call void @llvm.dbg.value(metadata i32 -1, metadata !3488, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32 %29, metadata !3426, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.value(metadata i8* %192, metadata !3489, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i8* %243, metadata !3490, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i8 0, metadata !3491, metadata !DIExpression()), !dbg !3562
  %244 = icmp eq i8* %192, null, !dbg !3744
  br i1 %244, label %363, label %245, !dbg !3746, !llvm.loop !3558

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !3715
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !3509, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3562
  call void @llvm.dbg.value(metadata i32 0, metadata !3510, metadata !DIExpression()), !dbg !3562
  %250 = zext i8 %249 to i32, !dbg !3747
  %251 = icmp eq i8 %249, 0, !dbg !3749
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !3509, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3562
  call void @llvm.dbg.value(metadata i32 undef, metadata !3509, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !3509, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3562
  call void @llvm.dbg.value(metadata i32 undef, metadata !3509, metadata !DIExpression()), !dbg !3562
  %252 = icmp sgt i32 %58, 0, !dbg !3750
  br i1 %252, label %253, label %302, !dbg !3751

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !3715
  %255 = icmp eq i24 %254, 0, !dbg !3715
  %256 = ptrtoint i8* %248 to i32, !dbg !3752
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !3509, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3562
  %257 = ptrtoint i8* %247 to i32, !dbg !3752
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !3509, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3562
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !3509, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3562
  %258 = xor i1 %251, true, !dbg !3753
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3509, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3562
  %259 = sext i1 %258 to i32, !dbg !3753
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3509, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3562
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !3509, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3562
  %260 = lshr i24 %246, 19, !dbg !3754
  %261 = and i24 %260, 1, !dbg !3754
  %262 = select i1 %255, i24 %261, i24 2, !dbg !3754
  %263 = zext i24 %262 to i32, !dbg !3754
  %264 = add i32 %257, %259, !dbg !3754
  %265 = add i32 %256, %263, !dbg !3754
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !3509, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3562
  %266 = and i24 %246, 4194304, !dbg !3755
  %267 = icmp eq i24 %266, 0, !dbg !3755
  %268 = load i32, i32* %16, align 4, !dbg !3757
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !3509, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3562
  call void @llvm.dbg.value(metadata i32 undef, metadata !3509, metadata !DIExpression()), !dbg !3562
  %269 = load i32, i32* %17, align 8, !dbg !3758
  %270 = select i1 %267, i32 0, i32 %269, !dbg !3758
  call void @llvm.dbg.value(metadata i32 undef, metadata !3509, metadata !DIExpression()), !dbg !3562
  %271 = add i32 %264, %58, !dbg !3758
  %272 = add i32 %265, %268, !dbg !3758
  %273 = add i32 %272, %270, !dbg !3759
  %274 = sub i32 %271, %273, !dbg !3759
  call void @llvm.dbg.value(metadata i32 %274, metadata !3487, metadata !DIExpression()), !dbg !3562
  %275 = and i24 %246, 4, !dbg !3760
  %276 = icmp eq i24 %275, 0, !dbg !3760
  br i1 %276, label %277, label %302, !dbg !3761

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !3511, metadata !DIExpression()), !dbg !3762
  %278 = and i24 %246, 64, !dbg !3763
  %279 = icmp eq i24 %278, 0, !dbg !3763
  %280 = select i1 %279, i1 true, i1 %251, !dbg !3764
  %281 = select i1 %279, i8 %249, i8 0, !dbg !3764
  %282 = select i1 %279, i32 32, i32 48, !dbg !3764
  br i1 %280, label %287, label %283, !dbg !3764

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #24, !dbg !3765
  call void @llvm.dbg.value(metadata i32 %284, metadata !3516, metadata !DIExpression()), !dbg !3766
  %285 = icmp slt i32 %284, 0, !dbg !3767
  %286 = add i32 %29, 1, !dbg !3765
  call void @llvm.dbg.value(metadata i32 undef, metadata !3426, metadata !DIExpression()), !dbg !3548
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !3562
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !3552
  call void @llvm.dbg.value(metadata i32 %290, metadata !3426, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.value(metadata i8 undef, metadata !3511, metadata !DIExpression()), !dbg !3762
  call void @llvm.dbg.value(metadata i8 %288, metadata !3491, metadata !DIExpression()), !dbg !3562
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !3769
  %292 = add i32 %291, -1, !dbg !3769
  br label %293, !dbg !3769

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !3770
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !3552
  call void @llvm.dbg.value(metadata i32 %295, metadata !3426, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.value(metadata i32 %294, metadata !3487, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32 %294, metadata !3487, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3562
  %296 = icmp sgt i32 %294, 0, !dbg !3771
  br i1 %296, label %297, label %302, !dbg !3769

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !3772
  call void @llvm.dbg.value(metadata i32 %298, metadata !3487, metadata !DIExpression()), !dbg !3562
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #24, !dbg !3773
  call void @llvm.dbg.value(metadata i32 %299, metadata !3522, metadata !DIExpression()), !dbg !3774
  %300 = icmp slt i32 %299, 0, !dbg !3775
  %301 = add i32 %295, 1, !dbg !3773
  call void @llvm.dbg.value(metadata i32 undef, metadata !3426, metadata !DIExpression()), !dbg !3548
  br i1 %300, label %361, label %293, !llvm.loop !3777

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !3562
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !3562
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !3552
  call void @llvm.dbg.value(metadata i32 %305, metadata !3426, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.value(metadata i32 %304, metadata !3487, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i8 %303, metadata !3491, metadata !DIExpression()), !dbg !3562
  %306 = icmp eq i8 %303, 0, !dbg !3779
  br i1 %306, label %312, label %307, !dbg !3780

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !3781
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #24, !dbg !3782
  call void @llvm.dbg.value(metadata i32 %309, metadata !3525, metadata !DIExpression()), !dbg !3783
  %310 = icmp slt i32 %309, 0, !dbg !3784
  %311 = add i32 %305, 1, !dbg !3782
  call void @llvm.dbg.value(metadata i32 undef, metadata !3426, metadata !DIExpression()), !dbg !3548
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !3552
  call void @llvm.dbg.value(metadata i32 %313, metadata !3426, metadata !DIExpression()), !dbg !3548
  %314 = lshr i24 %246, 20, !dbg !3786
  %315 = lshr i24 %246, 19, !dbg !3787
  %316 = or i24 %314, %315, !dbg !3788
  %317 = and i24 %316, 1, !dbg !3788
  %318 = icmp eq i24 %317, 0, !dbg !3788
  br i1 %318, label %323, label %319, !dbg !3789

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !3790
  call void @llvm.dbg.value(metadata i32 %320, metadata !3529, metadata !DIExpression()), !dbg !3791
  %321 = icmp slt i32 %320, 0, !dbg !3792
  %322 = add i32 %313, 1, !dbg !3790
  call void @llvm.dbg.value(metadata i32 undef, metadata !3426, metadata !DIExpression()), !dbg !3548
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !3552
  call void @llvm.dbg.value(metadata i32 %324, metadata !3426, metadata !DIExpression()), !dbg !3548
  %325 = and i24 %246, 1048576, !dbg !3794
  %326 = icmp eq i24 %325, 0, !dbg !3794
  br i1 %326, label %333, label %327, !dbg !3795

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !3796
  %329 = zext i8 %328 to i32, !dbg !3796
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #24, !dbg !3796
  call void @llvm.dbg.value(metadata i32 %330, metadata !3535, metadata !DIExpression()), !dbg !3797
  %331 = icmp slt i32 %330, 0, !dbg !3798
  %332 = add i32 %324, 1, !dbg !3796
  call void @llvm.dbg.value(metadata i32 undef, metadata !3426, metadata !DIExpression()), !dbg !3548
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !3552
  call void @llvm.dbg.value(metadata i32 %334, metadata !3426, metadata !DIExpression()), !dbg !3548
  %335 = load i32, i32* %16, align 4, !dbg !3800
  call void @llvm.dbg.value(metadata i32 %335, metadata !3510, metadata !DIExpression()), !dbg !3562
  br label %336, !dbg !3801

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !3802
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !3552
  call void @llvm.dbg.value(metadata i32 %338, metadata !3426, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.value(metadata i32 %337, metadata !3510, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3562
  %339 = icmp sgt i32 %337, 0, !dbg !3803
  br i1 %339, label %340, label %345, !dbg !3801

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !3804
  call void @llvm.dbg.value(metadata i32 %341, metadata !3510, metadata !DIExpression()), !dbg !3562
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !3805
  call void @llvm.dbg.value(metadata i32 %342, metadata !3539, metadata !DIExpression()), !dbg !3806
  %343 = icmp slt i32 %342, 0, !dbg !3807
  %344 = add i32 %338, 1, !dbg !3805
  call void @llvm.dbg.value(metadata i32 undef, metadata !3426, metadata !DIExpression()), !dbg !3548
  br i1 %343, label %361, label %336, !llvm.loop !3809

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #25, !dbg !3811
  call void @llvm.dbg.value(metadata i32 %346, metadata !3542, metadata !DIExpression()), !dbg !3812
  %347 = icmp slt i32 %346, 0, !dbg !3813
  call void @llvm.dbg.value(metadata i32 undef, metadata !3426, metadata !DIExpression()), !dbg !3548
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !3811
  call void @llvm.dbg.value(metadata i32 %349, metadata !3426, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.value(metadata i32 %304, metadata !3487, metadata !DIExpression()), !dbg !3562
  %350 = icmp sgt i32 %304, 0, !dbg !3815
  br i1 %350, label %351, label %363, !dbg !3816

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !3816
  %353 = add i32 %352, %338, !dbg !3816
  br label %354, !dbg !3816

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3426, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.value(metadata i32 %355, metadata !3487, metadata !DIExpression()), !dbg !3562
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #24, !dbg !3817
  call void @llvm.dbg.value(metadata i32 %356, metadata !3544, metadata !DIExpression()), !dbg !3818
  %357 = icmp slt i32 %356, 0, !dbg !3819
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !3821
  call void @llvm.dbg.value(metadata i32 undef, metadata !3426, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3548
  call void @llvm.dbg.value(metadata i32 %359, metadata !3487, metadata !DIExpression()), !dbg !3562
  %360 = icmp sgt i32 %355, 1, !dbg !3815
  br i1 %360, label %354, label %363, !dbg !3816, !llvm.loop !3822

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !3426, metadata !DIExpression()), !dbg !3548
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3559
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !3552
  call void @llvm.dbg.value(metadata i32 %364, metadata !3426, metadata !DIExpression()), !dbg !3548
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3559
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !3548
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3824
  ret i32 %366, !dbg !3824
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #10

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3825 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3829, metadata !DIExpression()), !dbg !3831
  call void @llvm.dbg.value(metadata i8* %1, metadata !3830, metadata !DIExpression()), !dbg !3831
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !3832
  store i24 0, i24* %3, align 4, !dbg !3832
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !3832
  store i8 0, i8* %4, align 1, !dbg !3832
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !3832
  store i32 0, i32* %5, align 4, !dbg !3832
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !3832
  store i32 0, i32* %6, align 4, !dbg !3832
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3833
  call void @llvm.dbg.value(metadata i8* %7, metadata !3830, metadata !DIExpression()), !dbg !3831
  %8 = load i8, i8* %7, align 1, !dbg !3834
  %9 = icmp eq i8 %8, 37, !dbg !3836
  br i1 %9, label %10, label %12, !dbg !3837

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3838
  call void @llvm.dbg.value(metadata i8* %11, metadata !3830, metadata !DIExpression()), !dbg !3831
  store i8 37, i8* %4, align 1, !dbg !3840
  br label %18, !dbg !3841

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !3842
  call void @llvm.dbg.value(metadata i8* %13, metadata !3830, metadata !DIExpression()), !dbg !3831
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !3843
  call void @llvm.dbg.value(metadata i8* %14, metadata !3830, metadata !DIExpression()), !dbg !3831
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !3844
  call void @llvm.dbg.value(metadata i8* %15, metadata !3830, metadata !DIExpression()), !dbg !3831
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !3845
  call void @llvm.dbg.value(metadata i8* %16, metadata !3830, metadata !DIExpression()), !dbg !3831
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !3846
  call void @llvm.dbg.value(metadata i8* %17, metadata !3830, metadata !DIExpression()), !dbg !3831
  br label %18, !dbg !3847

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !3831
  ret i8* %19, !dbg !3848
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !3849 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3853, metadata !DIExpression()), !dbg !3860
  call void @llvm.dbg.value(metadata i8* %1, metadata !3854, metadata !DIExpression()), !dbg !3860
  call void @llvm.dbg.value(metadata i8* %2, metadata !3855, metadata !DIExpression()), !dbg !3860
  call void @llvm.dbg.value(metadata i8* %3, metadata !3856, metadata !DIExpression()), !dbg !3860
  call void @llvm.dbg.value(metadata i32 0, metadata !3857, metadata !DIExpression()), !dbg !3860
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !3861

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !3862
  call void @llvm.dbg.value(metadata i32 %9, metadata !3857, metadata !DIExpression()), !dbg !3860
  call void @llvm.dbg.value(metadata i8* %8, metadata !3855, metadata !DIExpression()), !dbg !3860
  %10 = icmp ult i8* %8, %3, !dbg !3863
  br i1 %10, label %11, label %13, !dbg !3864

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !3865
  br label %17, !dbg !3864

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !3866

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !3867
  %16 = icmp eq i8 %15, 0, !dbg !3866
  br i1 %16, label %24, label %17, !dbg !3861

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !3865
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3868
  call void @llvm.dbg.value(metadata i8* %19, metadata !3855, metadata !DIExpression()), !dbg !3860
  %20 = zext i8 %18 to i32, !dbg !3869
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !3870
  call void @llvm.dbg.value(metadata i32 %21, metadata !3858, metadata !DIExpression()), !dbg !3871
  %22 = icmp slt i32 %21, 0, !dbg !3872
  %23 = add i32 %9, 1, !dbg !3874
  call void @llvm.dbg.value(metadata i32 undef, metadata !3857, metadata !DIExpression()), !dbg !3860
  br i1 %22, label %24, label %7, !llvm.loop !3875

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !3860
  ret i32 %25, !dbg !3877
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #11 !dbg !3878 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3882, metadata !DIExpression()), !dbg !3892
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !3883, metadata !DIExpression()), !dbg !3892
  call void @llvm.dbg.value(metadata i8* %2, metadata !3884, metadata !DIExpression()), !dbg !3892
  call void @llvm.dbg.value(metadata i8* %3, metadata !3885, metadata !DIExpression()), !dbg !3892
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !3893
  %6 = load i8, i8* %5, align 1, !dbg !3893
  %7 = zext i8 %6 to i32, !dbg !3894
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !3895
  %9 = icmp eq i32 %8, 0, !dbg !3895
  call void @llvm.dbg.value(metadata i1 %9, metadata !3886, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3892
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !3896
  call void @llvm.dbg.value(metadata i32 %10, metadata !3887, metadata !DIExpression()), !dbg !3892
  %11 = ptrtoint i8* %3 to i32, !dbg !3897
  %12 = ptrtoint i8* %2 to i32, !dbg !3897
  %13 = sub i32 %11, %12, !dbg !3897
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !3898
  call void @llvm.dbg.value(metadata i8* %14, metadata !3889, metadata !DIExpression()), !dbg !3892
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !3899

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !3892
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !3882, metadata !DIExpression()), !dbg !3892
  call void @llvm.dbg.value(metadata i8* %18, metadata !3889, metadata !DIExpression()), !dbg !3892
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !3900
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !3901
  call void @llvm.dbg.value(metadata i32 %25, metadata !3890, metadata !DIExpression()), !dbg !3902
  %26 = icmp ult i32 %25, 10, !dbg !3903
  %27 = select i1 %26, i32 48, i32 %16, !dbg !3904
  %28 = add i32 %27, %25, !dbg !3902
  %29 = trunc i32 %28 to i8, !dbg !3904
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !3905
  call void @llvm.dbg.value(metadata i8* %30, metadata !3889, metadata !DIExpression()), !dbg !3892
  store i8 %29, i8* %30, align 1, !dbg !3906
  call void @llvm.dbg.value(metadata i64 %22, metadata !3882, metadata !DIExpression()), !dbg !3892
  %31 = icmp uge i64 %19, %15, !dbg !3907
  %32 = icmp ugt i8* %30, %2, !dbg !3908
  %33 = and i1 %31, %32, !dbg !3908
  br i1 %33, label %17, label %34, !dbg !3909, !llvm.loop !3910

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !3912
  %36 = load i24, i24* %35, align 4, !dbg !3912
  %37 = and i24 %36, 32, !dbg !3912
  %38 = icmp eq i24 %37, 0, !dbg !3912
  br i1 %38, label %44, label %39, !dbg !3914

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !3915

40:                                               ; preds = %39
  br label %41, !dbg !3917

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !3921
  store i24 %43, i24* %35, align 4, !dbg !3921
  br label %44, !dbg !3922

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !3922
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #8 !dbg !3923 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3929, metadata !DIExpression()), !dbg !3932
  call void @llvm.dbg.value(metadata i8* %1, metadata !3930, metadata !DIExpression()), !dbg !3932
  call void @llvm.dbg.value(metadata i32 %2, metadata !3931, metadata !DIExpression()), !dbg !3932
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !3933
  %5 = load i24, i24* %4, align 4, !dbg !3933
  %6 = lshr i24 %5, 11, !dbg !3933
  %7 = and i24 %6, 15, !dbg !3933
  %8 = zext i24 %7 to i32, !dbg !3933
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !3934

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !3935
  store i32 %2, i32* %10, align 4, !dbg !3937
  br label %28, !dbg !3938

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !3939
  store i8 %12, i8* %1, align 1, !dbg !3940
  br label %28, !dbg !3941

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !3942
  %15 = bitcast i8* %1 to i16*, !dbg !3943
  store i16 %14, i16* %15, align 2, !dbg !3944
  br label %28, !dbg !3945

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !3946
  store i32 %2, i32* %17, align 4, !dbg !3947
  br label %28, !dbg !3948

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !3949
  %20 = bitcast i8* %1 to i64*, !dbg !3950
  store i64 %19, i64* %20, align 8, !dbg !3951
  br label %28, !dbg !3952

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !3953
  %23 = bitcast i8* %1 to i64*, !dbg !3954
  store i64 %22, i64* %23, align 8, !dbg !3955
  br label %28, !dbg !3956

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !3957
  store i32 %2, i32* %25, align 4, !dbg !3958
  br label %28, !dbg !3959

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !3960
  store i32 %2, i32* %27, align 4, !dbg !3961
  br label %28, !dbg !3962

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !3963
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #12 !dbg !3964 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3967, metadata !DIExpression()), !dbg !3968
  %2 = add i32 %0, -65, !dbg !3969
  %3 = icmp ult i32 %2, 26, !dbg !3970
  %4 = zext i1 %3 to i32, !dbg !3970
  ret i32 %4, !dbg !3971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #12 !dbg !3972 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3976, metadata !DIExpression()), !dbg !3977
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !3978

2:                                                ; preds = %1
  br label %4, !dbg !3979

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !3981

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !3982
  ret i32 %5, !dbg !3983
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !3984 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3986, metadata !DIExpression()), !dbg !3989
  call void @llvm.dbg.value(metadata i8* %1, metadata !3987, metadata !DIExpression()), !dbg !3989
  call void @llvm.dbg.value(metadata i8 1, metadata !3988, metadata !DIExpression()), !dbg !3989
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !3990

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !3988, metadata !DIExpression()), !dbg !3989
  call void @llvm.dbg.value(metadata i8* %5, metadata !3987, metadata !DIExpression()), !dbg !3989
  %6 = load i8, i8* %5, align 1, !dbg !3991
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !3993

7:                                                ; preds = %4
  br label %11, !dbg !3994

8:                                                ; preds = %4
  br label %11, !dbg !3996

9:                                                ; preds = %4
  br label %11, !dbg !3997

10:                                               ; preds = %4
  br label %11, !dbg !3998

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !3999
  %14 = or i24 %13, %12, !dbg !3999
  store i24 %14, i24* %3, align 4, !dbg !3999
  call void @llvm.dbg.value(metadata i8 poison, metadata !3988, metadata !DIExpression()), !dbg !3989
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !3987, metadata !DIExpression()), !dbg !3989
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !3988, metadata !DIExpression()), !dbg !3989
  call void @llvm.dbg.value(metadata i8* %15, metadata !3987, metadata !DIExpression()), !dbg !3989
  %17 = load i24, i24* %3, align 4, !dbg !4000
  %18 = and i24 %17, 68, !dbg !4002
  %19 = icmp eq i24 %18, 68, !dbg !4002
  br i1 %19, label %20, label %22, !dbg !4002

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !4003
  store i24 %21, i24* %3, align 4, !dbg !4003
  br label %22, !dbg !4005

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !4006
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4007 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4009, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.value(metadata i8* %1, metadata !4010, metadata !DIExpression()), !dbg !4013
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4014
  %5 = load i24, i24* %4, align 4, !dbg !4015
  %6 = or i24 %5, 128, !dbg !4015
  store i24 %6, i24* %4, align 4, !dbg !4015
  call void @llvm.dbg.value(metadata i8* %1, metadata !4010, metadata !DIExpression()), !dbg !4013
  %7 = load i8, i8* %1, align 1, !dbg !4016
  %8 = icmp eq i8 %7, 42, !dbg !4018
  br i1 %8, label %9, label %12, !dbg !4019

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !4020
  store i24 %10, i24* %4, align 4, !dbg !4020
  call void @llvm.dbg.value(metadata i8* %1, metadata !4010, metadata !DIExpression()), !dbg !4013
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4022
  call void @llvm.dbg.value(metadata i8* %11, metadata !4010, metadata !DIExpression()), !dbg !4013
  store i8* %11, i8** %3, align 4, !dbg !4022
  br label %29, !dbg !4023

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4011, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.value(metadata i8** %3, metadata !4010, metadata !DIExpression(DW_OP_deref)), !dbg !4013
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !4024
  call void @llvm.dbg.value(metadata i32 %13, metadata !4012, metadata !DIExpression()), !dbg !4013
  %14 = load i8*, i8** %3, align 4, !dbg !4025
  call void @llvm.dbg.value(metadata i8* %14, metadata !4010, metadata !DIExpression()), !dbg !4013
  %15 = icmp eq i8* %14, %1, !dbg !4027
  br i1 %15, label %29, label %16, !dbg !4028

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !4029
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4031
  store i32 %13, i32* %18, align 4, !dbg !4032
  %19 = lshr i32 %13, 31, !dbg !4033
  %20 = lshr i24 %17, 1, !dbg !4034
  %21 = and i24 %20, 1, !dbg !4034
  %22 = zext i24 %21 to i32, !dbg !4034
  %23 = or i32 %19, %22, !dbg !4034
  %24 = trunc i32 %23 to i24, !dbg !4034
  %25 = shl nuw nsw i24 %24, 1, !dbg !4034
  %26 = and i24 %17, -131, !dbg !4034
  %27 = or i24 %26, 128, !dbg !4034
  %28 = or i24 %25, %27, !dbg !4034
  store i24 %28, i24* %4, align 4, !dbg !4034
  br label %29, !dbg !4035

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !4013
  ret i8* %30, !dbg !4036
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !4037 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4039, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %1, metadata !4040, metadata !DIExpression()), !dbg !4042
  %4 = load i8, i8* %1, align 1, !dbg !4043
  %5 = icmp eq i8 %4, 46, !dbg !4044
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !4045
  %7 = load i24, i24* %6, align 4, !dbg !4046
  %8 = select i1 %5, i24 512, i24 0, !dbg !4046
  %9 = and i24 %7, -513, !dbg !4046
  %10 = or i24 %9, %8, !dbg !4046
  store i24 %10, i24* %6, align 4, !dbg !4046
  br i1 %5, label %11, label %32, !dbg !4047

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4040, metadata !DIExpression()), !dbg !4042
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4048
  call void @llvm.dbg.value(metadata i8* %12, metadata !4040, metadata !DIExpression()), !dbg !4042
  store i8* %12, i8** %3, align 4, !dbg !4048
  %13 = load i8, i8* %12, align 1, !dbg !4049
  %14 = icmp eq i8 %13, 42, !dbg !4051
  br i1 %14, label %15, label %18, !dbg !4052

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !4053
  store i24 %16, i24* %6, align 4, !dbg !4053
  call void @llvm.dbg.value(metadata i8* %12, metadata !4040, metadata !DIExpression()), !dbg !4042
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4055
  call void @llvm.dbg.value(metadata i8* %17, metadata !4040, metadata !DIExpression()), !dbg !4042
  store i8* %17, i8** %3, align 4, !dbg !4055
  br label %32, !dbg !4056

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !4040, metadata !DIExpression(DW_OP_deref)), !dbg !4042
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !4057
  call void @llvm.dbg.value(metadata i32 %19, metadata !4041, metadata !DIExpression()), !dbg !4042
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4058
  store i32 %19, i32* %20, align 4, !dbg !4059
  %21 = lshr i32 %19, 31, !dbg !4060
  %22 = load i24, i24* %6, align 4, !dbg !4061
  %23 = lshr i24 %22, 1, !dbg !4061
  %24 = and i24 %23, 1, !dbg !4061
  %25 = zext i24 %24 to i32, !dbg !4061
  %26 = or i32 %21, %25, !dbg !4061
  %27 = trunc i32 %26 to i24, !dbg !4061
  %28 = shl nuw nsw i24 %27, 1, !dbg !4061
  %29 = and i24 %22, -3, !dbg !4061
  %30 = or i24 %28, %29, !dbg !4061
  store i24 %30, i24* %6, align 4, !dbg !4061
  %31 = load i8*, i8** %3, align 4, !dbg !4062
  call void @llvm.dbg.value(metadata i8* %31, metadata !4040, metadata !DIExpression()), !dbg !4042
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !4042
  ret i8* %33, !dbg !4063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !4064 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4066, metadata !DIExpression()), !dbg !4068
  call void @llvm.dbg.value(metadata i8* %1, metadata !4067, metadata !DIExpression()), !dbg !4068
  %3 = load i8, i8* %1, align 1, !dbg !4069
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !4070

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4071
  call void @llvm.dbg.value(metadata i8* %5, metadata !4067, metadata !DIExpression()), !dbg !4068
  %6 = load i8, i8* %5, align 1, !dbg !4074
  %7 = icmp eq i8 %6, 104, !dbg !4075
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4076
  %9 = load i24, i24* %8, align 4, !dbg !4076
  %10 = and i24 %9, -30721, !dbg !4076
  br i1 %7, label %11, label %14, !dbg !4077

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !4078
  store i24 %12, i24* %8, align 4, !dbg !4078
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4080
  call void @llvm.dbg.value(metadata i8* %13, metadata !4067, metadata !DIExpression()), !dbg !4068
  br label %56, !dbg !4081

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !4082
  store i24 %15, i24* %8, align 4, !dbg !4082
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4084
  call void @llvm.dbg.value(metadata i8* %17, metadata !4067, metadata !DIExpression()), !dbg !4068
  %18 = load i8, i8* %17, align 1, !dbg !4086
  %19 = icmp eq i8 %18, 108, !dbg !4087
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !4088
  %21 = load i24, i24* %20, align 4, !dbg !4088
  %22 = and i24 %21, -30721, !dbg !4088
  br i1 %19, label %23, label %26, !dbg !4089

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !4090
  store i24 %24, i24* %20, align 4, !dbg !4090
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4092
  call void @llvm.dbg.value(metadata i8* %25, metadata !4067, metadata !DIExpression()), !dbg !4068
  br label %56, !dbg !4093

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !4094
  store i24 %27, i24* %20, align 4, !dbg !4094
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !4096
  %30 = load i24, i24* %29, align 4, !dbg !4097
  %31 = and i24 %30, -30721, !dbg !4097
  %32 = or i24 %31, 10240, !dbg !4097
  store i24 %32, i24* %29, align 4, !dbg !4097
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4098
  call void @llvm.dbg.value(metadata i8* %33, metadata !4067, metadata !DIExpression()), !dbg !4068
  br label %56, !dbg !4099

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !4100
  %36 = load i24, i24* %35, align 4, !dbg !4101
  %37 = and i24 %36, -30721, !dbg !4101
  %38 = or i24 %37, 12288, !dbg !4101
  store i24 %38, i24* %35, align 4, !dbg !4101
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4102
  call void @llvm.dbg.value(metadata i8* %39, metadata !4067, metadata !DIExpression()), !dbg !4068
  br label %56, !dbg !4103

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !4104
  %42 = load i24, i24* %41, align 4, !dbg !4105
  %43 = and i24 %42, -30721, !dbg !4105
  %44 = or i24 %43, 14336, !dbg !4105
  store i24 %44, i24* %41, align 4, !dbg !4105
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4106
  call void @llvm.dbg.value(metadata i8* %45, metadata !4067, metadata !DIExpression()), !dbg !4068
  br label %56, !dbg !4107

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !4108
  %48 = load i24, i24* %47, align 4, !dbg !4109
  %49 = and i24 %48, -30723, !dbg !4109
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4110
  call void @llvm.dbg.value(metadata i8* %50, metadata !4067, metadata !DIExpression()), !dbg !4068
  %51 = or i24 %49, 16386, !dbg !4111
  store i24 %51, i24* %47, align 4, !dbg !4111
  br label %56, !dbg !4112

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !4113
  %54 = load i24, i24* %53, align 4, !dbg !4114
  %55 = and i24 %54, -30721, !dbg !4114
  store i24 %55, i24* %53, align 4, !dbg !4114
  br label %56, !dbg !4115

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !4067, metadata !DIExpression()), !dbg !4068
  ret i8* %57, !dbg !4116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #8 !dbg !4117 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4119, metadata !DIExpression()), !dbg !4124
  call void @llvm.dbg.value(metadata i8* %1, metadata !4120, metadata !DIExpression()), !dbg !4124
  call void @llvm.dbg.value(metadata i8 0, metadata !4121, metadata !DIExpression()), !dbg !4124
  call void @llvm.dbg.value(metadata i8* %1, metadata !4120, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4124
  %3 = load i8, i8* %1, align 1, !dbg !4125
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4126
  store i8 %3, i8* %4, align 1, !dbg !4127
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !4128

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !4129

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4130
  %9 = load i24, i24* %8, align 4, !dbg !4130
  %10 = and i24 %9, -458753, !dbg !4130
  %11 = or i24 %10, %7, !dbg !4130
  call void @llvm.dbg.label(metadata !4122), !dbg !4131
  %12 = and i24 %9, 30720, !dbg !4132
  %13 = icmp eq i24 %12, 16384, !dbg !4132
  %14 = zext i1 %13 to i24, !dbg !4134
  %15 = or i24 %11, %14, !dbg !4134
  %16 = icmp eq i8 %3, 99, !dbg !4135
  br i1 %16, label %17, label %43, !dbg !4137

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !4138
  %19 = icmp ne i24 %18, 0, !dbg !4138
  call void @llvm.dbg.value(metadata i1 %19, metadata !4121, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4124
  br label %43, !dbg !4140

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !4141
  %22 = load i24, i24* %21, align 4, !dbg !4142
  %23 = and i24 %22, -458753, !dbg !4142
  %24 = or i24 %23, 262144, !dbg !4142
  call void @llvm.dbg.value(metadata i8 1, metadata !4121, metadata !DIExpression()), !dbg !4124
  br label %43, !dbg !4143

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !4146
  %27 = load i24, i24* %26, align 4, !dbg !4147
  %28 = and i24 %27, -458753, !dbg !4147
  %29 = or i24 %28, 196608, !dbg !4147
  %30 = and i24 %27, 30720, !dbg !4148
  %31 = icmp eq i24 %30, 16384, !dbg !4148
  br label %43, !dbg !4150

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !4151
  %34 = load i24, i24* %33, align 4, !dbg !4152
  %35 = and i24 %34, -458753, !dbg !4152
  %36 = or i24 %35, 196608, !dbg !4152
  %37 = and i24 %34, 30720, !dbg !4153
  %38 = icmp ne i24 %37, 0, !dbg !4153
  br label %43, !dbg !4155

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !4156
  %41 = load i24, i24* %40, align 4, !dbg !4157
  %42 = or i24 %41, 1, !dbg !4157
  br label %43, !dbg !4158

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !4159
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !4160
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4161
  call void @llvm.dbg.value(metadata i8* %48, metadata !4120, metadata !DIExpression()), !dbg !4124
  call void @llvm.dbg.value(metadata i8 poison, metadata !4121, metadata !DIExpression()), !dbg !4124
  %49 = lshr i24 %44, 1, !dbg !4159
  %50 = and i24 %49, 1, !dbg !4159
  %51 = zext i24 %50 to i32, !dbg !4159
  %52 = or i32 %51, %47, !dbg !4159
  %53 = trunc i32 %52 to i24, !dbg !4159
  %54 = shl nuw nsw i24 %53, 1, !dbg !4159
  %55 = and i24 %44, -3, !dbg !4159
  %56 = or i24 %54, %55, !dbg !4159
  store i24 %56, i24* %46, align 4, !dbg !4159
  ret i8* %48, !dbg !4162
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #11 !dbg !4163 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !4168, metadata !DIExpression()), !dbg !4171
  %2 = load i8*, i8** %0, align 4, !dbg !4172
  call void @llvm.dbg.value(metadata i8* %2, metadata !4169, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i32 0, metadata !4170, metadata !DIExpression()), !dbg !4171
  %3 = load i8, i8* %2, align 1, !dbg !4173
  %4 = zext i8 %3 to i32, !dbg !4174
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !4175
  %6 = icmp eq i32 %5, 0, !dbg !4176
  br i1 %6, label %19, label %7, !dbg !4176

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4170, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i8* %10, metadata !4169, metadata !DIExpression()), !dbg !4171
  %11 = mul i32 %9, 10, !dbg !4177
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !4179
  call void @llvm.dbg.value(metadata i8* %12, metadata !4169, metadata !DIExpression()), !dbg !4171
  %13 = add i32 %11, -48, !dbg !4180
  %14 = add i32 %13, %8, !dbg !4181
  call void @llvm.dbg.value(metadata i32 %14, metadata !4170, metadata !DIExpression()), !dbg !4171
  %15 = load i8, i8* %12, align 1, !dbg !4173
  %16 = zext i8 %15 to i32, !dbg !4174
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !4175
  %18 = icmp eq i32 %17, 0, !dbg !4176
  br i1 %18, label %19, label %7, !dbg !4176, !llvm.loop !4182

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !4171
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !4171
  store i8* %20, i8** %0, align 4, !dbg !4184
  ret i32 %21, !dbg !4185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #12 !dbg !4186 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4188, metadata !DIExpression()), !dbg !4189
  %2 = add i32 %0, -48, !dbg !4190
  %3 = icmp ult i32 %2, 10, !dbg !4191
  %4 = zext i1 %3 to i32, !dbg !4191
  ret i32 %4, !dbg !4192
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !4193 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !4195, !srcloc !4196
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !4197, !srcloc !4198
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !4199, !srcloc !4200
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !4201, !srcloc !4202
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !4203, !srcloc !4204
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,86\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !4205, !srcloc !4206
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !4207, !srcloc !4208
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !4209, !srcloc !4210
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !4211, !srcloc !4212
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !4213, !srcloc !4214
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !4215, !srcloc !4216
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !4217, !srcloc !4218
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !4219, !srcloc !4220
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !4221, !srcloc !4222
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !4223, !srcloc !4224
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !4225, !srcloc !4226
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !4227, !srcloc !4228
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !4229, !srcloc !4230
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !4231, !srcloc !4232
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !4233, !srcloc !4234
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !4235, !srcloc !4236
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !4237, !srcloc !4238
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !4239, !srcloc !4240
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !4241, !srcloc !4242
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !4243, !srcloc !4244
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !4245, !srcloc !4246
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !4247, !srcloc !4248
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !4249, !srcloc !4250
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !4251, !srcloc !4252
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !4253, !srcloc !4254
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !4255, !srcloc !4256
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !4257, !srcloc !4258
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4259, !srcloc !4260
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !4261, !srcloc !4262
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4263, !srcloc !4264
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !4265, !srcloc !4266
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !4267, !srcloc !4268
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4269, !srcloc !4270
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !4271, !srcloc !4272
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !4273, !srcloc !4274
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !4275, !srcloc !4276
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !4277, !srcloc !4278
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !4279, !srcloc !4280
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !4281, !srcloc !4282
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4283, !srcloc !4284
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !4285, !srcloc !4286
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #23, !dbg !4287, !srcloc !4288
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !4289, !srcloc !4290
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !4291, !srcloc !4292
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !4293, !srcloc !4294
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !4295, !srcloc !4296
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !4297, !srcloc !4298
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !4299, !srcloc !4300
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !4301, !srcloc !4302
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !4303, !srcloc !4304
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !4305, !srcloc !4306
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !4307, !srcloc !4308
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !4309, !srcloc !4310
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !4311, !srcloc !4312
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !4313, !srcloc !4314
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !4315, !srcloc !4316
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !4317, !srcloc !4318
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !4319, !srcloc !4320
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !4321, !srcloc !4322
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !4323, !srcloc !4324
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !4325, !srcloc !4326
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !4327, !srcloc !4328
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !4329, !srcloc !4330
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !4331, !srcloc !4332
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !4333, !srcloc !4334
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !4335, !srcloc !4336
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !4337, !srcloc !4338
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !4339, !srcloc !4340
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !4341, !srcloc !4342
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !4343, !srcloc !4344
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !4345, !srcloc !4346
  tail call void asm sideeffect ".globl\09CONFIG_HELLO_WORLD_DRIVER\0A\09.equ\09CONFIG_HELLO_WORLD_DRIVER,1\0A\09.type\09CONFIG_HELLO_WORLD_DRIVER,%object", ""() #23, !dbg !4347, !srcloc !4348
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HELLO_WORLD_MODULE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HELLO_WORLD_MODULE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HELLO_WORLD_MODULE_MODULE,%object", ""() #23, !dbg !4349, !srcloc !4350
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !4351, !srcloc !4352
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !4353, !srcloc !4354
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !4355, !srcloc !4356
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !4357, !srcloc !4358
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !4359, !srcloc !4360
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_NEONKEY\0A\09.equ\09CONFIG_BOARD_96B_NEONKEY,1\0A\09.type\09CONFIG_BOARD_96B_NEONKEY,%object", ""() #23, !dbg !4361, !srcloc !4362
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !4363, !srcloc !4364
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !4365, !srcloc !4366
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !4367, !srcloc !4368
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !4369, !srcloc !4370
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !4371, !srcloc !4372
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F411XE\0A\09.equ\09CONFIG_SOC_STM32F411XE,1\0A\09.type\09CONFIG_SOC_STM32F411XE,%object", ""() #23, !dbg !4373, !srcloc !4374
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !4375, !srcloc !4376
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !4377, !srcloc !4378
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !4379, !srcloc !4380
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !4381, !srcloc !4382
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !4383, !srcloc !4384
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !4385, !srcloc !4386
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !4387, !srcloc !4388
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !4389, !srcloc !4390
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !4391, !srcloc !4392
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !4393, !srcloc !4394
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !4395, !srcloc !4396
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !4397, !srcloc !4398
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !4399, !srcloc !4400
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !4401, !srcloc !4402
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !4403, !srcloc !4404
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !4405, !srcloc !4406
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !4407, !srcloc !4408
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !4409, !srcloc !4410
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !4411, !srcloc !4412
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !4413, !srcloc !4414
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !4415, !srcloc !4416
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !4417, !srcloc !4418
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !4419, !srcloc !4420
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !4421, !srcloc !4422
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !4423, !srcloc !4424
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !4425, !srcloc !4426
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !4427, !srcloc !4428
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !4429, !srcloc !4430
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !4431, !srcloc !4432
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !4433, !srcloc !4434
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !4435, !srcloc !4436
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !4437, !srcloc !4438
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !4439, !srcloc !4440
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !4441, !srcloc !4442
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !4443, !srcloc !4444
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !4445, !srcloc !4446
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !4447, !srcloc !4448
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !4449, !srcloc !4450
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !4451, !srcloc !4452
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !4453, !srcloc !4454
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !4455, !srcloc !4456
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !4457, !srcloc !4458
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !4459, !srcloc !4460
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !4461, !srcloc !4462
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !4463, !srcloc !4464
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !4465, !srcloc !4466
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !4467, !srcloc !4468
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !4469, !srcloc !4470
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !4471, !srcloc !4472
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !4473, !srcloc !4474
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !4475, !srcloc !4476
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !4477, !srcloc !4478
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4479, !srcloc !4480
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !4481, !srcloc !4482
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !4483, !srcloc !4484
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !4485, !srcloc !4486
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !4487, !srcloc !4488
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !4489, !srcloc !4490
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !4491, !srcloc !4492
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !4493, !srcloc !4494
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !4495, !srcloc !4496
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !4497, !srcloc !4498
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !4499, !srcloc !4500
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !4501, !srcloc !4502
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !4503, !srcloc !4504
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !4505, !srcloc !4506
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !4507, !srcloc !4508
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !4509, !srcloc !4510
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !4511, !srcloc !4512
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !4513, !srcloc !4514
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !4515, !srcloc !4516
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !4517, !srcloc !4518
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !4519, !srcloc !4520
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !4521, !srcloc !4522
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !4523, !srcloc !4524
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !4525, !srcloc !4526
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !4527, !srcloc !4528
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !4529, !srcloc !4530
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !4531, !srcloc !4532
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !4533, !srcloc !4534
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !4535, !srcloc !4536
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !4537, !srcloc !4538
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !4539, !srcloc !4540
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !4541, !srcloc !4542
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !4543, !srcloc !4544
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !4545, !srcloc !4546
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !4547, !srcloc !4548
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !4549, !srcloc !4550
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !4551, !srcloc !4552
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !4553, !srcloc !4554
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !4555, !srcloc !4556
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !4557, !srcloc !4558
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !4559, !srcloc !4560
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !4561, !srcloc !4562
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !4563, !srcloc !4564
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !4565, !srcloc !4566
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !4567, !srcloc !4568
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !4569, !srcloc !4570
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4571, !srcloc !4572
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !4573, !srcloc !4574
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !4575, !srcloc !4576
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !4577, !srcloc !4578
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !4579, !srcloc !4580
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !4581, !srcloc !4582
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !4583, !srcloc !4584
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !4585, !srcloc !4586
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !4587, !srcloc !4588
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !4589, !srcloc !4590
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !4591, !srcloc !4592
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !4593, !srcloc !4594
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !4595, !srcloc !4596
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !4597, !srcloc !4598
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !4599, !srcloc !4600
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !4601, !srcloc !4602
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !4603, !srcloc !4604
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !4605, !srcloc !4606
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !4607, !srcloc !4608
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !4609, !srcloc !4610
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !4611, !srcloc !4612
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !4613, !srcloc !4614
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !4615, !srcloc !4616
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !4617, !srcloc !4618
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !4619, !srcloc !4620
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !4621, !srcloc !4622
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !4623, !srcloc !4624
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !4625, !srcloc !4626
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !4627, !srcloc !4628
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !4629, !srcloc !4630
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !4631, !srcloc !4632
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !4633, !srcloc !4634
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !4635, !srcloc !4636
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !4637, !srcloc !4638
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !4639, !srcloc !4640
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !4641, !srcloc !4642
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !4643, !srcloc !4644
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !4645, !srcloc !4646
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !4647, !srcloc !4648
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !4649, !srcloc !4650
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !4651, !srcloc !4652
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !4653, !srcloc !4654
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !4655, !srcloc !4656
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !4657, !srcloc !4658
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !4659, !srcloc !4660
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !4661, !srcloc !4662
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !4663, !srcloc !4664
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !4665, !srcloc !4666
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !4667, !srcloc !4668
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !4669, !srcloc !4670
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !4671, !srcloc !4672
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !4673, !srcloc !4674
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !4675, !srcloc !4676
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !4677, !srcloc !4678
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !4679, !srcloc !4680
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !4681, !srcloc !4682
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !4683, !srcloc !4684
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !4685, !srcloc !4686
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !4687, !srcloc !4688
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !4689, !srcloc !4690
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !4691, !srcloc !4692
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4693, !srcloc !4694
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !4695, !srcloc !4696
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4697, !srcloc !4698
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4699, !srcloc !4700
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !4701, !srcloc !4702
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !4703, !srcloc !4704
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !4705, !srcloc !4706
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !4707, !srcloc !4708
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !4709, !srcloc !4710
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !4711, !srcloc !4712
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !4713, !srcloc !4714
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !4715, !srcloc !4716
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !4717, !srcloc !4718
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !4719, !srcloc !4720
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !4721, !srcloc !4722
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !4723, !srcloc !4724
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !4725, !srcloc !4726
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !4727, !srcloc !4728
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !4729, !srcloc !4730
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !4731, !srcloc !4732
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !4733, !srcloc !4734
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !4735, !srcloc !4736
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !4737, !srcloc !4738
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_DEFINED_SYSCALL\0A\09.equ\09CONFIG_APPLICATION_DEFINED_SYSCALL,1\0A\09.type\09CONFIG_APPLICATION_DEFINED_SYSCALL,%object", ""() #23, !dbg !4739, !srcloc !4740
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !4741, !srcloc !4742
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !4743, !srcloc !4744
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !4745, !srcloc !4746
  ret void, !dbg !4747
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !4748 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4750, metadata !DIExpression()), !dbg !4752
  tail call fastcc void @LL_FLASH_EnableInstCache() #25, !dbg !4753
  tail call fastcc void @LL_FLASH_EnableDataCache() #25, !dbg !4754
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !4755, !srcloc !4764
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !4755
  call void @llvm.dbg.value(metadata i32 %3, metadata !4761, metadata !DIExpression()) #23, !dbg !4765
  call void @llvm.dbg.value(metadata i32 undef, metadata !4762, metadata !DIExpression()) #23, !dbg !4765
  call void @llvm.dbg.value(metadata i32 %3, metadata !4751, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata i32 %3, metadata !4766, metadata !DIExpression()) #23, !dbg !4771
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !4773, !srcloc !4774
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !4775
  ret i32 0, !dbg !4776
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #13 !dbg !4777 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4779
  %2 = or i32 %1, 512, !dbg !4779
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4779
  ret void, !dbg !4780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #13 !dbg !4781 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4782
  %2 = or i32 %1, 1024, !dbg !4782
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !4782
  ret void, !dbg !4783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #12 !dbg !4784 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4786, metadata !DIExpression()), !dbg !4787
  ret i32 0, !dbg !4788
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !4789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4838, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !4839, metadata !DIExpression()), !dbg !4840
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !4841
  ret void, !dbg !4842
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !4843 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !4860, metadata !DIExpression()), !dbg !4863
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !4861, metadata !DIExpression()), !dbg !4863
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !4864
  %4 = load i32, i32* %3, align 4, !dbg !4864
  call void @llvm.dbg.value(metadata i32 %4, metadata !4862, metadata !DIExpression()), !dbg !4863
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !4865
  ret void, !dbg !4866
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !4867 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4871, metadata !DIExpression()), !dbg !4874
  call void @llvm.dbg.value(metadata i8* %0, metadata !4872, metadata !DIExpression()), !dbg !4874
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !4875
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !4875
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !4873, metadata !DIExpression()), !dbg !4876
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !4876
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !4877
  %5 = bitcast i8* %4 to i32*, !dbg !4877
  %6 = load i32, i32* %5, align 4, !dbg !4877
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !4878
  store i32 %6, i32* %7, align 4, !dbg !4879
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !4880
  unreachable, !dbg !4881
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !4882 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4885, metadata !DIExpression()), !dbg !4886
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !4887
  ret void, !dbg !4888
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !4889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4893, metadata !DIExpression()), !dbg !4894
  %2 = icmp sgt i32 %0, -1, !dbg !4895
  br i1 %2, label %3, label %8, !dbg !4897

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4898, !srcloc !4900
  %4 = and i32 %0, 31, !dbg !4901
  %5 = shl nuw i32 1, %4, !dbg !4902
  %6 = lshr i32 %0, 5, !dbg !4903
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !4904
  store volatile i32 %5, i32* %7, align 4, !dbg !4905
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4906, !srcloc !4907
  br label %8, !dbg !4908

8:                                                ; preds = %3, %1
  ret void, !dbg !4909
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !4910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4912, metadata !DIExpression()), !dbg !4913
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !4914
  ret void, !dbg !4915
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !4916 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4918, metadata !DIExpression()), !dbg !4919
  %2 = icmp sgt i32 %0, -1, !dbg !4920
  br i1 %2, label %3, label %8, !dbg !4922

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4923
  %5 = shl nuw i32 1, %4, !dbg !4925
  %6 = lshr i32 %0, 5, !dbg !4926
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !4927
  store volatile i32 %5, i32* %7, align 4, !dbg !4928
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !4929, !srcloc !4933
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !4934, !srcloc !4937
  br label %8, !dbg !4938

8:                                                ; preds = %3, %1
  ret void, !dbg !4939
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #14 !dbg !4940 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4944, metadata !DIExpression()), !dbg !4945
  %2 = lshr i32 %0, 5, !dbg !4946
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !4947
  %4 = load volatile i32, i32* %3, align 4, !dbg !4947
  %5 = and i32 %0, 31, !dbg !4948
  %6 = shl nuw i32 1, %5, !dbg !4948
  %7 = and i32 %4, %6, !dbg !4949
  ret i32 %7, !dbg !4950
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !4951 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4955, metadata !DIExpression()), !dbg !4958
  call void @llvm.dbg.value(metadata i32 %1, metadata !4956, metadata !DIExpression()), !dbg !4958
  call void @llvm.dbg.value(metadata i32 %2, metadata !4957, metadata !DIExpression()), !dbg !4958
  %4 = add i32 %1, 1, !dbg !4959
  call void @llvm.dbg.value(metadata i32 %4, metadata !4956, metadata !DIExpression()), !dbg !4958
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !4962
  ret void, !dbg !4963
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !4964 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4968, metadata !DIExpression()), !dbg !4970
  call void @llvm.dbg.value(metadata i32 %1, metadata !4969, metadata !DIExpression()), !dbg !4970
  %3 = trunc i32 %1 to i8, !dbg !4971
  %4 = shl i8 %3, 4, !dbg !4971
  %5 = and i32 %0, 15, !dbg !4973
  %6 = add nsw i32 %5, -4, !dbg !4973
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !4973
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !4973
  %9 = icmp slt i32 %0, 0, !dbg !4973
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !4973
  store volatile i8 %4, i8* %10, align 1, !dbg !4971
  ret void, !dbg !4974
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !4975 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4977, metadata !DIExpression()), !dbg !4978
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !4979
  ret void, !dbg !4980
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !4981 {
  tail call void @z_SysNmiOnReset() #24, !dbg !4983
  tail call void @z_arm_int_exit() #24, !dbg !4984
  ret void, !dbg !4985
}

; Function Attrs: optsize
declare !dbg !4986 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !4987 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !4989 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !4991
  tail call fastcc void @z_arm_floating_point_init() #25, !dbg !4992
  tail call void @z_bss_zero() #24, !dbg !4993
  tail call void @z_data_copy() #24, !dbg !4994
  tail call void @z_arm_interrupt_init() #24, !dbg !4995
  tail call void @z_cstart() #26, !dbg !4996
  unreachable, !dbg !4996
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !4997 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !4998
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !4999, !srcloc !5002
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5003, !srcloc !5006
  ret void, !dbg !5007
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !5008 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !5009
  %2 = and i32 %1, -15728641, !dbg !5009
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !5009
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !5010, !srcloc !5017
  call void @llvm.dbg.value(metadata i32 %3, metadata !5015, metadata !DIExpression()) #23, !dbg !5018
  %4 = and i32 %3, -5, !dbg !5019
  call void @llvm.dbg.value(metadata i32 %4, metadata !5020, metadata !DIExpression()) #23, !dbg !5025
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !5027, !srcloc !5028
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5029, !srcloc !5006
  ret void, !dbg !5031
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !5032 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5035, metadata !DIExpression()), !dbg !5036
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5037
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !5038
  store i32 %0, i32* %3, align 4, !dbg !5039
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !5040
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !5041
  store i32 %4, i32* %5, align 4, !dbg !5042
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5043
  %7 = or i32 %6, 268435456, !dbg !5043
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5043
  call void @llvm.dbg.value(metadata i32 0, metadata !5044, metadata !DIExpression()) #23, !dbg !5047
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5049, !srcloc !5050
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5051
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !5052
  %10 = load i32, i32* %9, align 4, !dbg !5052
  ret i32 %10, !dbg !5053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !5054 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5164, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !5165, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata i8* %2, metadata !5166, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !5167, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata i8* %4, metadata !5168, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata i8* %5, metadata !5169, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata i8* %6, metadata !5170, metadata !DIExpression()), !dbg !5172
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !5173
  call void @llvm.dbg.value(metadata i8* %8, metadata !5171, metadata !DIExpression()), !dbg !5172
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !5174
  %10 = bitcast i8* %9 to i32*, !dbg !5174
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !5175
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !5176
  %12 = bitcast i8* %8 to i32*, !dbg !5177
  store i32 %11, i32* %12, align 4, !dbg !5178
  %13 = ptrtoint i8* %4 to i32, !dbg !5179
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !5180
  %15 = bitcast i8* %14 to i32*, !dbg !5180
  store i32 %13, i32* %15, align 4, !dbg !5181
  %16 = ptrtoint i8* %5 to i32, !dbg !5182
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !5183
  %18 = bitcast i8* %17 to i32*, !dbg !5183
  store i32 %16, i32* %18, align 4, !dbg !5184
  %19 = ptrtoint i8* %6 to i32, !dbg !5185
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !5186
  %21 = bitcast i8* %20 to i32*, !dbg !5186
  store i32 %19, i32* %21, align 4, !dbg !5187
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !5188
  %23 = bitcast i8* %22 to i32*, !dbg !5188
  store i32 16777216, i32* %23, align 4, !dbg !5189
  %24 = ptrtoint i8* %8 to i32, !dbg !5190
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !5191
  store i32 %24, i32* %25, align 8, !dbg !5192
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !5193
  store i32 0, i32* %26, align 4, !dbg !5194
  ret void, !dbg !5195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !5196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5201, metadata !DIExpression()), !dbg !5207
  call void @llvm.dbg.value(metadata i32 %1, metadata !5202, metadata !DIExpression()), !dbg !5207
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5208
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !5203, metadata !DIExpression()), !dbg !5207
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !5209
  br i1 %4, label %19, label %5, !dbg !5211

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !5206, metadata !DIExpression()), !dbg !5207
  %6 = icmp eq i32 %0, -22, !dbg !5212
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !5212
  %8 = load i32, i32* %7, align 4, !dbg !5212
  br i1 %6, label %16, label %9, !dbg !5214

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !5212
  %11 = icmp ule i32 %10, %0, !dbg !5212
  %12 = icmp ugt i32 %8, %0, !dbg !5212
  %13 = and i1 %12, %11, !dbg !5212
  %14 = icmp ugt i32 %8, %1, !dbg !5212
  %15 = and i1 %14, %13, !dbg !5212
  br i1 %15, label %18, label %19, !dbg !5212

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !5212
  br i1 %17, label %18, label %19, !dbg !5214

18:                                               ; preds = %9, %16
  br label %19, !dbg !5215

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !5207
  ret i32 %20, !dbg !5217
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !5218 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5222, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i8* %1, metadata !5223, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !5224, metadata !DIExpression()), !dbg !5225
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5226
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #24, !dbg !5227
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !5228, !srcloc !5229
  unreachable, !dbg !5230
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !5231 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5249, metadata !DIExpression()), !dbg !5259
  call void @llvm.dbg.value(metadata i32 %1, metadata !5250, metadata !DIExpression()), !dbg !5259
  call void @llvm.dbg.value(metadata i32 %2, metadata !5251, metadata !DIExpression()), !dbg !5259
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !5252, metadata !DIExpression()), !dbg !5259
  call void @llvm.dbg.value(metadata i32 0, metadata !5253, metadata !DIExpression()), !dbg !5259
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5260
  %9 = and i32 %8, 511, !dbg !5261
  call void @llvm.dbg.value(metadata i32 %9, metadata !5254, metadata !DIExpression()), !dbg !5259
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5262
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5262
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !5263
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5263
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !5258, metadata !DIExpression()), !dbg !5264
  call void @llvm.dbg.value(metadata i32 0, metadata !5265, metadata !DIExpression()) #23, !dbg !5268
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5270, !srcloc !5271
  call void @llvm.dbg.value(metadata i8* %6, metadata !5256, metadata !DIExpression(DW_OP_deref)), !dbg !5259
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !5272
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !5257, metadata !DIExpression()), !dbg !5259
  call void @llvm.dbg.value(metadata i8* %5, metadata !5255, metadata !DIExpression(DW_OP_deref)), !dbg !5259
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #25, !dbg !5273
  call void @llvm.dbg.value(metadata i32 %12, metadata !5253, metadata !DIExpression()), !dbg !5259
  %13 = load i8, i8* %5, align 1, !dbg !5274, !range !5276
  call void @llvm.dbg.value(metadata i8 %13, metadata !5255, metadata !DIExpression()), !dbg !5259
  %14 = icmp eq i8 %13, 0, !dbg !5274
  br i1 %14, label %15, label %32, !dbg !5277

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !5278
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #24, !dbg !5279
  %18 = load i8, i8* %6, align 1, !dbg !5280, !range !5276
  call void @llvm.dbg.value(metadata i8 %18, metadata !5256, metadata !DIExpression()), !dbg !5259
  %19 = icmp eq i8 %18, 0, !dbg !5280
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !5282
  %21 = load i32, i32* %20, align 4, !dbg !5282
  br i1 %19, label %27, label %22, !dbg !5283

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !5284
  %24 = icmp eq i32 %23, 0, !dbg !5287
  br i1 %24, label %25, label %31, !dbg !5288

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !5289
  br label %29, !dbg !5291

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !5292
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !5282
  br label %31, !dbg !5294

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #24, !dbg !5294
  br label %32, !dbg !5295

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5295
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5295
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5295
  ret void, !dbg !5295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !5296 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5301, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.value(metadata i32 %1, metadata !5302, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.value(metadata i32 %2, metadata !5303, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.value(metadata i8* %3, metadata !5304, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.value(metadata i8 0, metadata !5305, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !5306, metadata !DIExpression()), !dbg !5307
  store i8 0, i8* %3, align 1, !dbg !5308
  %5 = icmp ult i32 %2, -16777216, !dbg !5309
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !5311
  br i1 %8, label %16, label %9, !dbg !5311

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !5312
  %11 = icmp eq i32 %10, 0, !dbg !5312
  br i1 %11, label %12, label %13, !dbg !5314

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !5306, metadata !DIExpression()), !dbg !5307
  store i8 1, i8* %3, align 1, !dbg !5317
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !5307
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !5306, metadata !DIExpression()), !dbg !5307
  br label %16, !dbg !5320

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !5307
  ret %struct.__esf* %17, !dbg !5321
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !5322 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5326, metadata !DIExpression()), !dbg !5330
  call void @llvm.dbg.value(metadata i32 %1, metadata !5327, metadata !DIExpression()), !dbg !5330
  call void @llvm.dbg.value(metadata i8* %2, metadata !5328, metadata !DIExpression()), !dbg !5330
  call void @llvm.dbg.value(metadata i32 0, metadata !5329, metadata !DIExpression()), !dbg !5330
  store i8 0, i8* %2, align 1, !dbg !5331
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !5332

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !5333
  call void @llvm.dbg.value(metadata i32 %5, metadata !5329, metadata !DIExpression()), !dbg !5330
  br label %11, !dbg !5335

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !5336
  call void @llvm.dbg.value(metadata i32 %7, metadata !5329, metadata !DIExpression()), !dbg !5330
  br label %11, !dbg !5337

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !5338
  call void @llvm.dbg.value(metadata i32 0, metadata !5329, metadata !DIExpression()), !dbg !5330
  br label %11, !dbg !5339

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !5340
  call void @llvm.dbg.value(metadata i32 0, metadata !5329, metadata !DIExpression()), !dbg !5330
  br label %11, !dbg !5341

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !5342
  br label %11, !dbg !5343

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !5344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !5345 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5349, metadata !DIExpression()), !dbg !5352
  call void @llvm.dbg.value(metadata i8* %1, metadata !5350, metadata !DIExpression()), !dbg !5352
  call void @llvm.dbg.value(metadata i32 0, metadata !5351, metadata !DIExpression()), !dbg !5352
  store i8 0, i8* %1, align 1, !dbg !5353
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5354
  %4 = and i32 %3, 2, !dbg !5356
  %5 = icmp eq i32 %4, 0, !dbg !5357
  br i1 %5, label %6, label %33, !dbg !5358

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5359
  %8 = icmp sgt i32 %7, -1, !dbg !5361
  br i1 %8, label %9, label %33, !dbg !5362

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5363
  %11 = and i32 %10, 1073741824, !dbg !5365
  %12 = icmp eq i32 %11, 0, !dbg !5366
  br i1 %12, label %33, label %13, !dbg !5367

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !5368
  br i1 %14, label %15, label %18, !dbg !5371

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5372
  %17 = load i32, i32* %16, align 4, !dbg !5372
  call void @llvm.dbg.value(metadata i32 %17, metadata !5351, metadata !DIExpression()), !dbg !5352
  br label %33, !dbg !5374

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5375
  %20 = and i32 %19, 255, !dbg !5377
  %21 = icmp eq i32 %20, 0, !dbg !5378
  br i1 %21, label %24, label %22, !dbg !5379

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !5380
  call void @llvm.dbg.value(metadata i32 %23, metadata !5351, metadata !DIExpression()), !dbg !5352
  br label %33, !dbg !5382

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5383
  %26 = and i32 %25, 65280, !dbg !5385
  %27 = icmp eq i32 %26, 0, !dbg !5386
  br i1 %27, label %29, label %28, !dbg !5387

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !5388
  call void @llvm.dbg.value(metadata i32 0, metadata !5351, metadata !DIExpression()), !dbg !5352
  br label %33, !dbg !5390

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5391
  %31 = icmp ult i32 %30, 65536, !dbg !5393
  br i1 %31, label %33, label %32, !dbg !5394

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #25, !dbg !5395
  call void @llvm.dbg.value(metadata i32 0, metadata !5351, metadata !DIExpression()), !dbg !5352
  br label %33, !dbg !5397

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !5352
  call void @llvm.dbg.value(metadata i32 %34, metadata !5351, metadata !DIExpression()), !dbg !5352
  ret i32 %34, !dbg !5398
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !5399 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5401, metadata !DIExpression()), !dbg !5414
  call void @llvm.dbg.value(metadata i32 %1, metadata !5402, metadata !DIExpression()), !dbg !5414
  call void @llvm.dbg.value(metadata i8* %2, metadata !5403, metadata !DIExpression()), !dbg !5414
  call void @llvm.dbg.value(metadata i32 0, metadata !5404, metadata !DIExpression()), !dbg !5414
  call void @llvm.dbg.value(metadata i32 -22, metadata !5405, metadata !DIExpression()), !dbg !5414
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5415
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5417
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5419
  %7 = and i32 %6, 2, !dbg !5420
  %8 = icmp eq i32 %7, 0, !dbg !5421
  br i1 %8, label %19, label %9, !dbg !5422

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !5423
  call void @llvm.dbg.value(metadata i32 %10, metadata !5406, metadata !DIExpression()), !dbg !5424
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5425
  %12 = and i32 %11, 128, !dbg !5427
  %13 = icmp eq i32 %12, 0, !dbg !5428
  br i1 %13, label %19, label %14, !dbg !5429

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !5405, metadata !DIExpression()), !dbg !5414
  %15 = icmp eq i32 %1, 0, !dbg !5430
  br i1 %15, label %19, label %16, !dbg !5433

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5434
  %18 = and i32 %17, -129, !dbg !5434
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5434
  br label %19, !dbg !5436

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !5414
  call void @llvm.dbg.value(metadata i32 %20, metadata !5405, metadata !DIExpression()), !dbg !5414
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5437
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5439
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5441
  %24 = and i32 %23, 16, !dbg !5442
  %25 = icmp eq i32 %24, 0, !dbg !5442
  br i1 %25, label %26, label %30, !dbg !5443

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5444
  %28 = and i32 %27, 2, !dbg !5445
  %29 = icmp eq i32 %28, 0, !dbg !5445
  br i1 %29, label %39, label %30, !dbg !5446

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5447
  %32 = and i32 %31, 2048, !dbg !5448
  %33 = icmp eq i32 %32, 0, !dbg !5448
  br i1 %33, label %39, label %34, !dbg !5449

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !5450
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #24, !dbg !5451
  call void @llvm.dbg.value(metadata i32 %36, metadata !5409, metadata !DIExpression()), !dbg !5452
  %37 = icmp eq i32 %36, 0, !dbg !5453
  br i1 %37, label %39, label %38, !dbg !5455

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !5456, metadata !DIExpression()) #23, !dbg !5459
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #23, !dbg !5462, !srcloc !5463
  call void @llvm.dbg.value(metadata i32 2, metadata !5404, metadata !DIExpression()), !dbg !5414
  br label %39, !dbg !5464

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !5414
  call void @llvm.dbg.value(metadata i32 %40, metadata !5404, metadata !DIExpression()), !dbg !5414
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5465
  %42 = and i32 %41, 32, !dbg !5467
  %43 = icmp eq i32 %42, 0, !dbg !5468
  br i1 %43, label %47, label %44, !dbg !5469

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5470
  %46 = and i32 %45, -8193, !dbg !5470
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5470
  br label %47, !dbg !5472

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5473
  %49 = or i32 %48, 255, !dbg !5473
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5473
  store i8 0, i8* %2, align 1, !dbg !5474
  ret i32 %40, !dbg !5475
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !5476 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5480, metadata !DIExpression()), !dbg !5487
  call void @llvm.dbg.value(metadata i32 %0, metadata !5481, metadata !DIExpression()), !dbg !5487
  call void @llvm.dbg.value(metadata i8* %1, metadata !5482, metadata !DIExpression()), !dbg !5487
  call void @llvm.dbg.value(metadata i32 0, metadata !5483, metadata !DIExpression()), !dbg !5487
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5488
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5490
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5492
  %6 = and i32 %5, 512, !dbg !5493
  %7 = icmp eq i32 %6, 0, !dbg !5493
  br i1 %7, label %18, label %8, !dbg !5494

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !5495
  call void @llvm.dbg.value(metadata i32 %9, metadata !5484, metadata !DIExpression()), !dbg !5496
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5497
  %11 = and i32 %10, 32768, !dbg !5499
  %12 = icmp ne i32 %11, 0, !dbg !5500
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !5501
  br i1 %14, label %15, label %18, !dbg !5501

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5502
  %17 = and i32 %16, -32769, !dbg !5502
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5502
  br label %18, !dbg !5506

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5507
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5509
  %21 = and i32 %20, 256, !dbg !5511
  %22 = icmp eq i32 %21, 0, !dbg !5512
  br i1 %22, label %23, label %25, !dbg !5513

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5514
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5516
  %27 = or i32 %26, 65280, !dbg !5516
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5516
  store i8 0, i8* %1, align 1, !dbg !5517
  ret void, !dbg !5518
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #13 !dbg !5519 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5525, metadata !DIExpression()), !dbg !5527
  call void @llvm.dbg.value(metadata i32 0, metadata !5526, metadata !DIExpression()), !dbg !5527
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5528
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5530
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5532
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5534
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5536
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5538
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5540
  %8 = or i32 %7, -65536, !dbg !5540
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5540
  ret void, !dbg !5541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !5542 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5546, metadata !DIExpression()), !dbg !5548
  call void @llvm.dbg.value(metadata i8* %0, metadata !5547, metadata !DIExpression()), !dbg !5548
  store i8 0, i8* %0, align 1, !dbg !5549
  ret void, !dbg !5550
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !5551 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5555, metadata !DIExpression()), !dbg !5558
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !5559
  %3 = load i32, i32* %2, align 4, !dbg !5559
  %4 = inttoptr i32 %3 to i16*, !dbg !5560
  call void @llvm.dbg.value(metadata i16* %4, metadata !5556, metadata !DIExpression()), !dbg !5558
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5561
  %6 = or i32 %5, 256, !dbg !5561
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5561
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5562, !srcloc !5565
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5566, !srcloc !5569
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !5570
  %8 = load i16, i16* %7, align 2, !dbg !5571
  call void @llvm.dbg.value(metadata i16 %8, metadata !5557, metadata !DIExpression()), !dbg !5558
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5572
  %10 = and i32 %9, -257, !dbg !5572
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5572
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5573, !srcloc !5565
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5575, !srcloc !5569
  %11 = icmp eq i16 %8, -8446, !dbg !5577
  ret i1 %11, !dbg !5579
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #13 !dbg !5580 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5581
  %2 = or i32 %1, 16, !dbg !5581
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5581
  ret void, !dbg !5582
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #13 !dbg !5583 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5586, metadata !DIExpression()), !dbg !5587
  br label %1, !dbg !5588

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5586, metadata !DIExpression()), !dbg !5587
  tail call fastcc void @__NVIC_SetPriority.11(i32 noundef %2) #25, !dbg !5590
  %3 = add nuw nsw i32 %2, 1, !dbg !5593
  call void @llvm.dbg.value(metadata i32 %3, metadata !5586, metadata !DIExpression()), !dbg !5587
  %4 = icmp eq i32 %3, 86, !dbg !5594
  br i1 %4, label %5, label %1, !dbg !5588, !llvm.loop !5595

5:                                                ; preds = %1
  ret void, !dbg !5597
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.11(i32 noundef %0) unnamed_addr #13 !dbg !5598 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5600, metadata !DIExpression()), !dbg !5602
  call void @llvm.dbg.value(metadata i32 1, metadata !5601, metadata !DIExpression()), !dbg !5602
  %2 = and i32 %0, 15, !dbg !5603
  %3 = add nsw i32 %2, -4, !dbg !5603
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !5603
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5603
  %6 = icmp slt i32 %0, 0, !dbg !5603
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !5603
  store volatile i8 16, i8* %7, align 1, !dbg !5604
  ret void, !dbg !5606
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !5607 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5713, metadata !DIExpression()), !dbg !5714
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5715
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !5717
  br i1 %3, label %4, label %12, !dbg !5718

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !5719, !srcloc !5731
  call void @llvm.dbg.value(metadata i32 %5, metadata !5722, metadata !DIExpression()) #23, !dbg !5732
  %6 = icmp eq i32 %5, 0, !dbg !5733
  br i1 %6, label %12, label %7, !dbg !5734

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5735
  %9 = or i32 %8, 268435456, !dbg !5735
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5735
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5737
  %11 = and i32 %10, -32769, !dbg !5737
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5737
  br label %12, !dbg !5738

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !5739
  ret void, !dbg !5740
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !5741 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #24, !dbg !5742
  ret void, !dbg !5743
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !227 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !351, metadata !DIExpression()), !dbg !5744
  call void @llvm.dbg.value(metadata i8 0, metadata !352, metadata !DIExpression()), !dbg !5744
  call void @llvm.dbg.value(metadata i32 64, metadata !354, metadata !DIExpression()), !dbg !5744
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !5745
  %3 = load i32, i32* %2, align 4, !dbg !5745
  %4 = add i32 %3, -64, !dbg !5747
  call void @llvm.dbg.value(metadata i32 %4, metadata !353, metadata !DIExpression()), !dbg !5744
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !5748
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !5749
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !5750
  call void @llvm.dbg.value(metadata i8 1, metadata !352, metadata !DIExpression()), !dbg !5744
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #24, !dbg !5751
  ret void, !dbg !5752
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !5753 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5754
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5755, !srcloc !5758
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5759, !srcloc !5762
  ret void, !dbg !5763
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !5764 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !5765, !srcloc !5768
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5769
  ret void, !dbg !5770
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #15 !dbg !5771 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5786, metadata !DIExpression()), !dbg !5790
  call void @llvm.dbg.value(metadata i8 %1, metadata !5787, metadata !DIExpression()), !dbg !5790
  call void @llvm.dbg.value(metadata i32 %2, metadata !5788, metadata !DIExpression()), !dbg !5790
  call void @llvm.dbg.value(metadata i32 %3, metadata !5789, metadata !DIExpression()), !dbg !5790
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !5791
  ret void, !dbg !5793
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5794 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5799, metadata !DIExpression()), !dbg !5804
  call void @llvm.dbg.value(metadata i8 %1, metadata !5800, metadata !DIExpression()), !dbg !5804
  call void @llvm.dbg.value(metadata i32 undef, metadata !5801, metadata !DIExpression()), !dbg !5804
  call void @llvm.dbg.value(metadata i32 undef, metadata !5802, metadata !DIExpression()), !dbg !5804
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !5805
  call void @llvm.dbg.value(metadata i8 %3, metadata !5803, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5804
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #25, !dbg !5806
  call void @llvm.dbg.value(metadata i32 %4, metadata !5803, metadata !DIExpression()), !dbg !5804
  %5 = trunc i32 %4 to i8, !dbg !5807
  store i8 %5, i8* @static_regions_num, align 1, !dbg !5808
  ret void, !dbg !5809
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #15 !dbg !5810 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5814, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i8 %1, metadata !5815, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i8 %2, metadata !5816, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i1 %3, metadata !5817, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5820
  %5 = zext i8 %2 to i32, !dbg !5821
  call void @llvm.dbg.value(metadata i32 %5, metadata !5819, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i32 0, metadata !5818, metadata !DIExpression()), !dbg !5820
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !5819, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i32 0, metadata !5818, metadata !DIExpression()), !dbg !5820
  %7 = icmp eq i8 %1, 0, !dbg !5822
  br i1 %7, label %29, label %8, !dbg !5825

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5819, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata i32 %10, metadata !5818, metadata !DIExpression()), !dbg !5820
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !5826
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !5829
  %13 = load i32, i32* %12, align 4, !dbg !5829
  %14 = icmp eq i32 %13, 0, !dbg !5830
  br i1 %14, label %25, label %15, !dbg !5831

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !5832

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !5834
  %18 = icmp eq i32 %17, 0, !dbg !5834
  br i1 %18, label %29, label %19, !dbg !5835

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !5836
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !5837
  call void @llvm.dbg.value(metadata i32 %21, metadata !5819, metadata !DIExpression()), !dbg !5820
  %22 = icmp eq i32 %21, -22, !dbg !5838
  br i1 %22, label %29, label %23, !dbg !5840

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !5841
  call void @llvm.dbg.value(metadata i32 %24, metadata !5819, metadata !DIExpression()), !dbg !5820
  br label %25, !dbg !5842

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !5820
  call void @llvm.dbg.value(metadata i32 %26, metadata !5819, metadata !DIExpression()), !dbg !5820
  %27 = add nuw nsw i32 %10, 1, !dbg !5843
  call void @llvm.dbg.value(metadata i32 %27, metadata !5818, metadata !DIExpression()), !dbg !5820
  %28 = icmp eq i32 %27, %6, !dbg !5822
  br i1 %28, label %29, label %8, !dbg !5825, !llvm.loop !5844

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !5820
  ret i32 %30, !dbg !5846
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !5847 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5851, metadata !DIExpression()), !dbg !5853
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !5854
  %3 = load i32, i32* %2, align 4, !dbg !5854
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !5855, !range !5856
  %5 = icmp ult i32 %4, 2, !dbg !5855
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !5857
  br i1 %7, label %8, label %15, !dbg !5857

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !5858
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !5859
  %11 = load i32, i32* %10, align 4, !dbg !5859
  %12 = and i32 %11, %9, !dbg !5860
  %13 = icmp eq i32 %12, 0, !dbg !5861
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !5852, metadata !DIExpression()), !dbg !5853
  ret i32 %16, !dbg !5862
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #15 !dbg !5863 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !5867, metadata !DIExpression()), !dbg !5870
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !5868, metadata !DIExpression()), !dbg !5870
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !5871
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !5871
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !5869, metadata !DIExpression()), !dbg !5872
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !5873
  %6 = load i32, i32* %5, align 4, !dbg !5873
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !5874
  store i32 %6, i32* %7, align 4, !dbg !5875
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !5876
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !5877
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !5878
  %11 = load i32, i32* %10, align 4, !dbg !5878
  call fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.15* noundef nonnull %8, %union.anon.15* noundef nonnull %9, i32 noundef %11) #25, !dbg !5879
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #25, !dbg !5880
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !5881
  ret i32 %12, !dbg !5882
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.15* nocapture noundef writeonly %0, %union.anon.15* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !5883 {
  call void @llvm.dbg.value(metadata %union.anon.15* %0, metadata !5890, metadata !DIExpression()), !dbg !5894
  call void @llvm.dbg.value(metadata %union.anon.15* %1, metadata !5891, metadata !DIExpression()), !dbg !5894
  call void @llvm.dbg.value(metadata i32 undef, metadata !5892, metadata !DIExpression()), !dbg !5894
  call void @llvm.dbg.value(metadata i32 %2, metadata !5893, metadata !DIExpression()), !dbg !5894
  %4 = getelementptr inbounds %union.anon.15, %union.anon.15* %1, i32 0, i32 0, !dbg !5895
  %5 = load i32, i32* %4, align 4, !dbg !5895
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #25, !dbg !5896
  %7 = or i32 %6, %5, !dbg !5897
  %8 = getelementptr inbounds %union.anon.15, %union.anon.15* %0, i32 0, i32 0, !dbg !5898
  store i32 %7, i32* %8, align 4, !dbg !5899
  ret void, !dbg !5900
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !5901 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5905, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !5906, metadata !DIExpression()), !dbg !5907
  %3 = zext i8 %0 to i32, !dbg !5908
  %4 = icmp ugt i8 %0, 7, !dbg !5910
  br i1 %4, label %6, label %5, !dbg !5911

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #25, !dbg !5912
  br label %6, !dbg !5913

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !5907
  ret i32 %7, !dbg !5914
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #13 !dbg !5915 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5919, metadata !DIExpression()), !dbg !5921
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !5920, metadata !DIExpression()), !dbg !5921
  tail call fastcc void @set_region_number(i32 noundef %0) #25, !dbg !5922
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !5923
  %4 = load i32, i32* %3, align 4, !dbg !5923
  %5 = and i32 %4, -32, !dbg !5924
  %6 = or i32 %5, %0, !dbg !5925
  %7 = or i32 %6, 16, !dbg !5925
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !5926
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !5927
  %9 = load i32, i32* %8, align 4, !dbg !5927
  %10 = or i32 %9, 1, !dbg !5928
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !5929
  ret void, !dbg !5930
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #13 !dbg !5931 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5934, metadata !DIExpression()), !dbg !5935
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !5936
  ret void, !dbg !5937
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !5938 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5942, metadata !DIExpression()), !dbg !5943
  %2 = icmp ult i32 %0, 33, !dbg !5944
  br i1 %2, label %11, label %3, !dbg !5946

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !5947
  br i1 %4, label %11, label %5, !dbg !5949

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !5950
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !5951, !range !5856
  %8 = mul nsw i32 %7, -2, !dbg !5952
  %9 = add nsw i32 %8, 62, !dbg !5952
  %10 = and i32 %9, 62, !dbg !5953
  br label %11, !dbg !5954

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !5943
  ret i32 %12, !dbg !5955
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #15 !dbg !5956 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5960, metadata !DIExpression()), !dbg !5962
  call void @llvm.dbg.value(metadata i8 %1, metadata !5961, metadata !DIExpression()), !dbg !5962
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !5963
  ret void, !dbg !5965
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !5966 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5970, metadata !DIExpression()), !dbg !5977
  call void @llvm.dbg.value(metadata i8 %1, metadata !5971, metadata !DIExpression()), !dbg !5977
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !5978
  call void @llvm.dbg.value(metadata i8 %3, metadata !5972, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5977
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #25, !dbg !5979
  call void @llvm.dbg.value(metadata i32 %4, metadata !5972, metadata !DIExpression()), !dbg !5977
  %5 = icmp ne i32 %4, -22, !dbg !5980
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !5981
  call void @llvm.dbg.value(metadata i32 %4, metadata !5973, metadata !DIExpression()), !dbg !5982
  br i1 %7, label %8, label %12, !dbg !5981

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5973, metadata !DIExpression()), !dbg !5982
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #25, !dbg !5983
  %10 = add i32 %9, 1, !dbg !5986
  call void @llvm.dbg.value(metadata i32 %10, metadata !5973, metadata !DIExpression()), !dbg !5982
  %11 = icmp eq i32 %10, 8, !dbg !5987
  br i1 %11, label %12, label %8, !dbg !5988, !llvm.loop !5989

12:                                               ; preds = %8, %2
  ret void, !dbg !5991
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #13 !dbg !5992 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5995, metadata !DIExpression()), !dbg !5996
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !5997
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !5998
  ret void, !dbg !5999
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !6000 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !6005
  %2 = icmp ugt i32 %1, 8, !dbg !6007
  br i1 %2, label %14, label %3, !dbg !6008

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #25, !dbg !6009
  call void @llvm.dbg.value(metadata i32 0, metadata !6004, metadata !DIExpression()), !dbg !6010
  %4 = icmp eq i32 %1, 0, !dbg !6011
  br i1 %4, label %12, label %5, !dbg !6014

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !6014

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6004, metadata !DIExpression()), !dbg !6010
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !6015
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #25, !dbg !6017
  %10 = add nuw i32 %8, 1, !dbg !6018
  call void @llvm.dbg.value(metadata i32 %10, metadata !6004, metadata !DIExpression()), !dbg !6010
  %11 = icmp eq i32 %10, %1, !dbg !6011
  br i1 %11, label %12, label %7, !dbg !6014, !llvm.loop !6019

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !6021
  store i8 %13, i8* @static_regions_num, align 1, !dbg !6022
  tail call void @arm_core_mpu_enable() #25, !dbg !6023
  br label %14, !dbg !6024

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !6010
  ret i32 %15, !dbg !6025
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6026 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6033, metadata !DIExpression()), !dbg !6036
  call void @llvm.dbg.value(metadata i8* %1, metadata !6034, metadata !DIExpression()), !dbg !6036
  call void @llvm.dbg.value(metadata i8* %0, metadata !6035, metadata !DIExpression()), !dbg !6036
  %3 = load i8, i8* %1, align 1, !dbg !6037
  %4 = icmp eq i8 %3, 0, !dbg !6038
  br i1 %4, label %13, label %5, !dbg !6039

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !6033, metadata !DIExpression()), !dbg !6036
  call void @llvm.dbg.value(metadata i8* %8, metadata !6034, metadata !DIExpression()), !dbg !6036
  store i8 %6, i8* %7, align 1, !dbg !6040
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6042
  call void @llvm.dbg.value(metadata i8* %9, metadata !6033, metadata !DIExpression()), !dbg !6036
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6043
  call void @llvm.dbg.value(metadata i8* %10, metadata !6034, metadata !DIExpression()), !dbg !6036
  %11 = load i8, i8* %10, align 1, !dbg !6037
  %12 = icmp eq i8 %11, 0, !dbg !6038
  br i1 %12, label %13, label %5, !dbg !6039, !llvm.loop !6044

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !6046
  ret i8* %0, !dbg !6047
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6048 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6052, metadata !DIExpression()), !dbg !6056
  call void @llvm.dbg.value(metadata i8* %1, metadata !6053, metadata !DIExpression()), !dbg !6056
  call void @llvm.dbg.value(metadata i32 %2, metadata !6054, metadata !DIExpression()), !dbg !6056
  call void @llvm.dbg.value(metadata i8* %0, metadata !6055, metadata !DIExpression()), !dbg !6056
  %4 = icmp eq i32 %2, 0, !dbg !6057
  br i1 %4, label %22, label %5, !dbg !6058

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6052, metadata !DIExpression()), !dbg !6056
  call void @llvm.dbg.value(metadata i32 %7, metadata !6054, metadata !DIExpression()), !dbg !6056
  call void @llvm.dbg.value(metadata i8* %8, metadata !6053, metadata !DIExpression()), !dbg !6056
  %9 = load i8, i8* %8, align 1, !dbg !6059
  %10 = icmp eq i8 %9, 0, !dbg !6060
  br i1 %10, label %16, label %11, !dbg !6061

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !6062
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6064
  call void @llvm.dbg.value(metadata i8* %12, metadata !6053, metadata !DIExpression()), !dbg !6056
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6065
  call void @llvm.dbg.value(metadata i8* %13, metadata !6052, metadata !DIExpression()), !dbg !6056
  %14 = add i32 %7, -1, !dbg !6066
  call void @llvm.dbg.value(metadata i32 %14, metadata !6054, metadata !DIExpression()), !dbg !6056
  %15 = icmp eq i32 %14, 0, !dbg !6057
  br i1 %15, label %22, label %5, !dbg !6058, !llvm.loop !6067

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !6052, metadata !DIExpression()), !dbg !6056
  call void @llvm.dbg.value(metadata i32 %18, metadata !6054, metadata !DIExpression()), !dbg !6056
  store i8 0, i8* %17, align 1, !dbg !6069
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6071
  call void @llvm.dbg.value(metadata i8* %19, metadata !6052, metadata !DIExpression()), !dbg !6056
  %20 = add i32 %18, -1, !dbg !6072
  call void @llvm.dbg.value(metadata i32 %20, metadata !6054, metadata !DIExpression()), !dbg !6056
  %21 = icmp eq i32 %20, 0, !dbg !6073
  br i1 %21, label %22, label %16, !dbg !6074, !llvm.loop !6075

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !6077
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6078 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6082, metadata !DIExpression()), !dbg !6085
  call void @llvm.dbg.value(metadata i32 %1, metadata !6083, metadata !DIExpression()), !dbg !6085
  call void @llvm.dbg.value(metadata i32 %1, metadata !6084, metadata !DIExpression()), !dbg !6085
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6086

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !6082, metadata !DIExpression()), !dbg !6085
  %6 = load i8, i8* %5, align 1, !dbg !6087
  %7 = icmp eq i8 %6, %3, !dbg !6088
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !6089
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6090
  call void @llvm.dbg.value(metadata i8* %10, metadata !6082, metadata !DIExpression()), !dbg !6085
  br i1 %9, label %11, label %4, !dbg !6089, !llvm.loop !6092

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !6094
  ret i8* %12, !dbg !6095
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6096 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6098, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata i32 %1, metadata !6099, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata i8* null, metadata !6100, metadata !DIExpression()), !dbg !6101
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !6102

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !6101
  call void @llvm.dbg.value(metadata i8* %6, metadata !6100, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata i8* %5, metadata !6098, metadata !DIExpression()), !dbg !6101
  %7 = load i8, i8* %5, align 1, !dbg !6103
  %8 = icmp eq i8 %7, %3, !dbg !6106
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !6107
  call void @llvm.dbg.value(metadata i8* %9, metadata !6100, metadata !DIExpression()), !dbg !6101
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !6108
  call void @llvm.dbg.value(metadata i8* %10, metadata !6098, metadata !DIExpression()), !dbg !6101
  %11 = icmp eq i8 %7, 0, !dbg !6109
  br i1 %11, label %12, label %4, !dbg !6109, !llvm.loop !6110

12:                                               ; preds = %4
  ret i8* %9, !dbg !6112
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #18 !dbg !6113 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6117, metadata !DIExpression()), !dbg !6119
  call void @llvm.dbg.value(metadata i32 0, metadata !6118, metadata !DIExpression()), !dbg !6119
  %2 = load i8, i8* %0, align 1, !dbg !6120
  %3 = icmp eq i8 %2, 0, !dbg !6121
  br i1 %3, label %11, label %4, !dbg !6122

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6118, metadata !DIExpression()), !dbg !6119
  call void @llvm.dbg.value(metadata i8* %6, metadata !6117, metadata !DIExpression()), !dbg !6119
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6123
  call void @llvm.dbg.value(metadata i8* %7, metadata !6117, metadata !DIExpression()), !dbg !6119
  %8 = add i32 %5, 1, !dbg !6125
  call void @llvm.dbg.value(metadata i32 %8, metadata !6118, metadata !DIExpression()), !dbg !6119
  %9 = load i8, i8* %7, align 1, !dbg !6120
  %10 = icmp eq i8 %9, 0, !dbg !6121
  br i1 %10, label %11, label %4, !dbg !6122, !llvm.loop !6126

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !6119
  ret i32 %12, !dbg !6128
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !6129 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6133, metadata !DIExpression()), !dbg !6136
  call void @llvm.dbg.value(metadata i32 %1, metadata !6134, metadata !DIExpression()), !dbg !6136
  call void @llvm.dbg.value(metadata i32 0, metadata !6135, metadata !DIExpression()), !dbg !6136
  %3 = load i8, i8* %0, align 1, !dbg !6137
  %4 = icmp ne i8 %3, 0, !dbg !6138
  %5 = icmp ne i32 %1, 0, !dbg !6139
  %6 = and i1 %4, %5, !dbg !6139
  br i1 %6, label %7, label %16, !dbg !6140

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6135, metadata !DIExpression()), !dbg !6136
  call void @llvm.dbg.value(metadata i8* %9, metadata !6133, metadata !DIExpression()), !dbg !6136
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6141
  call void @llvm.dbg.value(metadata i8* %10, metadata !6133, metadata !DIExpression()), !dbg !6136
  %11 = add nuw i32 %8, 1, !dbg !6143
  call void @llvm.dbg.value(metadata i32 %11, metadata !6135, metadata !DIExpression()), !dbg !6136
  %12 = load i8, i8* %10, align 1, !dbg !6137
  %13 = icmp ne i8 %12, 0, !dbg !6138
  %14 = icmp ult i32 %11, %1, !dbg !6139
  %15 = select i1 %13, i1 %14, i1 false, !dbg !6139
  br i1 %15, label %7, label %16, !dbg !6140, !llvm.loop !6144

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !6136
  ret i32 %17, !dbg !6146
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !6147 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6151, metadata !DIExpression()), !dbg !6153
  call void @llvm.dbg.value(metadata i8* %1, metadata !6152, metadata !DIExpression()), !dbg !6153
  %3 = load i8, i8* %0, align 1, !dbg !6154
  %4 = load i8, i8* %1, align 1, !dbg !6155
  %5 = icmp ne i8 %3, %4, !dbg !6156
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !6157
  br i1 %7, label %18, label %8, !dbg !6157

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6152, metadata !DIExpression()), !dbg !6153
  call void @llvm.dbg.value(metadata i8* %10, metadata !6151, metadata !DIExpression()), !dbg !6153
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6158
  call void @llvm.dbg.value(metadata i8* %11, metadata !6151, metadata !DIExpression()), !dbg !6153
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6160
  call void @llvm.dbg.value(metadata i8* %12, metadata !6152, metadata !DIExpression()), !dbg !6153
  %13 = load i8, i8* %11, align 1, !dbg !6154
  %14 = load i8, i8* %12, align 1, !dbg !6155
  %15 = icmp ne i8 %13, %14, !dbg !6156
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !6157
  br i1 %17, label %18, label %8, !dbg !6157, !llvm.loop !6161

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !6154
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !6155
  %21 = zext i8 %19 to i32, !dbg !6164
  %22 = zext i8 %20 to i32, !dbg !6165
  %23 = sub nsw i32 %21, %22, !dbg !6166
  ret i32 %23, !dbg !6167
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6168 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6172, metadata !DIExpression()), !dbg !6175
  call void @llvm.dbg.value(metadata i8* %1, metadata !6173, metadata !DIExpression()), !dbg !6175
  call void @llvm.dbg.value(metadata i32 %2, metadata !6174, metadata !DIExpression()), !dbg !6175
  %4 = icmp eq i32 %2, 0, !dbg !6176
  br i1 %4, label %23, label %5, !dbg !6176

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6174, metadata !DIExpression()), !dbg !6175
  call void @llvm.dbg.value(metadata i8* %7, metadata !6173, metadata !DIExpression()), !dbg !6175
  call void @llvm.dbg.value(metadata i8* %8, metadata !6172, metadata !DIExpression()), !dbg !6175
  %9 = load i8, i8* %8, align 1, !dbg !6177
  %10 = load i8, i8* %7, align 1, !dbg !6178
  %11 = icmp ne i8 %9, %10, !dbg !6179
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !6180
  br i1 %13, label %19, label %14, !dbg !6180

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6181
  call void @llvm.dbg.value(metadata i8* %15, metadata !6172, metadata !DIExpression()), !dbg !6175
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6183
  call void @llvm.dbg.value(metadata i8* %16, metadata !6173, metadata !DIExpression()), !dbg !6175
  %17 = add i32 %6, -1, !dbg !6184
  call void @llvm.dbg.value(metadata i32 %17, metadata !6174, metadata !DIExpression()), !dbg !6175
  %18 = icmp eq i32 %17, 0, !dbg !6176
  br i1 %18, label %23, label %5, !dbg !6176, !llvm.loop !6185

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !6188
  %21 = zext i8 %10 to i32, !dbg !6189
  %22 = sub nsw i32 %20, %21, !dbg !6190
  br label %23, !dbg !6191

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !6191
  ret i32 %24, !dbg !6192
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #11 !dbg !6193 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6198, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i8* %1, metadata !6199, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i8** %2, metadata !6200, metadata !DIExpression()), !dbg !6203
  %4 = icmp eq i8* %0, null, !dbg !6204
  br i1 %4, label %5, label %7, !dbg !6204

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !6205
  br label %7, !dbg !6204

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !6204
  call void @llvm.dbg.value(metadata i8* %8, metadata !6201, metadata !DIExpression()), !dbg !6203
  %9 = load i8, i8* %8, align 1, !dbg !6206
  %10 = icmp eq i8 %9, 0, !dbg !6206
  br i1 %10, label %33, label %11, !dbg !6207

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6201, metadata !DIExpression()), !dbg !6203
  %14 = zext i8 %12 to i32, !dbg !6206
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !6208
  %16 = icmp eq i8* %15, null, !dbg !6207
  br i1 %16, label %21, label %17, !dbg !6209

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6210
  call void @llvm.dbg.value(metadata i8* %18, metadata !6201, metadata !DIExpression()), !dbg !6203
  %19 = load i8, i8* %18, align 1, !dbg !6206
  %20 = icmp eq i8 %19, 0, !dbg !6206
  br i1 %20, label %33, label %11, !dbg !6207, !llvm.loop !6212

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !6202, metadata !DIExpression()), !dbg !6203
  %24 = zext i8 %22 to i32, !dbg !6214
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !6215
  %26 = icmp eq i8* %25, null, !dbg !6216
  br i1 %26, label %27, label %31, !dbg !6217

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6218
  call void @llvm.dbg.value(metadata i8* %28, metadata !6202, metadata !DIExpression()), !dbg !6203
  %29 = load i8, i8* %28, align 1, !dbg !6214
  %30 = icmp eq i8 %29, 0, !dbg !6214
  br i1 %30, label %33, label %21, !dbg !6220, !llvm.loop !6221

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !6223
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6226
  br label %33, !dbg !6227

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !6203
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !6203
  store i8* %34, i8** %2, align 4, !dbg !6203
  ret i8* %35, !dbg !6228
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !6229 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6231, metadata !DIExpression()), !dbg !6233
  call void @llvm.dbg.value(metadata i8* %1, metadata !6232, metadata !DIExpression()), !dbg !6233
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6234
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6235
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !6236
  ret i8* %0, !dbg !6237
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6238 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6240, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.value(metadata i8* %1, metadata !6241, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.value(metadata i32 %2, metadata !6242, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.value(metadata i8* %0, metadata !6243, metadata !DIExpression()), !dbg !6245
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !6246
  call void @llvm.dbg.value(metadata i32 %4, metadata !6244, metadata !DIExpression()), !dbg !6245
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !6247
  call void @llvm.dbg.value(metadata i8* %5, metadata !6240, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.value(metadata i8* %1, metadata !6241, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.value(metadata i32 %2, metadata !6242, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.value(metadata i32 %2, metadata !6242, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6245
  %6 = icmp eq i32 %2, 0, !dbg !6248
  br i1 %6, label %18, label %7, !dbg !6249

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !6250
  call void @llvm.dbg.value(metadata i8* %9, metadata !6240, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.value(metadata i8* %10, metadata !6241, metadata !DIExpression()), !dbg !6245
  %12 = load i8, i8* %10, align 1, !dbg !6251
  %13 = icmp eq i8 %12, 0, !dbg !6252
  br i1 %13, label %18, label %14, !dbg !6253

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6254
  call void @llvm.dbg.value(metadata i8* %15, metadata !6241, metadata !DIExpression()), !dbg !6245
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6256
  call void @llvm.dbg.value(metadata i8* %16, metadata !6240, metadata !DIExpression()), !dbg !6245
  store i8 %12, i8* %9, align 1, !dbg !6257
  call void @llvm.dbg.value(metadata i32 %11, metadata !6242, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.value(metadata i32 %11, metadata !6242, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6245
  %17 = icmp eq i32 %11, 0, !dbg !6248
  br i1 %17, label %18, label %7, !dbg !6249, !llvm.loop !6258

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !6245
  store i8 0, i8* %19, align 1, !dbg !6260
  ret i8* %0, !dbg !6261
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6262 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6266, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.value(metadata i8* %1, metadata !6267, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.value(metadata i32 %2, metadata !6268, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.value(metadata i8* %0, metadata !6269, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.value(metadata i8* %1, metadata !6270, metadata !DIExpression()), !dbg !6271
  %4 = icmp eq i32 %2, 0, !dbg !6272
  br i1 %4, label %31, label %5, !dbg !6274

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6270, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.value(metadata i8* %0, metadata !6269, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.value(metadata i32 %2, metadata !6268, metadata !DIExpression()), !dbg !6271
  %6 = add i32 %2, -1, !dbg !6275
  call void @llvm.dbg.value(metadata i32 %6, metadata !6268, metadata !DIExpression()), !dbg !6271
  %7 = icmp eq i32 %6, 0, !dbg !6276
  br i1 %7, label %23, label %8, !dbg !6277

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !6278
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !6278
  br label %11, !dbg !6278

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6270, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.value(metadata i8* %14, metadata !6269, metadata !DIExpression()), !dbg !6271
  %15 = load i8, i8* %14, align 1, !dbg !6279
  %16 = load i8, i8* %13, align 1, !dbg !6280
  %17 = icmp eq i8 %15, %16, !dbg !6281
  br i1 %17, label %18, label %23, !dbg !6278

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6282
  call void @llvm.dbg.value(metadata i8* %19, metadata !6269, metadata !DIExpression()), !dbg !6271
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6284
  call void @llvm.dbg.value(metadata i8* %20, metadata !6270, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.value(metadata i32 %12, metadata !6268, metadata !DIExpression()), !dbg !6271
  %21 = add i32 %12, -1, !dbg !6275
  call void @llvm.dbg.value(metadata i32 %21, metadata !6268, metadata !DIExpression()), !dbg !6271
  %22 = icmp eq i32 %21, 0, !dbg !6276
  br i1 %22, label %23, label %11, !dbg !6277, !llvm.loop !6285

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !6271
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !6271
  %26 = load i8, i8* %24, align 1, !dbg !6287
  %27 = zext i8 %26 to i32, !dbg !6287
  %28 = load i8, i8* %25, align 1, !dbg !6288
  %29 = zext i8 %28 to i32, !dbg !6288
  %30 = sub nsw i32 %27, %29, !dbg !6289
  br label %31, !dbg !6290

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !6271
  ret i32 %32, !dbg !6291
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6292 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6296, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata i8* %1, metadata !6297, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata i32 %2, metadata !6298, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata i8* %0, metadata !6299, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata i8* %1, metadata !6300, metadata !DIExpression()), !dbg !6301
  %4 = ptrtoint i8* %0 to i32, !dbg !6302
  %5 = ptrtoint i8* %1 to i32, !dbg !6302
  %6 = sub i32 %4, %5, !dbg !6302
  %7 = icmp ult i32 %6, %2, !dbg !6304
  br i1 %7, label %10, label %8, !dbg !6305

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6300, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata i8* %0, metadata !6299, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata i32 %2, metadata !6298, metadata !DIExpression()), !dbg !6301
  %9 = icmp eq i32 %2, 0, !dbg !6306
  br i1 %9, label %26, label %17, !dbg !6308

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6298, metadata !DIExpression()), !dbg !6301
  %12 = add i32 %11, -1, !dbg !6309
  call void @llvm.dbg.value(metadata i32 %12, metadata !6298, metadata !DIExpression()), !dbg !6301
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !6312
  %14 = load i8, i8* %13, align 1, !dbg !6312
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !6313
  store i8 %14, i8* %15, align 1, !dbg !6314
  %16 = icmp eq i32 %12, 0, !dbg !6315
  br i1 %16, label %26, label %10, !dbg !6316, !llvm.loop !6317

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !6300, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata i8* %19, metadata !6299, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.value(metadata i32 %20, metadata !6298, metadata !DIExpression()), !dbg !6301
  %21 = load i8, i8* %18, align 1, !dbg !6319
  store i8 %21, i8* %19, align 1, !dbg !6321
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !6322
  call void @llvm.dbg.value(metadata i8* %22, metadata !6299, metadata !DIExpression()), !dbg !6301
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6323
  call void @llvm.dbg.value(metadata i8* %23, metadata !6300, metadata !DIExpression()), !dbg !6301
  %24 = add i32 %20, -1, !dbg !6324
  call void @llvm.dbg.value(metadata i32 %24, metadata !6298, metadata !DIExpression()), !dbg !6301
  %25 = icmp eq i32 %24, 0, !dbg !6306
  br i1 %25, label %26, label %17, !dbg !6308, !llvm.loop !6325

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !6327
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6328 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6334, metadata !DIExpression()), !dbg !6339
  call void @llvm.dbg.value(metadata i8* %1, metadata !6335, metadata !DIExpression()), !dbg !6339
  call void @llvm.dbg.value(metadata i32 %2, metadata !6336, metadata !DIExpression()), !dbg !6339
  call void @llvm.dbg.value(metadata i8* %0, metadata !6337, metadata !DIExpression()), !dbg !6339
  call void @llvm.dbg.value(metadata i8* %1, metadata !6338, metadata !DIExpression()), !dbg !6339
  %4 = icmp eq i32 %2, 0, !dbg !6340
  br i1 %4, label %14, label %5, !dbg !6341

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6338, metadata !DIExpression()), !dbg !6339
  call void @llvm.dbg.value(metadata i8* %7, metadata !6337, metadata !DIExpression()), !dbg !6339
  call void @llvm.dbg.value(metadata i32 %8, metadata !6336, metadata !DIExpression()), !dbg !6339
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6342
  call void @llvm.dbg.value(metadata i8* %9, metadata !6338, metadata !DIExpression()), !dbg !6339
  %10 = load i8, i8* %6, align 1, !dbg !6344
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6345
  call void @llvm.dbg.value(metadata i8* %11, metadata !6337, metadata !DIExpression()), !dbg !6339
  store i8 %10, i8* %7, align 1, !dbg !6346
  %12 = add i32 %8, -1, !dbg !6347
  call void @llvm.dbg.value(metadata i32 %12, metadata !6336, metadata !DIExpression()), !dbg !6339
  %13 = icmp eq i32 %12, 0, !dbg !6340
  br i1 %13, label %14, label %5, !dbg !6341, !llvm.loop !6348

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !6350
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !6351 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6355, metadata !DIExpression()), !dbg !6360
  call void @llvm.dbg.value(metadata i32 %1, metadata !6356, metadata !DIExpression()), !dbg !6360
  call void @llvm.dbg.value(metadata i32 %2, metadata !6357, metadata !DIExpression()), !dbg !6360
  call void @llvm.dbg.value(metadata i8* %0, metadata !6358, metadata !DIExpression()), !dbg !6360
  %4 = trunc i32 %1 to i8, !dbg !6361
  call void @llvm.dbg.value(metadata i8 %4, metadata !6359, metadata !DIExpression()), !dbg !6360
  call void @llvm.dbg.value(metadata i32 %2, metadata !6357, metadata !DIExpression()), !dbg !6360
  call void @llvm.dbg.value(metadata i8* %0, metadata !6358, metadata !DIExpression()), !dbg !6360
  %5 = icmp eq i32 %2, 0, !dbg !6362
  br i1 %5, label %12, label %6, !dbg !6363

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6357, metadata !DIExpression()), !dbg !6360
  call void @llvm.dbg.value(metadata i8* %8, metadata !6358, metadata !DIExpression()), !dbg !6360
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6364
  call void @llvm.dbg.value(metadata i8* %9, metadata !6358, metadata !DIExpression()), !dbg !6360
  store i8 %4, i8* %8, align 1, !dbg !6366
  %10 = add i32 %7, -1, !dbg !6367
  call void @llvm.dbg.value(metadata i32 %10, metadata !6357, metadata !DIExpression()), !dbg !6360
  %11 = icmp eq i32 %10, 0, !dbg !6362
  br i1 %11, label %12, label %6, !dbg !6363, !llvm.loop !6368

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !6370
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6371 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6375, metadata !DIExpression()), !dbg !6381
  call void @llvm.dbg.value(metadata i32 %1, metadata !6376, metadata !DIExpression()), !dbg !6381
  call void @llvm.dbg.value(metadata i32 %2, metadata !6377, metadata !DIExpression()), !dbg !6381
  %4 = icmp eq i32 %2, 0, !dbg !6382
  br i1 %4, label %17, label %5, !dbg !6383

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !6384

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !6385
  call void @llvm.dbg.value(metadata i8* %9, metadata !6378, metadata !DIExpression()), !dbg !6385
  call void @llvm.dbg.value(metadata i32 %8, metadata !6377, metadata !DIExpression()), !dbg !6381
  call void @llvm.dbg.value(metadata i8* %9, metadata !6378, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6385
  %10 = load i8, i8* %9, align 1, !dbg !6386
  %11 = icmp eq i8 %10, %6, !dbg !6389
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !6390
  call void @llvm.dbg.value(metadata i8* %12, metadata !6378, metadata !DIExpression()), !dbg !6385
  call void @llvm.dbg.value(metadata i32 %13, metadata !6377, metadata !DIExpression()), !dbg !6381
  br i1 %15, label %16, label %7, !dbg !6390, !llvm.loop !6391

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !6393

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !6381
  ret i8* %19, !dbg !6394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !6395 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !6397, metadata !DIExpression()), !dbg !6398
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !6399
  ret void, !dbg !6400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #12 !dbg !6401 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6403, metadata !DIExpression()), !dbg !6404
  ret i32 -1, !dbg !6405
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6410, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata i32* %1, metadata !6411, metadata !DIExpression()), !dbg !6412
  %3 = ptrtoint i32* %1 to i32, !dbg !6413
  %4 = and i32 %3, -2, !dbg !6413
  %5 = icmp eq i32 %4, 2, !dbg !6413
  br i1 %5, label %6, label %9, !dbg !6413

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6414
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !6414
  br label %9, !dbg !6415

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !6415
  ret i32 %10, !dbg !6416
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6417 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6419, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.value(metadata i32* %1, metadata !6420, metadata !DIExpression()), !dbg !6421
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !6422
  ret i32 %3, !dbg !6423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !6424 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6427, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.value(metadata i32* %1, metadata !6428, metadata !DIExpression()), !dbg !6429
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6430, !srcloc !6432
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !6433
  ret i32 %3, !dbg !6434
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !6435 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6440, metadata !DIExpression()), !dbg !6444
  call void @llvm.dbg.value(metadata i32* %1, metadata !6441, metadata !DIExpression()), !dbg !6444
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6445
  call void @llvm.dbg.value(metadata i32 %3, metadata !6442, metadata !DIExpression()), !dbg !6444
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !6446
  call void @llvm.dbg.value(metadata i32 %4, metadata !6443, metadata !DIExpression()), !dbg !6444
  %5 = icmp ne i32 %3, %4, !dbg !6447
  %6 = sext i1 %5 to i32, !dbg !6448
  ret i32 %6, !dbg !6449
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !6450 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6454, metadata !DIExpression()), !dbg !6458
  call void @llvm.dbg.value(metadata i32 %1, metadata !6455, metadata !DIExpression()), !dbg !6458
  call void @llvm.dbg.value(metadata i32 %2, metadata !6456, metadata !DIExpression()), !dbg !6458
  call void @llvm.dbg.value(metadata i32* %3, metadata !6457, metadata !DIExpression()), !dbg !6458
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !6459
  ret i32 %5, !dbg !6460
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !6461 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6463, metadata !DIExpression()), !dbg !6467
  call void @llvm.dbg.value(metadata i32 %1, metadata !6464, metadata !DIExpression()), !dbg !6467
  call void @llvm.dbg.value(metadata i32 %2, metadata !6465, metadata !DIExpression()), !dbg !6467
  call void @llvm.dbg.value(metadata i32* %3, metadata !6466, metadata !DIExpression()), !dbg !6467
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6468, !srcloc !6470
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !6471
  ret i32 %5, !dbg !6472
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !6473 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6475, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata i32 %1, metadata !6476, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata i32 %2, metadata !6477, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata i32* %3, metadata !6478, metadata !DIExpression()), !dbg !6483
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !6484
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !6486
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !6486
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !6486
  br i1 %11, label %33, label %12, !dbg !6486

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !6483
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !6483
  call void @llvm.dbg.value(metadata i8* %14, metadata !6481, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata i32 %13, metadata !6479, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata i32 %1, metadata !6480, metadata !DIExpression()), !dbg !6483
  br label %15, !dbg !6487

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !6489
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !6483
  call void @llvm.dbg.value(metadata i8* %17, metadata !6481, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata i32 %16, metadata !6480, metadata !DIExpression()), !dbg !6483
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6490
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6493
  call void @llvm.dbg.value(metadata i8* %19, metadata !6481, metadata !DIExpression()), !dbg !6483
  %20 = load i8, i8* %17, align 1, !dbg !6494
  %21 = zext i8 %20 to i32, !dbg !6495
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !6490
  %23 = icmp eq i32 %22, -1, !dbg !6496
  br i1 %23, label %30, label %24, !dbg !6497

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !6498
  call void @llvm.dbg.value(metadata i32 %25, metadata !6480, metadata !DIExpression()), !dbg !6483
  %26 = icmp eq i32 %25, 0, !dbg !6499
  br i1 %26, label %27, label %15, !dbg !6500, !llvm.loop !6501

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !6503
  call void @llvm.dbg.value(metadata i32 %28, metadata !6479, metadata !DIExpression()), !dbg !6483
  %29 = icmp eq i32 %28, 0, !dbg !6504
  br i1 %29, label %30, label %12, !dbg !6505, !llvm.loop !6506

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !6483
  call void @llvm.dbg.value(metadata i32 %31, metadata !6479, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.label(metadata !6482), !dbg !6509
  %32 = sub i32 %2, %31, !dbg !6510
  br label %33, !dbg !6511

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !6483
  ret i32 %34, !dbg !6512
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !6513 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6517, metadata !DIExpression()), !dbg !6518
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !6519
  %3 = icmp eq i32 %2, -1, !dbg !6521
  br i1 %3, label %8, label %4, !dbg !6522

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !6523
  %6 = icmp eq i32 %5, -1, !dbg !6524
  %7 = sext i1 %6 to i32, !dbg !6523
  br label %8, !dbg !6525

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !6518
  ret i32 %9, !dbg !6526
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !6527 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6529, metadata !DIExpression()), !dbg !6530
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #25, !dbg !6531
  ret void, !dbg !6532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !6533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6537, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.value(metadata i32 %1, metadata !6538, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !6539, metadata !DIExpression()), !dbg !6543
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !6544
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !6544
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !6544
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !6540, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.value(metadata i32 %0, metadata !6542, metadata !DIExpression()), !dbg !6543
  %7 = icmp slt i32 %0, %1, !dbg !6545
  br i1 %7, label %8, label %22, !dbg !6548

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6542, metadata !DIExpression()), !dbg !6543
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #25, !dbg !6549
  %11 = icmp eq i32 %10, 0, !dbg !6549
  br i1 %11, label %19, label %12, !dbg !6552

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #25, !dbg !6553
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !6555
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !6555
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !6557
  br i1 %15, label %19, label %16, !dbg !6558

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !6559
  %18 = load i8*, i8** %17, align 4, !dbg !6559
  tail call void %14(i32 noundef %9, i8* noundef %18) #24, !dbg !6560
  br label %19, !dbg !6561

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !6562
  call void @llvm.dbg.value(metadata i32 %20, metadata !6542, metadata !DIExpression()), !dbg !6543
  %21 = icmp eq i32 %20, %1, !dbg !6545
  br i1 %21, label %22, label %8, !dbg !6548, !llvm.loop !6563

22:                                               ; preds = %19, %3
  ret void, !dbg !6565
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #14 !dbg !6566 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6568, metadata !DIExpression()), !dbg !6569
  %2 = shl nuw i32 1, %0, !dbg !6570
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #25, !dbg !6573
  ret i32 %3, !dbg !6574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #13 !dbg !6575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6579, metadata !DIExpression()), !dbg !6580
  %2 = shl nuw i32 1, %0, !dbg !6581
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #25, !dbg !6584
  ret void, !dbg !6585
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6586 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6589, metadata !DIExpression()), !dbg !6590
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !6591
  ret void, !dbg !6592
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !6593 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6595, metadata !DIExpression()), !dbg !6596
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !6597
  %3 = and i32 %2, %0, !dbg !6597
  %4 = icmp eq i32 %3, %0, !dbg !6598
  %5 = zext i1 %4 to i32, !dbg !6598
  ret i32 %5, !dbg !6599
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !6600 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6602, metadata !DIExpression()), !dbg !6603
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #25, !dbg !6604
  ret void, !dbg !6605
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !6606 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6608, metadata !DIExpression()), !dbg !6609
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #25, !dbg !6610
  ret void, !dbg !6611
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !6612 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6614, metadata !DIExpression()), !dbg !6615
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #25, !dbg !6616
  ret void, !dbg !6617
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !6618 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6620, metadata !DIExpression()), !dbg !6621
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #25, !dbg !6622
  ret void, !dbg !6623
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !6624 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6626, metadata !DIExpression()), !dbg !6627
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #25, !dbg !6628
  ret void, !dbg !6629
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !6630 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6632, metadata !DIExpression()), !dbg !6633
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #25, !dbg !6634
  ret void, !dbg !6635
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !6636 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6638, metadata !DIExpression()), !dbg !6639
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #25, !dbg !6640
  ret void, !dbg !6641
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !6642 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6644, metadata !DIExpression()), !dbg !6645
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #25, !dbg !6646
  ret void, !dbg !6647
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !6648 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6650, metadata !DIExpression()), !dbg !6651
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #25, !dbg !6652
  ret void, !dbg !6653
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !6654 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6656, metadata !DIExpression()), !dbg !6657
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #25, !dbg !6658
  ret void, !dbg !6659
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6660 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6662, metadata !DIExpression()), !dbg !6663
  tail call fastcc void @__stm32_exti_connect_irqs() #25, !dbg !6664
  ret i32 0, !dbg !6665
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !580 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !584, metadata !DIExpression()), !dbg !6666
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #24, !dbg !6667
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #24, !dbg !6669
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #24, !dbg !6671
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #24, !dbg !6673
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #24, !dbg !6675
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #24, !dbg !6677
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #24, !dbg !6679
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #24, !dbg !6681
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #24, !dbg !6683
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #24, !dbg !6685
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #24, !dbg !6687
  ret void, !dbg !6689
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6690 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6692, metadata !DIExpression()), !dbg !6694
  call void @llvm.dbg.value(metadata i32 0, metadata !6693, metadata !DIExpression()), !dbg !6694
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !6695
  %3 = load i32, i32* %2, align 4, !dbg !6695
  call void @llvm.dbg.value(metadata i32 %3, metadata !6693, metadata !DIExpression()), !dbg !6694
  %4 = shl nuw i32 1, %0, !dbg !6696
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #25, !dbg !6697
  tail call void @arch_irq_enable(i32 noundef %3) #24, !dbg !6698
  ret void, !dbg !6699
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6700 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6702, metadata !DIExpression()), !dbg !6703
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6704
  %3 = or i32 %2, %0, !dbg !6704
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6704
  ret void, !dbg !6705
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #13 !dbg !6706 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6708, metadata !DIExpression()), !dbg !6709
  %2 = icmp slt i32 %0, 32, !dbg !6710
  br i1 %2, label %3, label %5, !dbg !6712

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !6713
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #25, !dbg !6715
  br label %5, !dbg !6716

5:                                                ; preds = %1, %3
  ret void, !dbg !6717
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6718 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6720, metadata !DIExpression()), !dbg !6721
  %2 = xor i32 %0, -1, !dbg !6722
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6722
  %4 = and i32 %3, %2, !dbg !6722
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !6722
  ret void, !dbg !6723
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !6724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6728, metadata !DIExpression()), !dbg !6730
  call void @llvm.dbg.value(metadata i32 %1, metadata !6729, metadata !DIExpression()), !dbg !6730
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !6731

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !6732
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #25, !dbg !6734
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #25, !dbg !6735
  br label %11, !dbg !6736

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !6737
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #25, !dbg !6738
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #25, !dbg !6739
  br label %11, !dbg !6740

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !6741
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #25, !dbg !6742
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #25, !dbg !6743
  br label %11, !dbg !6744

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !6745
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #25, !dbg !6746
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #25, !dbg !6747
  br label %11, !dbg !6748

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !6749
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6752, metadata !DIExpression()), !dbg !6753
  %2 = xor i32 %0, -1, !dbg !6754
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6754
  %4 = and i32 %3, %2, !dbg !6754
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6754
  ret void, !dbg !6755
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6756 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6758, metadata !DIExpression()), !dbg !6759
  %2 = xor i32 %0, -1, !dbg !6760
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6760
  %4 = and i32 %3, %2, !dbg !6760
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6760
  ret void, !dbg !6761
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6764, metadata !DIExpression()), !dbg !6765
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6766
  %3 = or i32 %2, %0, !dbg !6766
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !6766
  ret void, !dbg !6767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #13 !dbg !6768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6770, metadata !DIExpression()), !dbg !6771
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6772
  %3 = or i32 %2, %0, !dbg !6772
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !6772
  ret void, !dbg !6773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !6774 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6778, metadata !DIExpression()), !dbg !6784
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6779, metadata !DIExpression()), !dbg !6784
  call void @llvm.dbg.value(metadata i8* %2, metadata !6780, metadata !DIExpression()), !dbg !6784
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !6781, metadata !DIExpression()), !dbg !6784
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6783, metadata !DIExpression()), !dbg !6784
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6785
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !6785
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !6787
  br i1 %6, label %7, label %9, !dbg !6788

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !6789
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6790
  store i8* %2, i8** %8, align 4, !dbg !6791
  br label %9, !dbg !6792

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !6784
  ret i32 %10, !dbg !6793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !6794 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6796, metadata !DIExpression()), !dbg !6799
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !6797, metadata !DIExpression()), !dbg !6799
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6798, metadata !DIExpression()), !dbg !6799
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6800
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !6801
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6802
  store i8* null, i8** %3, align 4, !dbg !6803
  ret void, !dbg !6804
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !6805 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6807, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8* %1, metadata !6808, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.value(metadata i8* %1, metadata !6809, metadata !DIExpression()), !dbg !6812
  %3 = bitcast i8* %1 to i32*, !dbg !6813
  %4 = load i32, i32* %3, align 4, !dbg !6813
  %5 = add i32 %4, -169, !dbg !6813
  %6 = icmp ult i32 %5, -121, !dbg !6813
  br i1 %6, label %15, label %7, !dbg !6815

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !6816
  %9 = inttoptr i32 %8 to i32*, !dbg !6817
  call void @llvm.dbg.value(metadata i32* %9, metadata !6810, metadata !DIExpression()), !dbg !6812
  %10 = load volatile i32, i32* %9, align 4, !dbg !6818
  call void @llvm.dbg.value(metadata i32 %10, metadata !6811, metadata !DIExpression()), !dbg !6812
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6819
  %12 = bitcast i8* %11 to i32*, !dbg !6819
  %13 = load i32, i32* %12, align 4, !dbg !6819
  %14 = or i32 %13, %10, !dbg !6820
  call void @llvm.dbg.value(metadata i32 %14, metadata !6811, metadata !DIExpression()), !dbg !6812
  store volatile i32 %14, i32* %9, align 4, !dbg !6821
  br label %15, !dbg !6822

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !6812
  ret i32 %16, !dbg !6823
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #13 !dbg !6824 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6826, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata i8* %1, metadata !6827, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.value(metadata i8* %1, metadata !6828, metadata !DIExpression()), !dbg !6831
  %3 = bitcast i8* %1 to i32*, !dbg !6832
  %4 = load i32, i32* %3, align 4, !dbg !6832
  %5 = add i32 %4, -169, !dbg !6832
  %6 = icmp ult i32 %5, -121, !dbg !6832
  br i1 %6, label %16, label %7, !dbg !6834

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !6835
  %9 = inttoptr i32 %8 to i32*, !dbg !6836
  call void @llvm.dbg.value(metadata i32* %9, metadata !6829, metadata !DIExpression()), !dbg !6831
  %10 = load volatile i32, i32* %9, align 4, !dbg !6837
  call void @llvm.dbg.value(metadata i32 %10, metadata !6830, metadata !DIExpression()), !dbg !6831
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6838
  %12 = bitcast i8* %11 to i32*, !dbg !6838
  %13 = load i32, i32* %12, align 4, !dbg !6838
  %14 = xor i32 %13, -1, !dbg !6839
  %15 = and i32 %10, %14, !dbg !6840
  call void @llvm.dbg.value(metadata i32 %15, metadata !6830, metadata !DIExpression()), !dbg !6831
  store volatile i32 %15, i32* %9, align 4, !dbg !6841
  br label %16, !dbg !6842

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !6831
  ret i32 %17, !dbg !6843
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !6844 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6846, metadata !DIExpression()), !dbg !6854
  call void @llvm.dbg.value(metadata i8* %1, metadata !6847, metadata !DIExpression()), !dbg !6854
  call void @llvm.dbg.value(metadata i32* %2, metadata !6848, metadata !DIExpression()), !dbg !6854
  call void @llvm.dbg.value(metadata i8* %1, metadata !6849, metadata !DIExpression()), !dbg !6854
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !6855
  call void @llvm.dbg.value(metadata i32 %4, metadata !6850, metadata !DIExpression()), !dbg !6854
  call void @llvm.dbg.value(metadata i32 undef, metadata !6851, metadata !DIExpression()), !dbg !6854
  call void @llvm.dbg.value(metadata i32 undef, metadata !6852, metadata !DIExpression()), !dbg !6854
  call void @llvm.dbg.value(metadata i32 %4, metadata !6853, metadata !DIExpression()), !dbg !6854
  %5 = bitcast i8* %1 to i32*, !dbg !6856
  %6 = load i32, i32* %5, align 4, !dbg !6856
  switch i32 %6, label %18 [
    i32 48, label %16
    i32 52, label %16
    i32 56, label %16
    i32 64, label %7
    i32 68, label %9
    i32 168, label %16
    i32 6, label %16
    i32 1, label %11
    i32 4, label %14
    i32 5, label %15
  ], !dbg !6857

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #25, !dbg !6858
  call void @llvm.dbg.value(metadata i32 %8, metadata !6851, metadata !DIExpression()), !dbg !6854
  br label %16, !dbg !6859

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #25, !dbg !6861
  call void @llvm.dbg.value(metadata i32 %10, metadata !6852, metadata !DIExpression()), !dbg !6854
  br label %16, !dbg !6862

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #24, !dbg !6863
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12) #25, !dbg !6864
  br label %16, !dbg !6865

14:                                               ; preds = %3
  br label %16, !dbg !6866

15:                                               ; preds = %3
  br label %16, !dbg !6867

16:                                               ; preds = %3, %3, %3, %3, %3, %15, %14, %11, %9, %7
  %17 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ 0, %14 ], [ 32000, %15 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %17, i32* %2, align 4, !dbg !6868
  br label %18, !dbg !6869

18:                                               ; preds = %16, %3
  %19 = phi i32 [ -134, %3 ], [ 0, %16 ], !dbg !6854
  ret i32 %19, !dbg !6869
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #13 !dbg !6870 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6872, metadata !DIExpression()), !dbg !6880
  call void @llvm.dbg.value(metadata i8* %1, metadata !6873, metadata !DIExpression()), !dbg !6880
  call void @llvm.dbg.value(metadata i8* %2, metadata !6874, metadata !DIExpression()), !dbg !6880
  call void @llvm.dbg.value(metadata i8* %1, metadata !6875, metadata !DIExpression()), !dbg !6880
  %4 = bitcast i8* %1 to i32*, !dbg !6881
  %5 = load i32, i32* %4, align 4, !dbg !6881
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #25, !dbg !6882
  call void @llvm.dbg.value(metadata i32 %6, metadata !6879, metadata !DIExpression()), !dbg !6880
  %7 = icmp slt i32 %6, 0, !dbg !6883
  br i1 %7, label %22, label %8, !dbg !6885

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6875, metadata !DIExpression()), !dbg !6880
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6886
  %10 = bitcast i8* %9 to i32*, !dbg !6886
  %11 = load i32, i32* %10, align 4, !dbg !6886
  %12 = lshr i32 %11, 16, !dbg !6886
  %13 = and i32 %12, 7, !dbg !6886
  %14 = lshr i32 %11, 8, !dbg !6887
  %15 = and i32 %14, 31, !dbg !6887
  %16 = shl i32 %13, %15, !dbg !6888
  call void @llvm.dbg.value(metadata i32 %16, metadata !6878, metadata !DIExpression()), !dbg !6880
  %17 = and i32 %11, 255, !dbg !6889
  %18 = or i32 %17, 1073887232, !dbg !6890
  %19 = inttoptr i32 %18 to i32*, !dbg !6891
  call void @llvm.dbg.value(metadata i32* %19, metadata !6876, metadata !DIExpression()), !dbg !6880
  %20 = load volatile i32, i32* %19, align 4, !dbg !6892
  call void @llvm.dbg.value(metadata i32 %20, metadata !6877, metadata !DIExpression()), !dbg !6880
  %21 = or i32 %16, %20, !dbg !6893
  call void @llvm.dbg.value(metadata i32 %21, metadata !6877, metadata !DIExpression()), !dbg !6880
  store volatile i32 %21, i32* %19, align 4, !dbg !6894
  br label %22, !dbg !6895

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !6880
  ret i32 %23, !dbg !6896
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #12 !dbg !6897 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6901, metadata !DIExpression()), !dbg !6903
  call void @llvm.dbg.value(metadata i32 0, metadata !6902, metadata !DIExpression()), !dbg !6903
  %2 = add i32 %0, -1, !dbg !6904
  %3 = icmp ult i32 %2, 6, !dbg !6904
  br i1 %3, label %4, label %7, !dbg !6904

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !6904
  %6 = load i32, i32* %5, align 4, !dbg !6904
  call void @llvm.dbg.value(metadata i32 %6, metadata !6902, metadata !DIExpression()), !dbg !6903
  br label %7, !dbg !6905

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !6903
  ret i32 %8, !dbg !6906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !6907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6911, metadata !DIExpression()), !dbg !6913
  call void @llvm.dbg.value(metadata i32 %1, metadata !6912, metadata !DIExpression()), !dbg !6913
  %3 = udiv i32 %0, %1, !dbg !6914
  ret i32 %3, !dbg !6915
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0) unnamed_addr #12 !dbg !6916 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6920, metadata !DIExpression()), !dbg !6924
  call void @llvm.dbg.value(metadata i32 16, metadata !6921, metadata !DIExpression()), !dbg !6924
  call void @llvm.dbg.value(metadata i32 336, metadata !6922, metadata !DIExpression()), !dbg !6924
  call void @llvm.dbg.value(metadata i32 4, metadata !6923, metadata !DIExpression()), !dbg !6924
  %2 = mul i32 %0, 336, !dbg !6925
  %3 = lshr i32 %2, 6, !dbg !6926
  ret i32 %3, !dbg !6927
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !6928 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !6930, metadata !DIExpression()), !dbg !6933
  tail call void @config_enable_default_clocks() #24, !dbg !6934
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !6935
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #25, !dbg !6935
  %4 = lshr i32 %3, 4, !dbg !6935
  %5 = and i32 %4, 15, !dbg !6935
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !6935
  %7 = load i8, i8* %6, align 1, !dbg !6935
  %8 = zext i8 %7 to i32, !dbg !6935
  %9 = lshr i32 %2, %8, !dbg !6935
  call void @llvm.dbg.value(metadata i32 %9, metadata !6931, metadata !DIExpression()), !dbg !6933
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !6932, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !6933
  %10 = icmp ult i32 %9, 84000000, !dbg !6936
  br i1 %10, label %11, label %13, !dbg !6938

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #24, !dbg !6939
  br label %13, !dbg !6941

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #25, !dbg !6942
  tail call fastcc void @set_up_plls() #25, !dbg !6943
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !6944
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #25, !dbg !6947
  br label %14, !dbg !6948

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !6949
  %16 = icmp eq i32 %15, 8, !dbg !6950
  br i1 %16, label %17, label %14, !dbg !6948, !llvm.loop !6951

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !6953
  br i1 %18, label %19, label %21, !dbg !6955

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #24, !dbg !6956
  br label %21, !dbg !6958

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !6959
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #25, !dbg !6960
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #25, !dbg !6961
  ret i32 0, !dbg !6962
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #14 !dbg !6963 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6965
  %2 = and i32 %1, 240, !dbg !6965
  ret i32 %2, !dbg !6966
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #13 !dbg !6967 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !6968
  %2 = icmp eq i32 %1, 1, !dbg !6972
  br i1 %2, label %7, label %3, !dbg !6973

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #25, !dbg !6974
  br label %4, !dbg !6976

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !6977
  %6 = icmp eq i32 %5, 1, !dbg !6978
  br i1 %6, label %7, label %4, !dbg !6976, !llvm.loop !6979

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #25, !dbg !6981
  br label %8, !dbg !6984

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #25, !dbg !6985
  %10 = icmp eq i32 %9, 1, !dbg !6986
  br i1 %10, label %11, label %8, !dbg !6984, !llvm.loop !6987

11:                                               ; preds = %8
  ret void, !dbg !6989
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !6990 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !6991
  %2 = icmp eq i32 %1, 8, !dbg !6993
  br i1 %2, label %3, label %4, !dbg !6994

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !6995
  tail call fastcc void @stm32_clock_switch_to_hsi() #25, !dbg !6997
  br label %4, !dbg !6998

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #25, !dbg !6999
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7000
  %6 = and i32 %5, -196609, !dbg !7000
  %7 = or i32 %6, 65536, !dbg !7000
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7000
  tail call void @config_pll_sysclock() #24, !dbg !7001
  tail call fastcc void @LL_RCC_PLL_Enable() #25, !dbg !7002
  br label %8, !dbg !7003

8:                                                ; preds = %8, %4
  %9 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #25, !dbg !7004
  %10 = icmp eq i32 %9, 1, !dbg !7005
  br i1 %10, label %11, label %8, !dbg !7003, !llvm.loop !7006

11:                                               ; preds = %8
  ret void, !dbg !7008
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #13 !dbg !7009 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7011, metadata !DIExpression()), !dbg !7012
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7013
  %2 = and i32 %1, -241, !dbg !7013
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7013
  ret void, !dbg !7014
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #13 !dbg !7015 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7017, metadata !DIExpression()), !dbg !7018
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7019
  %3 = and i32 %2, -4, !dbg !7019
  %4 = or i32 %3, %0, !dbg !7019
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7019
  ret void, !dbg !7020
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #14 !dbg !7021 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7022
  %2 = and i32 %1, 12, !dbg !7022
  ret i32 %2, !dbg !7023
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #13 !dbg !7024 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !7026, metadata !DIExpression()), !dbg !7027
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7028
  %2 = and i32 %1, -7169, !dbg !7028
  %3 = or i32 %2, 4096, !dbg !7028
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7028
  ret void, !dbg !7029
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #13 !dbg !7030 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7032, metadata !DIExpression()), !dbg !7033
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7034
  %2 = and i32 %1, -57345, !dbg !7034
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !7034
  ret void, !dbg !7035
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #13 !dbg !7036 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !7037
  %2 = icmp eq i32 %1, 1, !dbg !7039
  br i1 %2, label %7, label %3, !dbg !7040

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #25, !dbg !7041
  br label %4, !dbg !7043

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !7044
  %6 = icmp eq i32 %5, 1, !dbg !7045
  br i1 %6, label %7, label %4, !dbg !7043, !llvm.loop !7046

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #25, !dbg !7048
  br label %8, !dbg !7049

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !7050
  %10 = icmp eq i32 %9, 0, !dbg !7051
  br i1 %10, label %11, label %8, !dbg !7049, !llvm.loop !7052

11:                                               ; preds = %8
  ret void, !dbg !7054
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #13 !dbg !7055 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7056
  %2 = and i32 %1, -16777217, !dbg !7056
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7056
  ret void, !dbg !7057
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #13 !dbg !7058 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7059
  %2 = or i32 %1, 16777216, !dbg !7059
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7059
  ret void, !dbg !7060
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #14 !dbg !7061 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7062
  %2 = lshr i32 %1, 25, !dbg !7063
  %3 = and i32 %2, 1, !dbg !7063
  ret i32 %3, !dbg !7064
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #14 !dbg !7065 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7066
  %2 = lshr i32 %1, 1, !dbg !7067
  %3 = and i32 %2, 1, !dbg !7067
  ret i32 %3, !dbg !7068
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #13 !dbg !7069 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7070
  %2 = or i32 %1, 1, !dbg !7070
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !7070
  ret void, !dbg !7071
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #13 !dbg !7072 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7073
  %2 = or i32 %1, 1, !dbg !7073
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7073
  ret void, !dbg !7074
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #14 !dbg !7075 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !7076
  %2 = lshr i32 %1, 1, !dbg !7077
  %3 = and i32 %2, 1, !dbg !7077
  ret i32 %3, !dbg !7078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #12 !dbg !7079 {
  ret i32 16000000, !dbg !7081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #13 !dbg !7084 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #25, !dbg !7085
  ret void, !dbg !7086
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #13 !dbg !7087 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7091, metadata !DIExpression()), !dbg !7095
  call void @llvm.dbg.value(metadata i32 16, metadata !7092, metadata !DIExpression()), !dbg !7095
  call void @llvm.dbg.value(metadata i32 336, metadata !7093, metadata !DIExpression()), !dbg !7095
  call void @llvm.dbg.value(metadata i32 65536, metadata !7094, metadata !DIExpression()), !dbg !7095
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7096
  %2 = and i32 %1, -4227072, !dbg !7096
  %3 = or i32 %2, 21520, !dbg !7096
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7096
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7097
  %5 = and i32 %4, -196609, !dbg !7097
  %6 = or i32 %5, 65536, !dbg !7097
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !7097
  ret void, !dbg !7098
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #15 !dbg !7099 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #25, !dbg !7100
  ret void, !dbg !7101
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #15 !dbg !7102 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !7105, metadata !DIExpression()), !dbg !7107
  %2 = bitcast i32* %1 to i8*, !dbg !7108
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !7108
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7106, metadata !DIExpression()), !dbg !7109
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7110
  %4 = or i32 %3, 268435456, !dbg !7110
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7110
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !7111
  %6 = and i32 %5, 268435456, !dbg !7111
  store volatile i32 %6, i32* %1, align 4, !dbg !7112
  %7 = load volatile i32, i32* %1, align 4, !dbg !7113
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !7114
  ret void, !dbg !7114
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7115 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7117, metadata !DIExpression()), !dbg !7118
  %2 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !7119
  br i1 %2, label %3, label %4, !dbg !7121

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !7122
  br label %4, !dbg !7123

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !7118
  ret i32 %5, !dbg !7124
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !7125 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !7129, metadata !DIExpression()), !dbg !7130
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7131, !srcloc !7133
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !7134
  ret i1 %1, !dbg !7135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !7136 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !7137
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !7138
  ret void, !dbg !7139
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !7140 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7142, metadata !DIExpression()), !dbg !7143
  %2 = icmp eq i32 %0, 10, !dbg !7144
  br i1 %2, label %3, label %4, !dbg !7146

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !7147
  br label %4, !dbg !7149

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !7150
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !7151
  ret i32 %0, !dbg !7152
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7153 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !7156, metadata !DIExpression()), !dbg !7158
  call void @llvm.dbg.value(metadata i8 %0, metadata !7157, metadata !DIExpression()), !dbg !7158
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7159, !srcloc !7161
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !7162
  ret void, !dbg !7163
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !7164 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !7166, metadata !DIExpression()), !dbg !7169
  call void @llvm.dbg.value(metadata i8 %0, metadata !7167, metadata !DIExpression()), !dbg !7169
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !7170
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !7168, metadata !DIExpression()), !dbg !7169
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !7171
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !7171
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #24, !dbg !7172
  ret void, !dbg !7173
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !7174 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !7176, metadata !DIExpression()), !dbg !7177
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #24, !dbg !7178
  ret i1 %1, !dbg !7179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #12 !dbg !7180 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !7227, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !7228, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !7229, metadata !DIExpression()), !dbg !7230
  ret void, !dbg !7231
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !7232 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7234, metadata !DIExpression()), !dbg !7239
  call void @llvm.dbg.value(metadata i8 %1, metadata !7235, metadata !DIExpression()), !dbg !7239
  call void @llvm.dbg.value(metadata i32 %2, metadata !7236, metadata !DIExpression()), !dbg !7239
  %5 = bitcast i32* %4 to i8*, !dbg !7240
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7240
  call void @llvm.dbg.value(metadata i32* %4, metadata !7238, metadata !DIExpression(DW_OP_deref)), !dbg !7239
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #25, !dbg !7241
  call void @llvm.dbg.value(metadata i32 %6, metadata !7237, metadata !DIExpression()), !dbg !7239
  %7 = icmp eq i32 %6, 0, !dbg !7242
  br i1 %7, label %8, label %31, !dbg !7244

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !7237, metadata !DIExpression()), !dbg !7239
  %9 = and i32 %2, 131072, !dbg !7245
  %10 = icmp eq i32 %9, 0, !dbg !7247
  br i1 %10, label %28, label %11, !dbg !7248

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !7249
  %13 = icmp eq i32 %12, 0, !dbg !7252
  br i1 %13, label %18, label %14, !dbg !7253

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !7254
  %16 = shl nuw i32 1, %15, !dbg !7254
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #25, !dbg !7256
  br label %25, !dbg !7257

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !7258
  %20 = icmp eq i32 %19, 0, !dbg !7260
  %21 = zext i8 %1 to i32, !dbg !7239
  br i1 %20, label %25, label %22, !dbg !7261

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !7262
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #25, !dbg !7264
  br label %25, !dbg !7265

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !7266
  %27 = load i32, i32* %4, align 4, !dbg !7267
  call void @llvm.dbg.value(metadata i32 %30, metadata !7238, metadata !DIExpression()), !dbg !7239
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #25, !dbg !7268
  br label %31, !dbg !7269

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !7266
  %30 = load i32, i32* %4, align 4, !dbg !7267
  call void @llvm.dbg.value(metadata i32 %30, metadata !7238, metadata !DIExpression()), !dbg !7239
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #25, !dbg !7268
  call void @llvm.dbg.value(metadata i32 0, metadata !7237, metadata !DIExpression()), !dbg !7239
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7270
  ret i32 %6, !dbg !7270
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #14 !dbg !7271 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7275, metadata !DIExpression()), !dbg !7280
  call void @llvm.dbg.value(metadata i32* %1, metadata !7276, metadata !DIExpression()), !dbg !7280
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7281
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7281
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7281
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7277, metadata !DIExpression()), !dbg !7280
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7282
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7282
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7282
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7279, metadata !DIExpression()), !dbg !7280
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #25, !dbg !7283
  store i32 %9, i32* %1, align 4, !dbg !7284
  ret i32 0, !dbg !7285
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #13 !dbg !7286 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7288, metadata !DIExpression()), !dbg !7294
  call void @llvm.dbg.value(metadata i32 %1, metadata !7289, metadata !DIExpression()), !dbg !7294
  call void @llvm.dbg.value(metadata i32 %2, metadata !7290, metadata !DIExpression()), !dbg !7294
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7295
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !7295
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !7295
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !7291, metadata !DIExpression()), !dbg !7294
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !7296
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !7296
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !7296
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !7292, metadata !DIExpression()), !dbg !7294
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #25, !dbg !7297
  call void @llvm.dbg.value(metadata i32 %10, metadata !7293, metadata !DIExpression()), !dbg !7294
  %11 = xor i32 %1, -1, !dbg !7298
  %12 = and i32 %10, %11, !dbg !7299
  %13 = and i32 %2, %1, !dbg !7300
  %14 = or i32 %12, %13, !dbg !7301
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #25, !dbg !7302
  ret i32 0, !dbg !7303
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7304 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7306, metadata !DIExpression()), !dbg !7310
  call void @llvm.dbg.value(metadata i32 %1, metadata !7307, metadata !DIExpression()), !dbg !7310
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7311
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7311
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7311
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7308, metadata !DIExpression()), !dbg !7310
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7312
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7312
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7312
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7309, metadata !DIExpression()), !dbg !7310
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !7313
  store volatile i32 %1, i32* %9, align 4, !dbg !7313
  ret i32 0, !dbg !7314
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7315 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7317, metadata !DIExpression()), !dbg !7321
  call void @llvm.dbg.value(metadata i32 %1, metadata !7318, metadata !DIExpression()), !dbg !7321
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7322
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7322
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7322
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7319, metadata !DIExpression()), !dbg !7321
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7323
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7323
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7323
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7320, metadata !DIExpression()), !dbg !7321
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #25, !dbg !7324
  ret i32 0, !dbg !7325
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #13 !dbg !7326 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7328, metadata !DIExpression()), !dbg !7332
  call void @llvm.dbg.value(metadata i32 %1, metadata !7329, metadata !DIExpression()), !dbg !7332
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7333
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7333
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7333
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7330, metadata !DIExpression()), !dbg !7332
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7334
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7334
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7334
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7331, metadata !DIExpression()), !dbg !7332
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !7335
  %10 = load volatile i32, i32* %9, align 4, !dbg !7335
  %11 = xor i32 %10, %1, !dbg !7335
  store volatile i32 %11, i32* %9, align 4, !dbg !7335
  ret i32 0, !dbg !7336
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !7337 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7339, metadata !DIExpression()), !dbg !7349
  call void @llvm.dbg.value(metadata i8 %1, metadata !7340, metadata !DIExpression()), !dbg !7349
  call void @llvm.dbg.value(metadata i32 %2, metadata !7341, metadata !DIExpression()), !dbg !7349
  call void @llvm.dbg.value(metadata i32 %3, metadata !7342, metadata !DIExpression()), !dbg !7349
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7350
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7350
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7350
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7343, metadata !DIExpression()), !dbg !7349
  call void @llvm.dbg.value(metadata i8* undef, metadata !7344, metadata !DIExpression()), !dbg !7349
  call void @llvm.dbg.value(metadata i32 0, metadata !7346, metadata !DIExpression()), !dbg !7349
  call void @llvm.dbg.value(metadata i32 0, metadata !7347, metadata !DIExpression()), !dbg !7349
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !7351

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !7352
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #25, !dbg !7356
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7357
  %12 = load i32, i32* %11, align 4, !dbg !7357
  %13 = icmp eq i32 %10, %12, !dbg !7358
  br i1 %13, label %14, label %29, !dbg !7359

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #24, !dbg !7360
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #24, !dbg !7362
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #24, !dbg !7363
  br label %29, !dbg !7364

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7365
  %17 = load i8*, i8** %16, align 4, !dbg !7365
  call void @llvm.dbg.value(metadata i8* %17, metadata !7344, metadata !DIExpression()), !dbg !7349
  %18 = zext i8 %1 to i32, !dbg !7366
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #24, !dbg !7368
  %20 = icmp eq i32 %19, 0, !dbg !7369
  br i1 %20, label %21, label %29, !dbg !7370

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7371
  %23 = load i32, i32* %22, align 4, !dbg !7371
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #25, !dbg !7372
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !7373

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !7346, metadata !DIExpression()), !dbg !7349
  br label %27, !dbg !7374

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !7346, metadata !DIExpression()), !dbg !7349
  br label %27, !dbg !7376

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !7346, metadata !DIExpression()), !dbg !7349
  br label %27, !dbg !7377

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !7349
  call void @llvm.dbg.value(metadata i32 %28, metadata !7346, metadata !DIExpression()), !dbg !7349
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #24, !dbg !7378
  tail call void @stm32_exti_enable(i32 noundef %18) #24, !dbg !7379
  br label %29, !dbg !7379

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !7349
  call void @llvm.dbg.value(metadata i32 %30, metadata !7347, metadata !DIExpression()), !dbg !7349
  call void @llvm.dbg.label(metadata !7348), !dbg !7380
  ret i32 %30, !dbg !7381
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #11 !dbg !7382 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7384, metadata !DIExpression()), !dbg !7388
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7385, metadata !DIExpression()), !dbg !7388
  call void @llvm.dbg.value(metadata i1 %2, metadata !7386, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7388
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7389
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !7389
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !7389
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !7387, metadata !DIExpression()), !dbg !7388
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !7390
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #25, !dbg !7391
  ret i32 %8, !dbg !7392
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #11 !dbg !7393 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7399, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7400, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.value(metadata i1 %2, metadata !7401, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7402
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #25, !dbg !7403
  br i1 %4, label %10, label %5, !dbg !7405

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7406
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #25, !dbg !7409
  %8 = or i1 %7, %2, !dbg !7410
  %9 = select i1 %8, i32 0, i32 -22, !dbg !7410
  br i1 %2, label %11, label %13, !dbg !7410

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !7411

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7412
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #25, !dbg !7415
  br label %13, !dbg !7416

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !7402
  ret i32 %14, !dbg !7417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7418 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7422, metadata !DIExpression()), !dbg !7423
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7424
  %3 = icmp eq %struct._snode* %2, null, !dbg !7424
  ret i1 %3, !dbg !7424
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !7425 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7429, metadata !DIExpression()), !dbg !7433
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7430, metadata !DIExpression()), !dbg !7433
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7431, metadata !DIExpression()), !dbg !7433
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7434
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7432, metadata !DIExpression()), !dbg !7433
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7431, metadata !DIExpression()), !dbg !7433
  %4 = icmp eq %struct._snode* %3, null, !dbg !7436
  br i1 %4, label %15, label %5, !dbg !7434

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7432, metadata !DIExpression()), !dbg !7433
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7431, metadata !DIExpression()), !dbg !7433
  %6 = icmp eq %struct._snode* %3, %1, !dbg !7438
  br i1 %6, label %9, label %11, !dbg !7441

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7432, metadata !DIExpression()), !dbg !7433
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7431, metadata !DIExpression()), !dbg !7433
  %8 = icmp eq %struct._snode* %13, %1, !dbg !7438
  br i1 %8, label %9, label %11, !dbg !7441, !llvm.loop !7442

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #25, !dbg !7443
  br label %15, !dbg !7443

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7432, metadata !DIExpression()), !dbg !7433
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7431, metadata !DIExpression()), !dbg !7433
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #25, !dbg !7436
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7432, metadata !DIExpression()), !dbg !7433
  %14 = icmp eq %struct._snode* %13, null, !dbg !7436
  br i1 %14, label %15, label %7, !dbg !7434, !llvm.loop !7442

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !7445
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #8 !dbg !7446 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7450, metadata !DIExpression()), !dbg !7452
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7451, metadata !DIExpression()), !dbg !7452
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7453
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #25, !dbg !7453
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !7453
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7454
  %5 = icmp eq %struct._snode* %4, null, !dbg !7454
  br i1 %5, label %6, label %8, !dbg !7453

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7456
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !7456
  br label %8, !dbg !7456

8:                                                ; preds = %6, %2
  ret void, !dbg !7453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7458 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7462, metadata !DIExpression()), !dbg !7463
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7464
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7464
  ret %struct._snode* %3, !dbg !7465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7466 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7470, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7471, metadata !DIExpression()), !dbg !7472
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7473
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7474
  ret void, !dbg !7475
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7476 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7478, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7479, metadata !DIExpression()), !dbg !7480
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7481
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7482
  ret void, !dbg !7483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7484 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7486, metadata !DIExpression()), !dbg !7487
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7488
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7488
  ret %struct._snode* %3, !dbg !7489
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !7490 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7492, metadata !DIExpression()), !dbg !7494
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7493, metadata !DIExpression()), !dbg !7494
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7495
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7496
  ret void, !dbg !7497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #8 !dbg !7498 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7502, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7503, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !7504, metadata !DIExpression()), !dbg !7505
  %4 = icmp eq %struct._snode* %1, null, !dbg !7506
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #25, !dbg !7508
  br i1 %4, label %6, label %11, !dbg !7509

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !7510
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7512
  %8 = icmp eq %struct._snode* %7, %2, !dbg !7512
  br i1 %8, label %9, label %15, !dbg !7510

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7514
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !7514
  br label %15, !dbg !7514

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !7516
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7518
  %13 = icmp eq %struct._snode* %12, %2, !dbg !7518
  br i1 %13, label %14, label %15, !dbg !7516

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !7520
  br label %15, !dbg !7520

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !7509
  ret void, !dbg !7509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !7522 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7526, metadata !DIExpression()), !dbg !7527
  %2 = icmp eq %struct._snode* %0, null, !dbg !7528
  br i1 %2, label %5, label %3, !dbg !7528

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #25, !dbg !7528
  br label %5, !dbg !7528

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !7528
  ret %struct._snode* %6, !dbg !7528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7529 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7531, metadata !DIExpression()), !dbg !7532
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #25, !dbg !7533
  ret %struct._snode* %2, !dbg !7533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !7534 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7536, metadata !DIExpression()), !dbg !7537
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7538
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7538
  ret %struct._snode* %3, !dbg !7539
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !7540 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7542, metadata !DIExpression()), !dbg !7545
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #25, !dbg !7546, !range !7547
  call void @llvm.dbg.value(metadata i32 %2, metadata !7543, metadata !DIExpression()), !dbg !7545
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #25, !dbg !7548
  call void @llvm.dbg.value(metadata i32 %3, metadata !7544, metadata !DIExpression()), !dbg !7545
  ret i32 %3, !dbg !7549
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !7550 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7552, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.value(metadata i8* %1, metadata !7553, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.value(metadata i8* %1, metadata !7554, metadata !DIExpression()), !dbg !7555
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !7556
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !7556
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7557
  %6 = bitcast i8* %5 to %struct.device**, !dbg !7557
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !7557
  %8 = shl nuw i32 1, %0, !dbg !7558
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #25, !dbg !7559
  ret void, !dbg !7560
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7561 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !7565, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata i32 %1, metadata !7566, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7567, metadata !DIExpression()), !dbg !7571
  %4 = bitcast i64* %3 to i8*, !dbg !7572
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7572
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !7569, metadata !DIExpression()), !dbg !7571
  store i64 70368744177732, i64* %3, align 8, !dbg !7573
  call void @llvm.dbg.value(metadata i64* %3, metadata !7569, metadata !DIExpression(DW_OP_deref)), !dbg !7571
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #25, !dbg !7574
  call void @llvm.dbg.value(metadata i32 %5, metadata !7570, metadata !DIExpression()), !dbg !7571
  %6 = icmp eq i32 %5, 0, !dbg !7575
  br i1 %6, label %7, label %8, !dbg !7577

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #25, !dbg !7578
  br label %8, !dbg !7579

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7580
  ret void, !dbg !7580
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !7581 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7583, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.value(metadata i8* %0, metadata !7584, metadata !DIExpression()), !dbg !7586
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !7587
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !7585, metadata !DIExpression()), !dbg !7586
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !7588
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !7588
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #24, !dbg !7589
  ret i32 %5, !dbg !7590
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7593, metadata !DIExpression()), !dbg !7596
  call void @llvm.dbg.value(metadata i32 %1, metadata !7594, metadata !DIExpression()), !dbg !7596
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #25, !dbg !7597
  call void @llvm.dbg.value(metadata i32 %3, metadata !7595, metadata !DIExpression()), !dbg !7596
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #25, !dbg !7598
  ret void, !dbg !7599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #12 !dbg !7600 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7604, metadata !DIExpression()), !dbg !7605
  %2 = sdiv i32 %0, 4, !dbg !7606
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !7607
  %6 = add nsw i32 %5, 16, !dbg !7608
  %7 = shl i32 15, %6, !dbg !7609
  %8 = or i32 %7, %2, !dbg !7610
  ret i32 %8, !dbg !7611
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7616, metadata !DIExpression()), !dbg !7618
  call void @llvm.dbg.value(metadata i32 %1, metadata !7617, metadata !DIExpression()), !dbg !7618
  %3 = and i32 %1, 255, !dbg !7619
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !7619
  %5 = load volatile i32, i32* %4, align 4, !dbg !7619
  %6 = lshr i32 %1, 16, !dbg !7619
  %7 = xor i32 %6, -1, !dbg !7619
  %8 = and i32 %5, %7, !dbg !7619
  call void @llvm.dbg.value(metadata i32 %6, metadata !7620, metadata !DIExpression()) #23, !dbg !7624
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7626, !srcloc !7627
  call void @llvm.dbg.value(metadata i32 %9, metadata !7623, metadata !DIExpression()) #23, !dbg !7624
  call void @llvm.dbg.value(metadata i32 %9, metadata !7628, metadata !DIExpression()) #23, !dbg !7633
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !7635, !range !5856
  %11 = shl i32 %0, %10, !dbg !7619
  %12 = or i32 %11, %8, !dbg !7619
  store volatile i32 %12, i32* %4, align 4, !dbg !7619
  ret void, !dbg !7636
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7637 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7641, metadata !DIExpression()), !dbg !7646
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !7642, metadata !DIExpression()), !dbg !7646
  call void @llvm.dbg.value(metadata i32 %2, metadata !7643, metadata !DIExpression()), !dbg !7646
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7647
  %5 = icmp eq %struct._snode* %4, null, !dbg !7647
  br i1 %5, label %21, label %6, !dbg !7647

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #25, !dbg !7649
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7645, metadata !DIExpression()), !dbg !7646
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !7644, metadata !DIExpression()), !dbg !7646
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !7650
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !7650
  %11 = load i32, i32* %10, align 4, !dbg !7650
  %12 = and i32 %11, %2, !dbg !7654
  %13 = icmp eq i32 %12, 0, !dbg !7654
  br i1 %13, label %19, label %14, !dbg !7655

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !7644, metadata !DIExpression()), !dbg !7646
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !7656
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !7656
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !7656
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #24, !dbg !7658
  br label %19, !dbg !7659

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7644, metadata !DIExpression()), !dbg !7646
  %20 = icmp eq %struct._snode* %8, null, !dbg !7660
  br i1 %20, label %21, label %6, !dbg !7660

21:                                               ; preds = %19, %3
  ret void, !dbg !7661
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !7662 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7664, metadata !DIExpression()), !dbg !7665
  %2 = and i32 %0, 255, !dbg !7666
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !7666
  %4 = load volatile i32, i32* %3, align 4, !dbg !7666
  %5 = lshr i32 %0, 16, !dbg !7666
  %6 = and i32 %4, %5, !dbg !7666
  call void @llvm.dbg.value(metadata i32 %5, metadata !7620, metadata !DIExpression()) #23, !dbg !7667
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !7669, !srcloc !7627
  call void @llvm.dbg.value(metadata i32 %7, metadata !7623, metadata !DIExpression()) #23, !dbg !7667
  call void @llvm.dbg.value(metadata i32 %7, metadata !7628, metadata !DIExpression()) #23, !dbg !7670
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7672, !range !5856
  %9 = lshr i32 %6, %8, !dbg !7673
  ret i32 %9, !dbg !7674
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !7675 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7680, metadata !DIExpression()), !dbg !7682
  call void @llvm.dbg.value(metadata i32 %1, metadata !7681, metadata !DIExpression()), !dbg !7682
  %3 = shl i32 %1, 16, !dbg !7683
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !7683
  store volatile i32 %3, i32* %4, align 4, !dbg !7683
  ret void, !dbg !7684
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !7685 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7689, metadata !DIExpression()), !dbg !7690
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7691
  %3 = load volatile i32, i32* %2, align 4, !dbg !7691
  ret i32 %3, !dbg !7692
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !7693 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7695, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.value(metadata i32 %1, metadata !7696, metadata !DIExpression()), !dbg !7697
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7698
  store volatile i32 %1, i32* %3, align 4, !dbg !7698
  ret void, !dbg !7699
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #14 !dbg !7700 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7702, metadata !DIExpression()), !dbg !7703
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !7704
  %3 = load volatile i32, i32* %2, align 4, !dbg !7704
  ret i32 %3, !dbg !7705
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #8 !dbg !7706 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7710, metadata !DIExpression()), !dbg !7712
  call void @llvm.dbg.value(metadata i32* %1, metadata !7711, metadata !DIExpression()), !dbg !7712
  %3 = and i32 %0, 131072, !dbg !7713
  %4 = icmp eq i32 %3, 0, !dbg !7715
  br i1 %4, label %22, label %5, !dbg !7716

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !7717
  %6 = and i32 %0, 2, !dbg !7719
  %7 = icmp eq i32 %6, 0, !dbg !7721
  br i1 %7, label %11, label %8, !dbg !7722

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !7723
  %10 = icmp eq i32 %9, 0, !dbg !7723
  br i1 %10, label %33, label %11, !dbg !7726

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !7727
  store i32 %12, i32* %1, align 4, !dbg !7727
  %13 = and i32 %0, 16, !dbg !7728
  %14 = icmp eq i32 %13, 0, !dbg !7730
  br i1 %14, label %17, label %15, !dbg !7731

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !7732
  br label %31, !dbg !7734

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !7735
  %19 = icmp eq i32 %18, 0, !dbg !7737
  br i1 %19, label %33, label %20, !dbg !7738

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !7739
  br label %31, !dbg !7741

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !7742
  %24 = icmp eq i32 %23, 0, !dbg !7744
  br i1 %24, label %31, label %25, !dbg !7745

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !7746
  %27 = icmp eq i32 %26, 0, !dbg !7749
  br i1 %27, label %28, label %31, !dbg !7750

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !7751
  br label %33, !dbg !7752

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !7712
  ret i32 %34, !dbg !7752
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !7753 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7757, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i32 %1, metadata !7758, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i32 %2, metadata !7759, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i32 %3, metadata !7760, metadata !DIExpression()), !dbg !7768
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7769
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7769
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7769
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7761, metadata !DIExpression()), !dbg !7768
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !7770
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !7770
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !7770
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !7762, metadata !DIExpression()), !dbg !7768
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #25, !dbg !7771
  call void @llvm.dbg.value(metadata i32 %11, metadata !7763, metadata !DIExpression()), !dbg !7768
  %12 = and i32 %2, 48, !dbg !7772
  call void @llvm.dbg.value(metadata i32 %12, metadata !7764, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i32 %2, metadata !7765, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !7768
  call void @llvm.dbg.value(metadata i32 %2, metadata !7766, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !7768
  call void @llvm.dbg.value(metadata i32 %2, metadata !7767, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !7768
  %13 = lshr i32 %2, 6, !dbg !7773
  %14 = and i32 %13, 1, !dbg !7773
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #25, !dbg !7774
  %15 = lshr i32 %2, 7, !dbg !7775
  %16 = and i32 %15, 3, !dbg !7775
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #25, !dbg !7776
  %17 = lshr i32 %2, 9, !dbg !7777
  %18 = and i32 %17, 3, !dbg !7777
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #25, !dbg !7778
  %19 = icmp eq i32 %12, 32, !dbg !7779
  br i1 %19, label %20, label %24, !dbg !7781

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !7782
  br i1 %21, label %22, label %23, !dbg !7785

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !7786
  br label %24, !dbg !7788

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !7789
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !7791
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #25, !dbg !7792
  ret void, !dbg !7793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #12 !dbg !7794 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7796, metadata !DIExpression()), !dbg !7798
  %2 = shl nuw i32 1, %0, !dbg !7799
  call void @llvm.dbg.value(metadata i32 %2, metadata !7797, metadata !DIExpression()), !dbg !7798
  ret i32 %2, !dbg !7800
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !7801 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7805, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.value(metadata i32 %1, metadata !7806, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.value(metadata i32 %2, metadata !7807, metadata !DIExpression()), !dbg !7808
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !7809
  %5 = load volatile i32, i32* %4, align 4, !dbg !7809
  %6 = xor i32 %1, -1, !dbg !7809
  %7 = and i32 %5, %6, !dbg !7809
  %8 = mul i32 %2, %1, !dbg !7809
  %9 = or i32 %7, %8, !dbg !7809
  store volatile i32 %9, i32* %4, align 4, !dbg !7809
  ret void, !dbg !7810
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7811 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7813, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i32 %1, metadata !7814, metadata !DIExpression()), !dbg !7816
  call void @llvm.dbg.value(metadata i32 %2, metadata !7815, metadata !DIExpression()), !dbg !7816
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !7817
  %5 = load volatile i32, i32* %4, align 4, !dbg !7817
  call void @llvm.dbg.value(metadata i32 %1, metadata !7620, metadata !DIExpression()) #23, !dbg !7818
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7820, !srcloc !7627
  call void @llvm.dbg.value(metadata i32 %6, metadata !7623, metadata !DIExpression()) #23, !dbg !7818
  call void @llvm.dbg.value(metadata i32 %6, metadata !7628, metadata !DIExpression()) #23, !dbg !7821
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7823, !range !5856
  %8 = shl nuw nsw i32 %7, 1, !dbg !7817
  %9 = shl i32 3, %8, !dbg !7817
  %10 = xor i32 %9, -1, !dbg !7817
  %11 = and i32 %5, %10, !dbg !7817
  call void @llvm.dbg.value(metadata i32 %1, metadata !7620, metadata !DIExpression()) #23, !dbg !7824
  call void @llvm.dbg.value(metadata i32 %6, metadata !7623, metadata !DIExpression()) #23, !dbg !7824
  call void @llvm.dbg.value(metadata i32 %6, metadata !7628, metadata !DIExpression()) #23, !dbg !7826
  %12 = shl i32 %2, %8, !dbg !7817
  %13 = or i32 %11, %12, !dbg !7817
  store volatile i32 %13, i32* %4, align 4, !dbg !7817
  ret void, !dbg !7828
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7829 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7831, metadata !DIExpression()), !dbg !7834
  call void @llvm.dbg.value(metadata i32 %1, metadata !7832, metadata !DIExpression()), !dbg !7834
  call void @llvm.dbg.value(metadata i32 %2, metadata !7833, metadata !DIExpression()), !dbg !7834
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !7835
  %5 = load volatile i32, i32* %4, align 4, !dbg !7835
  call void @llvm.dbg.value(metadata i32 %1, metadata !7620, metadata !DIExpression()) #23, !dbg !7836
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7838, !srcloc !7627
  call void @llvm.dbg.value(metadata i32 %6, metadata !7623, metadata !DIExpression()) #23, !dbg !7836
  call void @llvm.dbg.value(metadata i32 %6, metadata !7628, metadata !DIExpression()) #23, !dbg !7839
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7841, !range !5856
  %8 = shl nuw nsw i32 %7, 1, !dbg !7835
  %9 = shl i32 3, %8, !dbg !7835
  %10 = xor i32 %9, -1, !dbg !7835
  %11 = and i32 %5, %10, !dbg !7835
  call void @llvm.dbg.value(metadata i32 %1, metadata !7620, metadata !DIExpression()) #23, !dbg !7842
  call void @llvm.dbg.value(metadata i32 %6, metadata !7623, metadata !DIExpression()) #23, !dbg !7842
  call void @llvm.dbg.value(metadata i32 %6, metadata !7628, metadata !DIExpression()) #23, !dbg !7844
  %12 = shl i32 %2, %8, !dbg !7835
  %13 = or i32 %11, %12, !dbg !7835
  store volatile i32 %13, i32* %4, align 4, !dbg !7835
  ret void, !dbg !7846
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7847 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7849, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i32 %1, metadata !7850, metadata !DIExpression()), !dbg !7852
  call void @llvm.dbg.value(metadata i32 %2, metadata !7851, metadata !DIExpression()), !dbg !7852
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !7853
  %5 = load volatile i32, i32* %4, align 4, !dbg !7853
  call void @llvm.dbg.value(metadata i32 %1, metadata !7620, metadata !DIExpression()) #23, !dbg !7854
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7856, !srcloc !7627
  call void @llvm.dbg.value(metadata i32 %6, metadata !7623, metadata !DIExpression()) #23, !dbg !7854
  call void @llvm.dbg.value(metadata i32 %6, metadata !7628, metadata !DIExpression()) #23, !dbg !7857
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7859, !range !5856
  %8 = shl nuw nsw i32 %7, 2, !dbg !7853
  %9 = shl i32 15, %8, !dbg !7853
  %10 = xor i32 %9, -1, !dbg !7853
  %11 = and i32 %5, %10, !dbg !7853
  call void @llvm.dbg.value(metadata i32 %1, metadata !7620, metadata !DIExpression()) #23, !dbg !7860
  call void @llvm.dbg.value(metadata i32 %6, metadata !7623, metadata !DIExpression()) #23, !dbg !7860
  call void @llvm.dbg.value(metadata i32 %6, metadata !7628, metadata !DIExpression()) #23, !dbg !7862
  %12 = shl i32 %2, %8, !dbg !7853
  %13 = or i32 %11, %12, !dbg !7853
  store volatile i32 %13, i32* %4, align 4, !dbg !7853
  ret void, !dbg !7864
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7865 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7867, metadata !DIExpression()), !dbg !7870
  call void @llvm.dbg.value(metadata i32 %1, metadata !7868, metadata !DIExpression()), !dbg !7870
  call void @llvm.dbg.value(metadata i32 %2, metadata !7869, metadata !DIExpression()), !dbg !7870
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !7871
  %5 = load volatile i32, i32* %4, align 4, !dbg !7871
  %6 = lshr i32 %1, 8, !dbg !7871
  call void @llvm.dbg.value(metadata i32 %6, metadata !7620, metadata !DIExpression()) #23, !dbg !7872
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7874, !srcloc !7627
  call void @llvm.dbg.value(metadata i32 %7, metadata !7623, metadata !DIExpression()) #23, !dbg !7872
  call void @llvm.dbg.value(metadata i32 %7, metadata !7628, metadata !DIExpression()) #23, !dbg !7875
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7877, !range !5856
  %9 = shl nuw nsw i32 %8, 2, !dbg !7871
  %10 = shl i32 15, %9, !dbg !7871
  %11 = xor i32 %10, -1, !dbg !7871
  %12 = and i32 %5, %11, !dbg !7871
  call void @llvm.dbg.value(metadata i32 %6, metadata !7620, metadata !DIExpression()) #23, !dbg !7878
  call void @llvm.dbg.value(metadata i32 %7, metadata !7623, metadata !DIExpression()) #23, !dbg !7878
  call void @llvm.dbg.value(metadata i32 %7, metadata !7628, metadata !DIExpression()) #23, !dbg !7880
  %13 = shl i32 %2, %9, !dbg !7871
  %14 = or i32 %12, %13, !dbg !7871
  store volatile i32 %14, i32* %4, align 4, !dbg !7871
  ret void, !dbg !7882
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7883 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7885, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i32 %1, metadata !7886, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i32 %2, metadata !7887, metadata !DIExpression()), !dbg !7888
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !7889
  %5 = load volatile i32, i32* %4, align 4, !dbg !7889
  call void @llvm.dbg.value(metadata i32 %1, metadata !7620, metadata !DIExpression()) #23, !dbg !7890
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7892, !srcloc !7627
  call void @llvm.dbg.value(metadata i32 %6, metadata !7623, metadata !DIExpression()) #23, !dbg !7890
  call void @llvm.dbg.value(metadata i32 %6, metadata !7628, metadata !DIExpression()) #23, !dbg !7893
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7895, !range !5856
  %8 = shl nuw nsw i32 %7, 1, !dbg !7889
  %9 = shl i32 3, %8, !dbg !7889
  %10 = xor i32 %9, -1, !dbg !7889
  %11 = and i32 %5, %10, !dbg !7889
  call void @llvm.dbg.value(metadata i32 %1, metadata !7620, metadata !DIExpression()) #23, !dbg !7896
  call void @llvm.dbg.value(metadata i32 %6, metadata !7623, metadata !DIExpression()) #23, !dbg !7896
  call void @llvm.dbg.value(metadata i32 %6, metadata !7628, metadata !DIExpression()) #23, !dbg !7898
  %12 = shl i32 %2, %8, !dbg !7889
  %13 = or i32 %11, %12, !dbg !7889
  store volatile i32 %13, i32* %4, align 4, !dbg !7889
  ret void, !dbg !7900
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !7901 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7903, metadata !DIExpression()), !dbg !7906
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7907
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !7907
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !7907
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !7904, metadata !DIExpression()), !dbg !7906
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !7908
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !7909
  %6 = tail call fastcc zeroext i1 @device_is_ready.46() #25, !dbg !7910
  br i1 %6, label %7, label %11, !dbg !7912

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #25, !dbg !7913
  call void @llvm.dbg.value(metadata i32 %8, metadata !7905, metadata !DIExpression()), !dbg !7906
  %9 = icmp slt i32 %8, 0, !dbg !7914
  %10 = select i1 %9, i32 %8, i32 0, !dbg !7916
  br label %11, !dbg !7916

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !7906
  ret i32 %12, !dbg !7917
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.46() unnamed_addr #1 !dbg !7918 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7922, metadata !DIExpression()), !dbg !7923
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7924, !srcloc !7926
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.47() #25, !dbg !7927
  ret i1 %1, !dbg !7928
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7929 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7933, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata i8 1, metadata !7934, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !7935, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata i32 0, metadata !7936, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7937, metadata !DIExpression()), !dbg !7938
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7939
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !7939
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !7939
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !7935, metadata !DIExpression()), !dbg !7938
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !7940
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !7943
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #25, !dbg !7944
  call void @llvm.dbg.value(metadata i32 %7, metadata !7936, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.value(metadata i32 %7, metadata !7936, metadata !DIExpression()), !dbg !7938
  ret i32 %7, !dbg !7945
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.47() unnamed_addr #1 !dbg !7946 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !7948, metadata !DIExpression()), !dbg !7949
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #24, !dbg !7950
  ret i1 %1, !dbg !7951
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7952 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7956, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i32 %1, metadata !7957, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i32 %2, metadata !7958, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i32 %3, metadata !7959, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.value(metadata i32 0, metadata !7960, metadata !DIExpression()), !dbg !7964
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #25, !dbg !7965
  %5 = icmp eq i32 %3, 17, !dbg !7966
  br i1 %5, label %6, label %14, !dbg !7967

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !7968
  call void @llvm.dbg.value(metadata i32 %7, metadata !7961, metadata !DIExpression()), !dbg !7969
  %8 = icmp eq i32 %7, 0, !dbg !7970
  %9 = shl nuw i32 1, %1, !dbg !7972
  br i1 %8, label %12, label %10, !dbg !7973

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !7974
  br label %14, !dbg !7976

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !7977
  br label %14, !dbg !7980

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !7981
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #15 !dbg !7982 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7984, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.value(metadata i8* %1, metadata !7985, metadata !DIExpression()), !dbg !7988
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7989
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !7989
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !7989
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !7986, metadata !DIExpression()), !dbg !7988
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !7990
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7990
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #25, !dbg !7992
  %9 = icmp eq i32 %8, 0, !dbg !7992
  br i1 %9, label %12, label %10, !dbg !7993

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7994
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #25, !dbg !7996
  br label %12, !dbg !7997

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7998
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #25, !dbg !8000
  %15 = icmp eq i32 %14, 0, !dbg !8000
  br i1 %15, label %19, label %16, !dbg !8001

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8002
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #25, !dbg !8003
  store i8 %18, i8* %1, align 1, !dbg !8004
  br label %19, !dbg !8005

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !7988
  ret i32 %20, !dbg !8006
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !8007 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8009, metadata !DIExpression()), !dbg !8013
  call void @llvm.dbg.value(metadata i8 %1, metadata !8010, metadata !DIExpression()), !dbg !8013
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8014
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8014
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8014
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8011, metadata !DIExpression()), !dbg !8013
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !8015

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8016
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #25, !dbg !8019
  %10 = icmp eq i32 %9, 0, !dbg !8019
  br i1 %10, label %18, label %11, !dbg !8020

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8021, !srcloc !8028
  call void @llvm.dbg.value(metadata i32 undef, metadata !8024, metadata !DIExpression()) #23, !dbg !8029
  call void @llvm.dbg.value(metadata i32 undef, metadata !8025, metadata !DIExpression()) #23, !dbg !8029
  call void @llvm.dbg.value(metadata i32 undef, metadata !8012, metadata !DIExpression()), !dbg !8013
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8030
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #25, !dbg !8032
  %15 = icmp eq i32 %14, 0, !dbg !8032
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !8021
  br i1 %15, label %17, label %19, !dbg !8033

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !8024, metadata !DIExpression()) #23, !dbg !8029
  call void @llvm.dbg.value(metadata i32 %16, metadata !8012, metadata !DIExpression()), !dbg !8013
  call void @llvm.dbg.value(metadata i32 undef, metadata !8034, metadata !DIExpression()) #23, !dbg !8037
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !8039, !srcloc !8040
  br label %18, !dbg !8041

18:                                               ; preds = %17, %7
  br label %7, !dbg !8016, !llvm.loop !8042

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !8021
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8044
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #25, !dbg !8045
  call void @llvm.dbg.value(metadata i32 %20, metadata !8034, metadata !DIExpression()) #23, !dbg !8046
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !8048, !srcloc !8040
  ret void, !dbg !8049
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #15 !dbg !8050 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8052, metadata !DIExpression()), !dbg !8055
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8056
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8056
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8056
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8053, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i32 0, metadata !8054, metadata !DIExpression()), !dbg !8055
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8057
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8057
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #25, !dbg !8059
  %8 = icmp ne i32 %7, 0, !dbg !8059
  %9 = zext i1 %8 to i32, !dbg !8060
  call void @llvm.dbg.value(metadata i32 %9, metadata !8054, metadata !DIExpression()), !dbg !8055
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8061
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #25, !dbg !8063
  %12 = icmp eq i32 %11, 0, !dbg !8063
  %13 = or i32 %9, 2, !dbg !8064
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !8064
  call void @llvm.dbg.value(metadata i32 %14, metadata !8054, metadata !DIExpression()), !dbg !8055
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8065
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #25, !dbg !8067
  %17 = icmp eq i32 %16, 0, !dbg !8067
  %18 = or i32 %14, 4, !dbg !8068
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !8068
  call void @llvm.dbg.value(metadata i32 %19, metadata !8054, metadata !DIExpression()), !dbg !8055
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8069
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #25, !dbg !8071
  %22 = icmp eq i32 %21, 0, !dbg !8071
  %23 = or i32 %19, 8, !dbg !8072
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !8072
  call void @llvm.dbg.value(metadata i32 %24, metadata !8054, metadata !DIExpression()), !dbg !8055
  %25 = and i32 %24, 8, !dbg !8073
  %26 = icmp eq i32 %25, 0, !dbg !8073
  br i1 %26, label %29, label %27, !dbg !8075

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8076
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #25, !dbg !8078
  br label %29, !dbg !8079

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !8080
  %31 = icmp eq i32 %30, 0, !dbg !8080
  br i1 %31, label %34, label %32, !dbg !8082

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8083
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #25, !dbg !8085
  br label %34, !dbg !8086

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !8087
  %36 = icmp eq i32 %35, 0, !dbg !8087
  br i1 %36, label %39, label %37, !dbg !8089

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8090
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #25, !dbg !8092
  br label %39, !dbg !8093

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !8094
  %41 = icmp eq i32 %40, 0, !dbg !8094
  br i1 %41, label %44, label %42, !dbg !8096

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8097
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #25, !dbg !8099
  br label %44, !dbg !8100

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8101
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #25, !dbg !8102
  ret i32 %24, !dbg !8103
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !8104 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8106, metadata !DIExpression()), !dbg !8115
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8107, metadata !DIExpression()), !dbg !8115
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8116
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8116
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8116
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8108, metadata !DIExpression()), !dbg !8115
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8117
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !8117
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !8117
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !8109, metadata !DIExpression()), !dbg !8115
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8118
  %10 = load i8, i8* %9, align 4, !dbg !8118
  %11 = zext i8 %10 to i32, !dbg !8119
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #25, !dbg !8120
  call void @llvm.dbg.value(metadata i32 %12, metadata !8111, metadata !DIExpression()), !dbg !8115
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8121
  %14 = load i8, i8* %13, align 1, !dbg !8121
  %15 = zext i8 %14 to i32, !dbg !8122
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #25, !dbg !8123
  call void @llvm.dbg.value(metadata i32 %16, metadata !8112, metadata !DIExpression()), !dbg !8115
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8124
  %18 = load i8, i8* %17, align 2, !dbg !8124
  %19 = zext i8 %18 to i32, !dbg !8125
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #25, !dbg !8126
  call void @llvm.dbg.value(metadata i32 %20, metadata !8113, metadata !DIExpression()), !dbg !8115
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8127
  %22 = load i8, i8* %21, align 1, !dbg !8127
  %23 = zext i8 %22 to i32, !dbg !8128
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #25, !dbg !8129
  call void @llvm.dbg.value(metadata i32 %24, metadata !8114, metadata !DIExpression()), !dbg !8115
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !8130

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !8132
  br i1 %26, label %69, label %27, !dbg !8134

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !8135

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !8136
  br i1 %29, label %65, label %30, !dbg !8136

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !8138
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !8115
  br i1 %31, label %38, label %34, !dbg !8140

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !8141
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !8141

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !8144
  br i1 %37, label %38, label %69, !dbg !8145

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8146
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #25, !dbg !8147
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #25, !dbg !8148
  %41 = icmp eq i32 %12, %40, !dbg !8150
  br i1 %41, label %43, label %42, !dbg !8151

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #25, !dbg !8152
  br label %43, !dbg !8154

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #25, !dbg !8155
  %45 = icmp eq i32 %16, %44, !dbg !8157
  br i1 %45, label %47, label %46, !dbg !8158

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #25, !dbg !8159
  br label %47, !dbg !8161

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #25, !dbg !8162
  %49 = icmp eq i32 %20, %48, !dbg !8164
  br i1 %49, label %51, label %50, !dbg !8165

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #25, !dbg !8166
  br label %51, !dbg !8168

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #25, !dbg !8169
  %53 = icmp eq i32 %24, %52, !dbg !8171
  br i1 %53, label %55, label %54, !dbg !8172

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #25, !dbg !8173
  br label %55, !dbg !8175

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8176
  %57 = load i32, i32* %56, align 4, !dbg !8176
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !8178
  %59 = load i32, i32* %58, align 4, !dbg !8178
  %60 = icmp eq i32 %57, %59, !dbg !8179
  br i1 %60, label %63, label %61, !dbg !8180

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #25, !dbg !8181
  %62 = load i32, i32* %56, align 4, !dbg !8183
  store i32 %62, i32* %58, align 4, !dbg !8184
  br label %63, !dbg !8185

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !8186
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #25, !dbg !8187
  br label %69, !dbg !8188

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !8136
  %67 = and i8 %66, 1, !dbg !8136
  %68 = icmp eq i8 %67, 0, !dbg !8136
  br i1 %68, label %30, label %69, !dbg !8136

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !8115
  ret i32 %70, !dbg !8189
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !8190 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8192, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !8193, metadata !DIExpression()), !dbg !8195
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8196
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !8196
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !8196
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !8194, metadata !DIExpression()), !dbg !8195
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !8197
  %7 = load i32, i32* %6, align 4, !dbg !8197
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !8198
  store i32 %7, i32* %8, align 4, !dbg !8199
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !8200, !range !8201
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #25, !dbg !8202
  %11 = trunc i32 %10 to i8, !dbg !8202
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !8203
  store i8 %11, i8* %12, align 4, !dbg !8204
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #25, !dbg !8205, !range !8206
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #25, !dbg !8207
  %15 = trunc i32 %14 to i8, !dbg !8207
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !8208
  store i8 %15, i8* %16, align 1, !dbg !8209
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #25, !dbg !8210
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !8211, !range !8201
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #25, !dbg !8212
  %20 = trunc i32 %19 to i8, !dbg !8212
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !8213
  store i8 %20, i8* %21, align 2, !dbg !8214
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #25, !dbg !8215, !range !8216
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #25, !dbg !8217
  %24 = trunc i32 %23 to i8, !dbg !8217
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !8218
  store i8 %24, i8* %25, align 1, !dbg !8219
  ret i32 0, !dbg !8220
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8221 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8225, metadata !DIExpression()), !dbg !8227
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8228
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8228
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8228
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8226, metadata !DIExpression()), !dbg !8227
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8229
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8229
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #25, !dbg !8230
  ret i32 %7, !dbg !8231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #12 !dbg !8232 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8236, metadata !DIExpression()), !dbg !8237
  %2 = icmp eq i32 %0, 1024, !dbg !8238
  %3 = select i1 %2, i32 2, i32 0, !dbg !8238
  %4 = icmp eq i32 %0, 1536, !dbg !8238
  %5 = select i1 %4, i32 1, i32 %3, !dbg !8238
  ret i32 %5, !dbg !8239
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8240 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8242, metadata !DIExpression()), !dbg !8244
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8245
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8245
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8245
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8243, metadata !DIExpression()), !dbg !8244
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8246
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8246
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #25, !dbg !8247
  ret i32 %7, !dbg !8248
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !8249 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8253, metadata !DIExpression()), !dbg !8254
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !8255
  %3 = icmp ult i32 %2, 4, !dbg !8255
  br i1 %3, label %4, label %7, !dbg !8255

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !8255
  %6 = load i32, i32* %5, align 4, !dbg !8255
  br label %7, !dbg !8255

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !8256
  ret i32 %8, !dbg !8258
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8259 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8261, metadata !DIExpression()), !dbg !8263
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8264
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8264
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8264
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8262, metadata !DIExpression()), !dbg !8263
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8265
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8265
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #25, !dbg !8266
  ret i32 %7, !dbg !8267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8268 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8272, metadata !DIExpression()), !dbg !8274
  call void @llvm.dbg.value(metadata i32 %1, metadata !8273, metadata !DIExpression()), !dbg !8274
  %3 = icmp eq i32 %0, 4096, !dbg !8275
  %4 = icmp eq i32 %1, 0, !dbg !8275
  %5 = select i1 %4, i32 4, i32 3, !dbg !8275
  %6 = select i1 %4, i32 3, i32 2, !dbg !8275
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !8275
  ret i32 %7, !dbg !8276
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !8277 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8279, metadata !DIExpression()), !dbg !8281
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8282
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8282
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8282
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8280, metadata !DIExpression()), !dbg !8281
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8283
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8283
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #25, !dbg !8284
  ret i32 %7, !dbg !8285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8290, metadata !DIExpression()), !dbg !8291
  %2 = icmp eq i32 %0, 768, !dbg !8292
  %3 = zext i1 %2 to i32, !dbg !8291
  ret i32 %3, !dbg !8294
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8295 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8300, metadata !DIExpression()), !dbg !8301
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8302
  %3 = load volatile i32, i32* %2, align 4, !dbg !8302
  %4 = and i32 %3, 768, !dbg !8302
  ret i32 %4, !dbg !8303
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8304 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8306, metadata !DIExpression()), !dbg !8307
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8308
  %3 = load volatile i32, i32* %2, align 4, !dbg !8308
  %4 = and i32 %3, 4096, !dbg !8308
  ret i32 %4, !dbg !8309
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8310 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8312, metadata !DIExpression()), !dbg !8313
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8314
  %3 = load volatile i32, i32* %2, align 4, !dbg !8314
  %4 = and i32 %3, 12288, !dbg !8314
  ret i32 %4, !dbg !8315
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8316 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8318, metadata !DIExpression()), !dbg !8319
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8320
  %3 = load volatile i32, i32* %2, align 4, !dbg !8320
  %4 = and i32 %3, 1536, !dbg !8320
  ret i32 %4, !dbg !8321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #12 !dbg !8322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8326, metadata !DIExpression()), !dbg !8327
  %2 = icmp eq i32 %0, 2, !dbg !8328
  %3 = select i1 %2, i32 1024, i32 0, !dbg !8328
  %4 = icmp eq i32 %0, 1, !dbg !8328
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !8328
  ret i32 %5, !dbg !8329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !8330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8334, metadata !DIExpression()), !dbg !8335
  %2 = icmp ult i32 %0, 3, !dbg !8336
  br i1 %2, label %3, label %6, !dbg !8336

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !8336
  %5 = load i32, i32* %4, align 4, !dbg !8336
  br label %6, !dbg !8336

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !8337
  ret i32 %7, !dbg !8339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8344, metadata !DIExpression()), !dbg !8346
  call void @llvm.dbg.value(metadata i32 %1, metadata !8345, metadata !DIExpression()), !dbg !8346
  %3 = icmp eq i32 %0, 4, !dbg !8347
  %4 = icmp eq i32 %1, 0, !dbg !8347
  %5 = select i1 %4, i32 0, i32 4096, !dbg !8347
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !8347
  ret i32 %6, !dbg !8348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8349 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8353, metadata !DIExpression()), !dbg !8354
  %2 = icmp eq i32 %0, 1, !dbg !8355
  %3 = select i1 %2, i32 768, i32 0, !dbg !8354
  ret i32 %3, !dbg !8357
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8358 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8362, metadata !DIExpression()), !dbg !8363
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8364
  %3 = load volatile i32, i32* %2, align 4, !dbg !8364
  %4 = and i32 %3, -8193, !dbg !8364
  store volatile i32 %4, i32* %2, align 4, !dbg !8364
  ret void, !dbg !8365
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8366 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8370, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.value(metadata i32 %1, metadata !8371, metadata !DIExpression()), !dbg !8373
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8374
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8374
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8374
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8372, metadata !DIExpression()), !dbg !8373
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8375
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8375
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8376
  ret void, !dbg !8377
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8378 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8380, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.value(metadata i32 %1, metadata !8381, metadata !DIExpression()), !dbg !8383
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8384
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8384
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8384
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8382, metadata !DIExpression()), !dbg !8383
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8385
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8385
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8386
  ret void, !dbg !8387
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8388 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8390, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.value(metadata i32 %1, metadata !8391, metadata !DIExpression()), !dbg !8393
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8394
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8394
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8394
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8392, metadata !DIExpression()), !dbg !8393
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8395
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8395
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8396
  ret void, !dbg !8397
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !8398 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8400, metadata !DIExpression()), !dbg !8403
  call void @llvm.dbg.value(metadata i32 %1, metadata !8401, metadata !DIExpression()), !dbg !8403
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8404
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8404
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8404
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8402, metadata !DIExpression()), !dbg !8403
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8405
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8405
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8406
  ret void, !dbg !8407
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8408 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8410, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.value(metadata i32 %1, metadata !8411, metadata !DIExpression()), !dbg !8415
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8416
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !8416
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !8416
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !8412, metadata !DIExpression()), !dbg !8415
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8417
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !8417
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !8417
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !8413, metadata !DIExpression()), !dbg !8415
  %10 = bitcast i32* %3 to i8*, !dbg !8418
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8418
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !8419
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !8419
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !8423
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8423
  %15 = load i8*, i8** %14, align 4, !dbg !8423
  call void @llvm.dbg.value(metadata i32* %3, metadata !8414, metadata !DIExpression(DW_OP_deref)), !dbg !8415
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #25, !dbg !8424
  %17 = icmp slt i32 %16, 0, !dbg !8425
  br i1 %17, label %23, label %18, !dbg !8426

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !8427
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8427
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #25, !dbg !8428
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8429
  %22 = load i32, i32* %3, align 4, !dbg !8430
  call void @llvm.dbg.value(metadata i32 %22, metadata !8414, metadata !DIExpression()), !dbg !8415
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #25, !dbg !8431
  br label %23, !dbg !8432

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8432
  ret void, !dbg !8432
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8433 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8435, metadata !DIExpression()), !dbg !8436
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8437
  %3 = load volatile i32, i32* %2, align 4, !dbg !8437
  %4 = or i32 %3, 8192, !dbg !8437
  store volatile i32 %4, i32* %2, align 4, !dbg !8437
  ret void, !dbg !8438
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !8439 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8441, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.value(metadata i8* %1, metadata !8442, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.value(metadata i32* %2, metadata !8443, metadata !DIExpression()), !dbg !8445
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8446
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !8446
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !8446
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !8444, metadata !DIExpression()), !dbg !8445
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !8447
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !8447
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !8449
  br i1 %9, label %12, label %10, !dbg !8450

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #24, !dbg !8451
  br label %12, !dbg !8452

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !8445
  ret i32 %13, !dbg !8453
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8454 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8458, metadata !DIExpression()), !dbg !8460
  call void @llvm.dbg.value(metadata i32 0, metadata !8459, metadata !DIExpression()), !dbg !8460
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8461
  %3 = load volatile i32, i32* %2, align 4, !dbg !8461
  %4 = and i32 %3, -32769, !dbg !8461
  store volatile i32 %4, i32* %2, align 4, !dbg !8461
  ret void, !dbg !8462
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8463 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8467, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.value(metadata i32 %1, metadata !8468, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.value(metadata i32 0, metadata !8469, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.value(metadata i32 %2, metadata !8470, metadata !DIExpression()), !dbg !8471
  %4 = zext i32 %1 to i64, !dbg !8472
  %5 = mul nuw nsw i64 %4, 25, !dbg !8472
  %6 = zext i32 %2 to i64, !dbg !8472
  %7 = shl nuw nsw i64 %6, 2, !dbg !8472
  %8 = udiv i64 %5, %7, !dbg !8472
  %9 = trunc i64 %8 to i32, !dbg !8472
  %10 = udiv i32 %9, 100, !dbg !8472
  %11 = shl nuw nsw i32 %10, 4, !dbg !8472
  %12 = mul i32 %10, -100, !dbg !8472
  %13 = add i32 %12, %9, !dbg !8472
  %14 = shl i32 %13, 4, !dbg !8472
  %15 = add i32 %14, 50, !dbg !8472
  %16 = udiv i32 %15, 100, !dbg !8472
  %17 = and i32 %16, 240, !dbg !8472
  %18 = add nuw nsw i32 %17, %11, !dbg !8472
  %19 = and i32 %16, 15, !dbg !8472
  %20 = and i32 %18, 65520, !dbg !8475
  %21 = or i32 %20, %19, !dbg !8475
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !8476
  store volatile i32 %21, i32* %22, align 4, !dbg !8477
  ret void, !dbg !8478
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8479 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8481, metadata !DIExpression()), !dbg !8483
  call void @llvm.dbg.value(metadata i32 %1, metadata !8482, metadata !DIExpression()), !dbg !8483
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8484
  %4 = load volatile i32, i32* %3, align 4, !dbg !8484
  %5 = and i32 %4, -769, !dbg !8484
  %6 = or i32 %5, %1, !dbg !8484
  store volatile i32 %6, i32* %3, align 4, !dbg !8484
  ret void, !dbg !8485
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8486 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8488, metadata !DIExpression()), !dbg !8490
  call void @llvm.dbg.value(metadata i32 %1, metadata !8489, metadata !DIExpression()), !dbg !8490
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8491
  %4 = load volatile i32, i32* %3, align 4, !dbg !8491
  %5 = and i32 %4, -4097, !dbg !8491
  %6 = or i32 %5, %1, !dbg !8491
  store volatile i32 %6, i32* %3, align 4, !dbg !8491
  ret void, !dbg !8492
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8493 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8495, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.value(metadata i32 %1, metadata !8496, metadata !DIExpression()), !dbg !8497
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8498
  %4 = load volatile i32, i32* %3, align 4, !dbg !8498
  %5 = and i32 %4, -12289, !dbg !8498
  %6 = or i32 %5, %1, !dbg !8498
  store volatile i32 %6, i32* %3, align 4, !dbg !8498
  ret void, !dbg !8499
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !8500 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8502, metadata !DIExpression()), !dbg !8504
  call void @llvm.dbg.value(metadata i32 %1, metadata !8503, metadata !DIExpression()), !dbg !8504
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8505
  %4 = load volatile i32, i32* %3, align 4, !dbg !8505
  %5 = and i32 %4, -1537, !dbg !8505
  %6 = or i32 %5, %1, !dbg !8505
  store volatile i32 %6, i32* %3, align 4, !dbg !8505
  ret void, !dbg !8506
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8507 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8509, metadata !DIExpression()), !dbg !8510
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8511
  %3 = load volatile i32, i32* %2, align 4, !dbg !8511
  %4 = lshr i32 %3, 3, !dbg !8512
  %5 = and i32 %4, 1, !dbg !8512
  ret i32 %5, !dbg !8513
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8514 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8516, metadata !DIExpression()), !dbg !8517
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8518
  %3 = load volatile i32, i32* %2, align 4, !dbg !8518
  %4 = and i32 %3, 1, !dbg !8518
  ret i32 %4, !dbg !8519
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8520 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8522, metadata !DIExpression()), !dbg !8523
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8524
  %3 = load volatile i32, i32* %2, align 4, !dbg !8524
  %4 = lshr i32 %3, 1, !dbg !8525
  %5 = and i32 %4, 1, !dbg !8525
  ret i32 %5, !dbg !8526
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8527 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8529, metadata !DIExpression()), !dbg !8530
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8531
  %3 = load volatile i32, i32* %2, align 4, !dbg !8531
  %4 = lshr i32 %3, 8, !dbg !8532
  %5 = and i32 %4, 1, !dbg !8532
  ret i32 %5, !dbg !8533
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8534 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8536, metadata !DIExpression()), !dbg !8537
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8538
  store volatile i32 -257, i32* %2, align 4, !dbg !8538
  ret void, !dbg !8539
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8540 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8542, metadata !DIExpression()), !dbg !8544
  %3 = bitcast i32* %2 to i8*, !dbg !8545
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8545
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8543, metadata !DIExpression()), !dbg !8546
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8547
  %5 = load volatile i32, i32* %4, align 4, !dbg !8547
  store volatile i32 %5, i32* %2, align 4, !dbg !8548
  %6 = load volatile i32, i32* %2, align 4, !dbg !8549
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8550
  %8 = load volatile i32, i32* %7, align 4, !dbg !8550
  store volatile i32 %8, i32* %2, align 4, !dbg !8551
  %9 = load volatile i32, i32* %2, align 4, !dbg !8552
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8553
  ret void, !dbg !8553
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8554 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8556, metadata !DIExpression()), !dbg !8558
  %3 = bitcast i32* %2 to i8*, !dbg !8559
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8559
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8557, metadata !DIExpression()), !dbg !8560
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8561
  %5 = load volatile i32, i32* %4, align 4, !dbg !8561
  store volatile i32 %5, i32* %2, align 4, !dbg !8562
  %6 = load volatile i32, i32* %2, align 4, !dbg !8563
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8564
  %8 = load volatile i32, i32* %7, align 4, !dbg !8564
  store volatile i32 %8, i32* %2, align 4, !dbg !8565
  %9 = load volatile i32, i32* %2, align 4, !dbg !8566
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8567
  ret void, !dbg !8567
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8568 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8570, metadata !DIExpression()), !dbg !8572
  %3 = bitcast i32* %2 to i8*, !dbg !8573
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8573
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8571, metadata !DIExpression()), !dbg !8574
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8575
  %5 = load volatile i32, i32* %4, align 4, !dbg !8575
  store volatile i32 %5, i32* %2, align 4, !dbg !8576
  %6 = load volatile i32, i32* %2, align 4, !dbg !8577
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8578
  %8 = load volatile i32, i32* %7, align 4, !dbg !8578
  store volatile i32 %8, i32* %2, align 4, !dbg !8579
  %9 = load volatile i32, i32* %2, align 4, !dbg !8580
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8581
  ret void, !dbg !8581
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8582 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8584, metadata !DIExpression()), !dbg !8586
  %3 = bitcast i32* %2 to i8*, !dbg !8587
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8587
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8585, metadata !DIExpression()), !dbg !8588
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8589
  %5 = load volatile i32, i32* %4, align 4, !dbg !8589
  store volatile i32 %5, i32* %2, align 4, !dbg !8590
  %6 = load volatile i32, i32* %2, align 4, !dbg !8591
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8592
  %8 = load volatile i32, i32* %7, align 4, !dbg !8592
  store volatile i32 %8, i32* %2, align 4, !dbg !8593
  %9 = load volatile i32, i32* %2, align 4, !dbg !8594
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8595
  ret void, !dbg !8595
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8596 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8598, metadata !DIExpression()), !dbg !8599
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8600
  %3 = load volatile i32, i32* %2, align 4, !dbg !8600
  %4 = lshr i32 %3, 7, !dbg !8601
  %5 = and i32 %4, 1, !dbg !8601
  ret i32 %5, !dbg !8602
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #13 !dbg !8603 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8607, metadata !DIExpression()), !dbg !8609
  call void @llvm.dbg.value(metadata i8 %1, metadata !8608, metadata !DIExpression()), !dbg !8609
  %3 = zext i8 %1 to i32, !dbg !8610
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8611
  store volatile i32 %3, i32* %4, align 4, !dbg !8612
  ret void, !dbg !8613
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8614 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8616, metadata !DIExpression()), !dbg !8617
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8618
  %3 = load volatile i32, i32* %2, align 4, !dbg !8618
  %4 = lshr i32 %3, 5, !dbg !8619
  %5 = and i32 %4, 1, !dbg !8619
  ret i32 %5, !dbg !8620
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8621 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8625, metadata !DIExpression()), !dbg !8626
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8627
  %3 = load volatile i32, i32* %2, align 4, !dbg !8627
  %4 = trunc i32 %3 to i8, !dbg !8628
  ret i8 %4, !dbg !8629
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !8630 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8632, metadata !DIExpression()), !dbg !8638
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8639
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8639
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8639
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8633, metadata !DIExpression()), !dbg !8638
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8640
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !8640
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !8640
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !8634, metadata !DIExpression()), !dbg !8638
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #25, !dbg !8641
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !8642
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !8642
  %10 = tail call fastcc zeroext i1 @device_is_ready.52(%struct.device* noundef %9) #25, !dbg !8644
  br i1 %10, label %11, label %49, !dbg !8645

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !8646
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !8647
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8647
  %15 = load i8*, i8** %14, align 4, !dbg !8647
  %16 = tail call fastcc i32 @clock_control_on.53(%struct.device* noundef %12, i8* noundef %15) #25, !dbg !8648
  call void @llvm.dbg.value(metadata i32 %16, metadata !8637, metadata !DIExpression()), !dbg !8638
  %17 = icmp eq i32 %16, 0, !dbg !8649
  br i1 %17, label %18, label %49, !dbg !8651

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !8652
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !8652
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #25, !dbg !8653
  call void @llvm.dbg.value(metadata i32 %21, metadata !8637, metadata !DIExpression()), !dbg !8638
  %22 = icmp slt i32 %21, 0, !dbg !8654
  br i1 %22, label %49, label %23, !dbg !8656

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8657
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8657
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #25, !dbg !8658
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8659
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #25, !dbg !8660
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !8661
  %28 = load i32, i32* %27, align 4, !dbg !8661
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !8663

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !8635, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata i32 4096, metadata !8636, metadata !DIExpression()), !dbg !8638
  br label %31, !dbg !8664

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !8635, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata i32 0, metadata !8636, metadata !DIExpression()), !dbg !8638
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !8667
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !8667
  call void @llvm.dbg.value(metadata i32 %33, metadata !8636, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata i32 %32, metadata !8635, metadata !DIExpression()), !dbg !8638
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8668
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #25, !dbg !8669
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !8670
  %36 = load i8, i8* %35, align 4, !dbg !8670, !range !5276
  %37 = icmp eq i8 %36, 0, !dbg !8670
  br i1 %37, label %39, label %38, !dbg !8672

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #25, !dbg !8673
  br label %39, !dbg !8675

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !8676
  %41 = load i32, i32* %40, align 4, !dbg !8676
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #25, !dbg !8677
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !8678
  %43 = load i8, i8* %42, align 4, !dbg !8678, !range !5276
  %44 = icmp eq i8 %43, 0, !dbg !8678
  br i1 %44, label %47, label %45, !dbg !8680

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8681
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #25, !dbg !8683
  br label %47, !dbg !8684

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8685
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #25, !dbg !8686
  br label %49, !dbg !8687

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !8638
  ret i32 %50, !dbg !8688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8689 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8693, metadata !DIExpression()), !dbg !8697
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8698
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !8698
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !8698
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !8694, metadata !DIExpression()), !dbg !8697
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8695, metadata !DIExpression()), !dbg !8697
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !8699
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !8700
  ret void, !dbg !8701
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.52(%struct.device* noundef %0) unnamed_addr #1 !dbg !8702 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8706, metadata !DIExpression()), !dbg !8707
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8708, !srcloc !8710
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.54(%struct.device* noundef %0) #25, !dbg !8711
  ret i1 %2, !dbg !8712
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.53(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8713 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8715, metadata !DIExpression()), !dbg !8718
  call void @llvm.dbg.value(metadata i8* %1, metadata !8716, metadata !DIExpression()), !dbg !8718
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8719
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !8719
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !8719
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !8717, metadata !DIExpression()), !dbg !8718
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !8720
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !8720
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #24, !dbg !8721
  ret i32 %8, !dbg !8722
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !8723 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8727, metadata !DIExpression()), !dbg !8731
  call void @llvm.dbg.value(metadata i8 0, metadata !8728, metadata !DIExpression()), !dbg !8731
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !8732
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8732
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8730, metadata !DIExpression(DW_OP_deref)), !dbg !8731
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !8733
  call void @llvm.dbg.value(metadata i32 %4, metadata !8729, metadata !DIExpression()), !dbg !8731
  %5 = icmp slt i32 %4, 0, !dbg !8734
  br i1 %5, label %9, label %6, !dbg !8736

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !8737
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !8730, metadata !DIExpression()), !dbg !8731
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !8738
  br label %9, !dbg !8739

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !8731
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8740
  ret i32 %10, !dbg !8740
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !8741 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8743, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.value(metadata i32 12, metadata !8744, metadata !DIExpression()), !dbg !8747
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !8748

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !8749, metadata !DIExpression()) #23, !dbg !8755
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !8758, !srcloc !8759
  call void @llvm.dbg.value(metadata i32 %4, metadata !8754, metadata !DIExpression()) #23, !dbg !8755
  %5 = or i32 %4, 12, !dbg !8760
  call void @llvm.dbg.value(metadata i32 %5, metadata !8745, metadata !DIExpression()), !dbg !8761
  call void @llvm.dbg.value(metadata i32 %5, metadata !8762, metadata !DIExpression()) #23, !dbg !8769
  call void @llvm.dbg.value(metadata i32* %2, metadata !8767, metadata !DIExpression()) #23, !dbg !8769
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !8771, !srcloc !8772
  call void @llvm.dbg.value(metadata i32 %6, metadata !8768, metadata !DIExpression()) #23, !dbg !8769
  %7 = icmp eq i32 %6, 0, !dbg !8748
  br i1 %7, label %8, label %3, !dbg !8760, !llvm.loop !8773

8:                                                ; preds = %3
  ret void, !dbg !8774
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !8775 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8777, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata i32 %1, metadata !8778, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata i32 %2, metadata !8779, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata i32 0, metadata !8780, metadata !DIExpression()), !dbg !8781
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8782
  %5 = load volatile i32, i32* %4, align 4, !dbg !8782
  %6 = and i32 %5, -5633, !dbg !8782
  %7 = or i32 %2, %1, !dbg !8782
  %8 = or i32 %7, %6, !dbg !8782
  store volatile i32 %8, i32* %4, align 4, !dbg !8782
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8783
  %10 = load volatile i32, i32* %9, align 4, !dbg !8783
  %11 = and i32 %10, -12289, !dbg !8783
  store volatile i32 %11, i32* %9, align 4, !dbg !8783
  ret void, !dbg !8784
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8785 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8787, metadata !DIExpression()), !dbg !8788
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8789
  %3 = load volatile i32, i32* %2, align 4, !dbg !8789
  %4 = or i32 %3, 8, !dbg !8789
  store volatile i32 %4, i32* %2, align 4, !dbg !8789
  ret void, !dbg !8790
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8791 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !8795, metadata !DIExpression()), !dbg !8798
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !8796, metadata !DIExpression()), !dbg !8798
  call void @llvm.dbg.value(metadata i32 0, metadata !8797, metadata !DIExpression()), !dbg !8798
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !8799
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !8799
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !8800
  %5 = load i8, i8* %4, align 4, !dbg !8800
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !8801
  ret i32 %6, !dbg !8802
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.54(%struct.device* noundef %0) unnamed_addr #1 !dbg !8803 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8805, metadata !DIExpression()), !dbg !8806
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !8807
  ret i1 %2, !dbg !8808
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #13 !dbg !8809 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8811, metadata !DIExpression()), !dbg !8812
  tail call fastcc void @__NVIC_SetPriority.56() #25, !dbg !8813
  store i32 8399, i32* @last_load, align 4, !dbg !8814
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8815
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8816
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8817
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8818
  %3 = or i32 %2, 7, !dbg !8818
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8818
  ret i32 0, !dbg !8819
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.56() unnamed_addr #13 !dbg !8820 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !8822, metadata !DIExpression()), !dbg !8824
  call void @llvm.dbg.value(metadata i32 1, metadata !8823, metadata !DIExpression()), !dbg !8824
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !8825
  ret void, !dbg !8828
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8829 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8831, metadata !DIExpression()), !dbg !8833
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !8834
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8835
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8836
  %5 = add i32 %4, %3, !dbg !8836
  store i32 %5, i32* @cycle_count, align 4, !dbg !8836
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8837
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8838
  %7 = sub i32 %5, %6, !dbg !8841
  %8 = udiv i32 %7, 8400, !dbg !8842
  call void @llvm.dbg.value(metadata i32 %8, metadata !8832, metadata !DIExpression()), !dbg !8833
  %9 = mul nuw i32 %8, 8400, !dbg !8843
  %10 = add i32 %9, %6, !dbg !8844
  store i32 %10, i32* @announced_cycles, align 4, !dbg !8844
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !8845
  tail call void @z_arm_int_exit() #24, !dbg !8846
  ret void, !dbg !8847
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #13 !dbg !8848 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8853
  call void @llvm.dbg.value(metadata i32 %1, metadata !8850, metadata !DIExpression()), !dbg !8854
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8855
  call void @llvm.dbg.value(metadata i32 %2, metadata !8851, metadata !DIExpression()), !dbg !8854
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8856
  call void @llvm.dbg.value(metadata i32 %3, metadata !8852, metadata !DIExpression()), !dbg !8854
  %4 = and i32 %2, 65536, !dbg !8857
  %5 = icmp ne i32 %4, 0, !dbg !8857
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !8859
  %8 = load i32, i32* @last_load, align 4, !dbg !8854
  br i1 %7, label %9, label %13, !dbg !8859

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8860
  %11 = add i32 %10, %8, !dbg !8860
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !8860
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8862
  br label %13, !dbg !8863

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !8864
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8865
  %16 = add i32 %14, %15, !dbg !8866
  ret i32 %16, !dbg !8867
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !8868 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8872, metadata !DIExpression()), !dbg !8885
  call void @llvm.dbg.value(metadata i1 %1, metadata !8873, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8885
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !8886
  br i1 %4, label %5, label %8, !dbg !8886

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8888
  %7 = and i32 %6, -2, !dbg !8888
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8888
  store i32 -16777216, i32* @last_load, align 4, !dbg !8890
  br label %54, !dbg !8891

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !8892
  call void @llvm.dbg.value(metadata i32 %9, metadata !8877, metadata !DIExpression()), !dbg !8885
  br i1 %3, label %18, label %10, !dbg !8893

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !8893
  call void @llvm.dbg.value(metadata i32 undef, metadata !8872, metadata !DIExpression()), !dbg !8885
  %12 = icmp slt i32 %11, 1, !dbg !8894
  br i1 %12, label %18, label %13, !dbg !8894

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !8894
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !8894
  %16 = mul nuw nsw i32 %15, 8400, !dbg !8894
  %17 = add nuw nsw i32 %16, 8399, !dbg !8894
  br label %18, !dbg !8894

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8872, metadata !DIExpression()), !dbg !8885
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8895, metadata !DIExpression()) #23, !dbg !8902
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8904, !srcloc !8910
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !8904
  call void @llvm.dbg.value(metadata i32 %21, metadata !8907, metadata !DIExpression()) #23, !dbg !8911
  call void @llvm.dbg.value(metadata i32 undef, metadata !8908, metadata !DIExpression()) #23, !dbg !8911
  call void @llvm.dbg.value(metadata i32 %21, metadata !8901, metadata !DIExpression()) #23, !dbg !8902
  call void @llvm.dbg.value(metadata i32 %21, metadata !8878, metadata !DIExpression()), !dbg !8885
  %22 = tail call fastcc i32 @elapsed() #25, !dbg !8912
  call void @llvm.dbg.value(metadata i32 %22, metadata !8883, metadata !DIExpression()), !dbg !8885
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8913
  call void @llvm.dbg.value(metadata i32 %23, metadata !8875, metadata !DIExpression()), !dbg !8885
  %24 = load i32, i32* @cycle_count, align 4, !dbg !8914
  %25 = add i32 %24, %22, !dbg !8914
  store i32 %25, i32* @cycle_count, align 4, !dbg !8914
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8915
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !8916
  %27 = sub i32 %25, %26, !dbg !8917
  call void @llvm.dbg.value(metadata i32 %27, metadata !8884, metadata !DIExpression()), !dbg !8885
  %28 = icmp slt i32 %27, 0, !dbg !8918
  br i1 %28, label %38, label %29, !dbg !8920

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !8874, metadata !DIExpression()), !dbg !8885
  call void @llvm.dbg.value(metadata i32 undef, metadata !8874, metadata !DIExpression()), !dbg !8885
  %30 = add nuw i32 %19, %27, !dbg !8921
  %31 = urem i32 %30, 8400, !dbg !8923
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !8874, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8885
  %32 = sub nuw nsw i32 %19, %31, !dbg !8924
  call void @llvm.dbg.value(metadata i32 %32, metadata !8874, metadata !DIExpression()), !dbg !8885
  %33 = icmp ugt i32 %32, 1024, !dbg !8925
  br i1 %33, label %34, label %36, !dbg !8925

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !8874, metadata !DIExpression()), !dbg !8885
  %35 = icmp ugt i32 %32, 16766400, !dbg !8926
  br i1 %35, label %38, label %36, !dbg !8928

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !8929
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8930
  call void @llvm.dbg.value(metadata i32 %40, metadata !8876, metadata !DIExpression()), !dbg !8885
  %41 = add nsw i32 %39, -1, !dbg !8931
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8932
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8933
  %42 = icmp ult i32 %23, %40, !dbg !8934
  br i1 %42, label %43, label %48, !dbg !8936

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !8937
  %45 = add i32 %23, %9, !dbg !8939
  %46 = sub i32 %45, %40, !dbg !8940
  %47 = add i32 %46, %44, !dbg !8937
  br label %52, !dbg !8941

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !8942
  %50 = load i32, i32* @cycle_count, align 4, !dbg !8944
  %51 = add i32 %49, %50, !dbg !8944
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !8945
  store i32 %53, i32* @cycle_count, align 4, !dbg !8945
  call void @llvm.dbg.value(metadata i32 %21, metadata !8946, metadata !DIExpression()) #23, !dbg !8952
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8951, metadata !DIExpression()) #23, !dbg !8952
  call void @llvm.dbg.value(metadata i32 %21, metadata !8954, metadata !DIExpression()) #23, !dbg !8957
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !8959, !srcloc !8960
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !8961
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !8962 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8895, metadata !DIExpression()) #23, !dbg !8966
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8968, !srcloc !8910
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8968
  call void @llvm.dbg.value(metadata i32 %2, metadata !8907, metadata !DIExpression()) #23, !dbg !8970
  call void @llvm.dbg.value(metadata i32 undef, metadata !8908, metadata !DIExpression()) #23, !dbg !8970
  call void @llvm.dbg.value(metadata i32 %2, metadata !8901, metadata !DIExpression()) #23, !dbg !8966
  call void @llvm.dbg.value(metadata i32 %2, metadata !8964, metadata !DIExpression()), !dbg !8971
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !8972
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8973
  %5 = add i32 %4, %3, !dbg !8974
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8975
  %7 = sub i32 %5, %6, !dbg !8976
  call void @llvm.dbg.value(metadata i32 %7, metadata !8965, metadata !DIExpression()), !dbg !8971
  call void @llvm.dbg.value(metadata i32 %2, metadata !8946, metadata !DIExpression()) #23, !dbg !8977
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8951, metadata !DIExpression()) #23, !dbg !8977
  call void @llvm.dbg.value(metadata i32 %2, metadata !8954, metadata !DIExpression()) #23, !dbg !8979
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !8981, !srcloc !8960
  %8 = udiv i32 %7, 8400, !dbg !8982
  ret i32 %8, !dbg !8983
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !8984 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8895, metadata !DIExpression()) #23, !dbg !8988
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8990, !srcloc !8910
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8990
  call void @llvm.dbg.value(metadata i32 %2, metadata !8907, metadata !DIExpression()) #23, !dbg !8992
  call void @llvm.dbg.value(metadata i32 undef, metadata !8908, metadata !DIExpression()) #23, !dbg !8992
  call void @llvm.dbg.value(metadata i32 %2, metadata !8901, metadata !DIExpression()) #23, !dbg !8988
  call void @llvm.dbg.value(metadata i32 %2, metadata !8986, metadata !DIExpression()), !dbg !8993
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !8994
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8995
  %5 = add i32 %4, %3, !dbg !8996
  call void @llvm.dbg.value(metadata i32 %5, metadata !8987, metadata !DIExpression()), !dbg !8993
  call void @llvm.dbg.value(metadata i32 %2, metadata !8946, metadata !DIExpression()) #23, !dbg !8997
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8951, metadata !DIExpression()) #23, !dbg !8997
  call void @llvm.dbg.value(metadata i32 %2, metadata !8954, metadata !DIExpression()) #23, !dbg !8999
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !9001, !srcloc !8960
  ret i32 %5, !dbg !9002
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #13 !dbg !9003 {
  %1 = load i32, i32* @last_load, align 4, !dbg !9004
  %2 = icmp eq i32 %1, -16777216, !dbg !9006
  br i1 %2, label %3, label %6, !dbg !9007

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9008
  %5 = or i32 %4, 1, !dbg !9008
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9008
  br label %6, !dbg !9010

6:                                                ; preds = %3, %0
  ret void, !dbg !9011
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #13 !dbg !9012 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9013
  %2 = and i32 %1, -2, !dbg !9013
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9013
  ret void, !dbg !9014
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #11 !dbg !9015 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9041, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata i8 %1, metadata !9042, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9043, metadata !DIExpression()), !dbg !9044
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !9045
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9045
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !9044
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9046
  %8 = load i8, i8* %6, align 4, !dbg !9047
  %9 = zext i8 %8 to i32, !dbg !9048
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !9048
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !9049
  br i1 %11, label %18, label %24, !dbg !9050

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !9044
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9046
  %14 = load i8, i8* %6, align 4, !dbg !9047
  %15 = zext i8 %14 to i32, !dbg !9048
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !9048
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !9049
  br i1 %17, label %18, label %24, !dbg !9050, !llvm.loop !9051

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !9053
  %21 = load i8, i8* %20, align 1, !dbg !9053
  %22 = icmp eq i8 %21, %1, !dbg !9056
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !9057
  br i1 %22, label %24, label %12, !dbg !9058

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !9044
  ret i32 %25, !dbg !9059
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9060 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !9071, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.value(metadata i8 %1, metadata !9072, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.value(metadata i32 %2, metadata !9073, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.value(metadata i32 0, metadata !9076, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.value(metadata i32 0, metadata !9077, metadata !DIExpression()), !dbg !9087
  call void @llvm.dbg.value(metadata i8 0, metadata !9078, metadata !DIExpression()), !dbg !9088
  %4 = icmp eq i8 %1, 0, !dbg !9089
  br i1 %4, label %35, label %5, !dbg !9090

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !9089
  br label %9, !dbg !9090

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !9078, metadata !DIExpression()), !dbg !9088
  call void @llvm.dbg.value(metadata i32 %29, metadata !9076, metadata !DIExpression()), !dbg !9087
  %8 = icmp eq i32 %34, %6, !dbg !9089
  br i1 %8, label %35, label %9, !dbg !9090, !llvm.loop !9091

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !9078, metadata !DIExpression()), !dbg !9088
  call void @llvm.dbg.value(metadata i32 %11, metadata !9076, metadata !DIExpression()), !dbg !9087
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !9093
  %13 = load i32, i32* %12, align 4, !dbg !9093
  call void @llvm.dbg.value(metadata i32 %13, metadata !9075, metadata !DIExpression()), !dbg !9087
  %14 = and i32 %13, 31, !dbg !9094
  %15 = icmp ult i32 %14, 16, !dbg !9095
  br i1 %15, label %16, label %20, !dbg !9096

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !9097
  %18 = load i32, i32* %17, align 4, !dbg !9097
  %19 = or i32 %18, 32, !dbg !9099
  call void @llvm.dbg.value(metadata i32 %19, metadata !9076, metadata !DIExpression()), !dbg !9087
  br label %28, !dbg !9100

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !9101

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !9102
  %23 = load i32, i32* %22, align 4, !dbg !9102
  call void @llvm.dbg.value(metadata i32 %23, metadata !9080, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !9103
  %24 = lshr i32 %23, 7, !dbg !9104
  %25 = and i32 %24, 16, !dbg !9104
  %26 = or i32 %25, %23, !dbg !9104
  call void @llvm.dbg.value(metadata i32 %26, metadata !9076, metadata !DIExpression()), !dbg !9087
  br label %28, !dbg !9105

27:                                               ; preds = %20
  br label %28, !dbg !9106

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !9087
  call void @llvm.dbg.value(metadata i32 %29, metadata !9076, metadata !DIExpression()), !dbg !9087
  %30 = lshr i32 %13, 5, !dbg !9106
  %31 = and i32 %30, 255, !dbg !9106
  call void @llvm.dbg.value(metadata i32 %31, metadata !9074, metadata !DIExpression()), !dbg !9087
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #25, !dbg !9107
  call void @llvm.dbg.value(metadata i32 %32, metadata !9077, metadata !DIExpression()), !dbg !9087
  %33 = icmp slt i32 %32, 0, !dbg !9108
  %34 = add nuw nsw i32 %10, 1, !dbg !9110
  call void @llvm.dbg.value(metadata i32 %34, metadata !9078, metadata !DIExpression()), !dbg !9088
  br i1 %33, label %35, label %7, !dbg !9111

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !9112
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9117, metadata !DIExpression()), !dbg !9121
  call void @llvm.dbg.value(metadata i32 %1, metadata !9118, metadata !DIExpression()), !dbg !9121
  call void @llvm.dbg.value(metadata i32 %2, metadata !9119, metadata !DIExpression()), !dbg !9121
  %4 = icmp ugt i32 %0, 175, !dbg !9122
  br i1 %4, label %16, label %5, !dbg !9124

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !9125
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !9126
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !9126
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !9120, metadata !DIExpression()), !dbg !9121
  %9 = add nsw i32 %6, -8, !dbg !9127
  %10 = icmp ult i32 %9, 3, !dbg !9127
  br i1 %10, label %16, label %11, !dbg !9129

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.61(%struct.device* noundef %8) #25, !dbg !9130
  br i1 %12, label %13, label %16, !dbg !9131

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !9132
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #24, !dbg !9133
  br label %16, !dbg !9134

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !9121
  ret i32 %17, !dbg !9135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.61(%struct.device* noundef %0) unnamed_addr #1 !dbg !9136 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9140, metadata !DIExpression()), !dbg !9141
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9142, !srcloc !9144
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.62(%struct.device* noundef %0) #25, !dbg !9145
  ret i1 %2, !dbg !9146
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.62(%struct.device* noundef %0) unnamed_addr #1 !dbg !9147 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9149, metadata !DIExpression()), !dbg !9150
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !9151
  ret i1 %2, !dbg !9152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #12 !dbg !9153 {
  ret void, !dbg !9154
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #14 !dbg !9155 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9157, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata i32 0, metadata !9158, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata i32 2, metadata !9159, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata i32 0, metadata !9160, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.value(metadata i32 2, metadata !9161, metadata !DIExpression()), !dbg !9162
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9163
  %2 = and i32 %1, 12, !dbg !9164
  call void @llvm.dbg.value(metadata i32 %2, metadata !9157, metadata !DIExpression()), !dbg !9162
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !9165

3:                                                ; preds = %0
  br label %21, !dbg !9166

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9168
  call void @llvm.dbg.value(metadata i32 %5, metadata !9160, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !9162
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9169
  %7 = and i32 %6, 63, !dbg !9170
  call void @llvm.dbg.value(metadata i32 %7, metadata !9161, metadata !DIExpression()), !dbg !9162
  %8 = and i32 %5, 4194304, !dbg !9171
  %9 = icmp eq i32 %8, 0, !dbg !9171
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !9173
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9173
  %13 = lshr i32 %12, 6, !dbg !9173
  %14 = and i32 %13, 511, !dbg !9173
  %15 = mul i32 %14, %11, !dbg !9173
  call void @llvm.dbg.value(metadata i32 %15, metadata !9158, metadata !DIExpression()), !dbg !9162
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9174
  %17 = lshr i32 %16, 15, !dbg !9175
  %18 = and i32 %17, 6, !dbg !9175
  %19 = add nuw nsw i32 %18, 2, !dbg !9175
  call void @llvm.dbg.value(metadata i32 %19, metadata !9159, metadata !DIExpression()), !dbg !9162
  %20 = udiv i32 %15, %19, !dbg !9176
  br label %21, !dbg !9177

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !9178
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9179
  %24 = lshr i32 %23, 4, !dbg !9180
  %25 = and i32 %24, 15, !dbg !9180
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !9181
  %27 = load i8, i8* %26, align 1, !dbg !9181
  %28 = zext i8 %27 to i32, !dbg !9181
  call void @llvm.dbg.value(metadata i32 %28, metadata !9157, metadata !DIExpression()), !dbg !9162
  %29 = lshr i32 %22, %28, !dbg !9182
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !9182
  ret void, !dbg !9183
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !9184 {
  ret i32 0, !dbg !9189
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !9190 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !9216, metadata !DIExpression()), !dbg !9227
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !9228
  br i1 %3, label %311, label %4, !dbg !9230

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !9231
  %6 = load i32, i32* %5, align 4, !dbg !9231
  %7 = and i32 %6, 1, !dbg !9233
  %8 = icmp eq i32 %7, 0, !dbg !9234
  br i1 %8, label %66, label %9, !dbg !9235

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9236
  %11 = and i32 %10, 12, !dbg !9236
  %12 = icmp eq i32 %11, 4, !dbg !9239
  br i1 %12, label %21, label %13, !dbg !9240

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9241
  %15 = and i32 %14, 12, !dbg !9241
  %16 = icmp eq i32 %15, 8, !dbg !9242
  br i1 %16, label %17, label %29, !dbg !9243

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9244
  %19 = and i32 %18, 4194304, !dbg !9245
  %20 = icmp eq i32 %19, 0, !dbg !9246
  br i1 %20, label %29, label %21, !dbg !9247

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9248
  %23 = and i32 %22, 131072, !dbg !9248
  %24 = icmp eq i32 %23, 0, !dbg !9248
  br i1 %24, label %66, label %25, !dbg !9251

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9252
  %27 = load i32, i32* %26, align 4, !dbg !9252
  %28 = icmp eq i32 %27, 0, !dbg !9253
  br i1 %28, label %311, label %66, !dbg !9254

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9255
  %31 = load i32, i32* %30, align 4, !dbg !9255
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !9259

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9260
  %34 = or i32 %33, 65536, !dbg !9260
  br label %45, !dbg !9260

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9262
  %37 = or i32 %36, 262144, !dbg !9262
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9262
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9262
  %39 = or i32 %38, 65536, !dbg !9262
  br label %45, !dbg !9262

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9265
  %42 = and i32 %41, -65537, !dbg !9265
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9265
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9265
  %44 = and i32 %43, -262145, !dbg !9265
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9267
  %47 = load i32, i32* %30, align 4, !dbg !9268
  %48 = icmp eq i32 %47, 0, !dbg !9270
  %49 = tail call i32 @HAL_GetTick() #24, !dbg !9271
  call void @llvm.dbg.value(metadata i32 %49, metadata !9217, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.value(metadata i32 %49, metadata !9217, metadata !DIExpression()), !dbg !9227
  br i1 %48, label %58, label %50, !dbg !9272

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9273
  %52 = and i32 %51, 131072, !dbg !9275
  %53 = icmp eq i32 %52, 0, !dbg !9275
  br i1 %53, label %54, label %66, !dbg !9276

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #24, !dbg !9277
  %56 = sub i32 %55, %49, !dbg !9280
  %57 = icmp ugt i32 %56, 100, !dbg !9281
  br i1 %57, label %311, label %50, !dbg !9282, !llvm.loop !9283

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9285
  %60 = and i32 %59, 131072, !dbg !9285
  %61 = icmp eq i32 %60, 0, !dbg !9285
  br i1 %61, label %66, label %62, !dbg !9287

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #24, !dbg !9288
  %64 = sub i32 %63, %49, !dbg !9291
  %65 = icmp ugt i32 %64, 100, !dbg !9292
  br i1 %65, label %311, label %58, !dbg !9293, !llvm.loop !9294

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !9296
  %68 = and i32 %67, 2, !dbg !9298
  %69 = icmp eq i32 %68, 0, !dbg !9299
  br i1 %69, label %121, label %70, !dbg !9300

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9301
  %72 = and i32 %71, 12, !dbg !9301
  %73 = icmp eq i32 %72, 0, !dbg !9304
  br i1 %73, label %82, label %74, !dbg !9305

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9306
  %76 = and i32 %75, 12, !dbg !9306
  %77 = icmp eq i32 %76, 8, !dbg !9307
  br i1 %77, label %78, label %90, !dbg !9308

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9309
  %80 = and i32 %79, 4194304, !dbg !9310
  %81 = icmp eq i32 %80, 0, !dbg !9311
  br i1 %81, label %82, label %90, !dbg !9312

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9313
  %84 = and i32 %83, 2, !dbg !9313
  %85 = icmp eq i32 %84, 0, !dbg !9313
  br i1 %85, label %114, label %86, !dbg !9316

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9317
  %88 = load i32, i32* %87, align 4, !dbg !9317
  %89 = icmp eq i32 %88, 1, !dbg !9318
  br i1 %89, label %114, label %311, !dbg !9319

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9320
  %92 = load i32, i32* %91, align 4, !dbg !9320
  %93 = icmp eq i32 %92, 0, !dbg !9323
  br i1 %93, label %104, label %94, !dbg !9324

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !9325
  %95 = tail call i32 @HAL_GetTick() #24, !dbg !9327
  call void @llvm.dbg.value(metadata i32 %95, metadata !9217, metadata !DIExpression()), !dbg !9227
  br label %96, !dbg !9328

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9329
  %98 = and i32 %97, 2, !dbg !9330
  %99 = icmp eq i32 %98, 0, !dbg !9330
  br i1 %99, label %100, label %114, !dbg !9328

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #24, !dbg !9331
  %102 = sub i32 %101, %95, !dbg !9334
  %103 = icmp ugt i32 %102, 2, !dbg !9335
  br i1 %103, label %311, label %96, !dbg !9336, !llvm.loop !9337

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !9339
  %105 = tail call i32 @HAL_GetTick() #24, !dbg !9341
  call void @llvm.dbg.value(metadata i32 %105, metadata !9217, metadata !DIExpression()), !dbg !9227
  br label %106, !dbg !9342

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9343
  %108 = and i32 %107, 2, !dbg !9343
  %109 = icmp eq i32 %108, 0, !dbg !9343
  br i1 %109, label %121, label %110, !dbg !9342

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #24, !dbg !9344
  %112 = sub i32 %111, %105, !dbg !9347
  %113 = icmp ugt i32 %112, 2, !dbg !9348
  br i1 %113, label %311, label %106, !dbg !9349, !llvm.loop !9350

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9352
  %116 = and i32 %115, -249, !dbg !9352
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !9352
  %118 = load i32, i32* %117, align 4, !dbg !9352
  %119 = shl i32 %118, 3, !dbg !9352
  %120 = or i32 %119, %116, !dbg !9352
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9352
  br label %121, !dbg !9353

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !9353
  %123 = and i32 %122, 8, !dbg !9355
  %124 = icmp eq i32 %123, 0, !dbg !9356
  br i1 %124, label %149, label %125, !dbg !9357

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !9358
  %127 = load i32, i32* %126, align 4, !dbg !9358
  %128 = icmp eq i32 %127, 0, !dbg !9361
  br i1 %128, label %139, label %129, !dbg !9362

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !9363
  %130 = tail call i32 @HAL_GetTick() #24, !dbg !9365
  call void @llvm.dbg.value(metadata i32 %130, metadata !9217, metadata !DIExpression()), !dbg !9227
  br label %131, !dbg !9366

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9367
  %133 = and i32 %132, 2, !dbg !9368
  %134 = icmp eq i32 %133, 0, !dbg !9368
  br i1 %134, label %135, label %149, !dbg !9366

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #24, !dbg !9369
  %137 = sub i32 %136, %130, !dbg !9372
  %138 = icmp ugt i32 %137, 2, !dbg !9373
  br i1 %138, label %311, label %131, !dbg !9374, !llvm.loop !9375

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !9377
  %140 = tail call i32 @HAL_GetTick() #24, !dbg !9379
  call void @llvm.dbg.value(metadata i32 %140, metadata !9217, metadata !DIExpression()), !dbg !9227
  br label %141, !dbg !9380

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9381
  %143 = and i32 %142, 2, !dbg !9381
  %144 = icmp eq i32 %143, 0, !dbg !9381
  br i1 %144, label %149, label %145, !dbg !9380

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #24, !dbg !9382
  %147 = sub i32 %146, %140, !dbg !9385
  %148 = icmp ugt i32 %147, 2, !dbg !9386
  br i1 %148, label %311, label %141, !dbg !9387, !llvm.loop !9388

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !9390
  %151 = and i32 %150, 4, !dbg !9391
  %152 = icmp eq i32 %151, 0, !dbg !9392
  br i1 %152, label %221, label %153, !dbg !9393

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !9219, metadata !DIExpression()), !dbg !9394
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9395
  %155 = and i32 %154, 268435456, !dbg !9395
  %156 = icmp eq i32 %155, 0, !dbg !9395
  br i1 %156, label %157, label %164, !dbg !9396

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !9397
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !9397
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9223, metadata !DIExpression()), !dbg !9397
  store volatile i32 0, i32* %2, align 4, !dbg !9397
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9397
  %160 = or i32 %159, 268435456, !dbg !9397
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9397
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9397
  %162 = and i32 %161, 268435456, !dbg !9397
  store volatile i32 %162, i32* %2, align 4, !dbg !9397
  %163 = load volatile i32, i32* %2, align 4, !dbg !9397
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !9398
  call void @llvm.dbg.value(metadata i32 1, metadata !9219, metadata !DIExpression()), !dbg !9394
  br label %164, !dbg !9399

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !9219, metadata !DIExpression()), !dbg !9394
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9400
  %166 = and i32 %165, 256, !dbg !9400
  %167 = icmp eq i32 %166, 0, !dbg !9400
  br i1 %167, label %168, label %180, !dbg !9402

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9403
  %170 = or i32 %169, 256, !dbg !9403
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9403
  %171 = tail call i32 @HAL_GetTick() #24, !dbg !9405
  call void @llvm.dbg.value(metadata i32 %171, metadata !9217, metadata !DIExpression()), !dbg !9227
  br label %172, !dbg !9406

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9407
  %174 = and i32 %173, 256, !dbg !9407
  %175 = icmp eq i32 %174, 0, !dbg !9407
  br i1 %175, label %176, label %180, !dbg !9406

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #24, !dbg !9408
  %178 = sub i32 %177, %171, !dbg !9411
  %179 = icmp ugt i32 %178, 2, !dbg !9412
  br i1 %179, label %311, label %172, !dbg !9413, !llvm.loop !9414

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !9416
  %182 = load i32, i32* %181, align 4, !dbg !9416
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !9419

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9420
  %185 = or i32 %184, 1, !dbg !9420
  br label %196, !dbg !9420

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9422
  %188 = or i32 %187, 4, !dbg !9422
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9422
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9422
  %190 = or i32 %189, 1, !dbg !9422
  br label %196, !dbg !9422

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9425
  %193 = and i32 %192, -2, !dbg !9425
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9425
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9425
  %195 = and i32 %194, -5, !dbg !9425
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9427
  %198 = load i32, i32* %181, align 4, !dbg !9428
  %199 = icmp eq i32 %198, 0, !dbg !9430
  %200 = tail call i32 @HAL_GetTick() #24, !dbg !9431
  call void @llvm.dbg.value(metadata i32 %200, metadata !9217, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.value(metadata i32 %200, metadata !9217, metadata !DIExpression()), !dbg !9227
  br i1 %199, label %209, label %201, !dbg !9432

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9433
  %203 = and i32 %202, 2, !dbg !9435
  %204 = icmp eq i32 %203, 0, !dbg !9435
  br i1 %204, label %205, label %217, !dbg !9436

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #24, !dbg !9437
  %207 = sub i32 %206, %200, !dbg !9440
  %208 = icmp ugt i32 %207, 5000, !dbg !9441
  br i1 %208, label %311, label %201, !dbg !9442, !llvm.loop !9443

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9445
  %211 = and i32 %210, 2, !dbg !9445
  %212 = icmp eq i32 %211, 0, !dbg !9445
  br i1 %212, label %217, label %213, !dbg !9447

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #24, !dbg !9448
  %215 = sub i32 %214, %200, !dbg !9451
  %216 = icmp ugt i32 %215, 5000, !dbg !9452
  br i1 %216, label %311, label %209, !dbg !9453, !llvm.loop !9454

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !9456

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9457
  %220 = and i32 %219, -268435457, !dbg !9457
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9457
  br label %221, !dbg !9460

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !9461
  %223 = load i32, i32* %222, align 4, !dbg !9461
  %224 = icmp eq i32 %223, 0, !dbg !9463
  br i1 %224, label %310, label %225, !dbg !9464

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9465
  %227 = and i32 %226, 12, !dbg !9465
  %228 = icmp eq i32 %227, 8, !dbg !9468
  br i1 %228, label %277, label %229, !dbg !9469

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !9470
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !9473
  %231 = tail call i32 @HAL_GetTick() #24, !dbg !9473
  call void @llvm.dbg.value(metadata i32 %231, metadata !9217, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.value(metadata i32 %231, metadata !9217, metadata !DIExpression()), !dbg !9227
  br i1 %230, label %232, label %269, !dbg !9474

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9475
  %234 = and i32 %233, 33554432, !dbg !9475
  %235 = icmp eq i32 %234, 0, !dbg !9475
  br i1 %235, label %240, label %236, !dbg !9477

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #24, !dbg !9478
  %238 = sub i32 %237, %231, !dbg !9481
  %239 = icmp ugt i32 %238, 2, !dbg !9482
  br i1 %239, label %311, label %232, !dbg !9483, !llvm.loop !9484

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !9486
  %242 = load i32, i32* %241, align 4, !dbg !9486
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !9486
  %244 = load i32, i32* %243, align 4, !dbg !9486
  %245 = or i32 %244, %242, !dbg !9486
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !9486
  %247 = load i32, i32* %246, align 4, !dbg !9486
  %248 = shl i32 %247, 6, !dbg !9486
  %249 = or i32 %245, %248, !dbg !9486
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !9486
  %251 = load i32, i32* %250, align 4, !dbg !9486
  %252 = shl i32 %251, 15, !dbg !9486
  %253 = add i32 %252, -65536, !dbg !9486
  %254 = and i32 %253, -65536, !dbg !9486
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !9486
  %256 = load i32, i32* %255, align 4, !dbg !9486
  %257 = shl i32 %256, 24, !dbg !9486
  %258 = or i32 %249, %257, !dbg !9486
  %259 = or i32 %258, %254, !dbg !9486
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9486
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !9487
  %260 = tail call i32 @HAL_GetTick() #24, !dbg !9488
  call void @llvm.dbg.value(metadata i32 %260, metadata !9217, metadata !DIExpression()), !dbg !9227
  br label %261, !dbg !9489

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9490
  %263 = and i32 %262, 33554432, !dbg !9491
  %264 = icmp eq i32 %263, 0, !dbg !9491
  br i1 %264, label %265, label %310, !dbg !9489

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #24, !dbg !9492
  %267 = sub i32 %266, %260, !dbg !9495
  %268 = icmp ugt i32 %267, 2, !dbg !9496
  br i1 %268, label %311, label %261, !dbg !9497, !llvm.loop !9498

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9500
  %271 = and i32 %270, 33554432, !dbg !9500
  %272 = icmp eq i32 %271, 0, !dbg !9500
  br i1 %272, label %310, label %273, !dbg !9502

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #24, !dbg !9503
  %275 = sub i32 %274, %231, !dbg !9506
  %276 = icmp ugt i32 %275, 2, !dbg !9507
  br i1 %276, label %311, label %269, !dbg !9508, !llvm.loop !9509

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !9511
  br i1 %278, label %311, label %279, !dbg !9514

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9515
  call void @llvm.dbg.value(metadata i32 %280, metadata !9218, metadata !DIExpression()), !dbg !9227
  %281 = and i32 %280, 4194304, !dbg !9517
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !9519
  %283 = load i32, i32* %282, align 4, !dbg !9519
  %284 = icmp eq i32 %281, %283, !dbg !9520
  br i1 %284, label %285, label %311, !dbg !9521

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !9522
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !9523
  %288 = load i32, i32* %287, align 4, !dbg !9523
  %289 = icmp eq i32 %286, %288, !dbg !9524
  br i1 %289, label %290, label %311, !dbg !9525

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !9526
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !9527
  %293 = load i32, i32* %292, align 4, !dbg !9527
  %294 = shl i32 %293, 6, !dbg !9528
  %295 = icmp eq i32 %291, %294, !dbg !9529
  br i1 %295, label %296, label %311, !dbg !9530

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !9531
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !9532
  %299 = load i32, i32* %298, align 4, !dbg !9532
  %300 = shl i32 %299, 15, !dbg !9533
  %301 = add i32 %300, -65536, !dbg !9533
  %302 = and i32 %301, -65536, !dbg !9533
  %303 = icmp eq i32 %297, %302, !dbg !9534
  br i1 %303, label %304, label %311, !dbg !9535

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !9536
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !9537
  %307 = load i32, i32* %306, align 4, !dbg !9537
  %308 = shl i32 %307, 24, !dbg !9538
  %309 = icmp eq i32 %305, %308, !dbg !9539
  br i1 %309, label %310, label %311, !dbg !9540

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !9541

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !9227
  ret i32 %312, !dbg !9542
}

; Function Attrs: optsize
declare !dbg !9543 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !9545 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !9558, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 %1, metadata !9559, metadata !DIExpression()), !dbg !9561
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !9562
  br i1 %3, label %115, label %4, !dbg !9564

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9565
  %6 = and i32 %5, 7, !dbg !9565
  %7 = icmp ult i32 %6, %1, !dbg !9567
  br i1 %7, label %8, label %13, !dbg !9568

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !9569
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !9569
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9571
  %11 = and i32 %10, 7, !dbg !9571
  %12 = icmp eq i32 %11, %1, !dbg !9573
  br i1 %12, label %13, label %115, !dbg !9574

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !9575
  %15 = load i32, i32* %14, align 4, !dbg !9575
  %16 = and i32 %15, 2, !dbg !9577
  %17 = icmp eq i32 %16, 0, !dbg !9578
  br i1 %17, label %39, label %18, !dbg !9579

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !9580
  %20 = icmp eq i32 %19, 0, !dbg !9583
  br i1 %20, label %25, label %21, !dbg !9584

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9585
  %23 = or i32 %22, 7168, !dbg !9585
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9585
  %24 = load i32, i32* %14, align 4, !dbg !9587
  br label %25, !dbg !9589

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !9587
  %27 = and i32 %26, 8, !dbg !9590
  %28 = icmp eq i32 %27, 0, !dbg !9591
  br i1 %28, label %32, label %29, !dbg !9592

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9593
  %31 = or i32 %30, 57344, !dbg !9593
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9593
  br label %32, !dbg !9595

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9596
  %34 = and i32 %33, -241, !dbg !9596
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !9596
  %36 = load i32, i32* %35, align 4, !dbg !9596
  %37 = or i32 %34, %36, !dbg !9596
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9596
  %38 = load i32, i32* %14, align 4, !dbg !9597
  br label %39, !dbg !9599

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !9597
  %41 = and i32 %40, 1, !dbg !9600
  %42 = icmp eq i32 %41, 0, !dbg !9601
  br i1 %42, label %73, label %43, !dbg !9602

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !9603
  %45 = load i32, i32* %44, align 4, !dbg !9603
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !9606

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9607
  %48 = and i32 %47, 131072, !dbg !9610
  %49 = icmp eq i32 %48, 0, !dbg !9610
  br i1 %49, label %115, label %58, !dbg !9611

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9612
  %52 = and i32 %51, 33554432, !dbg !9616
  %53 = icmp eq i32 %52, 0, !dbg !9616
  br i1 %53, label %115, label %58, !dbg !9617

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9618
  %56 = and i32 %55, 2, !dbg !9621
  %57 = icmp eq i32 %56, 0, !dbg !9621
  br i1 %57, label %115, label %58, !dbg !9622

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9623
  %60 = and i32 %59, -4, !dbg !9623
  %61 = or i32 %60, %45, !dbg !9623
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9623
  %62 = tail call i32 @HAL_GetTick() #24, !dbg !9624
  call void @llvm.dbg.value(metadata i32 %62, metadata !9560, metadata !DIExpression()), !dbg !9561
  br label %63, !dbg !9625

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9626
  %65 = and i32 %64, 12, !dbg !9626
  %66 = load i32, i32* %44, align 4, !dbg !9627
  %67 = shl i32 %66, 2, !dbg !9628
  %68 = icmp eq i32 %65, %67, !dbg !9629
  br i1 %68, label %73, label %69, !dbg !9625

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #24, !dbg !9630
  %71 = sub i32 %70, %62, !dbg !9633
  %72 = icmp ugt i32 %71, 5000, !dbg !9634
  br i1 %72, label %115, label %63, !dbg !9635, !llvm.loop !9636

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9638
  %75 = and i32 %74, 7, !dbg !9638
  %76 = icmp ugt i32 %75, %1, !dbg !9640
  br i1 %76, label %77, label %82, !dbg !9641

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !9642
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !9642
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9644
  %80 = and i32 %79, 7, !dbg !9644
  %81 = icmp eq i32 %80, %1, !dbg !9646
  br i1 %81, label %82, label %115, !dbg !9647

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !9648
  %84 = and i32 %83, 4, !dbg !9650
  %85 = icmp eq i32 %84, 0, !dbg !9651
  br i1 %85, label %93, label %86, !dbg !9652

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9653
  %88 = and i32 %87, -7169, !dbg !9653
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !9653
  %90 = load i32, i32* %89, align 4, !dbg !9653
  %91 = or i32 %88, %90, !dbg !9653
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9653
  %92 = load i32, i32* %14, align 4, !dbg !9655
  br label %93, !dbg !9657

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !9655
  %95 = and i32 %94, 8, !dbg !9658
  %96 = icmp eq i32 %95, 0, !dbg !9659
  br i1 %96, label %104, label %97, !dbg !9660

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9661
  %99 = and i32 %98, -57345, !dbg !9661
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !9661
  %101 = load i32, i32* %100, align 4, !dbg !9661
  %102 = shl i32 %101, 3, !dbg !9661
  %103 = or i32 %102, %99, !dbg !9661
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9661
  br label %104, !dbg !9663

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !9664
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9665
  %107 = lshr i32 %106, 4, !dbg !9666
  %108 = and i32 %107, 15, !dbg !9666
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !9667
  %110 = load i8, i8* %109, align 1, !dbg !9667
  %111 = zext i8 %110 to i32, !dbg !9667
  %112 = lshr i32 %105, %111, !dbg !9668
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !9669
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !9670
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #24, !dbg !9671
  br label %115, !dbg !9672

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !9561
  ret i32 %116, !dbg !9673
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !9674 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9676, metadata !DIExpression()), !dbg !9680
  call void @llvm.dbg.value(metadata i32 0, metadata !9677, metadata !DIExpression()), !dbg !9680
  call void @llvm.dbg.value(metadata i32 0, metadata !9678, metadata !DIExpression()), !dbg !9680
  call void @llvm.dbg.value(metadata i32 0, metadata !9679, metadata !DIExpression()), !dbg !9680
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9681
  %2 = and i32 %1, 12, !dbg !9682
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !9683

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !9679, metadata !DIExpression()), !dbg !9680
  br label %29, !dbg !9684

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9687
  %6 = and i32 %5, 63, !dbg !9689
  call void @llvm.dbg.value(metadata i32 %6, metadata !9676, metadata !DIExpression()), !dbg !9680
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9690
  %8 = and i32 %7, 4194304, !dbg !9690
  %9 = icmp eq i32 %8, 0, !dbg !9692
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9693
  %11 = lshr i32 %10, 6, !dbg !9693
  %12 = and i32 %11, 511, !dbg !9693
  br i1 %9, label %16, label %13, !dbg !9694

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !9695
  %15 = udiv i32 %14, %6, !dbg !9697
  call void @llvm.dbg.value(metadata i32 %15, metadata !9677, metadata !DIExpression()), !dbg !9680
  br label %22, !dbg !9698

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !9699
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !9701
  %19 = zext i32 %6 to i64, !dbg !9702
  %20 = udiv i64 %18, %19, !dbg !9703
  %21 = trunc i64 %20 to i32, !dbg !9704
  call void @llvm.dbg.value(metadata i32 %21, metadata !9677, metadata !DIExpression()), !dbg !9680
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !9693
  call void @llvm.dbg.value(metadata i32 %23, metadata !9677, metadata !DIExpression()), !dbg !9680
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9705
  %25 = lshr i32 %24, 15, !dbg !9706
  %26 = and i32 %25, 6, !dbg !9706
  %27 = add nuw nsw i32 %26, 2, !dbg !9706
  call void @llvm.dbg.value(metadata i32 %27, metadata !9678, metadata !DIExpression()), !dbg !9680
  %28 = udiv i32 %23, %27, !dbg !9707
  call void @llvm.dbg.value(metadata i32 %28, metadata !9679, metadata !DIExpression()), !dbg !9680
  br label %29, !dbg !9708

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !9709
  call void @llvm.dbg.value(metadata i32 %30, metadata !9679, metadata !DIExpression()), !dbg !9680
  ret i32 %30, !dbg !9710
}

; Function Attrs: optsize
declare !dbg !9711 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9714 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9718, metadata !DIExpression()), !dbg !9738
  call void @llvm.dbg.value(metadata i32 %1, metadata !9719, metadata !DIExpression()), !dbg !9738
  call void @llvm.dbg.value(metadata i32 %2, metadata !9720, metadata !DIExpression()), !dbg !9738
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !9739
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !9739
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !9721, metadata !DIExpression()), !dbg !9740
  %8 = icmp eq i32 %0, 0, !dbg !9741
  br i1 %8, label %9, label %23, !dbg !9742

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !9743
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !9743
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9731, metadata !DIExpression()), !dbg !9743
  store volatile i32 0, i32* %5, align 4, !dbg !9743
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9743
  %12 = or i32 %11, 1, !dbg !9743
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9743
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9743
  %14 = and i32 %13, 1, !dbg !9743
  store volatile i32 %14, i32* %5, align 4, !dbg !9743
  %15 = load volatile i32, i32* %5, align 4, !dbg !9743
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !9744
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !9745
  store i32 256, i32* %16, align 4, !dbg !9746
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !9747
  store i32 2, i32* %17, align 4, !dbg !9748
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !9749
  store i32 3, i32* %18, align 4, !dbg !9750
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !9751
  store i32 0, i32* %19, align 4, !dbg !9752
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !9753
  store i32 0, i32* %20, align 4, !dbg !9754
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #24, !dbg !9755
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9756
  %22 = and i32 %21, -123731969, !dbg !9756
  br label %38, !dbg !9757

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !9758
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !9758
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9735, metadata !DIExpression()), !dbg !9758
  store volatile i32 0, i32* %6, align 4, !dbg !9758
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9758
  %26 = or i32 %25, 4, !dbg !9758
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9758
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !9758
  %28 = and i32 %27, 4, !dbg !9758
  store volatile i32 %28, i32* %6, align 4, !dbg !9758
  %29 = load volatile i32, i32* %6, align 4, !dbg !9758
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !9759
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !9760
  store i32 512, i32* %30, align 4, !dbg !9761
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !9762
  store i32 2, i32* %31, align 4, !dbg !9763
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !9764
  store i32 3, i32* %32, align 4, !dbg !9765
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !9766
  store i32 0, i32* %33, align 4, !dbg !9767
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !9768
  store i32 0, i32* %34, align 4, !dbg !9769
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #24, !dbg !9770
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9771
  %36 = and i32 %35, 134217727, !dbg !9771
  %37 = shl i32 %2, 3, !dbg !9771
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !9772
  %42 = or i32 %41, %40, !dbg !9772
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9772
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !9773
  ret void, !dbg !9773
}

; Function Attrs: optsize
declare !dbg !9774 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #13 !dbg !9778 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !9779
  ret void, !dbg !9780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #13 !dbg !9781 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !9782
  ret void, !dbg !9783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !9784 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !9785
  ret i32 %1, !dbg !9786
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #14 !dbg !9787 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #25, !dbg !9788
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9789
  %3 = lshr i32 %2, 10, !dbg !9790
  %4 = and i32 %3, 7, !dbg !9790
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !9791
  %6 = load i8, i8* %5, align 1, !dbg !9791
  %7 = zext i8 %6 to i32, !dbg !9791
  %8 = lshr i32 %1, %7, !dbg !9792
  ret i32 %8, !dbg !9793
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #14 !dbg !9794 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #25, !dbg !9795
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9796
  %3 = lshr i32 %2, 13, !dbg !9797
  %4 = and i32 %3, 7, !dbg !9797
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !9798
  %6 = load i8, i8* %5, align 1, !dbg !9798
  %7 = zext i8 %6 to i32, !dbg !9798
  %8 = lshr i32 %1, %7, !dbg !9799
  ret i32 %8, !dbg !9800
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !9801 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !9805, metadata !DIExpression()), !dbg !9806
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !9807
  store i32 15, i32* %2, align 4, !dbg !9808
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9809
  %4 = and i32 %3, 262144, !dbg !9811
  %5 = icmp eq i32 %4, 0, !dbg !9812
  br i1 %5, label %8, label %6, !dbg !9813

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9814
  store i32 327680, i32* %7, align 4, !dbg !9816
  br label %15, !dbg !9817

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9818
  %10 = and i32 %9, 65536, !dbg !9820
  %11 = icmp eq i32 %10, 0, !dbg !9821
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9822
  br i1 %11, label %14, label %13, !dbg !9823

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !9824
  br label %15, !dbg !9826

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !9827
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9829
  %17 = and i32 %16, 1, !dbg !9831
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9832
  store i32 %17, i32* %18, align 4, !dbg !9834
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9835
  %20 = lshr i32 %19, 3, !dbg !9836
  %21 = and i32 %20, 31, !dbg !9836
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !9837
  store i32 %21, i32* %22, align 4, !dbg !9838
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9839
  %24 = and i32 %23, 4, !dbg !9841
  %25 = icmp eq i32 %24, 0, !dbg !9842
  br i1 %25, label %28, label %26, !dbg !9843

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !9844
  store i32 5, i32* %27, align 4, !dbg !9846
  br label %35, !dbg !9847

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !9848
  %30 = and i32 %29, 1, !dbg !9850
  %31 = icmp eq i32 %30, 0, !dbg !9851
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !9852
  br i1 %31, label %34, label %33, !dbg !9853

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !9854
  br label %35, !dbg !9856

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !9857
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !9859
  %37 = and i32 %36, 1, !dbg !9861
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !9862
  store i32 %37, i32* %38, align 4, !dbg !9864
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9865
  %40 = and i32 %39, 16777216, !dbg !9867
  %41 = icmp eq i32 %40, 0, !dbg !9868
  %42 = select i1 %41, i32 1, i32 2, !dbg !9869
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !9870
  store i32 %42, i32* %43, align 4, !dbg !9872
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9873
  %45 = and i32 %44, 4194304, !dbg !9874
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !9875
  store i32 %45, i32* %46, align 4, !dbg !9876
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9877
  %48 = and i32 %47, 63, !dbg !9878
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !9879
  store i32 %48, i32* %49, align 4, !dbg !9880
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9881
  %51 = lshr i32 %50, 6, !dbg !9882
  %52 = and i32 %51, 511, !dbg !9882
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !9883
  store i32 %52, i32* %53, align 4, !dbg !9884
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9885
  %55 = shl i32 %54, 1, !dbg !9886
  %56 = and i32 %55, 393216, !dbg !9886
  %57 = add nuw nsw i32 %56, 131072, !dbg !9886
  %58 = lshr exact i32 %57, 16, !dbg !9887
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !9888
  store i32 %58, i32* %59, align 4, !dbg !9889
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9890
  %61 = lshr i32 %60, 24, !dbg !9891
  %62 = and i32 %61, 15, !dbg !9891
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !9892
  store i32 %62, i32* %63, align 4, !dbg !9893
  ret void, !dbg !9894
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #14 !dbg !9895 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !9899, metadata !DIExpression()), !dbg !9901
  call void @llvm.dbg.value(metadata i32* %1, metadata !9900, metadata !DIExpression()), !dbg !9901
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !9902
  store i32 15, i32* %3, align 4, !dbg !9903
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9904
  %5 = and i32 %4, 3, !dbg !9905
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !9906
  store i32 %5, i32* %6, align 4, !dbg !9907
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9908
  %8 = and i32 %7, 240, !dbg !9909
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !9910
  store i32 %8, i32* %9, align 4, !dbg !9911
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9912
  %11 = and i32 %10, 7168, !dbg !9913
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !9914
  store i32 %11, i32* %12, align 4, !dbg !9915
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9916
  %14 = lshr i32 %13, 3, !dbg !9917
  %15 = and i32 %14, 7168, !dbg !9917
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !9918
  store i32 %15, i32* %16, align 4, !dbg !9919
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9920
  %18 = and i32 %17, 7, !dbg !9921
  store i32 %18, i32* %1, align 4, !dbg !9922
  ret void, !dbg !9923
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !9924 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9925
  %2 = and i32 %1, 128, !dbg !9925
  %3 = icmp eq i32 %2, 0, !dbg !9925
  br i1 %3, label %5, label %4, !dbg !9927

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #25, !dbg !9928
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !9930
  br label %5, !dbg !9931

5:                                                ; preds = %4, %0
  ret void, !dbg !9932
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !9933 {
  ret void, !dbg !9934
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #13 !dbg !9935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9938, metadata !DIExpression()), !dbg !9939
  tail call fastcc void @LL_InitTick(i32 noundef %0) #25, !dbg !9940
  ret void, !dbg !9941
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #13 !dbg !9942 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9945, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.value(metadata i32 1000, metadata !9946, metadata !DIExpression()), !dbg !9947
  %2 = udiv i32 %0, 1000, !dbg !9948
  %3 = add nsw i32 %2, -1, !dbg !9949
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9950
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9951
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9952
  ret void, !dbg !9953
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #15 !dbg !9954 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9956, metadata !DIExpression()), !dbg !9958
  %3 = bitcast i32* %2 to i8*, !dbg !9959
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9959
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9957, metadata !DIExpression()), !dbg !9960
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9961
  store volatile i32 %4, i32* %2, align 4, !dbg !9960
  %5 = load volatile i32, i32* %2, align 4, !dbg !9962
  %6 = icmp eq i32 %0, -1, !dbg !9963
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9956, metadata !DIExpression()), !dbg !9958
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !9958
  call void @llvm.dbg.value(metadata i32 %8, metadata !9956, metadata !DIExpression()), !dbg !9958
  br label %9, !dbg !9965

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !9956, metadata !DIExpression()), !dbg !9958
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9966
  call void @llvm.dbg.value(metadata i32 undef, metadata !9956, metadata !DIExpression()), !dbg !9958
  %12 = shl i32 %11, 15, !dbg !9958
  %13 = ashr i32 %12, 31, !dbg !9958
  %14 = add i32 %13, %10, !dbg !9958
  call void @llvm.dbg.value(metadata i32 %14, metadata !9956, metadata !DIExpression()), !dbg !9958
  %15 = icmp eq i32 %14, 0, !dbg !9965
  br i1 %15, label %16, label %9, !dbg !9965

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9969
  ret void, !dbg !9969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !9970 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9972, metadata !DIExpression()), !dbg !9973
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !9974
  ret void, !dbg !9975
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #13 !dbg !9976 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9981, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.value(metadata i32 0, metadata !9984, metadata !DIExpression()), !dbg !9986
  call void @llvm.dbg.value(metadata i32 0, metadata !9985, metadata !DIExpression()), !dbg !9986
  %2 = icmp eq i32 %0, 0, !dbg !9987
  br i1 %2, label %50, label %3, !dbg !9989

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !9990
  %5 = icmp eq i32 %4, 49152, !dbg !9993
  br i1 %5, label %6, label %15, !dbg !9994

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !9984, metadata !DIExpression()), !dbg !9986
  %7 = add i32 %0, -64000001, !dbg !9995
  %8 = icmp ult i32 %7, 26000000, !dbg !9995
  br i1 %8, label %15, label %9, !dbg !9995

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !9998
  %11 = select i1 %10, i32 0, i32 3, !dbg !10000
  call void @llvm.dbg.value(metadata i32 %11, metadata !9984, metadata !DIExpression()), !dbg !9986
  %12 = add i32 %0, -30000001, !dbg !10001
  %13 = icmp ult i32 %12, 60000000, !dbg !10001
  %14 = select i1 %13, i32 1, i32 %11, !dbg !10001
  call void @llvm.dbg.value(metadata i32 %14, metadata !9984, metadata !DIExpression()), !dbg !9986
  br label %15, !dbg !10001

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !9986
  call void @llvm.dbg.value(metadata i32 %16, metadata !9984, metadata !DIExpression()), !dbg !9986
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !10004
  %18 = icmp eq i32 %17, 32768, !dbg !10006
  br i1 %18, label %19, label %27, !dbg !10007

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !10008
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !10011
  br i1 %22, label %27, label %23, !dbg !10011

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !10012
  %25 = and i1 %24, %21, !dbg !10015
  %26 = select i1 %25, i32 1, i32 %16, !dbg !10015
  call void @llvm.dbg.value(metadata i32 %26, metadata !9984, metadata !DIExpression()), !dbg !9986
  br label %27, !dbg !10015

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !10016
  call void @llvm.dbg.value(metadata i32 %28, metadata !9984, metadata !DIExpression()), !dbg !9986
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !10017
  %30 = icmp eq i32 %29, 16384, !dbg !10019
  br i1 %30, label %31, label %39, !dbg !10020

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !10021
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !10024
  br i1 %34, label %39, label %35, !dbg !10024

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !10025
  %37 = select i1 %36, i1 %33, i1 false, !dbg !10028
  %38 = select i1 %37, i32 1, i32 %28, !dbg !10028
  call void @llvm.dbg.value(metadata i32 %38, metadata !9984, metadata !DIExpression()), !dbg !9986
  br label %39, !dbg !10028

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !10016
  call void @llvm.dbg.value(metadata i32 %40, metadata !9984, metadata !DIExpression()), !dbg !9986
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #25, !dbg !10029
  call void @llvm.dbg.value(metadata i32 2, metadata !9982, metadata !DIExpression()), !dbg !9986
  br label %41, !dbg !10030

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !10016
  call void @llvm.dbg.value(metadata i32 %42, metadata !9982, metadata !DIExpression()), !dbg !9986
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #25, !dbg !10031
  call void @llvm.dbg.value(metadata i32 %43, metadata !9983, metadata !DIExpression()), !dbg !9986
  %44 = add nsw i32 %42, -1, !dbg !10033
  call void @llvm.dbg.value(metadata i32 %44, metadata !9982, metadata !DIExpression()), !dbg !9986
  %45 = icmp ne i32 %43, %40, !dbg !10034
  %46 = icmp ne i32 %44, 0, !dbg !10035
  %47 = select i1 %45, i1 %46, i1 false, !dbg !10035
  br i1 %47, label %41, label %48, !dbg !10036, !llvm.loop !10037

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !10039
  call void @llvm.dbg.value(metadata i32 %51, metadata !9985, metadata !DIExpression()), !dbg !9986
  ret i32 %51, !dbg !10040
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #14 !dbg !10041 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10043
  %2 = and i32 %1, 49152, !dbg !10043
  ret i32 %2, !dbg !10044
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #13 !dbg !10045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10047, metadata !DIExpression()), !dbg !10048
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10049
  %3 = and i32 %2, -8, !dbg !10049
  %4 = or i32 %3, %0, !dbg !10049
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10049
  ret void, !dbg !10050
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #14 !dbg !10051 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !10052
  %2 = and i32 %1, 7, !dbg !10052
  ret i32 %2, !dbg !10053
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !10054 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !10072, metadata !DIExpression()), !dbg !10076
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10073, metadata !DIExpression()), !dbg !10076
  call void @llvm.dbg.value(metadata i32 0, metadata !10074, metadata !DIExpression()), !dbg !10076
  call void @llvm.dbg.value(metadata i32 0, metadata !10075, metadata !DIExpression()), !dbg !10076
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !10077
  %4 = icmp eq i32 %3, 0, !dbg !10079
  br i1 %4, label %5, label %21, !dbg !10080

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #25, !dbg !10081
  call void @llvm.dbg.value(metadata i32 %6, metadata !10075, metadata !DIExpression()), !dbg !10076
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.71() #25, !dbg !10083
  %8 = icmp eq i32 %7, 1, !dbg !10085
  br i1 %8, label %13, label %9, !dbg !10086

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.72() #25, !dbg !10087
  br label %10, !dbg !10089

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.71() #25, !dbg !10090
  %12 = icmp eq i32 %11, 1, !dbg !10091
  br i1 %12, label %13, label %10, !dbg !10089, !llvm.loop !10092

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !10094
  %15 = load i32, i32* %14, align 4, !dbg !10094
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !10095
  %17 = load i32, i32* %16, align 4, !dbg !10095
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !10096
  %19 = load i32, i32* %18, align 4, !dbg !10096
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.73(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #25, !dbg !10097
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #25, !dbg !10098
  call void @llvm.dbg.value(metadata i32 %20, metadata !10074, metadata !DIExpression()), !dbg !10076
  br label %21, !dbg !10099

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !10100
  call void @llvm.dbg.value(metadata i32 %22, metadata !10074, metadata !DIExpression()), !dbg !10076
  ret i32 %22, !dbg !10101
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #14 !dbg !10102 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10106, metadata !DIExpression()), !dbg !10107
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.75() #25, !dbg !10108
  %2 = icmp ne i32 %1, 0, !dbg !10110
  call void @llvm.dbg.value(metadata i1 %2, metadata !10106, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10107
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #25, !dbg !10111
  %4 = icmp ne i32 %3, 0, !dbg !10113
  %5 = select i1 %4, i1 true, i1 %2, !dbg !10114
  %6 = zext i1 %5 to i32, !dbg !10114
  call void @llvm.dbg.value(metadata i32 %6, metadata !10106, metadata !DIExpression()), !dbg !10107
  ret i32 %6, !dbg !10115
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !10116 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10120, metadata !DIExpression()), !dbg !10123
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10121, metadata !DIExpression()), !dbg !10123
  call void @llvm.dbg.value(metadata i32 0, metadata !10122, metadata !DIExpression()), !dbg !10123
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10124
  %4 = load i32, i32* %3, align 4, !dbg !10124
  %5 = and i32 %4, 63, !dbg !10125
  %6 = udiv i32 %0, %5, !dbg !10126
  call void @llvm.dbg.value(metadata i32 %6, metadata !10122, metadata !DIExpression()), !dbg !10123
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10127
  %8 = load i32, i32* %7, align 4, !dbg !10127
  %9 = and i32 %8, 511, !dbg !10128
  %10 = mul i32 %9, %6, !dbg !10129
  call void @llvm.dbg.value(metadata i32 %10, metadata !10122, metadata !DIExpression()), !dbg !10123
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10130
  %12 = load i32, i32* %11, align 4, !dbg !10130
  %13 = lshr i32 %12, 15, !dbg !10131
  %14 = and i32 %13, 131070, !dbg !10131
  %15 = add nuw nsw i32 %14, 2, !dbg !10131
  %16 = udiv i32 %10, %15, !dbg !10132
  call void @llvm.dbg.value(metadata i32 %16, metadata !10122, metadata !DIExpression()), !dbg !10123
  ret i32 %16, !dbg !10133
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.71() unnamed_addr #14 !dbg !10134 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10135
  %2 = lshr i32 %1, 1, !dbg !10136
  %3 = and i32 %2, 1, !dbg !10136
  ret i32 %3, !dbg !10137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.72() unnamed_addr #13 !dbg !10138 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10139
  %2 = or i32 %1, 1, !dbg !10139
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10139
  ret void, !dbg !10140
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.73(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #13 !dbg !10141 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10143, metadata !DIExpression()), !dbg !10147
  call void @llvm.dbg.value(metadata i32 %1, metadata !10144, metadata !DIExpression()), !dbg !10147
  call void @llvm.dbg.value(metadata i32 %2, metadata !10145, metadata !DIExpression()), !dbg !10147
  call void @llvm.dbg.value(metadata i32 %3, metadata !10146, metadata !DIExpression()), !dbg !10147
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10148
  %6 = and i32 %5, -4227072, !dbg !10148
  %7 = or i32 %1, %0, !dbg !10148
  %8 = shl i32 %2, 6, !dbg !10148
  %9 = or i32 %7, %8, !dbg !10148
  %10 = or i32 %9, %6, !dbg !10148
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10148
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10149
  %12 = and i32 %11, -196609, !dbg !10149
  %13 = or i32 %12, %3, !dbg !10149
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10149
  ret void, !dbg !10150
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #13 !dbg !10151 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10155, metadata !DIExpression()), !dbg !10159
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10156, metadata !DIExpression()), !dbg !10159
  call void @llvm.dbg.value(metadata i32 0, metadata !10157, metadata !DIExpression()), !dbg !10159
  call void @llvm.dbg.value(metadata i32 0, metadata !10158, metadata !DIExpression()), !dbg !10159
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10160
  %4 = load i32, i32* %3, align 4, !dbg !10160
  %5 = lshr i32 %4, 4, !dbg !10160
  %6 = and i32 %5, 15, !dbg !10160
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !10160
  %8 = load i8, i8* %7, align 1, !dbg !10160
  %9 = zext i8 %8 to i32, !dbg !10160
  %10 = lshr i32 %0, %9, !dbg !10160
  call void @llvm.dbg.value(metadata i32 %10, metadata !10158, metadata !DIExpression()), !dbg !10159
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !10161
  %12 = icmp ult i32 %11, %10, !dbg !10163
  br i1 %12, label %13, label %16, !dbg !10164

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !10165
  call void @llvm.dbg.value(metadata i32 %14, metadata !10157, metadata !DIExpression()), !dbg !10159
  %15 = icmp eq i32 %14, 0, !dbg !10167
  br i1 %15, label %16, label %30, !dbg !10169

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.74() #25, !dbg !10170
  br label %17, !dbg !10172

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.75() #25, !dbg !10173
  %19 = icmp eq i32 %18, 1, !dbg !10174
  br i1 %19, label %20, label %17, !dbg !10172, !llvm.loop !10175

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !10177
  tail call fastcc void @LL_RCC_SetAHBPrescaler.76(i32 noundef %21) #25, !dbg !10178
  tail call fastcc void @LL_RCC_SetSysClkSource.77() #25, !dbg !10179
  br label %22, !dbg !10180

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.78() #25, !dbg !10181
  %24 = icmp eq i32 %23, 8, !dbg !10182
  br i1 %24, label %25, label %22, !dbg !10180, !llvm.loop !10183

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10185
  %27 = load i32, i32* %26, align 4, !dbg !10185
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.79(i32 noundef %27) #25, !dbg !10186
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10187
  %29 = load i32, i32* %28, align 4, !dbg !10187
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.80(i32 noundef %29) #25, !dbg !10188
  br label %30, !dbg !10189

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !10190
  %33 = icmp ugt i32 %32, %10, !dbg !10192
  br i1 %33, label %34, label %36, !dbg !10193

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !10194
  call void @llvm.dbg.value(metadata i32 %35, metadata !10157, metadata !DIExpression()), !dbg !10159
  br label %36, !dbg !10196

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !10159
  call void @llvm.dbg.value(metadata i32 %37, metadata !10157, metadata !DIExpression()), !dbg !10159
  %38 = icmp eq i32 %37, 0, !dbg !10197
  br i1 %38, label %39, label %40, !dbg !10199

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #25, !dbg !10200
  br label %40, !dbg !10202

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !10203
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.74() unnamed_addr #13 !dbg !10204 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10205
  %2 = or i32 %1, 16777216, !dbg !10205
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10205
  ret void, !dbg !10206
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.75() unnamed_addr #14 !dbg !10207 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10208
  %2 = lshr i32 %1, 25, !dbg !10209
  %3 = and i32 %2, 1, !dbg !10209
  ret i32 %3, !dbg !10210
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.76(i32 noundef %0) unnamed_addr #13 !dbg !10211 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10213, metadata !DIExpression()), !dbg !10214
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10215
  %3 = and i32 %2, -241, !dbg !10215
  %4 = or i32 %3, %0, !dbg !10215
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10215
  ret void, !dbg !10216
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.77() unnamed_addr #13 !dbg !10217 {
  call void @llvm.dbg.value(metadata i32 2, metadata !10219, metadata !DIExpression()), !dbg !10220
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10221
  %2 = and i32 %1, -4, !dbg !10221
  %3 = or i32 %2, 2, !dbg !10221
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10221
  ret void, !dbg !10222
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.78() unnamed_addr #14 !dbg !10223 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10224
  %2 = and i32 %1, 12, !dbg !10224
  ret i32 %2, !dbg !10225
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.79(i32 noundef %0) unnamed_addr #13 !dbg !10226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10228, metadata !DIExpression()), !dbg !10229
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10230
  %3 = and i32 %2, -7169, !dbg !10230
  %4 = or i32 %3, %0, !dbg !10230
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10230
  ret void, !dbg !10231
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.80(i32 noundef %0) unnamed_addr #13 !dbg !10232 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10234, metadata !DIExpression()), !dbg !10235
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10236
  %3 = and i32 %2, -57345, !dbg !10236
  %4 = or i32 %3, %0, !dbg !10236
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10236
  ret void, !dbg !10237
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #14 !dbg !10238 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10239
  %2 = lshr i32 %1, 27, !dbg !10240
  %3 = and i32 %2, 1, !dbg !10240
  ret i32 %3, !dbg !10241
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !10242 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10246, metadata !DIExpression()), !dbg !10252
  call void @llvm.dbg.value(metadata i32 %1, metadata !10247, metadata !DIExpression()), !dbg !10252
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !10248, metadata !DIExpression()), !dbg !10252
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !10249, metadata !DIExpression()), !dbg !10252
  call void @llvm.dbg.value(metadata i32 0, metadata !10250, metadata !DIExpression()), !dbg !10252
  call void @llvm.dbg.value(metadata i32 0, metadata !10251, metadata !DIExpression()), !dbg !10252
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !10253
  %6 = icmp eq i32 %5, 0, !dbg !10255
  br i1 %6, label %7, label %27, !dbg !10256

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #25, !dbg !10257
  call void @llvm.dbg.value(metadata i32 %8, metadata !10251, metadata !DIExpression()), !dbg !10252
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #25, !dbg !10259
  %10 = icmp eq i32 %9, 1, !dbg !10261
  br i1 %10, label %19, label %11, !dbg !10262

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !10263
  br i1 %12, label %13, label %14, !dbg !10266

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #25, !dbg !10267
  br label %15, !dbg !10269

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #25, !dbg !10270
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #25, !dbg !10272
  br label %16, !dbg !10273

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #25, !dbg !10274
  %18 = icmp eq i32 %17, 1, !dbg !10275
  br i1 %18, label %19, label %16, !dbg !10273, !llvm.loop !10276

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !10278
  %21 = load i32, i32* %20, align 4, !dbg !10278
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !10279
  %23 = load i32, i32* %22, align 4, !dbg !10279
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !10280
  %25 = load i32, i32* %24, align 4, !dbg !10280
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.73(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #25, !dbg !10281
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #25, !dbg !10282
  call void @llvm.dbg.value(metadata i32 %26, metadata !10250, metadata !DIExpression()), !dbg !10252
  br label %27, !dbg !10283

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !10284
  call void @llvm.dbg.value(metadata i32 %28, metadata !10250, metadata !DIExpression()), !dbg !10252
  ret i32 %28, !dbg !10285
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #14 !dbg !10286 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10287
  %2 = lshr i32 %1, 17, !dbg !10288
  %3 = and i32 %2, 1, !dbg !10288
  ret i32 %3, !dbg !10289
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #13 !dbg !10290 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10291
  %2 = or i32 %1, 262144, !dbg !10291
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10291
  ret void, !dbg !10292
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #13 !dbg !10293 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10294
  %2 = and i32 %1, -262145, !dbg !10294
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10294
  ret void, !dbg !10295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #13 !dbg !10296 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10297
  %2 = or i32 %1, 65536, !dbg !10297
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10297
  ret void, !dbg !10298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal i32 @init(%struct.device* nocapture noundef readnone %0) #4 !dbg !10299 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10301, metadata !DIExpression()), !dbg !10302
  store i32 5, i32* getelementptr inbounds (%union.anon.15, %union.anon.15* @data, i32 0, i32 0), align 4, !dbg !10303
  ret i32 0, !dbg !10304
}

; Function Attrs: noinline nounwind optsize
define internal void @print_impl(%struct.device* nocapture noundef readnone %0) #1 !dbg !10305 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10309, metadata !DIExpression()), !dbg !10310
  %2 = load i32, i32* getelementptr inbounds (%union.anon.15, %union.anon.15* @data, i32 0, i32 0), align 4, !dbg !10311
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1.83, i32 0, i32 0), i32 noundef %2) #24, !dbg !10312
  ret void, !dbg !10313
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !10314 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10317, metadata !DIExpression()), !dbg !10333
  call void @llvm.dbg.value(metadata i32 undef, metadata !10317, metadata !DIExpression()), !dbg !10333
  call void @llvm.dbg.value(metadata i32 undef, metadata !10317, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !10333
  ret void, !dbg !10334
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !10335 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10339, metadata !DIExpression()), !dbg !10341
  %2 = icmp eq i8* %0, null, !dbg !10342
  br i1 %2, label %29, label %3, !dbg !10344

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !10345
  %5 = icmp eq i8 %4, 0, !dbg !10346
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !10347
  br i1 %6, label %29, label %8, !dbg !10347

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10340, metadata !DIExpression()), !dbg !10341
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !10348

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !10340, metadata !DIExpression()), !dbg !10341
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !10350
  br i1 %10, label %11, label %15, !dbg !10355

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !10356
  %13 = load i8*, i8** %12, align 4, !dbg !10356
  %14 = icmp eq i8* %13, %0, !dbg !10357
  br i1 %14, label %29, label %15, !dbg !10358

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !10359
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !10340, metadata !DIExpression()), !dbg !10341
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10360
  br i1 %17, label %7, label %8, !dbg !10361, !llvm.loop !10362

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !10340, metadata !DIExpression()), !dbg !10341
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !10364
  br i1 %20, label %21, label %26, !dbg !10368

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !10369
  %23 = load i8*, i8** %22, align 4, !dbg !10369
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !10370
  %25 = icmp eq i32 %24, 0, !dbg !10371
  br i1 %25, label %29, label %26, !dbg !10372

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !10373
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !10340, metadata !DIExpression()), !dbg !10341
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10374
  br i1 %28, label %29, label %18, !dbg !10348, !llvm.loop !10375

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !10341
  ret %struct.device* %30, !dbg !10377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !10378 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10382, metadata !DIExpression()), !dbg !10383
  %2 = icmp eq %struct.device* %0, null, !dbg !10384
  br i1 %2, label %14, label %3, !dbg !10386

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !10387
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !10387
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !10388
  %7 = load i8, i8* %6, align 1, !dbg !10388
  %8 = and i8 %7, 1, !dbg !10388
  %9 = icmp eq i8 %8, 0, !dbg !10388
  br i1 %9, label %14, label %10, !dbg !10389

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !10390
  %12 = load i8, i8* %11, align 1, !dbg !10390
  %13 = icmp eq i8 %12, 0, !dbg !10391
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !10383
  ret i1 %15, !dbg !10392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !10393 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !10398, metadata !DIExpression()), !dbg !10399
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !10400
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !10401
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10402 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10410, metadata !DIExpression()), !dbg !10415
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10411, metadata !DIExpression()), !dbg !10415
  call void @llvm.dbg.value(metadata i8* %2, metadata !10412, metadata !DIExpression()), !dbg !10415
  %5 = bitcast i32* %4 to i8*, !dbg !10416
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10416
  call void @llvm.dbg.value(metadata i32 0, metadata !10413, metadata !DIExpression()), !dbg !10415
  store i32 0, i32* %4, align 4, !dbg !10417
  call void @llvm.dbg.value(metadata i32* %4, metadata !10413, metadata !DIExpression(DW_OP_deref)), !dbg !10415
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !10418
  call void @llvm.dbg.value(metadata i16* %6, metadata !10414, metadata !DIExpression()), !dbg !10415
  %7 = load i32, i32* %4, align 4, !dbg !10419
  call void @llvm.dbg.value(metadata i32 %7, metadata !10413, metadata !DIExpression()), !dbg !10415
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !10420
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10421
  ret i32 %8, !dbg !10422
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !10423 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10427, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata i32* %1, metadata !10428, metadata !DIExpression()), !dbg !10433
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10434
  %4 = load i16*, i16** %3, align 4, !dbg !10434
  call void @llvm.dbg.value(metadata i16* %4, metadata !10429, metadata !DIExpression()), !dbg !10433
  %5 = icmp eq i16* %4, null, !dbg !10435
  br i1 %5, label %14, label %6, !dbg !10436

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !10437
  call void @llvm.dbg.value(metadata i32 %7, metadata !10430, metadata !DIExpression()), !dbg !10437
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !10438
  %9 = load i16, i16* %8, align 2, !dbg !10438
  %10 = add i16 %9, -32767, !dbg !10439
  %11 = icmp ult i16 %10, 2, !dbg !10439
  %12 = add i32 %7, 1, !dbg !10440
  call void @llvm.dbg.value(metadata i32 %12, metadata !10430, metadata !DIExpression()), !dbg !10437
  br i1 %11, label %13, label %6, !dbg !10439, !llvm.loop !10442

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !10445
  br label %14, !dbg !10446

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !10447
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !10448 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !10452, metadata !DIExpression()), !dbg !10463
  call void @llvm.dbg.value(metadata i32 %1, metadata !10453, metadata !DIExpression()), !dbg !10463
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !10454, metadata !DIExpression()), !dbg !10463
  call void @llvm.dbg.value(metadata i8* %3, metadata !10455, metadata !DIExpression()), !dbg !10463
  call void @llvm.dbg.value(metadata i32 0, metadata !10456, metadata !DIExpression()), !dbg !10464
  %5 = icmp eq i32 %1, 0, !dbg !10465
  br i1 %5, label %16, label %8, !dbg !10466

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !10456, metadata !DIExpression()), !dbg !10464
  %7 = icmp eq i32 %15, %1, !dbg !10465
  br i1 %7, label %16, label %8, !dbg !10466, !llvm.loop !10467

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10456, metadata !DIExpression()), !dbg !10464
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !10469
  %11 = load i16, i16* %10, align 2, !dbg !10469
  call void @llvm.dbg.value(metadata i16 %11, metadata !10458, metadata !DIExpression()), !dbg !10470
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !10471
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !10461, metadata !DIExpression()), !dbg !10470
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !10472
  call void @llvm.dbg.value(metadata i32 %13, metadata !10462, metadata !DIExpression()), !dbg !10470
  %14 = icmp slt i32 %13, 0, !dbg !10473
  %15 = add nuw i32 %9, 1, !dbg !10475
  call void @llvm.dbg.value(metadata i32 %15, metadata !10456, metadata !DIExpression()), !dbg !10464
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !10476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #12 !dbg !10477 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10481, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !10482, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !10483, metadata !DIExpression()), !dbg !10484
  %2 = sext i16 %0 to i32, !dbg !10485
  %3 = icmp slt i16 %0, 1, !dbg !10487
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !10488
  %6 = add nsw i32 %2, -1, !dbg !10488
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !10488
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !10488
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10482, metadata !DIExpression()), !dbg !10484
  ret %struct.device* %8, !dbg !10489
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10490 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10492, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10493, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.value(metadata i8* %2, metadata !10494, metadata !DIExpression()), !dbg !10497
  %5 = bitcast i32* %4 to i8*, !dbg !10498
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10498
  call void @llvm.dbg.value(metadata i32 0, metadata !10495, metadata !DIExpression()), !dbg !10497
  store i32 0, i32* %4, align 4, !dbg !10499
  call void @llvm.dbg.value(metadata i32* %4, metadata !10495, metadata !DIExpression(DW_OP_deref)), !dbg !10497
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !10500
  call void @llvm.dbg.value(metadata i16* %6, metadata !10496, metadata !DIExpression()), !dbg !10497
  %7 = load i32, i32* %4, align 4, !dbg !10501
  call void @llvm.dbg.value(metadata i32 %7, metadata !10495, metadata !DIExpression()), !dbg !10497
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !10502
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10503
  ret i32 %8, !dbg !10504
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !10505 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10507, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i32* %1, metadata !10508, metadata !DIExpression()), !dbg !10512
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10513
  %4 = load i16*, i16** %3, align 4, !dbg !10513
  call void @llvm.dbg.value(metadata i16* %4, metadata !10509, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i32 0, metadata !10510, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i32 0, metadata !10511, metadata !DIExpression()), !dbg !10512
  %5 = icmp eq i16* %4, null, !dbg !10514
  br i1 %5, label %22, label %6, !dbg !10516

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10510, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i16* %8, metadata !10509, metadata !DIExpression()), !dbg !10512
  %9 = load i16, i16* %8, align 2, !dbg !10517
  %10 = icmp eq i16 %9, -32768, !dbg !10521
  call void @llvm.dbg.value(metadata i32 undef, metadata !10510, metadata !DIExpression()), !dbg !10512
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !10522
  call void @llvm.dbg.value(metadata i16* %11, metadata !10509, metadata !DIExpression()), !dbg !10512
  %12 = zext i1 %10 to i32, !dbg !10523
  %13 = add i32 %7, %12, !dbg !10523
  call void @llvm.dbg.value(metadata i32 %13, metadata !10510, metadata !DIExpression()), !dbg !10512
  %14 = icmp eq i32 %13, 2, !dbg !10524
  br i1 %14, label %15, label %6, !dbg !10525

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !10512
  call void @llvm.dbg.value(metadata i32 %16, metadata !10511, metadata !DIExpression()), !dbg !10512
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !10526
  %18 = load i16, i16* %17, align 2, !dbg !10526
  %19 = icmp eq i16 %18, 32767, !dbg !10527
  %20 = add i32 %16, 1, !dbg !10528
  call void @llvm.dbg.value(metadata i32 %20, metadata !10511, metadata !DIExpression()), !dbg !10512
  br i1 %19, label %21, label %15, !dbg !10530, !llvm.loop !10531

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !10533
  br label %22, !dbg !10534

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !10535
  call void @llvm.dbg.value(metadata i16* %23, metadata !10509, metadata !DIExpression()), !dbg !10512
  ret i16* %23, !dbg !10536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !10537 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10540
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !10541
  ret i32* %2, !dbg !10542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #12 !dbg !10543 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !10691, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !10692, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10693, metadata !DIExpression()), !dbg !10694
  ret void, !dbg !10695
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !10696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10700, metadata !DIExpression()), !dbg !10702
  call void @llvm.dbg.value(metadata i32 %1, metadata !10701, metadata !DIExpression()), !dbg !10702
  ret void, !dbg !10703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !10704 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10708, metadata !DIExpression()), !dbg !10710
  call void @llvm.dbg.value(metadata i32 %1, metadata !10709, metadata !DIExpression()), !dbg !10710
  ret void, !dbg !10711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !10712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10716, metadata !DIExpression()), !dbg !10718
  call void @llvm.dbg.value(metadata i8* %1, metadata !10717, metadata !DIExpression()), !dbg !10718
  ret i32 -134, !dbg !10719
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !10720 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10724, metadata !DIExpression()), !dbg !10726
  call void @llvm.dbg.value(metadata i8* %1, metadata !10725, metadata !DIExpression()), !dbg !10726
  ret i32 -134, !dbg !10727
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !10728 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10731, metadata !DIExpression()), !dbg !10732
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10733, !srcloc !10739
  call void @llvm.dbg.value(metadata i32 undef, metadata !10736, metadata !DIExpression()) #23, !dbg !10740
  call void @llvm.dbg.value(metadata i32 undef, metadata !10737, metadata !DIExpression()) #23, !dbg !10740
  br label %3, !dbg !10741

3:                                                ; preds = %3, %1
  br label %3, !dbg !10742, !llvm.loop !10745
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10752, metadata !DIExpression()), !dbg !10754
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10753, metadata !DIExpression()), !dbg !10754
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !10755
  unreachable, !dbg !10755
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !10756 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10758, metadata !DIExpression()), !dbg !10759
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !10760
  unreachable, !dbg !10760
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10763, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10764, metadata !DIExpression()), !dbg !10767
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10768, !srcloc !10739
  call void @llvm.dbg.value(metadata i32 undef, metadata !10736, metadata !DIExpression()) #23, !dbg !10770
  call void @llvm.dbg.value(metadata i32 undef, metadata !10737, metadata !DIExpression()) #23, !dbg !10770
  call void @llvm.dbg.value(metadata i32 undef, metadata !10765, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10766, metadata !DIExpression()), !dbg !10767
  %4 = icmp eq %struct.__esf* %1, null, !dbg !10771
  br i1 %4, label %6, label %5, !dbg !10773

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #25, !dbg !10774
  br label %7, !dbg !10775

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #25, !dbg !10774
  br label %7, !dbg !10778

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !10768
  call void @llvm.dbg.value(metadata i32 %8, metadata !10736, metadata !DIExpression()) #23, !dbg !10770
  call void @llvm.dbg.value(metadata i32 %8, metadata !10765, metadata !DIExpression()), !dbg !10767
  %9 = tail call fastcc %struct.k_thread* @k_current_get.92() #27, !dbg !10780
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !10766, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata i32 undef, metadata !10781, metadata !DIExpression()) #23, !dbg !10784
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !10786, !srcloc !10787
  tail call fastcc void @k_thread_abort.93(%struct.k_thread* noundef %9) #25, !dbg !10788
  ret void, !dbg !10791
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.92() unnamed_addr #9 !dbg !10792 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.94() #27, !dbg !10796
  ret %struct.k_thread* %1, !dbg !10797
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.93(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !10798 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10802, metadata !DIExpression()), !dbg !10803
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10804, !srcloc !10806
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !10807
  ret void, !dbg !10808
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.94() unnamed_addr #9 !dbg !10809 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10810, !srcloc !10812
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !10813
  ret %struct.k_thread* %1, !dbg !10814
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10815 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10819, metadata !DIExpression()), !dbg !10822
  call void @llvm.dbg.value(metadata i32 %1, metadata !10820, metadata !DIExpression()), !dbg !10822
  call void @llvm.dbg.value(metadata i32 %2, metadata !10821, metadata !DIExpression()), !dbg !10822
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !10823
  ret void, !dbg !10824
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10825 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10829, metadata !DIExpression()), !dbg !10832
  call void @llvm.dbg.value(metadata i8* %1, metadata !10830, metadata !DIExpression()), !dbg !10832
  call void @llvm.dbg.value(metadata i32 %2, metadata !10831, metadata !DIExpression()), !dbg !10832
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !10833
  ret void, !dbg !10834
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !10835 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !10836
  ret void, !dbg !10837
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !10838 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10840, metadata !DIExpression()), !dbg !10841
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !10842
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10843
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !10844
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !10845
  %4 = trunc i32 %0 to i8, !dbg !10846
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !10847
  store i8 %4, i8* %5, align 4, !dbg !10848
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !10849
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #25, !dbg !10850
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !10851
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !10852
  store i8* %8, i8** %9, align 4, !dbg !10853
  ret void, !dbg !10854
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !10855 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10857, metadata !DIExpression()), !dbg !10863
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10864
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !10858, metadata !DIExpression()), !dbg !10863
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !10865
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !10859, metadata !DIExpression()), !dbg !10863
  call void @llvm.dbg.value(metadata i8* null, metadata !10862, metadata !DIExpression()), !dbg !10863
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !10866
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !10867
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #24, !dbg !10868
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !10869
  ret void, !dbg !10870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !10871 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !10875, metadata !DIExpression()), !dbg !10876
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !10877
  ret i8* %2, !dbg !10878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !10879 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10884, metadata !DIExpression()), !dbg !10885
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10886
  %3 = load i8, i8* %2, align 1, !dbg !10887
  %4 = and i8 %3, -5, !dbg !10887
  store i8 %4, i8* %2, align 1, !dbg !10887
  ret void, !dbg !10888
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !10889 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !10892
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !10893
  %3 = ptrtoint i8* %2 to i32, !dbg !10902
  %4 = add i32 %3, 2048, !dbg !10903
  call void @llvm.dbg.value(metadata i32 %4, metadata !10897, metadata !DIExpression()) #23, !dbg !10904
  call void @llvm.dbg.value(metadata i32 %4, metadata !10905, metadata !DIExpression()) #23, !dbg !10908
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !10910, !srcloc !10911
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10912
  %6 = or i32 %5, 512, !dbg !10912
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10912
  tail call fastcc void @__NVIC_SetPriority.101(i32 noundef -2, i32 noundef 255) #24, !dbg !10913
  tail call fastcc void @__NVIC_SetPriority.101(i32 noundef -5, i32 noundef 0) #24, !dbg !10916
  tail call fastcc void @__NVIC_SetPriority.101(i32 noundef -12, i32 noundef 0) #24, !dbg !10917
  tail call fastcc void @__NVIC_SetPriority.101(i32 noundef -11, i32 noundef 0) #24, !dbg !10918
  tail call fastcc void @__NVIC_SetPriority.101(i32 noundef -10, i32 noundef 0) #24, !dbg !10919
  tail call fastcc void @__NVIC_SetPriority.101(i32 noundef -4, i32 noundef 0) #24, !dbg !10920
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10921
  %8 = or i32 %7, 458752, !dbg !10921
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10921
  tail call void @z_arm_fault_init() #24, !dbg !10922
  tail call void @z_arm_cpu_idle_init() #24, !dbg !10923
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10924
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !10927
  %9 = tail call i32 @z_arm_mpu_init() #24, !dbg !10928
  tail call void @z_arm_configure_static_mpu_regions() #24, !dbg !10929
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !10930
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !10930
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !10891, metadata !DIExpression()), !dbg !10931
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !10932
  call void @z_device_state_init() #24, !dbg !10933
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !10934
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !10935
  %11 = call fastcc i8* @prepare_multithreading() #25, !dbg !10936
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !10937
  unreachable, !dbg !10937
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1911 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1915, metadata !DIExpression()), !dbg !10938
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !10939
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !10939
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1916, metadata !DIExpression()), !dbg !10938
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1916, metadata !DIExpression()), !dbg !10938
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !10940
  br i1 %7, label %8, label %35, !dbg !10941

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1916, metadata !DIExpression()), !dbg !10938
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !10942
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !10942
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1926, metadata !DIExpression()), !dbg !10943
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !10944
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !10944
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !10945
  call void @llvm.dbg.value(metadata i32 %14, metadata !1930, metadata !DIExpression()), !dbg !10943
  %15 = icmp eq %struct.device* %11, null, !dbg !10946
  br i1 %15, label %32, label %16, !dbg !10948

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !10949
  br i1 %17, label %26, label %18, !dbg !10952

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !10953
  call void @llvm.dbg.value(metadata i32 %19, metadata !1930, metadata !DIExpression()), !dbg !10943
  %20 = icmp ult i32 %19, 255, !dbg !10955
  %21 = select i1 %20, i32 %19, i32 255, !dbg !10955
  call void @llvm.dbg.value(metadata i32 %21, metadata !1930, metadata !DIExpression()), !dbg !10943
  %22 = trunc i32 %21 to i8, !dbg !10956
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10957
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !10957
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !10958
  store i8 %22, i8* %25, align 1, !dbg !10959
  br label %26, !dbg !10960

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10961
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !10961
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !10962
  %30 = load i8, i8* %29, align 1, !dbg !10963
  %31 = or i8 %30, 1, !dbg !10963
  store i8 %31, i8* %29, align 1, !dbg !10963
  br label %32, !dbg !10964

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !10965
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1916, metadata !DIExpression()), !dbg !10938
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !10940
  br i1 %34, label %8, label %35, !dbg !10941, !llvm.loop !10966

35:                                               ; preds = %32, %1
  ret void, !dbg !10968
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.101(i32 noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !10969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10971, metadata !DIExpression()), !dbg !10973
  call void @llvm.dbg.value(metadata i32 %1, metadata !10972, metadata !DIExpression()), !dbg !10973
  %3 = trunc i32 %1 to i8, !dbg !10974
  %4 = shl i8 %3, 4, !dbg !10974
  %5 = and i32 %0, 15, !dbg !10977
  %6 = add nsw i32 %5, -4, !dbg !10978
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !10979
  store volatile i8 %4, i8* %7, align 1, !dbg !10980
  ret void, !dbg !10981
}

; Function Attrs: optsize
declare !dbg !10982 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !10983 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10986, metadata !DIExpression()), !dbg !10987
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10988
  store i8 1, i8* %2, align 1, !dbg !10989
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !10990
  store i8 1, i8* %3, align 4, !dbg !10991
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !10992
  store i32 0, i32* %4, align 4, !dbg !10993
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !10994
  store i32 0, i32* %5, align 4, !dbg !10995
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !10996
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !10997
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10998
  ret void, !dbg !10999
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !11000 {
  tail call void @z_sched_init() #24, !dbg !11005
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11006
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.102, i32 0, i32 0)) #24, !dbg !11007
  call void @llvm.dbg.value(metadata i8* %1, metadata !11004, metadata !DIExpression()), !dbg !11008
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !11009
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !11010
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !11011
  ret i8* %1, !dbg !11012
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !11013 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11017, metadata !DIExpression()), !dbg !11018
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !11019
  unreachable, !dbg !11020
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !11021 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11023, metadata !DIExpression()), !dbg !11026
  call void @llvm.dbg.value(metadata i8* %1, metadata !11024, metadata !DIExpression()), !dbg !11026
  call void @llvm.dbg.value(metadata i8* %2, metadata !11025, metadata !DIExpression()), !dbg !11026
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !11027
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !11028
  tail call void @boot_banner() #24, !dbg !11029
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !11030
  tail call void @z_init_static_threads() #24, !dbg !11031
  tail call void @main() #24, !dbg !11032
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11033
  %5 = and i8 %4, -2, !dbg !11033
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11033
  ret void, !dbg !11034
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11035 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11045, metadata !DIExpression()), !dbg !11047
  call void @llvm.dbg.value(metadata i8* %1, metadata !11046, metadata !DIExpression()), !dbg !11047
  ret void, !dbg !11048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !11049 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11051, metadata !DIExpression()), !dbg !11053
  call void @llvm.dbg.value(metadata i8* %1, metadata !11052, metadata !DIExpression()), !dbg !11053
  ret void, !dbg !11054
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !11055 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !11056, !srcloc !11063
  call void @llvm.dbg.value(metadata i32 %1, metadata !11059, metadata !DIExpression()) #23, !dbg !11064
  %2 = icmp ne i32 %1, 0, !dbg !11065
  ret i1 %2, !dbg !11066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #8 !dbg !11067 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11068
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11069
  %3 = load i8, i8* %2, align 4, !dbg !11070
  %4 = or i8 %3, 1, !dbg !11070
  store i8 %4, i8* %2, align 4, !dbg !11070
  ret void, !dbg !11071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #8 !dbg !11072 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11073
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11074
  %3 = load i8, i8* %2, align 4, !dbg !11075
  %4 = and i8 %3, -2, !dbg !11075
  store i8 %4, i8* %2, align 4, !dbg !11075
  ret void, !dbg !11076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !11077 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11078
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11079
  %3 = load i8, i8* %2, align 4, !dbg !11079
  %4 = and i8 %3, 1, !dbg !11080
  %5 = icmp ne i8 %4, 0, !dbg !11081
  ret i1 %5, !dbg !11082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !11083 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11087, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata i8* %1, metadata !11088, metadata !DIExpression()), !dbg !11089
  ret i32 -88, !dbg !11090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !11091 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11095, metadata !DIExpression()), !dbg !11096
  ret i8* null, !dbg !11097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #12 !dbg !11098 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11102, metadata !DIExpression()), !dbg !11105
  call void @llvm.dbg.value(metadata i8* %1, metadata !11103, metadata !DIExpression()), !dbg !11105
  call void @llvm.dbg.value(metadata i32 %2, metadata !11104, metadata !DIExpression()), !dbg !11105
  ret i32 -88, !dbg !11106
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1939 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2053, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.value(metadata i8* %1, metadata !2054, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.value(metadata i32 %2, metadata !2055, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.value(metadata i32 0, metadata !2056, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.value(metadata i8 undef, metadata !2058, metadata !DIExpression()), !dbg !11107
  %4 = icmp eq i8* %1, null, !dbg !11108
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !11110
  br i1 %6, label %46, label %7, !dbg !11110

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11111
  %9 = load i8, i8* %8, align 1, !dbg !11111
  call void @llvm.dbg.value(metadata i8 %9, metadata !2058, metadata !DIExpression()), !dbg !11107
  %10 = add i32 %2, -1, !dbg !11112
  call void @llvm.dbg.value(metadata i32 %10, metadata !2055, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.value(metadata i8 0, metadata !2059, metadata !DIExpression()), !dbg !11113
  call void @llvm.dbg.value(metadata i8 %9, metadata !2058, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.value(metadata i32 0, metadata !2056, metadata !DIExpression()), !dbg !11107
  %11 = icmp eq i8 %9, 0, !dbg !11114
  br i1 %11, label %12, label %15, !dbg !11116

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !11117
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !11118
  store i8 0, i8* %14, align 1, !dbg !11119
  br label %46, !dbg !11120

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2059, metadata !DIExpression()), !dbg !11113
  call void @llvm.dbg.value(metadata i8 %17, metadata !2058, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.value(metadata i32 %18, metadata !2056, metadata !DIExpression()), !dbg !11107
  %19 = zext i8 %17 to i32, !dbg !11121
  %20 = zext i8 %16 to i32, !dbg !11122
  %21 = shl nuw i32 1, %20, !dbg !11122
  call void @llvm.dbg.value(metadata i32 %21, metadata !2057, metadata !DIExpression()), !dbg !11107
  %22 = and i32 %21, %19, !dbg !11124
  %23 = icmp eq i32 %22, 0, !dbg !11126
  br i1 %23, label %42, label %24, !dbg !11127

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !11128
  %26 = sub i32 %10, %18, !dbg !11129
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !11130
  %28 = load i8*, i8** %27, align 4, !dbg !11130
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !11131
  %30 = load i32, i32* %29, align 4, !dbg !11131
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !11132
  %32 = add i32 %31, %18, !dbg !11133
  call void @llvm.dbg.value(metadata i32 %32, metadata !2056, metadata !DIExpression()), !dbg !11107
  %33 = trunc i32 %21 to i8, !dbg !11134
  %34 = xor i8 %33, -1, !dbg !11134
  %35 = and i8 %17, %34, !dbg !11134
  call void @llvm.dbg.value(metadata i8 %35, metadata !2058, metadata !DIExpression()), !dbg !11107
  %36 = icmp eq i8 %35, 0, !dbg !11135
  br i1 %36, label %12, label %37, !dbg !11137

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !11138
  %39 = sub i32 %10, %32, !dbg !11140
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #25, !dbg !11141
  %41 = add i32 %40, %32, !dbg !11142
  call void @llvm.dbg.value(metadata i32 %41, metadata !2056, metadata !DIExpression()), !dbg !11107
  br label %42, !dbg !11143

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !11107
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !11107
  call void @llvm.dbg.value(metadata i8 %44, metadata !2058, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.value(metadata i32 %43, metadata !2056, metadata !DIExpression()), !dbg !11107
  %45 = add i8 %16, 1, !dbg !11144
  call void @llvm.dbg.value(metadata i8 %45, metadata !2059, metadata !DIExpression()), !dbg !11113
  br label %15, !dbg !11116

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.103, i32 0, i32 0), %3 ], !dbg !11107
  ret i8* %47, !dbg !11145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11146 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11150, metadata !DIExpression()), !dbg !11155
  call void @llvm.dbg.value(metadata i32 %1, metadata !11151, metadata !DIExpression()), !dbg !11155
  call void @llvm.dbg.value(metadata i8* %2, metadata !11152, metadata !DIExpression()), !dbg !11155
  call void @llvm.dbg.value(metadata i32 %3, metadata !11153, metadata !DIExpression()), !dbg !11155
  %5 = icmp ult i32 %1, %3, !dbg !11156
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !11156
  call void @llvm.dbg.value(metadata i32 %6, metadata !11154, metadata !DIExpression()), !dbg !11155
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !11157
  ret i32 %6, !dbg !11158
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11159 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11163, metadata !DIExpression()), !dbg !11164
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !11165
  ret void, !dbg !11166
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !11167 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11176, metadata !DIExpression()), !dbg !11187
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11177, metadata !DIExpression()), !dbg !11187
  call void @llvm.dbg.value(metadata i32 %2, metadata !11178, metadata !DIExpression()), !dbg !11187
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11179, metadata !DIExpression()), !dbg !11187
  call void @llvm.dbg.value(metadata i8* %4, metadata !11180, metadata !DIExpression()), !dbg !11187
  call void @llvm.dbg.value(metadata i8* %5, metadata !11181, metadata !DIExpression()), !dbg !11187
  call void @llvm.dbg.value(metadata i8* %6, metadata !11182, metadata !DIExpression()), !dbg !11187
  call void @llvm.dbg.value(metadata i32 %7, metadata !11183, metadata !DIExpression()), !dbg !11187
  call void @llvm.dbg.value(metadata i32 %8, metadata !11184, metadata !DIExpression()), !dbg !11187
  call void @llvm.dbg.value(metadata i8* undef, metadata !11185, metadata !DIExpression()), !dbg !11187
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !11188
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #25, !dbg !11189
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !11190
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !11191
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #25, !dbg !11192
  call void @llvm.dbg.value(metadata i8* %13, metadata !11186, metadata !DIExpression()), !dbg !11187
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !11193
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !11194
  store i8* null, i8** %14, align 4, !dbg !11195
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11196
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !11196
  br i1 %16, label %20, label %17, !dbg !11198

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !11199
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !11199
  br label %20, !dbg !11200

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !11187
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11201
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !11203
  ret i8* %13, !dbg !11204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #4 !dbg !11205 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11210, metadata !DIExpression()), !dbg !11211
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !11212
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !11213
  ret void, !dbg !11214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !11215 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11220, metadata !DIExpression()), !dbg !11224
  call void @llvm.dbg.value(metadata i32 %1, metadata !11221, metadata !DIExpression()), !dbg !11224
  call void @llvm.dbg.value(metadata i32 %2, metadata !11222, metadata !DIExpression()), !dbg !11224
  call void @llvm.dbg.value(metadata i32 %3, metadata !11223, metadata !DIExpression()), !dbg !11224
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !11225
  store %union.anon* null, %union.anon** %5, align 8, !dbg !11226
  %6 = trunc i32 %3 to i8, !dbg !11227
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !11228
  store i8 %6, i8* %7, align 4, !dbg !11229
  %8 = trunc i32 %2 to i8, !dbg !11230
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !11231
  store i8 %8, i8* %9, align 1, !dbg !11232
  %10 = trunc i32 %1 to i8, !dbg !11233
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !11234
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !11234
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !11234
  store i8 %10, i8* %13, align 2, !dbg !11235
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !11236
  store i8 0, i8* %14, align 1, !dbg !11237
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !11238
  ret void, !dbg !11239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !11240 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11244, metadata !DIExpression()), !dbg !11252
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11245, metadata !DIExpression()), !dbg !11252
  call void @llvm.dbg.value(metadata i32 %2, metadata !11246, metadata !DIExpression()), !dbg !11252
  call void @llvm.dbg.value(metadata i32 0, metadata !11251, metadata !DIExpression()), !dbg !11252
  %4 = add i32 %2, 7, !dbg !11253
  %5 = and i32 %4, -8, !dbg !11253
  %6 = add i32 %5, 64, !dbg !11253
  call void @llvm.dbg.value(metadata i32 %6, metadata !11247, metadata !DIExpression()), !dbg !11252
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.113(%struct.z_thread_stack_element* noundef %1) #25, !dbg !11255
  call void @llvm.dbg.value(metadata i8* %7, metadata !11250, metadata !DIExpression()), !dbg !11252
  call void @llvm.dbg.value(metadata i32 %5, metadata !11248, metadata !DIExpression()), !dbg !11252
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !11256
  call void @llvm.dbg.value(metadata i8* %8, metadata !11249, metadata !DIExpression()), !dbg !11252
  call void @llvm.dbg.value(metadata i32 0, metadata !11251, metadata !DIExpression()), !dbg !11252
  %9 = ptrtoint i8* %7 to i32, !dbg !11257
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11258
  store i32 %9, i32* %10, align 4, !dbg !11259
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11260
  store i32 %5, i32* %11, align 4, !dbg !11261
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !11262
  store i32 0, i32* %12, align 4, !dbg !11263
  call void @llvm.dbg.value(metadata i8* %8, metadata !11249, metadata !DIExpression()), !dbg !11252
  ret i8* %8, !dbg !11264
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.113(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !11265 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11269, metadata !DIExpression()), !dbg !11270
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11271
  ret i8* %2, !dbg !11272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11273 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11278, metadata !DIExpression()), !dbg !11279
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !11280
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !11281
  ret void, !dbg !11282
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11283 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11285, metadata !DIExpression()), !dbg !11286
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11287
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !11288
  ret void, !dbg !11289
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !11290 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11294, metadata !DIExpression()), !dbg !11295
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11296
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11297
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11298
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11299
  ret void, !dbg !11300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !11301 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11306, metadata !DIExpression()), !dbg !11307
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11308
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11309
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11310
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11311
  ret void, !dbg !11312
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !11313 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !11330, metadata !DIExpression()), !dbg !11331
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11321, metadata !DIExpression()), !dbg !11331
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11322, metadata !DIExpression()), !dbg !11331
  call void @llvm.dbg.value(metadata i32 %2, metadata !11323, metadata !DIExpression()), !dbg !11331
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11324, metadata !DIExpression()), !dbg !11331
  call void @llvm.dbg.value(metadata i8* %4, metadata !11325, metadata !DIExpression()), !dbg !11331
  call void @llvm.dbg.value(metadata i8* %5, metadata !11326, metadata !DIExpression()), !dbg !11331
  call void @llvm.dbg.value(metadata i8* %6, metadata !11327, metadata !DIExpression()), !dbg !11331
  call void @llvm.dbg.value(metadata i32 %7, metadata !11328, metadata !DIExpression()), !dbg !11331
  call void @llvm.dbg.value(metadata i32 %8, metadata !11329, metadata !DIExpression()), !dbg !11331
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #25, !dbg !11332
  %13 = icmp eq i64 %11, -1, !dbg !11333
  br i1 %13, label %15, label %14, !dbg !11335

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !11336
  br label %15, !dbg !11338

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !11339
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11340 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !11345, metadata !DIExpression()), !dbg !11346
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11344, metadata !DIExpression()), !dbg !11346
  %4 = icmp eq i64 %3, 0, !dbg !11347
  br i1 %4, label %5, label %6, !dbg !11349

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !11350
  br label %7, !dbg !11352

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !11353
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !11355
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11356 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11360, metadata !DIExpression()), !dbg !11361
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11362, !srcloc !11364
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !11365
  ret void, !dbg !11366
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11367 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11370, metadata !DIExpression()), !dbg !11371
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11369, metadata !DIExpression()), !dbg !11371
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11372
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !11373
  ret void, !dbg !11374
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !11375 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11377, metadata !DIExpression()), !dbg !11397
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !11398

1:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !11399
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11395, metadata !DIExpression()), !dbg !11400
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !11401

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !11377, metadata !DIExpression()), !dbg !11397
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !11402
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11402
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !11405
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !11405
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !11406
  %9 = load i32, i32* %8, align 4, !dbg !11406
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !11407
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !11407
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !11408
  %13 = load i8*, i8** %12, align 4, !dbg !11408
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !11409
  %15 = load i8*, i8** %14, align 4, !dbg !11409
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !11410
  %17 = load i8*, i8** %16, align 4, !dbg !11410
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !11411
  %19 = load i32, i32* %18, align 4, !dbg !11411
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !11412
  %21 = load i32, i32* %20, align 4, !dbg !11412
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #25, !dbg !11413
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11414
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !11415
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !11416
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !11416
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !11417
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !11377, metadata !DIExpression()), !dbg !11397
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11418
  br i1 %27, label %2, label %1, !dbg !11398, !llvm.loop !11420

28:                                               ; preds = %0
  tail call void @k_sched_lock() #24, !dbg !11399
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11395, metadata !DIExpression()), !dbg !11400
  br label %29, !dbg !11401

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #24, !dbg !11422
  ret void, !dbg !11423

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !11395, metadata !DIExpression()), !dbg !11400
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !11424
  %33 = load i32, i32* %32, align 4, !dbg !11424
  %34 = icmp eq i32 %33, -1, !dbg !11428
  br i1 %34, label %43, label %35, !dbg !11429

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !11430
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !11430
  %38 = icmp sgt i32 %33, 0, !dbg !11432
  %39 = select i1 %38, i32 %33, i32 0, !dbg !11432
  %40 = zext i32 %39 to i64, !dbg !11432
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #25, !dbg !11432
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !11433
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #25, !dbg !11433
  br label %43, !dbg !11434

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !11435
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !11395, metadata !DIExpression()), !dbg !11400
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11436
  br i1 %45, label %30, label %29, !dbg !11401, !llvm.loop !11438
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !11440 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !11445, metadata !DIExpression()), !dbg !11446
  call void @llvm.dbg.value(metadata i64 %0, metadata !11447, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata i32 1000, metadata !11452, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata i32 10000, metadata !11453, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata i8 1, metadata !11454, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata i8 0, metadata !11455, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata i8 1, metadata !11456, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata i8 0, metadata !11457, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata i8 1, metadata !11458, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata i8 0, metadata !11459, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata i64 0, metadata !11460, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.value(metadata i64 0, metadata !11460, metadata !DIExpression()), !dbg !11464
  %2 = mul i64 %0, 10, !dbg !11466
  ret i64 %2, !dbg !11472
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !11473 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !11475, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i8* %1, metadata !11476, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i8* %2, metadata !11477, metadata !DIExpression()), !dbg !11479
  call void @llvm.dbg.value(metadata i8* %3, metadata !11478, metadata !DIExpression()), !dbg !11479
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11480
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !11481
  %7 = load i8, i8* %6, align 4, !dbg !11482
  %8 = or i8 %7, 4, !dbg !11482
  store i8 %8, i8* %6, align 4, !dbg !11482
  tail call void @z_thread_essential_clear() #25, !dbg !11483
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !11484
  unreachable, !dbg !11484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !11485 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11489, metadata !DIExpression()), !dbg !11490
  ret i32 -134, !dbg !11491
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11492 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11496, metadata !DIExpression()), !dbg !11498
  call void @llvm.dbg.value(metadata i32 %1, metadata !11497, metadata !DIExpression()), !dbg !11498
  ret i32 -134, !dbg !11499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #12 !dbg !11500 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11507, metadata !DIExpression()), !dbg !11509
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !11508, metadata !DIExpression()), !dbg !11509
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !11510
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !11512
  %6 = select i1 %5, i32 -22, i32 0, !dbg !11509
  ret i32 %6, !dbg !11513
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #12 !dbg !11514 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !11518, metadata !DIExpression()), !dbg !11519
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !11520
  %3 = select i1 %2, i32 -22, i32 0, !dbg !11519
  ret i32 %3, !dbg !11522
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !11523 {
  tail call void @sys_clock_idle_exit() #24, !dbg !11525
  ret void, !dbg !11526
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !11527 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11529, metadata !DIExpression()), !dbg !11532
  call void @llvm.dbg.value(metadata i8* %1, metadata !11530, metadata !DIExpression()), !dbg !11532
  call void @llvm.dbg.value(metadata i8* %2, metadata !11531, metadata !DIExpression()), !dbg !11532
  br label %4, !dbg !11533

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11534, !srcloc !11541
  call void @llvm.dbg.value(metadata i32 undef, metadata !11537, metadata !DIExpression()) #23, !dbg !11542
  call void @llvm.dbg.value(metadata i32 undef, metadata !11538, metadata !DIExpression()) #23, !dbg !11542
  tail call fastcc void @k_cpu_idle() #25, !dbg !11543
  br label %4, !dbg !11533, !llvm.loop !11544
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !11546 {
  tail call void @arch_cpu_idle() #24, !dbg !11547
  ret void, !dbg !11548
}

; Function Attrs: optsize
declare !dbg !11549 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !11550 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11554, metadata !DIExpression()), !dbg !11558
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11555, metadata !DIExpression()), !dbg !11558
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !11559
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !11559
  %5 = load i8, i8* %4, align 2, !dbg !11559
  call void @llvm.dbg.value(metadata i8 %5, metadata !11556, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !11558
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !11560
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !11560
  %8 = load i8, i8* %7, align 2, !dbg !11560
  call void @llvm.dbg.value(metadata i8 %8, metadata !11557, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !11558
  %9 = icmp eq i8 %8, %5, !dbg !11561
  %10 = sext i8 %5 to i32, !dbg !11563
  %11 = sext i8 %8 to i32, !dbg !11563
  %12 = sub nsw i32 %11, %10, !dbg !11563
  %13 = select i1 %9, i32 0, i32 %12, !dbg !11563
  ret i32 %13, !dbg !11564
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !11565 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11569, metadata !DIExpression()), !dbg !11570
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !11571
  %3 = icmp eq i32 %2, 0, !dbg !11573
  br i1 %3, label %8, label %4, !dbg !11574

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !11575
  %6 = add i32 %5, %2, !dbg !11577
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11578
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !11579
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !11580
  br label %8, !dbg !11581

8:                                                ; preds = %4, %1
  ret void, !dbg !11582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !11583 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11587, metadata !DIExpression()), !dbg !11589
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !11590
  call void @llvm.dbg.value(metadata i32 %1, metadata !11588, metadata !DIExpression()), !dbg !11589
  ret i32 %1, !dbg !11591
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11596, metadata !DIExpression()), !dbg !11605
  call void @llvm.dbg.value(metadata i32 %1, metadata !11597, metadata !DIExpression()), !dbg !11605
  call void @llvm.dbg.value(metadata i32 0, metadata !11598, metadata !DIExpression()), !dbg !11606
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !11614
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11616, !srcloc !11622
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !11616
  call void @llvm.dbg.value(metadata i32 %4, metadata !11619, metadata !DIExpression()) #23, !dbg !11623
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !11623
  call void @llvm.dbg.value(metadata i32 %4, metadata !11613, metadata !DIExpression()) #23, !dbg !11614
  call void @llvm.dbg.value(metadata i32 %4, metadata !11604, metadata !DIExpression()), !dbg !11606
  call void @llvm.dbg.value(metadata i32 undef, metadata !11598, metadata !DIExpression()), !dbg !11606
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11624
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !11627
  %6 = icmp sgt i32 %0, 0, !dbg !11628
  %7 = icmp sgt i32 %5, 2, !dbg !11630
  %8 = select i1 %7, i32 %5, i32 2, !dbg !11630
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !11630
  store i32 %9, i32* @slice_ticks, align 4, !dbg !11631
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !11632
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !11633
  call void @llvm.dbg.value(metadata i32 %4, metadata !11634, metadata !DIExpression()) #23, !dbg !11640
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !11640
  call void @llvm.dbg.value(metadata i32 %4, metadata !11642, metadata !DIExpression()) #23, !dbg !11645
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !11647, !srcloc !11648
  call void @llvm.dbg.value(metadata i32 1, metadata !11598, metadata !DIExpression()), !dbg !11606
  call void @llvm.dbg.value(metadata i32 undef, metadata !11598, metadata !DIExpression()), !dbg !11606
  ret void, !dbg !11649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #12 !dbg !11650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11652, metadata !DIExpression()), !dbg !11653
  call void @llvm.dbg.value(metadata i32 %0, metadata !11654, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11669
  call void @llvm.dbg.value(metadata i32 1000, metadata !11657, metadata !DIExpression()), !dbg !11669
  call void @llvm.dbg.value(metadata i32 10000, metadata !11658, metadata !DIExpression()), !dbg !11669
  call void @llvm.dbg.value(metadata i8 1, metadata !11659, metadata !DIExpression()), !dbg !11669
  call void @llvm.dbg.value(metadata i1 true, metadata !11660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11669
  call void @llvm.dbg.value(metadata i1 true, metadata !11661, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11669
  call void @llvm.dbg.value(metadata i8 0, metadata !11662, metadata !DIExpression()), !dbg !11669
  call void @llvm.dbg.value(metadata i1 true, metadata !11663, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11669
  call void @llvm.dbg.value(metadata i1 false, metadata !11664, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11669
  call void @llvm.dbg.value(metadata i64 0, metadata !11665, metadata !DIExpression()), !dbg !11669
  call void @llvm.dbg.value(metadata i64 0, metadata !11665, metadata !DIExpression()), !dbg !11669
  %2 = mul i32 %0, 10, !dbg !11671
  ret i32 %2, !dbg !11677
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !11678 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11680, metadata !DIExpression()), !dbg !11682
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !11683
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11685, !srcloc !11622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11685
  call void @llvm.dbg.value(metadata i32 %3, metadata !11619, metadata !DIExpression()) #23, !dbg !11687
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !11687
  call void @llvm.dbg.value(metadata i32 %3, metadata !11613, metadata !DIExpression()) #23, !dbg !11683
  call void @llvm.dbg.value(metadata i32 %3, metadata !11681, metadata !DIExpression()), !dbg !11682
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !11688
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11690
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !11691
  br i1 %6, label %7, label %8, !dbg !11692

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !11693
  call void @llvm.dbg.value(metadata i32 %3, metadata !11634, metadata !DIExpression()) #23, !dbg !11695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !11695
  call void @llvm.dbg.value(metadata i32 %3, metadata !11642, metadata !DIExpression()) #23, !dbg !11697
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !11699, !srcloc !11648
  br label %24, !dbg !11700

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !11701
  %9 = tail call fastcc i32 @slice_time() #25, !dbg !11702
  %10 = icmp eq i32 %9, 0, !dbg !11702
  br i1 %10, label %21, label %11, !dbg !11704

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #25, !dbg !11705
  br i1 %12, label %13, label %21, !dbg !11706

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11707
  %15 = icmp sgt i32 %14, %0, !dbg !11710
  br i1 %15, label %19, label %16, !dbg !11711

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !11712
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #25, !dbg !11712
  call void @llvm.dbg.value(metadata i32 %18, metadata !11681, metadata !DIExpression()), !dbg !11682
  br label %22, !dbg !11714

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !11715
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11715
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11717
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !11682
  call void @llvm.dbg.value(metadata i32 %23, metadata !11681, metadata !DIExpression()), !dbg !11682
  call void @llvm.dbg.value(metadata i32 %23, metadata !11634, metadata !DIExpression()) #23, !dbg !11719
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !11719
  call void @llvm.dbg.value(metadata i32 %23, metadata !11642, metadata !DIExpression()) #23, !dbg !11721
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !11723, !srcloc !11648
  br label %24, !dbg !11724

24:                                               ; preds = %22, %7
  ret void, !dbg !11724
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !11725 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11729, metadata !DIExpression()), !dbg !11731
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !11732
  %3 = icmp eq i32 %2, 0, !dbg !11732
  br i1 %3, label %16, label %4, !dbg !11733

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !11734
  br i1 %5, label %16, label %6, !dbg !11735

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !11736
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !11736
  %9 = load i8, i8* %8, align 2, !dbg !11736
  %10 = sext i8 %9 to i32, !dbg !11737
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !11738
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #25, !dbg !11739
  br i1 %12, label %16, label %13, !dbg !11740

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !11741
  %15 = xor i1 %14, true, !dbg !11742
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !11731
  call void @llvm.dbg.value(metadata i1 %17, metadata !11730, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11731
  ret i1 %17, !dbg !11743
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !11744 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11748, metadata !DIExpression()), !dbg !11750
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11751
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11749, metadata !DIExpression()), !dbg !11750
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !11752
  br i1 %3, label %5, label %4, !dbg !11754

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !11755
  br label %5, !dbg !11757

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !11748, metadata !DIExpression()), !dbg !11750
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !11758
  ret i32 %6, !dbg !11759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11760 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11762, metadata !DIExpression()), !dbg !11764
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11765
  %3 = load i8, i8* %2, align 1, !dbg !11765
  call void @llvm.dbg.value(metadata i8 %3, metadata !11763, metadata !DIExpression()), !dbg !11764
  %4 = and i8 %3, 31, !dbg !11766
  %5 = icmp ne i8 %4, 0, !dbg !11767
  ret i1 %5, !dbg !11768
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11769 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11771, metadata !DIExpression()), !dbg !11772
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !11773
  br i1 %2, label %3, label %7, !dbg !11775

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11776, metadata !DIExpression()) #23, !dbg !11779
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11782
  %5 = load i8, i8* %4, align 1, !dbg !11783
  %6 = and i8 %5, 127, !dbg !11783
  store i8 %6, i8* %4, align 1, !dbg !11783
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11784, metadata !DIExpression()) #23, !dbg !11787
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !11791
  br label %7, !dbg !11792

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11793, metadata !DIExpression()) #23, !dbg !11796
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11798
  %9 = load i8, i8* %8, align 1, !dbg !11799
  %10 = or i8 %9, -128, !dbg !11799
  store i8 %10, i8* %8, align 1, !dbg !11799
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11800, metadata !DIExpression()) #23, !dbg !11803
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11807, metadata !DIExpression()) #23, !dbg !11815
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11813, metadata !DIExpression()) #23, !dbg !11815
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !11817
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !11814, metadata !DIExpression()) #23, !dbg !11815
  %12 = icmp eq %struct._dnode* %11, null, !dbg !11819
  br i1 %12, label %23, label %13, !dbg !11817

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !11814, metadata !DIExpression()) #23, !dbg !11815
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !11821
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !11814, metadata !DIExpression()) #23, !dbg !11815
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #24, !dbg !11822
  %17 = icmp sgt i32 %16, 0, !dbg !11825
  br i1 %17, label %18, label %20, !dbg !11826

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11827
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #24, !dbg !11829
  br label %25, !dbg !11830

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #24, !dbg !11819
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !11814, metadata !DIExpression()) #23, !dbg !11815
  %22 = icmp eq %struct._dnode* %21, null, !dbg !11819
  br i1 %22, label %23, label %13, !dbg !11817, !llvm.loop !11831

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11833
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #24, !dbg !11834
  br label %25, !dbg !11835

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11836
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !11837
  %28 = zext i1 %27 to i32, !dbg !11837
  tail call fastcc void @update_cache(i32 noundef %28) #25, !dbg !11838
  ret void, !dbg !11839
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11840 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11842, metadata !DIExpression()), !dbg !11843
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #25, !dbg !11844
  ret i1 %2, !dbg !11845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #8 !dbg !11846 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !11848, metadata !DIExpression()), !dbg !11850
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11849, metadata !DIExpression()), !dbg !11850
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !11851
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #25, !dbg !11852
  ret void, !dbg !11853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !11854 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11858, metadata !DIExpression()), !dbg !11859
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !11860
  br i1 %2, label %6, label %3, !dbg !11860

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11861
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !11861
  br label %6, !dbg !11860

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !11860
  ret %struct._dnode* %7, !dbg !11862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !11863 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11867, metadata !DIExpression()), !dbg !11871
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11868, metadata !DIExpression()), !dbg !11871
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11872
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11872
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !11869, metadata !DIExpression()), !dbg !11871
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !11873
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !11874
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11875
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !11876
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !11877
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !11878
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !11879
  ret void, !dbg !11880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !11881 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11885, metadata !DIExpression()), !dbg !11887
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11886, metadata !DIExpression()), !dbg !11887
  %3 = icmp eq %struct._dnode* %1, null, !dbg !11888
  br i1 %3, label %6, label %4, !dbg !11889

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !11890
  br label %6, !dbg !11889

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !11889
  ret %struct._dnode* %7, !dbg !11891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !11892 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11896, metadata !DIExpression()), !dbg !11899
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11897, metadata !DIExpression()), !dbg !11899
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11900
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11900
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !11898, metadata !DIExpression()), !dbg !11899
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11901
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !11902
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !11903
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !11904
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !11905
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !11906
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !11907
  ret void, !dbg !11908
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !11909 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11911, metadata !DIExpression()), !dbg !11913
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !11914
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11921, metadata !DIExpression()) #23, !dbg !11923
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !11924
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !11925
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !11925
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11912, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11926, metadata !DIExpression()) #23, !dbg !11932
  call void @llvm.dbg.value(metadata i32 %0, metadata !11931, metadata !DIExpression()) #23, !dbg !11932
  %6 = icmp eq i32 %0, 0, !dbg !11935
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11937
  br i1 %6, label %8, label %15, !dbg !11938

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #24, !dbg !11939
  br i1 %9, label %15, label %10, !dbg !11941

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !11942
  br i1 %11, label %15, label %12, !dbg !11944

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #24, !dbg !11945
  %14 = icmp eq i32 %13, 0, !dbg !11945
  br i1 %14, label %18, label %15, !dbg !11947

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !11948
  br i1 %16, label %18, label %17, !dbg !11951

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !11952
  br label %18, !dbg !11954

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !11937
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11937
  ret void, !dbg !11955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !11956 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11960, metadata !DIExpression()), !dbg !11963
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !11961, metadata !DIExpression()), !dbg !11963
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #25, !dbg !11964
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !11962, metadata !DIExpression()), !dbg !11963
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !11961, metadata !DIExpression()), !dbg !11963
  ret %struct.k_thread* %3, !dbg !11965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11966 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11968, metadata !DIExpression()), !dbg !11969
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11970
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !11971
  %4 = xor i1 %3, true, !dbg !11972
  ret i1 %4, !dbg !11973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11974 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11976, metadata !DIExpression()), !dbg !11977
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !11978
  %3 = load i16, i16* %2, align 2, !dbg !11978
  %4 = icmp ult i16 %3, 128, !dbg !11979
  %5 = zext i1 %4 to i32, !dbg !11979
  ret i32 %5, !dbg !11980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11981 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11987, metadata !DIExpression()), !dbg !11988
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11989
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !11990
  %4 = xor i1 %3, true, !dbg !11991
  ret i1 %4, !dbg !11992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !11993 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11999, metadata !DIExpression()), !dbg !12000
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12001
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12001
  %4 = icmp ne %struct._dnode* %3, null, !dbg !12002
  ret i1 %4, !dbg !12003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !12004 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12006, metadata !DIExpression()), !dbg !12008
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12007, metadata !DIExpression()), !dbg !12008
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12009
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12009
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !12010
  br i1 %5, label %9, label %6, !dbg !12011

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12012
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !12012
  br label %9, !dbg !12011

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !12011
  ret %struct._dnode* %10, !dbg !12013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !12014 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12018, metadata !DIExpression()), !dbg !12019
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12020
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12020
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !12021
  ret i1 %4, !dbg !12022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !12023 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12027, metadata !DIExpression()), !dbg !12030
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12031
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12031
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !12028, metadata !DIExpression()), !dbg !12030
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12032
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12032
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !12029, metadata !DIExpression()), !dbg !12030
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !12033
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !12034
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !12035
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !12036
  tail call fastcc void @sys_dnode_init.120(%struct._dnode* noundef %0) #25, !dbg !12037
  ret void, !dbg !12038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.120(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12039 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12041, metadata !DIExpression()), !dbg !12042
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12043
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12044
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12045
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12046
  ret void, !dbg !12047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12048 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12052, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 128, metadata !12053, metadata !DIExpression()), !dbg !12054
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12055
  %3 = load i8, i8* %2, align 1, !dbg !12055
  %4 = icmp slt i8 %3, 0, !dbg !12056
  ret i1 %4, !dbg !12057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !12058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12062, metadata !DIExpression()), !dbg !12064
  call void @llvm.dbg.value(metadata i32 %1, metadata !12063, metadata !DIExpression()), !dbg !12064
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !12065
  ret i1 %3, !dbg !12066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #12 !dbg !12067 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12069, metadata !DIExpression()), !dbg !12070
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !12071
  ret i1 %2, !dbg !12072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !12073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12075, metadata !DIExpression()), !dbg !12077
  call void @llvm.dbg.value(metadata i32 %1, metadata !12076, metadata !DIExpression()), !dbg !12077
  %3 = icmp slt i32 %0, %1, !dbg !12078
  ret i1 %3, !dbg !12079
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12080 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12082, metadata !DIExpression()), !dbg !12086
  call void @llvm.dbg.value(metadata i32 0, metadata !12083, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12088
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12090, !srcloc !11622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12090
  call void @llvm.dbg.value(metadata i32 %3, metadata !11619, metadata !DIExpression()) #23, !dbg !12092
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !12092
  call void @llvm.dbg.value(metadata i32 %3, metadata !11613, metadata !DIExpression()) #23, !dbg !12088
  call void @llvm.dbg.value(metadata i32 %3, metadata !12085, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()), !dbg !12087
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12093
  call void @llvm.dbg.value(metadata i32 %3, metadata !11634, metadata !DIExpression()) #23, !dbg !12098
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !12098
  call void @llvm.dbg.value(metadata i32 %3, metadata !11642, metadata !DIExpression()) #23, !dbg !12100
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12102, !srcloc !11648
  call void @llvm.dbg.value(metadata i32 1, metadata !12083, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()), !dbg !12087
  ret void, !dbg !12103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12104 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12106, metadata !DIExpression()), !dbg !12107
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12108
  br i1 %2, label %24, label %3, !dbg !12110

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !12111
  br i1 %4, label %5, label %24, !dbg !12112

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11793, metadata !DIExpression()) #23, !dbg !12113
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12116
  %7 = load i8, i8* %6, align 1, !dbg !12117
  %8 = or i8 %7, -128, !dbg !12117
  store i8 %8, i8* %6, align 1, !dbg !12117
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11800, metadata !DIExpression()) #23, !dbg !12118
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11807, metadata !DIExpression()) #23, !dbg !12120
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11813, metadata !DIExpression()) #23, !dbg !12120
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12122
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !11814, metadata !DIExpression()) #23, !dbg !12120
  %10 = icmp eq %struct._dnode* %9, null, !dbg !12123
  br i1 %10, label %21, label %11, !dbg !12122

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !11814, metadata !DIExpression()) #23, !dbg !12120
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !12124
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !11814, metadata !DIExpression()) #23, !dbg !12120
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #24, !dbg !12125
  %15 = icmp sgt i32 %14, 0, !dbg !12126
  br i1 %15, label %16, label %18, !dbg !12127

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12128
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #24, !dbg !12129
  br label %23, !dbg !12130

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #24, !dbg !12123
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !11814, metadata !DIExpression()) #23, !dbg !12120
  %20 = icmp eq %struct._dnode* %19, null, !dbg !12123
  br i1 %20, label %21, label %11, !dbg !12122, !llvm.loop !12131

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12133
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #24, !dbg !12134
  br label %23, !dbg !12135

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !12136
  br label %24, !dbg !12137

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !12138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12139 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12141, metadata !DIExpression()), !dbg !12142
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !12143
  br i1 %2, label %6, label %3, !dbg !12144

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !12145
  %5 = xor i1 %4, true, !dbg !12144
  br label %6, !dbg !12144

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !12146
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12147 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12149, metadata !DIExpression()), !dbg !12153
  call void @llvm.dbg.value(metadata i32 0, metadata !12150, metadata !DIExpression()), !dbg !12154
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12155
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12157, !srcloc !11622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12157
  call void @llvm.dbg.value(metadata i32 %3, metadata !11619, metadata !DIExpression()) #23, !dbg !12159
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !12159
  call void @llvm.dbg.value(metadata i32 %3, metadata !11613, metadata !DIExpression()) #23, !dbg !12155
  call void @llvm.dbg.value(metadata i32 %3, metadata !12152, metadata !DIExpression()), !dbg !12154
  call void @llvm.dbg.value(metadata i32 undef, metadata !12150, metadata !DIExpression()), !dbg !12154
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !12160
  call void @llvm.dbg.value(metadata i32 %3, metadata !11634, metadata !DIExpression()) #23, !dbg !12163
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !12163
  call void @llvm.dbg.value(metadata i32 %3, metadata !11642, metadata !DIExpression()) #23, !dbg !12165
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12167, !srcloc !11648
  call void @llvm.dbg.value(metadata i32 1, metadata !12150, metadata !DIExpression()), !dbg !12154
  call void @llvm.dbg.value(metadata i32 undef, metadata !12150, metadata !DIExpression()), !dbg !12154
  ret void, !dbg !12168
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12169 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12171, metadata !DIExpression()), !dbg !12173
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12174
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12176, !srcloc !11622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12176
  call void @llvm.dbg.value(metadata i32 %3, metadata !11619, metadata !DIExpression()) #23, !dbg !12178
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !12178
  call void @llvm.dbg.value(metadata i32 %3, metadata !11613, metadata !DIExpression()) #23, !dbg !12174
  call void @llvm.dbg.value(metadata i32 %3, metadata !12172, metadata !DIExpression()), !dbg !12173
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !12179
  br i1 %4, label %5, label %6, !dbg !12181

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11634, metadata !DIExpression()) #23, !dbg !12182
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !12182
  call void @llvm.dbg.value(metadata i32 %3, metadata !11642, metadata !DIExpression()) #23, !dbg !12185
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12187, !srcloc !11648
  br label %8, !dbg !12188

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.125(%struct.k_thread* noundef %0) #25, !dbg !12189
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12190
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12191
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !12191
  br label %8, !dbg !12192

8:                                                ; preds = %6, %5
  ret void, !dbg !12192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12193 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12195, metadata !DIExpression()), !dbg !12196
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12197
  %3 = load i8, i8* %2, align 1, !dbg !12197
  %4 = and i8 %3, 4, !dbg !12198
  %5 = icmp eq i8 %4, 0, !dbg !12199
  ret i1 %5, !dbg !12200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.125(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12201 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12203, metadata !DIExpression()), !dbg !12204
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12205
  %3 = load i8, i8* %2, align 1, !dbg !12206
  %4 = and i8 %3, -5, !dbg !12206
  store i8 %4, i8* %2, align 1, !dbg !12206
  ret void, !dbg !12207
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !12208 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !12211, metadata !DIExpression()), !dbg !12212
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12210, metadata !DIExpression()), !dbg !12212
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !12213
  br i1 %4, label %5, label %9, !dbg !12215

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !12216
  br i1 %6, label %7, label %9, !dbg !12217

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !12218, metadata !DIExpression()) #23, !dbg !12224
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12223, metadata !DIExpression()) #23, !dbg !12224
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !12227
  br label %10, !dbg !12228

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !11634, metadata !DIExpression()) #23, !dbg !12229
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !12229
  call void @llvm.dbg.value(metadata i32 %3, metadata !11642, metadata !DIExpression()) #23, !dbg !12232
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12234, !srcloc !11648
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !12235
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !12236 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12240, metadata !DIExpression()), !dbg !12241
  call void @llvm.dbg.value(metadata i32 %0, metadata !12242, metadata !DIExpression()), !dbg !12247
  %2 = icmp eq i32 %0, 0, !dbg !12249
  br i1 %2, label %3, label %6, !dbg !12250

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12251, !srcloc !12258
  call void @llvm.dbg.value(metadata i32 %4, metadata !12254, metadata !DIExpression()) #23, !dbg !12259
  %5 = icmp eq i32 %4, 0, !dbg !12260
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !12241
  ret i1 %7, !dbg !12261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !12262 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12265
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12264, metadata !DIExpression()), !dbg !12266
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12267
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !12268
  ret i1 %3, !dbg !12269
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !12270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12272, metadata !DIExpression()), !dbg !12274
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !12275
  call void @llvm.dbg.value(metadata i32 %2, metadata !12273, metadata !DIExpression()), !dbg !12274
  ret i32 %2, !dbg !12276
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12277 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12279, metadata !DIExpression()), !dbg !12283
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !12284
  call void @llvm.dbg.value(metadata i32 0, metadata !12280, metadata !DIExpression()), !dbg !12285
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12286
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12288, !srcloc !11622
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12288
  call void @llvm.dbg.value(metadata i32 %4, metadata !11619, metadata !DIExpression()) #23, !dbg !12290
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !12290
  call void @llvm.dbg.value(metadata i32 %4, metadata !11613, metadata !DIExpression()) #23, !dbg !12286
  call void @llvm.dbg.value(metadata i32 %4, metadata !12282, metadata !DIExpression()), !dbg !12285
  call void @llvm.dbg.value(metadata i32 undef, metadata !12280, metadata !DIExpression()), !dbg !12285
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12291
  br i1 %5, label %6, label %10, !dbg !12295

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11776, metadata !DIExpression()) #23, !dbg !12296
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12299
  %8 = load i8, i8* %7, align 1, !dbg !12300
  %9 = and i8 %8, 127, !dbg !12300
  store i8 %9, i8* %7, align 1, !dbg !12300
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11784, metadata !DIExpression()) #23, !dbg !12301
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12303
  br label %10, !dbg !12304

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !12305
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12306
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !12307
  %13 = zext i1 %12 to i32, !dbg !12307
  tail call fastcc void @update_cache(i32 noundef %13) #25, !dbg !12308
  call void @llvm.dbg.value(metadata i32 %4, metadata !11634, metadata !DIExpression()) #23, !dbg !12309
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !12309
  call void @llvm.dbg.value(metadata i32 %4, metadata !11642, metadata !DIExpression()) #23, !dbg !12311
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12313, !srcloc !11648
  call void @llvm.dbg.value(metadata i32 1, metadata !12280, metadata !DIExpression()), !dbg !12285
  call void @llvm.dbg.value(metadata i32 undef, metadata !12280, metadata !DIExpression()), !dbg !12285
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12314
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !12316
  br i1 %15, label %16, label %17, !dbg !12317

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !12318
  br label %17, !dbg !12320

17:                                               ; preds = %16, %10
  ret void, !dbg !12321
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12322 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12324, metadata !DIExpression()), !dbg !12325
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12326
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12327
  ret i32 %3, !dbg !12328
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12329 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12331, metadata !DIExpression()), !dbg !12332
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12333
  %3 = load i8, i8* %2, align 1, !dbg !12334
  %4 = or i8 %3, 16, !dbg !12334
  store i8 %4, i8* %2, align 1, !dbg !12334
  ret void, !dbg !12335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !12336 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12337, !srcloc !11622
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12337
  call void @llvm.dbg.value(metadata i32 %2, metadata !11619, metadata !DIExpression()) #23, !dbg !12339
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !12339
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !12340
  ret void, !dbg !12341
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !12342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12344, metadata !DIExpression()), !dbg !12345
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !12346
  br i1 %2, label %3, label %5, !dbg !12348

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !12349
  br label %6, !dbg !12351

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !11642, metadata !DIExpression()) #23, !dbg !12352
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !12355, !srcloc !11648
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !12356
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12357 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12359, metadata !DIExpression()), !dbg !12361
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12362
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12364, !srcloc !11622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12364
  call void @llvm.dbg.value(metadata i32 %3, metadata !11619, metadata !DIExpression()) #23, !dbg !12366
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !12366
  call void @llvm.dbg.value(metadata i32 %3, metadata !11613, metadata !DIExpression()) #23, !dbg !12362
  call void @llvm.dbg.value(metadata i32 %3, metadata !12360, metadata !DIExpression()), !dbg !12361
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !12367
  br i1 %4, label %6, label %5, !dbg !12369

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11634, metadata !DIExpression()) #23, !dbg !12370
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !12370
  call void @llvm.dbg.value(metadata i32 %3, metadata !11642, metadata !DIExpression()) #23, !dbg !12373
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12375, !srcloc !11648
  br label %8, !dbg !12376

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !12377
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12378
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12379
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !12379
  br label %8, !dbg !12380

8:                                                ; preds = %6, %5
  ret void, !dbg !12380
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !12381 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12383, metadata !DIExpression()), !dbg !12384
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12385
  %3 = load i8, i8* %2, align 1, !dbg !12385
  %4 = and i8 %3, 16, !dbg !12386
  %5 = icmp ne i8 %4, 0, !dbg !12387
  ret i1 %5, !dbg !12388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12389 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12391, metadata !DIExpression()), !dbg !12392
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12393
  %3 = load i8, i8* %2, align 1, !dbg !12394
  %4 = and i8 %3, -17, !dbg !12394
  store i8 %4, i8* %2, align 1, !dbg !12394
  ret void, !dbg !12395
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12396 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12406, metadata !DIExpression()), !dbg !12410
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12404, metadata !DIExpression()), !dbg !12410
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12405, metadata !DIExpression()), !dbg !12410
  call void @llvm.dbg.value(metadata i32 0, metadata !12407, metadata !DIExpression()), !dbg !12411
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12412
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12414, !srcloc !11622
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !12414
  call void @llvm.dbg.value(metadata i32 %5, metadata !11619, metadata !DIExpression()) #23, !dbg !12416
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !12416
  call void @llvm.dbg.value(metadata i32 %5, metadata !11613, metadata !DIExpression()) #23, !dbg !12412
  call void @llvm.dbg.value(metadata i32 %5, metadata !12409, metadata !DIExpression()), !dbg !12411
  call void @llvm.dbg.value(metadata i32 undef, metadata !12407, metadata !DIExpression()), !dbg !12411
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !12417
  call void @llvm.dbg.value(metadata i32 %5, metadata !11634, metadata !DIExpression()) #23, !dbg !12420
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !12420
  call void @llvm.dbg.value(metadata i32 %5, metadata !11642, metadata !DIExpression()) #23, !dbg !12422
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !12424, !srcloc !11648
  call void @llvm.dbg.value(metadata i32 1, metadata !12407, metadata !DIExpression()), !dbg !12411
  call void @llvm.dbg.value(metadata i32 undef, metadata !12407, metadata !DIExpression()), !dbg !12411
  ret void, !dbg !12425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !12426 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12430, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12428, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12429, metadata !DIExpression()), !dbg !12431
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #25, !dbg !12432
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !12433
  ret void, !dbg !12434
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !12435 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12439, metadata !DIExpression()), !dbg !12441
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12440, metadata !DIExpression()), !dbg !12441
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !12442
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !12443
  %3 = icmp eq %union.anon* %1, null, !dbg !12444
  br i1 %3, label %21, label %4, !dbg !12446

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12447
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !12449
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !12450
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !11807, metadata !DIExpression()) #23, !dbg !12451
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11813, metadata !DIExpression()) #23, !dbg !12451
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #24, !dbg !12453
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !11814, metadata !DIExpression()) #23, !dbg !12451
  %8 = icmp eq %struct._dnode* %7, null, !dbg !12454
  br i1 %8, label %19, label %9, !dbg !12453

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !11814, metadata !DIExpression()) #23, !dbg !12451
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !12455
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !11814, metadata !DIExpression()) #23, !dbg !12451
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #24, !dbg !12456
  %13 = icmp sgt i32 %12, 0, !dbg !12457
  br i1 %13, label %14, label %16, !dbg !12458

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12459
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #24, !dbg !12460
  br label %21, !dbg !12461

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #24, !dbg !12454
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !11814, metadata !DIExpression()) #23, !dbg !12451
  %18 = icmp eq %struct._dnode* %17, null, !dbg !12454
  br i1 %18, label %19, label %9, !dbg !12453, !llvm.loop !12462

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12464
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #24, !dbg !12465
  br label %21, !dbg !12466

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !12467
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12468 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12473, metadata !DIExpression()), !dbg !12474
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12472, metadata !DIExpression()), !dbg !12474
  %4 = icmp eq i64 %3, -1, !dbg !12475
  br i1 %4, label %6, label %5, !dbg !12477

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.126(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !12478
  br label %6, !dbg !12480

6:                                                ; preds = %5, %2
  ret void, !dbg !12481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.126(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12482 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12485, metadata !DIExpression()), !dbg !12486
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12484, metadata !DIExpression()), !dbg !12486
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12487
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !12488
  ret void, !dbg !12489
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !12490 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12492, metadata !DIExpression()), !dbg !12500
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !12501
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !12501
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12493, metadata !DIExpression()), !dbg !12500
  call void @llvm.dbg.value(metadata i32 0, metadata !12494, metadata !DIExpression()), !dbg !12502
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12503
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12505, !srcloc !11622
  call void @llvm.dbg.value(metadata i32 undef, metadata !11619, metadata !DIExpression()) #23, !dbg !12507
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !12507
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()) #23, !dbg !12503
  call void @llvm.dbg.value(metadata i32 undef, metadata !12496, metadata !DIExpression()), !dbg !12502
  call void @llvm.dbg.value(metadata i32 undef, metadata !12494, metadata !DIExpression()), !dbg !12502
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !12508
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !12509
  %7 = load i8, i8* %6, align 1, !dbg !12509
  %8 = and i8 %7, 40, !dbg !12510
  %9 = icmp eq i8 %8, 0, !dbg !12510
  call void @llvm.dbg.value(metadata i1 %9, metadata !12497, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12511
  br i1 %9, label %10, label %17, !dbg !12512

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !12513
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !12513
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !12513
  %14 = icmp eq %union.anon* %13, null, !dbg !12517
  br i1 %14, label %16, label %15, !dbg !12518

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !12519
  br label %16, !dbg !12521

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.125(%struct.k_thread* noundef nonnull %3) #25, !dbg !12522
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !12523
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !12524
  br label %17, !dbg !12525

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !12505
  call void @llvm.dbg.value(metadata i32 %18, metadata !11619, metadata !DIExpression()) #23, !dbg !12507
  call void @llvm.dbg.value(metadata i32 %18, metadata !11613, metadata !DIExpression()) #23, !dbg !12503
  call void @llvm.dbg.value(metadata i32 %18, metadata !12496, metadata !DIExpression()), !dbg !12502
  call void @llvm.dbg.value(metadata i32 undef, metadata !11634, metadata !DIExpression()) #23, !dbg !12526
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !12526
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #23, !dbg !12528
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !12530, !srcloc !11648
  call void @llvm.dbg.value(metadata i32 1, metadata !12494, metadata !DIExpression()), !dbg !12502
  call void @llvm.dbg.value(metadata i32 undef, metadata !12494, metadata !DIExpression()), !dbg !12502
  ret void, !dbg !12531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12532 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12534, metadata !DIExpression()), !dbg !12535
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12536
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !12537
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12538
  store %union.anon* null, %union.anon** %2, align 8, !dbg !12539
  ret void, !dbg !12540
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12541 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12543, metadata !DIExpression()), !dbg !12544
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12545
  %3 = load i8, i8* %2, align 1, !dbg !12546
  %4 = and i8 %3, -3, !dbg !12546
  store i8 %4, i8* %2, align 1, !dbg !12546
  ret void, !dbg !12547
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12548 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12550, metadata !DIExpression()), !dbg !12551
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12552
  br i1 %2, label %3, label %7, !dbg !12554

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11776, metadata !DIExpression()) #23, !dbg !12555
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12558
  %5 = load i8, i8* %4, align 1, !dbg !12559
  %6 = and i8 %5, 127, !dbg !12559
  store i8 %6, i8* %4, align 1, !dbg !12559
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11784, metadata !DIExpression()) #23, !dbg !12560
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12562
  br label %7, !dbg !12563

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12564
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !12565
  %10 = zext i1 %9 to i32, !dbg !12565
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !12566
  ret void, !dbg !12567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #8 !dbg !12568 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12570, metadata !DIExpression()), !dbg !12571
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12572
  %3 = load i8, i8* %2, align 1, !dbg !12573
  %4 = or i8 %3, 2, !dbg !12573
  store i8 %4, i8* %2, align 1, !dbg !12573
  ret void, !dbg !12574
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !12575 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12577, metadata !DIExpression()), !dbg !12581
  call void @llvm.dbg.value(metadata i32 0, metadata !12578, metadata !DIExpression()), !dbg !12582
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12583
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12585, !srcloc !11622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12585
  call void @llvm.dbg.value(metadata i32 %3, metadata !11619, metadata !DIExpression()) #23, !dbg !12587
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !12587
  call void @llvm.dbg.value(metadata i32 %3, metadata !11613, metadata !DIExpression()) #23, !dbg !12583
  call void @llvm.dbg.value(metadata i32 %3, metadata !12580, metadata !DIExpression()), !dbg !12582
  call void @llvm.dbg.value(metadata i32 undef, metadata !12578, metadata !DIExpression()), !dbg !12582
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !12588
  call void @llvm.dbg.value(metadata i32 %3, metadata !11634, metadata !DIExpression()) #23, !dbg !12591
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !12591
  call void @llvm.dbg.value(metadata i32 %3, metadata !11642, metadata !DIExpression()) #23, !dbg !12593
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12595, !srcloc !11648
  call void @llvm.dbg.value(metadata i32 1, metadata !12578, metadata !DIExpression()), !dbg !12582
  call void @llvm.dbg.value(metadata i32 undef, metadata !12578, metadata !DIExpression()), !dbg !12582
  ret void, !dbg !12596
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12597 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12603, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.value(metadata i32 %0, metadata !12601, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12602, metadata !DIExpression()), !dbg !12608
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12609
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !12610
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12611
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !12612
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !12613
  call void @llvm.dbg.value(metadata i32 %6, metadata !12604, metadata !DIExpression()), !dbg !12608
  call void @llvm.dbg.value(metadata i32 0, metadata !12605, metadata !DIExpression()), !dbg !12614
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12615
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12617, !srcloc !11622
  call void @llvm.dbg.value(metadata i32 undef, metadata !11619, metadata !DIExpression()) #23, !dbg !12619
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !12619
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()) #23, !dbg !12615
  call void @llvm.dbg.value(metadata i32 undef, metadata !12607, metadata !DIExpression()), !dbg !12614
  call void @llvm.dbg.value(metadata i32 undef, metadata !12605, metadata !DIExpression()), !dbg !12614
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12620
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12624
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !12625
  br i1 %10, label %11, label %12, !dbg !12626

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12627
  br label %12, !dbg !12629

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !12617
  call void @llvm.dbg.value(metadata i32 %13, metadata !11619, metadata !DIExpression()) #23, !dbg !12619
  call void @llvm.dbg.value(metadata i32 %13, metadata !11613, metadata !DIExpression()) #23, !dbg !12615
  call void @llvm.dbg.value(metadata i32 %13, metadata !12607, metadata !DIExpression()), !dbg !12614
  call void @llvm.dbg.value(metadata i32 undef, metadata !11634, metadata !DIExpression()) #23, !dbg !12630
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !12630
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #23, !dbg !12632
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !12634, !srcloc !11648
  call void @llvm.dbg.value(metadata i32 1, metadata !12605, metadata !DIExpression()), !dbg !12614
  call void @llvm.dbg.value(metadata i32 undef, metadata !12605, metadata !DIExpression()), !dbg !12614
  ret i32 %6, !dbg !12635
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !12636 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12641, metadata !DIExpression()), !dbg !12644
  call void @llvm.dbg.value(metadata i64 undef, metadata !12643, metadata !DIExpression()), !dbg !12644
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12640, metadata !DIExpression()), !dbg !12644
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !12642, metadata !DIExpression()), !dbg !12644
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12645
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !12646
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12647
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12649, !srcloc !11622
  call void @llvm.dbg.value(metadata i32 undef, metadata !11619, metadata !DIExpression()) #23, !dbg !12651
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !12651
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()) #23, !dbg !12647
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12652
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !12653
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !12218, metadata !DIExpression()) #23, !dbg !12654
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12223, metadata !DIExpression()) #23, !dbg !12654
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #24, !dbg !12656
  ret i32 %9, !dbg !12657
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12658 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12662, metadata !DIExpression()), !dbg !12667
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12663, metadata !DIExpression()), !dbg !12667
  call void @llvm.dbg.value(metadata i32 0, metadata !12664, metadata !DIExpression()), !dbg !12668
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12669
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12671, !srcloc !11622
  call void @llvm.dbg.value(metadata i32 undef, metadata !11619, metadata !DIExpression()) #23, !dbg !12673
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !12673
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()) #23, !dbg !12669
  call void @llvm.dbg.value(metadata i32 undef, metadata !12666, metadata !DIExpression()), !dbg !12668
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12663, metadata !DIExpression()), !dbg !12667
  call void @llvm.dbg.value(metadata i32 undef, metadata !12664, metadata !DIExpression()), !dbg !12668
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !12674
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12663, metadata !DIExpression()), !dbg !12667
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12677
  br i1 %5, label %7, label %6, !dbg !12679

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !12680
  br label %7, !dbg !12682

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !12671
  call void @llvm.dbg.value(metadata i32 %8, metadata !11619, metadata !DIExpression()) #23, !dbg !12673
  call void @llvm.dbg.value(metadata i32 %8, metadata !11613, metadata !DIExpression()) #23, !dbg !12669
  call void @llvm.dbg.value(metadata i32 %8, metadata !12666, metadata !DIExpression()), !dbg !12668
  call void @llvm.dbg.value(metadata i32 undef, metadata !11634, metadata !DIExpression()) #23, !dbg !12683
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !12683
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #23, !dbg !12685
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !12687, !srcloc !11648
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12663, metadata !DIExpression()), !dbg !12667
  call void @llvm.dbg.value(metadata i32 undef, metadata !12664, metadata !DIExpression()), !dbg !12668
  ret %struct.k_thread* %4, !dbg !12688
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12689 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12691, metadata !DIExpression()), !dbg !12696
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12692, metadata !DIExpression()), !dbg !12696
  call void @llvm.dbg.value(metadata i32 0, metadata !12693, metadata !DIExpression()), !dbg !12697
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12698
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12700, !srcloc !11622
  call void @llvm.dbg.value(metadata i32 undef, metadata !11619, metadata !DIExpression()) #23, !dbg !12702
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !12702
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()) #23, !dbg !12698
  call void @llvm.dbg.value(metadata i32 undef, metadata !12695, metadata !DIExpression()), !dbg !12697
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12692, metadata !DIExpression()), !dbg !12696
  call void @llvm.dbg.value(metadata i32 undef, metadata !12693, metadata !DIExpression()), !dbg !12697
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !12703
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12692, metadata !DIExpression()), !dbg !12696
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12706
  br i1 %5, label %8, label %6, !dbg !12708

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !12709
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !12711
  br label %8, !dbg !12712

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !12700
  call void @llvm.dbg.value(metadata i32 %9, metadata !11619, metadata !DIExpression()) #23, !dbg !12702
  call void @llvm.dbg.value(metadata i32 %9, metadata !11613, metadata !DIExpression()) #23, !dbg !12698
  call void @llvm.dbg.value(metadata i32 %9, metadata !12695, metadata !DIExpression()), !dbg !12697
  call void @llvm.dbg.value(metadata i32 undef, metadata !11634, metadata !DIExpression()) #23, !dbg !12713
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !12713
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #23, !dbg !12715
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !12717, !srcloc !11648
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12692, metadata !DIExpression()), !dbg !12696
  call void @llvm.dbg.value(metadata i32 undef, metadata !12693, metadata !DIExpression()), !dbg !12697
  ret %struct.k_thread* %4, !dbg !12718
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12719 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12721, metadata !DIExpression()), !dbg !12722
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12577, metadata !DIExpression()) #23, !dbg !12723
  call void @llvm.dbg.value(metadata i32 0, metadata !12578, metadata !DIExpression()) #23, !dbg !12725
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12726
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12728, !srcloc !11622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12728
  call void @llvm.dbg.value(metadata i32 %3, metadata !11619, metadata !DIExpression()) #23, !dbg !12730
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !12730
  call void @llvm.dbg.value(metadata i32 %3, metadata !11613, metadata !DIExpression()) #23, !dbg !12726
  call void @llvm.dbg.value(metadata i32 %3, metadata !12580, metadata !DIExpression()) #23, !dbg !12725
  call void @llvm.dbg.value(metadata i32 undef, metadata !12578, metadata !DIExpression()) #23, !dbg !12725
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !12731
  call void @llvm.dbg.value(metadata i32 %3, metadata !11634, metadata !DIExpression()) #23, !dbg !12732
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !12732
  call void @llvm.dbg.value(metadata i32 %3, metadata !11642, metadata !DIExpression()) #23, !dbg !12734
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12736, !srcloc !11648
  call void @llvm.dbg.value(metadata i32 1, metadata !12578, metadata !DIExpression()) #23, !dbg !12725
  call void @llvm.dbg.value(metadata i32 undef, metadata !12578, metadata !DIExpression()) #23, !dbg !12725
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !12737
  ret void, !dbg !12738
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12739 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12741, metadata !DIExpression()), !dbg !12747
  call void @llvm.dbg.value(metadata i32 %1, metadata !12742, metadata !DIExpression()), !dbg !12747
  call void @llvm.dbg.value(metadata i8 0, metadata !12743, metadata !DIExpression()), !dbg !12747
  call void @llvm.dbg.value(metadata i32 0, metadata !12744, metadata !DIExpression()), !dbg !12748
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12749
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12751, !srcloc !11622
  call void @llvm.dbg.value(metadata i32 undef, metadata !11619, metadata !DIExpression()) #23, !dbg !12753
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !12753
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()) #23, !dbg !12749
  call void @llvm.dbg.value(metadata i32 undef, metadata !12746, metadata !DIExpression()), !dbg !12748
  call void @llvm.dbg.value(metadata i8 poison, metadata !12743, metadata !DIExpression()), !dbg !12747
  call void @llvm.dbg.value(metadata i32 undef, metadata !12744, metadata !DIExpression()), !dbg !12748
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !12754
  call void @llvm.dbg.value(metadata i1 %6, metadata !12743, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12747
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !12757

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11776, metadata !DIExpression()) #23, !dbg !12758
  %11 = load i8, i8* %4, align 1, !dbg !12764
  %12 = and i8 %11, 127, !dbg !12764
  store i8 %12, i8* %4, align 1, !dbg !12764
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11784, metadata !DIExpression()) #23, !dbg !12765
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12767
  store i8 %9, i8* %8, align 2, !dbg !12768
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11793, metadata !DIExpression()) #23, !dbg !12769
  %13 = load i8, i8* %4, align 1, !dbg !12771
  %14 = or i8 %13, -128, !dbg !12771
  store i8 %14, i8* %4, align 1, !dbg !12771
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11800, metadata !DIExpression()) #23, !dbg !12772
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11807, metadata !DIExpression()) #23, !dbg !12774
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11813, metadata !DIExpression()) #23, !dbg !12774
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12776
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !11814, metadata !DIExpression()) #23, !dbg !12774
  %16 = icmp eq %struct._dnode* %15, null, !dbg !12777
  br i1 %16, label %26, label %17, !dbg !12776

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !11814, metadata !DIExpression()) #23, !dbg !12774
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !12778
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !11814, metadata !DIExpression()) #23, !dbg !12774
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #24, !dbg !12779
  %21 = icmp sgt i32 %20, 0, !dbg !12780
  br i1 %21, label %22, label %23, !dbg !12781

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #24, !dbg !12782
  br label %27, !dbg !12783

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #24, !dbg !12777
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !11814, metadata !DIExpression()) #23, !dbg !12774
  %25 = icmp eq %struct._dnode* %24, null, !dbg !12777
  br i1 %25, label %26, label %17, !dbg !12776, !llvm.loop !12784

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #24, !dbg !12786
  br label %27, !dbg !12787

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !12788
  br label %29, !dbg !12789

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !12790
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !12751
  call void @llvm.dbg.value(metadata i32 %30, metadata !11619, metadata !DIExpression()) #23, !dbg !12753
  call void @llvm.dbg.value(metadata i32 %30, metadata !11613, metadata !DIExpression()) #23, !dbg !12749
  call void @llvm.dbg.value(metadata i32 %30, metadata !12746, metadata !DIExpression()), !dbg !12748
  call void @llvm.dbg.value(metadata i32 undef, metadata !11634, metadata !DIExpression()) #23, !dbg !12792
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !12792
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #23, !dbg !12794
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !12796, !srcloc !11648
  call void @llvm.dbg.value(metadata i8 poison, metadata !12743, metadata !DIExpression()), !dbg !12747
  call void @llvm.dbg.value(metadata i32 undef, metadata !12744, metadata !DIExpression()), !dbg !12748
  ret i1 %6, !dbg !12797
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12798 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12802, metadata !DIExpression()), !dbg !12805
  call void @llvm.dbg.value(metadata i32 %1, metadata !12803, metadata !DIExpression()), !dbg !12805
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !12806
  call void @llvm.dbg.value(metadata i1 %3, metadata !12804, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12805
  br i1 %3, label %4, label %12, !dbg !12807

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12809
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !12810
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !12810
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !12810
  %9 = load i8, i8* %8, align 1, !dbg !12810
  %10 = icmp eq i8 %9, 0, !dbg !12811
  br i1 %10, label %11, label %12, !dbg !12812

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !12813
  br label %12, !dbg !12815

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !12816
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !12817 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12819, metadata !DIExpression()), !dbg !12822
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12823
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12825, !srcloc !11622
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12825
  call void @llvm.dbg.value(metadata i32 %2, metadata !11619, metadata !DIExpression()) #23, !dbg !12827
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !12827
  call void @llvm.dbg.value(metadata i32 %2, metadata !11613, metadata !DIExpression()) #23, !dbg !12823
  call void @llvm.dbg.value(metadata i32 %2, metadata !12821, metadata !DIExpression()), !dbg !12822
  call void @llvm.dbg.value(metadata i32 undef, metadata !12819, metadata !DIExpression()), !dbg !12822
  tail call fastcc void @z_sched_lock() #25, !dbg !12828
  call void @llvm.dbg.value(metadata i32 %2, metadata !11634, metadata !DIExpression()) #23, !dbg !12831
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !12831
  call void @llvm.dbg.value(metadata i32 %2, metadata !11642, metadata !DIExpression()) #23, !dbg !12833
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12835, !srcloc !11648
  call void @llvm.dbg.value(metadata i32 1, metadata !12819, metadata !DIExpression()), !dbg !12822
  call void @llvm.dbg.value(metadata i32 undef, metadata !12819, metadata !DIExpression()), !dbg !12822
  ret void, !dbg !12836
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !12837 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12838
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12839
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !12839
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !12839
  %5 = load i8, i8* %4, align 1, !dbg !12840
  %6 = add i8 %5, -1, !dbg !12840
  store i8 %6, i8* %4, align 1, !dbg !12840
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12841, !srcloc !12843
  ret void, !dbg !12844
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !12845 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12847, metadata !DIExpression()), !dbg !12850
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !12851
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12853, !srcloc !11622
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12853
  call void @llvm.dbg.value(metadata i32 %2, metadata !11619, metadata !DIExpression()) #23, !dbg !12855
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !12855
  call void @llvm.dbg.value(metadata i32 %2, metadata !11613, metadata !DIExpression()) #23, !dbg !12851
  call void @llvm.dbg.value(metadata i32 %2, metadata !12849, metadata !DIExpression()), !dbg !12850
  call void @llvm.dbg.value(metadata i32 undef, metadata !12847, metadata !DIExpression()), !dbg !12850
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12856
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !12859
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !12859
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12859
  %7 = load i8, i8* %6, align 1, !dbg !12860
  %8 = add i8 %7, 1, !dbg !12860
  store i8 %8, i8* %6, align 1, !dbg !12860
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !12861
  call void @llvm.dbg.value(metadata i32 %2, metadata !11634, metadata !DIExpression()) #23, !dbg !12862
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !12862
  call void @llvm.dbg.value(metadata i32 %2, metadata !11642, metadata !DIExpression()) #23, !dbg !12864
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12866, !srcloc !11648
  call void @llvm.dbg.value(metadata i32 1, metadata !12847, metadata !DIExpression()), !dbg !12850
  call void @llvm.dbg.value(metadata i32 undef, metadata !12847, metadata !DIExpression()), !dbg !12850
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !12867
  ret void, !dbg !12868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !12869 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12870
  ret %struct.k_thread* %1, !dbg !12871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !12872 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !12876, metadata !DIExpression()), !dbg !12881
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !12877, metadata !DIExpression()), !dbg !12881
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !12882
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12878, metadata !DIExpression()), !dbg !12881
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !12883
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12879, metadata !DIExpression()), !dbg !12881
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !12884
  call void @llvm.dbg.value(metadata i32 %5, metadata !12880, metadata !DIExpression()), !dbg !12881
  %6 = icmp sgt i32 %5, 0, !dbg !12885
  br i1 %6, label %17, label %7, !dbg !12887

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !12888
  br i1 %8, label %17, label %9, !dbg !12890

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !12891
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !12891
  %12 = load i32, i32* %11, align 8, !dbg !12891
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !12893
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !12893
  %15 = load i32, i32* %14, align 8, !dbg !12893
  %16 = icmp ult i32 %12, %15, !dbg !12894
  br label %17, !dbg !12895

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !12896
  ret i1 %18, !dbg !12897
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !12898 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12915, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12916, metadata !DIExpression()), !dbg !12930
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !12931
  %5 = load i32, i32* %4, align 4, !dbg !12932
  %6 = add nsw i32 %5, 1, !dbg !12932
  store i32 %6, i32* %4, align 4, !dbg !12932
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !12933
  store i32 %5, i32* %7, align 8, !dbg !12934
  %8 = load i32, i32* %4, align 4, !dbg !12935
  %9 = icmp eq i32 %8, 0, !dbg !12936
  br i1 %9, label %10, label %32, !dbg !12937

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !12938
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !12938
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !12918, metadata !DIExpression()), !dbg !12938
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12938
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !12938
  %14 = load i32, i32* %13, align 4, !dbg !12938
  %15 = shl i32 %14, 2, !dbg !12938
  %16 = alloca i8, i32 %15, align 8, !dbg !12938
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !12938
  store i8* %16, i8** %17, align 4, !dbg !12938
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !12938
  %19 = alloca i8, i32 %14, align 8, !dbg !12938
  store i8* %19, i8** %18, align 4, !dbg !12938
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !12938
  store i32 -1, i32* %20, align 4, !dbg !12938
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !12939
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !12927, metadata !DIExpression()), !dbg !12940
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !12917, metadata !DIExpression()), !dbg !12930
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !12941
  br i1 %22, label %23, label %24, !dbg !12938

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !12941
  br label %32, !dbg !12942

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !12917, metadata !DIExpression()), !dbg !12930
  %26 = load i32, i32* %4, align 4, !dbg !12943
  %27 = add nsw i32 %26, 1, !dbg !12943
  store i32 %27, i32* %4, align 4, !dbg !12943
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !12945
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !12945
  store i32 %26, i32* %29, align 8, !dbg !12946
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !12939
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !12927, metadata !DIExpression()), !dbg !12940
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !12917, metadata !DIExpression()), !dbg !12930
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !12941
  br i1 %31, label %23, label %24, !dbg !12938, !llvm.loop !12947

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12949
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !12950
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #24, !dbg !12951
  ret void, !dbg !12952
}

; Function Attrs: optsize
declare !dbg !12953 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !12958 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !12961 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12963, metadata !DIExpression()), !dbg !12965
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12964, metadata !DIExpression()), !dbg !12965
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12966
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !12967
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #24, !dbg !12968
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !12969
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !12969
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !12971
  br i1 %7, label %8, label %10, !dbg !12972

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !12973
  store i32 0, i32* %9, align 4, !dbg !12975
  br label %10, !dbg !12976

10:                                               ; preds = %8, %2
  ret void, !dbg !12977
}

; Function Attrs: optsize
declare !dbg !12978 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !12979 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12983, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12984, metadata !DIExpression()), !dbg !12986
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12987
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !12988
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !12985, metadata !DIExpression()), !dbg !12986
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12984, metadata !DIExpression()), !dbg !12986
  ret %struct.k_thread* %4, !dbg !12989
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !12990 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !12994, metadata !DIExpression()), !dbg !12995
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !12996
  ret %struct.rbnode* %2, !dbg !12997
}

; Function Attrs: optsize
declare !dbg !12998 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !13001 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !13013, metadata !DIExpression()), !dbg !13017
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !13018
  %3 = load i32, i32* %2, align 4, !dbg !13018
  %4 = icmp eq i32 %3, 0, !dbg !13020
  br i1 %4, label %10, label %5, !dbg !13021

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13014, metadata !DIExpression()), !dbg !13017
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !13022, !range !5856
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !13023
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13015, metadata !DIExpression()), !dbg !13017
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #25, !dbg !13024
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !13016, metadata !DIExpression()), !dbg !13017
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13014, metadata !DIExpression()), !dbg !13017
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !13017
  ret %struct.k_thread* %11, !dbg !13025
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13026 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13030, metadata !DIExpression()), !dbg !13033
  call void @llvm.dbg.value(metadata i32 0, metadata !13031, metadata !DIExpression()), !dbg !13033
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13034
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13032, metadata !DIExpression()), !dbg !13033
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13035
  br i1 %3, label %8, label %4, !dbg !13036

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13037
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13039
  call void @llvm.dbg.value(metadata i32 1, metadata !13031, metadata !DIExpression()), !dbg !13033
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13034
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13032, metadata !DIExpression()), !dbg !13033
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13035
  br i1 %7, label %8, label %4, !dbg !13036, !llvm.loop !13040

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !13033
  ret i32 %9, !dbg !13042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #5 !dbg !13043 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13045, metadata !DIExpression()), !dbg !13046
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13047
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !13048
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13049
  ret %struct.k_thread* %4, !dbg !13050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !13051 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !13060, metadata !DIExpression()), !dbg !13061
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !13062
  tail call fastcc void @sys_dlist_init.133(%struct._dnode* noundef nonnull %2) #25, !dbg !13063
  ret void, !dbg !13064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.133(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13065 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13069, metadata !DIExpression()), !dbg !13070
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13071
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13072
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13073
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13074
  ret void, !dbg !13075
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !13076 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !13077
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !13078
  ret void, !dbg !13079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !13080 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13085, metadata !DIExpression()), !dbg !13086
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13087
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !13087
  %4 = load i8, i8* %3, align 2, !dbg !13087
  %5 = sext i8 %4 to i32, !dbg !13088
  ret i32 %5, !dbg !13089
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13090 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13094, metadata !DIExpression()), !dbg !13097
  call void @llvm.dbg.value(metadata i32 %1, metadata !13095, metadata !DIExpression()), !dbg !13097
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13096, metadata !DIExpression()), !dbg !13097
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !13098
  ret void, !dbg !13099
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !13100 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !13101
  br i1 %1, label %8, label %2, !dbg !13102

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !13103
  br i1 %3, label %8, label %4, !dbg !13104

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13105
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !13106
  %7 = xor i1 %6, true, !dbg !13104
  br label %8, !dbg !13104

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !13107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !13108 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !13109, !range !5276
  %2 = icmp eq i8 %1, 0, !dbg !13109
  ret i1 %2, !dbg !13110
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !13111 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !13114
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13116, !srcloc !11622
  call void @llvm.dbg.value(metadata i32 undef, metadata !11619, metadata !DIExpression()) #23, !dbg !13118
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !13118
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()) #23, !dbg !13114
  call void @llvm.dbg.value(metadata i32 undef, metadata !13113, metadata !DIExpression()), !dbg !13119
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13120
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11776, metadata !DIExpression()) #23, !dbg !13123
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !13125
  %4 = load i8, i8* %3, align 1, !dbg !13126
  %5 = and i8 %4, 127, !dbg !13126
  store i8 %5, i8* %3, align 1, !dbg !13126
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11784, metadata !DIExpression()) #23, !dbg !13127
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #24, !dbg !13129
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13130
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11793, metadata !DIExpression()) #23, !dbg !13131
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !13133
  %8 = load i8, i8* %7, align 1, !dbg !13134
  %9 = or i8 %8, -128, !dbg !13134
  store i8 %9, i8* %7, align 1, !dbg !13134
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11800, metadata !DIExpression()) #23, !dbg !13135
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11807, metadata !DIExpression()) #23, !dbg !13137
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11813, metadata !DIExpression()) #23, !dbg !13137
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13139
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !11814, metadata !DIExpression()) #23, !dbg !13137
  %11 = icmp eq %struct._dnode* %10, null, !dbg !13140
  br i1 %11, label %22, label %12, !dbg !13139

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !11814, metadata !DIExpression()) #23, !dbg !13137
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !13141
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !11814, metadata !DIExpression()) #23, !dbg !13137
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #24, !dbg !13142
  %16 = icmp sgt i32 %15, 0, !dbg !13143
  br i1 %16, label %17, label %19, !dbg !13144

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13145
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !13146
  br label %24, !dbg !13147

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #24, !dbg !13140
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !11814, metadata !DIExpression()) #23, !dbg !13137
  %21 = icmp eq %struct._dnode* %20, null, !dbg !13140
  br i1 %21, label %22, label %12, !dbg !13139, !llvm.loop !13148

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13150
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #24, !dbg !13151
  br label %24, !dbg !13152

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !13116
  call void @llvm.dbg.value(metadata i32 %25, metadata !11619, metadata !DIExpression()) #23, !dbg !13118
  call void @llvm.dbg.value(metadata i32 %25, metadata !11613, metadata !DIExpression()) #23, !dbg !13114
  call void @llvm.dbg.value(metadata i32 %25, metadata !13113, metadata !DIExpression()), !dbg !13119
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12218, metadata !DIExpression()) #23, !dbg !13154
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12223, metadata !DIExpression()) #23, !dbg !13154
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #24, !dbg !13156
  ret void, !dbg !13157
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !13158 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !13162, metadata !DIExpression()), !dbg !13165
  %3 = icmp eq i64 %2, -1, !dbg !13166
  br i1 %3, label %4, label %6, !dbg !13168

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13169
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #25, !dbg !13171
  br label %11, !dbg !13172

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !13163, metadata !DIExpression()), !dbg !13165
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !13173
  %8 = sext i32 %7 to i64, !dbg !13173
  call void @llvm.dbg.value(metadata i64 %8, metadata !13163, metadata !DIExpression()), !dbg !13165
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #25, !dbg !13174
  %10 = trunc i64 %9 to i32, !dbg !13174
  call void @llvm.dbg.value(metadata i32 %10, metadata !13164, metadata !DIExpression()), !dbg !13165
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !13165
  ret i32 %12, !dbg !13175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13176 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13180, metadata !DIExpression()), !dbg !13181
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13182, !srcloc !13184
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !13185
  ret void, !dbg !13186
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !13187 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13191, metadata !DIExpression()), !dbg !13195
  %2 = icmp eq i64 %0, 0, !dbg !13196
  br i1 %2, label %3, label %4, !dbg !13198

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #25, !dbg !13199
  br label %29, !dbg !13201

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !13193, metadata !DIExpression()), !dbg !13195
  %5 = icmp sgt i64 %0, -3, !dbg !13202
  br i1 %5, label %6, label %10, !dbg !13204

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !13205
  %8 = trunc i64 %0 to i32, !dbg !13207
  %9 = add i32 %7, %8, !dbg !13207
  call void @llvm.dbg.value(metadata i32 %9, metadata !13192, metadata !DIExpression()), !dbg !13195
  br label %13, !dbg !13208

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !13209
  %12 = sub i32 -2, %11, !dbg !13209
  call void @llvm.dbg.value(metadata i32 %12, metadata !13192, metadata !DIExpression()), !dbg !13195
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !13211
  call void @llvm.dbg.value(metadata i32 %14, metadata !13192, metadata !DIExpression()), !dbg !13195
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !13212
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13214, !srcloc !11622
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !13214
  call void @llvm.dbg.value(metadata i32 %16, metadata !11619, metadata !DIExpression()) #23, !dbg !13216
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !13216
  call void @llvm.dbg.value(metadata i32 %16, metadata !11613, metadata !DIExpression()) #23, !dbg !13212
  call void @llvm.dbg.value(metadata i32 %16, metadata !13194, metadata !DIExpression()), !dbg !13195
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13217
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !13218
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #25, !dbg !13219
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13220
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !13221
  tail call fastcc void @z_add_thread_timeout.126(%struct.k_thread* noundef %18, [1 x i64] %19) #25, !dbg !13221
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13222
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #25, !dbg !13223
  call void @llvm.dbg.value(metadata i32 %16, metadata !12218, metadata !DIExpression()) #23, !dbg !13224
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12223, metadata !DIExpression()) #23, !dbg !13224
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #24, !dbg !13226
  %22 = zext i32 %14 to i64, !dbg !13227
  %23 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !13228
  %24 = zext i32 %23 to i64, !dbg !13228
  %25 = sub nsw i64 %22, %24, !dbg !13229
  call void @llvm.dbg.value(metadata i64 %25, metadata !13191, metadata !DIExpression()), !dbg !13195
  %26 = icmp sgt i64 %25, 0, !dbg !13230
  %27 = select i1 %26, i64 %25, i64 0, !dbg !13230
  %28 = trunc i64 %27 to i32, !dbg !13230
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !13195
  ret i32 %30, !dbg !13231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13232 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13234, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.value(metadata i64 %0, metadata !11654, metadata !DIExpression()), !dbg !13236
  call void @llvm.dbg.value(metadata i32 10000, metadata !11657, metadata !DIExpression()), !dbg !13236
  call void @llvm.dbg.value(metadata i32 1000, metadata !11658, metadata !DIExpression()), !dbg !13236
  call void @llvm.dbg.value(metadata i8 1, metadata !11659, metadata !DIExpression()), !dbg !13236
  call void @llvm.dbg.value(metadata i1 false, metadata !11660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13236
  call void @llvm.dbg.value(metadata i1 false, metadata !11661, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13236
  call void @llvm.dbg.value(metadata i8 0, metadata !11662, metadata !DIExpression()), !dbg !13236
  call void @llvm.dbg.value(metadata i1 false, metadata !11663, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13236
  call void @llvm.dbg.value(metadata i1 true, metadata !11664, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13236
  call void @llvm.dbg.value(metadata i64 0, metadata !11665, metadata !DIExpression()), !dbg !13236
  call void @llvm.dbg.value(metadata i64 0, metadata !11665, metadata !DIExpression()), !dbg !13236
  call void @llvm.dbg.value(metadata i64 %0, metadata !11654, metadata !DIExpression()), !dbg !13236
  %2 = udiv i64 %0, 10, !dbg !13238
  ret i64 %2, !dbg !13242
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !13243 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13244, !srcloc !13246
  tail call void @z_impl_k_yield() #25, !dbg !13247
  ret void, !dbg !13248
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !13249 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13253, metadata !DIExpression()), !dbg !13255
  %2 = sext i32 %0 to i64, !dbg !13256
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !13257
  call void @llvm.dbg.value(metadata i64 %3, metadata !13254, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13255
  %4 = shl i64 %3, 32, !dbg !13258
  %5 = ashr exact i64 %4, 32, !dbg !13258
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !13259
  call void @llvm.dbg.value(metadata i32 %6, metadata !13254, metadata !DIExpression()), !dbg !13255
  %7 = sext i32 %6 to i64, !dbg !13260
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !13261
  %9 = trunc i64 %8 to i32, !dbg !13261
  ret i32 %9, !dbg !13262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !13263 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13265, metadata !DIExpression()), !dbg !13266
  call void @llvm.dbg.value(metadata i64 %0, metadata !11654, metadata !DIExpression()), !dbg !13267
  call void @llvm.dbg.value(metadata i32 1000000, metadata !11657, metadata !DIExpression()), !dbg !13267
  call void @llvm.dbg.value(metadata i32 10000, metadata !11658, metadata !DIExpression()), !dbg !13267
  call void @llvm.dbg.value(metadata i8 1, metadata !11659, metadata !DIExpression()), !dbg !13267
  call void @llvm.dbg.value(metadata i1 false, metadata !11660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13267
  call void @llvm.dbg.value(metadata i1 true, metadata !11661, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13267
  call void @llvm.dbg.value(metadata i8 0, metadata !11662, metadata !DIExpression()), !dbg !13267
  call void @llvm.dbg.value(metadata i1 false, metadata !11663, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13267
  call void @llvm.dbg.value(metadata i1 true, metadata !11664, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13267
  call void @llvm.dbg.value(metadata i64 0, metadata !11665, metadata !DIExpression()), !dbg !13267
  call void @llvm.dbg.value(metadata i64 0, metadata !11665, metadata !DIExpression()), !dbg !13267
  %2 = add i64 %0, 99, !dbg !13269
  call void @llvm.dbg.value(metadata i64 %2, metadata !11654, metadata !DIExpression()), !dbg !13267
  %3 = udiv i64 %2, 100, !dbg !13270
  ret i64 %3, !dbg !13271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13272 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13274, metadata !DIExpression()), !dbg !13275
  call void @llvm.dbg.value(metadata i64 %0, metadata !11654, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.value(metadata i32 10000, metadata !11657, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.value(metadata i32 1000000, metadata !11658, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.value(metadata i8 1, metadata !11659, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.value(metadata i1 false, metadata !11660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13276
  call void @llvm.dbg.value(metadata i1 false, metadata !11661, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13276
  call void @llvm.dbg.value(metadata i8 0, metadata !11662, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.value(metadata i1 true, metadata !11663, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13276
  call void @llvm.dbg.value(metadata i1 false, metadata !11664, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13276
  call void @llvm.dbg.value(metadata i64 0, metadata !11665, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.value(metadata i64 0, metadata !11665, metadata !DIExpression()), !dbg !13276
  %2 = mul i64 %0, 100, !dbg !13278
  ret i64 %2, !dbg !13280
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13281 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13283, metadata !DIExpression()), !dbg !13284
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !13285
  br i1 %2, label %14, label %3, !dbg !13287

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !13288
  %5 = icmp slt i32 %4, 0, !dbg !13290
  br i1 %5, label %6, label %10, !dbg !13291

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13292
  %8 = load i8, i8* %7, align 1, !dbg !13292
  %9 = icmp eq i8 %8, 16, !dbg !13295
  br i1 %9, label %10, label %14, !dbg !13296

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !13297
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !13298
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13299, !srcloc !12258
  call void @llvm.dbg.value(metadata i32 %11, metadata !12254, metadata !DIExpression()) #23, !dbg !13303
  %12 = icmp eq i32 %11, 0, !dbg !13304
  br i1 %12, label %13, label %14, !dbg !13305

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13306
  br label %14, !dbg !13308

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !13309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13310 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13312, metadata !DIExpression()), !dbg !13313
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13314
  %3 = load i8, i8* %2, align 1, !dbg !13314
  %4 = and i8 %3, 2, !dbg !13315
  %5 = icmp ne i8 %4, 0, !dbg !13316
  ret i1 %5, !dbg !13317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !13318 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13323
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13322, metadata !DIExpression()), !dbg !13324
  ret %struct.k_thread* %1, !dbg !13325
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !13326 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13327, !srcloc !12258
  call void @llvm.dbg.value(metadata i32 %1, metadata !12254, metadata !DIExpression()) #23, !dbg !13330
  %2 = icmp eq i32 %1, 0, !dbg !13331
  br i1 %2, label %3, label %8, !dbg !13332

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13333
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !13334
  %6 = icmp ne i32 %5, 0, !dbg !13332
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !13335
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13336 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13338, metadata !DIExpression()), !dbg !13340
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !13341
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13343, !srcloc !11622
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13343
  call void @llvm.dbg.value(metadata i32 %3, metadata !11619, metadata !DIExpression()) #23, !dbg !13345
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !13345
  call void @llvm.dbg.value(metadata i32 %3, metadata !11613, metadata !DIExpression()) #23, !dbg !13341
  call void @llvm.dbg.value(metadata i32 %3, metadata !13339, metadata !DIExpression()), !dbg !13340
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13346
  %5 = load i8, i8* %4, align 4, !dbg !13346
  %6 = and i8 %5, 1, !dbg !13348
  %7 = icmp eq i8 %6, 0, !dbg !13349
  br i1 %7, label %9, label %8, !dbg !13350

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11634, metadata !DIExpression()) #23, !dbg !13351
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !13351
  call void @llvm.dbg.value(metadata i32 %3, metadata !11642, metadata !DIExpression()) #23, !dbg !13354
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13356, !srcloc !11648
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !13357, !srcloc !13359
  br label %24, !dbg !13360

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13361
  %11 = load i8, i8* %10, align 1, !dbg !13361
  %12 = and i8 %11, 8, !dbg !13363
  %13 = icmp eq i8 %12, 0, !dbg !13364
  br i1 %13, label %15, label %14, !dbg !13365

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !11634, metadata !DIExpression()) #23, !dbg !13366
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !13366
  call void @llvm.dbg.value(metadata i32 %3, metadata !11642, metadata !DIExpression()) #23, !dbg !13369
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13371, !srcloc !11648
  br label %24, !dbg !13372

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !13373
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13374
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !13376
  br i1 %17, label %18, label %23, !dbg !13377

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13378, !srcloc !12258
  call void @llvm.dbg.value(metadata i32 %19, metadata !12254, metadata !DIExpression()) #23, !dbg !13381
  %20 = icmp eq i32 %19, 0, !dbg !13382
  br i1 %20, label %21, label %23, !dbg !13383

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !12218, metadata !DIExpression()) #23, !dbg !13384
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12223, metadata !DIExpression()) #23, !dbg !13384
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !13387
  br label %23, !dbg !13388

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !11634, metadata !DIExpression()) #23, !dbg !13389
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !13389
  call void @llvm.dbg.value(metadata i32 %3, metadata !11642, metadata !DIExpression()) #23, !dbg !13391
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13393, !srcloc !11648
  br label %24, !dbg !13394

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !13394
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13395 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13397, metadata !DIExpression()), !dbg !13398
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13399
  %3 = load i8, i8* %2, align 1, !dbg !13399
  %4 = and i8 %3, 8, !dbg !13401
  %5 = icmp eq i8 %4, 0, !dbg !13402
  br i1 %5, label %6, label %20, !dbg !13403

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !13404
  %8 = or i8 %7, 8, !dbg !13404
  store i8 %8, i8* %2, align 1, !dbg !13404
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !13406
  br i1 %9, label %10, label %12, !dbg !13408

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11776, metadata !DIExpression()) #23, !dbg !13409
  %11 = and i8 %8, 95, !dbg !13412
  store i8 %11, i8* %2, align 1, !dbg !13412
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11784, metadata !DIExpression()) #23, !dbg !13413
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !13415
  br label %12, !dbg !13416

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13417
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !13417
  %15 = icmp eq %union.anon* %14, null, !dbg !13419
  br i1 %15, label %17, label %16, !dbg !13420

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !13421
  br label %17, !dbg !13423

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !13424
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13425
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #25, !dbg !13426
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13427
  br label %20, !dbg !13428

20:                                               ; preds = %17, %1
  ret void, !dbg !13429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !13430 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13434, metadata !DIExpression()), !dbg !13436
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13437
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13435, metadata !DIExpression()), !dbg !13436
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13438
  br i1 %3, label %10, label %4, !dbg !13439

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !13440
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !13442
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13443, metadata !DIExpression()), !dbg !13449
  call void @llvm.dbg.value(metadata i32 0, metadata !13448, metadata !DIExpression()), !dbg !13449
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !13451
  store i32 0, i32* %7, align 4, !dbg !13452
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13453
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13437
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !13435, metadata !DIExpression()), !dbg !13436
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !13438
  br i1 %9, label %10, label %4, !dbg !13439, !llvm.loop !13454

10:                                               ; preds = %4, %1
  ret void, !dbg !13456
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13457 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13462, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13461, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !13466
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13468, !srcloc !11622
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13468
  call void @llvm.dbg.value(metadata i32 %4, metadata !11619, metadata !DIExpression()) #23, !dbg !13470
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !13470
  call void @llvm.dbg.value(metadata i32 %4, metadata !11613, metadata !DIExpression()) #23, !dbg !13466
  call void @llvm.dbg.value(metadata i32 %4, metadata !13463, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i32 0, metadata !13464, metadata !DIExpression()), !dbg !13465
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13471
  %6 = load i8, i8* %5, align 1, !dbg !13471
  %7 = and i8 %6, 8, !dbg !13473
  %8 = icmp eq i8 %7, 0, !dbg !13474
  br i1 %8, label %9, label %24, !dbg !13475

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !13462, metadata !DIExpression()), !dbg !13465
  %11 = icmp eq i64 %10, 0, !dbg !13476
  br i1 %11, label %24, label %12, !dbg !13478

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13479
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !13481
  br i1 %14, label %24, label %15, !dbg !13482

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13483
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !13483
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !13484
  %19 = icmp eq %union.anon* %17, %18, !dbg !13485
  br i1 %19, label %24, label %20, !dbg !13486

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13487
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #25, !dbg !13489
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13490
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #25, !dbg !13491
  call void @llvm.dbg.value(metadata i32 %4, metadata !12218, metadata !DIExpression()) #23, !dbg !13492
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12223, metadata !DIExpression()) #23, !dbg !13492
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #24, !dbg !13494
  call void @llvm.dbg.value(metadata i32 %23, metadata !13464, metadata !DIExpression()), !dbg !13465
  br label %26, !dbg !13495

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !13496
  call void @llvm.dbg.value(metadata i32 %25, metadata !13464, metadata !DIExpression()), !dbg !13465
  call void @llvm.dbg.value(metadata i32 %4, metadata !11634, metadata !DIExpression()) #23, !dbg !13497
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !13497
  call void @llvm.dbg.value(metadata i32 %4, metadata !11642, metadata !DIExpression()) #23, !dbg !13499
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13501, !srcloc !11648
  br label %26, !dbg !13502

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !13465
  ret i32 %27, !dbg !13503
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13504 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13508, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata i32 %1, metadata !13509, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata i8* %2, metadata !13510, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata i8 0, metadata !13512, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata i32 0, metadata !13513, metadata !DIExpression()), !dbg !13517
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11607, metadata !DIExpression()) #23, !dbg !13518
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13520, !srcloc !11622
  call void @llvm.dbg.value(metadata i32 undef, metadata !11619, metadata !DIExpression()) #23, !dbg !13522
  call void @llvm.dbg.value(metadata i32 undef, metadata !11620, metadata !DIExpression()) #23, !dbg !13522
  call void @llvm.dbg.value(metadata i32 undef, metadata !11613, metadata !DIExpression()) #23, !dbg !13518
  call void @llvm.dbg.value(metadata i32 undef, metadata !13515, metadata !DIExpression()), !dbg !13517
  call void @llvm.dbg.value(metadata i8 poison, metadata !13512, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata i32 undef, metadata !13513, metadata !DIExpression()), !dbg !13517
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #25, !dbg !13523
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13511, metadata !DIExpression()), !dbg !13516
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13526
  br i1 %7, label %12, label %8, !dbg !13528

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13529, metadata !DIExpression()), !dbg !13537
  call void @llvm.dbg.value(metadata i32 %1, metadata !13535, metadata !DIExpression()), !dbg !13537
  call void @llvm.dbg.value(metadata i8* %2, metadata !13536, metadata !DIExpression()), !dbg !13537
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13443, metadata !DIExpression()), !dbg !13540
  call void @llvm.dbg.value(metadata i32 %1, metadata !13448, metadata !DIExpression()), !dbg !13540
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !13542
  store i32 %1, i32* %9, align 4, !dbg !13543
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !13544
  store i8* %2, i8** %10, align 4, !dbg !13545
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !13546
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !13547
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #25, !dbg !13548
  call void @llvm.dbg.value(metadata i8 1, metadata !13512, metadata !DIExpression()), !dbg !13516
  br label %12, !dbg !13549

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !13520
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !13520
  call void @llvm.dbg.value(metadata i32 %14, metadata !11619, metadata !DIExpression()) #23, !dbg !13522
  call void @llvm.dbg.value(metadata i32 %14, metadata !11613, metadata !DIExpression()) #23, !dbg !13518
  call void @llvm.dbg.value(metadata i32 %14, metadata !13515, metadata !DIExpression()), !dbg !13517
  call void @llvm.dbg.value(metadata i8 poison, metadata !13512, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata i32 undef, metadata !11634, metadata !DIExpression()) #23, !dbg !13550
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11639, metadata !DIExpression()) #23, !dbg !13550
  call void @llvm.dbg.value(metadata i32 undef, metadata !11642, metadata !DIExpression()) #23, !dbg !13552
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !13554, !srcloc !11648
  call void @llvm.dbg.value(metadata i32 undef, metadata !13513, metadata !DIExpression()), !dbg !13517
  ret i1 %13, !dbg !13555
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !13556 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13562, metadata !DIExpression()), !dbg !13567
  call void @llvm.dbg.value(metadata i64 undef, metadata !13564, metadata !DIExpression()), !dbg !13567
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13561, metadata !DIExpression()), !dbg !13567
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13563, metadata !DIExpression()), !dbg !13567
  call void @llvm.dbg.value(metadata i8** %4, metadata !13565, metadata !DIExpression()), !dbg !13567
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !13568
  call void @llvm.dbg.value(metadata i32 %6, metadata !13566, metadata !DIExpression()), !dbg !13567
  %7 = icmp eq i8** %4, null, !dbg !13569
  br i1 %7, label %12, label %8, !dbg !13571

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13572
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !13574
  %11 = load i8*, i8** %10, align 4, !dbg !13574
  store i8* %11, i8** %4, align 4, !dbg !13575
  br label %12, !dbg !13576

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !13577
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !13578 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !13580
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !13581
  ret void, !dbg !13582
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13583 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !13593, metadata !DIExpression()), !dbg !13610
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13591, metadata !DIExpression()), !dbg !13610
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !13592, metadata !DIExpression()), !dbg !13610
  %5 = icmp eq i64 %4, -1, !dbg !13611
  br i1 %5, label %55, label %6, !dbg !13613

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !13614
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !13615
  call void @llvm.dbg.value(metadata i32 0, metadata !13594, metadata !DIExpression()), !dbg !13616
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13617, metadata !DIExpression()) #23, !dbg !13624
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13626, !srcloc !13632
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !13626
  call void @llvm.dbg.value(metadata i32 %9, metadata !13629, metadata !DIExpression()) #23, !dbg !13633
  call void @llvm.dbg.value(metadata i32 undef, metadata !13630, metadata !DIExpression()) #23, !dbg !13633
  call void @llvm.dbg.value(metadata i32 %9, metadata !13623, metadata !DIExpression()) #23, !dbg !13624
  call void @llvm.dbg.value(metadata i32 %9, metadata !13600, metadata !DIExpression()), !dbg !13616
  call void @llvm.dbg.value(metadata i32 undef, metadata !13594, metadata !DIExpression()), !dbg !13616
  %10 = icmp slt i64 %4, -1, !dbg !13634
  br i1 %10, label %11, label %17, !dbg !13635

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !13636
  %13 = add i64 %4, %12, !dbg !13637
  %14 = sub i64 -2, %13, !dbg !13637
  call void @llvm.dbg.value(metadata i64 %14, metadata !13604, metadata !DIExpression()), !dbg !13638
  %15 = icmp sgt i64 %14, 1, !dbg !13639
  %16 = select i1 %15, i64 %14, i64 1, !dbg !13639
  br label %22, !dbg !13640

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !13641
  %19 = tail call fastcc i32 @elapsed.144() #25, !dbg !13643
  %20 = sext i32 %19 to i64, !dbg !13643
  %21 = add nsw i64 %18, %20, !dbg !13644
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !13645
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !13646
  store i64 %23, i64* %24, align 8, !dbg !13647
  %25 = tail call fastcc %struct._timeout* @first() #25, !dbg !13648
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !13601, metadata !DIExpression()), !dbg !13650
  %26 = icmp eq %struct._timeout* %25, null, !dbg !13651
  br i1 %26, label %42, label %27, !dbg !13651

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !13652
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !13601, metadata !DIExpression()), !dbg !13650
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !13656
  %31 = load i64, i64* %30, align 8, !dbg !13656
  %32 = icmp slt i64 %28, %31, !dbg !13657
  br i1 %32, label %33, label %38, !dbg !13658

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !13656
  %35 = sub nsw i64 %31, %28, !dbg !13659
  store i64 %35, i64* %34, align 8, !dbg !13659
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !13661
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13662
  tail call fastcc void @sys_dlist_insert.145(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #25, !dbg !13663
  br label %44, !dbg !13664

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !13665
  store i64 %39, i64* %24, align 8, !dbg !13665
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #25, !dbg !13666
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !13601, metadata !DIExpression()), !dbg !13650
  %41 = icmp eq %struct._timeout* %40, null, !dbg !13651
  br i1 %41, label %42, label %27, !dbg !13651, !llvm.loop !13667

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13669
  tail call fastcc void @sys_dlist_append.146(%struct._dnode* noundef %43) #25, !dbg !13672
  br label %44, !dbg !13673

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #25, !dbg !13674
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !13675
  br i1 %46, label %47, label %54, !dbg !13676

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #25, !dbg !13677
  call void @llvm.dbg.value(metadata i32 %48, metadata !13607, metadata !DIExpression()), !dbg !13678
  %49 = icmp ne i32 %48, 0, !dbg !13679
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !13681
  br i1 %52, label %54, label %53, !dbg !13681

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #24, !dbg !13682
  br label %54, !dbg !13684

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !13685, metadata !DIExpression()) #23, !dbg !13691
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13690, metadata !DIExpression()) #23, !dbg !13691
  call void @llvm.dbg.value(metadata i32 %9, metadata !13693, metadata !DIExpression()) #23, !dbg !13696
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !13698, !srcloc !13699
  call void @llvm.dbg.value(metadata i32 undef, metadata !13594, metadata !DIExpression()), !dbg !13616
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !13700
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.144() unnamed_addr #1 !dbg !13701 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !13704
  %2 = icmp eq i32 %1, 0, !dbg !13705
  br i1 %2, label %3, label %5, !dbg !13704

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !13706
  br label %5, !dbg !13704

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !13704
  ret i32 %6, !dbg !13707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !13708 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.149() #25, !dbg !13714
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13712, metadata !DIExpression()), !dbg !13715
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !13716
  ret %struct._timeout* %2, !dbg !13717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.145(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #8 !dbg !13718 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13722, metadata !DIExpression()), !dbg !13726
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13723, metadata !DIExpression()), !dbg !13726
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13727
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13727
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13724, metadata !DIExpression()), !dbg !13726
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13728
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13729
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13730
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13731
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13732
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13733
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13734
  ret void, !dbg !13735
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !13736 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13740, metadata !DIExpression()), !dbg !13742
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13743
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.147(%struct._dnode* noundef %2) #25, !dbg !13744
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13741, metadata !DIExpression()), !dbg !13742
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !13745
  ret %struct._timeout* %4, !dbg !13746
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.146(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !13747 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13752, metadata !DIExpression()), !dbg !13755
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13753, metadata !DIExpression()), !dbg !13755
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13756
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13754, metadata !DIExpression()), !dbg !13755
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13757
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !13758
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13759
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !13760
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !13761
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13762
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13763
  ret void, !dbg !13764
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !13765 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !13770
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !13767, metadata !DIExpression()), !dbg !13771
  %2 = tail call fastcc i32 @elapsed.144() #25, !dbg !13772
  call void @llvm.dbg.value(metadata i32 %2, metadata !13768, metadata !DIExpression()), !dbg !13771
  %3 = icmp eq %struct._timeout* %1, null, !dbg !13773
  br i1 %3, label %14, label %4, !dbg !13775

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !13776
  %6 = load i64, i64* %5, align 8, !dbg !13776
  %7 = sext i32 %2 to i64, !dbg !13777
  %8 = sub nsw i64 %6, %7, !dbg !13778
  %9 = icmp sgt i64 %8, 2147483647, !dbg !13779
  br i1 %9, label %14, label %10, !dbg !13780

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !13781
  %12 = select i1 %11, i64 %8, i64 0, !dbg !13781
  %13 = trunc i64 %12 to i32, !dbg !13781
  call void @llvm.dbg.value(metadata i32 %13, metadata !13769, metadata !DIExpression()), !dbg !13771
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !13783
  call void @llvm.dbg.value(metadata i32 %15, metadata !13769, metadata !DIExpression()), !dbg !13771
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13784
  %17 = icmp ne i32 %16, 0, !dbg !13786
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !13787
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !13787
  call void @llvm.dbg.value(metadata i32 %20, metadata !13769, metadata !DIExpression()), !dbg !13771
  ret i32 %20, !dbg !13788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.147(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13789 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13793, metadata !DIExpression()), !dbg !13795
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13794, metadata !DIExpression()), !dbg !13795
  %2 = icmp eq %struct._dnode* %0, null, !dbg !13796
  br i1 %2, label %5, label %3, !dbg !13797

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.148(%struct._dnode* noundef nonnull %0) #25, !dbg !13798
  br label %5, !dbg !13797

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !13797
  ret %struct._dnode* %6, !dbg !13799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.148(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13800 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13802, metadata !DIExpression()), !dbg !13804
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13803, metadata !DIExpression()), !dbg !13804
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13805
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !13806
  br i1 %3, label %7, label %4, !dbg !13807

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13808
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !13808
  br label %7, !dbg !13807

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !13807
  ret %struct._dnode* %8, !dbg !13809
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.149() unnamed_addr #5 !dbg !13810 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13814, metadata !DIExpression()), !dbg !13815
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.150() #25, !dbg !13816
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !13816
  ret %struct._dnode* %3, !dbg !13817
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.150() unnamed_addr #5 !dbg !13818 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13822, metadata !DIExpression()), !dbg !13823
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !13824
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !13825
  ret i1 %2, !dbg !13826
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13827 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13831, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.value(metadata i32 -22, metadata !13832, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.value(metadata i32 0, metadata !13833, metadata !DIExpression()), !dbg !13837
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13617, metadata !DIExpression()) #23, !dbg !13838
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13840, !srcloc !13632
  call void @llvm.dbg.value(metadata i32 undef, metadata !13629, metadata !DIExpression()) #23, !dbg !13842
  call void @llvm.dbg.value(metadata i32 undef, metadata !13630, metadata !DIExpression()) #23, !dbg !13842
  call void @llvm.dbg.value(metadata i32 undef, metadata !13623, metadata !DIExpression()) #23, !dbg !13838
  call void @llvm.dbg.value(metadata i32 undef, metadata !13835, metadata !DIExpression()), !dbg !13837
  call void @llvm.dbg.value(metadata i32 -22, metadata !13832, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.value(metadata i32 undef, metadata !13833, metadata !DIExpression()), !dbg !13837
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !13832, metadata !DIExpression()), !dbg !13836
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.153(%struct._dnode* noundef %3) #25, !dbg !13843
  br i1 %4, label %5, label %6, !dbg !13847

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !13848
  call void @llvm.dbg.value(metadata i32 0, metadata !13832, metadata !DIExpression()), !dbg !13836
  br label %6, !dbg !13850

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !13836
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13840
  call void @llvm.dbg.value(metadata i32 %8, metadata !13629, metadata !DIExpression()) #23, !dbg !13842
  call void @llvm.dbg.value(metadata i32 %8, metadata !13623, metadata !DIExpression()) #23, !dbg !13838
  call void @llvm.dbg.value(metadata i32 %8, metadata !13835, metadata !DIExpression()), !dbg !13837
  call void @llvm.dbg.value(metadata i32 %7, metadata !13832, metadata !DIExpression()), !dbg !13836
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !13851
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13690, metadata !DIExpression()) #23, !dbg !13851
  call void @llvm.dbg.value(metadata i32 undef, metadata !13693, metadata !DIExpression()) #23, !dbg !13853
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !13855, !srcloc !13699
  call void @llvm.dbg.value(metadata i32 undef, metadata !13833, metadata !DIExpression()), !dbg !13837
  ret i32 %7, !dbg !13856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.153(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13857 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13863, metadata !DIExpression()), !dbg !13864
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13865
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13865
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13866
  ret i1 %4, !dbg !13867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #8 !dbg !13868 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13870, metadata !DIExpression()), !dbg !13871
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !13872
  %3 = icmp eq %struct._timeout* %2, null, !dbg !13874
  br i1 %3, label %10, label %4, !dbg !13875

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !13876
  %6 = load i64, i64* %5, align 8, !dbg !13876
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !13878
  %8 = load i64, i64* %7, align 8, !dbg !13879
  %9 = add nsw i64 %8, %6, !dbg !13879
  store i64 %9, i64* %7, align 8, !dbg !13879
  br label %10, !dbg !13880

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13881
  tail call fastcc void @sys_dlist_remove.154(%struct._dnode* noundef %11) #25, !dbg !13882
  ret void, !dbg !13883
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.154(%struct._dnode* nocapture noundef %0) unnamed_addr #8 !dbg !13884 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13888, metadata !DIExpression()), !dbg !13891
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13892
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13892
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13889, metadata !DIExpression()), !dbg !13891
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13893
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13893
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !13890, metadata !DIExpression()), !dbg !13891
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !13894
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !13895
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !13896
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !13897
  tail call fastcc void @sys_dnode_init.155(%struct._dnode* noundef %0) #25, !dbg !13898
  ret void, !dbg !13899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.155(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13900 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13902, metadata !DIExpression()), !dbg !13903
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13904
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13905
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13906
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13907
  ret void, !dbg !13908
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13909 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13915, metadata !DIExpression()), !dbg !13920
  call void @llvm.dbg.value(metadata i64 0, metadata !13916, metadata !DIExpression()), !dbg !13920
  call void @llvm.dbg.value(metadata i32 0, metadata !13917, metadata !DIExpression()), !dbg !13921
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13617, metadata !DIExpression()) #23, !dbg !13922
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13924, !srcloc !13632
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13924
  call void @llvm.dbg.value(metadata i32 %3, metadata !13629, metadata !DIExpression()) #23, !dbg !13926
  call void @llvm.dbg.value(metadata i32 undef, metadata !13630, metadata !DIExpression()) #23, !dbg !13926
  call void @llvm.dbg.value(metadata i32 %3, metadata !13623, metadata !DIExpression()) #23, !dbg !13922
  call void @llvm.dbg.value(metadata i32 %3, metadata !13919, metadata !DIExpression()), !dbg !13921
  call void @llvm.dbg.value(metadata i64 0, metadata !13916, metadata !DIExpression()), !dbg !13920
  call void @llvm.dbg.value(metadata i32 undef, metadata !13917, metadata !DIExpression()), !dbg !13921
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !13927
  call void @llvm.dbg.value(metadata i64 %4, metadata !13916, metadata !DIExpression()), !dbg !13920
  call void @llvm.dbg.value(metadata i32 %3, metadata !13685, metadata !DIExpression()) #23, !dbg !13930
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13690, metadata !DIExpression()) #23, !dbg !13930
  call void @llvm.dbg.value(metadata i32 %3, metadata !13693, metadata !DIExpression()) #23, !dbg !13932
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13934, !srcloc !13699
  call void @llvm.dbg.value(metadata i32 undef, metadata !13917, metadata !DIExpression()), !dbg !13921
  ret i64 %4, !dbg !13935
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !13936 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13938, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.value(metadata i64 0, metadata !13939, metadata !DIExpression()), !dbg !13942
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.156(%struct._timeout* noundef %0) #25, !dbg !13943
  br i1 %2, label %21, label %3, !dbg !13945

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !13946
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !13940, metadata !DIExpression()), !dbg !13947
  call void @llvm.dbg.value(metadata i64 0, metadata !13939, metadata !DIExpression()), !dbg !13942
  %5 = icmp eq %struct._timeout* %4, null, !dbg !13948
  br i1 %5, label %16, label %6, !dbg !13950

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !13940, metadata !DIExpression()), !dbg !13947
  call void @llvm.dbg.value(metadata i64 %8, metadata !13939, metadata !DIExpression()), !dbg !13942
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !13951
  %10 = load i64, i64* %9, align 8, !dbg !13951
  %11 = add nsw i64 %10, %8, !dbg !13953
  call void @llvm.dbg.value(metadata i64 %11, metadata !13939, metadata !DIExpression()), !dbg !13942
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !13954
  br i1 %12, label %16, label %13, !dbg !13956

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !13957
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !13940, metadata !DIExpression()), !dbg !13947
  call void @llvm.dbg.value(metadata i64 %11, metadata !13939, metadata !DIExpression()), !dbg !13942
  %15 = icmp eq %struct._timeout* %14, null, !dbg !13948
  br i1 %15, label %16, label %6, !dbg !13950, !llvm.loop !13958

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !13942
  call void @llvm.dbg.value(metadata i64 %17, metadata !13939, metadata !DIExpression()), !dbg !13942
  %18 = tail call fastcc i32 @elapsed.144() #25, !dbg !13960
  %19 = sext i32 %18 to i64, !dbg !13960
  %20 = sub nsw i64 %17, %19, !dbg !13961
  br label %21, !dbg !13962

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !13942
  ret i64 %22, !dbg !13963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.156(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13964 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13968, metadata !DIExpression()), !dbg !13969
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13970
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.153(%struct._dnode* noundef %2) #25, !dbg !13971
  %4 = xor i1 %3, true, !dbg !13972
  ret i1 %4, !dbg !13973
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13974 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13976, metadata !DIExpression()), !dbg !13981
  call void @llvm.dbg.value(metadata i64 0, metadata !13977, metadata !DIExpression()), !dbg !13981
  call void @llvm.dbg.value(metadata i32 0, metadata !13978, metadata !DIExpression()), !dbg !13982
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13617, metadata !DIExpression()) #23, !dbg !13983
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13985, !srcloc !13632
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13985
  call void @llvm.dbg.value(metadata i32 %3, metadata !13629, metadata !DIExpression()) #23, !dbg !13987
  call void @llvm.dbg.value(metadata i32 undef, metadata !13630, metadata !DIExpression()) #23, !dbg !13987
  call void @llvm.dbg.value(metadata i32 %3, metadata !13623, metadata !DIExpression()) #23, !dbg !13983
  call void @llvm.dbg.value(metadata i32 %3, metadata !13980, metadata !DIExpression()), !dbg !13982
  call void @llvm.dbg.value(metadata i64 0, metadata !13977, metadata !DIExpression()), !dbg !13981
  call void @llvm.dbg.value(metadata i32 undef, metadata !13978, metadata !DIExpression()), !dbg !13982
  %4 = load i64, i64* @curr_tick, align 8, !dbg !13988
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !13991
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !13977, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !13981
  call void @llvm.dbg.value(metadata i32 %3, metadata !13685, metadata !DIExpression()) #23, !dbg !13992
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13690, metadata !DIExpression()) #23, !dbg !13992
  call void @llvm.dbg.value(metadata i32 %3, metadata !13693, metadata !DIExpression()) #23, !dbg !13994
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13996, !srcloc !13699
  call void @llvm.dbg.value(metadata i32 undef, metadata !13978, metadata !DIExpression()), !dbg !13982
  %6 = add i64 %5, %4, !dbg !13997
  ret i64 %6, !dbg !13998
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !13999 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !14001, metadata !DIExpression()), !dbg !14005
  call void @llvm.dbg.value(metadata i32 0, metadata !14002, metadata !DIExpression()), !dbg !14006
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13617, metadata !DIExpression()) #23, !dbg !14007
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14009, !srcloc !13632
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14009
  call void @llvm.dbg.value(metadata i32 %2, metadata !13629, metadata !DIExpression()) #23, !dbg !14011
  call void @llvm.dbg.value(metadata i32 undef, metadata !13630, metadata !DIExpression()) #23, !dbg !14011
  call void @llvm.dbg.value(metadata i32 %2, metadata !13623, metadata !DIExpression()) #23, !dbg !14007
  call void @llvm.dbg.value(metadata i32 %2, metadata !14004, metadata !DIExpression()), !dbg !14006
  call void @llvm.dbg.value(metadata i32 -1, metadata !14001, metadata !DIExpression()), !dbg !14005
  call void @llvm.dbg.value(metadata i32 undef, metadata !14002, metadata !DIExpression()), !dbg !14006
  %3 = tail call fastcc i32 @next_timeout() #25, !dbg !14012
  call void @llvm.dbg.value(metadata i32 %3, metadata !14001, metadata !DIExpression()), !dbg !14005
  call void @llvm.dbg.value(metadata i32 %2, metadata !13685, metadata !DIExpression()) #23, !dbg !14015
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13690, metadata !DIExpression()) #23, !dbg !14015
  call void @llvm.dbg.value(metadata i32 %2, metadata !13693, metadata !DIExpression()) #23, !dbg !14017
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14019, !srcloc !13699
  call void @llvm.dbg.value(metadata i32 undef, metadata !14002, metadata !DIExpression()), !dbg !14006
  ret i32 %3, !dbg !14020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !14021 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14023, metadata !DIExpression()), !dbg !14033
  call void @llvm.dbg.value(metadata i1 %1, metadata !14024, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14033
  call void @llvm.dbg.value(metadata i32 0, metadata !14025, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13617, metadata !DIExpression()) #23, !dbg !14035
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14037, !srcloc !13632
  call void @llvm.dbg.value(metadata i32 undef, metadata !13629, metadata !DIExpression()) #23, !dbg !14039
  call void @llvm.dbg.value(metadata i32 undef, metadata !13630, metadata !DIExpression()) #23, !dbg !14039
  call void @llvm.dbg.value(metadata i32 undef, metadata !13623, metadata !DIExpression()) #23, !dbg !14035
  call void @llvm.dbg.value(metadata i32 undef, metadata !14027, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()), !dbg !14034
  %4 = tail call fastcc i32 @next_timeout() #25, !dbg !14040
  call void @llvm.dbg.value(metadata i32 %4, metadata !14028, metadata !DIExpression()), !dbg !14041
  call void @llvm.dbg.value(metadata i1 undef, metadata !14031, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14041
  %5 = icmp slt i32 %4, 2, !dbg !14042
  call void @llvm.dbg.value(metadata i1 %5, metadata !14032, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14041
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !14043
  call void @llvm.dbg.value(metadata i1 %6, metadata !14031, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14041
  br i1 %7, label %11, label %8, !dbg !14043

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !14045
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !14045
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #24, !dbg !14047
  br label %11, !dbg !14048

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !14037
  call void @llvm.dbg.value(metadata i32 %12, metadata !13629, metadata !DIExpression()) #23, !dbg !14039
  call void @llvm.dbg.value(metadata i32 %12, metadata !13623, metadata !DIExpression()) #23, !dbg !14035
  call void @llvm.dbg.value(metadata i32 %12, metadata !14027, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !13685, metadata !DIExpression()) #23, !dbg !14049
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13690, metadata !DIExpression()) #23, !dbg !14049
  call void @llvm.dbg.value(metadata i32 undef, metadata !13693, metadata !DIExpression()) #23, !dbg !14051
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14053, !srcloc !13699
  call void @llvm.dbg.value(metadata i32 1, metadata !14025, metadata !DIExpression()), !dbg !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14025, metadata !DIExpression()), !dbg !14034
  ret void, !dbg !14054
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !14055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14059, metadata !DIExpression()), !dbg !14064
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !14065
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13617, metadata !DIExpression()) #23, !dbg !14066
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14068, !srcloc !13632
  call void @llvm.dbg.value(metadata i32 undef, metadata !13629, metadata !DIExpression()) #23, !dbg !14070
  call void @llvm.dbg.value(metadata i32 undef, metadata !13630, metadata !DIExpression()) #23, !dbg !14070
  call void @llvm.dbg.value(metadata i32 undef, metadata !13623, metadata !DIExpression()) #23, !dbg !14066
  call void @llvm.dbg.value(metadata i32 undef, metadata !14060, metadata !DIExpression()), !dbg !14064
  store i32 %0, i32* @announce_remaining, align 4, !dbg !14064
  call void @llvm.dbg.value(metadata i32 undef, metadata !14060, metadata !DIExpression()), !dbg !14064
  %3 = tail call fastcc %struct._timeout* @first() #25, !dbg !14071
  %4 = icmp eq %struct._timeout* %3, null, !dbg !14072
  br i1 %4, label %28, label %5, !dbg !14073

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !14074
  %10 = load i64, i64* %9, align 8, !dbg !14074
  %11 = sext i32 %8 to i64, !dbg !14075
  %12 = icmp sgt i64 %10, %11, !dbg !14076
  br i1 %12, label %26, label %13, !dbg !14077

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !14064
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !14061, metadata !DIExpression()), !dbg !14078
  %15 = trunc i64 %10 to i32, !dbg !14079
  call void @llvm.dbg.value(metadata i32 %15, metadata !14063, metadata !DIExpression()), !dbg !14078
  %16 = sext i32 %15 to i64, !dbg !14080
  %17 = load i64, i64* @curr_tick, align 8, !dbg !14081
  %18 = add i64 %17, %16, !dbg !14081
  store i64 %18, i64* @curr_tick, align 8, !dbg !14081
  store i64 0, i64* %9, align 8, !dbg !14082
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #25, !dbg !14083
  call void @llvm.dbg.value(metadata i32 %14, metadata !13685, metadata !DIExpression()) #23, !dbg !14084
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13690, metadata !DIExpression()) #23, !dbg !14084
  call void @llvm.dbg.value(metadata i32 %14, metadata !13693, metadata !DIExpression()) #23, !dbg !14086
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !14088, !srcloc !13699
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !14089
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !14089
  tail call void %20(%struct._timeout* noundef nonnull %6) #24, !dbg !14090
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13617, metadata !DIExpression()) #23, !dbg !14091
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14093, !srcloc !13632
  call void @llvm.dbg.value(metadata i32 undef, metadata !13629, metadata !DIExpression()) #23, !dbg !14095
  call void @llvm.dbg.value(metadata i32 undef, metadata !13630, metadata !DIExpression()) #23, !dbg !14095
  call void @llvm.dbg.value(metadata i32 undef, metadata !13623, metadata !DIExpression()) #23, !dbg !14091
  call void @llvm.dbg.value(metadata i32 undef, metadata !14060, metadata !DIExpression()), !dbg !14064
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !14096
  %23 = sub nsw i32 %22, %15, !dbg !14096
  store i32 %23, i32* @announce_remaining, align 4, !dbg !14064
  call void @llvm.dbg.value(metadata i32 undef, metadata !14060, metadata !DIExpression()), !dbg !14064
  %24 = tail call fastcc %struct._timeout* @first() #25, !dbg !14071
  %25 = icmp eq %struct._timeout* %24, null, !dbg !14072
  br i1 %25, label %28, label %5, !dbg !14073, !llvm.loop !14097

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !14099
  store i64 %27, i64* %9, align 8, !dbg !14099
  br label %32, !dbg !14102

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !14064
  %31 = sext i32 %30 to i64, !dbg !14103
  br label %32, !dbg !14103

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !14103
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !14064
  %36 = load i64, i64* @curr_tick, align 8, !dbg !14104
  %37 = add i64 %36, %33, !dbg !14104
  store i64 %37, i64* @curr_tick, align 8, !dbg !14104
  store i32 0, i32* @announce_remaining, align 4, !dbg !14105
  %38 = tail call fastcc i32 @next_timeout() #25, !dbg !14106
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #24, !dbg !14107
  call void @llvm.dbg.value(metadata i32 %35, metadata !13685, metadata !DIExpression()) #23, !dbg !14108
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13690, metadata !DIExpression()) #23, !dbg !14108
  call void @llvm.dbg.value(metadata i32 %35, metadata !13693, metadata !DIExpression()) #23, !dbg !14110
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !14112, !srcloc !13699
  ret void, !dbg !14113
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !14114 {
  call void @llvm.dbg.value(metadata i64 0, metadata !14118, metadata !DIExpression()), !dbg !14122
  call void @llvm.dbg.value(metadata i32 0, metadata !14119, metadata !DIExpression()), !dbg !14123
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13617, metadata !DIExpression()) #23, !dbg !14124
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14126, !srcloc !13632
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14126
  call void @llvm.dbg.value(metadata i32 %2, metadata !13629, metadata !DIExpression()) #23, !dbg !14128
  call void @llvm.dbg.value(metadata i32 undef, metadata !13630, metadata !DIExpression()) #23, !dbg !14128
  call void @llvm.dbg.value(metadata i32 %2, metadata !13623, metadata !DIExpression()) #23, !dbg !14124
  call void @llvm.dbg.value(metadata i32 %2, metadata !14121, metadata !DIExpression()), !dbg !14123
  call void @llvm.dbg.value(metadata i64 0, metadata !14118, metadata !DIExpression()), !dbg !14122
  call void @llvm.dbg.value(metadata i32 undef, metadata !14119, metadata !DIExpression()), !dbg !14123
  %3 = load i64, i64* @curr_tick, align 8, !dbg !14129
  %4 = tail call fastcc i32 @elapsed.144() #25, !dbg !14132
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !14118, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14122
  call void @llvm.dbg.value(metadata i32 %2, metadata !13685, metadata !DIExpression()) #23, !dbg !14133
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13690, metadata !DIExpression()) #23, !dbg !14133
  call void @llvm.dbg.value(metadata i32 %2, metadata !13693, metadata !DIExpression()) #23, !dbg !14135
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14137, !srcloc !13699
  call void @llvm.dbg.value(metadata i32 undef, metadata !14119, metadata !DIExpression()), !dbg !14123
  %5 = sext i32 %4 to i64, !dbg !14132
  %6 = add i64 %3, %5, !dbg !14138
  ret i64 %6, !dbg !14139
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !14140 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !14141
  %2 = trunc i64 %1 to i32, !dbg !14142
  ret i32 %2, !dbg !14143
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !14144 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !14145
  ret i64 %1, !dbg !14146
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !14147 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14149, metadata !DIExpression()), !dbg !14156
  %2 = icmp eq i32 %0, 0, !dbg !14157
  br i1 %2, label %10, label %3, !dbg !14159

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !14160
  call void @llvm.dbg.value(metadata i32 %4, metadata !14150, metadata !DIExpression()), !dbg !14156
  %5 = mul i32 %0, 84, !dbg !14161
  call void @llvm.dbg.value(metadata i32 %5, metadata !14151, metadata !DIExpression()), !dbg !14156
  br label %6, !dbg !14162

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !14163
  call void @llvm.dbg.value(metadata i32 %7, metadata !14152, metadata !DIExpression()), !dbg !14164
  %8 = sub i32 %7, %4, !dbg !14165
  %9 = icmp ult i32 %8, %5, !dbg !14167
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !14168
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !14169 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !14170
  ret i32 %1, !dbg !14171
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !14172 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !14174
  ret i32 %1, !dbg !14175
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !14176 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14180, metadata !DIExpression()), !dbg !14182
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !14183

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !14184
  br label %14, !dbg !14188

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14181, metadata !DIExpression()), !dbg !14182
  %6 = icmp slt i64 %2, -1, !dbg !14189
  br i1 %6, label %7, label %9, !dbg !14192

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !14193
  br label %14, !dbg !14194

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !14196
  %11 = icmp ugt i64 %2, 1, !dbg !14197
  %12 = select i1 %11, i64 %2, i64 1, !dbg !14197
  %13 = add nsw i64 %10, %12, !dbg !14198
  br label %14, !dbg !14199

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !14200
  ret i64 %15, !dbg !14201
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !14202 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.165, i32 0, i32 0)) #24, !dbg !14204
  ret void, !dbg !14205
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { argmemonly nofree nounwind willreturn writeonly }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!617, !2, !2216, !27, !136, !2218, !2220, !2258, !145, !190, !2260, !2271, !2317, !2319, !2347, !2375, !2418, !2490, !2535, !219, !373, !2563, !409, !419, !444, !651, !2568, !789, !855, !1159, !1378, !2607, !1491, !1581, !2609, !2695, !1633, !2760, !1673, !2763, !1680, !2044, !2781, !2064, !2783, !2179, !2786}
!llvm.ident = !{!2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788, !2788}
!llvm.module.flags = !{!2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 98, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5504, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 86)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2752, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "dev", scope: !27, file: !106, line: 11, type: !107, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !102, globals: !105, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/application_development/out_of_tree_driver/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_HELLO_WORLD", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_LAST", value: 67)
!102 = !{!103, !104}
!103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!104 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!105 = !{!25}
!106 = !DIFile(filename: "zephyr/samples/application_development/out_of_tree_driver/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !110, line: 378, size: 192, elements: !111)
!110 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!111 = !{!112, !116, !117, !118, !127, !128}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !109, file: !110, line: 380, baseType: !113, size: 32)
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 32)
!114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !115)
!115 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !109, file: !110, line: 382, baseType: !13, size: 32, offset: 32)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !109, file: !110, line: 384, baseType: !13, size: 32, offset: 64)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !109, file: !110, line: 386, baseType: !119, size: 32, offset: 96)
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !110, line: 351, size: 16, elements: !121)
!121 = !{!122, !125}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !120, file: !110, line: 359, baseType: !123, size: 8)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !124)
!124 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !120, file: !110, line: 364, baseType: !126, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!126 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !109, file: !110, line: 388, baseType: !103, size: 32, offset: 128)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !109, file: !110, line: 396, baseType: !129, size: 32, offset: 160)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 32)
!130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!131 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !110, line: 43, baseType: !132)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !133)
!133 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!134 = !DIGlobalVariableExpression(var: !135, expr: !DIExpression())
!135 = distinct !DIGlobalVariable(name: "_char_out", scope: !136, file: !139, line: 54, type: !140, isLocal: false, isDefinition: true)
!136 = distinct !DICompileUnit(language: DW_LANG_C99, file: !137, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !102, globals: !138, splitDebugInlining: false, nameTableKind: None)
!137 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!138 = !{!134}
!139 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 32)
!141 = !DISubroutineType(types: !142)
!142 = !{!104, !104}
!143 = !DIGlobalVariableExpression(var: !144, expr: !DIExpression())
!144 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !145, file: !163, line: 56, type: !164, isLocal: true, isDefinition: true, align: 32)
!145 = distinct !DICompileUnit(language: DW_LANG_C99, file: !146, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !147, globals: !162, splitDebugInlining: false, nameTableKind: None)
!146 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!147 = !{!148}
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !150, line: 259, baseType: !151)
!150 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f411xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 250, size: 224, elements: !152)
!152 = !{!153, !156, !157, !158, !159, !160, !161}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !151, file: !150, line: 252, baseType: !154, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !155)
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !151, file: !150, line: 253, baseType: !154, size: 32, offset: 32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !151, file: !150, line: 254, baseType: !154, size: 32, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !151, file: !150, line: 255, baseType: !154, size: 32, offset: 96)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !151, file: !150, line: 256, baseType: !154, size: 32, offset: 128)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !151, file: !150, line: 257, baseType: !154, size: 32, offset: 160)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !151, file: !150, line: 258, baseType: !154, size: 32, offset: 192)
!162 = !{!143}
!163 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !166, line: 51, size: 64, elements: !167)
!166 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!167 = !{!168, !187}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !165, file: !166, line: 60, baseType: !169, size: 32)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!170 = !DISubroutineType(types: !171)
!171 = !{!104, !172}
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 32)
!173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !174)
!174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !110, line: 378, size: 192, elements: !175)
!175 = !{!176, !177, !178, !179, !185, !186}
!176 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !174, file: !110, line: 380, baseType: !113, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !174, file: !110, line: 382, baseType: !13, size: 32, offset: 32)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !174, file: !110, line: 384, baseType: !13, size: 32, offset: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !174, file: !110, line: 386, baseType: !180, size: 32, offset: 96)
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !110, line: 351, size: 16, elements: !182)
!182 = !{!183, !184}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !181, file: !110, line: 359, baseType: !123, size: 8)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !181, file: !110, line: 364, baseType: !126, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !174, file: !110, line: 388, baseType: !103, size: 32, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !174, file: !110, line: 396, baseType: !129, size: 32, offset: 160)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !165, file: !166, line: 65, baseType: !172, size: 32, offset: 32)
!188 = !DIGlobalVariableExpression(var: !189, expr: !DIExpression())
!189 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !190, file: !193, line: 71, type: !194, isLocal: true, isDefinition: true, align: 32)
!190 = distinct !DICompileUnit(language: DW_LANG_C99, file: !191, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !192, splitDebugInlining: false, nameTableKind: None)
!191 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!192 = !{!188}
!193 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !166, line: 51, size: 64, elements: !196)
!196 = !{!197, !216}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !195, file: !166, line: 60, baseType: !198, size: 32)
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!199 = !DISubroutineType(types: !200)
!200 = !{!104, !201}
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 32)
!202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !203)
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !110, line: 378, size: 192, elements: !204)
!204 = !{!205, !206, !207, !208, !214, !215}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !203, file: !110, line: 380, baseType: !113, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !203, file: !110, line: 382, baseType: !13, size: 32, offset: 32)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !203, file: !110, line: 384, baseType: !13, size: 32, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !203, file: !110, line: 386, baseType: !209, size: 32, offset: 96)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !110, line: 351, size: 16, elements: !211)
!211 = !{!212, !213}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !210, file: !110, line: 359, baseType: !123, size: 8)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !210, file: !110, line: 364, baseType: !126, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !203, file: !110, line: 388, baseType: !103, size: 32, offset: 128)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !203, file: !110, line: 396, baseType: !129, size: 32, offset: 160)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !195, file: !166, line: 65, baseType: !201, size: 32, offset: 32)
!217 = !DIGlobalVariableExpression(var: !218, expr: !DIExpression())
!218 = distinct !DIGlobalVariable(name: "static_regions", scope: !219, file: !228, line: 62, type: !369, isLocal: true, isDefinition: true)
!219 = distinct !DICompileUnit(language: DW_LANG_C99, file: !220, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !221, globals: !224, splitDebugInlining: false, nameTableKind: None)
!220 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!221 = !{!222, !104, !155, !103}
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !223, line: 214, baseType: !32)
!223 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!224 = !{!225, !217}
!225 = !DIGlobalVariableExpression(var: !226, expr: !DIExpression())
!226 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !227, file: !228, line: 198, type: !355, isLocal: true, isDefinition: true)
!227 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !228, file: !228, line: 175, type: !229, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !219, retainedNodes: !350)
!228 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!229 = !DISubroutineType(types: !230)
!230 = !{null, !231}
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 32)
!232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !233, line: 245, size: 1024, elements: !234)
!233 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!234 = !{!235, !304, !317, !318, !319, !320, !326, !345}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !232, file: !233, line: 247, baseType: !236, size: 384)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !233, line: 57, size: 384, elements: !237)
!237 = !{!238, !266, !274, !275, !276, !289, !290, !291}
!238 = !DIDerivedType(tag: DW_TAG_member, scope: !236, file: !233, line: 60, baseType: !239, size: 64)
!239 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !236, file: !233, line: 60, size: 64, elements: !240)
!240 = !{!241, !257}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !239, file: !233, line: 61, baseType: !242, size: 64)
!242 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !243, line: 49, baseType: !244)
!243 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !243, line: 37, size: 64, elements: !245)
!245 = !{!246, !252}
!246 = !DIDerivedType(tag: DW_TAG_member, scope: !244, file: !243, line: 38, baseType: !247, size: 32)
!247 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !244, file: !243, line: 38, size: 32, elements: !248)
!248 = !{!249, !251}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !247, file: !243, line: 39, baseType: !250, size: 32)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !247, file: !243, line: 40, baseType: !250, size: 32)
!252 = !DIDerivedType(tag: DW_TAG_member, scope: !244, file: !243, line: 42, baseType: !253, size: 32, offset: 32)
!253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !244, file: !243, line: 42, size: 32, elements: !254)
!254 = !{!255, !256}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !253, file: !243, line: 43, baseType: !250, size: 32)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !253, file: !243, line: 44, baseType: !250, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !239, file: !233, line: 62, baseType: !258, size: 64)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !259, line: 49, size: 64, elements: !260)
!259 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!260 = !{!261}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !258, file: !259, line: 50, baseType: !262, size: 64)
!262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 64, elements: !264)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 32)
!264 = !{!265}
!265 = !DISubrange(count: 2)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !236, file: !233, line: 68, baseType: !267, size: 32, offset: 64)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 32)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !269, line: 233, baseType: !270)
!269 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !269, line: 231, size: 64, elements: !271)
!271 = !{!272}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !270, file: !269, line: 232, baseType: !273, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !243, line: 48, baseType: !244)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !236, file: !233, line: 71, baseType: !123, size: 8, offset: 96)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !236, file: !233, line: 74, baseType: !123, size: 8, offset: 104)
!276 = !DIDerivedType(tag: DW_TAG_member, scope: !236, file: !233, line: 90, baseType: !277, size: 16, offset: 112)
!277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !236, file: !233, line: 90, size: 16, elements: !278)
!278 = !{!279, !286}
!279 = !DIDerivedType(tag: DW_TAG_member, scope: !277, file: !233, line: 91, baseType: !280, size: 16)
!280 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !277, file: !233, line: 91, size: 16, elements: !281)
!281 = !{!282, !285}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !280, file: !233, line: 96, baseType: !283, size: 8)
!283 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !284)
!284 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !280, file: !233, line: 97, baseType: !123, size: 8, offset: 8)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !277, file: !233, line: 100, baseType: !287, size: 16)
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !288)
!288 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !236, file: !233, line: 107, baseType: !155, size: 32, offset: 128)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !236, file: !233, line: 127, baseType: !103, size: 32, offset: 160)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !236, file: !233, line: 131, baseType: !292, size: 192, offset: 192)
!292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !269, line: 244, size: 192, elements: !293)
!293 = !{!294, !295, !301}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !292, file: !269, line: 245, baseType: !242, size: 64)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !292, file: !269, line: 246, baseType: !296, size: 32, offset: 64)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !269, line: 242, baseType: !297)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 32)
!298 = !DISubroutineType(types: !299)
!299 = !{null, !300}
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !292, file: !269, line: 249, baseType: !302, size: 64, offset: 128)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !303)
!303 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !232, file: !233, line: 250, baseType: !305, size: 288, offset: 384)
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !306, line: 25, size: 288, elements: !307)
!306 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!307 = !{!308, !309, !310, !311, !312, !313, !314, !315, !316}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !305, file: !306, line: 26, baseType: !155, size: 32)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !305, file: !306, line: 27, baseType: !155, size: 32, offset: 32)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !305, file: !306, line: 28, baseType: !155, size: 32, offset: 64)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !305, file: !306, line: 29, baseType: !155, size: 32, offset: 96)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !305, file: !306, line: 30, baseType: !155, size: 32, offset: 128)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !305, file: !306, line: 31, baseType: !155, size: 32, offset: 160)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !305, file: !306, line: 32, baseType: !155, size: 32, offset: 192)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !305, file: !306, line: 33, baseType: !155, size: 32, offset: 224)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !305, file: !306, line: 34, baseType: !155, size: 32, offset: 256)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !232, file: !233, line: 253, baseType: !103, size: 32, offset: 672)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !232, file: !233, line: 256, baseType: !268, size: 64, offset: 704)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !232, file: !233, line: 294, baseType: !104, size: 32, offset: 768)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !232, file: !233, line: 300, baseType: !321, size: 96, offset: 800)
!321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !233, line: 149, size: 96, elements: !322)
!322 = !{!323, !324, !325}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !321, file: !233, line: 153, baseType: !22, size: 32)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !321, file: !233, line: 162, baseType: !222, size: 32, offset: 32)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !321, file: !233, line: 168, baseType: !222, size: 32, offset: 64)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !232, file: !233, line: 325, baseType: !327, size: 32, offset: 896)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 32)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !329, line: 5073, size: 160, elements: !330)
!329 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!330 = !{!331, !340, !341}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !328, file: !329, line: 5074, baseType: !332, size: 96)
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !333, line: 56, size: 96, elements: !334)
!333 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!334 = !{!335, !338, !339}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !332, file: !333, line: 57, baseType: !336, size: 32)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 32)
!337 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !333, line: 57, flags: DIFlagFwdDecl)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !332, file: !333, line: 58, baseType: !103, size: 32, offset: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !332, file: !333, line: 59, baseType: !222, size: 32, offset: 64)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !328, file: !329, line: 5075, baseType: !268, size: 64, offset: 96)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !328, file: !329, line: 5076, baseType: !342, offset: 160)
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !343, line: 43, elements: !344)
!343 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!344 = !{}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !232, file: !233, line: 343, baseType: !346, size: 64, offset: 928)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !306, line: 60, size: 64, elements: !347)
!347 = !{!348, !349}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !346, file: !306, line: 63, baseType: !155, size: 32)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !346, file: !306, line: 66, baseType: !155, size: 32, offset: 32)
!350 = !{!351, !352, !353, !354}
!351 = !DILocalVariable(name: "thread", arg: 1, scope: !227, file: !228, line: 175, type: !231)
!352 = !DILocalVariable(name: "region_num", scope: !227, file: !228, line: 200, type: !123)
!353 = !DILocalVariable(name: "guard_start", scope: !227, file: !228, line: 265, type: !22)
!354 = !DILocalVariable(name: "guard_size", scope: !227, file: !228, line: 266, type: !222)
!355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !356, size: 96, elements: !367)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !357, line: 52, size: 96, elements: !358)
!357 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!358 = !{!359, !360, !361}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !356, file: !357, line: 53, baseType: !22, size: 32)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !356, file: !357, line: 54, baseType: !222, size: 32, offset: 32)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !356, file: !357, line: 55, baseType: !362, size: 32, offset: 64)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !363, line: 151, baseType: !364)
!363 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!364 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 149, size: 32, elements: !365)
!365 = !{!366}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !364, file: !363, line: 150, baseType: !155, size: 32)
!367 = !{!368}
!368 = !DISubrange(count: 1)
!369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !370, size: 96, elements: !367)
!370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !356)
!371 = !DIGlobalVariableExpression(var: !372, expr: !DIExpression())
!372 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !373, file: !406, line: 39, type: !123, isLocal: true, isDefinition: true)
!373 = distinct !DICompileUnit(language: DW_LANG_C99, file: !374, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !375, globals: !405, splitDebugInlining: false, nameTableKind: None)
!374 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!375 = !{!376, !103, !104, !393, !123}
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !378, line: 1226, baseType: !379)
!378 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 1213, size: 352, elements: !380)
!380 = !{!381, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !379, file: !378, line: 1215, baseType: !382, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !379, file: !378, line: 1216, baseType: !154, size: 32, offset: 32)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !379, file: !378, line: 1217, baseType: !154, size: 32, offset: 64)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !379, file: !378, line: 1218, baseType: !154, size: 32, offset: 96)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !379, file: !378, line: 1219, baseType: !154, size: 32, offset: 128)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !379, file: !378, line: 1220, baseType: !154, size: 32, offset: 160)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !379, file: !378, line: 1221, baseType: !154, size: 32, offset: 192)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !379, file: !378, line: 1222, baseType: !154, size: 32, offset: 224)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !379, file: !378, line: 1223, baseType: !154, size: 32, offset: 256)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !379, file: !378, line: 1224, baseType: !154, size: 32, offset: 288)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !379, file: !378, line: 1225, baseType: !154, size: 32, offset: 320)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 32)
!394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !395)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !396, line: 27, size: 96, elements: !397)
!396 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!397 = !{!398, !399, !400}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !395, file: !396, line: 29, baseType: !155, size: 32)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !395, file: !396, line: 31, baseType: !113, size: 32, offset: 32)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !395, file: !396, line: 37, baseType: !401, size: 32, offset: 64)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !363, line: 146, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !363, line: 141, size: 32, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !402, file: !363, line: 143, baseType: !155, size: 32)
!405 = !{!371}
!406 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!407 = !DIGlobalVariableExpression(var: !408, expr: !DIExpression())
!408 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !409, file: !416, line: 21, type: !140, isLocal: true, isDefinition: true)
!409 = distinct !DICompileUnit(language: DW_LANG_C99, file: !410, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !411, globals: !415, splitDebugInlining: false, nameTableKind: None)
!410 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!411 = !{!412, !104, !103}
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !414, line: 22, baseType: !104)
!414 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!415 = !{!407}
!416 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!417 = !DIGlobalVariableExpression(var: !418, expr: !DIExpression())
!418 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !419, file: !424, line: 13, type: !441, isLocal: true, isDefinition: true)
!419 = distinct !DICompileUnit(language: DW_LANG_C99, file: !420, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !421, splitDebugInlining: false, nameTableKind: None)
!420 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!421 = !{!422, !417}
!422 = !DIGlobalVariableExpression(var: !423, expr: !DIExpression())
!423 = distinct !DIGlobalVariable(name: "mpu_config", scope: !419, file: !424, line: 37, type: !425, isLocal: false, isDefinition: true)
!424 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !426)
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !396, line: 41, size: 64, elements: !427)
!427 = !{!428, !429}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !426, file: !396, line: 43, baseType: !155, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !426, file: !396, line: 45, baseType: !430, size: 32, offset: 32)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !432)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !396, line: 27, size: 96, elements: !433)
!433 = !{!434, !435, !436}
!434 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !432, file: !396, line: 29, baseType: !155, size: 32)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !432, file: !396, line: 31, baseType: !113, size: 32, offset: 32)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !432, file: !396, line: 37, baseType: !437, size: 32, offset: 64)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !363, line: 146, baseType: !438)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !363, line: 141, size: 32, elements: !439)
!439 = !{!440}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !438, file: !363, line: 143, baseType: !155, size: 32)
!441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !431, size: 192, elements: !264)
!442 = !DIGlobalVariableExpression(var: !443, expr: !DIExpression())
!443 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !444, file: !528, line: 72, type: !612, isLocal: true, isDefinition: true)
!444 = distinct !DICompileUnit(language: DW_LANG_C99, file: !445, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !446, retainedTypes: !514, globals: !525, splitDebugInlining: false, nameTableKind: None)
!445 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!446 = !{!30, !447}
!447 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !150, line: 65, baseType: !104, size: 32, elements: !448)
!448 = !{!449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513}
!449 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!450 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!451 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!452 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!453 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!454 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!455 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!456 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!457 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!458 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!459 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!460 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!461 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!462 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!463 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!464 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!465 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!466 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!467 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!468 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!469 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!470 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!471 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!472 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!473 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!474 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!475 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!476 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!477 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!478 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!479 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!480 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!481 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!482 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!483 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!484 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!485 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!486 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!487 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!488 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!489 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!490 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!491 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!492 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!493 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!494 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!495 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!496 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!497 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!498 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!499 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!500 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!501 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!502 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!503 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!504 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!505 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!506 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!507 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!508 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!509 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!510 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!511 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!512 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!513 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!514 = !{!222, !104, !103, !515}
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !150, line: 244, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 236, size: 192, elements: !518)
!518 = !{!519, !520, !521, !522, !523, !524}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !517, file: !150, line: 238, baseType: !154, size: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !517, file: !150, line: 239, baseType: !154, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !517, file: !150, line: 240, baseType: !154, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !517, file: !150, line: 241, baseType: !154, size: 32, offset: 96)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !517, file: !150, line: 242, baseType: !154, size: 32, offset: 128)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !517, file: !150, line: 243, baseType: !154, size: 32, offset: 160)
!525 = !{!526, !532, !548, !559, !576, !442, !578, !592, !594, !596, !598, !600, !602, !604, !606, !608, !610}
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !444, file: !528, line: 424, type: !529, isLocal: false, isDefinition: true, align: 16)
!528 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 64, elements: !530)
!530 = !{!531}
!531 = !DISubrange(count: 4)
!532 = !DIGlobalVariableExpression(var: !533, expr: !DIExpression())
!533 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !444, file: !528, line: 424, type: !534, isLocal: false, isDefinition: true, align: 32)
!534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !535)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !110, line: 378, size: 192, elements: !536)
!536 = !{!537, !538, !539, !540, !546, !547}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !535, file: !110, line: 380, baseType: !113, size: 32)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !535, file: !110, line: 382, baseType: !13, size: 32, offset: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !535, file: !110, line: 384, baseType: !13, size: 32, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !535, file: !110, line: 386, baseType: !541, size: 32, offset: 96)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 32)
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !110, line: 351, size: 16, elements: !543)
!543 = !{!544, !545}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !542, file: !110, line: 359, baseType: !123, size: 8)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !542, file: !110, line: 364, baseType: !126, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !535, file: !110, line: 388, baseType: !103, size: 32, offset: 128)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !535, file: !110, line: 396, baseType: !129, size: 32, offset: 160)
!548 = !DIGlobalVariableExpression(var: !549, expr: !DIExpression())
!549 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !444, file: !528, line: 424, type: !550, isLocal: true, isDefinition: true, align: 32)
!550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !551)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !166, line: 51, size: 64, elements: !552)
!552 = !{!553, !558}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !551, file: !166, line: 60, baseType: !554, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 32)
!555 = !DISubroutineType(types: !556)
!556 = !{!104, !557}
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 32)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !551, file: !166, line: 65, baseType: !557, size: 32, offset: 32)
!559 = !DIGlobalVariableExpression(var: !560, expr: !DIExpression())
!560 = distinct !DIGlobalVariable(name: "exti_data", scope: !444, file: !528, line: 423, type: !561, isLocal: true, isDefinition: true)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !528, line: 107, size: 1472, elements: !562)
!562 = !{!563}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !561, file: !528, line: 109, baseType: !564, size: 1472)
!564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 1472, elements: !574)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !528, line: 101, size: 64, elements: !566)
!566 = !{!567, !573}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !565, file: !528, line: 102, baseType: !568, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !569, line: 63, baseType: !570)
!569 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 32)
!571 = !DISubroutineType(types: !572)
!572 = !{null, !104, !103}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !565, file: !528, line: 103, baseType: !103, size: 32, offset: 32)
!574 = !{!575}
!575 = !DISubrange(count: 23)
!576 = !DIGlobalVariableExpression(var: !577, expr: !DIExpression())
!577 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !444, file: !528, line: 424, type: !542, isLocal: true, isDefinition: true, align: 8)
!578 = !DIGlobalVariableExpression(var: !579, expr: !DIExpression())
!579 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !580, file: !528, line: 493, type: !585, isLocal: true, isDefinition: true, align: 32)
!580 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !528, file: !528, line: 460, type: !581, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !583)
!581 = !DISubroutineType(types: !582)
!582 = !{null, !557}
!583 = !{!584}
!584 = !DILocalVariable(name: "dev", arg: 1, scope: !580, file: !528, line: 460, type: !557)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !586)
!586 = !{!587, !589, !590, !591}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !585, file: !10, line: 55, baseType: !588, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !104)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !585, file: !10, line: 57, baseType: !588, size: 32, offset: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !585, file: !10, line: 59, baseType: !103, size: 32, offset: 64)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !585, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!592 = !DIGlobalVariableExpression(var: !593, expr: !DIExpression())
!593 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !580, file: !528, line: 497, type: !585, isLocal: true, isDefinition: true, align: 32)
!594 = !DIGlobalVariableExpression(var: !595, expr: !DIExpression())
!595 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !580, file: !528, line: 507, type: !585, isLocal: true, isDefinition: true, align: 32)
!596 = !DIGlobalVariableExpression(var: !597, expr: !DIExpression())
!597 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !580, file: !528, line: 512, type: !585, isLocal: true, isDefinition: true, align: 32)
!598 = !DIGlobalVariableExpression(var: !599, expr: !DIExpression())
!599 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !580, file: !528, line: 516, type: !585, isLocal: true, isDefinition: true, align: 32)
!600 = !DIGlobalVariableExpression(var: !601, expr: !DIExpression())
!601 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !580, file: !528, line: 523, type: !585, isLocal: true, isDefinition: true, align: 32)
!602 = !DIGlobalVariableExpression(var: !603, expr: !DIExpression())
!603 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !580, file: !528, line: 527, type: !585, isLocal: true, isDefinition: true, align: 32)
!604 = !DIGlobalVariableExpression(var: !605, expr: !DIExpression())
!605 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !580, file: !528, line: 581, type: !585, isLocal: true, isDefinition: true, align: 32)
!606 = !DIGlobalVariableExpression(var: !607, expr: !DIExpression())
!607 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !580, file: !528, line: 586, type: !585, isLocal: true, isDefinition: true, align: 32)
!608 = !DIGlobalVariableExpression(var: !609, expr: !DIExpression())
!609 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !580, file: !528, line: 591, type: !585, isLocal: true, isDefinition: true, align: 32)
!610 = !DIGlobalVariableExpression(var: !611, expr: !DIExpression())
!611 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !580, file: !528, line: 595, type: !585, isLocal: true, isDefinition: true, align: 32)
!612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !613, size: 736, elements: !574)
!613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !614)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !150, line: 134, baseType: !447)
!615 = !DIGlobalVariableExpression(var: !616, expr: !DIExpression())
!616 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !617, file: !622, line: 22, type: !644, isLocal: false, isDefinition: true, align: 16)
!617 = distinct !DICompileUnit(language: DW_LANG_C99, file: !618, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !619, splitDebugInlining: false, nameTableKind: None)
!618 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!619 = !{!620, !615, !626, !628, !630, !632, !634, !636, !638, !640, !642, !647}
!620 = !DIGlobalVariableExpression(var: !621, expr: !DIExpression())
!621 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !617, file: !622, line: 17, type: !623, isLocal: false, isDefinition: true, align: 16)
!622 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 192, elements: !624)
!624 = !{!625}
!625 = !DISubrange(count: 12)
!626 = !DIGlobalVariableExpression(var: !627, expr: !DIExpression())
!627 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !617, file: !622, line: 29, type: !529, isLocal: false, isDefinition: true, align: 16)
!628 = !DIGlobalVariableExpression(var: !629, expr: !DIExpression())
!629 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !617, file: !622, line: 36, type: !529, isLocal: false, isDefinition: true, align: 16)
!630 = !DIGlobalVariableExpression(var: !631, expr: !DIExpression())
!631 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !617, file: !622, line: 43, type: !529, isLocal: false, isDefinition: true, align: 16)
!632 = !DIGlobalVariableExpression(var: !633, expr: !DIExpression())
!633 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !617, file: !622, line: 50, type: !529, isLocal: false, isDefinition: true, align: 16)
!634 = !DIGlobalVariableExpression(var: !635, expr: !DIExpression())
!635 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !617, file: !622, line: 57, type: !529, isLocal: false, isDefinition: true, align: 16)
!636 = !DIGlobalVariableExpression(var: !637, expr: !DIExpression())
!637 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !617, file: !622, line: 64, type: !529, isLocal: false, isDefinition: true, align: 16)
!638 = !DIGlobalVariableExpression(var: !639, expr: !DIExpression())
!639 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !617, file: !622, line: 71, type: !529, isLocal: false, isDefinition: true, align: 16)
!640 = !DIGlobalVariableExpression(var: !641, expr: !DIExpression())
!641 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !617, file: !622, line: 78, type: !529, isLocal: false, isDefinition: true, align: 16)
!642 = !DIGlobalVariableExpression(var: !643, expr: !DIExpression())
!643 = distinct !DIGlobalVariable(name: "__devicehdl_hello_world", scope: !617, file: !622, line: 83, type: !644, isLocal: false, isDefinition: true, align: 16)
!644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 48, elements: !645)
!645 = !{!646}
!646 = !DISubrange(count: 3)
!647 = !DIGlobalVariableExpression(var: !648, expr: !DIExpression())
!648 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !617, file: !622, line: 90, type: !529, isLocal: false, isDefinition: true, align: 16)
!649 = !DIGlobalVariableExpression(var: !650, expr: !DIExpression())
!650 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !651, file: !715, line: 398, type: !748, isLocal: true, isDefinition: true)
!651 = distinct !DICompileUnit(language: DW_LANG_C99, file: !652, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !653, retainedTypes: !666, globals: !712, splitDebugInlining: false, nameTableKind: None)
!652 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!653 = !{!654, !30, !659}
!654 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !655, line: 197, baseType: !32, size: 32, elements: !656)
!655 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!656 = !{!657, !658}
!657 = !DIEnumerator(name: "SUCCESS", value: 0)
!658 = !DIEnumerator(name: "ERROR", value: 1)
!659 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !660, line: 44, baseType: !32, size: 32, elements: !661)
!660 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!661 = !{!662, !663, !664, !665}
!662 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!663 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!664 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!665 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!666 = !{!103, !104, !155, !667, !705, !711}
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 32)
!668 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !150, line: 370, baseType: !669)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 336, size: 1152, elements: !670)
!670 = !{!671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !704}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !669, file: !150, line: 338, baseType: !154, size: 32)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !669, file: !150, line: 339, baseType: !154, size: 32, offset: 32)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !669, file: !150, line: 340, baseType: !154, size: 32, offset: 64)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !669, file: !150, line: 341, baseType: !154, size: 32, offset: 96)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !669, file: !150, line: 342, baseType: !154, size: 32, offset: 128)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !669, file: !150, line: 343, baseType: !154, size: 32, offset: 160)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !669, file: !150, line: 344, baseType: !154, size: 32, offset: 192)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !669, file: !150, line: 345, baseType: !155, size: 32, offset: 224)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !669, file: !150, line: 346, baseType: !154, size: 32, offset: 256)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !669, file: !150, line: 347, baseType: !154, size: 32, offset: 288)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !669, file: !150, line: 348, baseType: !682, size: 64, offset: 320)
!682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 64, elements: !264)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !669, file: !150, line: 349, baseType: !154, size: 32, offset: 384)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !669, file: !150, line: 350, baseType: !154, size: 32, offset: 416)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !669, file: !150, line: 351, baseType: !154, size: 32, offset: 448)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !669, file: !150, line: 352, baseType: !155, size: 32, offset: 480)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !669, file: !150, line: 353, baseType: !154, size: 32, offset: 512)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !669, file: !150, line: 354, baseType: !154, size: 32, offset: 544)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !669, file: !150, line: 355, baseType: !682, size: 64, offset: 576)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !669, file: !150, line: 356, baseType: !154, size: 32, offset: 640)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !669, file: !150, line: 357, baseType: !154, size: 32, offset: 672)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !669, file: !150, line: 358, baseType: !154, size: 32, offset: 704)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !669, file: !150, line: 359, baseType: !155, size: 32, offset: 736)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !669, file: !150, line: 360, baseType: !154, size: 32, offset: 768)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !669, file: !150, line: 361, baseType: !154, size: 32, offset: 800)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !669, file: !150, line: 362, baseType: !682, size: 64, offset: 832)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !669, file: !150, line: 363, baseType: !154, size: 32, offset: 896)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !669, file: !150, line: 364, baseType: !154, size: 32, offset: 928)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !669, file: !150, line: 365, baseType: !682, size: 64, offset: 960)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !669, file: !150, line: 366, baseType: !154, size: 32, offset: 1024)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !669, file: !150, line: 367, baseType: !154, size: 32, offset: 1056)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !669, file: !150, line: 368, baseType: !703, size: 32, offset: 1088)
!703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 32, elements: !367)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !669, file: !150, line: 369, baseType: !154, size: 32, offset: 1120)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 32)
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !707, line: 343, size: 64, elements: !708)
!707 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!708 = !{!709, !710}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !706, file: !707, line: 344, baseType: !155, size: 32)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !706, file: !707, line: 345, baseType: !155, size: 32, offset: 32)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!712 = !{!713, !719, !735, !746, !649}
!713 = !DIGlobalVariableExpression(var: !714, expr: !DIExpression())
!714 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !651, file: !715, line: 752, type: !716, isLocal: false, isDefinition: true, align: 16)
!715 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 704, elements: !717)
!717 = !{!718}
!718 = !DISubrange(count: 44)
!719 = !DIGlobalVariableExpression(var: !720, expr: !DIExpression())
!720 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !651, file: !715, line: 752, type: !721, isLocal: false, isDefinition: true, align: 32)
!721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !722)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !110, line: 378, size: 192, elements: !723)
!723 = !{!724, !725, !726, !727, !733, !734}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !722, file: !110, line: 380, baseType: !113, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !722, file: !110, line: 382, baseType: !13, size: 32, offset: 32)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !722, file: !110, line: 384, baseType: !13, size: 32, offset: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !722, file: !110, line: 386, baseType: !728, size: 32, offset: 96)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 32)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !110, line: 351, size: 16, elements: !730)
!730 = !{!731, !732}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !729, file: !110, line: 359, baseType: !123, size: 8)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !729, file: !110, line: 364, baseType: !126, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !722, file: !110, line: 388, baseType: !103, size: 32, offset: 128)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !722, file: !110, line: 396, baseType: !129, size: 32, offset: 160)
!735 = !DIGlobalVariableExpression(var: !736, expr: !DIExpression())
!736 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !651, file: !715, line: 752, type: !737, isLocal: true, isDefinition: true, align: 32)
!737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !738)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !166, line: 51, size: 64, elements: !739)
!739 = !{!740, !745}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !738, file: !166, line: 60, baseType: !741, size: 32)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 32)
!742 = !DISubroutineType(types: !743)
!743 = !{!104, !744}
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !738, file: !166, line: 65, baseType: !744, size: 32, offset: 32)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !651, file: !715, line: 752, type: !729, isLocal: true, isDefinition: true, align: 8)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !660, line: 100, size: 224, elements: !749)
!749 = !{!750, !756, !757, !766, !771, !776, !782}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !748, file: !660, line: 101, baseType: !751, size: 32)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !660, line: 76, baseType: !752)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 32)
!753 = !DISubroutineType(types: !754)
!754 = !{!104, !744, !755}
!755 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !660, line: 56, baseType: !103)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !748, file: !660, line: 102, baseType: !751, size: 32, offset: 32)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !748, file: !660, line: 103, baseType: !758, size: 32, offset: 64)
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !660, line: 83, baseType: !759)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 32)
!760 = !DISubroutineType(types: !761)
!761 = !{!104, !744, !755, !762, !103}
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !660, line: 72, baseType: !763)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 32)
!764 = !DISubroutineType(types: !765)
!765 = !{null, !744, !755, !103}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !748, file: !660, line: 104, baseType: !767, size: 32, offset: 96)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !660, line: 79, baseType: !768)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 32)
!769 = !DISubroutineType(types: !770)
!770 = !{!104, !744, !755, !711}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !748, file: !660, line: 105, baseType: !772, size: 32, offset: 128)
!772 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !660, line: 88, baseType: !773)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 32)
!774 = !DISubroutineType(types: !775)
!775 = !{!659, !744, !755}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !748, file: !660, line: 106, baseType: !777, size: 32, offset: 160)
!777 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !660, line: 92, baseType: !778)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 32)
!779 = !DISubroutineType(types: !780)
!780 = !{!104, !744, !755, !781}
!781 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !660, line: 64, baseType: !103)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !748, file: !660, line: 107, baseType: !783, size: 32, offset: 192)
!783 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !660, line: 96, baseType: !784)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 32)
!785 = !DISubroutineType(types: !786)
!786 = !{!104, !744, !755, !103}
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !789, file: !846, line: 603, type: !848, isLocal: true, isDefinition: true, align: 32)
!789 = distinct !DICompileUnit(language: DW_LANG_C99, file: !790, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !791, globals: !843, splitDebugInlining: false, nameTableKind: None)
!790 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!791 = !{!103, !104, !792}
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 32)
!793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !794)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !795, line: 336, size: 160, elements: !796)
!795 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!796 = !{!797, !817, !821, !825, !838}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !794, file: !795, line: 365, baseType: !798, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 32)
!799 = !DISubroutineType(types: !800)
!800 = !{!104, !801, !816}
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 32)
!802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !803)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !110, line: 378, size: 192, elements: !804)
!804 = !{!805, !806, !807, !808, !814, !815}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !803, file: !110, line: 380, baseType: !113, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !803, file: !110, line: 382, baseType: !13, size: 32, offset: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !803, file: !110, line: 384, baseType: !13, size: 32, offset: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !803, file: !110, line: 386, baseType: !809, size: 32, offset: 96)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 32)
!810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !110, line: 351, size: 16, elements: !811)
!811 = !{!812, !813}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !810, file: !110, line: 359, baseType: !123, size: 8)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !810, file: !110, line: 364, baseType: !126, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !803, file: !110, line: 388, baseType: !103, size: 32, offset: 128)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !803, file: !110, line: 396, baseType: !129, size: 32, offset: 160)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !794, file: !795, line: 366, baseType: !818, size: 32, offset: 32)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 32)
!819 = !DISubroutineType(types: !820)
!820 = !{null, !801, !124}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !794, file: !795, line: 374, baseType: !822, size: 32, offset: 64)
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 32)
!823 = !DISubroutineType(types: !824)
!824 = !{!104, !801}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !794, file: !795, line: 377, baseType: !826, size: 32, offset: 96)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 32)
!827 = !DISubroutineType(types: !828)
!828 = !{!104, !801, !829}
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 32)
!830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !831)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !795, line: 122, size: 64, elements: !832)
!832 = !{!833, !834, !835, !836, !837}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !831, file: !795, line: 123, baseType: !155, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !831, file: !795, line: 124, baseType: !123, size: 8, offset: 32)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !831, file: !795, line: 125, baseType: !123, size: 8, offset: 40)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !831, file: !795, line: 126, baseType: !123, size: 8, offset: 48)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !831, file: !795, line: 127, baseType: !123, size: 8, offset: 56)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !794, file: !795, line: 379, baseType: !839, size: 32, offset: 128)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 32)
!840 = !DISubroutineType(types: !841)
!841 = !{!104, !801, !842}
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 32)
!843 = !{!787, !844}
!844 = !DIGlobalVariableExpression(var: !845, expr: !DIExpression())
!845 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !789, file: !846, line: 38, type: !847, isLocal: true, isDefinition: true)
!846 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !801)
!848 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !849)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !166, line: 51, size: 64, elements: !850)
!850 = !{!851, !852}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !849, file: !166, line: 60, baseType: !822, size: 32)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !849, file: !166, line: 65, baseType: !801, size: 32, offset: 32)
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !855, file: !1025, line: 762, type: !1134, isLocal: true, isDefinition: true)
!855 = distinct !DICompileUnit(language: DW_LANG_C99, file: !856, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !857, retainedTypes: !875, globals: !1022, splitDebugInlining: false, nameTableKind: None)
!856 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!857 = !{!30, !858, !864, !869, !659}
!858 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !859, line: 506, baseType: !32, size: 32, elements: !860)
!859 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!860 = !{!861, !862, !863}
!861 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!862 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!863 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!864 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !859, line: 512, baseType: !32, size: 32, elements: !865)
!865 = !{!866, !867, !868}
!866 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!867 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!868 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!869 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !569, line: 43, baseType: !32, size: 32, elements: !870)
!870 = !{!871, !872, !873, !874}
!871 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!872 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!873 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!874 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!875 = !{!103, !104, !876, !946, !951, !911, !864, !858, !956, !957, !155, !971, !926, !981, !982, !983}
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !878)
!878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !859, line: 523, size: 288, elements: !879)
!879 = !{!880, !901, !907, !912, !916, !917, !918, !922, !942}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !878, file: !859, line: 524, baseType: !881, size: 32)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 32)
!882 = !DISubroutineType(types: !883)
!883 = !{!104, !884, !899, !900}
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 32)
!885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !886)
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !110, line: 378, size: 192, elements: !887)
!887 = !{!888, !889, !890, !891, !897, !898}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !886, file: !110, line: 380, baseType: !113, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !886, file: !110, line: 382, baseType: !13, size: 32, offset: 32)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !886, file: !110, line: 384, baseType: !13, size: 32, offset: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !886, file: !110, line: 386, baseType: !892, size: 32, offset: 96)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 32)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !110, line: 351, size: 16, elements: !894)
!894 = !{!895, !896}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !893, file: !110, line: 359, baseType: !123, size: 8)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !893, file: !110, line: 364, baseType: !126, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !886, file: !110, line: 388, baseType: !103, size: 32, offset: 128)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !886, file: !110, line: 396, baseType: !129, size: 32, offset: 160)
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !859, line: 237, baseType: !123)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !859, line: 257, baseType: !155)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !878, file: !859, line: 530, baseType: !902, size: 32, offset: 32)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 32)
!903 = !DISubroutineType(types: !904)
!904 = !{!104, !884, !905}
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !859, line: 229, baseType: !155)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !878, file: !859, line: 532, baseType: !908, size: 32, offset: 64)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 32)
!909 = !DISubroutineType(types: !910)
!910 = !{!104, !884, !911, !906}
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !859, line: 216, baseType: !155)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !878, file: !859, line: 535, baseType: !913, size: 32, offset: 96)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 32)
!914 = !DISubroutineType(types: !915)
!915 = !{!104, !884, !911}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !878, file: !859, line: 537, baseType: !913, size: 32, offset: 128)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !878, file: !859, line: 539, baseType: !913, size: 32, offset: 160)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !878, file: !859, line: 541, baseType: !919, size: 32, offset: 192)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = !DISubroutineType(types: !921)
!921 = !{!104, !884, !899, !858, !864}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !878, file: !859, line: 544, baseType: !923, size: 32, offset: 224)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 32)
!924 = !DISubroutineType(types: !925)
!925 = !{!104, !884, !926, !126}
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 32)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !859, line: 478, size: 96, elements: !928)
!928 = !{!929, !936, !941}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !927, file: !859, line: 482, baseType: !930, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !931, line: 33, baseType: !932)
!931 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !931, line: 29, size: 32, elements: !933)
!933 = !{!934}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !932, file: !931, line: 30, baseType: !935, size: 32)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 32)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !927, file: !859, line: 485, baseType: !937, size: 32, offset: 32)
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !859, line: 464, baseType: !938)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 32)
!939 = !DISubroutineType(types: !940)
!940 = !{null, !884, !926, !911}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !927, file: !859, line: 493, baseType: !911, size: 32, offset: 64)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !878, file: !859, line: 547, baseType: !943, size: 32, offset: 256)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!944 = !DISubroutineType(types: !945)
!945 = !{!155, !884}
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 32)
!947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !948)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !859, line: 428, size: 32, elements: !949)
!949 = !{!950}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !948, file: !859, line: 434, baseType: !911, size: 32)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !953)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !859, line: 441, size: 32, elements: !954)
!954 = !{!955}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !953, file: !859, line: 447, baseType: !911, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 32)
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !150, line: 276, baseType: !959)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 265, size: 320, elements: !960)
!960 = !{!961, !962, !963, !964, !965, !966, !967, !968, !969}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !959, file: !150, line: 267, baseType: !154, size: 32)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !959, file: !150, line: 268, baseType: !154, size: 32, offset: 32)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !959, file: !150, line: 269, baseType: !154, size: 32, offset: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !959, file: !150, line: 270, baseType: !154, size: 32, offset: 96)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !959, file: !150, line: 271, baseType: !154, size: 32, offset: 128)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !959, file: !150, line: 272, baseType: !154, size: 32, offset: 160)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !959, file: !150, line: 273, baseType: !154, size: 32, offset: 192)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !959, file: !150, line: 274, baseType: !154, size: 32, offset: 224)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !959, file: !150, line: 275, baseType: !970, size: 64, offset: 256)
!970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 64, elements: !264)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 32)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !150, line: 289, baseType: !973)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 282, size: 288, elements: !974)
!974 = !{!975, !976, !977, !979, !980}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !973, file: !150, line: 284, baseType: !154, size: 32)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !973, file: !150, line: 285, baseType: !154, size: 32, offset: 32)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !973, file: !150, line: 286, baseType: !978, size: 128, offset: 64)
!978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 128, elements: !530)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !973, file: !150, line: 287, baseType: !682, size: 64, offset: 192)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !973, file: !150, line: 288, baseType: !154, size: 32, offset: 256)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 32)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !985)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !660, line: 100, size: 224, elements: !986)
!986 = !{!987, !992, !993, !1002, !1007, !1012, !1017}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !985, file: !660, line: 101, baseType: !988, size: 32)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !660, line: 76, baseType: !989)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 32)
!990 = !DISubroutineType(types: !991)
!991 = !{!104, !884, !755}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !985, file: !660, line: 102, baseType: !988, size: 32, offset: 32)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !985, file: !660, line: 103, baseType: !994, size: 32, offset: 64)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !660, line: 83, baseType: !995)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!996 = !DISubroutineType(types: !997)
!997 = !{!104, !884, !755, !998, !103}
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !660, line: 72, baseType: !999)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 32)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{null, !884, !755, !103}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !985, file: !660, line: 104, baseType: !1003, size: 32, offset: 96)
!1003 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !660, line: 79, baseType: !1004)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 32)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{!104, !884, !755, !711}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !985, file: !660, line: 105, baseType: !1008, size: 32, offset: 128)
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !660, line: 88, baseType: !1009)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 32)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!659, !884, !755}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !985, file: !660, line: 106, baseType: !1013, size: 32, offset: 160)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !660, line: 92, baseType: !1014)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 32)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!104, !884, !755, !781}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !985, file: !660, line: 107, baseType: !1018, size: 32, offset: 192)
!1018 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !660, line: 96, baseType: !1019)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 32)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!104, !884, !755, !103}
!1022 = !{!1023, !1029, !1031, !1041, !1046, !1048, !1050, !1052, !1054, !1056, !1058, !1060, !1062, !1064, !1066, !1068, !1070, !1072, !1074, !1076, !1078, !1080, !1082, !1084, !1086, !1100, !1102, !1104, !1106, !1108, !1110, !1112, !1114, !1116, !1118, !1120, !1122, !1124, !1126, !1128, !853, !1130, !1132, !1145, !1147, !1149, !1151, !1153, !1155}
!1023 = !DIGlobalVariableExpression(var: !1024, expr: !DIExpression())
!1024 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !855, file: !1025, line: 762, type: !1026, isLocal: false, isDefinition: true, align: 16)
!1025 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 80, elements: !1027)
!1027 = !{!1028}
!1028 = !DISubrange(count: 5)
!1029 = !DIGlobalVariableExpression(var: !1030, expr: !DIExpression())
!1030 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !855, file: !1025, line: 762, type: !885, isLocal: false, isDefinition: true, align: 32)
!1031 = !DIGlobalVariableExpression(var: !1032, expr: !DIExpression())
!1032 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !855, file: !1025, line: 762, type: !1033, isLocal: true, isDefinition: true, align: 32)
!1033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1034)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !166, line: 51, size: 64, elements: !1035)
!1035 = !{!1036, !1040}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1034, file: !166, line: 60, baseType: !1037, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!104, !884}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1034, file: !166, line: 65, baseType: !884, size: 32, offset: 32)
!1041 = !DIGlobalVariableExpression(var: !1042, expr: !DIExpression())
!1042 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !855, file: !1025, line: 766, type: !1043, isLocal: false, isDefinition: true, align: 16)
!1043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 160, elements: !1044)
!1044 = !{!1045}
!1045 = !DISubrange(count: 10)
!1046 = !DIGlobalVariableExpression(var: !1047, expr: !DIExpression())
!1047 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !855, file: !1025, line: 766, type: !885, isLocal: false, isDefinition: true, align: 32)
!1048 = !DIGlobalVariableExpression(var: !1049, expr: !DIExpression())
!1049 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !855, file: !1025, line: 766, type: !1033, isLocal: true, isDefinition: true, align: 32)
!1050 = !DIGlobalVariableExpression(var: !1051, expr: !DIExpression())
!1051 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !855, file: !1025, line: 770, type: !1026, isLocal: false, isDefinition: true, align: 16)
!1052 = !DIGlobalVariableExpression(var: !1053, expr: !DIExpression())
!1053 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !855, file: !1025, line: 770, type: !885, isLocal: false, isDefinition: true, align: 32)
!1054 = !DIGlobalVariableExpression(var: !1055, expr: !DIExpression())
!1055 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !855, file: !1025, line: 770, type: !1033, isLocal: true, isDefinition: true, align: 32)
!1056 = !DIGlobalVariableExpression(var: !1057, expr: !DIExpression())
!1057 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !855, file: !1025, line: 774, type: !1026, isLocal: false, isDefinition: true, align: 16)
!1058 = !DIGlobalVariableExpression(var: !1059, expr: !DIExpression())
!1059 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !855, file: !1025, line: 774, type: !885, isLocal: false, isDefinition: true, align: 32)
!1060 = !DIGlobalVariableExpression(var: !1061, expr: !DIExpression())
!1061 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !855, file: !1025, line: 774, type: !1033, isLocal: true, isDefinition: true, align: 32)
!1062 = !DIGlobalVariableExpression(var: !1063, expr: !DIExpression())
!1063 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !855, file: !1025, line: 778, type: !1026, isLocal: false, isDefinition: true, align: 16)
!1064 = !DIGlobalVariableExpression(var: !1065, expr: !DIExpression())
!1065 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !855, file: !1025, line: 778, type: !885, isLocal: false, isDefinition: true, align: 32)
!1066 = !DIGlobalVariableExpression(var: !1067, expr: !DIExpression())
!1067 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !855, file: !1025, line: 778, type: !1033, isLocal: true, isDefinition: true, align: 32)
!1068 = !DIGlobalVariableExpression(var: !1069, expr: !DIExpression())
!1069 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !855, file: !1025, line: 782, type: !1026, isLocal: false, isDefinition: true, align: 16)
!1070 = !DIGlobalVariableExpression(var: !1071, expr: !DIExpression())
!1071 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !855, file: !1025, line: 782, type: !885, isLocal: false, isDefinition: true, align: 32)
!1072 = !DIGlobalVariableExpression(var: !1073, expr: !DIExpression())
!1073 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !855, file: !1025, line: 782, type: !1033, isLocal: true, isDefinition: true, align: 32)
!1074 = !DIGlobalVariableExpression(var: !1075, expr: !DIExpression())
!1075 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !855, file: !1025, line: 786, type: !1026, isLocal: false, isDefinition: true, align: 16)
!1076 = !DIGlobalVariableExpression(var: !1077, expr: !DIExpression())
!1077 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !855, file: !1025, line: 786, type: !885, isLocal: false, isDefinition: true, align: 32)
!1078 = !DIGlobalVariableExpression(var: !1079, expr: !DIExpression())
!1079 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !855, file: !1025, line: 786, type: !1033, isLocal: true, isDefinition: true, align: 32)
!1080 = !DIGlobalVariableExpression(var: !1081, expr: !DIExpression())
!1081 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !855, file: !1025, line: 790, type: !1026, isLocal: false, isDefinition: true, align: 16)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !855, file: !1025, line: 790, type: !885, isLocal: false, isDefinition: true, align: 32)
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !855, file: !1025, line: 790, type: !1033, isLocal: true, isDefinition: true, align: 32)
!1086 = !DIGlobalVariableExpression(var: !1087, expr: !DIExpression())
!1087 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !855, file: !1025, line: 762, type: !1088, isLocal: true, isDefinition: true)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1089, line: 237, size: 128, elements: !1090)
!1089 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1090 = !{!1091, !1092, !1093}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1088, file: !1089, line: 239, baseType: !953, size: 32)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1088, file: !1089, line: 241, baseType: !884, size: 32, offset: 32)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1088, file: !1089, line: 243, baseType: !1094, size: 64, offset: 64)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !931, line: 40, baseType: !1095)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !931, line: 35, size: 64, elements: !1096)
!1096 = !{!1097, !1099}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1095, file: !931, line: 36, baseType: !1098, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1095, file: !931, line: 37, baseType: !1098, size: 32, offset: 32)
!1100 = !DIGlobalVariableExpression(var: !1101, expr: !DIExpression())
!1101 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !855, file: !1025, line: 762, type: !893, isLocal: true, isDefinition: true, align: 8)
!1102 = !DIGlobalVariableExpression(var: !1103, expr: !DIExpression())
!1103 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !855, file: !1025, line: 766, type: !1088, isLocal: true, isDefinition: true)
!1104 = !DIGlobalVariableExpression(var: !1105, expr: !DIExpression())
!1105 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !855, file: !1025, line: 766, type: !893, isLocal: true, isDefinition: true, align: 8)
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !855, file: !1025, line: 770, type: !1088, isLocal: true, isDefinition: true)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !855, file: !1025, line: 770, type: !893, isLocal: true, isDefinition: true, align: 8)
!1110 = !DIGlobalVariableExpression(var: !1111, expr: !DIExpression())
!1111 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !855, file: !1025, line: 774, type: !1088, isLocal: true, isDefinition: true)
!1112 = !DIGlobalVariableExpression(var: !1113, expr: !DIExpression())
!1113 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !855, file: !1025, line: 774, type: !893, isLocal: true, isDefinition: true, align: 8)
!1114 = !DIGlobalVariableExpression(var: !1115, expr: !DIExpression())
!1115 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !855, file: !1025, line: 778, type: !1088, isLocal: true, isDefinition: true)
!1116 = !DIGlobalVariableExpression(var: !1117, expr: !DIExpression())
!1117 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !855, file: !1025, line: 778, type: !893, isLocal: true, isDefinition: true, align: 8)
!1118 = !DIGlobalVariableExpression(var: !1119, expr: !DIExpression())
!1119 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !855, file: !1025, line: 782, type: !1088, isLocal: true, isDefinition: true)
!1120 = !DIGlobalVariableExpression(var: !1121, expr: !DIExpression())
!1121 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !855, file: !1025, line: 782, type: !893, isLocal: true, isDefinition: true, align: 8)
!1122 = !DIGlobalVariableExpression(var: !1123, expr: !DIExpression())
!1123 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !855, file: !1025, line: 786, type: !1088, isLocal: true, isDefinition: true)
!1124 = !DIGlobalVariableExpression(var: !1125, expr: !DIExpression())
!1125 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !855, file: !1025, line: 786, type: !893, isLocal: true, isDefinition: true, align: 8)
!1126 = !DIGlobalVariableExpression(var: !1127, expr: !DIExpression())
!1127 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !855, file: !1025, line: 790, type: !1088, isLocal: true, isDefinition: true)
!1128 = !DIGlobalVariableExpression(var: !1129, expr: !DIExpression())
!1129 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !855, file: !1025, line: 790, type: !893, isLocal: true, isDefinition: true, align: 8)
!1130 = !DIGlobalVariableExpression(var: !1131, expr: !DIExpression())
!1131 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !855, file: !1025, line: 656, type: !877, isLocal: true, isDefinition: true)
!1132 = !DIGlobalVariableExpression(var: !1133, expr: !DIExpression())
!1133 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !855, file: !1025, line: 766, type: !1134, isLocal: true, isDefinition: true)
!1134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1135)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1089, line: 224, size: 160, elements: !1136)
!1136 = !{!1137, !1138, !1139, !1140}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1135, file: !1089, line: 226, baseType: !948, size: 32)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1135, file: !1089, line: 228, baseType: !711, size: 32, offset: 32)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1135, file: !1089, line: 230, baseType: !104, size: 32, offset: 64)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1135, file: !1089, line: 231, baseType: !1141, size: 64, offset: 96)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !707, line: 343, size: 64, elements: !1142)
!1142 = !{!1143, !1144}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1141, file: !707, line: 344, baseType: !155, size: 32)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1141, file: !707, line: 345, baseType: !155, size: 32, offset: 32)
!1145 = !DIGlobalVariableExpression(var: !1146, expr: !DIExpression())
!1146 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !855, file: !1025, line: 770, type: !1134, isLocal: true, isDefinition: true)
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression())
!1148 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !855, file: !1025, line: 774, type: !1134, isLocal: true, isDefinition: true)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !855, file: !1025, line: 778, type: !1134, isLocal: true, isDefinition: true)
!1151 = !DIGlobalVariableExpression(var: !1152, expr: !DIExpression())
!1152 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !855, file: !1025, line: 782, type: !1134, isLocal: true, isDefinition: true)
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !855, file: !1025, line: 786, type: !1134, isLocal: true, isDefinition: true)
!1155 = !DIGlobalVariableExpression(var: !1156, expr: !DIExpression())
!1156 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !855, file: !1025, line: 790, type: !1134, isLocal: true, isDefinition: true)
!1157 = !DIGlobalVariableExpression(var: !1158, expr: !DIExpression())
!1158 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1159, file: !1300, line: 1914, type: !1361, isLocal: true, isDefinition: true)
!1159 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1160, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1161, retainedTypes: !1194, globals: !1297, splitDebugInlining: false, nameTableKind: None)
!1160 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!1161 = !{!30, !1162, !1169, !1176, !1183, !1189, !659}
!1162 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !795, line: 47, baseType: !32, size: 32, elements: !1163)
!1163 = !{!1164, !1165, !1166, !1167, !1168}
!1164 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1165 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1166 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1167 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1168 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !795, line: 75, baseType: !32, size: 32, elements: !1170)
!1170 = !{!1171, !1172, !1173, !1174, !1175}
!1171 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1172 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1173 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1174 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1175 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !795, line: 92, baseType: !32, size: 32, elements: !1177)
!1177 = !{!1178, !1179, !1180, !1181, !1182}
!1178 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1179 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1180 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1181 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1182 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !795, line: 84, baseType: !32, size: 32, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188}
!1185 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1186 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1187 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1188 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !795, line: 107, baseType: !32, size: 32, elements: !1190)
!1190 = !{!1191, !1192, !1193}
!1191 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1192 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1193 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1194 = !{!103, !104, !1195, !124, !123, !1244, !155, !755, !1255, !287, !1294, !1296}
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 32)
!1196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1197)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !795, line: 336, size: 160, elements: !1198)
!1198 = !{!1199, !1218, !1222, !1226, !1239}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1197, file: !795, line: 365, baseType: !1200, size: 32)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 32)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{!104, !1203, !816}
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 32)
!1204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1205)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !110, line: 378, size: 192, elements: !1206)
!1206 = !{!1207, !1208, !1209, !1210, !1216, !1217}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1205, file: !110, line: 380, baseType: !113, size: 32)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1205, file: !110, line: 382, baseType: !13, size: 32, offset: 32)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1205, file: !110, line: 384, baseType: !13, size: 32, offset: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1205, file: !110, line: 386, baseType: !1211, size: 32, offset: 96)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !110, line: 351, size: 16, elements: !1213)
!1213 = !{!1214, !1215}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1212, file: !110, line: 359, baseType: !123, size: 8)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1212, file: !110, line: 364, baseType: !126, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1205, file: !110, line: 388, baseType: !103, size: 32, offset: 128)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1205, file: !110, line: 396, baseType: !129, size: 32, offset: 160)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1197, file: !795, line: 366, baseType: !1219, size: 32, offset: 32)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 32)
!1220 = !DISubroutineType(types: !1221)
!1221 = !{null, !1203, !124}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1197, file: !795, line: 374, baseType: !1223, size: 32, offset: 64)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 32)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{!104, !1203}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1197, file: !795, line: 377, baseType: !1227, size: 32, offset: 96)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 32)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!104, !1203, !1230}
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 32)
!1231 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1232)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !795, line: 122, size: 64, elements: !1233)
!1233 = !{!1234, !1235, !1236, !1237, !1238}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1232, file: !795, line: 123, baseType: !155, size: 32)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1232, file: !795, line: 124, baseType: !123, size: 8, offset: 32)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1232, file: !795, line: 125, baseType: !123, size: 8, offset: 40)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1232, file: !795, line: 126, baseType: !123, size: 8, offset: 48)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1232, file: !795, line: 127, baseType: !123, size: 8, offset: 56)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1197, file: !795, line: 379, baseType: !1240, size: 32, offset: 128)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!104, !1203, !1243}
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !150, line: 508, baseType: !1246)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 499, size: 224, elements: !1247)
!1247 = !{!1248, !1249, !1250, !1251, !1252, !1253, !1254}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1246, file: !150, line: 501, baseType: !154, size: 32)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1246, file: !150, line: 502, baseType: !154, size: 32, offset: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1246, file: !150, line: 503, baseType: !154, size: 32, offset: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1246, file: !150, line: 504, baseType: !154, size: 32, offset: 96)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1246, file: !150, line: 505, baseType: !154, size: 32, offset: 128)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1246, file: !150, line: 506, baseType: !154, size: 32, offset: 160)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1246, file: !150, line: 507, baseType: !154, size: 32, offset: 192)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1257)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !660, line: 100, size: 224, elements: !1258)
!1258 = !{!1259, !1264, !1265, !1274, !1279, !1284, !1289}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1257, file: !660, line: 101, baseType: !1260, size: 32)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !660, line: 76, baseType: !1261)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 32)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!104, !1203, !755}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1257, file: !660, line: 102, baseType: !1260, size: 32, offset: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1257, file: !660, line: 103, baseType: !1266, size: 32, offset: 64)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !660, line: 83, baseType: !1267)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!104, !1203, !755, !1270, !103}
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !660, line: 72, baseType: !1271)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 32)
!1272 = !DISubroutineType(types: !1273)
!1273 = !{null, !1203, !755, !103}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1257, file: !660, line: 104, baseType: !1275, size: 32, offset: 96)
!1275 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !660, line: 79, baseType: !1276)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!104, !1203, !755, !711}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1257, file: !660, line: 105, baseType: !1280, size: 32, offset: 128)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !660, line: 88, baseType: !1281)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 32)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{!659, !1203, !755}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1257, file: !660, line: 106, baseType: !1285, size: 32, offset: 160)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !660, line: 92, baseType: !1286)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 32)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{!104, !1203, !755, !781}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1257, file: !660, line: 107, baseType: !1290, size: 32, offset: 192)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !660, line: 96, baseType: !1291)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{!104, !1203, !755, !103}
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1295)
!1295 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!1297 = !{!1298, !1304, !1306, !1313, !1157, !1315, !1323, !1346, !1349, !1352, !1354}
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1159, file: !1300, line: 1914, type: !1301, isLocal: false, isDefinition: true, align: 16)
!1300 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 128, elements: !1302)
!1302 = !{!1303}
!1303 = !DISubrange(count: 8)
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1159, file: !1300, line: 1914, type: !1204, isLocal: false, isDefinition: true, align: 32)
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1159, file: !1300, line: 1914, type: !1308, isLocal: true, isDefinition: true, align: 32)
!1308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1309)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !166, line: 51, size: 64, elements: !1310)
!1310 = !{!1311, !1312}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1309, file: !166, line: 60, baseType: !1223, size: 32)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1309, file: !166, line: 65, baseType: !1203, size: 32, offset: 32)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1159, file: !1300, line: 1914, type: !1212, isLocal: true, isDefinition: true, align: 8)
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1159, file: !1300, line: 1914, type: !1317, isLocal: true, isDefinition: true)
!1317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1318, size: 64, elements: !367)
!1318 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1319)
!1319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !707, line: 343, size: 64, elements: !1320)
!1320 = !{!1321, !1322}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1319, file: !707, line: 344, baseType: !155, size: 32)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1319, file: !707, line: 345, baseType: !155, size: 32, offset: 32)
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1159, file: !1300, line: 1914, type: !1325, isLocal: true, isDefinition: true)
!1325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1326)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1327, line: 60, size: 64, elements: !1328)
!1327 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1328 = !{!1329, !1345}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1326, file: !1327, line: 69, baseType: !1330, size: 32)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 32)
!1331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1332)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1327, line: 50, size: 64, elements: !1333)
!1333 = !{!1334, !1343, !1344}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1332, file: !1327, line: 52, baseType: !1335, size: 32)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 32)
!1336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1337)
!1337 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1338, line: 37, baseType: !1339)
!1338 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1338, line: 32, size: 64, elements: !1340)
!1340 = !{!1341, !1342}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1339, file: !1338, line: 34, baseType: !155, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1339, file: !1338, line: 36, baseType: !155, size: 32, offset: 32)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1332, file: !1327, line: 54, baseType: !123, size: 8, offset: 32)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1332, file: !1327, line: 56, baseType: !123, size: 8, offset: 40)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1326, file: !1327, line: 71, baseType: !123, size: 8, offset: 32)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1159, file: !1300, line: 1914, type: !1348, isLocal: true, isDefinition: true)
!1348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1331, size: 64, elements: !367)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1159, file: !1300, line: 1914, type: !1351, isLocal: true, isDefinition: true)
!1351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1336, size: 128, elements: !264)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1159, file: !1300, line: 1539, type: !1196, isLocal: true, isDefinition: true)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1159, file: !1300, line: 1914, type: !1356, isLocal: true, isDefinition: true)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1357, line: 74, size: 64, elements: !1358)
!1357 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1358 = !{!1359, !1360}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1356, file: !1357, line: 76, baseType: !155, size: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1356, file: !1357, line: 78, baseType: !1203, size: 32, offset: 32)
!1361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1362)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1357, line: 22, size: 224, elements: !1363)
!1363 = !{!1364, !1365, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1362, file: !1357, line: 24, baseType: !1244, size: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1362, file: !1357, line: 26, baseType: !1366, size: 32, offset: 32)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 32)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1362, file: !1357, line: 28, baseType: !222, size: 32, offset: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1362, file: !1357, line: 30, baseType: !126, size: 8, offset: 96)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1362, file: !1357, line: 32, baseType: !104, size: 32, offset: 128)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1362, file: !1357, line: 34, baseType: !126, size: 8, offset: 160)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1362, file: !1357, line: 36, baseType: !126, size: 8, offset: 168)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1362, file: !1357, line: 38, baseType: !126, size: 8, offset: 176)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1362, file: !1357, line: 40, baseType: !126, size: 8, offset: 184)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1362, file: !1357, line: 41, baseType: !1375, size: 32, offset: 192)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 32)
!1376 = !DIGlobalVariableExpression(var: !1377, expr: !DIExpression())
!1377 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1378, file: !1456, line: 65, type: !154, isLocal: true, isDefinition: true)
!1378 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1379, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1380, retainedTypes: !1381, globals: !1453, splitDebugInlining: false, nameTableKind: None)
!1379 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!1380 = !{!447}
!1381 = !{!1382, !1384, !588, !123, !155, !1392, !1423}
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1383, line: 46, baseType: !302)
!1383 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !378, line: 770, baseType: !1386)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 764, size: 128, elements: !1387)
!1387 = !{!1388, !1389, !1390, !1391}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1386, file: !378, line: 766, baseType: !154, size: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1386, file: !378, line: 767, baseType: !154, size: 32, offset: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1386, file: !378, line: 768, baseType: !154, size: 32, offset: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1386, file: !378, line: 769, baseType: !382, size: 32, offset: 96)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 32)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !378, line: 426, baseType: !1394)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 411, size: 28704, elements: !1395)
!1395 = !{!1396, !1398, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1413, !1418, !1422}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1394, file: !378, line: 413, baseType: !1397, size: 256)
!1397 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 256, elements: !1302)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1394, file: !378, line: 414, baseType: !1399, size: 768, offset: 256)
!1399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 768, elements: !1400)
!1400 = !{!1401}
!1401 = !DISubrange(count: 24)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1394, file: !378, line: 415, baseType: !1397, size: 256, offset: 1024)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1394, file: !378, line: 416, baseType: !1399, size: 768, offset: 1280)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1394, file: !378, line: 417, baseType: !1397, size: 256, offset: 2048)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1394, file: !378, line: 418, baseType: !1399, size: 768, offset: 2304)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1394, file: !378, line: 419, baseType: !1397, size: 256, offset: 3072)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1394, file: !378, line: 420, baseType: !1399, size: 768, offset: 3328)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1394, file: !378, line: 421, baseType: !1397, size: 256, offset: 4096)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1394, file: !378, line: 422, baseType: !1410, size: 1792, offset: 4352)
!1410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 1792, elements: !1411)
!1411 = !{!1412}
!1412 = !DISubrange(count: 56)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1394, file: !378, line: 423, baseType: !1414, size: 1920, offset: 6144)
!1414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1415, size: 1920, elements: !1416)
!1415 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !123)
!1416 = !{!1417}
!1417 = !DISubrange(count: 240)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1394, file: !378, line: 424, baseType: !1419, size: 20608, offset: 8064)
!1419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 20608, elements: !1420)
!1420 = !{!1421}
!1421 = !DISubrange(count: 644)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1394, file: !378, line: 425, baseType: !154, size: 32, offset: 28672)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 32)
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !378, line: 468, baseType: !1425)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 445, size: 1120, elements: !1426)
!1426 = !{!1427, !1428, !1429, !1430, !1431, !1432, !1433, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1444, !1445, !1446, !1448, !1450, !1452}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1425, file: !378, line: 447, baseType: !382, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1425, file: !378, line: 448, baseType: !154, size: 32, offset: 32)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1425, file: !378, line: 449, baseType: !154, size: 32, offset: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1425, file: !378, line: 450, baseType: !154, size: 32, offset: 96)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1425, file: !378, line: 451, baseType: !154, size: 32, offset: 128)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1425, file: !378, line: 452, baseType: !154, size: 32, offset: 160)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1425, file: !378, line: 453, baseType: !1434, size: 96, offset: 192)
!1434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1415, size: 96, elements: !624)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1425, file: !378, line: 454, baseType: !154, size: 32, offset: 288)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1425, file: !378, line: 455, baseType: !154, size: 32, offset: 320)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1425, file: !378, line: 456, baseType: !154, size: 32, offset: 352)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1425, file: !378, line: 457, baseType: !154, size: 32, offset: 384)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1425, file: !378, line: 458, baseType: !154, size: 32, offset: 416)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1425, file: !378, line: 459, baseType: !154, size: 32, offset: 448)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1425, file: !378, line: 460, baseType: !154, size: 32, offset: 480)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1425, file: !378, line: 461, baseType: !1443, size: 64, offset: 512)
!1443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !382, size: 64, elements: !264)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1425, file: !378, line: 462, baseType: !382, size: 32, offset: 576)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1425, file: !378, line: 463, baseType: !382, size: 32, offset: 608)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1425, file: !378, line: 464, baseType: !1447, size: 128, offset: 640)
!1447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !382, size: 128, elements: !530)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1425, file: !378, line: 465, baseType: !1449, size: 160, offset: 768)
!1449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !382, size: 160, elements: !1027)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1425, file: !378, line: 466, baseType: !1451, size: 160, offset: 928)
!1451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 160, elements: !1027)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1425, file: !378, line: 467, baseType: !154, size: 32, offset: 1088)
!1453 = !{!1454, !1480, !1483, !1485, !1487, !1376}
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1378, file: !1456, line: 285, type: !1457, isLocal: true, isDefinition: true, align: 32)
!1456 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1458)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !166, line: 51, size: 64, elements: !1459)
!1459 = !{!1460, !1479}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1458, file: !166, line: 60, baseType: !1461, size: 32)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 32)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!104, !1464}
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 32)
!1465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1466)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !110, line: 378, size: 192, elements: !1467)
!1467 = !{!1468, !1469, !1470, !1471, !1477, !1478}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1466, file: !110, line: 380, baseType: !113, size: 32)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1466, file: !110, line: 382, baseType: !13, size: 32, offset: 32)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1466, file: !110, line: 384, baseType: !13, size: 32, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1466, file: !110, line: 386, baseType: !1472, size: 32, offset: 96)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 32)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !110, line: 351, size: 16, elements: !1474)
!1474 = !{!1475, !1476}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1473, file: !110, line: 359, baseType: !123, size: 8)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1473, file: !110, line: 364, baseType: !126, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1466, file: !110, line: 388, baseType: !103, size: 32, offset: 128)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1466, file: !110, line: 396, baseType: !129, size: 32, offset: 160)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1458, file: !166, line: 65, baseType: !1464, size: 32, offset: 32)
!1480 = !DIGlobalVariableExpression(var: !1481, expr: !DIExpression())
!1481 = distinct !DIGlobalVariable(name: "lock", scope: !1378, file: !1456, line: 34, type: !1482, isLocal: true, isDefinition: true)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !343, line: 43, elements: !344)
!1483 = !DIGlobalVariableExpression(var: !1484, expr: !DIExpression())
!1484 = distinct !DIGlobalVariable(name: "last_load", scope: !1378, file: !1456, line: 36, type: !155, isLocal: true, isDefinition: true)
!1485 = !DIGlobalVariableExpression(var: !1486, expr: !DIExpression())
!1486 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1378, file: !1456, line: 48, type: !155, isLocal: true, isDefinition: true)
!1487 = !DIGlobalVariableExpression(var: !1488, expr: !DIExpression())
!1488 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1378, file: !1456, line: 54, type: !155, isLocal: true, isDefinition: true)
!1489 = !DIGlobalVariableExpression(var: !1490, expr: !DIExpression())
!1490 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1491, file: !1573, line: 22, type: !1575, isLocal: true, isDefinition: true)
!1491 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1492, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1493, retainedTypes: !1494, globals: !1570, splitDebugInlining: false, nameTableKind: None)
!1492 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!1493 = !{!858, !864}
!1494 = !{!1495, !1559, !1564, !911, !864, !858, !1569, !103}
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1497)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !859, line: 523, size: 288, elements: !1498)
!1498 = !{!1499, !1518, !1522, !1526, !1530, !1531, !1532, !1536, !1555}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1497, file: !859, line: 524, baseType: !1500, size: 32)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 32)
!1501 = !DISubroutineType(types: !1502)
!1502 = !{!104, !1503, !899, !900}
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1504 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1505)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !110, line: 378, size: 192, elements: !1506)
!1506 = !{!1507, !1508, !1509, !1510, !1516, !1517}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1505, file: !110, line: 380, baseType: !113, size: 32)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1505, file: !110, line: 382, baseType: !13, size: 32, offset: 32)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1505, file: !110, line: 384, baseType: !13, size: 32, offset: 64)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1505, file: !110, line: 386, baseType: !1511, size: 32, offset: 96)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 32)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !110, line: 351, size: 16, elements: !1513)
!1513 = !{!1514, !1515}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1512, file: !110, line: 359, baseType: !123, size: 8)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1512, file: !110, line: 364, baseType: !126, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1505, file: !110, line: 388, baseType: !103, size: 32, offset: 128)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1505, file: !110, line: 396, baseType: !129, size: 32, offset: 160)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1497, file: !859, line: 530, baseType: !1519, size: 32, offset: 32)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 32)
!1520 = !DISubroutineType(types: !1521)
!1521 = !{!104, !1503, !905}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1497, file: !859, line: 532, baseType: !1523, size: 32, offset: 64)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!104, !1503, !911, !906}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1497, file: !859, line: 535, baseType: !1527, size: 32, offset: 96)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!104, !1503, !911}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1497, file: !859, line: 537, baseType: !1527, size: 32, offset: 128)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1497, file: !859, line: 539, baseType: !1527, size: 32, offset: 160)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1497, file: !859, line: 541, baseType: !1533, size: 32, offset: 192)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 32)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{!104, !1503, !899, !858, !864}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1497, file: !859, line: 544, baseType: !1537, size: 32, offset: 224)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{!104, !1503, !1540, !126}
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 32)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !859, line: 478, size: 96, elements: !1542)
!1542 = !{!1543, !1549, !1554}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1541, file: !859, line: 482, baseType: !1544, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !931, line: 33, baseType: !1545)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !931, line: 29, size: 32, elements: !1546)
!1546 = !{!1547}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1545, file: !931, line: 30, baseType: !1548, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1541, file: !859, line: 485, baseType: !1550, size: 32, offset: 32)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !859, line: 464, baseType: !1551)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{null, !1503, !1540, !911}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1541, file: !859, line: 493, baseType: !911, size: 32, offset: 64)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1497, file: !859, line: 547, baseType: !1556, size: 32, offset: 256)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 32)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!155, !1503}
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1561)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !859, line: 428, size: 32, elements: !1562)
!1562 = !{!1563}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1561, file: !859, line: 434, baseType: !911, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1566)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !859, line: 441, size: 32, elements: !1567)
!1567 = !{!1568}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1566, file: !859, line: 447, baseType: !911, size: 32)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 32)
!1570 = !{!1571, !1489}
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1572 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1491, file: !1573, line: 37, type: !1574, isLocal: true, isDefinition: true)
!1573 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !222)
!1575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1576, size: 352, elements: !1577)
!1576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1503)
!1577 = !{!1578}
!1578 = !DISubrange(count: 11)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1581, file: !1623, line: 139, type: !1630, isLocal: false, isDefinition: true)
!1581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1582, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1583, globals: !1620, splitDebugInlining: false, nameTableKind: None)
!1582 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!1583 = !{!1584}
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 32)
!1585 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !150, line: 370, baseType: !1586)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 336, size: 1152, elements: !1587)
!1587 = !{!1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1586, file: !150, line: 338, baseType: !154, size: 32)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1586, file: !150, line: 339, baseType: !154, size: 32, offset: 32)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1586, file: !150, line: 340, baseType: !154, size: 32, offset: 64)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1586, file: !150, line: 341, baseType: !154, size: 32, offset: 96)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1586, file: !150, line: 342, baseType: !154, size: 32, offset: 128)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1586, file: !150, line: 343, baseType: !154, size: 32, offset: 160)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1586, file: !150, line: 344, baseType: !154, size: 32, offset: 192)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1586, file: !150, line: 345, baseType: !155, size: 32, offset: 224)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1586, file: !150, line: 346, baseType: !154, size: 32, offset: 256)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1586, file: !150, line: 347, baseType: !154, size: 32, offset: 288)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1586, file: !150, line: 348, baseType: !682, size: 64, offset: 320)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1586, file: !150, line: 349, baseType: !154, size: 32, offset: 384)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1586, file: !150, line: 350, baseType: !154, size: 32, offset: 416)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1586, file: !150, line: 351, baseType: !154, size: 32, offset: 448)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1586, file: !150, line: 352, baseType: !155, size: 32, offset: 480)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1586, file: !150, line: 353, baseType: !154, size: 32, offset: 512)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1586, file: !150, line: 354, baseType: !154, size: 32, offset: 544)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1586, file: !150, line: 355, baseType: !682, size: 64, offset: 576)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1586, file: !150, line: 356, baseType: !154, size: 32, offset: 640)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1586, file: !150, line: 357, baseType: !154, size: 32, offset: 672)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1586, file: !150, line: 358, baseType: !154, size: 32, offset: 704)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1586, file: !150, line: 359, baseType: !155, size: 32, offset: 736)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1586, file: !150, line: 360, baseType: !154, size: 32, offset: 768)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1586, file: !150, line: 361, baseType: !154, size: 32, offset: 800)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1586, file: !150, line: 362, baseType: !682, size: 64, offset: 832)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1586, file: !150, line: 363, baseType: !154, size: 32, offset: 896)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1586, file: !150, line: 364, baseType: !154, size: 32, offset: 928)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1586, file: !150, line: 365, baseType: !682, size: 64, offset: 960)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1586, file: !150, line: 366, baseType: !154, size: 32, offset: 1024)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1586, file: !150, line: 367, baseType: !154, size: 32, offset: 1056)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1586, file: !150, line: 368, baseType: !703, size: 32, offset: 1088)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1586, file: !150, line: 369, baseType: !154, size: 32, offset: 1120)
!1620 = !{!1621, !1624, !1579}
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1581, file: !1623, line: 137, type: !155, isLocal: false, isDefinition: true)
!1623 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1581, file: !1623, line: 138, type: !1626, isLocal: false, isDefinition: true)
!1626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1627, size: 128, elements: !1628)
!1627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!1628 = !{!1629}
!1629 = !DISubrange(count: 16)
!1630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1627, size: 64, elements: !1302)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "__devstate_hello_world", scope: !1633, file: !1638, line: 46, type: !1649, isLocal: true, isDefinition: true, align: 8)
!1633 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1634, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1635, splitDebugInlining: false, nameTableKind: None)
!1634 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/application_development/out_of_tree_driver/hello_world_module/zephyr/./hello_world_driver.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!1635 = !{!1636, !1639, !1655, !1666, !1631}
!1636 = !DIGlobalVariableExpression(var: !1637, expr: !DIExpression())
!1637 = distinct !DIGlobalVariable(name: "__devicehdl_hello_world", scope: !1633, file: !1638, line: 46, type: !644, isLocal: false, isDefinition: true, align: 16)
!1638 = !DIFile(filename: "zephyr/samples/application_development/out_of_tree_driver/hello_world_module/zephyr/hello_world_driver.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1639 = !DIGlobalVariableExpression(var: !1640, expr: !DIExpression())
!1640 = distinct !DIGlobalVariable(name: "__device_hello_world", scope: !1633, file: !1638, line: 46, type: !1641, isLocal: true, isDefinition: true, align: 32)
!1641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1642)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !110, line: 378, size: 192, elements: !1643)
!1643 = !{!1644, !1645, !1646, !1647, !1653, !1654}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1642, file: !110, line: 380, baseType: !113, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1642, file: !110, line: 382, baseType: !13, size: 32, offset: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1642, file: !110, line: 384, baseType: !13, size: 32, offset: 64)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1642, file: !110, line: 386, baseType: !1648, size: 32, offset: 96)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 32)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !110, line: 351, size: 16, elements: !1650)
!1650 = !{!1651, !1652}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1649, file: !110, line: 359, baseType: !123, size: 8)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1649, file: !110, line: 364, baseType: !126, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1642, file: !110, line: 388, baseType: !103, size: 32, offset: 128)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1642, file: !110, line: 396, baseType: !129, size: 32, offset: 160)
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "__init___device_hello_world", scope: !1633, file: !1638, line: 46, type: !1657, isLocal: true, isDefinition: true, align: 32)
!1657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1658)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !166, line: 51, size: 64, elements: !1659)
!1659 = !{!1660, !1665}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1658, file: !166, line: 60, baseType: !1661, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 32)
!1662 = !DISubroutineType(types: !1663)
!1663 = !{!104, !1664}
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 32)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1658, file: !166, line: 65, baseType: !1664, size: 32, offset: 32)
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(name: "data", scope: !1633, file: !1638, line: 19, type: !1668, isLocal: true, isDefinition: true)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hello_world_dev_data", file: !1638, line: 17, size: 32, elements: !1669)
!1669 = !{!1670}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !1668, file: !1638, line: 18, baseType: !155, size: 32)
!1671 = !DIGlobalVariableExpression(var: !1672, expr: !DIExpression())
!1672 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1673, file: !1676, line: 23, type: !1677, isLocal: false, isDefinition: true)
!1673 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1674, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !102, globals: !1675, splitDebugInlining: false, nameTableKind: None)
!1674 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!1675 = !{!1671}
!1676 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !104)
!1678 = !DIGlobalVariableExpression(var: !1679, expr: !DIExpression())
!1679 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1680, file: !1684, line: 86, type: !1934, isLocal: false, isDefinition: true, align: 512)
!1680 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1681, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1682, retainedTypes: !1691, globals: !1765, splitDebugInlining: false, nameTableKind: None)
!1681 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!1682 = !{!1683, !30, !447}
!1683 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1684, line: 63, baseType: !32, size: 32, elements: !1685)
!1684 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1685 = !{!1686, !1687, !1688, !1689, !1690}
!1686 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1687 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1688 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1689 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1690 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1691 = !{!222, !103, !104, !1692, !981, !155, !1723, !588, !123, !1748}
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1694)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1695, line: 51, size: 64, elements: !1696)
!1695 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1696 = !{!1697, !1718}
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1694, file: !1695, line: 52, baseType: !1698, size: 32)
!1698 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1695, line: 38, baseType: !1699)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 32)
!1700 = !DISubroutineType(types: !1701)
!1701 = !{!104, !1702, !1717, !287}
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 32)
!1703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1704)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !110, line: 378, size: 192, elements: !1705)
!1705 = !{!1706, !1707, !1708, !1709, !1715, !1716}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1704, file: !110, line: 380, baseType: !113, size: 32)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1704, file: !110, line: 382, baseType: !13, size: 32, offset: 32)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1704, file: !110, line: 384, baseType: !13, size: 32, offset: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1704, file: !110, line: 386, baseType: !1710, size: 32, offset: 96)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 32)
!1711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !110, line: 351, size: 16, elements: !1712)
!1712 = !{!1713, !1714}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1711, file: !110, line: 359, baseType: !123, size: 8)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1711, file: !110, line: 364, baseType: !126, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1704, file: !110, line: 388, baseType: !103, size: 32, offset: 128)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1704, file: !110, line: 396, baseType: !129, size: 32, offset: 160)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 32)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1694, file: !1695, line: 53, baseType: !1719, size: 32, offset: 32)
!1719 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1695, line: 47, baseType: !1720)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 32)
!1721 = !DISubroutineType(types: !1722)
!1722 = !{!104, !1702, !1717, !287, !155}
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !378, line: 468, baseType: !1725)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 445, size: 1120, elements: !1726)
!1726 = !{!1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1725, file: !378, line: 447, baseType: !382, size: 32)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1725, file: !378, line: 448, baseType: !154, size: 32, offset: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1725, file: !378, line: 449, baseType: !154, size: 32, offset: 64)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1725, file: !378, line: 450, baseType: !154, size: 32, offset: 96)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1725, file: !378, line: 451, baseType: !154, size: 32, offset: 128)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1725, file: !378, line: 452, baseType: !154, size: 32, offset: 160)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1725, file: !378, line: 453, baseType: !1434, size: 96, offset: 192)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1725, file: !378, line: 454, baseType: !154, size: 32, offset: 288)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1725, file: !378, line: 455, baseType: !154, size: 32, offset: 320)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1725, file: !378, line: 456, baseType: !154, size: 32, offset: 352)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1725, file: !378, line: 457, baseType: !154, size: 32, offset: 384)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1725, file: !378, line: 458, baseType: !154, size: 32, offset: 416)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1725, file: !378, line: 459, baseType: !154, size: 32, offset: 448)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1725, file: !378, line: 460, baseType: !154, size: 32, offset: 480)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1725, file: !378, line: 461, baseType: !1443, size: 64, offset: 512)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1725, file: !378, line: 462, baseType: !382, size: 32, offset: 576)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1725, file: !378, line: 463, baseType: !382, size: 32, offset: 608)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1725, file: !378, line: 464, baseType: !1447, size: 128, offset: 640)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1725, file: !378, line: 465, baseType: !1449, size: 160, offset: 768)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1725, file: !378, line: 466, baseType: !1451, size: 160, offset: 928)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1725, file: !378, line: 467, baseType: !154, size: 32, offset: 1088)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 32)
!1749 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !378, line: 426, baseType: !1750)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 411, size: 28704, elements: !1751)
!1751 = !{!1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1750, file: !378, line: 413, baseType: !1397, size: 256)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1750, file: !378, line: 414, baseType: !1399, size: 768, offset: 256)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1750, file: !378, line: 415, baseType: !1397, size: 256, offset: 1024)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1750, file: !378, line: 416, baseType: !1399, size: 768, offset: 1280)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1750, file: !378, line: 417, baseType: !1397, size: 256, offset: 2048)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1750, file: !378, line: 418, baseType: !1399, size: 768, offset: 2304)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1750, file: !378, line: 419, baseType: !1397, size: 256, offset: 3072)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1750, file: !378, line: 420, baseType: !1399, size: 768, offset: 3328)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1750, file: !378, line: 421, baseType: !1397, size: 256, offset: 4096)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1750, file: !378, line: 422, baseType: !1410, size: 1792, offset: 4352)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1750, file: !378, line: 423, baseType: !1414, size: 1920, offset: 6144)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1750, file: !378, line: 424, baseType: !1419, size: 20608, offset: 8064)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1750, file: !378, line: 425, baseType: !154, size: 32, offset: 28672)
!1765 = !{!1766, !1888, !1897, !1899, !1678, !1902, !1904, !1909}
!1766 = !DIGlobalVariableExpression(var: !1767, expr: !DIExpression())
!1767 = distinct !DIGlobalVariable(name: "_kernel", scope: !1680, file: !1684, line: 40, type: !1768, isLocal: false, isDefinition: true)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !269, line: 158, size: 288, elements: !1769)
!1769 = !{!1770, !1883}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1768, file: !269, line: 159, baseType: !1771, size: 192)
!1771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1772, size: 192, elements: !367)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !269, line: 100, size: 192, elements: !1773)
!1773 = !{!1774, !1775, !1776, !1877, !1878, !1879, !1880}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1772, file: !269, line: 102, baseType: !155, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1772, file: !269, line: 105, baseType: !981, size: 32, offset: 32)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1772, file: !269, line: 108, baseType: !1777, size: 32, offset: 64)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 32)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !233, line: 245, size: 1024, elements: !1779)
!1779 = !{!1780, !1838, !1850, !1851, !1852, !1853, !1859, !1872}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1778, file: !233, line: 247, baseType: !1781, size: 384)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !233, line: 57, size: 384, elements: !1782)
!1782 = !{!1783, !1807, !1814, !1815, !1816, !1825, !1826, !1827}
!1783 = !DIDerivedType(tag: DW_TAG_member, scope: !1781, file: !233, line: 60, baseType: !1784, size: 64)
!1784 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1781, file: !233, line: 60, size: 64, elements: !1785)
!1785 = !{!1786, !1801}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1784, file: !233, line: 61, baseType: !1787, size: 64)
!1787 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !243, line: 49, baseType: !1788)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !243, line: 37, size: 64, elements: !1789)
!1789 = !{!1790, !1796}
!1790 = !DIDerivedType(tag: DW_TAG_member, scope: !1788, file: !243, line: 38, baseType: !1791, size: 32)
!1791 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1788, file: !243, line: 38, size: 32, elements: !1792)
!1792 = !{!1793, !1795}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1791, file: !243, line: 39, baseType: !1794, size: 32)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 32)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1791, file: !243, line: 40, baseType: !1794, size: 32)
!1796 = !DIDerivedType(tag: DW_TAG_member, scope: !1788, file: !243, line: 42, baseType: !1797, size: 32, offset: 32)
!1797 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1788, file: !243, line: 42, size: 32, elements: !1798)
!1798 = !{!1799, !1800}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1797, file: !243, line: 43, baseType: !1794, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1797, file: !243, line: 44, baseType: !1794, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1784, file: !233, line: 62, baseType: !1802, size: 64)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !259, line: 49, size: 64, elements: !1803)
!1803 = !{!1804}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1802, file: !259, line: 50, baseType: !1805, size: 64)
!1805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1806, size: 64, elements: !264)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1781, file: !233, line: 68, baseType: !1808, size: 32, offset: 64)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 32)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !269, line: 233, baseType: !1810)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !269, line: 231, size: 64, elements: !1811)
!1811 = !{!1812}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1810, file: !269, line: 232, baseType: !1813, size: 64)
!1813 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !243, line: 48, baseType: !1788)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1781, file: !233, line: 71, baseType: !123, size: 8, offset: 96)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1781, file: !233, line: 74, baseType: !123, size: 8, offset: 104)
!1816 = !DIDerivedType(tag: DW_TAG_member, scope: !1781, file: !233, line: 90, baseType: !1817, size: 16, offset: 112)
!1817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1781, file: !233, line: 90, size: 16, elements: !1818)
!1818 = !{!1819, !1824}
!1819 = !DIDerivedType(tag: DW_TAG_member, scope: !1817, file: !233, line: 91, baseType: !1820, size: 16)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1817, file: !233, line: 91, size: 16, elements: !1821)
!1821 = !{!1822, !1823}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1820, file: !233, line: 96, baseType: !283, size: 8)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1820, file: !233, line: 97, baseType: !123, size: 8, offset: 8)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1817, file: !233, line: 100, baseType: !287, size: 16)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1781, file: !233, line: 107, baseType: !155, size: 32, offset: 128)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1781, file: !233, line: 127, baseType: !103, size: 32, offset: 160)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1781, file: !233, line: 131, baseType: !1828, size: 192, offset: 192)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !269, line: 244, size: 192, elements: !1829)
!1829 = !{!1830, !1831, !1837}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1828, file: !269, line: 245, baseType: !1787, size: 64)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1828, file: !269, line: 246, baseType: !1832, size: 32, offset: 64)
!1832 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !269, line: 242, baseType: !1833)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 32)
!1834 = !DISubroutineType(types: !1835)
!1835 = !{null, !1836}
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 32)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1828, file: !269, line: 249, baseType: !302, size: 64, offset: 128)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1778, file: !233, line: 250, baseType: !1839, size: 288, offset: 384)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !306, line: 25, size: 288, elements: !1840)
!1840 = !{!1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1839, file: !306, line: 26, baseType: !155, size: 32)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1839, file: !306, line: 27, baseType: !155, size: 32, offset: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1839, file: !306, line: 28, baseType: !155, size: 32, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1839, file: !306, line: 29, baseType: !155, size: 32, offset: 96)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1839, file: !306, line: 30, baseType: !155, size: 32, offset: 128)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1839, file: !306, line: 31, baseType: !155, size: 32, offset: 160)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1839, file: !306, line: 32, baseType: !155, size: 32, offset: 192)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1839, file: !306, line: 33, baseType: !155, size: 32, offset: 224)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1839, file: !306, line: 34, baseType: !155, size: 32, offset: 256)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1778, file: !233, line: 253, baseType: !103, size: 32, offset: 672)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1778, file: !233, line: 256, baseType: !1809, size: 64, offset: 704)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1778, file: !233, line: 294, baseType: !104, size: 32, offset: 768)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1778, file: !233, line: 300, baseType: !1854, size: 96, offset: 800)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !233, line: 149, size: 96, elements: !1855)
!1855 = !{!1856, !1857, !1858}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1854, file: !233, line: 153, baseType: !22, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1854, file: !233, line: 162, baseType: !222, size: 32, offset: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1854, file: !233, line: 168, baseType: !222, size: 32, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1778, file: !233, line: 325, baseType: !1860, size: 32, offset: 896)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !329, line: 5073, size: 160, elements: !1862)
!1862 = !{!1863, !1869, !1870}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1861, file: !329, line: 5074, baseType: !1864, size: 96)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !333, line: 56, size: 96, elements: !1865)
!1865 = !{!1866, !1867, !1868}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1864, file: !333, line: 57, baseType: !336, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1864, file: !333, line: 58, baseType: !103, size: 32, offset: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1864, file: !333, line: 59, baseType: !222, size: 32, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1861, file: !329, line: 5075, baseType: !1809, size: 64, offset: 96)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1861, file: !329, line: 5076, baseType: !1871, offset: 160)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !343, line: 43, elements: !344)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1778, file: !233, line: 343, baseType: !1873, size: 64, offset: 928)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !306, line: 60, size: 64, elements: !1874)
!1874 = !{!1875, !1876}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1873, file: !306, line: 63, baseType: !155, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1873, file: !306, line: 66, baseType: !155, size: 32, offset: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1772, file: !269, line: 111, baseType: !1777, size: 32, offset: 96)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1772, file: !269, line: 124, baseType: !104, size: 32, offset: 128)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1772, file: !269, line: 127, baseType: !123, size: 8, offset: 160)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1772, file: !269, line: 153, baseType: !1881, offset: 168)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1882, line: 33, elements: !344)
!1882 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1768, file: !269, line: 170, baseType: !1884, size: 96, offset: 192)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !269, line: 83, size: 96, elements: !1885)
!1885 = !{!1886, !1887}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1884, file: !269, line: 86, baseType: !1777, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1884, file: !269, line: 90, baseType: !1813, size: 64, offset: 32)
!1888 = !DIGlobalVariableExpression(var: !1889, expr: !DIExpression())
!1889 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1680, file: !1684, line: 43, type: !1890, isLocal: false, isDefinition: true, align: 512)
!1890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 8704, elements: !1895)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1892, line: 47, size: 8, elements: !1893)
!1892 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1893 = !{!1894}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1891, file: !1892, line: 48, baseType: !115, size: 8)
!1895 = !{!1896}
!1896 = !DISubrange(count: 1088)
!1897 = !DIGlobalVariableExpression(var: !1898, expr: !DIExpression())
!1898 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1680, file: !1684, line: 44, type: !1778, isLocal: false, isDefinition: true)
!1899 = !DIGlobalVariableExpression(var: !1900, expr: !DIExpression())
!1900 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1680, file: !1684, line: 48, type: !1901, isLocal: false, isDefinition: true)
!1901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1778, size: 1024, elements: !367)
!1902 = !DIGlobalVariableExpression(var: !1903, expr: !DIExpression())
!1903 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1680, file: !1684, line: 217, type: !126, isLocal: false, isDefinition: true)
!1904 = !DIGlobalVariableExpression(var: !1905, expr: !DIExpression())
!1905 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1680, file: !1684, line: 50, type: !1906, isLocal: true, isDefinition: true, align: 512)
!1906 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 3072, elements: !1907)
!1907 = !{!368, !1908}
!1908 = !DISubrange(count: 384)
!1909 = !DIGlobalVariableExpression(var: !1910, expr: !DIExpression())
!1910 = distinct !DIGlobalVariable(name: "levels", scope: !1911, file: !1684, line: 232, type: !1931, isLocal: true, isDefinition: true)
!1911 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1684, file: !1684, line: 230, type: !1912, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !1914)
!1912 = !DISubroutineType(types: !1913)
!1913 = !{null, !1683}
!1914 = !{!1915, !1916, !1926, !1930}
!1915 = !DILocalVariable(name: "level", arg: 1, scope: !1911, file: !1684, line: 230, type: !1683)
!1916 = !DILocalVariable(name: "entry", scope: !1911, file: !1684, line: 244, type: !1917)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 32)
!1918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1919)
!1919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !166, line: 51, size: 64, elements: !1920)
!1920 = !{!1921, !1925}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1919, file: !166, line: 60, baseType: !1922, size: 32)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 32)
!1923 = !DISubroutineType(types: !1924)
!1924 = !{!104, !1702}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1919, file: !166, line: 65, baseType: !1702, size: 32, offset: 32)
!1926 = !DILocalVariable(name: "dev", scope: !1927, file: !1684, line: 247, type: !1702)
!1927 = distinct !DILexicalBlock(scope: !1928, file: !1684, line: 246, column: 64)
!1928 = distinct !DILexicalBlock(scope: !1929, file: !1684, line: 246, column: 2)
!1929 = distinct !DILexicalBlock(scope: !1911, file: !1684, line: 246, column: 2)
!1930 = !DILocalVariable(name: "rc", scope: !1927, file: !1684, line: 248, type: !104)
!1931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1917, size: 192, elements: !1932)
!1932 = !{!1933}
!1933 = !DISubrange(count: 6)
!1934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 16896, elements: !1935)
!1935 = !{!368, !1936}
!1936 = !DISubrange(count: 2112)
!1937 = !DIGlobalVariableExpression(var: !1938, expr: !DIExpression())
!1938 = distinct !DIGlobalVariable(name: "states_str", scope: !1939, file: !1940, line: 276, type: !2061, isLocal: true, isDefinition: true)
!1939 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1940, file: !1940, line: 271, type: !1941, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !2052)
!1940 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1941 = !DISubroutineType(types: !1942)
!1942 = !{!113, !1943, !981, !222}
!1943 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !233, line: 347, baseType: !1944)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 32)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !233, line: 245, size: 1024, elements: !1946)
!1946 = !{!1947, !2005, !2017, !2018, !2019, !2020, !2026, !2039}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1945, file: !233, line: 247, baseType: !1948, size: 384)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !233, line: 57, size: 384, elements: !1949)
!1949 = !{!1950, !1974, !1981, !1982, !1983, !1992, !1993, !1994}
!1950 = !DIDerivedType(tag: DW_TAG_member, scope: !1948, file: !233, line: 60, baseType: !1951, size: 64)
!1951 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1948, file: !233, line: 60, size: 64, elements: !1952)
!1952 = !{!1953, !1968}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1951, file: !233, line: 61, baseType: !1954, size: 64)
!1954 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !243, line: 49, baseType: !1955)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !243, line: 37, size: 64, elements: !1956)
!1956 = !{!1957, !1963}
!1957 = !DIDerivedType(tag: DW_TAG_member, scope: !1955, file: !243, line: 38, baseType: !1958, size: 32)
!1958 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1955, file: !243, line: 38, size: 32, elements: !1959)
!1959 = !{!1960, !1962}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1958, file: !243, line: 39, baseType: !1961, size: 32)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 32)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1958, file: !243, line: 40, baseType: !1961, size: 32)
!1963 = !DIDerivedType(tag: DW_TAG_member, scope: !1955, file: !243, line: 42, baseType: !1964, size: 32, offset: 32)
!1964 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1955, file: !243, line: 42, size: 32, elements: !1965)
!1965 = !{!1966, !1967}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1964, file: !243, line: 43, baseType: !1961, size: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1964, file: !243, line: 44, baseType: !1961, size: 32)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1951, file: !233, line: 62, baseType: !1969, size: 64)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !259, line: 49, size: 64, elements: !1970)
!1970 = !{!1971}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1969, file: !259, line: 50, baseType: !1972, size: 64)
!1972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1973, size: 64, elements: !264)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1948, file: !233, line: 68, baseType: !1975, size: 32, offset: 64)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !269, line: 233, baseType: !1977)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !269, line: 231, size: 64, elements: !1978)
!1978 = !{!1979}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1977, file: !269, line: 232, baseType: !1980, size: 64)
!1980 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !243, line: 48, baseType: !1955)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1948, file: !233, line: 71, baseType: !123, size: 8, offset: 96)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1948, file: !233, line: 74, baseType: !123, size: 8, offset: 104)
!1983 = !DIDerivedType(tag: DW_TAG_member, scope: !1948, file: !233, line: 90, baseType: !1984, size: 16, offset: 112)
!1984 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1948, file: !233, line: 90, size: 16, elements: !1985)
!1985 = !{!1986, !1991}
!1986 = !DIDerivedType(tag: DW_TAG_member, scope: !1984, file: !233, line: 91, baseType: !1987, size: 16)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1984, file: !233, line: 91, size: 16, elements: !1988)
!1988 = !{!1989, !1990}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1987, file: !233, line: 96, baseType: !283, size: 8)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1987, file: !233, line: 97, baseType: !123, size: 8, offset: 8)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1984, file: !233, line: 100, baseType: !287, size: 16)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1948, file: !233, line: 107, baseType: !155, size: 32, offset: 128)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1948, file: !233, line: 127, baseType: !103, size: 32, offset: 160)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1948, file: !233, line: 131, baseType: !1995, size: 192, offset: 192)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !269, line: 244, size: 192, elements: !1996)
!1996 = !{!1997, !1998, !2004}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1995, file: !269, line: 245, baseType: !1954, size: 64)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1995, file: !269, line: 246, baseType: !1999, size: 32, offset: 64)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !269, line: 242, baseType: !2000)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 32)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{null, !2003}
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1995, file: !269, line: 249, baseType: !302, size: 64, offset: 128)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1945, file: !233, line: 250, baseType: !2006, size: 288, offset: 384)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !306, line: 25, size: 288, elements: !2007)
!2007 = !{!2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2006, file: !306, line: 26, baseType: !155, size: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2006, file: !306, line: 27, baseType: !155, size: 32, offset: 32)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2006, file: !306, line: 28, baseType: !155, size: 32, offset: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2006, file: !306, line: 29, baseType: !155, size: 32, offset: 96)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2006, file: !306, line: 30, baseType: !155, size: 32, offset: 128)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2006, file: !306, line: 31, baseType: !155, size: 32, offset: 160)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2006, file: !306, line: 32, baseType: !155, size: 32, offset: 192)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2006, file: !306, line: 33, baseType: !155, size: 32, offset: 224)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2006, file: !306, line: 34, baseType: !155, size: 32, offset: 256)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1945, file: !233, line: 253, baseType: !103, size: 32, offset: 672)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1945, file: !233, line: 256, baseType: !1976, size: 64, offset: 704)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1945, file: !233, line: 294, baseType: !104, size: 32, offset: 768)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1945, file: !233, line: 300, baseType: !2021, size: 96, offset: 800)
!2021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !233, line: 149, size: 96, elements: !2022)
!2022 = !{!2023, !2024, !2025}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2021, file: !233, line: 153, baseType: !22, size: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2021, file: !233, line: 162, baseType: !222, size: 32, offset: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2021, file: !233, line: 168, baseType: !222, size: 32, offset: 64)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1945, file: !233, line: 325, baseType: !2027, size: 32, offset: 896)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 32)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !329, line: 5073, size: 160, elements: !2029)
!2029 = !{!2030, !2036, !2037}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2028, file: !329, line: 5074, baseType: !2031, size: 96)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !333, line: 56, size: 96, elements: !2032)
!2032 = !{!2033, !2034, !2035}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2031, file: !333, line: 57, baseType: !336, size: 32)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2031, file: !333, line: 58, baseType: !103, size: 32, offset: 32)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2031, file: !333, line: 59, baseType: !222, size: 32, offset: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2028, file: !329, line: 5075, baseType: !1976, size: 64, offset: 96)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2028, file: !329, line: 5076, baseType: !2038, offset: 160)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !343, line: 43, elements: !344)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1945, file: !233, line: 343, baseType: !2040, size: 64, offset: 928)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !306, line: 60, size: 64, elements: !2041)
!2041 = !{!2042, !2043}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2040, file: !306, line: 63, baseType: !155, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2040, file: !306, line: 66, baseType: !155, size: 32, offset: 32)
!2044 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2045, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2046, globals: !2048, splitDebugInlining: false, nameTableKind: None)
!2045 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2046 = !{!103, !113, !1382, !123, !104, !2047, !24, !222, !981, !22, !155, !1294}
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 32)
!2048 = !{!1937, !2049}
!2049 = !DIGlobalVariableExpression(var: !2050, expr: !DIExpression())
!2050 = distinct !DIGlobalVariable(name: "states_sz", scope: !1939, file: !1940, line: 279, type: !2051, isLocal: true, isDefinition: true)
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1574, size: 256, elements: !1302)
!2052 = !{!2053, !2054, !2055, !2056, !2057, !2058, !2059}
!2053 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1939, file: !1940, line: 271, type: !1943)
!2054 = !DILocalVariable(name: "buf", arg: 2, scope: !1939, file: !1940, line: 271, type: !981)
!2055 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1939, file: !1940, line: 271, type: !222)
!2056 = !DILocalVariable(name: "off", scope: !1939, file: !1940, line: 273, type: !222)
!2057 = !DILocalVariable(name: "bit", scope: !1939, file: !1940, line: 274, type: !123)
!2058 = !DILocalVariable(name: "thread_state", scope: !1939, file: !1940, line: 275, type: !123)
!2059 = !DILocalVariable(name: "index", scope: !2060, file: !1940, line: 293, type: !123)
!2060 = distinct !DILexicalBlock(scope: !1939, file: !1940, line: 293, column: 2)
!2061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 256, elements: !1302)
!2062 = !DIGlobalVariableExpression(var: !2063, expr: !DIExpression())
!2063 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2064, file: !2172, line: 56, type: !2161, isLocal: false, isDefinition: true)
!2064 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2065, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2066, globals: !2169, splitDebugInlining: false, nameTableKind: None)
!2065 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2066 = !{!2067, !981, !103, !2167, !1717, !1382, !588, !104, !155, !1294, !2168}
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 32)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !233, line: 245, size: 1024, elements: !2069)
!2069 = !{!2070, !2128, !2140, !2141, !2142, !2143, !2149, !2162}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2068, file: !233, line: 247, baseType: !2071, size: 384)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !233, line: 57, size: 384, elements: !2072)
!2072 = !{!2073, !2097, !2104, !2105, !2106, !2115, !2116, !2117}
!2073 = !DIDerivedType(tag: DW_TAG_member, scope: !2071, file: !233, line: 60, baseType: !2074, size: 64)
!2074 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2071, file: !233, line: 60, size: 64, elements: !2075)
!2075 = !{!2076, !2091}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2074, file: !233, line: 61, baseType: !2077, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !243, line: 49, baseType: !2078)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !243, line: 37, size: 64, elements: !2079)
!2079 = !{!2080, !2086}
!2080 = !DIDerivedType(tag: DW_TAG_member, scope: !2078, file: !243, line: 38, baseType: !2081, size: 32)
!2081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2078, file: !243, line: 38, size: 32, elements: !2082)
!2082 = !{!2083, !2085}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2081, file: !243, line: 39, baseType: !2084, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2081, file: !243, line: 40, baseType: !2084, size: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, scope: !2078, file: !243, line: 42, baseType: !2087, size: 32, offset: 32)
!2087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2078, file: !243, line: 42, size: 32, elements: !2088)
!2088 = !{!2089, !2090}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2087, file: !243, line: 43, baseType: !2084, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2087, file: !243, line: 44, baseType: !2084, size: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2074, file: !233, line: 62, baseType: !2092, size: 64)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !259, line: 49, size: 64, elements: !2093)
!2093 = !{!2094}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2092, file: !259, line: 50, baseType: !2095, size: 64)
!2095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2096, size: 64, elements: !264)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 32)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2071, file: !233, line: 68, baseType: !2098, size: 32, offset: 64)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 32)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !269, line: 233, baseType: !2100)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !269, line: 231, size: 64, elements: !2101)
!2101 = !{!2102}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2100, file: !269, line: 232, baseType: !2103, size: 64)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !243, line: 48, baseType: !2078)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2071, file: !233, line: 71, baseType: !123, size: 8, offset: 96)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2071, file: !233, line: 74, baseType: !123, size: 8, offset: 104)
!2106 = !DIDerivedType(tag: DW_TAG_member, scope: !2071, file: !233, line: 90, baseType: !2107, size: 16, offset: 112)
!2107 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2071, file: !233, line: 90, size: 16, elements: !2108)
!2108 = !{!2109, !2114}
!2109 = !DIDerivedType(tag: DW_TAG_member, scope: !2107, file: !233, line: 91, baseType: !2110, size: 16)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2107, file: !233, line: 91, size: 16, elements: !2111)
!2111 = !{!2112, !2113}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2110, file: !233, line: 96, baseType: !283, size: 8)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2110, file: !233, line: 97, baseType: !123, size: 8, offset: 8)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2107, file: !233, line: 100, baseType: !287, size: 16)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2071, file: !233, line: 107, baseType: !155, size: 32, offset: 128)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2071, file: !233, line: 127, baseType: !103, size: 32, offset: 160)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2071, file: !233, line: 131, baseType: !2118, size: 192, offset: 192)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !269, line: 244, size: 192, elements: !2119)
!2119 = !{!2120, !2121, !2127}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2118, file: !269, line: 245, baseType: !2077, size: 64)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2118, file: !269, line: 246, baseType: !2122, size: 32, offset: 64)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !269, line: 242, baseType: !2123)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 32)
!2124 = !DISubroutineType(types: !2125)
!2125 = !{null, !2126}
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2118, file: !269, line: 249, baseType: !302, size: 64, offset: 128)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2068, file: !233, line: 250, baseType: !2129, size: 288, offset: 384)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !306, line: 25, size: 288, elements: !2130)
!2130 = !{!2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2129, file: !306, line: 26, baseType: !155, size: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2129, file: !306, line: 27, baseType: !155, size: 32, offset: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2129, file: !306, line: 28, baseType: !155, size: 32, offset: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2129, file: !306, line: 29, baseType: !155, size: 32, offset: 96)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2129, file: !306, line: 30, baseType: !155, size: 32, offset: 128)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2129, file: !306, line: 31, baseType: !155, size: 32, offset: 160)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2129, file: !306, line: 32, baseType: !155, size: 32, offset: 192)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2129, file: !306, line: 33, baseType: !155, size: 32, offset: 224)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2129, file: !306, line: 34, baseType: !155, size: 32, offset: 256)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2068, file: !233, line: 253, baseType: !103, size: 32, offset: 672)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2068, file: !233, line: 256, baseType: !2099, size: 64, offset: 704)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2068, file: !233, line: 294, baseType: !104, size: 32, offset: 768)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2068, file: !233, line: 300, baseType: !2144, size: 96, offset: 800)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !233, line: 149, size: 96, elements: !2145)
!2145 = !{!2146, !2147, !2148}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2144, file: !233, line: 153, baseType: !22, size: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2144, file: !233, line: 162, baseType: !222, size: 32, offset: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2144, file: !233, line: 168, baseType: !222, size: 32, offset: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2068, file: !233, line: 325, baseType: !2150, size: 32, offset: 896)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 32)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !329, line: 5073, size: 160, elements: !2152)
!2152 = !{!2153, !2159, !2160}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2151, file: !329, line: 5074, baseType: !2154, size: 96)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !333, line: 56, size: 96, elements: !2155)
!2155 = !{!2156, !2157, !2158}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2154, file: !333, line: 57, baseType: !336, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2154, file: !333, line: 58, baseType: !103, size: 32, offset: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2154, file: !333, line: 59, baseType: !222, size: 32, offset: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2151, file: !329, line: 5075, baseType: !2099, size: 64, offset: 96)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2151, file: !329, line: 5076, baseType: !2161, offset: 160)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !343, line: 43, elements: !344)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2068, file: !233, line: 343, baseType: !2163, size: 64, offset: 928)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !306, line: 60, size: 64, elements: !2164)
!2164 = !{!2165, !2166}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2163, file: !306, line: 63, baseType: !155, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2163, file: !306, line: 66, baseType: !155, size: 32, offset: 32)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 32)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 32)
!2169 = !{!2062, !2170, !2173, !2175}
!2170 = !DIGlobalVariableExpression(var: !2171, expr: !DIExpression())
!2171 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2064, file: !2172, line: 404, type: !104, isLocal: true, isDefinition: true)
!2172 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2173 = !DIGlobalVariableExpression(var: !2174, expr: !DIExpression())
!2174 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2064, file: !2172, line: 405, type: !104, isLocal: true, isDefinition: true)
!2175 = !DIGlobalVariableExpression(var: !2176, expr: !DIExpression())
!2176 = distinct !DIGlobalVariable(name: "pending_current", scope: !2064, file: !2172, line: 425, type: !2067, isLocal: true, isDefinition: true)
!2177 = !DIGlobalVariableExpression(var: !2178, expr: !DIExpression())
!2178 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2179, file: !2209, line: 15, type: !1294, isLocal: true, isDefinition: true)
!2179 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2180, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2181, globals: !2206, splitDebugInlining: false, nameTableKind: None)
!2180 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2181 = !{!1382, !103, !588, !155, !1294, !104, !2182, !981, !302}
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 32)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !269, line: 244, size: 192, elements: !2184)
!2184 = !{!2185, !2200, !2205}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2183, file: !269, line: 245, baseType: !2186, size: 64)
!2186 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !243, line: 49, baseType: !2187)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !243, line: 37, size: 64, elements: !2188)
!2188 = !{!2189, !2195}
!2189 = !DIDerivedType(tag: DW_TAG_member, scope: !2187, file: !243, line: 38, baseType: !2190, size: 32)
!2190 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2187, file: !243, line: 38, size: 32, elements: !2191)
!2191 = !{!2192, !2194}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2190, file: !243, line: 39, baseType: !2193, size: 32)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2190, file: !243, line: 40, baseType: !2193, size: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, scope: !2187, file: !243, line: 42, baseType: !2196, size: 32, offset: 32)
!2196 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2187, file: !243, line: 42, size: 32, elements: !2197)
!2197 = !{!2198, !2199}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2196, file: !243, line: 43, baseType: !2193, size: 32)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2196, file: !243, line: 44, baseType: !2193, size: 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2183, file: !269, line: 246, baseType: !2201, size: 32, offset: 64)
!2201 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !269, line: 242, baseType: !2202)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 32)
!2203 = !DISubroutineType(types: !2204)
!2204 = !{null, !2182}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2183, file: !269, line: 249, baseType: !302, size: 64, offset: 128)
!2206 = !{!2177, !2207, !2211, !2213}
!2207 = !DIGlobalVariableExpression(var: !2208, expr: !DIExpression())
!2208 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2179, file: !2209, line: 19, type: !2210, isLocal: true, isDefinition: true)
!2209 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !343, line: 43, elements: !344)
!2211 = !DIGlobalVariableExpression(var: !2212, expr: !DIExpression())
!2212 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2179, file: !2209, line: 25, type: !104, isLocal: true, isDefinition: true)
!2213 = !DIGlobalVariableExpression(var: !2214, expr: !DIExpression())
!2214 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2179, file: !2209, line: 17, type: !2215, isLocal: true, isDefinition: true)
!2215 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !243, line: 48, baseType: !2187)
!2216 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2217, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !102, splitDebugInlining: false, nameTableKind: None)
!2217 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !102, splitDebugInlining: false, nameTableKind: None)
!2219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2220 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2221, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2222, retainedTypes: !2242, splitDebugInlining: false, nameTableKind: None)
!2221 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2222 = !{!2223, !2231}
!2223 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2224, line: 69, baseType: !32, size: 32, elements: !2225)
!2224 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2225 = !{!2226, !2227, !2228, !2229, !2230}
!2226 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2227 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2228 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2229 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2230 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2231 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2224, line: 56, baseType: !32, size: 32, elements: !2232)
!2232 = !{!2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241}
!2233 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2234 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2235 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2236 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2237 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2238 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2239 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2240 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2241 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2242 = !{!104, !2223, !2231, !2243, !284, !133, !2245, !2246, !124, !288, !113, !222, !103, !22, !32, !2248, !2249, !2250, !2251, !2252, !303, !2253, !2244, !2254, !2255, !2256, !2257}
!2243 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2224, line: 31, baseType: !2244)
!2244 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !303)
!2245 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !223, line: 329, baseType: !32)
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2224, line: 32, baseType: !2247)
!2247 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1295)
!2248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 32)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 32)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 32)
!2251 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 32)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !223, line: 145, baseType: !104)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 32)
!2258 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2259, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2259 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2261, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2262, retainedTypes: !102, splitDebugInlining: false, nameTableKind: None)
!2261 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2262 = !{!2263, !30}
!2263 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2264, line: 27, baseType: !32, size: 32, elements: !2265)
!2264 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2265 = !{!2266, !2267, !2268, !2269, !2270}
!2266 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2267 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2268 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2269 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2270 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2271 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2272, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2273, retainedTypes: !2274, splitDebugInlining: false, nameTableKind: None)
!2272 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2273 = !{!447, !2263, !30}
!2274 = !{!614, !2275, !103, !104, !588, !155, !123, !2292}
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !378, line: 426, baseType: !2277)
!2277 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 411, size: 28704, elements: !2278)
!2278 = !{!2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291}
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2277, file: !378, line: 413, baseType: !1397, size: 256)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2277, file: !378, line: 414, baseType: !1399, size: 768, offset: 256)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2277, file: !378, line: 415, baseType: !1397, size: 256, offset: 1024)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2277, file: !378, line: 416, baseType: !1399, size: 768, offset: 1280)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2277, file: !378, line: 417, baseType: !1397, size: 256, offset: 2048)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2277, file: !378, line: 418, baseType: !1399, size: 768, offset: 2304)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2277, file: !378, line: 419, baseType: !1397, size: 256, offset: 3072)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2277, file: !378, line: 420, baseType: !1399, size: 768, offset: 3328)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2277, file: !378, line: 421, baseType: !1397, size: 256, offset: 4096)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2277, file: !378, line: 422, baseType: !1410, size: 1792, offset: 4352)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2277, file: !378, line: 423, baseType: !1414, size: 1920, offset: 6144)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2277, file: !378, line: 424, baseType: !1419, size: 20608, offset: 8064)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2277, file: !378, line: 425, baseType: !154, size: 32, offset: 28672)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 32)
!2293 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !378, line: 468, baseType: !2294)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 445, size: 1120, elements: !2295)
!2295 = !{!2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2294, file: !378, line: 447, baseType: !382, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2294, file: !378, line: 448, baseType: !154, size: 32, offset: 32)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2294, file: !378, line: 449, baseType: !154, size: 32, offset: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2294, file: !378, line: 450, baseType: !154, size: 32, offset: 96)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2294, file: !378, line: 451, baseType: !154, size: 32, offset: 128)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2294, file: !378, line: 452, baseType: !154, size: 32, offset: 160)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2294, file: !378, line: 453, baseType: !1434, size: 96, offset: 192)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2294, file: !378, line: 454, baseType: !154, size: 32, offset: 288)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2294, file: !378, line: 455, baseType: !154, size: 32, offset: 320)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2294, file: !378, line: 456, baseType: !154, size: 32, offset: 352)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2294, file: !378, line: 457, baseType: !154, size: 32, offset: 384)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2294, file: !378, line: 458, baseType: !154, size: 32, offset: 416)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2294, file: !378, line: 459, baseType: !154, size: 32, offset: 448)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2294, file: !378, line: 460, baseType: !154, size: 32, offset: 480)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2294, file: !378, line: 461, baseType: !1443, size: 64, offset: 512)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2294, file: !378, line: 462, baseType: !382, size: 32, offset: 576)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2294, file: !378, line: 463, baseType: !382, size: 32, offset: 608)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2294, file: !378, line: 464, baseType: !1447, size: 128, offset: 640)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2294, file: !378, line: 465, baseType: !1449, size: 160, offset: 768)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2294, file: !378, line: 466, baseType: !1451, size: 160, offset: 928)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2294, file: !378, line: 467, baseType: !154, size: 32, offset: 1088)
!2317 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2318, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !102, splitDebugInlining: false, nameTableKind: None)
!2318 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2319 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2320, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2321, splitDebugInlining: false, nameTableKind: None)
!2320 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2321 = !{!103, !104, !22, !2322}
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 32)
!2323 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !378, line: 468, baseType: !2324)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 445, size: 1120, elements: !2325)
!2325 = !{!2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2324, file: !378, line: 447, baseType: !382, size: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2324, file: !378, line: 448, baseType: !154, size: 32, offset: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2324, file: !378, line: 449, baseType: !154, size: 32, offset: 64)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2324, file: !378, line: 450, baseType: !154, size: 32, offset: 96)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2324, file: !378, line: 451, baseType: !154, size: 32, offset: 128)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2324, file: !378, line: 452, baseType: !154, size: 32, offset: 160)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2324, file: !378, line: 453, baseType: !1434, size: 96, offset: 192)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2324, file: !378, line: 454, baseType: !154, size: 32, offset: 288)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2324, file: !378, line: 455, baseType: !154, size: 32, offset: 320)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2324, file: !378, line: 456, baseType: !154, size: 32, offset: 352)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2324, file: !378, line: 457, baseType: !154, size: 32, offset: 384)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2324, file: !378, line: 458, baseType: !154, size: 32, offset: 416)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2324, file: !378, line: 459, baseType: !154, size: 32, offset: 448)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2324, file: !378, line: 460, baseType: !154, size: 32, offset: 480)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2324, file: !378, line: 461, baseType: !1443, size: 64, offset: 512)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2324, file: !378, line: 462, baseType: !382, size: 32, offset: 576)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2324, file: !378, line: 463, baseType: !382, size: 32, offset: 608)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2324, file: !378, line: 464, baseType: !1447, size: 128, offset: 640)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2324, file: !378, line: 465, baseType: !1449, size: 160, offset: 768)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2324, file: !378, line: 466, baseType: !1451, size: 160, offset: 928)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2324, file: !378, line: 467, baseType: !154, size: 32, offset: 1088)
!2347 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2348, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2349, splitDebugInlining: false, nameTableKind: None)
!2348 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2349 = !{!2350, !103, !104}
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !378, line: 468, baseType: !2352)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 445, size: 1120, elements: !2353)
!2353 = !{!2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2352, file: !378, line: 447, baseType: !382, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2352, file: !378, line: 448, baseType: !154, size: 32, offset: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2352, file: !378, line: 449, baseType: !154, size: 32, offset: 64)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2352, file: !378, line: 450, baseType: !154, size: 32, offset: 96)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2352, file: !378, line: 451, baseType: !154, size: 32, offset: 128)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2352, file: !378, line: 452, baseType: !154, size: 32, offset: 160)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2352, file: !378, line: 453, baseType: !1434, size: 96, offset: 192)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2352, file: !378, line: 454, baseType: !154, size: 32, offset: 288)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2352, file: !378, line: 455, baseType: !154, size: 32, offset: 320)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2352, file: !378, line: 456, baseType: !154, size: 32, offset: 352)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2352, file: !378, line: 457, baseType: !154, size: 32, offset: 384)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2352, file: !378, line: 458, baseType: !154, size: 32, offset: 416)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2352, file: !378, line: 459, baseType: !154, size: 32, offset: 448)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2352, file: !378, line: 460, baseType: !154, size: 32, offset: 480)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2352, file: !378, line: 461, baseType: !1443, size: 64, offset: 512)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2352, file: !378, line: 462, baseType: !382, size: 32, offset: 576)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2352, file: !378, line: 463, baseType: !382, size: 32, offset: 608)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2352, file: !378, line: 464, baseType: !1447, size: 128, offset: 640)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2352, file: !378, line: 465, baseType: !1449, size: 160, offset: 768)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2352, file: !378, line: 466, baseType: !1451, size: 160, offset: 928)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2352, file: !378, line: 467, baseType: !154, size: 32, offset: 1088)
!2375 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2376, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2377, splitDebugInlining: false, nameTableKind: None)
!2376 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2377 = !{!2378, !155, !103, !104}
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 32)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2380, line: 98, size: 256, elements: !2381)
!2380 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2381 = !{!2382, !2387, !2392, !2397, !2402, !2407, !2412, !2417}
!2382 = !DIDerivedType(tag: DW_TAG_member, scope: !2379, file: !2380, line: 99, baseType: !2383, size: 32)
!2383 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2379, file: !2380, line: 99, size: 32, elements: !2384)
!2384 = !{!2385, !2386}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2383, file: !2380, line: 99, baseType: !155, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2383, file: !2380, line: 99, baseType: !155, size: 32)
!2387 = !DIDerivedType(tag: DW_TAG_member, scope: !2379, file: !2380, line: 100, baseType: !2388, size: 32, offset: 32)
!2388 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2379, file: !2380, line: 100, size: 32, elements: !2389)
!2389 = !{!2390, !2391}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2388, file: !2380, line: 100, baseType: !155, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2388, file: !2380, line: 100, baseType: !155, size: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, scope: !2379, file: !2380, line: 101, baseType: !2393, size: 32, offset: 64)
!2393 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2379, file: !2380, line: 101, size: 32, elements: !2394)
!2394 = !{!2395, !2396}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2393, file: !2380, line: 101, baseType: !155, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2393, file: !2380, line: 101, baseType: !155, size: 32)
!2397 = !DIDerivedType(tag: DW_TAG_member, scope: !2379, file: !2380, line: 102, baseType: !2398, size: 32, offset: 96)
!2398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2379, file: !2380, line: 102, size: 32, elements: !2399)
!2399 = !{!2400, !2401}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2398, file: !2380, line: 102, baseType: !155, size: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2398, file: !2380, line: 102, baseType: !155, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, scope: !2379, file: !2380, line: 103, baseType: !2403, size: 32, offset: 128)
!2403 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2379, file: !2380, line: 103, size: 32, elements: !2404)
!2404 = !{!2405, !2406}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2403, file: !2380, line: 103, baseType: !155, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2403, file: !2380, line: 103, baseType: !155, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, scope: !2379, file: !2380, line: 104, baseType: !2408, size: 32, offset: 160)
!2408 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2379, file: !2380, line: 104, size: 32, elements: !2409)
!2409 = !{!2410, !2411}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2408, file: !2380, line: 104, baseType: !155, size: 32)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2408, file: !2380, line: 104, baseType: !155, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_member, scope: !2379, file: !2380, line: 105, baseType: !2413, size: 32, offset: 192)
!2413 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2379, file: !2380, line: 105, size: 32, elements: !2414)
!2414 = !{!2415, !2416}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2413, file: !2380, line: 105, baseType: !155, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2413, file: !2380, line: 105, baseType: !155, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2379, file: !2380, line: 106, baseType: !155, size: 32, offset: 224)
!2418 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2419, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2262, retainedTypes: !2420, splitDebugInlining: false, nameTableKind: None)
!2419 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2420 = !{!2421, !103, !104, !2446, !2489, !155}
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 32)
!2422 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !378, line: 468, baseType: !2423)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 445, size: 1120, elements: !2424)
!2424 = !{!2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2423, file: !378, line: 447, baseType: !382, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2423, file: !378, line: 448, baseType: !154, size: 32, offset: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2423, file: !378, line: 449, baseType: !154, size: 32, offset: 64)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2423, file: !378, line: 450, baseType: !154, size: 32, offset: 96)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2423, file: !378, line: 451, baseType: !154, size: 32, offset: 128)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2423, file: !378, line: 452, baseType: !154, size: 32, offset: 160)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2423, file: !378, line: 453, baseType: !1434, size: 96, offset: 192)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2423, file: !378, line: 454, baseType: !154, size: 32, offset: 288)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2423, file: !378, line: 455, baseType: !154, size: 32, offset: 320)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2423, file: !378, line: 456, baseType: !154, size: 32, offset: 352)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2423, file: !378, line: 457, baseType: !154, size: 32, offset: 384)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2423, file: !378, line: 458, baseType: !154, size: 32, offset: 416)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2423, file: !378, line: 459, baseType: !154, size: 32, offset: 448)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2423, file: !378, line: 460, baseType: !154, size: 32, offset: 480)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2423, file: !378, line: 461, baseType: !1443, size: 64, offset: 512)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2423, file: !378, line: 462, baseType: !382, size: 32, offset: 576)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2423, file: !378, line: 463, baseType: !382, size: 32, offset: 608)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2423, file: !378, line: 464, baseType: !1447, size: 128, offset: 640)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2423, file: !378, line: 465, baseType: !1449, size: 160, offset: 768)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2423, file: !378, line: 466, baseType: !1451, size: 160, offset: 928)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2423, file: !378, line: 467, baseType: !154, size: 32, offset: 1088)
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2380, line: 141, baseType: !2448)
!2448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2380, line: 97, size: 256, elements: !2449)
!2449 = !{!2450}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2448, file: !2380, line: 107, baseType: !2451, size: 256)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2380, line: 98, size: 256, elements: !2452)
!2452 = !{!2453, !2458, !2463, !2468, !2473, !2478, !2483, !2488}
!2453 = !DIDerivedType(tag: DW_TAG_member, scope: !2451, file: !2380, line: 99, baseType: !2454, size: 32)
!2454 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2451, file: !2380, line: 99, size: 32, elements: !2455)
!2455 = !{!2456, !2457}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2454, file: !2380, line: 99, baseType: !155, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2454, file: !2380, line: 99, baseType: !155, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, scope: !2451, file: !2380, line: 100, baseType: !2459, size: 32, offset: 32)
!2459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2451, file: !2380, line: 100, size: 32, elements: !2460)
!2460 = !{!2461, !2462}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2459, file: !2380, line: 100, baseType: !155, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2459, file: !2380, line: 100, baseType: !155, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, scope: !2451, file: !2380, line: 101, baseType: !2464, size: 32, offset: 64)
!2464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2451, file: !2380, line: 101, size: 32, elements: !2465)
!2465 = !{!2466, !2467}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2464, file: !2380, line: 101, baseType: !155, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2464, file: !2380, line: 101, baseType: !155, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, scope: !2451, file: !2380, line: 102, baseType: !2469, size: 32, offset: 96)
!2469 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2451, file: !2380, line: 102, size: 32, elements: !2470)
!2470 = !{!2471, !2472}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2469, file: !2380, line: 102, baseType: !155, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2469, file: !2380, line: 102, baseType: !155, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, scope: !2451, file: !2380, line: 103, baseType: !2474, size: 32, offset: 128)
!2474 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2451, file: !2380, line: 103, size: 32, elements: !2475)
!2475 = !{!2476, !2477}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2474, file: !2380, line: 103, baseType: !155, size: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2474, file: !2380, line: 103, baseType: !155, size: 32)
!2478 = !DIDerivedType(tag: DW_TAG_member, scope: !2451, file: !2380, line: 104, baseType: !2479, size: 32, offset: 160)
!2479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2451, file: !2380, line: 104, size: 32, elements: !2480)
!2480 = !{!2481, !2482}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2479, file: !2380, line: 104, baseType: !155, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2479, file: !2380, line: 104, baseType: !155, size: 32)
!2483 = !DIDerivedType(tag: DW_TAG_member, scope: !2451, file: !2380, line: 105, baseType: !2484, size: 32, offset: 192)
!2484 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2451, file: !2380, line: 105, size: 32, elements: !2485)
!2485 = !{!2486, !2487}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2484, file: !2380, line: 105, baseType: !155, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2484, file: !2380, line: 105, baseType: !155, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2451, file: !2380, line: 106, baseType: !155, size: 32, offset: 224)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 32)
!2490 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2491, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1380, retainedTypes: !2492, splitDebugInlining: false, nameTableKind: None)
!2491 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2492 = !{!614, !588, !123, !155, !2493, !2510}
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !378, line: 426, baseType: !2495)
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 411, size: 28704, elements: !2496)
!2496 = !{!2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2495, file: !378, line: 413, baseType: !1397, size: 256)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2495, file: !378, line: 414, baseType: !1399, size: 768, offset: 256)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2495, file: !378, line: 415, baseType: !1397, size: 256, offset: 1024)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2495, file: !378, line: 416, baseType: !1399, size: 768, offset: 1280)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2495, file: !378, line: 417, baseType: !1397, size: 256, offset: 2048)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2495, file: !378, line: 418, baseType: !1399, size: 768, offset: 2304)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2495, file: !378, line: 419, baseType: !1397, size: 256, offset: 3072)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2495, file: !378, line: 420, baseType: !1399, size: 768, offset: 3328)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2495, file: !378, line: 421, baseType: !1397, size: 256, offset: 4096)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2495, file: !378, line: 422, baseType: !1410, size: 1792, offset: 4352)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2495, file: !378, line: 423, baseType: !1414, size: 1920, offset: 6144)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2495, file: !378, line: 424, baseType: !1419, size: 20608, offset: 8064)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2495, file: !378, line: 425, baseType: !154, size: 32, offset: 28672)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !378, line: 468, baseType: !2512)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 445, size: 1120, elements: !2513)
!2513 = !{!2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2512, file: !378, line: 447, baseType: !382, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2512, file: !378, line: 448, baseType: !154, size: 32, offset: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2512, file: !378, line: 449, baseType: !154, size: 32, offset: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2512, file: !378, line: 450, baseType: !154, size: 32, offset: 96)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2512, file: !378, line: 451, baseType: !154, size: 32, offset: 128)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2512, file: !378, line: 452, baseType: !154, size: 32, offset: 160)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2512, file: !378, line: 453, baseType: !1434, size: 96, offset: 192)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2512, file: !378, line: 454, baseType: !154, size: 32, offset: 288)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2512, file: !378, line: 455, baseType: !154, size: 32, offset: 320)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2512, file: !378, line: 456, baseType: !154, size: 32, offset: 352)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2512, file: !378, line: 457, baseType: !154, size: 32, offset: 384)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2512, file: !378, line: 458, baseType: !154, size: 32, offset: 416)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2512, file: !378, line: 459, baseType: !154, size: 32, offset: 448)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2512, file: !378, line: 460, baseType: !154, size: 32, offset: 480)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2512, file: !378, line: 461, baseType: !1443, size: 64, offset: 512)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2512, file: !378, line: 462, baseType: !382, size: 32, offset: 576)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2512, file: !378, line: 463, baseType: !382, size: 32, offset: 608)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2512, file: !378, line: 464, baseType: !1447, size: 128, offset: 640)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2512, file: !378, line: 465, baseType: !1449, size: 160, offset: 768)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2512, file: !378, line: 466, baseType: !1451, size: 160, offset: 928)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2512, file: !378, line: 467, baseType: !154, size: 32, offset: 1088)
!2535 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2536, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2537, splitDebugInlining: false, nameTableKind: None)
!2536 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2537 = !{!2538, !103, !104}
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !378, line: 468, baseType: !2540)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 445, size: 1120, elements: !2541)
!2541 = !{!2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2540, file: !378, line: 447, baseType: !382, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2540, file: !378, line: 448, baseType: !154, size: 32, offset: 32)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2540, file: !378, line: 449, baseType: !154, size: 32, offset: 64)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2540, file: !378, line: 450, baseType: !154, size: 32, offset: 96)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2540, file: !378, line: 451, baseType: !154, size: 32, offset: 128)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2540, file: !378, line: 452, baseType: !154, size: 32, offset: 160)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2540, file: !378, line: 453, baseType: !1434, size: 96, offset: 192)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2540, file: !378, line: 454, baseType: !154, size: 32, offset: 288)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2540, file: !378, line: 455, baseType: !154, size: 32, offset: 320)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2540, file: !378, line: 456, baseType: !154, size: 32, offset: 352)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2540, file: !378, line: 457, baseType: !154, size: 32, offset: 384)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2540, file: !378, line: 458, baseType: !154, size: 32, offset: 416)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2540, file: !378, line: 459, baseType: !154, size: 32, offset: 448)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2540, file: !378, line: 460, baseType: !154, size: 32, offset: 480)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2540, file: !378, line: 461, baseType: !1443, size: 64, offset: 512)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2540, file: !378, line: 462, baseType: !382, size: 32, offset: 576)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2540, file: !378, line: 463, baseType: !382, size: 32, offset: 608)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2540, file: !378, line: 464, baseType: !1447, size: 128, offset: 640)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2540, file: !378, line: 465, baseType: !1449, size: 160, offset: 768)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2540, file: !378, line: 466, baseType: !1451, size: 160, offset: 928)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2540, file: !378, line: 467, baseType: !154, size: 32, offset: 1088)
!2563 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2564, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2565, splitDebugInlining: false, nameTableKind: None)
!2564 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2565 = !{!115, !981, !222, !816, !2566, !124, !103}
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !124)
!2568 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2569, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2570, splitDebugInlining: false, nameTableKind: None)
!2569 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2570 = !{!2571}
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 32)
!2572 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !150, line: 370, baseType: !2573)
!2573 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 336, size: 1152, elements: !2574)
!2574 = !{!2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2573, file: !150, line: 338, baseType: !154, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2573, file: !150, line: 339, baseType: !154, size: 32, offset: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2573, file: !150, line: 340, baseType: !154, size: 32, offset: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2573, file: !150, line: 341, baseType: !154, size: 32, offset: 96)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2573, file: !150, line: 342, baseType: !154, size: 32, offset: 128)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2573, file: !150, line: 343, baseType: !154, size: 32, offset: 160)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2573, file: !150, line: 344, baseType: !154, size: 32, offset: 192)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2573, file: !150, line: 345, baseType: !155, size: 32, offset: 224)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2573, file: !150, line: 346, baseType: !154, size: 32, offset: 256)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2573, file: !150, line: 347, baseType: !154, size: 32, offset: 288)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2573, file: !150, line: 348, baseType: !682, size: 64, offset: 320)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2573, file: !150, line: 349, baseType: !154, size: 32, offset: 384)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2573, file: !150, line: 350, baseType: !154, size: 32, offset: 416)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2573, file: !150, line: 351, baseType: !154, size: 32, offset: 448)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2573, file: !150, line: 352, baseType: !155, size: 32, offset: 480)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2573, file: !150, line: 353, baseType: !154, size: 32, offset: 512)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2573, file: !150, line: 354, baseType: !154, size: 32, offset: 544)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2573, file: !150, line: 355, baseType: !682, size: 64, offset: 576)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2573, file: !150, line: 356, baseType: !154, size: 32, offset: 640)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2573, file: !150, line: 357, baseType: !154, size: 32, offset: 672)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2573, file: !150, line: 358, baseType: !154, size: 32, offset: 704)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2573, file: !150, line: 359, baseType: !155, size: 32, offset: 736)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2573, file: !150, line: 360, baseType: !154, size: 32, offset: 768)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2573, file: !150, line: 361, baseType: !154, size: 32, offset: 800)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2573, file: !150, line: 362, baseType: !682, size: 64, offset: 832)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2573, file: !150, line: 363, baseType: !154, size: 32, offset: 896)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2573, file: !150, line: 364, baseType: !154, size: 32, offset: 928)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2573, file: !150, line: 365, baseType: !682, size: 64, offset: 960)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2573, file: !150, line: 366, baseType: !154, size: 32, offset: 1024)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2573, file: !150, line: 367, baseType: !154, size: 32, offset: 1056)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2573, file: !150, line: 368, baseType: !703, size: 32, offset: 1088)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2573, file: !150, line: 369, baseType: !154, size: 32, offset: 1120)
!2607 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2608, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2608 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2609 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2610, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2611, retainedTypes: !2627, splitDebugInlining: false, nameTableKind: None)
!2610 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2611 = !{!2612, !2619, !2623}
!2612 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2613, line: 38, baseType: !32, size: 32, elements: !2614)
!2613 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2614 = !{!2615, !2616, !2617, !2618}
!2615 = !DIEnumerator(name: "HAL_OK", value: 0)
!2616 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2617 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2618 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2619 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !655, line: 184, baseType: !32, size: 32, elements: !2620)
!2620 = !{!2621, !2622}
!2621 = !DIEnumerator(name: "RESET", value: 0)
!2622 = !DIEnumerator(name: "SET", value: 1)
!2623 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !655, line: 190, baseType: !32, size: 32, elements: !2624)
!2624 = !{!2625, !2626}
!2625 = !DIEnumerator(name: "DISABLE", value: 0)
!2626 = !DIEnumerator(name: "ENABLE", value: 1)
!2627 = !{!103, !2628, !123, !155, !1296, !2664, !2670, !2681, !287, !2682, !1294}
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 32)
!2629 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !150, line: 370, baseType: !2630)
!2630 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 336, size: 1152, elements: !2631)
!2631 = !{!2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2630, file: !150, line: 338, baseType: !154, size: 32)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2630, file: !150, line: 339, baseType: !154, size: 32, offset: 32)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2630, file: !150, line: 340, baseType: !154, size: 32, offset: 64)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2630, file: !150, line: 341, baseType: !154, size: 32, offset: 96)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2630, file: !150, line: 342, baseType: !154, size: 32, offset: 128)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2630, file: !150, line: 343, baseType: !154, size: 32, offset: 160)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2630, file: !150, line: 344, baseType: !154, size: 32, offset: 192)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2630, file: !150, line: 345, baseType: !155, size: 32, offset: 224)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2630, file: !150, line: 346, baseType: !154, size: 32, offset: 256)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2630, file: !150, line: 347, baseType: !154, size: 32, offset: 288)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2630, file: !150, line: 348, baseType: !682, size: 64, offset: 320)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2630, file: !150, line: 349, baseType: !154, size: 32, offset: 384)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2630, file: !150, line: 350, baseType: !154, size: 32, offset: 416)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2630, file: !150, line: 351, baseType: !154, size: 32, offset: 448)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2630, file: !150, line: 352, baseType: !155, size: 32, offset: 480)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2630, file: !150, line: 353, baseType: !154, size: 32, offset: 512)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2630, file: !150, line: 354, baseType: !154, size: 32, offset: 544)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2630, file: !150, line: 355, baseType: !682, size: 64, offset: 576)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2630, file: !150, line: 356, baseType: !154, size: 32, offset: 640)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2630, file: !150, line: 357, baseType: !154, size: 32, offset: 672)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2630, file: !150, line: 358, baseType: !154, size: 32, offset: 704)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2630, file: !150, line: 359, baseType: !155, size: 32, offset: 736)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2630, file: !150, line: 360, baseType: !154, size: 32, offset: 768)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2630, file: !150, line: 361, baseType: !154, size: 32, offset: 800)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2630, file: !150, line: 362, baseType: !682, size: 64, offset: 832)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2630, file: !150, line: 363, baseType: !154, size: 32, offset: 896)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2630, file: !150, line: 364, baseType: !154, size: 32, offset: 928)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2630, file: !150, line: 365, baseType: !682, size: 64, offset: 960)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2630, file: !150, line: 366, baseType: !154, size: 32, offset: 1024)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2630, file: !150, line: 367, baseType: !154, size: 32, offset: 1056)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2630, file: !150, line: 368, baseType: !703, size: 32, offset: 1088)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2630, file: !150, line: 369, baseType: !154, size: 32, offset: 1120)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 32)
!2665 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !150, line: 330, baseType: !2666)
!2666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 326, size: 64, elements: !2667)
!2667 = !{!2668, !2669}
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2666, file: !150, line: 328, baseType: !154, size: 32)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2666, file: !150, line: 329, baseType: !154, size: 32, offset: 32)
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 32)
!2671 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !150, line: 259, baseType: !2672)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 250, size: 224, elements: !2673)
!2673 = !{!2674, !2675, !2676, !2677, !2678, !2679, !2680}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2672, file: !150, line: 252, baseType: !154, size: 32)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2672, file: !150, line: 253, baseType: !154, size: 32, offset: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2672, file: !150, line: 254, baseType: !154, size: 32, offset: 64)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2672, file: !150, line: 255, baseType: !154, size: 32, offset: 96)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2672, file: !150, line: 256, baseType: !154, size: 32, offset: 128)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2672, file: !150, line: 257, baseType: !154, size: 32, offset: 160)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2672, file: !150, line: 258, baseType: !154, size: 32, offset: 192)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2683, size: 32)
!2683 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !150, line: 276, baseType: !2684)
!2684 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 265, size: 320, elements: !2685)
!2685 = !{!2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694}
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2684, file: !150, line: 267, baseType: !154, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2684, file: !150, line: 268, baseType: !154, size: 32, offset: 32)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2684, file: !150, line: 269, baseType: !154, size: 32, offset: 64)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2684, file: !150, line: 270, baseType: !154, size: 32, offset: 96)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2684, file: !150, line: 271, baseType: !154, size: 32, offset: 128)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2684, file: !150, line: 272, baseType: !154, size: 32, offset: 160)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2684, file: !150, line: 273, baseType: !154, size: 32, offset: 192)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2684, file: !150, line: 274, baseType: !154, size: 32, offset: 224)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2684, file: !150, line: 275, baseType: !970, size: 64, offset: 256)
!2695 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2696, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2697, retainedTypes: !2698, splitDebugInlining: false, nameTableKind: None)
!2696 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2697 = !{!654}
!2698 = !{!2699, !155, !2707, !2713, !2724}
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !378, line: 770, baseType: !2701)
!2701 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 764, size: 128, elements: !2702)
!2702 = !{!2703, !2704, !2705, !2706}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2701, file: !378, line: 766, baseType: !154, size: 32)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2701, file: !378, line: 767, baseType: !154, size: 32, offset: 32)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2701, file: !378, line: 768, baseType: !154, size: 32, offset: 64)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2701, file: !378, line: 769, baseType: !382, size: 32, offset: 96)
!2707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !150, line: 330, baseType: !2709)
!2709 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 326, size: 64, elements: !2710)
!2710 = !{!2711, !2712}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2709, file: !150, line: 328, baseType: !154, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2709, file: !150, line: 329, baseType: !154, size: 32, offset: 32)
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 32)
!2714 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !150, line: 259, baseType: !2715)
!2715 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 250, size: 224, elements: !2716)
!2716 = !{!2717, !2718, !2719, !2720, !2721, !2722, !2723}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2715, file: !150, line: 252, baseType: !154, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2715, file: !150, line: 253, baseType: !154, size: 32, offset: 32)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2715, file: !150, line: 254, baseType: !154, size: 32, offset: 64)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2715, file: !150, line: 255, baseType: !154, size: 32, offset: 96)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2715, file: !150, line: 256, baseType: !154, size: 32, offset: 128)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2715, file: !150, line: 257, baseType: !154, size: 32, offset: 160)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2715, file: !150, line: 258, baseType: !154, size: 32, offset: 192)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 32)
!2725 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !150, line: 370, baseType: !2726)
!2726 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 336, size: 1152, elements: !2727)
!2727 = !{!2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759}
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2726, file: !150, line: 338, baseType: !154, size: 32)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2726, file: !150, line: 339, baseType: !154, size: 32, offset: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2726, file: !150, line: 340, baseType: !154, size: 32, offset: 64)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2726, file: !150, line: 341, baseType: !154, size: 32, offset: 96)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2726, file: !150, line: 342, baseType: !154, size: 32, offset: 128)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2726, file: !150, line: 343, baseType: !154, size: 32, offset: 160)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2726, file: !150, line: 344, baseType: !154, size: 32, offset: 192)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2726, file: !150, line: 345, baseType: !155, size: 32, offset: 224)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2726, file: !150, line: 346, baseType: !154, size: 32, offset: 256)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2726, file: !150, line: 347, baseType: !154, size: 32, offset: 288)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2726, file: !150, line: 348, baseType: !682, size: 64, offset: 320)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2726, file: !150, line: 349, baseType: !154, size: 32, offset: 384)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2726, file: !150, line: 350, baseType: !154, size: 32, offset: 416)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2726, file: !150, line: 351, baseType: !154, size: 32, offset: 448)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2726, file: !150, line: 352, baseType: !155, size: 32, offset: 480)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2726, file: !150, line: 353, baseType: !154, size: 32, offset: 512)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2726, file: !150, line: 354, baseType: !154, size: 32, offset: 544)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2726, file: !150, line: 355, baseType: !682, size: 64, offset: 576)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2726, file: !150, line: 356, baseType: !154, size: 32, offset: 640)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2726, file: !150, line: 357, baseType: !154, size: 32, offset: 672)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2726, file: !150, line: 358, baseType: !154, size: 32, offset: 704)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2726, file: !150, line: 359, baseType: !155, size: 32, offset: 736)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2726, file: !150, line: 360, baseType: !154, size: 32, offset: 768)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2726, file: !150, line: 361, baseType: !154, size: 32, offset: 800)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2726, file: !150, line: 362, baseType: !682, size: 64, offset: 832)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2726, file: !150, line: 363, baseType: !154, size: 32, offset: 896)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2726, file: !150, line: 364, baseType: !154, size: 32, offset: 928)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2726, file: !150, line: 365, baseType: !682, size: 64, offset: 960)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2726, file: !150, line: 366, baseType: !154, size: 32, offset: 1024)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2726, file: !150, line: 367, baseType: !154, size: 32, offset: 1056)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2726, file: !150, line: 368, baseType: !703, size: 32, offset: 1088)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2726, file: !150, line: 369, baseType: !154, size: 32, offset: 1120)
!2760 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2761, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2762, splitDebugInlining: false, nameTableKind: None)
!2761 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2762 = !{!103, !222}
!2763 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2764, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2765, retainedTypes: !102, splitDebugInlining: false, nameTableKind: None)
!2764 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2765 = !{!2766, !2773, !30}
!2766 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2767, line: 14, baseType: !32, size: 32, elements: !2768)
!2767 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2768 = !{!2769, !2770, !2771, !2772}
!2769 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2770 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2771 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2772 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2773 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2767, line: 42, baseType: !32, size: 32, elements: !2774)
!2774 = !{!2775, !2776, !2777, !2778, !2779, !2780}
!2775 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2776 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2777 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2778 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2779 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2780 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2781 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2782, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !102, splitDebugInlining: false, nameTableKind: None)
!2782 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2783 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2784, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2785, splitDebugInlining: false, nameTableKind: None)
!2784 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2785 = !{!22, !103, !104}
!2786 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2787, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !102, splitDebugInlining: false, nameTableKind: None)
!2787 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2788 = !{!"Ubuntu clang version 14.0.6"}
!2789 = !{i32 7, !"Dwarf Version", i32 4}
!2790 = !{i32 2, !"Debug Info Version", i32 3}
!2791 = !{i32 1, !"wchar_size", i32 4}
!2792 = !{i32 1, !"min_enum_size", i32 4}
!2793 = !{i32 1, !"branch-target-enforcement", i32 0}
!2794 = !{i32 1, !"sign-return-address", i32 0}
!2795 = !{i32 1, !"sign-return-address-all", i32 0}
!2796 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2797 = !{i32 7, !"frame-pointer", i32 2}
!2798 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2799, file: !2799, line: 26, type: !2800, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2216, retainedNodes: !344)
!2799 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2800 = !DISubroutineType(types: !2801)
!2801 = !{null}
!2802 = !DILocation(line: 28, column: 1, scope: !2798)
!2803 = !{i64 2154340255, i64 2154340275, i64 2154340338}
!2804 = !DILocation(line: 29, column: 1, scope: !2798)
!2805 = !{i64 2154340670, i64 2154340690, i64 2154340753}
!2806 = !DILocation(line: 30, column: 1, scope: !2798)
!2807 = !{i64 2154341089, i64 2154341109, i64 2154341172}
!2808 = !DILocation(line: 31, column: 1, scope: !2798)
!2809 = !{i64 2154341508, i64 2154341528, i64 2154341591}
!2810 = !DILocation(line: 33, column: 1, scope: !2798)
!2811 = !{i64 2154341800, i64 2154341820, i64 2154341883}
!2812 = !DILocation(line: 35, column: 1, scope: !2798)
!2813 = !{i64 2154342125, i64 2154342145, i64 2154342208}
!2814 = !DILocation(line: 50, column: 1, scope: !2798)
!2815 = !{i64 2154342552, i64 2154342572, i64 2154342635}
!2816 = !DILocation(line: 54, column: 1, scope: !2798)
!2817 = !{i64 2154342991, i64 2154343011, i64 2154343074}
!2818 = !DILocation(line: 61, column: 1, scope: !2798)
!2819 = !{i64 2154343308, i64 2154343328, i64 2154343391}
!2820 = !DILocation(line: 63, column: 1, scope: !2798)
!2821 = !{i64 2154343688, i64 2154343708, i64 2154343771}
!2822 = !DILocation(line: 64, column: 1, scope: !2798)
!2823 = !{i64 2154344210, i64 2154344230, i64 2154344293}
!2824 = !DILocation(line: 65, column: 1, scope: !2798)
!2825 = !{i64 2154344708, i64 2154344728, i64 2154344791}
!2826 = !DILocation(line: 66, column: 1, scope: !2798)
!2827 = !{i64 2154345190, i64 2154345210, i64 2154345273}
!2828 = !DILocation(line: 67, column: 1, scope: !2798)
!2829 = !{i64 2154345697, i64 2154345717, i64 2154345780}
!2830 = !DILocation(line: 68, column: 1, scope: !2798)
!2831 = !{i64 2154346185, i64 2154346205, i64 2154346268}
!2832 = !DILocation(line: 70, column: 1, scope: !2798)
!2833 = !{i64 2154346653, i64 2154346673, i64 2154346736}
!2834 = !DILocation(line: 71, column: 1, scope: !2798)
!2835 = !{i64 2154347095, i64 2154347115, i64 2154347178}
!2836 = !DILocation(line: 72, column: 1, scope: !2798)
!2837 = !{i64 2154347553, i64 2154347573, i64 2154347636}
!2838 = !DILocation(line: 79, column: 1, scope: !2798)
!2839 = !{i64 2154348007, i64 2154348027, i64 2154348090}
!2840 = !DILocation(line: 80, column: 1, scope: !2798)
!2841 = !{i64 2154348518, i64 2154348538, i64 2154348601}
!2842 = !DILocation(line: 82, column: 1, scope: !2798)
!2843 = !{i64 2154353070, i64 2154353090, i64 2154353153}
!2844 = !DILocation(line: 97, column: 1, scope: !2798)
!2845 = !{i64 2154353407, i64 2154353427, i64 2154353490}
!2846 = !DILocation(line: 99, column: 1, scope: !2798)
!2847 = !{i64 2154353625, i64 2154353645, i64 2154353708}
!2848 = !DILocation(line: 102, column: 1, scope: !2798)
!2849 = !{i64 2154353882, i64 2154353902, i64 2154353965}
!2850 = !DILocation(line: 105, column: 1, scope: !2798)
!2851 = !{i64 2154354122, i64 2154354142, i64 2154354205}
!2852 = !DILocation(line: 115, column: 1, scope: !2798)
!2853 = !{i64 2154354461, i64 2154354481, i64 2154354544}
!2854 = !DILocation(line: 118, column: 1, scope: !2798)
!2855 = !{i64 2154354805, i64 2154354825, i64 2154354888}
!2856 = !DILocation(line: 32, column: 1, scope: !2857)
!2857 = !DILexicalBlockFile(scope: !2798, file: !2858, discriminator: 0)
!2858 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2859 = !{i64 2154355161, i64 2154355181, i64 2154355244}
!2860 = !DILocation(line: 33, column: 1, scope: !2857)
!2861 = !{i64 2154355673, i64 2154355693, i64 2154355756}
!2862 = !DILocation(line: 53, column: 1, scope: !2857)
!2863 = !{i64 2154356181, i64 2154356201, i64 2154356264}
!2864 = !DILocation(line: 54, column: 1, scope: !2857)
!2865 = !{i64 2154356599, i64 2154356619, i64 2154356682}
!2866 = !DILocation(line: 55, column: 1, scope: !2857)
!2867 = !{i64 2154357017, i64 2154357037, i64 2154357100}
!2868 = !DILocation(line: 56, column: 1, scope: !2857)
!2869 = !{i64 2154357435, i64 2154357455, i64 2154357518}
!2870 = !DILocation(line: 57, column: 1, scope: !2857)
!2871 = !{i64 2154357853, i64 2154357873, i64 2154357936}
!2872 = !DILocation(line: 58, column: 1, scope: !2857)
!2873 = !{i64 2154358271, i64 2154358291, i64 2154358354}
!2874 = !DILocation(line: 59, column: 1, scope: !2857)
!2875 = !{i64 2154358689, i64 2154358709, i64 2154358772}
!2876 = !DILocation(line: 60, column: 1, scope: !2857)
!2877 = !{i64 2154359113, i64 2154359133, i64 2154359196}
!2878 = !DILocation(line: 61, column: 1, scope: !2857)
!2879 = !{i64 2154359430, i64 2154359450, i64 2154359513}
!2880 = !DILocation(line: 70, column: 1, scope: !2857)
!2881 = !{i64 2154359659, i64 2154359679, i64 2154359742}
!2882 = !DILocation(line: 72, column: 1, scope: !2857)
!2883 = !{i64 2154359991, i64 2154360011, i64 2154360074}
!2884 = !DILocation(line: 73, column: 1, scope: !2857)
!2885 = !{i64 2154360441, i64 2154360461, i64 2154360524}
!2886 = !DILocation(line: 74, column: 1, scope: !2857)
!2887 = !{i64 2154360891, i64 2154360911, i64 2154360974}
!2888 = !DILocation(line: 75, column: 1, scope: !2857)
!2889 = !{i64 2154361341, i64 2154361361, i64 2154361424}
!2890 = !DILocation(line: 76, column: 1, scope: !2857)
!2891 = !{i64 2154361791, i64 2154361811, i64 2154361874}
!2892 = !DILocation(line: 77, column: 1, scope: !2857)
!2893 = !{i64 2154362241, i64 2154362261, i64 2154362324}
!2894 = !DILocation(line: 78, column: 1, scope: !2857)
!2895 = !{i64 2154366752, i64 2154366772, i64 2154366835}
!2896 = !DILocation(line: 79, column: 1, scope: !2857)
!2897 = !{i64 2154367202, i64 2154367222, i64 2154367285}
!2898 = !DILocation(line: 80, column: 1, scope: !2857)
!2899 = !{i64 2154367655, i64 2154367675, i64 2154367738}
!2900 = !DILocation(line: 84, column: 1, scope: !2857)
!2901 = !{i64 2154367987, i64 2154368007, i64 2154368070}
!2902 = !DILocation(line: 91, column: 1, scope: !2857)
!2903 = !{i64 2154368384, i64 2154368404, i64 2154368467}
!2904 = !DILocation(line: 93, column: 1, scope: !2857)
!2905 = !{i64 2154368751, i64 2154368771, i64 2154368834}
!2906 = !DILocation(line: 106, column: 1, scope: !2857)
!2907 = !{i64 2154369021, i64 2154369041, i64 2154369104}
!2908 = !DILocation(line: 11, column: 1, scope: !2909)
!2909 = !DILexicalBlockFile(scope: !2798, file: !2910, discriminator: 0)
!2910 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2911 = distinct !DISubprogram(name: "main", scope: !106, file: !106, line: 18, type: !2800, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !344)
!2912 = !DILocation(line: 20, column: 2, scope: !2911)
!2913 = !DILocation(line: 22, column: 8, scope: !2911)
!2914 = !DILocation(line: 22, column: 6, scope: !2911)
!2915 = !DILocation(line: 26, column: 49, scope: !2911)
!2916 = !DILocation(line: 26, column: 2, scope: !2911)
!2917 = !DILocation(line: 28, column: 2, scope: !2911)
!2918 = !DILocation(line: 29, column: 2, scope: !2911)
!2919 = distinct !DISubprogram(name: "device_get_binding", scope: !2920, file: !2920, line: 24, type: !2921, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2923)
!2920 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2921 = !DISubroutineType(types: !2922)
!2922 = !{!107, !113}
!2923 = !{!2924}
!2924 = !DILocalVariable(name: "name", arg: 1, scope: !2919, file: !2920, line: 24, type: !113)
!2925 = !DILocation(line: 0, scope: !2919)
!2926 = !DILocation(line: 32, column: 2, scope: !2927)
!2927 = distinct !DILexicalBlock(scope: !2919, file: !2920, line: 32, column: 2)
!2928 = !{i64 2149104150}
!2929 = !DILocation(line: 33, column: 9, scope: !2919)
!2930 = !DILocation(line: 33, column: 2, scope: !2919)
!2931 = distinct !DISubprogram(name: "k_object_access_grant", scope: !2932, file: !2932, line: 24, type: !2933, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3035)
!2932 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!2933 = !DISubroutineType(types: !2934)
!2934 = !{null, !13, !2935}
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 32)
!2936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !233, line: 245, size: 1024, elements: !2937)
!2937 = !{!2938, !2996, !3008, !3009, !3010, !3011, !3017, !3030}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2936, file: !233, line: 247, baseType: !2939, size: 384)
!2939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !233, line: 57, size: 384, elements: !2940)
!2940 = !{!2941, !2965, !2972, !2973, !2974, !2983, !2984, !2985}
!2941 = !DIDerivedType(tag: DW_TAG_member, scope: !2939, file: !233, line: 60, baseType: !2942, size: 64)
!2942 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2939, file: !233, line: 60, size: 64, elements: !2943)
!2943 = !{!2944, !2959}
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2942, file: !233, line: 61, baseType: !2945, size: 64)
!2945 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !243, line: 49, baseType: !2946)
!2946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !243, line: 37, size: 64, elements: !2947)
!2947 = !{!2948, !2954}
!2948 = !DIDerivedType(tag: DW_TAG_member, scope: !2946, file: !243, line: 38, baseType: !2949, size: 32)
!2949 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2946, file: !243, line: 38, size: 32, elements: !2950)
!2950 = !{!2951, !2953}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2949, file: !243, line: 39, baseType: !2952, size: 32)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2946, size: 32)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2949, file: !243, line: 40, baseType: !2952, size: 32)
!2954 = !DIDerivedType(tag: DW_TAG_member, scope: !2946, file: !243, line: 42, baseType: !2955, size: 32, offset: 32)
!2955 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2946, file: !243, line: 42, size: 32, elements: !2956)
!2956 = !{!2957, !2958}
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2955, file: !243, line: 43, baseType: !2952, size: 32)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2955, file: !243, line: 44, baseType: !2952, size: 32)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2942, file: !233, line: 62, baseType: !2960, size: 64)
!2960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !259, line: 49, size: 64, elements: !2961)
!2961 = !{!2962}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2960, file: !259, line: 50, baseType: !2963, size: 64)
!2963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2964, size: 64, elements: !264)
!2964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2939, file: !233, line: 68, baseType: !2966, size: 32, offset: 64)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 32)
!2967 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !269, line: 233, baseType: !2968)
!2968 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !269, line: 231, size: 64, elements: !2969)
!2969 = !{!2970}
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2968, file: !269, line: 232, baseType: !2971, size: 64)
!2971 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !243, line: 48, baseType: !2946)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2939, file: !233, line: 71, baseType: !123, size: 8, offset: 96)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2939, file: !233, line: 74, baseType: !123, size: 8, offset: 104)
!2974 = !DIDerivedType(tag: DW_TAG_member, scope: !2939, file: !233, line: 90, baseType: !2975, size: 16, offset: 112)
!2975 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2939, file: !233, line: 90, size: 16, elements: !2976)
!2976 = !{!2977, !2982}
!2977 = !DIDerivedType(tag: DW_TAG_member, scope: !2975, file: !233, line: 91, baseType: !2978, size: 16)
!2978 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2975, file: !233, line: 91, size: 16, elements: !2979)
!2979 = !{!2980, !2981}
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2978, file: !233, line: 96, baseType: !283, size: 8)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2978, file: !233, line: 97, baseType: !123, size: 8, offset: 8)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2975, file: !233, line: 100, baseType: !287, size: 16)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2939, file: !233, line: 107, baseType: !155, size: 32, offset: 128)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2939, file: !233, line: 127, baseType: !103, size: 32, offset: 160)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2939, file: !233, line: 131, baseType: !2986, size: 192, offset: 192)
!2986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !269, line: 244, size: 192, elements: !2987)
!2987 = !{!2988, !2989, !2995}
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2986, file: !269, line: 245, baseType: !2945, size: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2986, file: !269, line: 246, baseType: !2990, size: 32, offset: 64)
!2990 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !269, line: 242, baseType: !2991)
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 32)
!2992 = !DISubroutineType(types: !2993)
!2993 = !{null, !2994}
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2986, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2986, file: !269, line: 249, baseType: !302, size: 64, offset: 128)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2936, file: !233, line: 250, baseType: !2997, size: 288, offset: 384)
!2997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !306, line: 25, size: 288, elements: !2998)
!2998 = !{!2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2997, file: !306, line: 26, baseType: !155, size: 32)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2997, file: !306, line: 27, baseType: !155, size: 32, offset: 32)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2997, file: !306, line: 28, baseType: !155, size: 32, offset: 64)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2997, file: !306, line: 29, baseType: !155, size: 32, offset: 96)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2997, file: !306, line: 30, baseType: !155, size: 32, offset: 128)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2997, file: !306, line: 31, baseType: !155, size: 32, offset: 160)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2997, file: !306, line: 32, baseType: !155, size: 32, offset: 192)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2997, file: !306, line: 33, baseType: !155, size: 32, offset: 224)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2997, file: !306, line: 34, baseType: !155, size: 32, offset: 256)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2936, file: !233, line: 253, baseType: !103, size: 32, offset: 672)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2936, file: !233, line: 256, baseType: !2967, size: 64, offset: 704)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2936, file: !233, line: 294, baseType: !104, size: 32, offset: 768)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2936, file: !233, line: 300, baseType: !3012, size: 96, offset: 800)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !233, line: 149, size: 96, elements: !3013)
!3013 = !{!3014, !3015, !3016}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3012, file: !233, line: 153, baseType: !22, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3012, file: !233, line: 162, baseType: !222, size: 32, offset: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3012, file: !233, line: 168, baseType: !222, size: 32, offset: 64)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2936, file: !233, line: 325, baseType: !3018, size: 32, offset: 896)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 32)
!3019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !329, line: 5073, size: 160, elements: !3020)
!3020 = !{!3021, !3027, !3028}
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3019, file: !329, line: 5074, baseType: !3022, size: 96)
!3022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !333, line: 56, size: 96, elements: !3023)
!3023 = !{!3024, !3025, !3026}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3022, file: !333, line: 57, baseType: !336, size: 32)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3022, file: !333, line: 58, baseType: !103, size: 32, offset: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3022, file: !333, line: 59, baseType: !222, size: 32, offset: 64)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3019, file: !329, line: 5075, baseType: !2967, size: 64, offset: 96)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3019, file: !329, line: 5076, baseType: !3029, offset: 160)
!3029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !343, line: 43, elements: !344)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2936, file: !233, line: 343, baseType: !3031, size: 64, offset: 928)
!3031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !306, line: 60, size: 64, elements: !3032)
!3032 = !{!3033, !3034}
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3031, file: !306, line: 63, baseType: !155, size: 32)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3031, file: !306, line: 66, baseType: !155, size: 32, offset: 32)
!3035 = !{!3036, !3037}
!3036 = !DILocalVariable(name: "object", arg: 1, scope: !2931, file: !2932, line: 24, type: !13)
!3037 = !DILocalVariable(name: "thread", arg: 2, scope: !2931, file: !2932, line: 24, type: !2935)
!3038 = !DILocation(line: 0, scope: !2931)
!3039 = !DILocation(line: 34, column: 2, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !2931, file: !2932, line: 34, column: 2)
!3041 = !{i64 2153766923}
!3042 = !DILocation(line: 36, column: 1, scope: !2931)
!3043 = distinct !DISubprogram(name: "user_entry", scope: !106, file: !106, line: 13, type: !3044, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3046)
!3044 = !DISubroutineType(types: !3045)
!3045 = !{null, !103, !103, !103}
!3046 = !{!3047, !3048, !3049}
!3047 = !DILocalVariable(name: "p1", arg: 1, scope: !3043, file: !106, line: 13, type: !103)
!3048 = !DILocalVariable(name: "p2", arg: 2, scope: !3043, file: !106, line: 13, type: !103)
!3049 = !DILocalVariable(name: "p3", arg: 3, scope: !3043, file: !106, line: 13, type: !103)
!3050 = !DILocation(line: 0, scope: !3043)
!3051 = !DILocation(line: 15, column: 20, scope: !3043)
!3052 = !DILocation(line: 15, column: 2, scope: !3043)
!3053 = !DILocation(line: 16, column: 1, scope: !3043)
!3054 = distinct !DISubprogram(name: "hello_world_print", scope: !3055, file: !3055, line: 24, type: !3056, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3058)
!3055 = !DIFile(filename: "zephyr/include/generated/syscalls/hello_world_driver.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!3056 = !DISubroutineType(types: !3057)
!3057 = !{null, !107}
!3058 = !{!3059}
!3059 = !DILocalVariable(name: "dev", arg: 1, scope: !3054, file: !3055, line: 24, type: !107)
!3060 = !DILocation(line: 0, scope: !3054)
!3061 = !DILocation(line: 33, column: 2, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3054, file: !3055, line: 33, column: 2)
!3063 = !{i64 2149105475}
!3064 = !DILocation(line: 34, column: 2, scope: !3054)
!3065 = !DILocation(line: 35, column: 1, scope: !3054)
!3066 = distinct !DISubprogram(name: "z_impl_hello_world_print", scope: !3067, file: !3067, line: 34, type: !3056, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3068)
!3067 = !DIFile(filename: "zephyr/samples/application_development/out_of_tree_driver/hello_world_module/zephyr/./hello_world_driver.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3068 = !{!3069, !3070}
!3069 = !DILocalVariable(name: "dev", arg: 1, scope: !3066, file: !3067, line: 34, type: !107)
!3070 = !DILocalVariable(name: "api", scope: !3066, file: !3067, line: 36, type: !3071)
!3071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3072, size: 32)
!3072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3073)
!3073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hello_world_driver_api", file: !3067, line: 25, size: 32, elements: !3074)
!3074 = !{!3075}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "print", scope: !3073, file: !3067, line: 30, baseType: !3076, size: 32)
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3056, size: 32)
!3077 = !DILocation(line: 0, scope: !3066)
!3078 = !DILocation(line: 36, column: 50, scope: !3066)
!3079 = !DILocation(line: 40, column: 7, scope: !3066)
!3080 = !DILocation(line: 40, column: 2, scope: !3066)
!3081 = !DILocation(line: 41, column: 1, scope: !3066)
!3082 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !139, file: !139, line: 45, type: !141, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3083)
!3083 = !{!3084}
!3084 = !DILocalVariable(name: "c", arg: 1, scope: !3082, file: !139, line: 45, type: !104)
!3085 = !DILocation(line: 0, scope: !3082)
!3086 = !DILocation(line: 50, column: 2, scope: !3082)
!3087 = distinct !DISubprogram(name: "__printk_hook_install", scope: !139, file: !139, line: 63, type: !3088, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3090)
!3088 = !DISubroutineType(types: !3089)
!3089 = !{null, !140}
!3090 = !{!3091}
!3091 = !DILocalVariable(name: "fn", arg: 1, scope: !3087, file: !139, line: 63, type: !140)
!3092 = !DILocation(line: 0, scope: !3087)
!3093 = !DILocation(line: 65, column: 12, scope: !3087)
!3094 = !DILocation(line: 66, column: 1, scope: !3087)
!3095 = distinct !DISubprogram(name: "__printk_get_hook", scope: !139, file: !139, line: 76, type: !3096, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !344)
!3096 = !DISubroutineType(types: !3097)
!3097 = !{!103}
!3098 = !DILocation(line: 78, column: 9, scope: !3095)
!3099 = !DILocation(line: 78, column: 2, scope: !3095)
!3100 = distinct !DISubprogram(name: "vprintk", scope: !139, file: !139, line: 113, type: !3101, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3110)
!3101 = !DISubroutineType(types: !3102)
!3102 = !{null, !113, !3103}
!3103 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3104, line: 99, baseType: !3105)
!3104 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3105 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3104, line: 40, baseType: !3106)
!3106 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !139, baseType: !3107)
!3107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3108)
!3108 = !{!3109}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3107, file: !139, line: 79, baseType: !103, size: 32)
!3110 = !{!3111, !3112, !3113}
!3111 = !DILocalVariable(name: "fmt", arg: 1, scope: !3100, file: !139, line: 113, type: !113)
!3112 = !DILocalVariable(name: "ap", arg: 2, scope: !3100, file: !139, line: 113, type: !3103)
!3113 = !DILocalVariable(name: "ctx", scope: !3114, file: !139, line: 121, type: !3116)
!3114 = distinct !DILexicalBlock(scope: !3115, file: !139, line: 120, column: 27)
!3115 = distinct !DILexicalBlock(scope: !3100, file: !139, line: 120, column: 6)
!3116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !139, line: 81, size: 32, elements: !3117)
!3117 = !{!3118, !3119}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3116, file: !139, line: 85, baseType: !32, size: 32)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3116, file: !139, line: 86, baseType: !3120, offset: 32)
!3120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !115, elements: !3121)
!3121 = !{!3122}
!3122 = !DISubrange(count: 0)
!3123 = !DILocation(line: 0, scope: !3100)
!3124 = !DILocation(line: 148, column: 3, scope: !3125)
!3125 = distinct !DILexicalBlock(scope: !3115, file: !139, line: 138, column: 9)
!3126 = !DILocation(line: 155, column: 1, scope: !3100)
!3127 = distinct !DISubprogram(name: "char_out", scope: !139, file: !139, line: 107, type: !3128, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3130)
!3128 = !DISubroutineType(types: !3129)
!3129 = !{!104, !104, !103}
!3130 = !{!3131, !3132}
!3131 = !DILocalVariable(name: "c", arg: 1, scope: !3127, file: !139, line: 107, type: !104)
!3132 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3127, file: !139, line: 107, type: !103)
!3133 = !DILocation(line: 0, scope: !3127)
!3134 = !DILocation(line: 110, column: 9, scope: !3127)
!3135 = !DILocation(line: 110, column: 2, scope: !3127)
!3136 = distinct !DISubprogram(name: "cbvprintf", scope: !3137, file: !3137, line: 739, type: !3138, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3144)
!3137 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3138 = !DISubroutineType(types: !3139)
!3139 = !{!104, !3140, !103, !113, !3103}
!3140 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3137, line: 297, baseType: !3141)
!3141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 32)
!3142 = !DISubroutineType(types: !3143)
!3143 = !{!104, null}
!3144 = !{!3145, !3146, !3147, !3148}
!3145 = !DILocalVariable(name: "out", arg: 1, scope: !3136, file: !3137, line: 739, type: !3140)
!3146 = !DILocalVariable(name: "ctx", arg: 2, scope: !3136, file: !3137, line: 739, type: !103)
!3147 = !DILocalVariable(name: "format", arg: 3, scope: !3136, file: !3137, line: 739, type: !113)
!3148 = !DILocalVariable(name: "ap", arg: 4, scope: !3136, file: !3137, line: 739, type: !3103)
!3149 = !DILocation(line: 0, scope: !3136)
!3150 = !DILocation(line: 741, column: 9, scope: !3136)
!3151 = !DILocation(line: 741, column: 2, scope: !3136)
!3152 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !139, file: !139, line: 157, type: !3153, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3155)
!3153 = !DISubroutineType(types: !3154)
!3154 = !{null, !981, !222}
!3155 = !{!3156, !3157, !3158}
!3156 = !DILocalVariable(name: "c", arg: 1, scope: !3152, file: !139, line: 157, type: !981)
!3157 = !DILocalVariable(name: "n", arg: 2, scope: !3152, file: !139, line: 157, type: !222)
!3158 = !DILocalVariable(name: "i", scope: !3152, file: !139, line: 159, type: !222)
!3159 = !DILocation(line: 0, scope: !3152)
!3160 = !DILocation(line: 164, column: 16, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3162, file: !139, line: 164, column: 2)
!3162 = distinct !DILexicalBlock(scope: !3152, file: !139, line: 164, column: 2)
!3163 = !DILocation(line: 164, column: 2, scope: !3162)
!3164 = !DILocation(line: 165, column: 3, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3161, file: !139, line: 164, column: 26)
!3166 = !DILocation(line: 165, column: 13, scope: !3165)
!3167 = !DILocation(line: 164, column: 22, scope: !3161)
!3168 = distinct !{!3168, !3163, !3169}
!3169 = !DILocation(line: 166, column: 2, scope: !3162)
!3170 = !DILocation(line: 171, column: 1, scope: !3152)
!3171 = distinct !DISubprogram(name: "printk", scope: !139, file: !139, line: 203, type: !3172, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3174)
!3172 = !DISubroutineType(types: !3173)
!3173 = !{null, !113, null}
!3174 = !{!3175, !3176}
!3175 = !DILocalVariable(name: "fmt", arg: 1, scope: !3171, file: !139, line: 203, type: !113)
!3176 = !DILocalVariable(name: "ap", scope: !3171, file: !139, line: 205, type: !3103)
!3177 = !DILocation(line: 0, scope: !3171)
!3178 = !DILocation(line: 205, column: 2, scope: !3171)
!3179 = !DILocation(line: 205, column: 10, scope: !3171)
!3180 = !DILocation(line: 207, column: 2, scope: !3171)
!3181 = !DILocation(line: 209, column: 2, scope: !3171)
!3182 = !DILocation(line: 211, column: 2, scope: !3171)
!3183 = !DILocation(line: 212, column: 1, scope: !3171)
!3184 = distinct !DISubprogram(name: "snprintk", scope: !139, file: !139, line: 239, type: !3185, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3187)
!3185 = !DISubroutineType(types: !3186)
!3186 = !{!104, !981, !222, !113, null}
!3187 = !{!3188, !3189, !3190, !3191, !3192}
!3188 = !DILocalVariable(name: "str", arg: 1, scope: !3184, file: !139, line: 239, type: !981)
!3189 = !DILocalVariable(name: "size", arg: 2, scope: !3184, file: !139, line: 239, type: !222)
!3190 = !DILocalVariable(name: "fmt", arg: 3, scope: !3184, file: !139, line: 239, type: !113)
!3191 = !DILocalVariable(name: "ap", scope: !3184, file: !139, line: 241, type: !3103)
!3192 = !DILocalVariable(name: "ret", scope: !3184, file: !139, line: 242, type: !104)
!3193 = !DILocation(line: 0, scope: !3184)
!3194 = !DILocation(line: 241, column: 2, scope: !3184)
!3195 = !DILocation(line: 241, column: 10, scope: !3184)
!3196 = !DILocation(line: 244, column: 2, scope: !3184)
!3197 = !DILocation(line: 245, column: 8, scope: !3184)
!3198 = !DILocation(line: 246, column: 2, scope: !3184)
!3199 = !DILocation(line: 249, column: 1, scope: !3184)
!3200 = !DILocation(line: 248, column: 2, scope: !3184)
!3201 = distinct !DISubprogram(name: "vsnprintk", scope: !139, file: !139, line: 251, type: !3202, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3204)
!3202 = !DISubroutineType(types: !3203)
!3203 = !{!104, !981, !222, !113, !3103}
!3204 = !{!3205, !3206, !3207, !3208, !3209}
!3205 = !DILocalVariable(name: "str", arg: 1, scope: !3201, file: !139, line: 251, type: !981)
!3206 = !DILocalVariable(name: "size", arg: 2, scope: !3201, file: !139, line: 251, type: !222)
!3207 = !DILocalVariable(name: "fmt", arg: 3, scope: !3201, file: !139, line: 251, type: !113)
!3208 = !DILocalVariable(name: "ap", arg: 4, scope: !3201, file: !139, line: 251, type: !3103)
!3209 = !DILocalVariable(name: "ctx", scope: !3201, file: !139, line: 253, type: !3210)
!3210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !139, line: 217, size: 96, elements: !3211)
!3211 = !{!3212, !3213, !3214}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3210, file: !139, line: 218, baseType: !981, size: 32)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3210, file: !139, line: 219, baseType: !104, size: 32, offset: 32)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3210, file: !139, line: 220, baseType: !104, size: 32, offset: 64)
!3215 = !DILocation(line: 0, scope: !3201)
!3216 = !DILocation(line: 253, column: 2, scope: !3201)
!3217 = !DILocation(line: 253, column: 21, scope: !3201)
!3218 = !DILocation(line: 253, column: 27, scope: !3201)
!3219 = !DILocation(line: 255, column: 2, scope: !3201)
!3220 = !DILocation(line: 257, column: 10, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3201, file: !139, line: 257, column: 6)
!3222 = !DILocation(line: 257, column: 22, scope: !3221)
!3223 = !DILocation(line: 257, column: 16, scope: !3221)
!3224 = !DILocation(line: 257, column: 6, scope: !3201)
!3225 = !DILocation(line: 258, column: 3, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3221, file: !139, line: 257, column: 27)
!3227 = !DILocation(line: 258, column: 18, scope: !3226)
!3228 = !DILocation(line: 259, column: 2, scope: !3226)
!3229 = !DILocation(line: 262, column: 1, scope: !3201)
!3230 = !DILocation(line: 261, column: 2, scope: !3201)
!3231 = distinct !DISubprogram(name: "str_out", scope: !139, file: !139, line: 223, type: !3232, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !136, retainedNodes: !3235)
!3232 = !DISubroutineType(types: !3233)
!3233 = !{!104, !104, !3234}
!3234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3210, size: 32)
!3235 = !{!3236, !3237}
!3236 = !DILocalVariable(name: "c", arg: 1, scope: !3231, file: !139, line: 223, type: !104)
!3237 = !DILocalVariable(name: "ctx", arg: 2, scope: !3231, file: !139, line: 223, type: !3234)
!3238 = !DILocation(line: 0, scope: !3231)
!3239 = !DILocation(line: 225, column: 11, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3231, file: !139, line: 225, column: 6)
!3241 = !DILocation(line: 225, column: 15, scope: !3240)
!3242 = !DILocation(line: 0, scope: !3240)
!3243 = !DILocation(line: 225, column: 23, scope: !3240)
!3244 = !DILocation(line: 225, column: 45, scope: !3240)
!3245 = !DILocation(line: 225, column: 37, scope: !3240)
!3246 = !DILocation(line: 225, column: 6, scope: !3231)
!3247 = !DILocation(line: 226, column: 8, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3240, file: !139, line: 225, column: 50)
!3249 = !DILocation(line: 226, column: 13, scope: !3248)
!3250 = !DILocation(line: 227, column: 3, scope: !3248)
!3251 = !DILocation(line: 230, column: 29, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3231, file: !139, line: 230, column: 6)
!3253 = !DILocation(line: 230, column: 17, scope: !3252)
!3254 = !DILocation(line: 230, column: 6, scope: !3231)
!3255 = !DILocation(line: 231, column: 22, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3252, file: !139, line: 230, column: 34)
!3257 = !DILocation(line: 231, column: 3, scope: !3256)
!3258 = !DILocation(line: 231, column: 26, scope: !3256)
!3259 = !DILocation(line: 232, column: 2, scope: !3256)
!3260 = !DILocation(line: 233, column: 28, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3252, file: !139, line: 232, column: 9)
!3262 = !DILocation(line: 233, column: 22, scope: !3261)
!3263 = !DILocation(line: 233, column: 3, scope: !3261)
!3264 = !DILocation(line: 233, column: 26, scope: !3261)
!3265 = !DILocation(line: 237, column: 1, scope: !3231)
!3266 = distinct !DISubprogram(name: "z_thread_entry", scope: !3267, file: !3267, line: 30, type: !3268, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !3273)
!3267 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3268 = !DISubroutineType(types: !3269)
!3269 = !{null, !3270, !103, !103, !103}
!3270 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3271, line: 46, baseType: !3272)
!3271 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3044, size: 32)
!3273 = !{!3274, !3275, !3276, !3277}
!3274 = !DILocalVariable(name: "entry", arg: 1, scope: !3266, file: !3267, line: 30, type: !3270)
!3275 = !DILocalVariable(name: "p1", arg: 2, scope: !3266, file: !3267, line: 31, type: !103)
!3276 = !DILocalVariable(name: "p2", arg: 3, scope: !3266, file: !3267, line: 31, type: !103)
!3277 = !DILocalVariable(name: "p3", arg: 4, scope: !3266, file: !3267, line: 31, type: !103)
!3278 = !DILocation(line: 0, scope: !3266)
!3279 = !DILocation(line: 36, column: 2, scope: !3266)
!3280 = !DILocation(line: 38, column: 17, scope: !3266)
!3281 = !DILocation(line: 38, column: 2, scope: !3266)
!3282 = !DILocation(line: 45, column: 2, scope: !3266)
!3283 = distinct !DISubprogram(name: "k_current_get", scope: !329, file: !329, line: 530, type: !3284, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !344)
!3284 = !DISubroutineType(types: !3285)
!3285 = !{!3286}
!3286 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !233, line: 347, baseType: !3287)
!3287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3288, size: 32)
!3288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !233, line: 245, size: 1024, elements: !3289)
!3289 = !{!3290, !3348, !3360, !3361, !3362, !3363, !3369, !3382}
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3288, file: !233, line: 247, baseType: !3291, size: 384)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !233, line: 57, size: 384, elements: !3292)
!3292 = !{!3293, !3317, !3324, !3325, !3326, !3335, !3336, !3337}
!3293 = !DIDerivedType(tag: DW_TAG_member, scope: !3291, file: !233, line: 60, baseType: !3294, size: 64)
!3294 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3291, file: !233, line: 60, size: 64, elements: !3295)
!3295 = !{!3296, !3311}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3294, file: !233, line: 61, baseType: !3297, size: 64)
!3297 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !243, line: 49, baseType: !3298)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !243, line: 37, size: 64, elements: !3299)
!3299 = !{!3300, !3306}
!3300 = !DIDerivedType(tag: DW_TAG_member, scope: !3298, file: !243, line: 38, baseType: !3301, size: 32)
!3301 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3298, file: !243, line: 38, size: 32, elements: !3302)
!3302 = !{!3303, !3305}
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3301, file: !243, line: 39, baseType: !3304, size: 32)
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 32)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3301, file: !243, line: 40, baseType: !3304, size: 32)
!3306 = !DIDerivedType(tag: DW_TAG_member, scope: !3298, file: !243, line: 42, baseType: !3307, size: 32, offset: 32)
!3307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3298, file: !243, line: 42, size: 32, elements: !3308)
!3308 = !{!3309, !3310}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3307, file: !243, line: 43, baseType: !3304, size: 32)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3307, file: !243, line: 44, baseType: !3304, size: 32)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3294, file: !233, line: 62, baseType: !3312, size: 64)
!3312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !259, line: 49, size: 64, elements: !3313)
!3313 = !{!3314}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3312, file: !259, line: 50, baseType: !3315, size: 64)
!3315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3316, size: 64, elements: !264)
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3312, size: 32)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3291, file: !233, line: 68, baseType: !3318, size: 32, offset: 64)
!3318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3319, size: 32)
!3319 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !269, line: 233, baseType: !3320)
!3320 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !269, line: 231, size: 64, elements: !3321)
!3321 = !{!3322}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3320, file: !269, line: 232, baseType: !3323, size: 64)
!3323 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !243, line: 48, baseType: !3298)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3291, file: !233, line: 71, baseType: !123, size: 8, offset: 96)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3291, file: !233, line: 74, baseType: !123, size: 8, offset: 104)
!3326 = !DIDerivedType(tag: DW_TAG_member, scope: !3291, file: !233, line: 90, baseType: !3327, size: 16, offset: 112)
!3327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3291, file: !233, line: 90, size: 16, elements: !3328)
!3328 = !{!3329, !3334}
!3329 = !DIDerivedType(tag: DW_TAG_member, scope: !3327, file: !233, line: 91, baseType: !3330, size: 16)
!3330 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3327, file: !233, line: 91, size: 16, elements: !3331)
!3331 = !{!3332, !3333}
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3330, file: !233, line: 96, baseType: !283, size: 8)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3330, file: !233, line: 97, baseType: !123, size: 8, offset: 8)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3327, file: !233, line: 100, baseType: !287, size: 16)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3291, file: !233, line: 107, baseType: !155, size: 32, offset: 128)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3291, file: !233, line: 127, baseType: !103, size: 32, offset: 160)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3291, file: !233, line: 131, baseType: !3338, size: 192, offset: 192)
!3338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !269, line: 244, size: 192, elements: !3339)
!3339 = !{!3340, !3341, !3347}
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3338, file: !269, line: 245, baseType: !3297, size: 64)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3338, file: !269, line: 246, baseType: !3342, size: 32, offset: 64)
!3342 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !269, line: 242, baseType: !3343)
!3343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3344, size: 32)
!3344 = !DISubroutineType(types: !3345)
!3345 = !{null, !3346}
!3346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3338, size: 32)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3338, file: !269, line: 249, baseType: !302, size: 64, offset: 128)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3288, file: !233, line: 250, baseType: !3349, size: 288, offset: 384)
!3349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !306, line: 25, size: 288, elements: !3350)
!3350 = !{!3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359}
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3349, file: !306, line: 26, baseType: !155, size: 32)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3349, file: !306, line: 27, baseType: !155, size: 32, offset: 32)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3349, file: !306, line: 28, baseType: !155, size: 32, offset: 64)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3349, file: !306, line: 29, baseType: !155, size: 32, offset: 96)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3349, file: !306, line: 30, baseType: !155, size: 32, offset: 128)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3349, file: !306, line: 31, baseType: !155, size: 32, offset: 160)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3349, file: !306, line: 32, baseType: !155, size: 32, offset: 192)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3349, file: !306, line: 33, baseType: !155, size: 32, offset: 224)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3349, file: !306, line: 34, baseType: !155, size: 32, offset: 256)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3288, file: !233, line: 253, baseType: !103, size: 32, offset: 672)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3288, file: !233, line: 256, baseType: !3319, size: 64, offset: 704)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3288, file: !233, line: 294, baseType: !104, size: 32, offset: 768)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3288, file: !233, line: 300, baseType: !3364, size: 96, offset: 800)
!3364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !233, line: 149, size: 96, elements: !3365)
!3365 = !{!3366, !3367, !3368}
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3364, file: !233, line: 153, baseType: !22, size: 32)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3364, file: !233, line: 162, baseType: !222, size: 32, offset: 32)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3364, file: !233, line: 168, baseType: !222, size: 32, offset: 64)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3288, file: !233, line: 325, baseType: !3370, size: 32, offset: 896)
!3370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3371, size: 32)
!3371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !329, line: 5073, size: 160, elements: !3372)
!3372 = !{!3373, !3379, !3380}
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3371, file: !329, line: 5074, baseType: !3374, size: 96)
!3374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !333, line: 56, size: 96, elements: !3375)
!3375 = !{!3376, !3377, !3378}
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3374, file: !333, line: 57, baseType: !336, size: 32)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3374, file: !333, line: 58, baseType: !103, size: 32, offset: 32)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3374, file: !333, line: 59, baseType: !222, size: 32, offset: 64)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3371, file: !329, line: 5075, baseType: !3319, size: 64, offset: 96)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3371, file: !329, line: 5076, baseType: !3381, offset: 160)
!3381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !343, line: 43, elements: !344)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3288, file: !233, line: 343, baseType: !3383, size: 64, offset: 928)
!3383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !306, line: 60, size: 64, elements: !3384)
!3384 = !{!3385, !3386}
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3383, file: !306, line: 63, baseType: !155, size: 32)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3383, file: !306, line: 66, baseType: !155, size: 32, offset: 32)
!3387 = !DILocation(line: 535, column: 9, scope: !3283)
!3388 = !DILocation(line: 535, column: 2, scope: !3283)
!3389 = distinct !DISubprogram(name: "k_thread_abort", scope: !3390, file: !3390, line: 188, type: !3391, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !3393)
!3390 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!3391 = !DISubroutineType(types: !3392)
!3392 = !{null, !3286}
!3393 = !{!3394}
!3394 = !DILocalVariable(name: "thread", arg: 1, scope: !3389, file: !3390, line: 188, type: !3286)
!3395 = !DILocation(line: 0, scope: !3389)
!3396 = !DILocation(line: 197, column: 2, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3389, file: !3390, line: 197, column: 2)
!3398 = !{i64 2154061214}
!3399 = !DILocation(line: 198, column: 2, scope: !3389)
!3400 = !DILocation(line: 199, column: 1, scope: !3389)
!3401 = distinct !DISubprogram(name: "z_current_get", scope: !3390, file: !3390, line: 173, type: !3284, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2218, retainedNodes: !344)
!3402 = !DILocation(line: 180, column: 2, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3401, file: !3390, line: 180, column: 2)
!3404 = !{i64 2154061146}
!3405 = !DILocation(line: 181, column: 9, scope: !3401)
!3406 = !DILocation(line: 181, column: 2, scope: !3401)
!3407 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2224, file: !2224, line: 1338, type: !3408, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !3416)
!3408 = !DISubroutineType(types: !3409)
!3409 = !{!104, !3140, !103, !113, !3410, !155}
!3410 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3104, line: 99, baseType: !3411)
!3411 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3104, line: 40, baseType: !3412)
!3412 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2224, baseType: !3413)
!3413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3414)
!3414 = !{!3415}
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3413, file: !2224, baseType: !103, size: 32)
!3416 = !{!3417, !3418, !3419, !3420, !3421, !3422, !3426, !3427, !3428, !3430, !3435, !3480, !3483, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3495, !3496, !3497, !3501, !3504, !3506, !3509, !3510, !3511, !3516, !3522, !3525, !3529, !3535, !3539, !3542, !3544, !3547}
!3417 = !DILocalVariable(name: "out", arg: 1, scope: !3407, file: !2224, line: 1338, type: !3140)
!3418 = !DILocalVariable(name: "ctx", arg: 2, scope: !3407, file: !2224, line: 1338, type: !103)
!3419 = !DILocalVariable(name: "fp", arg: 3, scope: !3407, file: !2224, line: 1338, type: !113)
!3420 = !DILocalVariable(name: "ap", arg: 4, scope: !3407, file: !2224, line: 1339, type: !3410)
!3421 = !DILocalVariable(name: "flags", arg: 5, scope: !3407, file: !2224, line: 1339, type: !155)
!3422 = !DILocalVariable(name: "buf", scope: !3407, file: !2224, line: 1341, type: !3423)
!3423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !115, size: 176, elements: !3424)
!3424 = !{!3425}
!3425 = !DISubrange(count: 22)
!3426 = !DILocalVariable(name: "count", scope: !3407, file: !2224, line: 1342, type: !222)
!3427 = !DILocalVariable(name: "sint", scope: !3407, file: !2224, line: 1343, type: !2243)
!3428 = !DILocalVariable(name: "tagged_ap", scope: !3407, file: !2224, line: 1345, type: !3429)
!3429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !126)
!3430 = !DILocalVariable(name: "rc", scope: !3431, file: !2224, line: 1377, type: !104)
!3431 = distinct !DILexicalBlock(scope: !3432, file: !2224, line: 1377, column: 4)
!3432 = distinct !DILexicalBlock(scope: !3433, file: !2224, line: 1376, column: 19)
!3433 = distinct !DILexicalBlock(scope: !3434, file: !2224, line: 1376, column: 7)
!3434 = distinct !DILexicalBlock(scope: !3407, file: !2224, line: 1375, column: 19)
!3435 = !DILocalVariable(name: "state", scope: !3434, file: !2224, line: 1395, type: !3436)
!3436 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3407, file: !2224, line: 1392, size: 192, elements: !3437)
!3437 = !{!3438, !3448}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3436, file: !2224, line: 1393, baseType: !3439, size: 64)
!3439 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2224, line: 166, size: 64, elements: !3440)
!3440 = !{!3441, !3442, !3443, !3445, !3447}
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !3439, file: !2224, line: 168, baseType: !2243, size: 64)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !3439, file: !2224, line: 171, baseType: !2246, size: 64)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !3439, file: !2224, line: 174, baseType: !3444, size: 64)
!3444 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !3439, file: !2224, line: 177, baseType: !3446, size: 64)
!3446 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3439, file: !2224, line: 180, baseType: !103, size: 32)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !3436, file: !2224, line: 1394, baseType: !3449, size: 96, offset: 64)
!3449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2224, line: 189, size: 96, elements: !3450)
!3450 = !{!3451, !3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3475}
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !3449, file: !2224, line: 191, baseType: !126, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !3449, file: !2224, line: 194, baseType: !126, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !3449, file: !2224, line: 197, baseType: !126, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !3449, file: !2224, line: 200, baseType: !126, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !3449, file: !2224, line: 203, baseType: !126, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !3449, file: !2224, line: 206, baseType: !126, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !3449, file: !2224, line: 209, baseType: !126, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !3449, file: !2224, line: 212, baseType: !126, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !3449, file: !2224, line: 219, baseType: !126, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !3449, file: !2224, line: 222, baseType: !126, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !3449, file: !2224, line: 229, baseType: !126, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !3449, file: !2224, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !3449, file: !2224, line: 238, baseType: !126, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !3449, file: !2224, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !3449, file: !2224, line: 244, baseType: !126, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !3449, file: !2224, line: 247, baseType: !126, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !3449, file: !2224, line: 252, baseType: !126, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !3449, file: !2224, line: 257, baseType: !126, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !3449, file: !2224, line: 260, baseType: !124, size: 8, offset: 24)
!3470 = !DIDerivedType(tag: DW_TAG_member, scope: !3449, file: !2224, line: 262, baseType: !3471, size: 32, offset: 32)
!3471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3449, file: !2224, line: 262, size: 32, elements: !3472)
!3472 = !{!3473, !3474}
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !3471, file: !2224, line: 267, baseType: !104, size: 32)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !3471, file: !2224, line: 289, baseType: !104, size: 32)
!3475 = !DIDerivedType(tag: DW_TAG_member, scope: !3449, file: !2224, line: 292, baseType: !3476, size: 32, offset: 64)
!3476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3449, file: !2224, line: 292, size: 32, elements: !3477)
!3477 = !{!3478, !3479}
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !3476, file: !2224, line: 297, baseType: !104, size: 32)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !3476, file: !2224, line: 306, baseType: !104, size: 32)
!3480 = !DILocalVariable(name: "conv", scope: !3434, file: !2224, line: 1400, type: !3481)
!3481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3482)
!3482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 32)
!3483 = !DILocalVariable(name: "value", scope: !3434, file: !2224, line: 1401, type: !3484)
!3484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3485)
!3485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3439, size: 32)
!3486 = !DILocalVariable(name: "sp", scope: !3434, file: !2224, line: 1402, type: !113)
!3487 = !DILocalVariable(name: "width", scope: !3434, file: !2224, line: 1403, type: !104)
!3488 = !DILocalVariable(name: "precision", scope: !3434, file: !2224, line: 1404, type: !104)
!3489 = !DILocalVariable(name: "bps", scope: !3434, file: !2224, line: 1405, type: !113)
!3490 = !DILocalVariable(name: "bpe", scope: !3434, file: !2224, line: 1406, type: !113)
!3491 = !DILocalVariable(name: "sign", scope: !3434, file: !2224, line: 1407, type: !115)
!3492 = !DILocalVariable(name: "arg", scope: !3493, file: !2224, line: 1432, type: !104)
!3493 = distinct !DILexicalBlock(scope: !3494, file: !2224, line: 1431, column: 24)
!3494 = distinct !DILexicalBlock(scope: !3434, file: !2224, line: 1431, column: 7)
!3495 = !DILocalVariable(name: "specifier_cat", scope: !3434, file: !2224, line: 1468, type: !2223)
!3496 = !DILocalVariable(name: "length_mod", scope: !3434, file: !2224, line: 1470, type: !2231)
!3497 = !DILocalVariable(name: "rc", scope: !3498, file: !2224, line: 1575, type: !104)
!3498 = distinct !DILexicalBlock(scope: !3499, file: !2224, line: 1575, column: 4)
!3499 = distinct !DILexicalBlock(scope: !3500, file: !2224, line: 1574, column: 43)
!3500 = distinct !DILexicalBlock(scope: !3434, file: !2224, line: 1574, column: 7)
!3501 = !DILocalVariable(name: "rc", scope: !3502, file: !2224, line: 1584, type: !104)
!3502 = distinct !DILexicalBlock(scope: !3503, file: !2224, line: 1584, column: 4)
!3503 = distinct !DILexicalBlock(scope: !3434, file: !2224, line: 1582, column: 28)
!3504 = !DILocalVariable(name: "len", scope: !3505, file: !2224, line: 1589, type: !222)
!3505 = distinct !DILexicalBlock(scope: !3503, file: !2224, line: 1586, column: 13)
!3506 = !DILocalVariable(name: "len", scope: !3507, file: !2224, line: 1641, type: !222)
!3507 = distinct !DILexicalBlock(scope: !3508, file: !2224, line: 1640, column: 24)
!3508 = distinct !DILexicalBlock(scope: !3503, file: !2224, line: 1640, column: 8)
!3509 = !DILocalVariable(name: "nj_len", scope: !3434, file: !2224, line: 1722, type: !222)
!3510 = !DILocalVariable(name: "pad_len", scope: !3434, file: !2224, line: 1723, type: !104)
!3511 = !DILocalVariable(name: "pad", scope: !3512, file: !2224, line: 1751, type: !115)
!3512 = distinct !DILexicalBlock(scope: !3513, file: !2224, line: 1750, column: 26)
!3513 = distinct !DILexicalBlock(scope: !3514, file: !2224, line: 1750, column: 8)
!3514 = distinct !DILexicalBlock(scope: !3515, file: !2224, line: 1747, column: 18)
!3515 = distinct !DILexicalBlock(scope: !3434, file: !2224, line: 1747, column: 7)
!3516 = !DILocalVariable(name: "rc", scope: !3517, file: !2224, line: 1758, type: !104)
!3517 = distinct !DILexicalBlock(scope: !3518, file: !2224, line: 1758, column: 7)
!3518 = distinct !DILexicalBlock(scope: !3519, file: !2224, line: 1757, column: 21)
!3519 = distinct !DILexicalBlock(scope: !3520, file: !2224, line: 1757, column: 10)
!3520 = distinct !DILexicalBlock(scope: !3521, file: !2224, line: 1756, column: 26)
!3521 = distinct !DILexicalBlock(scope: !3512, file: !2224, line: 1756, column: 9)
!3522 = !DILocalVariable(name: "rc", scope: !3523, file: !2224, line: 1765, type: !104)
!3523 = distinct !DILexicalBlock(scope: !3524, file: !2224, line: 1765, column: 6)
!3524 = distinct !DILexicalBlock(scope: !3512, file: !2224, line: 1764, column: 25)
!3525 = !DILocalVariable(name: "rc", scope: !3526, file: !2224, line: 1774, type: !104)
!3526 = distinct !DILexicalBlock(scope: !3527, file: !2224, line: 1774, column: 4)
!3527 = distinct !DILexicalBlock(scope: !3528, file: !2224, line: 1773, column: 18)
!3528 = distinct !DILexicalBlock(scope: !3434, file: !2224, line: 1773, column: 7)
!3529 = !DILocalVariable(name: "rc", scope: !3530, file: !2224, line: 1819, type: !104)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !2224, line: 1819, column: 5)
!3531 = distinct !DILexicalBlock(scope: !3532, file: !2224, line: 1818, column: 44)
!3532 = distinct !DILexicalBlock(scope: !3533, file: !2224, line: 1818, column: 8)
!3533 = distinct !DILexicalBlock(scope: !3534, file: !2224, line: 1817, column: 10)
!3534 = distinct !DILexicalBlock(scope: !3434, file: !2224, line: 1777, column: 7)
!3535 = !DILocalVariable(name: "rc", scope: !3536, file: !2224, line: 1823, type: !104)
!3536 = distinct !DILexicalBlock(scope: !3537, file: !2224, line: 1823, column: 5)
!3537 = distinct !DILexicalBlock(scope: !3538, file: !2224, line: 1822, column: 26)
!3538 = distinct !DILexicalBlock(scope: !3533, file: !2224, line: 1822, column: 8)
!3539 = !DILocalVariable(name: "rc", scope: !3540, file: !2224, line: 1828, type: !104)
!3540 = distinct !DILexicalBlock(scope: !3541, file: !2224, line: 1828, column: 5)
!3541 = distinct !DILexicalBlock(scope: !3533, file: !2224, line: 1827, column: 26)
!3542 = !DILocalVariable(name: "rc", scope: !3543, file: !2224, line: 1831, type: !104)
!3543 = distinct !DILexicalBlock(scope: !3533, file: !2224, line: 1831, column: 4)
!3544 = !DILocalVariable(name: "rc", scope: !3545, file: !2224, line: 1836, type: !104)
!3545 = distinct !DILexicalBlock(scope: !3546, file: !2224, line: 1836, column: 4)
!3546 = distinct !DILexicalBlock(scope: !3434, file: !2224, line: 1835, column: 21)
!3547 = !DILabel(scope: !3503, name: "prec_int_pad0", file: !2224, line: 1634)
!3548 = !DILocation(line: 0, scope: !3407)
!3549 = !DILocation(line: 1341, column: 2, scope: !3407)
!3550 = !DILocation(line: 1341, column: 7, scope: !3407)
!3551 = !DILocation(line: 1375, column: 2, scope: !3407)
!3552 = !DILocation(line: 1342, column: 9, scope: !3407)
!3553 = !DILocation(line: 1375, column: 9, scope: !3407)
!3554 = !DILocation(line: 1377, column: 4, scope: !3431)
!3555 = !DILocation(line: 0, scope: !3431)
!3556 = !DILocation(line: 1377, column: 4, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3431, file: !2224, line: 1377, column: 4)
!3558 = distinct !{!3558, !3551, !3559}
!3559 = !DILocation(line: 1839, column: 2, scope: !3407)
!3560 = !DILocation(line: 1392, column: 3, scope: !3434)
!3561 = !DILocation(line: 1395, column: 5, scope: !3434)
!3562 = !DILocation(line: 0, scope: !3434)
!3563 = !DILocation(line: 1409, column: 8, scope: !3434)
!3564 = !DILocation(line: 1414, column: 13, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3434, file: !2224, line: 1414, column: 7)
!3566 = !DILocation(line: 1414, column: 7, scope: !3434)
!3567 = !DILocation(line: 1415, column: 12, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3565, file: !2224, line: 1414, column: 25)
!3569 = !DILocation(line: 1417, column: 14, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3568, file: !2224, line: 1417, column: 8)
!3571 = !DILocation(line: 1417, column: 8, scope: !3568)
!3572 = !DILocation(line: 1418, column: 21, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3570, file: !2224, line: 1417, column: 19)
!3574 = !DILocation(line: 1419, column: 13, scope: !3573)
!3575 = !DILocation(line: 1420, column: 4, scope: !3573)
!3576 = !DILocation(line: 1421, column: 20, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3565, file: !2224, line: 1421, column: 14)
!3578 = !DILocation(line: 1421, column: 14, scope: !3565)
!3579 = !DILocation(line: 1431, column: 13, scope: !3494)
!3580 = !DILocation(line: 1431, column: 7, scope: !3434)
!3581 = !DILocation(line: 1432, column: 14, scope: !3493)
!3582 = !DILocation(line: 0, scope: !3493)
!3583 = !DILocation(line: 1434, column: 12, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3493, file: !2224, line: 1434, column: 8)
!3585 = !DILocation(line: 1434, column: 8, scope: !3493)
!3586 = !DILocation(line: 1435, column: 24, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3584, file: !2224, line: 1434, column: 17)
!3588 = !DILocation(line: 1436, column: 4, scope: !3587)
!3589 = !DILocation(line: 1439, column: 20, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3494, file: !2224, line: 1439, column: 14)
!3591 = !DILocation(line: 1439, column: 14, scope: !3494)
!3592 = !DILocation(line: 1469, column: 37, scope: !3434)
!3593 = !DILocation(line: 1448, column: 20, scope: !3434)
!3594 = !DILocation(line: 1449, column: 22, scope: !3434)
!3595 = !DILocation(line: 1471, column: 34, scope: !3434)
!3596 = !DILocation(line: 1478, column: 7, scope: !3434)
!3597 = !DILocation(line: 1479, column: 4, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3599, file: !2224, line: 1478, column: 40)
!3599 = distinct !DILexicalBlock(scope: !3434, file: !2224, line: 1478, column: 7)
!3600 = !DILocation(line: 1484, column: 19, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3598, file: !2224, line: 1479, column: 24)
!3602 = !DILocation(line: 1484, column: 17, scope: !3601)
!3603 = !DILocation(line: 1485, column: 5, scope: !3601)
!3604 = !DILocation(line: 1492, column: 20, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3606, file: !2224, line: 1491, column: 12)
!3606 = distinct !DILexicalBlock(scope: !3601, file: !2224, line: 1487, column: 9)
!3607 = !DILocation(line: 1492, column: 18, scope: !3605)
!3608 = !DILocation(line: 1494, column: 5, scope: !3601)
!3609 = !DILocation(line: 1497, column: 23, scope: !3601)
!3610 = !DILocation(line: 1496, column: 17, scope: !3601)
!3611 = !DILocation(line: 1498, column: 5, scope: !3601)
!3612 = !DILocation(line: 1501, column: 23, scope: !3601)
!3613 = !DILocation(line: 1500, column: 17, scope: !3601)
!3614 = !DILocation(line: 1502, column: 5, scope: !3601)
!3615 = !DILocation(line: 1513, column: 23, scope: !3601)
!3616 = !DILocation(line: 1513, column: 6, scope: !3601)
!3617 = !DILocation(line: 1512, column: 17, scope: !3601)
!3618 = !DILocation(line: 1514, column: 5, scope: !3601)
!3619 = !DILocation(line: 0, scope: !3601)
!3620 = !DILocation(line: 1516, column: 8, scope: !3598)
!3621 = !DILocation(line: 1517, column: 19, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3623, file: !2224, line: 1516, column: 33)
!3623 = distinct !DILexicalBlock(scope: !3598, file: !2224, line: 1516, column: 8)
!3624 = !DILocation(line: 1517, column: 17, scope: !3622)
!3625 = !DILocation(line: 1518, column: 4, scope: !3622)
!3626 = !DILocation(line: 1519, column: 19, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3628, file: !2224, line: 1518, column: 39)
!3628 = distinct !DILexicalBlock(scope: !3623, file: !2224, line: 1518, column: 15)
!3629 = !DILocation(line: 1519, column: 17, scope: !3627)
!3630 = !DILocation(line: 1520, column: 4, scope: !3627)
!3631 = !DILocation(line: 1522, column: 4, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !2224, line: 1521, column: 47)
!3633 = distinct !DILexicalBlock(scope: !3599, file: !2224, line: 1521, column: 14)
!3634 = !DILocation(line: 1527, column: 19, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3632, file: !2224, line: 1522, column: 24)
!3636 = !DILocation(line: 1527, column: 17, scope: !3635)
!3637 = !DILocation(line: 1528, column: 5, scope: !3635)
!3638 = !DILocation(line: 0, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3635, file: !2224, line: 1530, column: 9)
!3640 = !DILocation(line: 1540, column: 23, scope: !3635)
!3641 = !DILocation(line: 1539, column: 17, scope: !3635)
!3642 = !DILocation(line: 1542, column: 5, scope: !3635)
!3643 = !DILocation(line: 1545, column: 23, scope: !3635)
!3644 = !DILocation(line: 1544, column: 17, scope: !3635)
!3645 = !DILocation(line: 1547, column: 5, scope: !3635)
!3646 = !DILocation(line: 1551, column: 23, scope: !3635)
!3647 = !DILocation(line: 1551, column: 6, scope: !3635)
!3648 = !DILocation(line: 1550, column: 17, scope: !3635)
!3649 = !DILocation(line: 1552, column: 5, scope: !3635)
!3650 = !DILocation(line: 0, scope: !3635)
!3651 = !DILocation(line: 1554, column: 8, scope: !3632)
!3652 = !DILocation(line: 1555, column: 19, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3654, file: !2224, line: 1554, column: 33)
!3654 = distinct !DILexicalBlock(scope: !3632, file: !2224, line: 1554, column: 8)
!3655 = !DILocation(line: 1555, column: 17, scope: !3653)
!3656 = !DILocation(line: 1556, column: 4, scope: !3653)
!3657 = !DILocation(line: 1557, column: 19, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3659, file: !2224, line: 1556, column: 39)
!3659 = distinct !DILexicalBlock(scope: !3654, file: !2224, line: 1556, column: 15)
!3660 = !DILocation(line: 1557, column: 17, scope: !3658)
!3661 = !DILocation(line: 1558, column: 4, scope: !3658)
!3662 = !DILocation(line: 0, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3664, file: !2224, line: 1560, column: 8)
!3664 = distinct !DILexicalBlock(scope: !3665, file: !2224, line: 1559, column: 45)
!3665 = distinct !DILexicalBlock(scope: !3633, file: !2224, line: 1559, column: 14)
!3666 = !DILocation(line: 1566, column: 17, scope: !3667)
!3667 = distinct !DILexicalBlock(scope: !3668, file: !2224, line: 1565, column: 46)
!3668 = distinct !DILexicalBlock(scope: !3665, file: !2224, line: 1565, column: 14)
!3669 = !DILocation(line: 1566, column: 15, scope: !3667)
!3670 = !DILocation(line: 1567, column: 3, scope: !3667)
!3671 = !DILocation(line: 1574, column: 21, scope: !3500)
!3672 = !DILocation(line: 1575, column: 4, scope: !3498)
!3673 = !DILocation(line: 0, scope: !3498)
!3674 = !DILocation(line: 1575, column: 4, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3498, file: !2224, line: 1575, column: 4)
!3676 = !DILocation(line: 1582, column: 17, scope: !3434)
!3677 = !DILocation(line: 1582, column: 3, scope: !3434)
!3678 = !DILocation(line: 1584, column: 4, scope: !3502)
!3679 = !DILocation(line: 0, scope: !3502)
!3680 = !DILocation(line: 1584, column: 4, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3502, file: !2224, line: 1584, column: 4)
!3682 = !DILocation(line: 1587, column: 31, scope: !3505)
!3683 = !DILocation(line: 1591, column: 18, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3505, file: !2224, line: 1591, column: 8)
!3685 = !DILocation(line: 1591, column: 8, scope: !3505)
!3686 = !DILocation(line: 1592, column: 11, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3684, file: !2224, line: 1591, column: 24)
!3688 = !DILocation(line: 0, scope: !3505)
!3689 = !DILocation(line: 1593, column: 4, scope: !3687)
!3690 = !DILocation(line: 1594, column: 11, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3684, file: !2224, line: 1593, column: 11)
!3692 = !DILocation(line: 1604, column: 51, scope: !3503)
!3693 = !DILocation(line: 1604, column: 13, scope: !3503)
!3694 = !DILocation(line: 1604, column: 11, scope: !3503)
!3695 = !DILocation(line: 1606, column: 4, scope: !3503)
!3696 = !DILocation(line: 1609, column: 14, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3503, file: !2224, line: 1609, column: 8)
!3698 = !DILocation(line: 1609, column: 8, scope: !3503)
!3699 = !DILocation(line: 1619, column: 18, scope: !3503)
!3700 = !DILocation(line: 1620, column: 13, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3503, file: !2224, line: 1620, column: 8)
!3702 = !DILocation(line: 1620, column: 8, scope: !3503)
!3703 = !DILocation(line: 1622, column: 36, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3701, file: !2224, line: 1620, column: 18)
!3705 = !DILocation(line: 1622, column: 17, scope: !3704)
!3706 = !DILocation(line: 1623, column: 4, scope: !3704)
!3707 = !DILocation(line: 1632, column: 29, scope: !3503)
!3708 = !DILocation(line: 1632, column: 10, scope: !3503)
!3709 = !DILocation(line: 1632, column: 4, scope: !3503)
!3710 = !DILocation(line: 1407, column: 8, scope: !3434)
!3711 = !DILocation(line: 0, scope: !3503)
!3712 = !DILocation(line: 1634, column: 3, scope: !3503)
!3713 = !DILocation(line: 1640, column: 18, scope: !3508)
!3714 = !DILocation(line: 1640, column: 8, scope: !3503)
!3715 = !DILocation(line: 1729, column: 13, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3434, file: !2224, line: 1729, column: 7)
!3717 = !DILocation(line: 1641, column: 22, scope: !3507)
!3718 = !DILocation(line: 0, scope: !3507)
!3719 = !DILocation(line: 1646, column: 21, scope: !3507)
!3720 = !DILocation(line: 1649, column: 13, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3507, file: !2224, line: 1649, column: 9)
!3722 = !DILocation(line: 1649, column: 9, scope: !3507)
!3723 = !DILocation(line: 1650, column: 35, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3721, file: !2224, line: 1649, column: 34)
!3725 = !DILocation(line: 1650, column: 23, scope: !3724)
!3726 = !DILocation(line: 1651, column: 5, scope: !3724)
!3727 = !DILocation(line: 1660, column: 15, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3503, file: !2224, line: 1660, column: 8)
!3729 = !DILocation(line: 1660, column: 19, scope: !3728)
!3730 = !DILocation(line: 1660, column: 8, scope: !3503)
!3731 = !DILocation(line: 1661, column: 23, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3728, file: !2224, line: 1660, column: 28)
!3733 = !DILocation(line: 1661, column: 11, scope: !3732)
!3734 = !DILocation(line: 1665, column: 22, scope: !3732)
!3735 = !DILocation(line: 1666, column: 21, scope: !3732)
!3736 = !DILocation(line: 1668, column: 5, scope: !3732)
!3737 = !DILocation(line: 1677, column: 30, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3739, file: !2224, line: 1676, column: 49)
!3739 = distinct !DILexicalBlock(scope: !3503, file: !2224, line: 1676, column: 8)
!3740 = !DILocation(line: 1677, column: 5, scope: !3738)
!3741 = !DILocation(line: 1680, column: 4, scope: !3503)
!3742 = !DILocation(line: 0, scope: !3684)
!3743 = !DILocation(line: 1597, column: 14, scope: !3505)
!3744 = !DILocation(line: 1699, column: 11, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3434, file: !2224, line: 1699, column: 7)
!3746 = !DILocation(line: 1699, column: 7, scope: !3434)
!3747 = !DILocation(line: 1725, column: 7, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3434, file: !2224, line: 1725, column: 7)
!3749 = !DILocation(line: 1725, column: 12, scope: !3748)
!3750 = !DILocation(line: 1747, column: 13, scope: !3515)
!3751 = !DILocation(line: 1747, column: 7, scope: !3434)
!3752 = !DILocation(line: 1722, column: 24, scope: !3434)
!3753 = !DILocation(line: 1725, column: 7, scope: !3434)
!3754 = !DILocation(line: 1729, column: 7, scope: !3434)
!3755 = !DILocation(line: 1736, column: 13, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3434, file: !2224, line: 1736, column: 7)
!3757 = !DILocation(line: 1735, column: 19, scope: !3434)
!3758 = !DILocation(line: 1736, column: 7, scope: !3434)
!3759 = !DILocation(line: 1748, column: 10, scope: !3514)
!3760 = !DILocation(line: 1750, column: 15, scope: !3513)
!3761 = !DILocation(line: 1750, column: 8, scope: !3514)
!3762 = !DILocation(line: 0, scope: !3512)
!3763 = !DILocation(line: 1756, column: 15, scope: !3521)
!3764 = !DILocation(line: 1756, column: 9, scope: !3512)
!3765 = !DILocation(line: 1758, column: 7, scope: !3517)
!3766 = !DILocation(line: 0, scope: !3517)
!3767 = !DILocation(line: 1758, column: 7, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3517, file: !2224, line: 1758, column: 7)
!3769 = !DILocation(line: 1764, column: 5, scope: !3512)
!3770 = !DILocation(line: 0, scope: !3514)
!3771 = !DILocation(line: 1764, column: 20, scope: !3512)
!3772 = !DILocation(line: 1764, column: 17, scope: !3512)
!3773 = !DILocation(line: 1765, column: 6, scope: !3523)
!3774 = !DILocation(line: 0, scope: !3523)
!3775 = !DILocation(line: 1765, column: 6, scope: !3776)
!3776 = distinct !DILexicalBlock(scope: !3523, file: !2224, line: 1765, column: 6)
!3777 = distinct !{!3777, !3769, !3778}
!3778 = !DILocation(line: 1766, column: 5, scope: !3512)
!3779 = !DILocation(line: 1773, column: 12, scope: !3528)
!3780 = !DILocation(line: 1773, column: 7, scope: !3434)
!3781 = !DILocation(line: 1773, column: 7, scope: !3528)
!3782 = !DILocation(line: 1774, column: 4, scope: !3526)
!3783 = !DILocation(line: 0, scope: !3526)
!3784 = !DILocation(line: 1774, column: 4, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3526, file: !2224, line: 1774, column: 4)
!3786 = !DILocation(line: 1818, column: 8, scope: !3532)
!3787 = !DILocation(line: 1818, column: 27, scope: !3532)
!3788 = !DILocation(line: 1818, column: 25, scope: !3532)
!3789 = !DILocation(line: 1818, column: 8, scope: !3533)
!3790 = !DILocation(line: 1819, column: 5, scope: !3530)
!3791 = !DILocation(line: 0, scope: !3530)
!3792 = !DILocation(line: 1819, column: 5, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3530, file: !2224, line: 1819, column: 5)
!3794 = !DILocation(line: 1822, column: 14, scope: !3538)
!3795 = !DILocation(line: 1822, column: 8, scope: !3533)
!3796 = !DILocation(line: 1823, column: 5, scope: !3536)
!3797 = !DILocation(line: 0, scope: !3536)
!3798 = !DILocation(line: 1823, column: 5, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3536, file: !2224, line: 1823, column: 5)
!3800 = !DILocation(line: 1826, column: 20, scope: !3533)
!3801 = !DILocation(line: 1827, column: 4, scope: !3533)
!3802 = !DILocation(line: 0, scope: !3533)
!3803 = !DILocation(line: 1827, column: 21, scope: !3533)
!3804 = !DILocation(line: 1827, column: 18, scope: !3533)
!3805 = !DILocation(line: 1828, column: 5, scope: !3540)
!3806 = !DILocation(line: 0, scope: !3540)
!3807 = !DILocation(line: 1828, column: 5, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3540, file: !2224, line: 1828, column: 5)
!3809 = distinct !{!3809, !3801, !3810}
!3810 = !DILocation(line: 1829, column: 4, scope: !3533)
!3811 = !DILocation(line: 1831, column: 4, scope: !3543)
!3812 = !DILocation(line: 0, scope: !3543)
!3813 = !DILocation(line: 1831, column: 4, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3543, file: !2224, line: 1831, column: 4)
!3815 = !DILocation(line: 1835, column: 16, scope: !3434)
!3816 = !DILocation(line: 1835, column: 3, scope: !3434)
!3817 = !DILocation(line: 1836, column: 4, scope: !3545)
!3818 = !DILocation(line: 0, scope: !3545)
!3819 = !DILocation(line: 1836, column: 4, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3545, file: !2224, line: 1836, column: 4)
!3821 = !DILocation(line: 1837, column: 4, scope: !3546)
!3822 = distinct !{!3822, !3816, !3823}
!3823 = !DILocation(line: 1838, column: 3, scope: !3434)
!3824 = !DILocation(line: 1844, column: 1, scope: !3407)
!3825 = distinct !DISubprogram(name: "extract_conversion", scope: !2224, file: !2224, line: 642, type: !3826, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !3828)
!3826 = !DISubroutineType(types: !3827)
!3827 = !{!113, !3482, !113}
!3828 = !{!3829, !3830}
!3829 = !DILocalVariable(name: "conv", arg: 1, scope: !3825, file: !2224, line: 642, type: !3482)
!3830 = !DILocalVariable(name: "sp", arg: 2, scope: !3825, file: !2224, line: 643, type: !113)
!3831 = !DILocation(line: 0, scope: !3825)
!3832 = !DILocation(line: 645, column: 10, scope: !3825)
!3833 = !DILocation(line: 653, column: 2, scope: !3825)
!3834 = !DILocation(line: 654, column: 6, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3825, file: !2224, line: 654, column: 6)
!3836 = !DILocation(line: 654, column: 10, scope: !3835)
!3837 = !DILocation(line: 654, column: 6, scope: !3825)
!3838 = !DILocation(line: 655, column: 24, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3835, file: !2224, line: 654, column: 18)
!3840 = !DILocation(line: 655, column: 19, scope: !3839)
!3841 = !DILocation(line: 656, column: 3, scope: !3839)
!3842 = !DILocation(line: 659, column: 7, scope: !3825)
!3843 = !DILocation(line: 660, column: 7, scope: !3825)
!3844 = !DILocation(line: 661, column: 7, scope: !3825)
!3845 = !DILocation(line: 662, column: 7, scope: !3825)
!3846 = !DILocation(line: 663, column: 7, scope: !3825)
!3847 = !DILocation(line: 665, column: 2, scope: !3825)
!3848 = !DILocation(line: 666, column: 1, scope: !3825)
!3849 = distinct !DISubprogram(name: "outs", scope: !2224, file: !2224, line: 1319, type: !3850, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !3852)
!3850 = !DISubroutineType(types: !3851)
!3851 = !{!104, !3140, !103, !113, !113}
!3852 = !{!3853, !3854, !3855, !3856, !3857, !3858}
!3853 = !DILocalVariable(name: "out", arg: 1, scope: !3849, file: !2224, line: 1319, type: !3140)
!3854 = !DILocalVariable(name: "ctx", arg: 2, scope: !3849, file: !2224, line: 1320, type: !103)
!3855 = !DILocalVariable(name: "sp", arg: 3, scope: !3849, file: !2224, line: 1321, type: !113)
!3856 = !DILocalVariable(name: "ep", arg: 4, scope: !3849, file: !2224, line: 1322, type: !113)
!3857 = !DILocalVariable(name: "count", scope: !3849, file: !2224, line: 1324, type: !222)
!3858 = !DILocalVariable(name: "rc", scope: !3859, file: !2224, line: 1327, type: !104)
!3859 = distinct !DILexicalBlock(scope: !3849, file: !2224, line: 1326, column: 45)
!3860 = !DILocation(line: 0, scope: !3849)
!3861 = !DILocation(line: 1326, column: 2, scope: !3849)
!3862 = !DILocation(line: 1324, column: 9, scope: !3849)
!3863 = !DILocation(line: 1326, column: 13, scope: !3849)
!3864 = !DILocation(line: 1326, column: 19, scope: !3849)
!3865 = !DILocation(line: 1327, column: 21, scope: !3859)
!3866 = !DILocation(line: 1326, column: 36, scope: !3849)
!3867 = !DILocation(line: 1326, column: 39, scope: !3849)
!3868 = !DILocation(line: 1327, column: 24, scope: !3859)
!3869 = !DILocation(line: 1327, column: 16, scope: !3859)
!3870 = !DILocation(line: 1327, column: 12, scope: !3859)
!3871 = !DILocation(line: 0, scope: !3859)
!3872 = !DILocation(line: 1329, column: 10, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3859, file: !2224, line: 1329, column: 7)
!3874 = !DILocation(line: 1329, column: 7, scope: !3859)
!3875 = distinct !{!3875, !3861, !3876}
!3876 = !DILocation(line: 1333, column: 2, scope: !3849)
!3877 = !DILocation(line: 1336, column: 1, scope: !3849)
!3878 = distinct !DISubprogram(name: "encode_uint", scope: !2224, file: !2224, line: 788, type: !3879, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !3881)
!3879 = !DISubroutineType(types: !3880)
!3880 = !{!981, !2246, !3482, !981, !113}
!3881 = !{!3882, !3883, !3884, !3885, !3886, !3887, !3889, !3890}
!3882 = !DILocalVariable(name: "value", arg: 1, scope: !3878, file: !2224, line: 788, type: !2246)
!3883 = !DILocalVariable(name: "conv", arg: 2, scope: !3878, file: !2224, line: 789, type: !3482)
!3884 = !DILocalVariable(name: "bps", arg: 3, scope: !3878, file: !2224, line: 790, type: !981)
!3885 = !DILocalVariable(name: "bpe", arg: 4, scope: !3878, file: !2224, line: 791, type: !113)
!3886 = !DILocalVariable(name: "upcase", scope: !3878, file: !2224, line: 793, type: !126)
!3887 = !DILocalVariable(name: "radix", scope: !3878, file: !2224, line: 794, type: !3888)
!3888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!3889 = !DILocalVariable(name: "bp", scope: !3878, file: !2224, line: 795, type: !981)
!3890 = !DILocalVariable(name: "lsv", scope: !3891, file: !2224, line: 798, type: !32)
!3891 = distinct !DILexicalBlock(scope: !3878, file: !2224, line: 797, column: 5)
!3892 = !DILocation(line: 0, scope: !3878)
!3893 = !DILocation(line: 793, column: 35, scope: !3878)
!3894 = !DILocation(line: 793, column: 24, scope: !3878)
!3895 = !DILocation(line: 793, column: 16, scope: !3878)
!3896 = !DILocation(line: 794, column: 29, scope: !3878)
!3897 = !DILocation(line: 795, column: 24, scope: !3878)
!3898 = !DILocation(line: 795, column: 17, scope: !3878)
!3899 = !DILocation(line: 797, column: 2, scope: !3878)
!3900 = !DILocation(line: 802, column: 9, scope: !3891)
!3901 = !DILocation(line: 798, column: 22, scope: !3891)
!3902 = !DILocation(line: 0, scope: !3891)
!3903 = !DILocation(line: 800, column: 16, scope: !3891)
!3904 = !DILocation(line: 800, column: 11, scope: !3891)
!3905 = !DILocation(line: 800, column: 4, scope: !3891)
!3906 = !DILocation(line: 800, column: 9, scope: !3891)
!3907 = !DILocation(line: 803, column: 18, scope: !3878)
!3908 = !DILocation(line: 803, column: 24, scope: !3878)
!3909 = !DILocation(line: 803, column: 2, scope: !3891)
!3910 = distinct !{!3910, !3899, !3911}
!3911 = !DILocation(line: 803, column: 37, scope: !3878)
!3912 = !DILocation(line: 808, column: 12, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3878, file: !2224, line: 808, column: 6)
!3914 = !DILocation(line: 808, column: 6, scope: !3878)
!3915 = !DILocation(line: 809, column: 7, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3913, file: !2224, line: 808, column: 23)
!3917 = !DILocation(line: 813, column: 3, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !2224, line: 811, column: 27)
!3919 = distinct !DILexicalBlock(scope: !3920, file: !2224, line: 811, column: 14)
!3920 = distinct !DILexicalBlock(scope: !3916, file: !2224, line: 809, column: 7)
!3921 = !DILocation(line: 0, scope: !3920)
!3922 = !DILocation(line: 818, column: 2, scope: !3878)
!3923 = distinct !DISubprogram(name: "store_count", scope: !2224, file: !2224, line: 1280, type: !3924, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !3928)
!3924 = !DISubroutineType(types: !3925)
!3925 = !{null, !3926, !103, !104}
!3926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3927, size: 32)
!3927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3449)
!3928 = !{!3929, !3930, !3931}
!3929 = !DILocalVariable(name: "conv", arg: 1, scope: !3923, file: !2224, line: 1280, type: !3926)
!3930 = !DILocalVariable(name: "dp", arg: 2, scope: !3923, file: !2224, line: 1281, type: !103)
!3931 = !DILocalVariable(name: "count", arg: 3, scope: !3923, file: !2224, line: 1282, type: !104)
!3932 = !DILocation(line: 0, scope: !3923)
!3933 = !DILocation(line: 1284, column: 38, scope: !3923)
!3934 = !DILocation(line: 1284, column: 2, scope: !3923)
!3935 = !DILocation(line: 1286, column: 4, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3923, file: !2224, line: 1284, column: 50)
!3937 = !DILocation(line: 1286, column: 14, scope: !3936)
!3938 = !DILocation(line: 1287, column: 3, scope: !3936)
!3939 = !DILocation(line: 1289, column: 24, scope: !3936)
!3940 = !DILocation(line: 1289, column: 22, scope: !3936)
!3941 = !DILocation(line: 1290, column: 3, scope: !3936)
!3942 = !DILocation(line: 1292, column: 18, scope: !3936)
!3943 = !DILocation(line: 1292, column: 4, scope: !3936)
!3944 = !DILocation(line: 1292, column: 16, scope: !3936)
!3945 = !DILocation(line: 1293, column: 3, scope: !3936)
!3946 = !DILocation(line: 1295, column: 4, scope: !3936)
!3947 = !DILocation(line: 1295, column: 15, scope: !3936)
!3948 = !DILocation(line: 1296, column: 3, scope: !3936)
!3949 = !DILocation(line: 1298, column: 22, scope: !3936)
!3950 = !DILocation(line: 1298, column: 4, scope: !3936)
!3951 = !DILocation(line: 1298, column: 20, scope: !3936)
!3952 = !DILocation(line: 1299, column: 3, scope: !3936)
!3953 = !DILocation(line: 1301, column: 21, scope: !3936)
!3954 = !DILocation(line: 1301, column: 4, scope: !3936)
!3955 = !DILocation(line: 1301, column: 19, scope: !3936)
!3956 = !DILocation(line: 1302, column: 3, scope: !3936)
!3957 = !DILocation(line: 1304, column: 4, scope: !3936)
!3958 = !DILocation(line: 1304, column: 17, scope: !3936)
!3959 = !DILocation(line: 1305, column: 3, scope: !3936)
!3960 = !DILocation(line: 1307, column: 4, scope: !3936)
!3961 = !DILocation(line: 1307, column: 20, scope: !3936)
!3962 = !DILocation(line: 1308, column: 3, scope: !3936)
!3963 = !DILocation(line: 1316, column: 1, scope: !3923)
!3964 = distinct !DISubprogram(name: "isupper", scope: !3965, file: !3965, line: 16, type: !141, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !3966)
!3965 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3966 = !{!3967}
!3967 = !DILocalVariable(name: "a", arg: 1, scope: !3964, file: !3965, line: 16, type: !104)
!3968 = !DILocation(line: 0, scope: !3964)
!3969 = !DILocation(line: 18, column: 29, scope: !3964)
!3970 = !DILocation(line: 18, column: 45, scope: !3964)
!3971 = !DILocation(line: 18, column: 2, scope: !3964)
!3972 = distinct !DISubprogram(name: "conversion_radix", scope: !2224, file: !2224, line: 761, type: !3973, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !3975)
!3973 = !DISubroutineType(types: !3974)
!3974 = !{!222, !115}
!3975 = !{!3976}
!3976 = !DILocalVariable(name: "specifier", arg: 1, scope: !3972, file: !2224, line: 761, type: !115)
!3977 = !DILocation(line: 0, scope: !3972)
!3978 = !DILocation(line: 763, column: 2, scope: !3972)
!3979 = !DILocation(line: 770, column: 3, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3972, file: !2224, line: 763, column: 21)
!3981 = !DILocation(line: 774, column: 3, scope: !3980)
!3982 = !DILocation(line: 0, scope: !3980)
!3983 = !DILocation(line: 776, column: 1, scope: !3972)
!3984 = distinct !DISubprogram(name: "extract_flags", scope: !2224, file: !2224, line: 339, type: !3826, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !3985)
!3985 = !{!3986, !3987, !3988}
!3986 = !DILocalVariable(name: "conv", arg: 1, scope: !3984, file: !2224, line: 339, type: !3482)
!3987 = !DILocalVariable(name: "sp", arg: 2, scope: !3984, file: !2224, line: 340, type: !113)
!3988 = !DILocalVariable(name: "loop", scope: !3984, file: !2224, line: 342, type: !126)
!3989 = !DILocation(line: 0, scope: !3984)
!3990 = !DILocation(line: 344, column: 2, scope: !3984)
!3991 = !DILocation(line: 345, column: 11, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3984, file: !2224, line: 344, column: 5)
!3993 = !DILocation(line: 345, column: 3, scope: !3992)
!3994 = !DILocation(line: 351, column: 4, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3992, file: !2224, line: 345, column: 16)
!3996 = !DILocation(line: 354, column: 4, scope: !3995)
!3997 = !DILocation(line: 357, column: 4, scope: !3995)
!3998 = !DILocation(line: 360, column: 4, scope: !3995)
!3999 = !DILocation(line: 0, scope: !3995)
!4000 = !DILocation(line: 370, column: 12, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3984, file: !2224, line: 370, column: 6)
!4002 = !DILocation(line: 370, column: 22, scope: !4001)
!4003 = !DILocation(line: 371, column: 19, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !4001, file: !2224, line: 370, column: 42)
!4005 = !DILocation(line: 372, column: 2, scope: !4004)
!4006 = !DILocation(line: 376, column: 2, scope: !3984)
!4007 = distinct !DISubprogram(name: "extract_width", scope: !2224, file: !2224, line: 388, type: !3826, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !4008)
!4008 = !{!4009, !4010, !4011, !4012}
!4009 = !DILocalVariable(name: "conv", arg: 1, scope: !4007, file: !2224, line: 388, type: !3482)
!4010 = !DILocalVariable(name: "sp", arg: 2, scope: !4007, file: !2224, line: 389, type: !113)
!4011 = !DILocalVariable(name: "wp", scope: !4007, file: !2224, line: 398, type: !113)
!4012 = !DILocalVariable(name: "width", scope: !4007, file: !2224, line: 399, type: !222)
!4013 = !DILocation(line: 0, scope: !4007)
!4014 = !DILocation(line: 391, column: 8, scope: !4007)
!4015 = !DILocation(line: 391, column: 22, scope: !4007)
!4016 = !DILocation(line: 393, column: 6, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !4007, file: !2224, line: 393, column: 6)
!4018 = !DILocation(line: 393, column: 10, scope: !4017)
!4019 = !DILocation(line: 393, column: 6, scope: !4007)
!4020 = !DILocation(line: 394, column: 20, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4017, file: !2224, line: 393, column: 18)
!4022 = !DILocation(line: 395, column: 10, scope: !4021)
!4023 = !DILocation(line: 395, column: 3, scope: !4021)
!4024 = !DILocation(line: 399, column: 17, scope: !4007)
!4025 = !DILocation(line: 401, column: 6, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !4007, file: !2224, line: 401, column: 6)
!4027 = !DILocation(line: 401, column: 9, scope: !4026)
!4028 = !DILocation(line: 401, column: 6, scope: !4007)
!4029 = !DILocation(line: 402, column: 23, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4026, file: !2224, line: 401, column: 16)
!4031 = !DILocation(line: 403, column: 9, scope: !4030)
!4032 = !DILocation(line: 403, column: 21, scope: !4030)
!4033 = !DILocation(line: 405, column: 11, scope: !4030)
!4034 = !DILocation(line: 404, column: 21, scope: !4030)
!4035 = !DILocation(line: 406, column: 2, scope: !4030)
!4036 = !DILocation(line: 409, column: 1, scope: !4007)
!4037 = distinct !DISubprogram(name: "extract_prec", scope: !2224, file: !2224, line: 420, type: !3826, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !4038)
!4038 = !{!4039, !4040, !4041}
!4039 = !DILocalVariable(name: "conv", arg: 1, scope: !4037, file: !2224, line: 420, type: !3482)
!4040 = !DILocalVariable(name: "sp", arg: 2, scope: !4037, file: !2224, line: 421, type: !113)
!4041 = !DILocalVariable(name: "prec", scope: !4037, file: !2224, line: 435, type: !222)
!4042 = !DILocation(line: 0, scope: !4037)
!4043 = !DILocation(line: 423, column: 24, scope: !4037)
!4044 = !DILocation(line: 423, column: 28, scope: !4037)
!4045 = !DILocation(line: 423, column: 8, scope: !4037)
!4046 = !DILocation(line: 423, column: 21, scope: !4037)
!4047 = !DILocation(line: 425, column: 6, scope: !4037)
!4048 = !DILocation(line: 428, column: 2, scope: !4037)
!4049 = !DILocation(line: 430, column: 6, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4037, file: !2224, line: 430, column: 6)
!4051 = !DILocation(line: 430, column: 10, scope: !4050)
!4052 = !DILocation(line: 430, column: 6, scope: !4037)
!4053 = !DILocation(line: 431, column: 19, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4050, file: !2224, line: 430, column: 18)
!4055 = !DILocation(line: 432, column: 10, scope: !4054)
!4056 = !DILocation(line: 432, column: 3, scope: !4054)
!4057 = !DILocation(line: 435, column: 16, scope: !4037)
!4058 = !DILocation(line: 437, column: 8, scope: !4037)
!4059 = !DILocation(line: 437, column: 19, scope: !4037)
!4060 = !DILocation(line: 439, column: 10, scope: !4037)
!4061 = !DILocation(line: 438, column: 20, scope: !4037)
!4062 = !DILocation(line: 441, column: 9, scope: !4037)
!4063 = !DILocation(line: 442, column: 1, scope: !4037)
!4064 = distinct !DISubprogram(name: "extract_length", scope: !2224, file: !2224, line: 453, type: !3826, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !4065)
!4065 = !{!4066, !4067}
!4066 = !DILocalVariable(name: "conv", arg: 1, scope: !4064, file: !2224, line: 453, type: !3482)
!4067 = !DILocalVariable(name: "sp", arg: 2, scope: !4064, file: !2224, line: 454, type: !113)
!4068 = !DILocation(line: 0, scope: !4064)
!4069 = !DILocation(line: 456, column: 10, scope: !4064)
!4070 = !DILocation(line: 456, column: 2, scope: !4064)
!4071 = !DILocation(line: 458, column: 8, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4073, file: !2224, line: 458, column: 7)
!4073 = distinct !DILexicalBlock(scope: !4064, file: !2224, line: 456, column: 15)
!4074 = !DILocation(line: 458, column: 7, scope: !4072)
!4075 = !DILocation(line: 458, column: 13, scope: !4072)
!4076 = !DILocation(line: 0, scope: !4072)
!4077 = !DILocation(line: 458, column: 7, scope: !4073)
!4078 = !DILocation(line: 459, column: 21, scope: !4079)
!4079 = distinct !DILexicalBlock(scope: !4072, file: !2224, line: 458, column: 21)
!4080 = !DILocation(line: 460, column: 4, scope: !4079)
!4081 = !DILocation(line: 461, column: 3, scope: !4079)
!4082 = !DILocation(line: 462, column: 21, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4072, file: !2224, line: 461, column: 10)
!4084 = !DILocation(line: 466, column: 8, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4073, file: !2224, line: 466, column: 7)
!4086 = !DILocation(line: 466, column: 7, scope: !4085)
!4087 = !DILocation(line: 466, column: 13, scope: !4085)
!4088 = !DILocation(line: 0, scope: !4085)
!4089 = !DILocation(line: 466, column: 7, scope: !4073)
!4090 = !DILocation(line: 467, column: 21, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4085, file: !2224, line: 466, column: 21)
!4092 = !DILocation(line: 468, column: 4, scope: !4091)
!4093 = !DILocation(line: 469, column: 3, scope: !4091)
!4094 = !DILocation(line: 470, column: 21, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4085, file: !2224, line: 469, column: 10)
!4096 = !DILocation(line: 474, column: 9, scope: !4073)
!4097 = !DILocation(line: 474, column: 20, scope: !4073)
!4098 = !DILocation(line: 475, column: 3, scope: !4073)
!4099 = !DILocation(line: 476, column: 3, scope: !4073)
!4100 = !DILocation(line: 478, column: 9, scope: !4073)
!4101 = !DILocation(line: 478, column: 20, scope: !4073)
!4102 = !DILocation(line: 479, column: 3, scope: !4073)
!4103 = !DILocation(line: 480, column: 3, scope: !4073)
!4104 = !DILocation(line: 482, column: 9, scope: !4073)
!4105 = !DILocation(line: 482, column: 20, scope: !4073)
!4106 = !DILocation(line: 483, column: 3, scope: !4073)
!4107 = !DILocation(line: 484, column: 3, scope: !4073)
!4108 = !DILocation(line: 486, column: 9, scope: !4073)
!4109 = !DILocation(line: 486, column: 20, scope: !4073)
!4110 = !DILocation(line: 487, column: 3, scope: !4073)
!4111 = !DILocation(line: 492, column: 21, scope: !4073)
!4112 = !DILocation(line: 493, column: 3, scope: !4073)
!4113 = !DILocation(line: 495, column: 9, scope: !4073)
!4114 = !DILocation(line: 495, column: 20, scope: !4073)
!4115 = !DILocation(line: 496, column: 3, scope: !4073)
!4116 = !DILocation(line: 498, column: 2, scope: !4064)
!4117 = distinct !DISubprogram(name: "extract_specifier", scope: !2224, file: !2224, line: 513, type: !3826, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !4118)
!4118 = !{!4119, !4120, !4121, !4122}
!4119 = !DILocalVariable(name: "conv", arg: 1, scope: !4117, file: !2224, line: 513, type: !3482)
!4120 = !DILocalVariable(name: "sp", arg: 2, scope: !4117, file: !2224, line: 514, type: !113)
!4121 = !DILocalVariable(name: "unsupported", scope: !4117, file: !2224, line: 516, type: !126)
!4122 = !DILabel(scope: !4123, name: "int_conv", file: !2224, line: 526)
!4123 = distinct !DILexicalBlock(scope: !4117, file: !2224, line: 520, column: 27)
!4124 = !DILocation(line: 0, scope: !4117)
!4125 = !DILocation(line: 518, column: 20, scope: !4117)
!4126 = !DILocation(line: 518, column: 8, scope: !4117)
!4127 = !DILocation(line: 518, column: 18, scope: !4117)
!4128 = !DILocation(line: 520, column: 2, scope: !4117)
!4129 = !DILocation(line: 525, column: 3, scope: !4123)
!4130 = !DILocation(line: 0, scope: !4123)
!4131 = !DILocation(line: 526, column: 1, scope: !4123)
!4132 = !DILocation(line: 528, column: 24, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4123, file: !2224, line: 528, column: 7)
!4134 = !DILocation(line: 528, column: 7, scope: !4123)
!4135 = !DILocation(line: 535, column: 23, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4123, file: !2224, line: 535, column: 7)
!4137 = !DILocation(line: 535, column: 7, scope: !4123)
!4138 = !DILocation(line: 536, column: 36, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4136, file: !2224, line: 535, column: 31)
!4140 = !DILocation(line: 537, column: 3, scope: !4139)
!4141 = !DILocation(line: 570, column: 9, scope: !4123)
!4142 = !DILocation(line: 570, column: 23, scope: !4123)
!4143 = !DILocation(line: 575, column: 4, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4145, file: !2224, line: 573, column: 48)
!4145 = distinct !DILexicalBlock(scope: !4123, file: !2224, line: 573, column: 7)
!4146 = !DILocation(line: 603, column: 9, scope: !4123)
!4147 = !DILocation(line: 603, column: 23, scope: !4123)
!4148 = !DILocation(line: 605, column: 24, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4123, file: !2224, line: 605, column: 7)
!4150 = !DILocation(line: 605, column: 7, scope: !4123)
!4151 = !DILocation(line: 612, column: 9, scope: !4123)
!4152 = !DILocation(line: 612, column: 23, scope: !4123)
!4153 = !DILocation(line: 619, column: 24, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4123, file: !2224, line: 619, column: 7)
!4155 = !DILocation(line: 619, column: 7, scope: !4123)
!4156 = !DILocation(line: 625, column: 9, scope: !4123)
!4157 = !DILocation(line: 625, column: 17, scope: !4123)
!4158 = !DILocation(line: 626, column: 3, scope: !4123)
!4159 = !DILocation(line: 629, column: 20, scope: !4117)
!4160 = !DILocation(line: 629, column: 8, scope: !4117)
!4161 = !DILocation(line: 518, column: 23, scope: !4117)
!4162 = !DILocation(line: 631, column: 2, scope: !4117)
!4163 = distinct !DISubprogram(name: "extract_decimal", scope: !2224, file: !2224, line: 318, type: !4164, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !4167)
!4164 = !DISubroutineType(types: !4165)
!4165 = !{!222, !4166}
!4166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!4167 = !{!4168, !4169, !4170}
!4168 = !DILocalVariable(name: "str", arg: 1, scope: !4163, file: !2224, line: 318, type: !4166)
!4169 = !DILocalVariable(name: "sp", scope: !4163, file: !2224, line: 320, type: !113)
!4170 = !DILocalVariable(name: "val", scope: !4163, file: !2224, line: 321, type: !222)
!4171 = !DILocation(line: 0, scope: !4163)
!4172 = !DILocation(line: 320, column: 19, scope: !4163)
!4173 = !DILocation(line: 323, column: 37, scope: !4163)
!4174 = !DILocation(line: 323, column: 17, scope: !4163)
!4175 = !DILocation(line: 323, column: 9, scope: !4163)
!4176 = !DILocation(line: 323, column: 2, scope: !4163)
!4177 = !DILocation(line: 324, column: 13, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4163, file: !2224, line: 323, column: 43)
!4179 = !DILocation(line: 324, column: 24, scope: !4178)
!4180 = !DILocation(line: 324, column: 19, scope: !4178)
!4181 = !DILocation(line: 324, column: 27, scope: !4178)
!4182 = distinct !{!4182, !4176, !4183}
!4183 = !DILocation(line: 325, column: 2, scope: !4163)
!4184 = !DILocation(line: 326, column: 7, scope: !4163)
!4185 = !DILocation(line: 327, column: 2, scope: !4163)
!4186 = distinct !DISubprogram(name: "isdigit", scope: !3965, file: !3965, line: 43, type: !141, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2220, retainedNodes: !4187)
!4187 = !{!4188}
!4188 = !DILocalVariable(name: "a", arg: 1, scope: !4186, file: !3965, line: 43, type: !104)
!4189 = !DILocation(line: 0, scope: !4186)
!4190 = !DILocation(line: 45, column: 29, scope: !4186)
!4191 = !DILocation(line: 45, column: 45, scope: !4186)
!4192 = !DILocation(line: 45, column: 2, scope: !4186)
!4193 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !4194, file: !4194, line: 9, type: !2800, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2258, retainedNodes: !344)
!4194 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!4195 = !DILocation(line: 11, column: 1, scope: !4193)
!4196 = !{i64 2147560956, i64 2147560999, i64 2147561039}
!4197 = !DILocation(line: 12, column: 1, scope: !4193)
!4198 = !{i64 2147565183, i64 2147565226, i64 2147565266}
!4199 = !DILocation(line: 13, column: 1, scope: !4193)
!4200 = !{i64 2147565392, i64 2147565435, i64 2147565475}
!4201 = !DILocation(line: 14, column: 1, scope: !4193)
!4202 = !{i64 2147565561, i64 2147565604, i64 2147565644}
!4203 = !DILocation(line: 15, column: 1, scope: !4193)
!4204 = !{i64 2147565724, i64 2147565767, i64 2147565807}
!4205 = !DILocation(line: 16, column: 1, scope: !4193)
!4206 = !{i64 2147565908, i64 2147565951, i64 2147565991}
!4207 = !DILocation(line: 17, column: 1, scope: !4193)
!4208 = !{i64 2147566087, i64 2147566130, i64 2147566170}
!4209 = !DILocation(line: 18, column: 1, scope: !4193)
!4210 = !{i64 2147566329, i64 2147566372, i64 2147566412}
!4211 = !DILocation(line: 19, column: 1, scope: !4193)
!4212 = !{i64 2147566564, i64 2147566607, i64 2147566647}
!4213 = !DILocation(line: 20, column: 1, scope: !4193)
!4214 = !{i64 2147566750, i64 2147566793, i64 2147566833}
!4215 = !DILocation(line: 21, column: 1, scope: !4193)
!4216 = !{i64 2147566966, i64 2147567009, i64 2147567049}
!4217 = !DILocation(line: 22, column: 1, scope: !4193)
!4218 = !{i64 2147567169, i64 2147567212, i64 2147567252}
!4219 = !DILocation(line: 23, column: 1, scope: !4193)
!4220 = !{i64 2147567372, i64 2147567415, i64 2147567455}
!4221 = !DILocation(line: 24, column: 1, scope: !4193)
!4222 = !{i64 2147567547, i64 2147567590, i64 2147567630}
!4223 = !DILocation(line: 25, column: 1, scope: !4193)
!4224 = !{i64 2147567755, i64 2147567798, i64 2147567838}
!4225 = !DILocation(line: 26, column: 1, scope: !4193)
!4226 = !{i64 2147567959, i64 2147568002, i64 2147568042}
!4227 = !DILocation(line: 27, column: 1, scope: !4193)
!4228 = !{i64 2147568152, i64 2147568195, i64 2147568235}
!4229 = !DILocation(line: 28, column: 1, scope: !4193)
!4230 = !{i64 2147568354, i64 2147568397, i64 2147568437}
!4231 = !DILocation(line: 29, column: 1, scope: !4193)
!4232 = !{i64 2147568581, i64 2147568624, i64 2147568664}
!4233 = !DILocation(line: 30, column: 1, scope: !4193)
!4234 = !{i64 2147568783, i64 2147568826, i64 2147568866}
!4235 = !DILocation(line: 31, column: 1, scope: !4193)
!4236 = !{i64 2147568998, i64 2147569041, i64 2147569081}
!4237 = !DILocation(line: 32, column: 1, scope: !4193)
!4238 = !{i64 2147569170, i64 2147569213, i64 2147569253}
!4239 = !DILocation(line: 33, column: 1, scope: !4193)
!4240 = !{i64 2147569372, i64 2147569415, i64 2147569455}
!4241 = !DILocation(line: 34, column: 1, scope: !4193)
!4242 = !{i64 2147569598, i64 2147569641, i64 2147569681}
!4243 = !DILocation(line: 35, column: 1, scope: !4193)
!4244 = !{i64 2147569797, i64 2147569840, i64 2147569880}
!4245 = !DILocation(line: 36, column: 1, scope: !4193)
!4246 = !{i64 2147569972, i64 2147570015, i64 2147570055}
!4247 = !DILocation(line: 37, column: 1, scope: !4193)
!4248 = !{i64 2147570225, i64 2147570268, i64 2147570308}
!4249 = !DILocation(line: 38, column: 1, scope: !4193)
!4250 = !{i64 2147570466, i64 2147570509, i64 2147570549}
!4251 = !DILocation(line: 39, column: 1, scope: !4193)
!4252 = !{i64 2147570701, i64 2147570744, i64 2147570784}
!4253 = !DILocation(line: 40, column: 1, scope: !4193)
!4254 = !{i64 2147570933, i64 2147570976, i64 2147571016}
!4255 = !DILocation(line: 41, column: 1, scope: !4193)
!4256 = !{i64 2147571159, i64 2147571202, i64 2147571242}
!4257 = !DILocation(line: 42, column: 1, scope: !4193)
!4258 = !{i64 2147571385, i64 2147571428, i64 2147571468}
!4259 = !DILocation(line: 43, column: 1, scope: !4193)
!4260 = !{i64 2147571611, i64 2147571654, i64 2147571694}
!4261 = !DILocation(line: 44, column: 1, scope: !4193)
!4262 = !{i64 2147571846, i64 2147571889, i64 2147571929}
!4263 = !DILocation(line: 45, column: 1, scope: !4193)
!4264 = !{i64 2147572084, i64 2147572127, i64 2147572167}
!4265 = !DILocation(line: 46, column: 1, scope: !4193)
!4266 = !{i64 2147572358, i64 2147572401, i64 2147572441}
!4267 = !DILocation(line: 47, column: 1, scope: !4193)
!4268 = !{i64 2147572596, i64 2147572639, i64 2147572679}
!4269 = !DILocation(line: 48, column: 1, scope: !4193)
!4270 = !{i64 2147572840, i64 2147572883, i64 2147572923}
!4271 = !DILocation(line: 49, column: 1, scope: !4193)
!4272 = !{i64 2147573090, i64 2147573133, i64 2147573173}
!4273 = !DILocation(line: 50, column: 1, scope: !4193)
!4274 = !{i64 2147573337, i64 2147573380, i64 2147573420}
!4275 = !DILocation(line: 51, column: 1, scope: !4193)
!4276 = !{i64 2147573572, i64 2147573615, i64 2147573655}
!4277 = !DILocation(line: 52, column: 1, scope: !4193)
!4278 = !{i64 2147573807, i64 2147573850, i64 2147573890}
!4279 = !DILocation(line: 53, column: 1, scope: !4193)
!4280 = !{i64 2147578103, i64 2147578146, i64 2147578186}
!4281 = !DILocation(line: 54, column: 1, scope: !4193)
!4282 = !{i64 2147578341, i64 2147578384, i64 2147578424}
!4283 = !DILocation(line: 55, column: 1, scope: !4193)
!4284 = !{i64 2147578582, i64 2147578625, i64 2147578665}
!4285 = !DILocation(line: 56, column: 1, scope: !4193)
!4286 = !{i64 2147578862, i64 2147578905, i64 2147578945}
!4287 = !DILocation(line: 57, column: 1, scope: !4193)
!4288 = !{i64 2147579121, i64 2147579164, i64 2147579204}
!4289 = !DILocation(line: 58, column: 1, scope: !4193)
!4290 = !{i64 2147579347, i64 2147579390, i64 2147579430}
!4291 = !DILocation(line: 59, column: 1, scope: !4193)
!4292 = !{i64 2147579585, i64 2147579628, i64 2147579668}
!4293 = !DILocation(line: 60, column: 1, scope: !4193)
!4294 = !{i64 2147579814, i64 2147579857, i64 2147579897}
!4295 = !DILocation(line: 61, column: 1, scope: !4193)
!4296 = !{i64 2147580022, i64 2147580065, i64 2147580105}
!4297 = !DILocation(line: 62, column: 1, scope: !4193)
!4298 = !{i64 2147580233, i64 2147580276, i64 2147580316}
!4299 = !DILocation(line: 63, column: 1, scope: !4193)
!4300 = !{i64 2147580468, i64 2147580511, i64 2147580551}
!4301 = !DILocation(line: 64, column: 1, scope: !4193)
!4302 = !{i64 2147580697, i64 2147580740, i64 2147580780}
!4303 = !DILocation(line: 65, column: 1, scope: !4193)
!4304 = !{i64 2147580935, i64 2147580978, i64 2147581018}
!4305 = !DILocation(line: 66, column: 1, scope: !4193)
!4306 = !{i64 2147581167, i64 2147581210, i64 2147581250}
!4307 = !DILocation(line: 67, column: 1, scope: !4193)
!4308 = !{i64 2147581393, i64 2147581436, i64 2147581476}
!4309 = !DILocation(line: 68, column: 1, scope: !4193)
!4310 = !{i64 2147581610, i64 2147581653, i64 2147581693}
!4311 = !DILocation(line: 69, column: 1, scope: !4193)
!4312 = !{i64 2147581842, i64 2147581885, i64 2147581925}
!4313 = !DILocation(line: 70, column: 1, scope: !4193)
!4314 = !{i64 2147582068, i64 2147582111, i64 2147582151}
!4315 = !DILocation(line: 71, column: 1, scope: !4193)
!4316 = !{i64 2147582282, i64 2147582325, i64 2147582365}
!4317 = !DILocation(line: 72, column: 1, scope: !4193)
!4318 = !{i64 2147582502, i64 2147582545, i64 2147582585}
!4319 = !DILocation(line: 73, column: 1, scope: !4193)
!4320 = !{i64 2147582734, i64 2147582777, i64 2147582817}
!4321 = !DILocation(line: 74, column: 1, scope: !4193)
!4322 = !{i64 2147582942, i64 2147582985, i64 2147583025}
!4323 = !DILocation(line: 75, column: 1, scope: !4193)
!4324 = !{i64 2147583147, i64 2147583190, i64 2147583230}
!4325 = !DILocation(line: 76, column: 1, scope: !4193)
!4326 = !{i64 2147583364, i64 2147583407, i64 2147583447}
!4327 = !DILocation(line: 77, column: 1, scope: !4193)
!4328 = !{i64 2147583578, i64 2147583621, i64 2147583661}
!4329 = !DILocation(line: 78, column: 1, scope: !4193)
!4330 = !{i64 2147583804, i64 2147583847, i64 2147583887}
!4331 = !DILocation(line: 79, column: 1, scope: !4193)
!4332 = !{i64 2147584024, i64 2147584067, i64 2147584107}
!4333 = !DILocation(line: 80, column: 1, scope: !4193)
!4334 = !{i64 2147584229, i64 2147584272, i64 2147584312}
!4335 = !DILocation(line: 81, column: 1, scope: !4193)
!4336 = !{i64 2147584461, i64 2147584504, i64 2147584544}
!4337 = !DILocation(line: 82, column: 1, scope: !4193)
!4338 = !{i64 2147584696, i64 2147584739, i64 2147584779}
!4339 = !DILocation(line: 83, column: 1, scope: !4193)
!4340 = !{i64 2147584946, i64 2147584989, i64 2147585029}
!4341 = !DILocation(line: 84, column: 1, scope: !4193)
!4342 = !{i64 2147585196, i64 2147585239, i64 2147585279}
!4343 = !DILocation(line: 85, column: 1, scope: !4193)
!4344 = !{i64 2147585434, i64 2147585477, i64 2147585517}
!4345 = !DILocation(line: 86, column: 1, scope: !4193)
!4346 = !{i64 2147585645, i64 2147585688, i64 2147585728}
!4347 = !DILocation(line: 87, column: 1, scope: !4193)
!4348 = !{i64 2147585862, i64 2147585905, i64 2147585945}
!4349 = !DILocation(line: 88, column: 1, scope: !4193)
!4350 = !{i64 2147586070, i64 2147586113, i64 2147586153}
!4351 = !DILocation(line: 89, column: 1, scope: !4193)
!4352 = !{i64 2147590381, i64 2147590424, i64 2147590464}
!4353 = !DILocation(line: 90, column: 1, scope: !4193)
!4354 = !{i64 2147590577, i64 2147590620, i64 2147590660}
!4355 = !DILocation(line: 91, column: 1, scope: !4193)
!4356 = !{i64 2147590779, i64 2147590822, i64 2147590862}
!4357 = !DILocation(line: 92, column: 1, scope: !4193)
!4358 = !{i64 2147590972, i64 2147591015, i64 2147591055}
!4359 = !DILocation(line: 93, column: 1, scope: !4193)
!4360 = !{i64 2147591180, i64 2147591223, i64 2147591263}
!4361 = !DILocation(line: 94, column: 1, scope: !4193)
!4362 = !{i64 2147591376, i64 2147591419, i64 2147591459}
!4363 = !DILocation(line: 95, column: 1, scope: !4193)
!4364 = !{i64 2147591581, i64 2147591624, i64 2147591664}
!4365 = !DILocation(line: 96, column: 1, scope: !4193)
!4366 = !{i64 2147591792, i64 2147591835, i64 2147591875}
!4367 = !DILocation(line: 97, column: 1, scope: !4193)
!4368 = !{i64 2147591991, i64 2147592034, i64 2147592074}
!4369 = !DILocation(line: 98, column: 1, scope: !4193)
!4370 = !{i64 2147592166, i64 2147592209, i64 2147592249}
!4371 = !DILocation(line: 99, column: 1, scope: !4193)
!4372 = !{i64 2147592350, i64 2147592393, i64 2147592433}
!4373 = !DILocation(line: 100, column: 1, scope: !4193)
!4374 = !{i64 2147592552, i64 2147592595, i64 2147592635}
!4375 = !DILocation(line: 101, column: 1, scope: !4193)
!4376 = !{i64 2147592751, i64 2147592794, i64 2147592834}
!4377 = !DILocation(line: 102, column: 1, scope: !4193)
!4378 = !{i64 2147592917, i64 2147592960, i64 2147593000}
!4379 = !DILocation(line: 103, column: 1, scope: !4193)
!4380 = !{i64 2147593101, i64 2147593144, i64 2147593184}
!4381 = !DILocation(line: 104, column: 1, scope: !4193)
!4382 = !{i64 2147593291, i64 2147593334, i64 2147593374}
!4383 = !DILocation(line: 105, column: 1, scope: !4193)
!4384 = !{i64 2147593475, i64 2147593518, i64 2147593558}
!4385 = !DILocation(line: 106, column: 1, scope: !4193)
!4386 = !{i64 2147593689, i64 2147593732, i64 2147593772}
!4387 = !DILocation(line: 107, column: 1, scope: !4193)
!4388 = !{i64 2147593900, i64 2147593943, i64 2147593983}
!4389 = !DILocation(line: 108, column: 1, scope: !4193)
!4390 = !{i64 2147594123, i64 2147594166, i64 2147594206}
!4391 = !DILocation(line: 109, column: 1, scope: !4193)
!4392 = !{i64 2147594307, i64 2147594350, i64 2147594390}
!4393 = !DILocation(line: 110, column: 1, scope: !4193)
!4394 = !{i64 2147594521, i64 2147594564, i64 2147594604}
!4395 = !DILocation(line: 111, column: 1, scope: !4193)
!4396 = !{i64 2147594687, i64 2147594730, i64 2147594770}
!4397 = !DILocation(line: 112, column: 1, scope: !4193)
!4398 = !{i64 2147594868, i64 2147594911, i64 2147594951}
!4399 = !DILocation(line: 113, column: 1, scope: !4193)
!4400 = !{i64 2147595061, i64 2147595104, i64 2147595144}
!4401 = !DILocation(line: 114, column: 1, scope: !4193)
!4402 = !{i64 2147595287, i64 2147595330, i64 2147595370}
!4403 = !DILocation(line: 115, column: 1, scope: !4193)
!4404 = !{i64 2147595501, i64 2147595544, i64 2147595584}
!4405 = !DILocation(line: 116, column: 1, scope: !4193)
!4406 = !{i64 2147595727, i64 2147595770, i64 2147595810}
!4407 = !DILocation(line: 117, column: 1, scope: !4193)
!4408 = !{i64 2147595944, i64 2147595987, i64 2147596027}
!4409 = !DILocation(line: 118, column: 1, scope: !4193)
!4410 = !{i64 2147596221, i64 2147596264, i64 2147596304}
!4411 = !DILocation(line: 119, column: 1, scope: !4193)
!4412 = !{i64 2147596447, i64 2147596490, i64 2147596530}
!4413 = !DILocation(line: 120, column: 1, scope: !4193)
!4414 = !{i64 2147596655, i64 2147596698, i64 2147596738}
!4415 = !DILocation(line: 121, column: 1, scope: !4193)
!4416 = !{i64 2147596851, i64 2147596894, i64 2147596934}
!4417 = !DILocation(line: 122, column: 1, scope: !4193)
!4418 = !{i64 2147597116, i64 2147597159, i64 2147597199}
!4419 = !DILocation(line: 123, column: 1, scope: !4193)
!4420 = !{i64 2147597330, i64 2147597373, i64 2147597413}
!4421 = !DILocation(line: 124, column: 1, scope: !4193)
!4422 = !{i64 2147597505, i64 2147597548, i64 2147597588}
!4423 = !DILocation(line: 125, column: 1, scope: !4193)
!4424 = !{i64 2147597759, i64 2147597802, i64 2147597842}
!4425 = !DILocation(line: 126, column: 1, scope: !4193)
!4426 = !{i64 2147597958, i64 2147598001, i64 2147598041}
!4427 = !DILocation(line: 127, column: 1, scope: !4193)
!4428 = !{i64 2147598200, i64 2147598243, i64 2147598283}
!4429 = !DILocation(line: 128, column: 1, scope: !4193)
!4430 = !{i64 2147598363, i64 2147598406, i64 2147598446}
!4431 = !DILocation(line: 129, column: 1, scope: !4193)
!4432 = !{i64 2147598550, i64 2147598593, i64 2147598633}
!4433 = !DILocation(line: 130, column: 1, scope: !4193)
!4434 = !{i64 2147598743, i64 2147598786, i64 2147598826}
!4435 = !DILocation(line: 131, column: 1, scope: !4193)
!4436 = !{i64 2147598926, i64 2147598969, i64 2147599009}
!4437 = !DILocation(line: 132, column: 1, scope: !4193)
!4438 = !{i64 2147599140, i64 2147599183, i64 2147599223}
!4439 = !DILocation(line: 133, column: 1, scope: !4193)
!4440 = !{i64 2147599351, i64 2147599394, i64 2147599434}
!4441 = !DILocation(line: 134, column: 1, scope: !4193)
!4442 = !{i64 2147603632, i64 2147603675, i64 2147603715}
!4443 = !DILocation(line: 135, column: 1, scope: !4193)
!4444 = !{i64 2147603839, i64 2147603882, i64 2147603922}
!4445 = !DILocation(line: 136, column: 1, scope: !4193)
!4446 = !{i64 2147604112, i64 2147604155, i64 2147604195}
!4447 = !DILocation(line: 137, column: 1, scope: !4193)
!4448 = !{i64 2147604360, i64 2147604403, i64 2147604443}
!4449 = !DILocation(line: 138, column: 1, scope: !4193)
!4450 = !{i64 2147604559, i64 2147604602, i64 2147604642}
!4451 = !DILocation(line: 139, column: 1, scope: !4193)
!4452 = !{i64 2147604794, i64 2147604837, i64 2147604877}
!4453 = !DILocation(line: 140, column: 1, scope: !4193)
!4454 = !{i64 2147605044, i64 2147605087, i64 2147605127}
!4455 = !DILocation(line: 141, column: 1, scope: !4193)
!4456 = !{i64 2147605246, i64 2147605289, i64 2147605329}
!4457 = !DILocation(line: 142, column: 1, scope: !4193)
!4458 = !{i64 2147605469, i64 2147605512, i64 2147605552}
!4459 = !DILocation(line: 143, column: 1, scope: !4193)
!4460 = !{i64 2147605683, i64 2147605726, i64 2147605766}
!4461 = !DILocation(line: 144, column: 1, scope: !4193)
!4462 = !{i64 2147605927, i64 2147605970, i64 2147606010}
!4463 = !DILocation(line: 145, column: 1, scope: !4193)
!4464 = !{i64 2147606156, i64 2147606199, i64 2147606239}
!4465 = !DILocation(line: 146, column: 1, scope: !4193)
!4466 = !{i64 2147606385, i64 2147606428, i64 2147606468}
!4467 = !DILocation(line: 147, column: 1, scope: !4193)
!4468 = !{i64 2147606593, i64 2147606636, i64 2147606676}
!4469 = !DILocation(line: 148, column: 1, scope: !4193)
!4470 = !{i64 2147606831, i64 2147606874, i64 2147606914}
!4471 = !DILocation(line: 149, column: 1, scope: !4193)
!4472 = !{i64 2147607057, i64 2147607100, i64 2147607140}
!4473 = !DILocation(line: 150, column: 1, scope: !4193)
!4474 = !{i64 2147607316, i64 2147607359, i64 2147607399}
!4475 = !DILocation(line: 151, column: 1, scope: !4193)
!4476 = !{i64 2147607536, i64 2147607579, i64 2147607619}
!4477 = !DILocation(line: 152, column: 1, scope: !4193)
!4478 = !{i64 2147607768, i64 2147607811, i64 2147607851}
!4479 = !DILocation(line: 153, column: 1, scope: !4193)
!4480 = !{i64 2147608009, i64 2147608052, i64 2147608092}
!4481 = !DILocation(line: 154, column: 1, scope: !4193)
!4482 = !{i64 2147608250, i64 2147608293, i64 2147608333}
!4483 = !DILocation(line: 155, column: 1, scope: !4193)
!4484 = !{i64 2147608473, i64 2147608516, i64 2147608556}
!4485 = !DILocation(line: 156, column: 1, scope: !4193)
!4486 = !{i64 2147608690, i64 2147608733, i64 2147608773}
!4487 = !DILocation(line: 157, column: 1, scope: !4193)
!4488 = !{i64 2147608931, i64 2147608974, i64 2147609014}
!4489 = !DILocation(line: 158, column: 1, scope: !4193)
!4490 = !{i64 2147609118, i64 2147609161, i64 2147609201}
!4491 = !DILocation(line: 159, column: 1, scope: !4193)
!4492 = !{i64 2147609305, i64 2147609348, i64 2147609388}
!4493 = !DILocation(line: 160, column: 1, scope: !4193)
!4494 = !{i64 2147609468, i64 2147609511, i64 2147609551}
!4495 = !DILocation(line: 161, column: 1, scope: !4193)
!4496 = !{i64 2147609727, i64 2147609770, i64 2147609810}
!4497 = !DILocation(line: 162, column: 1, scope: !4193)
!4498 = !{i64 2147609950, i64 2147609993, i64 2147610033}
!4499 = !DILocation(line: 163, column: 1, scope: !4193)
!4500 = !{i64 2147610179, i64 2147610222, i64 2147610262}
!4501 = !DILocation(line: 164, column: 1, scope: !4193)
!4502 = !{i64 2147610375, i64 2147610418, i64 2147610458}
!4503 = !DILocation(line: 165, column: 1, scope: !4193)
!4504 = !{i64 2147610587, i64 2147610630, i64 2147610670}
!4505 = !DILocation(line: 166, column: 1, scope: !4193)
!4506 = !{i64 2147610808, i64 2147610851, i64 2147610891}
!4507 = !DILocation(line: 167, column: 1, scope: !4193)
!4508 = !{i64 2147611022, i64 2147611065, i64 2147611105}
!4509 = !DILocation(line: 168, column: 1, scope: !4193)
!4510 = !{i64 2147611212, i64 2147611255, i64 2147611295}
!4511 = !DILocation(line: 169, column: 1, scope: !4193)
!4512 = !{i64 2147611411, i64 2147611454, i64 2147611494}
!4513 = !DILocation(line: 170, column: 1, scope: !4193)
!4514 = !{i64 2147611616, i64 2147611659, i64 2147611699}
!4515 = !DILocation(line: 171, column: 1, scope: !4193)
!4516 = !{i64 2147611836, i64 2147611879, i64 2147611919}
!4517 = !DILocation(line: 172, column: 1, scope: !4193)
!4518 = !{i64 2147616098, i64 2147616141, i64 2147616181}
!4519 = !DILocation(line: 173, column: 1, scope: !4193)
!4520 = !{i64 2147616297, i64 2147616340, i64 2147616380}
!4521 = !DILocation(line: 174, column: 1, scope: !4193)
!4522 = !{i64 2147616502, i64 2147616545, i64 2147616585}
!4523 = !DILocation(line: 175, column: 1, scope: !4193)
!4524 = !{i64 2147616671, i64 2147616714, i64 2147616754}
!4525 = !DILocation(line: 176, column: 1, scope: !4193)
!4526 = !{i64 2147616855, i64 2147616898, i64 2147616938}
!4527 = !DILocation(line: 177, column: 1, scope: !4193)
!4528 = !{i64 2147617039, i64 2147617082, i64 2147617122}
!4529 = !DILocation(line: 178, column: 1, scope: !4193)
!4530 = !{i64 2147617226, i64 2147617269, i64 2147617309}
!4531 = !DILocation(line: 179, column: 1, scope: !4193)
!4532 = !{i64 2147617410, i64 2147617453, i64 2147617493}
!4533 = !DILocation(line: 180, column: 1, scope: !4193)
!4534 = !{i64 2147617648, i64 2147617691, i64 2147617731}
!4535 = !DILocation(line: 181, column: 1, scope: !4193)
!4536 = !{i64 2147617878, i64 2147617921, i64 2147617961}
!4537 = !DILocation(line: 182, column: 1, scope: !4193)
!4538 = !{i64 2147618107, i64 2147618150, i64 2147618190}
!4539 = !DILocation(line: 183, column: 1, scope: !4193)
!4540 = !{i64 2147618294, i64 2147618337, i64 2147618377}
!4541 = !DILocation(line: 184, column: 1, scope: !4193)
!4542 = !{i64 2147618490, i64 2147618533, i64 2147618573}
!4543 = !DILocation(line: 185, column: 1, scope: !4193)
!4544 = !{i64 2147618698, i64 2147618741, i64 2147618781}
!4545 = !DILocation(line: 186, column: 1, scope: !4193)
!4546 = !{i64 2147618910, i64 2147618953, i64 2147618993}
!4547 = !DILocation(line: 187, column: 1, scope: !4193)
!4548 = !{i64 2147619109, i64 2147619152, i64 2147619192}
!4549 = !DILocation(line: 188, column: 1, scope: !4193)
!4550 = !{i64 2147619347, i64 2147619390, i64 2147619430}
!4551 = !DILocation(line: 189, column: 1, scope: !4193)
!4552 = !{i64 2147619543, i64 2147619586, i64 2147619626}
!4553 = !DILocation(line: 190, column: 1, scope: !4193)
!4554 = !{i64 2147619745, i64 2147619788, i64 2147619828}
!4555 = !DILocation(line: 191, column: 1, scope: !4193)
!4556 = !{i64 2147619938, i64 2147619981, i64 2147620021}
!4557 = !DILocation(line: 192, column: 1, scope: !4193)
!4558 = !{i64 2147620172, i64 2147620215, i64 2147620255}
!4559 = !DILocation(line: 193, column: 1, scope: !4193)
!4560 = !{i64 2147620335, i64 2147620378, i64 2147620418}
!4561 = !DILocation(line: 194, column: 1, scope: !4193)
!4562 = !{i64 2147620574, i64 2147620617, i64 2147620657}
!4563 = !DILocation(line: 195, column: 1, scope: !4193)
!4564 = !{i64 2147620813, i64 2147620856, i64 2147620896}
!4565 = !DILocation(line: 196, column: 1, scope: !4193)
!4566 = !{i64 2147621049, i64 2147621092, i64 2147621132}
!4567 = !DILocation(line: 197, column: 1, scope: !4193)
!4568 = !{i64 2147621279, i64 2147621322, i64 2147621362}
!4569 = !DILocation(line: 198, column: 1, scope: !4193)
!4570 = !{i64 2147621466, i64 2147621509, i64 2147621549}
!4571 = !DILocation(line: 199, column: 1, scope: !4193)
!4572 = !{i64 2147621665, i64 2147621708, i64 2147621748}
!4573 = !DILocation(line: 200, column: 1, scope: !4193)
!4574 = !{i64 2147621936, i64 2147621979, i64 2147622019}
!4575 = !DILocation(line: 201, column: 1, scope: !4193)
!4576 = !{i64 2147622111, i64 2147622154, i64 2147622194}
!4577 = !DILocation(line: 202, column: 1, scope: !4193)
!4578 = !{i64 2147622345, i64 2147622388, i64 2147622428}
!4579 = !DILocation(line: 203, column: 1, scope: !4193)
!4580 = !{i64 2147622553, i64 2147622596, i64 2147622636}
!4581 = !DILocation(line: 204, column: 1, scope: !4193)
!4582 = !{i64 2147622771, i64 2147622814, i64 2147622854}
!4583 = !DILocation(line: 205, column: 1, scope: !4193)
!4584 = !{i64 2147622961, i64 2147623004, i64 2147623044}
!4585 = !DILocation(line: 206, column: 1, scope: !4193)
!4586 = !{i64 2147623157, i64 2147623200, i64 2147623240}
!4587 = !DILocation(line: 207, column: 1, scope: !4193)
!4588 = !{i64 2147623363, i64 2147623406, i64 2147623446}
!4589 = !DILocation(line: 208, column: 1, scope: !4193)
!4590 = !{i64 2147623568, i64 2147623611, i64 2147623651}
!4591 = !DILocation(line: 209, column: 1, scope: !4193)
!4592 = !{i64 2147623794, i64 2147623837, i64 2147623877}
!4593 = !DILocation(line: 210, column: 1, scope: !4193)
!4594 = !{i64 2147624026, i64 2147624069, i64 2147624109}
!4595 = !DILocation(line: 211, column: 1, scope: !4193)
!4596 = !{i64 2147624210, i64 2147624253, i64 2147624293}
!4597 = !DILocation(line: 212, column: 1, scope: !4193)
!4598 = !{i64 2147624419, i64 2147624462, i64 2147624502}
!4599 = !DILocation(line: 213, column: 1, scope: !4193)
!4600 = !{i64 2147624603, i64 2147624646, i64 2147624686}
!4601 = !DILocation(line: 214, column: 1, scope: !4193)
!4602 = !{i64 2147624829, i64 2147624872, i64 2147624912}
!4603 = !DILocation(line: 215, column: 1, scope: !4193)
!4604 = !{i64 2147625055, i64 2147625098, i64 2147625138}
!4605 = !DILocation(line: 216, column: 1, scope: !4193)
!4606 = !{i64 2147629342, i64 2147629385, i64 2147629425}
!4607 = !DILocation(line: 217, column: 1, scope: !4193)
!4608 = !{i64 2147629568, i64 2147629611, i64 2147629651}
!4609 = !DILocation(line: 218, column: 1, scope: !4193)
!4610 = !{i64 2147629794, i64 2147629837, i64 2147629877}
!4611 = !DILocation(line: 219, column: 1, scope: !4193)
!4612 = !{i64 2147630026, i64 2147630069, i64 2147630109}
!4613 = !DILocation(line: 220, column: 1, scope: !4193)
!4614 = !{i64 2147630264, i64 2147630307, i64 2147630347}
!4615 = !DILocation(line: 221, column: 1, scope: !4193)
!4616 = !{i64 2147630484, i64 2147630527, i64 2147630567}
!4617 = !DILocation(line: 222, column: 1, scope: !4193)
!4618 = !{i64 2147630728, i64 2147630771, i64 2147630811}
!4619 = !DILocation(line: 223, column: 1, scope: !4193)
!4620 = !{i64 2147630969, i64 2147631012, i64 2147631052}
!4621 = !DILocation(line: 224, column: 1, scope: !4193)
!4622 = !{i64 2147631204, i64 2147631247, i64 2147631287}
!4623 = !DILocation(line: 225, column: 1, scope: !4193)
!4624 = !{i64 2147631436, i64 2147631479, i64 2147631519}
!4625 = !DILocation(line: 226, column: 1, scope: !4193)
!4626 = !{i64 2147631638, i64 2147631681, i64 2147631721}
!4627 = !DILocation(line: 227, column: 1, scope: !4193)
!4628 = !{i64 2147631888, i64 2147631931, i64 2147631971}
!4629 = !DILocation(line: 228, column: 1, scope: !4193)
!4630 = !{i64 2147632126, i64 2147632169, i64 2147632209}
!4631 = !DILocation(line: 229, column: 1, scope: !4193)
!4632 = !{i64 2147632310, i64 2147632353, i64 2147632393}
!4633 = !DILocation(line: 230, column: 1, scope: !4193)
!4634 = !{i64 2147632533, i64 2147632576, i64 2147632616}
!4635 = !DILocation(line: 231, column: 1, scope: !4193)
!4636 = !{i64 2147632771, i64 2147632814, i64 2147632854}
!4637 = !DILocation(line: 232, column: 1, scope: !4193)
!4638 = !{i64 2147633009, i64 2147633052, i64 2147633092}
!4639 = !DILocation(line: 233, column: 1, scope: !4193)
!4640 = !{i64 2147633202, i64 2147633245, i64 2147633285}
!4641 = !DILocation(line: 234, column: 1, scope: !4193)
!4642 = !{i64 2147633455, i64 2147633498, i64 2147633538}
!4643 = !DILocation(line: 235, column: 1, scope: !4193)
!4644 = !{i64 2147633669, i64 2147633712, i64 2147633752}
!4645 = !DILocation(line: 236, column: 1, scope: !4193)
!4646 = !{i64 2147633877, i64 2147633920, i64 2147633960}
!4647 = !DILocation(line: 237, column: 1, scope: !4193)
!4648 = !{i64 2147634067, i64 2147634110, i64 2147634150}
!4649 = !DILocation(line: 238, column: 1, scope: !4193)
!4650 = !{i64 2147634281, i64 2147634324, i64 2147634364}
!4651 = !DILocation(line: 239, column: 1, scope: !4193)
!4652 = !{i64 2147634543, i64 2147634586, i64 2147634626}
!4653 = !DILocation(line: 240, column: 1, scope: !4193)
!4654 = !{i64 2147634754, i64 2147634797, i64 2147634837}
!4655 = !DILocation(line: 241, column: 1, scope: !4193)
!4656 = !{i64 2147634998, i64 2147635041, i64 2147635081}
!4657 = !DILocation(line: 242, column: 1, scope: !4193)
!4658 = !{i64 2147635209, i64 2147635252, i64 2147635292}
!4659 = !DILocation(line: 243, column: 1, scope: !4193)
!4660 = !{i64 2147635438, i64 2147635481, i64 2147635521}
!4661 = !DILocation(line: 244, column: 1, scope: !4193)
!4662 = !{i64 2147635703, i64 2147635746, i64 2147635786}
!4663 = !DILocation(line: 245, column: 1, scope: !4193)
!4664 = !{i64 2147635908, i64 2147635951, i64 2147635991}
!4665 = !DILocation(line: 246, column: 1, scope: !4193)
!4666 = !{i64 2147636104, i64 2147636147, i64 2147636187}
!4667 = !DILocation(line: 247, column: 1, scope: !4193)
!4668 = !{i64 2147636327, i64 2147636370, i64 2147636410}
!4669 = !DILocation(line: 248, column: 1, scope: !4193)
!4670 = !{i64 2147636490, i64 2147636533, i64 2147636573}
!4671 = !DILocation(line: 249, column: 1, scope: !4193)
!4672 = !{i64 2147636695, i64 2147636738, i64 2147636778}
!4673 = !DILocation(line: 250, column: 1, scope: !4193)
!4674 = !{i64 2147636915, i64 2147636958, i64 2147636998}
!4675 = !DILocation(line: 251, column: 1, scope: !4193)
!4676 = !{i64 2147637129, i64 2147637172, i64 2147637212}
!4677 = !DILocation(line: 252, column: 1, scope: !4193)
!4678 = !{i64 2147637343, i64 2147637386, i64 2147637426}
!4679 = !DILocation(line: 253, column: 1, scope: !4193)
!4680 = !{i64 2147637554, i64 2147637597, i64 2147637637}
!4681 = !DILocation(line: 254, column: 1, scope: !4193)
!4682 = !{i64 2147641808, i64 2147641851, i64 2147641891}
!4683 = !DILocation(line: 255, column: 1, scope: !4193)
!4684 = !{i64 2147642007, i64 2147642050, i64 2147642090}
!4685 = !DILocation(line: 256, column: 1, scope: !4193)
!4686 = !{i64 2147642179, i64 2147642222, i64 2147642262}
!4687 = !DILocation(line: 257, column: 1, scope: !4193)
!4688 = !{i64 2147642372, i64 2147642415, i64 2147642455}
!4689 = !DILocation(line: 258, column: 1, scope: !4193)
!4690 = !{i64 2147642568, i64 2147642611, i64 2147642651}
!4691 = !DILocation(line: 259, column: 1, scope: !4193)
!4692 = !{i64 2147642795, i64 2147642838, i64 2147642878}
!4693 = !DILocation(line: 260, column: 1, scope: !4193)
!4694 = !{i64 2147643012, i64 2147643055, i64 2147643095}
!4695 = !DILocation(line: 261, column: 1, scope: !4193)
!4696 = !{i64 2147643304, i64 2147643347, i64 2147643387}
!4697 = !DILocation(line: 262, column: 1, scope: !4193)
!4698 = !{i64 2147643536, i64 2147643579, i64 2147643619}
!4699 = !DILocation(line: 263, column: 1, scope: !4193)
!4700 = !{i64 2147643753, i64 2147643796, i64 2147643836}
!4701 = !DILocation(line: 264, column: 1, scope: !4193)
!4702 = !{i64 2147643960, i64 2147644003, i64 2147644043}
!4703 = !DILocation(line: 265, column: 1, scope: !4193)
!4704 = !{i64 2147644161, i64 2147644204, i64 2147644244}
!4705 = !DILocation(line: 266, column: 1, scope: !4193)
!4706 = !{i64 2147644393, i64 2147644436, i64 2147644476}
!4707 = !DILocation(line: 267, column: 1, scope: !4193)
!4708 = !{i64 2147644601, i64 2147644644, i64 2147644684}
!4709 = !DILocation(line: 268, column: 1, scope: !4193)
!4710 = !{i64 2147644791, i64 2147644834, i64 2147644874}
!4711 = !DILocation(line: 269, column: 1, scope: !4193)
!4712 = !{i64 2147645017, i64 2147645060, i64 2147645100}
!4713 = !DILocation(line: 270, column: 1, scope: !4193)
!4714 = !{i64 2147645206, i64 2147645249, i64 2147645289}
!4715 = !DILocation(line: 271, column: 1, scope: !4193)
!4716 = !{i64 2147645477, i64 2147645520, i64 2147645560}
!4717 = !DILocation(line: 272, column: 1, scope: !4193)
!4718 = !{i64 2147645697, i64 2147645740, i64 2147645780}
!4719 = !DILocation(line: 273, column: 1, scope: !4193)
!4720 = !{i64 2147645950, i64 2147645993, i64 2147646033}
!4721 = !DILocation(line: 274, column: 1, scope: !4193)
!4722 = !{i64 2147646158, i64 2147646201, i64 2147646241}
!4723 = !DILocation(line: 275, column: 1, scope: !4193)
!4724 = !{i64 2147646390, i64 2147646433, i64 2147646473}
!4725 = !DILocation(line: 276, column: 1, scope: !4193)
!4726 = !{i64 2147646601, i64 2147646644, i64 2147646684}
!4727 = !DILocation(line: 277, column: 1, scope: !4193)
!4728 = !{i64 2147646791, i64 2147646834, i64 2147646874}
!4729 = !DILocation(line: 278, column: 1, scope: !4193)
!4730 = !{i64 2147647005, i64 2147647048, i64 2147647088}
!4731 = !DILocation(line: 279, column: 1, scope: !4193)
!4732 = !{i64 2147647204, i64 2147647247, i64 2147647287}
!4733 = !DILocation(line: 280, column: 1, scope: !4193)
!4734 = !{i64 2147647391, i64 2147647434, i64 2147647474}
!4735 = !DILocation(line: 281, column: 1, scope: !4193)
!4736 = !{i64 2147647599, i64 2147647642, i64 2147647682}
!4737 = !DILocation(line: 282, column: 1, scope: !4193)
!4738 = !{i64 2147647828, i64 2147647871, i64 2147647911}
!4739 = !DILocation(line: 283, column: 1, scope: !4193)
!4740 = !{i64 2147648030, i64 2147648073, i64 2147648113}
!4741 = !DILocation(line: 284, column: 1, scope: !4193)
!4742 = !{i64 2147648265, i64 2147648308, i64 2147648348}
!4743 = !DILocation(line: 285, column: 1, scope: !4193)
!4744 = !{i64 2147648464, i64 2147648507, i64 2147648547}
!4745 = !DILocation(line: 286, column: 1, scope: !4193)
!4746 = !{i64 2147648681, i64 2147648724, i64 2147648764}
!4747 = !DILocation(line: 288, column: 1, scope: !4193)
!4748 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !163, file: !163, line: 30, type: !170, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !145, retainedNodes: !4749)
!4749 = !{!4750, !4751}
!4750 = !DILocalVariable(name: "arg", arg: 1, scope: !4748, file: !163, line: 30, type: !172)
!4751 = !DILocalVariable(name: "key", scope: !4748, file: !163, line: 32, type: !155)
!4752 = !DILocation(line: 0, scope: !4748)
!4753 = !DILocation(line: 37, column: 2, scope: !4748)
!4754 = !DILocation(line: 38, column: 2, scope: !4748)
!4755 = !DILocation(line: 55, column: 2, scope: !4756, inlinedAt: !4763)
!4756 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4757, file: !4757, line: 42, type: !4758, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !145, retainedNodes: !4760)
!4757 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4758 = !DISubroutineType(types: !4759)
!4759 = !{!32}
!4760 = !{!4761, !4762}
!4761 = !DILocalVariable(name: "key", scope: !4756, file: !4757, line: 44, type: !32)
!4762 = !DILocalVariable(name: "tmp", scope: !4756, file: !4757, line: 53, type: !32)
!4763 = distinct !DILocation(line: 40, column: 8, scope: !4748)
!4764 = !{i64 1826860}
!4765 = !DILocation(line: 0, scope: !4756, inlinedAt: !4763)
!4766 = !DILocalVariable(name: "key", arg: 1, scope: !4767, file: !4757, line: 84, type: !32)
!4767 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4757, file: !4757, line: 84, type: !4768, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !145, retainedNodes: !4770)
!4768 = !DISubroutineType(types: !4769)
!4769 = !{null, !32}
!4770 = !{!4766}
!4771 = !DILocation(line: 0, scope: !4767, inlinedAt: !4772)
!4772 = distinct !DILocation(line: 47, column: 2, scope: !4748)
!4773 = !DILocation(line: 95, column: 2, scope: !4767, inlinedAt: !4772)
!4774 = !{i64 1827677}
!4775 = !DILocation(line: 51, column: 18, scope: !4748)
!4776 = !DILocation(line: 53, column: 2, scope: !4748)
!4777 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !4778, file: !4778, line: 1609, type: !2800, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !145, retainedNodes: !344)
!4778 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4779 = !DILocation(line: 1611, column: 3, scope: !4777)
!4780 = !DILocation(line: 1612, column: 1, scope: !4777)
!4781 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !4778, file: !4778, line: 1629, type: !2800, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !145, retainedNodes: !344)
!4782 = !DILocation(line: 1631, column: 3, scope: !4781)
!4783 = !DILocation(line: 1632, column: 1, scope: !4781)
!4784 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !193, file: !193, line: 26, type: !199, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !190, retainedNodes: !4785)
!4785 = !{!4786}
!4786 = !DILocalVariable(name: "dev", arg: 1, scope: !4784, file: !193, line: 26, type: !201)
!4787 = !DILocation(line: 0, scope: !4784)
!4788 = !DILocation(line: 68, column: 2, scope: !4784)
!4789 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !4790, file: !4790, line: 57, type: !4791, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !4837)
!4790 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4791 = !DISubroutineType(types: !4792)
!4792 = !{null, !32, !4793}
!4793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4794, size: 32)
!4794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4795)
!4795 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2380, line: 141, baseType: !4796)
!4796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2380, line: 97, size: 256, elements: !4797)
!4797 = !{!4798}
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !4796, file: !2380, line: 107, baseType: !4799, size: 256)
!4799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2380, line: 98, size: 256, elements: !4800)
!4800 = !{!4801, !4806, !4811, !4816, !4821, !4826, !4831, !4836}
!4801 = !DIDerivedType(tag: DW_TAG_member, scope: !4799, file: !2380, line: 99, baseType: !4802, size: 32)
!4802 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4799, file: !2380, line: 99, size: 32, elements: !4803)
!4803 = !{!4804, !4805}
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !4802, file: !2380, line: 99, baseType: !155, size: 32)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !4802, file: !2380, line: 99, baseType: !155, size: 32)
!4806 = !DIDerivedType(tag: DW_TAG_member, scope: !4799, file: !2380, line: 100, baseType: !4807, size: 32, offset: 32)
!4807 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4799, file: !2380, line: 100, size: 32, elements: !4808)
!4808 = !{!4809, !4810}
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !4807, file: !2380, line: 100, baseType: !155, size: 32)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !4807, file: !2380, line: 100, baseType: !155, size: 32)
!4811 = !DIDerivedType(tag: DW_TAG_member, scope: !4799, file: !2380, line: 101, baseType: !4812, size: 32, offset: 64)
!4812 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4799, file: !2380, line: 101, size: 32, elements: !4813)
!4813 = !{!4814, !4815}
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !4812, file: !2380, line: 101, baseType: !155, size: 32)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !4812, file: !2380, line: 101, baseType: !155, size: 32)
!4816 = !DIDerivedType(tag: DW_TAG_member, scope: !4799, file: !2380, line: 102, baseType: !4817, size: 32, offset: 96)
!4817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4799, file: !2380, line: 102, size: 32, elements: !4818)
!4818 = !{!4819, !4820}
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !4817, file: !2380, line: 102, baseType: !155, size: 32)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !4817, file: !2380, line: 102, baseType: !155, size: 32)
!4821 = !DIDerivedType(tag: DW_TAG_member, scope: !4799, file: !2380, line: 103, baseType: !4822, size: 32, offset: 128)
!4822 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4799, file: !2380, line: 103, size: 32, elements: !4823)
!4823 = !{!4824, !4825}
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4822, file: !2380, line: 103, baseType: !155, size: 32)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4822, file: !2380, line: 103, baseType: !155, size: 32)
!4826 = !DIDerivedType(tag: DW_TAG_member, scope: !4799, file: !2380, line: 104, baseType: !4827, size: 32, offset: 160)
!4827 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4799, file: !2380, line: 104, size: 32, elements: !4828)
!4828 = !{!4829, !4830}
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !4827, file: !2380, line: 104, baseType: !155, size: 32)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4827, file: !2380, line: 104, baseType: !155, size: 32)
!4831 = !DIDerivedType(tag: DW_TAG_member, scope: !4799, file: !2380, line: 105, baseType: !4832, size: 32, offset: 192)
!4832 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4799, file: !2380, line: 105, size: 32, elements: !4833)
!4833 = !{!4834, !4835}
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !4832, file: !2380, line: 105, baseType: !155, size: 32)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4832, file: !2380, line: 105, baseType: !155, size: 32)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !4799, file: !2380, line: 106, baseType: !155, size: 32, offset: 224)
!4837 = !{!4838, !4839}
!4838 = !DILocalVariable(name: "reason", arg: 1, scope: !4789, file: !4790, line: 57, type: !32)
!4839 = !DILocalVariable(name: "esf", arg: 2, scope: !4789, file: !4790, line: 57, type: !4793)
!4840 = !DILocation(line: 0, scope: !4789)
!4841 = !DILocation(line: 63, column: 2, scope: !4789)
!4842 = !DILocation(line: 64, column: 1, scope: !4789)
!4843 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !4790, file: !4790, line: 82, type: !4844, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !4859)
!4844 = !DISubroutineType(types: !4845)
!4845 = !{null, !4793, !4846}
!4846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4847, size: 32)
!4847 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !306, line: 37, baseType: !4848)
!4848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !306, line: 25, size: 288, elements: !4849)
!4849 = !{!4850, !4851, !4852, !4853, !4854, !4855, !4856, !4857, !4858}
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4848, file: !306, line: 26, baseType: !155, size: 32)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4848, file: !306, line: 27, baseType: !155, size: 32, offset: 32)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4848, file: !306, line: 28, baseType: !155, size: 32, offset: 64)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4848, file: !306, line: 29, baseType: !155, size: 32, offset: 96)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4848, file: !306, line: 30, baseType: !155, size: 32, offset: 128)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4848, file: !306, line: 31, baseType: !155, size: 32, offset: 160)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4848, file: !306, line: 32, baseType: !155, size: 32, offset: 192)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4848, file: !306, line: 33, baseType: !155, size: 32, offset: 224)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4848, file: !306, line: 34, baseType: !155, size: 32, offset: 256)
!4859 = !{!4860, !4861, !4862}
!4860 = !DILocalVariable(name: "esf", arg: 1, scope: !4843, file: !4790, line: 82, type: !4793)
!4861 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !4843, file: !4790, line: 82, type: !4846)
!4862 = !DILocalVariable(name: "reason", scope: !4843, file: !4790, line: 88, type: !32)
!4863 = !DILocation(line: 0, scope: !4843)
!4864 = !DILocation(line: 88, column: 35, scope: !4843)
!4865 = !DILocation(line: 108, column: 2, scope: !4843)
!4866 = !DILocation(line: 131, column: 1, scope: !4843)
!4867 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !4790, file: !4790, line: 133, type: !4868, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2260, retainedNodes: !4870)
!4868 = !DISubroutineType(types: !4869)
!4869 = !{null, !103}
!4870 = !{!4871, !4872, !4873}
!4871 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !4867, file: !4790, line: 133, type: !103)
!4872 = !DILocalVariable(name: "ssf_contents", scope: !4867, file: !4790, line: 135, type: !711)
!4873 = !DILocalVariable(name: "oops_esf", scope: !4867, file: !4790, line: 136, type: !4795)
!4874 = !DILocation(line: 0, scope: !4867)
!4875 = !DILocation(line: 136, column: 2, scope: !4867)
!4876 = !DILocation(line: 136, column: 15, scope: !4867)
!4877 = !DILocation(line: 139, column: 22, scope: !4867)
!4878 = !DILocation(line: 139, column: 17, scope: !4867)
!4879 = !DILocation(line: 139, column: 20, scope: !4867)
!4880 = !DILocation(line: 141, column: 2, scope: !4867)
!4881 = !DILocation(line: 142, column: 2, scope: !4867)
!4882 = distinct !DISubprogram(name: "arch_irq_enable", scope: !4883, file: !4883, line: 40, type: !4768, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2271, retainedNodes: !4884)
!4883 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4884 = !{!4885}
!4885 = !DILocalVariable(name: "irq", arg: 1, scope: !4882, file: !4883, line: 40, type: !32)
!4886 = !DILocation(line: 0, scope: !4882)
!4887 = !DILocation(line: 42, column: 2, scope: !4882)
!4888 = !DILocation(line: 43, column: 1, scope: !4882)
!4889 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !378, file: !378, line: 1684, type: !4890, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2271, retainedNodes: !4892)
!4890 = !DISubroutineType(types: !4891)
!4891 = !{null, !614}
!4892 = !{!4893}
!4893 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4889, file: !378, line: 1684, type: !614)
!4894 = !DILocation(line: 0, scope: !4889)
!4895 = !DILocation(line: 1686, column: 23, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4889, file: !378, line: 1686, column: 7)
!4897 = !DILocation(line: 1686, column: 7, scope: !4889)
!4898 = !DILocation(line: 1688, column: 5, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4896, file: !378, line: 1687, column: 3)
!4900 = !{i64 2150355442}
!4901 = !DILocation(line: 1689, column: 81, scope: !4899)
!4902 = !DILocation(line: 1689, column: 60, scope: !4899)
!4903 = !DILocation(line: 1689, column: 34, scope: !4899)
!4904 = !DILocation(line: 1689, column: 5, scope: !4899)
!4905 = !DILocation(line: 1689, column: 43, scope: !4899)
!4906 = !DILocation(line: 1690, column: 5, scope: !4899)
!4907 = !{i64 2150355556}
!4908 = !DILocation(line: 1691, column: 3, scope: !4899)
!4909 = !DILocation(line: 1692, column: 1, scope: !4889)
!4910 = distinct !DISubprogram(name: "arch_irq_disable", scope: !4883, file: !4883, line: 45, type: !4768, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2271, retainedNodes: !4911)
!4911 = !{!4912}
!4912 = !DILocalVariable(name: "irq", arg: 1, scope: !4910, file: !4883, line: 45, type: !32)
!4913 = !DILocation(line: 0, scope: !4910)
!4914 = !DILocation(line: 47, column: 2, scope: !4910)
!4915 = !DILocation(line: 48, column: 1, scope: !4910)
!4916 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !378, file: !378, line: 1722, type: !4890, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2271, retainedNodes: !4917)
!4917 = !{!4918}
!4918 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4916, file: !378, line: 1722, type: !614)
!4919 = !DILocation(line: 0, scope: !4916)
!4920 = !DILocation(line: 1724, column: 23, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4916, file: !378, line: 1724, column: 7)
!4922 = !DILocation(line: 1724, column: 7, scope: !4916)
!4923 = !DILocation(line: 1726, column: 81, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4921, file: !378, line: 1725, column: 3)
!4925 = !DILocation(line: 1726, column: 60, scope: !4924)
!4926 = !DILocation(line: 1726, column: 34, scope: !4924)
!4927 = !DILocation(line: 1726, column: 5, scope: !4924)
!4928 = !DILocation(line: 1726, column: 43, scope: !4924)
!4929 = !DILocation(line: 271, column: 3, scope: !4930, inlinedAt: !4932)
!4930 = distinct !DISubprogram(name: "__DSB", scope: !4931, file: !4931, line: 269, type: !2800, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2271, retainedNodes: !344)
!4931 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4932 = distinct !DILocation(line: 1727, column: 5, scope: !4924)
!4933 = !{i64 2809825}
!4934 = !DILocation(line: 260, column: 3, scope: !4935, inlinedAt: !4936)
!4935 = distinct !DISubprogram(name: "__ISB", scope: !4931, file: !4931, line: 258, type: !2800, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2271, retainedNodes: !344)
!4936 = distinct !DILocation(line: 1728, column: 5, scope: !4924)
!4937 = !{i64 2809542}
!4938 = !DILocation(line: 1729, column: 3, scope: !4924)
!4939 = !DILocation(line: 1730, column: 1, scope: !4916)
!4940 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !4883, file: !4883, line: 50, type: !4941, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2271, retainedNodes: !4943)
!4941 = !DISubroutineType(types: !4942)
!4942 = !{!104, !32}
!4943 = !{!4944}
!4944 = !DILocalVariable(name: "irq", arg: 1, scope: !4940, file: !4883, line: 50, type: !32)
!4945 = !DILocation(line: 0, scope: !4940)
!4946 = !DILocation(line: 52, column: 20, scope: !4940)
!4947 = !DILocation(line: 52, column: 9, scope: !4940)
!4948 = !DILocation(line: 52, column: 41, scope: !4940)
!4949 = !DILocation(line: 52, column: 39, scope: !4940)
!4950 = !DILocation(line: 52, column: 2, scope: !4940)
!4951 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !4883, file: !4883, line: 64, type: !4952, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2271, retainedNodes: !4954)
!4952 = !DISubroutineType(types: !4953)
!4953 = !{null, !32, !32, !155}
!4954 = !{!4955, !4956, !4957}
!4955 = !DILocalVariable(name: "irq", arg: 1, scope: !4951, file: !4883, line: 64, type: !32)
!4956 = !DILocalVariable(name: "prio", arg: 2, scope: !4951, file: !4883, line: 64, type: !32)
!4957 = !DILocalVariable(name: "flags", arg: 3, scope: !4951, file: !4883, line: 64, type: !155)
!4958 = !DILocation(line: 0, scope: !4951)
!4959 = !DILocation(line: 83, column: 8, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4961, file: !4883, line: 82, column: 9)
!4961 = distinct !DILexicalBlock(scope: !4951, file: !4883, line: 76, column: 6)
!4962 = !DILocation(line: 95, column: 2, scope: !4951)
!4963 = !DILocation(line: 96, column: 1, scope: !4951)
!4964 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !378, file: !378, line: 1814, type: !4965, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2271, retainedNodes: !4967)
!4965 = !DISubroutineType(types: !4966)
!4966 = !{null, !614, !155}
!4967 = !{!4968, !4969}
!4968 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4964, file: !378, line: 1814, type: !614)
!4969 = !DILocalVariable(name: "priority", arg: 2, scope: !4964, file: !378, line: 1814, type: !155)
!4970 = !DILocation(line: 0, scope: !4964)
!4971 = !DILocation(line: 0, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4964, file: !378, line: 1816, column: 7)
!4973 = !DILocation(line: 1816, column: 7, scope: !4964)
!4974 = !DILocation(line: 1824, column: 1, scope: !4964)
!4975 = distinct !DISubprogram(name: "z_irq_spurious", scope: !4883, file: !4883, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2271, retainedNodes: !4976)
!4976 = !{!4977}
!4977 = !DILocalVariable(name: "unused", arg: 1, scope: !4975, file: !4883, line: 155, type: !13)
!4978 = !DILocation(line: 0, scope: !4975)
!4979 = !DILocation(line: 159, column: 2, scope: !4975)
!4980 = !DILocation(line: 160, column: 1, scope: !4975)
!4981 = distinct !DISubprogram(name: "z_arm_nmi", scope: !4982, file: !4982, line: 87, type: !2800, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2317, retainedNodes: !344)
!4982 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4983 = !DILocation(line: 89, column: 2, scope: !4981)
!4984 = !DILocation(line: 90, column: 2, scope: !4981)
!4985 = !DILocation(line: 91, column: 1, scope: !4981)
!4986 = !DISubprogram(name: "z_SysNmiOnReset", scope: !4982, file: !4982, line: 23, type: !2800, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !344)
!4987 = !DISubprogram(name: "z_arm_int_exit", scope: !4988, file: !4988, line: 153, type: !2800, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !344)
!4988 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4989 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !4990, file: !4990, line: 256, type: !2800, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !344)
!4990 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4991 = !DILocation(line: 258, column: 2, scope: !4989)
!4992 = !DILocation(line: 260, column: 2, scope: !4989)
!4993 = !DILocation(line: 262, column: 2, scope: !4989)
!4994 = !DILocation(line: 263, column: 2, scope: !4989)
!4995 = !DILocation(line: 267, column: 2, scope: !4989)
!4996 = !DILocation(line: 268, column: 2, scope: !4989)
!4997 = distinct !DISubprogram(name: "relocate_vector_table", scope: !4990, file: !4990, line: 53, type: !2800, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !344)
!4998 = !DILocation(line: 55, column: 12, scope: !4997)
!4999 = !DILocation(line: 271, column: 3, scope: !5000, inlinedAt: !5001)
!5000 = distinct !DISubprogram(name: "__DSB", scope: !4931, file: !4931, line: 269, type: !2800, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !344)
!5001 = distinct !DILocation(line: 56, column: 2, scope: !4997)
!5002 = !{i64 2808496}
!5003 = !DILocation(line: 260, column: 3, scope: !5004, inlinedAt: !5005)
!5004 = distinct !DISubprogram(name: "__ISB", scope: !4931, file: !4931, line: 258, type: !2800, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !344)
!5005 = distinct !DILocation(line: 57, column: 2, scope: !4997)
!5006 = !{i64 2808213}
!5007 = !DILocation(line: 58, column: 1, scope: !4997)
!5008 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !4990, file: !4990, line: 96, type: !2800, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !344)
!5009 = !DILocation(line: 103, column: 13, scope: !5008)
!5010 = !DILocation(line: 975, column: 3, scope: !5011, inlinedAt: !5016)
!5011 = distinct !DISubprogram(name: "__get_CONTROL", scope: !4931, file: !4931, line: 971, type: !5012, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !5014)
!5012 = !DISubroutineType(types: !5013)
!5013 = !{!155}
!5014 = !{!5015}
!5015 = !DILocalVariable(name: "result", scope: !5011, file: !4931, line: 973, type: !155)
!5016 = distinct !DILocation(line: 189, column: 16, scope: !5008)
!5017 = !{i64 2829326}
!5018 = !DILocation(line: 0, scope: !5011, inlinedAt: !5016)
!5019 = !DILocation(line: 189, column: 32, scope: !5008)
!5020 = !DILocalVariable(name: "control", arg: 1, scope: !5021, file: !4931, line: 1001, type: !155)
!5021 = distinct !DISubprogram(name: "__set_CONTROL", scope: !4931, file: !4931, line: 1001, type: !5022, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !5024)
!5022 = !DISubroutineType(types: !5023)
!5023 = !{null, !155}
!5024 = !{!5020}
!5025 = !DILocation(line: 0, scope: !5021, inlinedAt: !5026)
!5026 = distinct !DILocation(line: 189, column: 2, scope: !5008)
!5027 = !DILocation(line: 1003, column: 3, scope: !5021, inlinedAt: !5026)
!5028 = !{i64 2830046}
!5029 = !DILocation(line: 260, column: 3, scope: !5004, inlinedAt: !5030)
!5030 = distinct !DILocation(line: 1004, column: 3, scope: !5021, inlinedAt: !5026)
!5031 = !DILocation(line: 191, column: 1, scope: !5008)
!5032 = distinct !DISubprogram(name: "arch_swap", scope: !5033, file: !5033, line: 33, type: !4941, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !5034)
!5033 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5034 = !{!5035}
!5035 = !DILocalVariable(name: "key", arg: 1, scope: !5032, file: !5033, line: 33, type: !32)
!5036 = !DILocation(line: 0, scope: !5032)
!5037 = !DILocation(line: 36, column: 2, scope: !5032)
!5038 = !DILocation(line: 36, column: 17, scope: !5032)
!5039 = !DILocation(line: 36, column: 25, scope: !5032)
!5040 = !DILocation(line: 37, column: 37, scope: !5032)
!5041 = !DILocation(line: 37, column: 17, scope: !5032)
!5042 = !DILocation(line: 37, column: 35, scope: !5032)
!5043 = !DILocation(line: 41, column: 12, scope: !5032)
!5044 = !DILocalVariable(name: "key", arg: 1, scope: !5045, file: !4757, line: 84, type: !32)
!5045 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4757, file: !4757, line: 84, type: !4768, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2347, retainedNodes: !5046)
!5046 = !{!5044}
!5047 = !DILocation(line: 0, scope: !5045, inlinedAt: !5048)
!5048 = distinct !DILocation(line: 44, column: 2, scope: !5032)
!5049 = !DILocation(line: 95, column: 2, scope: !5045, inlinedAt: !5048)
!5050 = !{i64 1947692}
!5051 = !DILocation(line: 53, column: 9, scope: !5032)
!5052 = !DILocation(line: 53, column: 24, scope: !5032)
!5053 = !DILocation(line: 53, column: 2, scope: !5032)
!5054 = distinct !DISubprogram(name: "arch_new_thread", scope: !5055, file: !5055, line: 56, type: !5056, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !5163)
!5055 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5056 = !DISubroutineType(types: !5057)
!5057 = !{null, !5058, !5158, !981, !3270, !103, !103, !103}
!5058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5059, size: 32)
!5059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !233, line: 245, size: 1024, elements: !5060)
!5060 = !{!5061, !5119, !5131, !5132, !5133, !5134, !5140, !5153}
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5059, file: !233, line: 247, baseType: !5062, size: 384)
!5062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !233, line: 57, size: 384, elements: !5063)
!5063 = !{!5064, !5088, !5095, !5096, !5097, !5106, !5107, !5108}
!5064 = !DIDerivedType(tag: DW_TAG_member, scope: !5062, file: !233, line: 60, baseType: !5065, size: 64)
!5065 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5062, file: !233, line: 60, size: 64, elements: !5066)
!5066 = !{!5067, !5082}
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5065, file: !233, line: 61, baseType: !5068, size: 64)
!5068 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !243, line: 49, baseType: !5069)
!5069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !243, line: 37, size: 64, elements: !5070)
!5070 = !{!5071, !5077}
!5071 = !DIDerivedType(tag: DW_TAG_member, scope: !5069, file: !243, line: 38, baseType: !5072, size: 32)
!5072 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5069, file: !243, line: 38, size: 32, elements: !5073)
!5073 = !{!5074, !5076}
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5072, file: !243, line: 39, baseType: !5075, size: 32)
!5075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5069, size: 32)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5072, file: !243, line: 40, baseType: !5075, size: 32)
!5077 = !DIDerivedType(tag: DW_TAG_member, scope: !5069, file: !243, line: 42, baseType: !5078, size: 32, offset: 32)
!5078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5069, file: !243, line: 42, size: 32, elements: !5079)
!5079 = !{!5080, !5081}
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5078, file: !243, line: 43, baseType: !5075, size: 32)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5078, file: !243, line: 44, baseType: !5075, size: 32)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5065, file: !233, line: 62, baseType: !5083, size: 64)
!5083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !259, line: 49, size: 64, elements: !5084)
!5084 = !{!5085}
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5083, file: !259, line: 50, baseType: !5086, size: 64)
!5086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5087, size: 64, elements: !264)
!5087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5083, size: 32)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5062, file: !233, line: 68, baseType: !5089, size: 32, offset: 64)
!5089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5090, size: 32)
!5090 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !269, line: 233, baseType: !5091)
!5091 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !269, line: 231, size: 64, elements: !5092)
!5092 = !{!5093}
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5091, file: !269, line: 232, baseType: !5094, size: 64)
!5094 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !243, line: 48, baseType: !5069)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5062, file: !233, line: 71, baseType: !123, size: 8, offset: 96)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5062, file: !233, line: 74, baseType: !123, size: 8, offset: 104)
!5097 = !DIDerivedType(tag: DW_TAG_member, scope: !5062, file: !233, line: 90, baseType: !5098, size: 16, offset: 112)
!5098 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5062, file: !233, line: 90, size: 16, elements: !5099)
!5099 = !{!5100, !5105}
!5100 = !DIDerivedType(tag: DW_TAG_member, scope: !5098, file: !233, line: 91, baseType: !5101, size: 16)
!5101 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5098, file: !233, line: 91, size: 16, elements: !5102)
!5102 = !{!5103, !5104}
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5101, file: !233, line: 96, baseType: !283, size: 8)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5101, file: !233, line: 97, baseType: !123, size: 8, offset: 8)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5098, file: !233, line: 100, baseType: !287, size: 16)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5062, file: !233, line: 107, baseType: !155, size: 32, offset: 128)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5062, file: !233, line: 127, baseType: !103, size: 32, offset: 160)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5062, file: !233, line: 131, baseType: !5109, size: 192, offset: 192)
!5109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !269, line: 244, size: 192, elements: !5110)
!5110 = !{!5111, !5112, !5118}
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5109, file: !269, line: 245, baseType: !5068, size: 64)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5109, file: !269, line: 246, baseType: !5113, size: 32, offset: 64)
!5113 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !269, line: 242, baseType: !5114)
!5114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5115, size: 32)
!5115 = !DISubroutineType(types: !5116)
!5116 = !{null, !5117}
!5117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5109, size: 32)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5109, file: !269, line: 249, baseType: !302, size: 64, offset: 128)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5059, file: !233, line: 250, baseType: !5120, size: 288, offset: 384)
!5120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !306, line: 25, size: 288, elements: !5121)
!5121 = !{!5122, !5123, !5124, !5125, !5126, !5127, !5128, !5129, !5130}
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5120, file: !306, line: 26, baseType: !155, size: 32)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5120, file: !306, line: 27, baseType: !155, size: 32, offset: 32)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5120, file: !306, line: 28, baseType: !155, size: 32, offset: 64)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5120, file: !306, line: 29, baseType: !155, size: 32, offset: 96)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5120, file: !306, line: 30, baseType: !155, size: 32, offset: 128)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5120, file: !306, line: 31, baseType: !155, size: 32, offset: 160)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5120, file: !306, line: 32, baseType: !155, size: 32, offset: 192)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5120, file: !306, line: 33, baseType: !155, size: 32, offset: 224)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5120, file: !306, line: 34, baseType: !155, size: 32, offset: 256)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5059, file: !233, line: 253, baseType: !103, size: 32, offset: 672)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5059, file: !233, line: 256, baseType: !5090, size: 64, offset: 704)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5059, file: !233, line: 294, baseType: !104, size: 32, offset: 768)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5059, file: !233, line: 300, baseType: !5135, size: 96, offset: 800)
!5135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !233, line: 149, size: 96, elements: !5136)
!5136 = !{!5137, !5138, !5139}
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5135, file: !233, line: 153, baseType: !22, size: 32)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5135, file: !233, line: 162, baseType: !222, size: 32, offset: 32)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5135, file: !233, line: 168, baseType: !222, size: 32, offset: 64)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5059, file: !233, line: 325, baseType: !5141, size: 32, offset: 896)
!5141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5142, size: 32)
!5142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !329, line: 5073, size: 160, elements: !5143)
!5143 = !{!5144, !5150, !5151}
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5142, file: !329, line: 5074, baseType: !5145, size: 96)
!5145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !333, line: 56, size: 96, elements: !5146)
!5146 = !{!5147, !5148, !5149}
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5145, file: !333, line: 57, baseType: !336, size: 32)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5145, file: !333, line: 58, baseType: !103, size: 32, offset: 32)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5145, file: !333, line: 59, baseType: !222, size: 32, offset: 64)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5142, file: !329, line: 5075, baseType: !5090, size: 64, offset: 96)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5142, file: !329, line: 5076, baseType: !5152, offset: 160)
!5152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !343, line: 43, elements: !344)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5059, file: !233, line: 343, baseType: !5154, size: 64, offset: 928)
!5154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !306, line: 60, size: 64, elements: !5155)
!5155 = !{!5156, !5157}
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5154, file: !306, line: 63, baseType: !155, size: 32)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5154, file: !306, line: 66, baseType: !155, size: 32, offset: 32)
!5158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5159, size: 32)
!5159 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3271, line: 44, baseType: !5160)
!5160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1892, line: 47, size: 8, elements: !5161)
!5161 = !{!5162}
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5160, file: !1892, line: 48, baseType: !115, size: 8)
!5163 = !{!5164, !5165, !5166, !5167, !5168, !5169, !5170, !5171}
!5164 = !DILocalVariable(name: "thread", arg: 1, scope: !5054, file: !5055, line: 56, type: !5058)
!5165 = !DILocalVariable(name: "stack", arg: 2, scope: !5054, file: !5055, line: 56, type: !5158)
!5166 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !5054, file: !5055, line: 57, type: !981)
!5167 = !DILocalVariable(name: "entry", arg: 4, scope: !5054, file: !5055, line: 57, type: !3270)
!5168 = !DILocalVariable(name: "p1", arg: 5, scope: !5054, file: !5055, line: 58, type: !103)
!5169 = !DILocalVariable(name: "p2", arg: 6, scope: !5054, file: !5055, line: 58, type: !103)
!5170 = !DILocalVariable(name: "p3", arg: 7, scope: !5054, file: !5055, line: 58, type: !103)
!5171 = !DILocalVariable(name: "iframe", scope: !5054, file: !5055, line: 60, type: !2378)
!5172 = !DILocation(line: 0, scope: !5054)
!5173 = !DILocation(line: 85, column: 11, scope: !5054)
!5174 = !DILocation(line: 93, column: 10, scope: !5054)
!5175 = !DILocation(line: 98, column: 13, scope: !5054)
!5176 = !DILocation(line: 100, column: 15, scope: !5054)
!5177 = !DILocation(line: 100, column: 10, scope: !5054)
!5178 = !DILocation(line: 100, column: 13, scope: !5054)
!5179 = !DILocation(line: 101, column: 15, scope: !5054)
!5180 = !DILocation(line: 101, column: 10, scope: !5054)
!5181 = !DILocation(line: 101, column: 13, scope: !5054)
!5182 = !DILocation(line: 102, column: 15, scope: !5054)
!5183 = !DILocation(line: 102, column: 10, scope: !5054)
!5184 = !DILocation(line: 102, column: 13, scope: !5054)
!5185 = !DILocation(line: 103, column: 15, scope: !5054)
!5186 = !DILocation(line: 103, column: 10, scope: !5054)
!5187 = !DILocation(line: 103, column: 13, scope: !5054)
!5188 = !DILocation(line: 106, column: 10, scope: !5054)
!5189 = !DILocation(line: 106, column: 15, scope: !5054)
!5190 = !DILocation(line: 122, column: 29, scope: !5054)
!5191 = !DILocation(line: 122, column: 23, scope: !5054)
!5192 = !DILocation(line: 122, column: 27, scope: !5054)
!5193 = !DILocation(line: 123, column: 15, scope: !5054)
!5194 = !DILocation(line: 123, column: 23, scope: !5054)
!5195 = !DILocation(line: 143, column: 1, scope: !5054)
!5196 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !5055, file: !5055, line: 385, type: !5197, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !5200)
!5197 = !DISubroutineType(types: !5198)
!5198 = !{!155, !5199, !5199}
!5199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!5200 = !{!5201, !5202, !5203, !5206}
!5201 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !5196, file: !5055, line: 385, type: !5199)
!5202 = !DILocalVariable(name: "psp", arg: 2, scope: !5196, file: !5055, line: 385, type: !5199)
!5203 = !DILocalVariable(name: "thread", scope: !5196, file: !5055, line: 388, type: !5204)
!5204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5205, size: 32)
!5205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5059)
!5206 = !DILocalVariable(name: "guard_len", scope: !5196, file: !5055, line: 405, type: !155)
!5207 = !DILocation(line: 0, scope: !5196)
!5208 = !DILocation(line: 388, column: 34, scope: !5196)
!5209 = !DILocation(line: 390, column: 13, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5196, file: !5055, line: 390, column: 6)
!5211 = !DILocation(line: 390, column: 6, scope: !5196)
!5212 = !DILocation(line: 438, column: 6, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5196, file: !5055, line: 438, column: 6)
!5214 = !DILocation(line: 438, column: 6, scope: !5196)
!5215 = !DILocation(line: 442, column: 3, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5213, file: !5055, line: 440, column: 22)
!5217 = !DILocation(line: 455, column: 1, scope: !5196)
!5218 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !5055, file: !5055, line: 530, type: !5219, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2375, retainedNodes: !5221)
!5219 = !DISubroutineType(types: !5220)
!5220 = !{null, !5058, !981, !3270}
!5221 = !{!5222, !5223, !5224}
!5222 = !DILocalVariable(name: "main_thread", arg: 1, scope: !5218, file: !5055, line: 530, type: !5058)
!5223 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !5218, file: !5055, line: 530, type: !981)
!5224 = !DILocalVariable(name: "_main", arg: 3, scope: !5218, file: !5055, line: 531, type: !3270)
!5225 = !DILocation(line: 0, scope: !5218)
!5226 = !DILocation(line: 535, column: 11, scope: !5218)
!5227 = !DILocation(line: 560, column: 2, scope: !5218)
!5228 = !DILocation(line: 576, column: 2, scope: !5218)
!5229 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!5230 = !DILocation(line: 603, column: 2, scope: !5218)
!5231 = distinct !DISubprogram(name: "z_arm_fault", scope: !5232, file: !5232, line: 1036, type: !5233, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !5248)
!5232 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5233 = !DISubroutineType(types: !5234)
!5234 = !{null, !155, !155, !155, !5235}
!5235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5236, size: 32)
!5236 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !306, line: 37, baseType: !5237)
!5237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !306, line: 25, size: 288, elements: !5238)
!5238 = !{!5239, !5240, !5241, !5242, !5243, !5244, !5245, !5246, !5247}
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5237, file: !306, line: 26, baseType: !155, size: 32)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5237, file: !306, line: 27, baseType: !155, size: 32, offset: 32)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5237, file: !306, line: 28, baseType: !155, size: 32, offset: 64)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5237, file: !306, line: 29, baseType: !155, size: 32, offset: 96)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5237, file: !306, line: 30, baseType: !155, size: 32, offset: 128)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5237, file: !306, line: 31, baseType: !155, size: 32, offset: 160)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5237, file: !306, line: 32, baseType: !155, size: 32, offset: 192)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5237, file: !306, line: 33, baseType: !155, size: 32, offset: 224)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5237, file: !306, line: 34, baseType: !155, size: 32, offset: 256)
!5248 = !{!5249, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5257, !5258}
!5249 = !DILocalVariable(name: "msp", arg: 1, scope: !5231, file: !5232, line: 1036, type: !155)
!5250 = !DILocalVariable(name: "psp", arg: 2, scope: !5231, file: !5232, line: 1036, type: !155)
!5251 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5231, file: !5232, line: 1036, type: !155)
!5252 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !5231, file: !5232, line: 1037, type: !5235)
!5253 = !DILocalVariable(name: "reason", scope: !5231, file: !5232, line: 1039, type: !155)
!5254 = !DILocalVariable(name: "fault", scope: !5231, file: !5232, line: 1040, type: !104)
!5255 = !DILocalVariable(name: "recoverable", scope: !5231, file: !5232, line: 1041, type: !126)
!5256 = !DILocalVariable(name: "nested_exc", scope: !5231, file: !5232, line: 1041, type: !126)
!5257 = !DILocalVariable(name: "esf", scope: !5231, file: !5232, line: 1042, type: !2446)
!5258 = !DILocalVariable(name: "esf_copy", scope: !5231, file: !5232, line: 1047, type: !2447)
!5259 = !DILocation(line: 0, scope: !5231)
!5260 = !DILocation(line: 1040, column: 19, scope: !5231)
!5261 = !DILocation(line: 1040, column: 24, scope: !5231)
!5262 = !DILocation(line: 1041, column: 2, scope: !5231)
!5263 = !DILocation(line: 1047, column: 2, scope: !5231)
!5264 = !DILocation(line: 1047, column: 15, scope: !5231)
!5265 = !DILocalVariable(name: "key", arg: 1, scope: !5266, file: !4757, line: 84, type: !32)
!5266 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4757, file: !4757, line: 84, type: !4768, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !5267)
!5267 = !{!5265}
!5268 = !DILocation(line: 0, scope: !5266, inlinedAt: !5269)
!5269 = distinct !DILocation(line: 1050, column: 2, scope: !5231)
!5270 = !DILocation(line: 95, column: 2, scope: !5266, inlinedAt: !5269)
!5271 = !{i64 1980936}
!5272 = !DILocation(line: 1055, column: 9, scope: !5231)
!5273 = !DILocation(line: 1063, column: 11, scope: !5231)
!5274 = !DILocation(line: 1064, column: 6, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5231, file: !5232, line: 1064, column: 6)
!5276 = !{i8 0, i8 2}
!5277 = !DILocation(line: 1064, column: 6, scope: !5231)
!5278 = !DILocation(line: 1070, column: 20, scope: !5231)
!5279 = !DILocation(line: 1070, column: 2, scope: !5231)
!5280 = !DILocation(line: 1089, column: 6, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5231, file: !5232, line: 1089, column: 6)
!5282 = !DILocation(line: 0, scope: !5281)
!5283 = !DILocation(line: 1089, column: 6, scope: !5231)
!5284 = !DILocation(line: 1090, column: 28, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5286, file: !5232, line: 1090, column: 7)
!5286 = distinct !DILexicalBlock(scope: !5281, file: !5232, line: 1089, column: 18)
!5287 = !DILocation(line: 1090, column: 44, scope: !5285)
!5288 = !DILocation(line: 1090, column: 7, scope: !5286)
!5289 = !DILocation(line: 1091, column: 24, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5285, file: !5232, line: 1090, column: 50)
!5291 = !DILocation(line: 1092, column: 3, scope: !5290)
!5292 = !DILocation(line: 1094, column: 23, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5281, file: !5232, line: 1093, column: 9)
!5294 = !DILocation(line: 1097, column: 2, scope: !5231)
!5295 = !DILocation(line: 1098, column: 1, scope: !5231)
!5296 = distinct !DISubprogram(name: "get_esf", scope: !5232, file: !5232, line: 894, type: !5297, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !5300)
!5297 = !DISubroutineType(types: !5298)
!5298 = !{!2446, !155, !155, !155, !5299}
!5299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!5300 = !{!5301, !5302, !5303, !5304, !5305, !5306}
!5301 = !DILocalVariable(name: "msp", arg: 1, scope: !5296, file: !5232, line: 894, type: !155)
!5302 = !DILocalVariable(name: "psp", arg: 2, scope: !5296, file: !5232, line: 894, type: !155)
!5303 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5296, file: !5232, line: 894, type: !155)
!5304 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !5296, file: !5232, line: 895, type: !5299)
!5305 = !DILocalVariable(name: "alternative_state_exc", scope: !5296, file: !5232, line: 897, type: !126)
!5306 = !DILocalVariable(name: "ptr_esf", scope: !5296, file: !5232, line: 898, type: !2446)
!5307 = !DILocation(line: 0, scope: !5296)
!5308 = !DILocation(line: 900, column: 14, scope: !5296)
!5309 = !DILocation(line: 902, column: 49, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5296, file: !5232, line: 902, column: 6)
!5311 = !DILocation(line: 902, column: 6, scope: !5296)
!5312 = !DILocation(line: 983, column: 18, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5296, file: !5232, line: 983, column: 6)
!5314 = !DILocation(line: 991, column: 7, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5316, file: !5232, line: 990, column: 30)
!5316 = distinct !DILexicalBlock(scope: !5296, file: !5232, line: 990, column: 6)
!5317 = !DILocation(line: 998, column: 16, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5319, file: !5232, line: 995, column: 10)
!5319 = distinct !DILexicalBlock(scope: !5315, file: !5232, line: 991, column: 7)
!5320 = !DILocation(line: 1002, column: 2, scope: !5296)
!5321 = !DILocation(line: 1003, column: 1, scope: !5296)
!5322 = distinct !DISubprogram(name: "fault_handle", scope: !5232, file: !5232, line: 786, type: !5323, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !5325)
!5323 = !DISubroutineType(types: !5324)
!5324 = !{!155, !2446, !104, !5299}
!5325 = !{!5326, !5327, !5328, !5329}
!5326 = !DILocalVariable(name: "esf", arg: 1, scope: !5322, file: !5232, line: 786, type: !2446)
!5327 = !DILocalVariable(name: "fault", arg: 2, scope: !5322, file: !5232, line: 786, type: !104)
!5328 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5322, file: !5232, line: 786, type: !5299)
!5329 = !DILocalVariable(name: "reason", scope: !5322, file: !5232, line: 788, type: !155)
!5330 = !DILocation(line: 0, scope: !5322)
!5331 = !DILocation(line: 790, column: 15, scope: !5322)
!5332 = !DILocation(line: 792, column: 2, scope: !5322)
!5333 = !DILocation(line: 794, column: 12, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5322, file: !5232, line: 792, column: 17)
!5335 = !DILocation(line: 795, column: 3, scope: !5334)
!5336 = !DILocation(line: 800, column: 12, scope: !5334)
!5337 = !DILocation(line: 801, column: 3, scope: !5334)
!5338 = !DILocation(line: 803, column: 12, scope: !5334)
!5339 = !DILocation(line: 804, column: 3, scope: !5334)
!5340 = !DILocation(line: 806, column: 12, scope: !5334)
!5341 = !DILocation(line: 807, column: 3, scope: !5334)
!5342 = !DILocation(line: 814, column: 3, scope: !5334)
!5343 = !DILocation(line: 815, column: 3, scope: !5334)
!5344 = !DILocation(line: 829, column: 2, scope: !5322)
!5345 = distinct !DISubprogram(name: "hard_fault", scope: !5232, file: !5232, line: 709, type: !5346, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !5348)
!5346 = !DISubroutineType(types: !5347)
!5347 = !{!155, !2446, !5299}
!5348 = !{!5349, !5350, !5351}
!5349 = !DILocalVariable(name: "esf", arg: 1, scope: !5345, file: !5232, line: 709, type: !2446)
!5350 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5345, file: !5232, line: 709, type: !5299)
!5351 = !DILocalVariable(name: "reason", scope: !5345, file: !5232, line: 711, type: !155)
!5352 = !DILocation(line: 0, scope: !5345)
!5353 = !DILocation(line: 732, column: 15, scope: !5345)
!5354 = !DILocation(line: 734, column: 12, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5345, file: !5232, line: 734, column: 6)
!5356 = !DILocation(line: 734, column: 17, scope: !5355)
!5357 = !DILocation(line: 734, column: 41, scope: !5355)
!5358 = !DILocation(line: 734, column: 6, scope: !5345)
!5359 = !DILocation(line: 736, column: 19, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5355, file: !5232, line: 736, column: 13)
!5361 = !DILocation(line: 736, column: 49, scope: !5360)
!5362 = !DILocation(line: 736, column: 13, scope: !5355)
!5363 = !DILocation(line: 738, column: 19, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5360, file: !5232, line: 738, column: 13)
!5365 = !DILocation(line: 738, column: 24, scope: !5364)
!5366 = !DILocation(line: 738, column: 47, scope: !5364)
!5367 = !DILocation(line: 738, column: 13, scope: !5360)
!5368 = !DILocation(line: 740, column: 7, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5370, file: !5232, line: 740, column: 7)
!5370 = distinct !DILexicalBlock(scope: !5364, file: !5232, line: 738, column: 53)
!5371 = !DILocation(line: 740, column: 7, scope: !5370)
!5372 = !DILocation(line: 742, column: 24, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5369, file: !5232, line: 740, column: 38)
!5374 = !DILocation(line: 743, column: 3, scope: !5373)
!5375 = !DILocation(line: 743, column: 20, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5369, file: !5232, line: 743, column: 14)
!5377 = !DILocation(line: 743, column: 25, scope: !5376)
!5378 = !DILocation(line: 743, column: 52, scope: !5376)
!5379 = !DILocation(line: 743, column: 14, scope: !5369)
!5380 = !DILocation(line: 744, column: 13, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5376, file: !5232, line: 743, column: 58)
!5382 = !DILocation(line: 745, column: 3, scope: !5381)
!5383 = !DILocation(line: 745, column: 20, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5376, file: !5232, line: 745, column: 14)
!5385 = !DILocation(line: 745, column: 25, scope: !5384)
!5386 = !DILocation(line: 745, column: 52, scope: !5384)
!5387 = !DILocation(line: 745, column: 14, scope: !5376)
!5388 = !DILocation(line: 746, column: 13, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5384, file: !5232, line: 745, column: 58)
!5390 = !DILocation(line: 747, column: 3, scope: !5389)
!5391 = !DILocation(line: 747, column: 20, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5384, file: !5232, line: 747, column: 14)
!5393 = !DILocation(line: 747, column: 52, scope: !5392)
!5394 = !DILocation(line: 747, column: 14, scope: !5384)
!5395 = !DILocation(line: 748, column: 13, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5392, file: !5232, line: 747, column: 58)
!5397 = !DILocation(line: 753, column: 3, scope: !5396)
!5398 = !DILocation(line: 766, column: 2, scope: !5345)
!5399 = distinct !DISubprogram(name: "mem_manage_fault", scope: !5232, file: !5232, line: 229, type: !5323, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !5400)
!5400 = !{!5401, !5402, !5403, !5404, !5405, !5406, !5409}
!5401 = !DILocalVariable(name: "esf", arg: 1, scope: !5399, file: !5232, line: 229, type: !2446)
!5402 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5399, file: !5232, line: 229, type: !104)
!5403 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5399, file: !5232, line: 230, type: !5299)
!5404 = !DILocalVariable(name: "reason", scope: !5399, file: !5232, line: 232, type: !155)
!5405 = !DILocalVariable(name: "mmfar", scope: !5399, file: !5232, line: 233, type: !155)
!5406 = !DILocalVariable(name: "temp", scope: !5407, file: !5232, line: 254, type: !155)
!5407 = distinct !DILexicalBlock(scope: !5408, file: !5232, line: 244, column: 48)
!5408 = distinct !DILexicalBlock(scope: !5399, file: !5232, line: 244, column: 6)
!5409 = !DILocalVariable(name: "min_stack_ptr", scope: !5410, file: !5232, line: 309, type: !155)
!5410 = distinct !DILexicalBlock(scope: !5411, file: !5232, line: 308, column: 43)
!5411 = distinct !DILexicalBlock(scope: !5412, file: !5232, line: 308, column: 7)
!5412 = distinct !DILexicalBlock(scope: !5413, file: !5232, line: 289, column: 40)
!5413 = distinct !DILexicalBlock(scope: !5399, file: !5232, line: 288, column: 6)
!5414 = !DILocation(line: 0, scope: !5399)
!5415 = !DILocation(line: 237, column: 12, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5399, file: !5232, line: 237, column: 6)
!5417 = !DILocation(line: 241, column: 12, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5399, file: !5232, line: 241, column: 6)
!5419 = !DILocation(line: 244, column: 12, scope: !5408)
!5420 = !DILocation(line: 244, column: 17, scope: !5408)
!5421 = !DILocation(line: 244, column: 42, scope: !5408)
!5422 = !DILocation(line: 244, column: 6, scope: !5399)
!5423 = !DILocation(line: 254, column: 24, scope: !5407)
!5424 = !DILocation(line: 0, scope: !5407)
!5425 = !DILocation(line: 256, column: 13, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5407, file: !5232, line: 256, column: 7)
!5427 = !DILocation(line: 256, column: 18, scope: !5426)
!5428 = !DILocation(line: 256, column: 44, scope: !5426)
!5429 = !DILocation(line: 256, column: 7, scope: !5407)
!5430 = !DILocation(line: 259, column: 24, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5432, file: !5232, line: 259, column: 8)
!5432 = distinct !DILexicalBlock(scope: !5426, file: !5232, line: 256, column: 50)
!5433 = !DILocation(line: 259, column: 8, scope: !5432)
!5434 = !DILocation(line: 261, column: 15, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5431, file: !5232, line: 259, column: 30)
!5436 = !DILocation(line: 262, column: 4, scope: !5435)
!5437 = !DILocation(line: 265, column: 12, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5399, file: !5232, line: 265, column: 6)
!5439 = !DILocation(line: 269, column: 12, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5399, file: !5232, line: 269, column: 6)
!5441 = !DILocation(line: 288, column: 12, scope: !5413)
!5442 = !DILocation(line: 288, column: 17, scope: !5413)
!5443 = !DILocation(line: 288, column: 41, scope: !5413)
!5444 = !DILocation(line: 289, column: 9, scope: !5413)
!5445 = !DILocation(line: 289, column: 14, scope: !5413)
!5446 = !DILocation(line: 288, column: 6, scope: !5399)
!5447 = !DILocation(line: 308, column: 12, scope: !5411)
!5448 = !DILocation(line: 308, column: 17, scope: !5411)
!5449 = !DILocation(line: 308, column: 7, scope: !5412)
!5450 = !DILocation(line: 310, column: 6, scope: !5410)
!5451 = !DILocation(line: 309, column: 29, scope: !5410)
!5452 = !DILocation(line: 0, scope: !5410)
!5453 = !DILocation(line: 312, column: 8, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5410, file: !5232, line: 312, column: 8)
!5455 = !DILocation(line: 312, column: 8, scope: !5410)
!5456 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !5457, file: !4931, line: 1099, type: !155)
!5457 = distinct !DISubprogram(name: "__set_PSP", scope: !4931, file: !4931, line: 1099, type: !5022, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !5458)
!5458 = !{!5456}
!5459 = !DILocation(line: 0, scope: !5457, inlinedAt: !5460)
!5460 = distinct !DILocation(line: 338, column: 5, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5454, file: !5232, line: 312, column: 23)
!5462 = !DILocation(line: 1101, column: 3, scope: !5457, inlinedAt: !5460)
!5463 = !{i64 2859465}
!5464 = !DILocation(line: 341, column: 4, scope: !5461)
!5465 = !DILocation(line: 360, column: 12, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5399, file: !5232, line: 360, column: 6)
!5467 = !DILocation(line: 360, column: 17, scope: !5466)
!5468 = !DILocation(line: 360, column: 41, scope: !5466)
!5469 = !DILocation(line: 360, column: 6, scope: !5399)
!5470 = !DILocation(line: 361, column: 14, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5466, file: !5232, line: 360, column: 47)
!5472 = !DILocation(line: 362, column: 2, scope: !5471)
!5473 = !DILocation(line: 366, column: 12, scope: !5399)
!5474 = !DILocation(line: 369, column: 15, scope: !5399)
!5475 = !DILocation(line: 371, column: 2, scope: !5399)
!5476 = distinct !DISubprogram(name: "bus_fault", scope: !5232, file: !5232, line: 383, type: !5477, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !5479)
!5477 = !DISubroutineType(types: !5478)
!5478 = !{!104, !2446, !104, !5299}
!5479 = !{!5480, !5481, !5482, !5483, !5484}
!5480 = !DILocalVariable(name: "esf", arg: 1, scope: !5476, file: !5232, line: 383, type: !2446)
!5481 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5476, file: !5232, line: 383, type: !104)
!5482 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5476, file: !5232, line: 383, type: !5299)
!5483 = !DILocalVariable(name: "reason", scope: !5476, file: !5232, line: 385, type: !155)
!5484 = !DILocalVariable(name: "bfar", scope: !5485, file: !5232, line: 405, type: !155)
!5485 = distinct !DILexicalBlock(scope: !5486, file: !5232, line: 395, column: 42)
!5486 = distinct !DILexicalBlock(scope: !5476, file: !5232, line: 395, column: 6)
!5487 = !DILocation(line: 0, scope: !5476)
!5488 = !DILocation(line: 389, column: 11, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5476, file: !5232, line: 389, column: 6)
!5490 = !DILocation(line: 392, column: 11, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5476, file: !5232, line: 392, column: 6)
!5492 = !DILocation(line: 395, column: 11, scope: !5486)
!5493 = !DILocation(line: 395, column: 16, scope: !5486)
!5494 = !DILocation(line: 395, column: 6, scope: !5476)
!5495 = !DILocation(line: 405, column: 3, scope: !5485)
!5496 = !DILocation(line: 0, scope: !5485)
!5497 = !DILocation(line: 407, column: 13, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5485, file: !5232, line: 407, column: 7)
!5499 = !DILocation(line: 407, column: 18, scope: !5498)
!5500 = !DILocation(line: 407, column: 44, scope: !5498)
!5501 = !DILocation(line: 407, column: 7, scope: !5485)
!5502 = !DILocation(line: 411, column: 15, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5504, file: !5232, line: 409, column: 30)
!5504 = distinct !DILexicalBlock(scope: !5505, file: !5232, line: 409, column: 8)
!5505 = distinct !DILexicalBlock(scope: !5498, file: !5232, line: 407, column: 50)
!5506 = !DILocation(line: 412, column: 4, scope: !5503)
!5507 = !DILocation(line: 415, column: 11, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5476, file: !5232, line: 415, column: 6)
!5509 = !DILocation(line: 418, column: 12, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5476, file: !5232, line: 418, column: 6)
!5511 = !DILocation(line: 418, column: 17, scope: !5510)
!5512 = !DILocation(line: 418, column: 41, scope: !5510)
!5513 = !DILocation(line: 418, column: 6, scope: !5476)
!5514 = !DILocation(line: 423, column: 18, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5510, file: !5232, line: 423, column: 13)
!5516 = !DILocation(line: 524, column: 12, scope: !5476)
!5517 = !DILocation(line: 526, column: 15, scope: !5476)
!5518 = !DILocation(line: 528, column: 2, scope: !5476)
!5519 = distinct !DISubprogram(name: "usage_fault", scope: !5232, file: !5232, line: 539, type: !5520, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !5524)
!5520 = !DISubroutineType(types: !5521)
!5521 = !{!155, !5522}
!5522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5523, size: 32)
!5523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2447)
!5524 = !{!5525, !5526}
!5525 = !DILocalVariable(name: "esf", arg: 1, scope: !5519, file: !5232, line: 539, type: !5522)
!5526 = !DILocalVariable(name: "reason", scope: !5519, file: !5232, line: 541, type: !155)
!5527 = !DILocation(line: 0, scope: !5519)
!5528 = !DILocation(line: 546, column: 12, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5519, file: !5232, line: 546, column: 6)
!5530 = !DILocation(line: 549, column: 12, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5519, file: !5232, line: 549, column: 6)
!5532 = !DILocation(line: 567, column: 12, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5519, file: !5232, line: 567, column: 6)
!5534 = !DILocation(line: 570, column: 12, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5519, file: !5232, line: 570, column: 6)
!5536 = !DILocation(line: 573, column: 12, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5519, file: !5232, line: 573, column: 6)
!5538 = !DILocation(line: 576, column: 12, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5519, file: !5232, line: 576, column: 6)
!5540 = !DILocation(line: 581, column: 12, scope: !5519)
!5541 = !DILocation(line: 583, column: 2, scope: !5519)
!5542 = distinct !DISubprogram(name: "debug_monitor", scope: !5232, file: !5232, line: 632, type: !5543, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !5545)
!5543 = !DISubroutineType(types: !5544)
!5544 = !{null, !2446, !5299}
!5545 = !{!5546, !5547}
!5546 = !DILocalVariable(name: "esf", arg: 1, scope: !5542, file: !5232, line: 632, type: !2446)
!5547 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5542, file: !5232, line: 632, type: !5299)
!5548 = !DILocation(line: 0, scope: !5542)
!5549 = !DILocation(line: 634, column: 15, scope: !5542)
!5550 = !DILocation(line: 652, column: 1, scope: !5542)
!5551 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !5232, file: !5232, line: 658, type: !5552, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !5554)
!5552 = !DISubroutineType(types: !5553)
!5553 = !{!126, !2446}
!5554 = !{!5555, !5556, !5557}
!5555 = !DILocalVariable(name: "esf", arg: 1, scope: !5551, file: !5232, line: 658, type: !2446)
!5556 = !DILocalVariable(name: "ret_addr", scope: !5551, file: !5232, line: 660, type: !2489)
!5557 = !DILocalVariable(name: "fault_insn", scope: !5551, file: !5232, line: 686, type: !287)
!5558 = !DILocation(line: 0, scope: !5551)
!5559 = !DILocation(line: 660, column: 46, scope: !5551)
!5560 = !DILocation(line: 660, column: 23, scope: !5551)
!5561 = !DILocation(line: 682, column: 11, scope: !5551)
!5562 = !DILocation(line: 271, column: 3, scope: !5563, inlinedAt: !5564)
!5563 = distinct !DISubprogram(name: "__DSB", scope: !4931, file: !4931, line: 269, type: !2800, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !344)
!5564 = distinct !DILocation(line: 683, column: 2, scope: !5551)
!5565 = !{i64 2835600}
!5566 = !DILocation(line: 260, column: 3, scope: !5567, inlinedAt: !5568)
!5567 = distinct !DISubprogram(name: "__ISB", scope: !4931, file: !4931, line: 258, type: !2800, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !344)
!5568 = distinct !DILocation(line: 684, column: 2, scope: !5551)
!5569 = !{i64 2835317}
!5570 = !DILocation(line: 686, column: 35, scope: !5551)
!5571 = !DILocation(line: 686, column: 24, scope: !5551)
!5572 = !DILocation(line: 688, column: 11, scope: !5551)
!5573 = !DILocation(line: 271, column: 3, scope: !5563, inlinedAt: !5574)
!5574 = distinct !DILocation(line: 689, column: 2, scope: !5551)
!5575 = !DILocation(line: 260, column: 3, scope: !5567, inlinedAt: !5576)
!5576 = distinct !DILocation(line: 690, column: 2, scope: !5551)
!5577 = !DILocation(line: 693, column: 45, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5551, file: !5232, line: 693, column: 6)
!5579 = !DILocation(line: 699, column: 1, scope: !5551)
!5580 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !5232, file: !5232, line: 1107, type: !2800, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2418, retainedNodes: !344)
!5581 = !DILocation(line: 1111, column: 11, scope: !5580)
!5582 = !DILocation(line: 1136, column: 1, scope: !5580)
!5583 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !5584, file: !5584, line: 26, type: !2800, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !5585)
!5584 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5585 = !{!5586}
!5586 = !DILocalVariable(name: "irq", scope: !5583, file: !5584, line: 28, type: !104)
!5587 = !DILocation(line: 0, scope: !5583)
!5588 = !DILocation(line: 30, column: 2, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5583, file: !5584, line: 30, column: 2)
!5590 = !DILocation(line: 31, column: 3, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5592, file: !5584, line: 30, column: 39)
!5592 = distinct !DILexicalBlock(scope: !5589, file: !5584, line: 30, column: 2)
!5593 = !DILocation(line: 30, column: 35, scope: !5592)
!5594 = !DILocation(line: 30, column: 13, scope: !5592)
!5595 = distinct !{!5595, !5588, !5596}
!5596 = !DILocation(line: 32, column: 2, scope: !5589)
!5597 = !DILocation(line: 33, column: 1, scope: !5583)
!5598 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !378, file: !378, line: 1814, type: !4965, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !5599)
!5599 = !{!5600, !5601}
!5600 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5598, file: !378, line: 1814, type: !614)
!5601 = !DILocalVariable(name: "priority", arg: 2, scope: !5598, file: !378, line: 1814, type: !155)
!5602 = !DILocation(line: 0, scope: !5598)
!5603 = !DILocation(line: 1816, column: 7, scope: !5598)
!5604 = !DILocation(line: 0, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5598, file: !378, line: 1816, column: 7)
!5606 = !DILocation(line: 1824, column: 1, scope: !5598)
!5607 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !5608, file: !5608, line: 27, type: !5609, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2535, retainedNodes: !5712)
!5608 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5609 = !DISubroutineType(types: !5610)
!5610 = !{null, !5611}
!5611 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !233, line: 347, baseType: !5612)
!5612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5613, size: 32)
!5613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !233, line: 245, size: 1024, elements: !5614)
!5614 = !{!5615, !5673, !5685, !5686, !5687, !5688, !5694, !5707}
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5613, file: !233, line: 247, baseType: !5616, size: 384)
!5616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !233, line: 57, size: 384, elements: !5617)
!5617 = !{!5618, !5642, !5649, !5650, !5651, !5660, !5661, !5662}
!5618 = !DIDerivedType(tag: DW_TAG_member, scope: !5616, file: !233, line: 60, baseType: !5619, size: 64)
!5619 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5616, file: !233, line: 60, size: 64, elements: !5620)
!5620 = !{!5621, !5636}
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5619, file: !233, line: 61, baseType: !5622, size: 64)
!5622 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !243, line: 49, baseType: !5623)
!5623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !243, line: 37, size: 64, elements: !5624)
!5624 = !{!5625, !5631}
!5625 = !DIDerivedType(tag: DW_TAG_member, scope: !5623, file: !243, line: 38, baseType: !5626, size: 32)
!5626 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5623, file: !243, line: 38, size: 32, elements: !5627)
!5627 = !{!5628, !5630}
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5626, file: !243, line: 39, baseType: !5629, size: 32)
!5629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5623, size: 32)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5626, file: !243, line: 40, baseType: !5629, size: 32)
!5631 = !DIDerivedType(tag: DW_TAG_member, scope: !5623, file: !243, line: 42, baseType: !5632, size: 32, offset: 32)
!5632 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5623, file: !243, line: 42, size: 32, elements: !5633)
!5633 = !{!5634, !5635}
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5632, file: !243, line: 43, baseType: !5629, size: 32)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5632, file: !243, line: 44, baseType: !5629, size: 32)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5619, file: !233, line: 62, baseType: !5637, size: 64)
!5637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !259, line: 49, size: 64, elements: !5638)
!5638 = !{!5639}
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5637, file: !259, line: 50, baseType: !5640, size: 64)
!5640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5641, size: 64, elements: !264)
!5641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5637, size: 32)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5616, file: !233, line: 68, baseType: !5643, size: 32, offset: 64)
!5643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5644, size: 32)
!5644 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !269, line: 233, baseType: !5645)
!5645 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !269, line: 231, size: 64, elements: !5646)
!5646 = !{!5647}
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5645, file: !269, line: 232, baseType: !5648, size: 64)
!5648 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !243, line: 48, baseType: !5623)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5616, file: !233, line: 71, baseType: !123, size: 8, offset: 96)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5616, file: !233, line: 74, baseType: !123, size: 8, offset: 104)
!5651 = !DIDerivedType(tag: DW_TAG_member, scope: !5616, file: !233, line: 90, baseType: !5652, size: 16, offset: 112)
!5652 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5616, file: !233, line: 90, size: 16, elements: !5653)
!5653 = !{!5654, !5659}
!5654 = !DIDerivedType(tag: DW_TAG_member, scope: !5652, file: !233, line: 91, baseType: !5655, size: 16)
!5655 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5652, file: !233, line: 91, size: 16, elements: !5656)
!5656 = !{!5657, !5658}
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5655, file: !233, line: 96, baseType: !283, size: 8)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5655, file: !233, line: 97, baseType: !123, size: 8, offset: 8)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5652, file: !233, line: 100, baseType: !287, size: 16)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5616, file: !233, line: 107, baseType: !155, size: 32, offset: 128)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5616, file: !233, line: 127, baseType: !103, size: 32, offset: 160)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5616, file: !233, line: 131, baseType: !5663, size: 192, offset: 192)
!5663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !269, line: 244, size: 192, elements: !5664)
!5664 = !{!5665, !5666, !5672}
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5663, file: !269, line: 245, baseType: !5622, size: 64)
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5663, file: !269, line: 246, baseType: !5667, size: 32, offset: 64)
!5667 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !269, line: 242, baseType: !5668)
!5668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5669, size: 32)
!5669 = !DISubroutineType(types: !5670)
!5670 = !{null, !5671}
!5671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5663, size: 32)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5663, file: !269, line: 249, baseType: !302, size: 64, offset: 128)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5613, file: !233, line: 250, baseType: !5674, size: 288, offset: 384)
!5674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !306, line: 25, size: 288, elements: !5675)
!5675 = !{!5676, !5677, !5678, !5679, !5680, !5681, !5682, !5683, !5684}
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5674, file: !306, line: 26, baseType: !155, size: 32)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5674, file: !306, line: 27, baseType: !155, size: 32, offset: 32)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5674, file: !306, line: 28, baseType: !155, size: 32, offset: 64)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5674, file: !306, line: 29, baseType: !155, size: 32, offset: 96)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5674, file: !306, line: 30, baseType: !155, size: 32, offset: 128)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5674, file: !306, line: 31, baseType: !155, size: 32, offset: 160)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5674, file: !306, line: 32, baseType: !155, size: 32, offset: 192)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5674, file: !306, line: 33, baseType: !155, size: 32, offset: 224)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5674, file: !306, line: 34, baseType: !155, size: 32, offset: 256)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5613, file: !233, line: 253, baseType: !103, size: 32, offset: 672)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5613, file: !233, line: 256, baseType: !5644, size: 64, offset: 704)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5613, file: !233, line: 294, baseType: !104, size: 32, offset: 768)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5613, file: !233, line: 300, baseType: !5689, size: 96, offset: 800)
!5689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !233, line: 149, size: 96, elements: !5690)
!5690 = !{!5691, !5692, !5693}
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5689, file: !233, line: 153, baseType: !22, size: 32)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5689, file: !233, line: 162, baseType: !222, size: 32, offset: 32)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5689, file: !233, line: 168, baseType: !222, size: 32, offset: 64)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5613, file: !233, line: 325, baseType: !5695, size: 32, offset: 896)
!5695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5696, size: 32)
!5696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !329, line: 5073, size: 160, elements: !5697)
!5697 = !{!5698, !5704, !5705}
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5696, file: !329, line: 5074, baseType: !5699, size: 96)
!5699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !333, line: 56, size: 96, elements: !5700)
!5700 = !{!5701, !5702, !5703}
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5699, file: !333, line: 57, baseType: !336, size: 32)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5699, file: !333, line: 58, baseType: !103, size: 32, offset: 32)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5699, file: !333, line: 59, baseType: !222, size: 32, offset: 64)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5696, file: !329, line: 5075, baseType: !5644, size: 64, offset: 96)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5696, file: !329, line: 5076, baseType: !5706, offset: 160)
!5706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !343, line: 43, elements: !344)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5613, file: !233, line: 343, baseType: !5708, size: 64, offset: 928)
!5708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !306, line: 60, size: 64, elements: !5709)
!5709 = !{!5710, !5711}
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5708, file: !306, line: 63, baseType: !155, size: 32)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5708, file: !306, line: 66, baseType: !155, size: 32, offset: 32)
!5712 = !{!5713}
!5713 = !DILocalVariable(name: "thread", arg: 1, scope: !5607, file: !5608, line: 27, type: !5611)
!5714 = !DILocation(line: 0, scope: !5607)
!5715 = !DILocation(line: 29, column: 6, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5607, file: !5608, line: 29, column: 6)
!5717 = !DILocation(line: 29, column: 15, scope: !5716)
!5718 = !DILocation(line: 29, column: 6, scope: !5607)
!5719 = !DILocation(line: 1031, column: 3, scope: !5720, inlinedAt: !5723)
!5720 = distinct !DISubprogram(name: "__get_IPSR", scope: !4931, file: !4931, line: 1027, type: !5012, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2535, retainedNodes: !5721)
!5721 = !{!5722}
!5722 = !DILocalVariable(name: "result", scope: !5720, file: !4931, line: 1029, type: !155)
!5723 = distinct !DILocation(line: 48, column: 10, scope: !5724, inlinedAt: !5728)
!5724 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5725, file: !5725, line: 46, type: !5726, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2535, retainedNodes: !344)
!5725 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5726 = !DISubroutineType(types: !5727)
!5727 = !{!126}
!5728 = distinct !DILocation(line: 30, column: 7, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5730, file: !5608, line: 30, column: 7)
!5730 = distinct !DILexicalBlock(scope: !5716, file: !5608, line: 29, column: 26)
!5731 = !{i64 2824448}
!5732 = !DILocation(line: 0, scope: !5720, inlinedAt: !5723)
!5733 = !DILocation(line: 48, column: 9, scope: !5724, inlinedAt: !5728)
!5734 = !DILocation(line: 30, column: 7, scope: !5730)
!5735 = !DILocation(line: 42, column: 14, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5729, file: !5608, line: 30, column: 25)
!5737 = !DILocation(line: 48, column: 15, scope: !5736)
!5738 = !DILocation(line: 49, column: 3, scope: !5736)
!5739 = !DILocation(line: 52, column: 2, scope: !5607)
!5740 = !DILocation(line: 53, column: 1, scope: !5607)
!5741 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !228, file: !228, line: 127, type: !2800, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !219, retainedNodes: !344)
!5742 = !DILocation(line: 134, column: 2, scope: !5741)
!5743 = !DILocation(line: 156, column: 1, scope: !5741)
!5744 = !DILocation(line: 0, scope: !227)
!5745 = !DILocation(line: 289, column: 36, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !227, file: !228, line: 285, column: 2)
!5747 = !DILocation(line: 289, column: 42, scope: !5746)
!5748 = !DILocation(line: 300, column: 36, scope: !227)
!5749 = !DILocation(line: 301, column: 35, scope: !227)
!5750 = !DILocation(line: 302, column: 37, scope: !227)
!5751 = !DILocation(line: 311, column: 2, scope: !227)
!5752 = !DILocation(line: 316, column: 1, scope: !227)
!5753 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !406, file: !406, line: 180, type: !2800, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !373, retainedNodes: !344)
!5754 = !DILocation(line: 188, column: 12, scope: !5753)
!5755 = !DILocation(line: 271, column: 3, scope: !5756, inlinedAt: !5757)
!5756 = distinct !DISubprogram(name: "__DSB", scope: !4931, file: !4931, line: 269, type: !2800, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !373, retainedNodes: !344)
!5757 = distinct !DILocation(line: 192, column: 2, scope: !5753)
!5758 = !{i64 2984595}
!5759 = !DILocation(line: 260, column: 3, scope: !5760, inlinedAt: !5761)
!5760 = distinct !DISubprogram(name: "__ISB", scope: !4931, file: !4931, line: 258, type: !2800, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !373, retainedNodes: !344)
!5761 = distinct !DILocation(line: 193, column: 2, scope: !5753)
!5762 = !{i64 2984312}
!5763 = !DILocation(line: 194, column: 1, scope: !5753)
!5764 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !406, file: !406, line: 199, type: !2800, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !373, retainedNodes: !344)
!5765 = !DILocation(line: 282, column: 3, scope: !5766, inlinedAt: !5767)
!5766 = distinct !DISubprogram(name: "__DMB", scope: !4931, file: !4931, line: 280, type: !2800, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !373, retainedNodes: !344)
!5767 = distinct !DILocation(line: 202, column: 2, scope: !5764)
!5768 = !{i64 2984871}
!5769 = !DILocation(line: 205, column: 12, scope: !5764)
!5770 = !DILocation(line: 206, column: 1, scope: !5764)
!5771 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !406, file: !406, line: 275, type: !5772, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !373, retainedNodes: !5785)
!5772 = !DISubroutineType(types: !5773)
!5773 = !{null, !5774, !1627, !5199, !5199}
!5774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5775, size: 32)
!5775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5776)
!5776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !357, line: 52, size: 96, elements: !5777)
!5777 = !{!5778, !5779, !5780}
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5776, file: !357, line: 53, baseType: !22, size: 32)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5776, file: !357, line: 54, baseType: !222, size: 32, offset: 32)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5776, file: !357, line: 55, baseType: !5781, size: 32, offset: 64)
!5781 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !363, line: 151, baseType: !5782)
!5782 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !363, line: 149, size: 32, elements: !5783)
!5783 = !{!5784}
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !5782, file: !363, line: 150, baseType: !155, size: 32)
!5785 = !{!5786, !5787, !5788, !5789}
!5786 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5771, file: !406, line: 276, type: !5774)
!5787 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5771, file: !406, line: 276, type: !1627)
!5788 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !5771, file: !406, line: 277, type: !5199)
!5789 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5771, file: !406, line: 277, type: !5199)
!5790 = !DILocation(line: 0, scope: !5771)
!5791 = !DILocation(line: 279, column: 6, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5771, file: !406, line: 279, column: 6)
!5793 = !DILocation(line: 285, column: 1, scope: !5771)
!5794 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !5795, file: !5795, line: 220, type: !5796, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !373, retainedNodes: !5798)
!5795 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5796 = !DISubroutineType(types: !5797)
!5797 = !{!104, !5774, !1627, !5199, !5199}
!5798 = !{!5799, !5800, !5801, !5802, !5803}
!5799 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5794, file: !5795, line: 221, type: !5774)
!5800 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5794, file: !5795, line: 221, type: !1627)
!5801 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !5794, file: !5795, line: 222, type: !5199)
!5802 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5794, file: !5795, line: 223, type: !5199)
!5803 = !DILocalVariable(name: "mpu_reg_index", scope: !5794, file: !5795, line: 225, type: !104)
!5804 = !DILocation(line: 0, scope: !5794)
!5805 = !DILocation(line: 225, column: 22, scope: !5794)
!5806 = !DILocation(line: 233, column: 18, scope: !5794)
!5807 = !DILocation(line: 236, column: 23, scope: !5794)
!5808 = !DILocation(line: 236, column: 21, scope: !5794)
!5809 = !DILocation(line: 238, column: 2, scope: !5794)
!5810 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !406, file: !406, line: 105, type: !5811, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !373, retainedNodes: !5813)
!5811 = !DISubroutineType(types: !5812)
!5812 = !{!104, !5774, !123, !123, !126}
!5813 = !{!5814, !5815, !5816, !5817, !5818, !5819}
!5814 = !DILocalVariable(name: "regions", arg: 1, scope: !5810, file: !406, line: 106, type: !5774)
!5815 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5810, file: !406, line: 106, type: !123)
!5816 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !5810, file: !406, line: 106, type: !123)
!5817 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !5810, file: !406, line: 107, type: !126)
!5818 = !DILocalVariable(name: "i", scope: !5810, file: !406, line: 109, type: !104)
!5819 = !DILocalVariable(name: "reg_index", scope: !5810, file: !406, line: 110, type: !104)
!5820 = !DILocation(line: 0, scope: !5810)
!5821 = !DILocation(line: 110, column: 18, scope: !5810)
!5822 = !DILocation(line: 112, column: 16, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5824, file: !406, line: 112, column: 2)
!5824 = distinct !DILexicalBlock(scope: !5810, file: !406, line: 112, column: 2)
!5825 = !DILocation(line: 112, column: 2, scope: !5824)
!5826 = !DILocation(line: 113, column: 7, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5828, file: !406, line: 113, column: 7)
!5828 = distinct !DILexicalBlock(scope: !5823, file: !406, line: 112, column: 36)
!5829 = !DILocation(line: 113, column: 18, scope: !5827)
!5830 = !DILocation(line: 113, column: 23, scope: !5827)
!5831 = !DILocation(line: 113, column: 7, scope: !5828)
!5832 = !DILocation(line: 118, column: 23, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5828, file: !406, line: 118, column: 7)
!5834 = !DILocation(line: 119, column: 7, scope: !5833)
!5835 = !DILocation(line: 118, column: 7, scope: !5828)
!5836 = !DILocation(line: 124, column: 36, scope: !5828)
!5837 = !DILocation(line: 124, column: 15, scope: !5828)
!5838 = !DILocation(line: 126, column: 17, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5828, file: !406, line: 126, column: 7)
!5840 = !DILocation(line: 126, column: 7, scope: !5828)
!5841 = !DILocation(line: 131, column: 12, scope: !5828)
!5842 = !DILocation(line: 132, column: 2, scope: !5828)
!5843 = !DILocation(line: 112, column: 32, scope: !5823)
!5844 = distinct !{!5844, !5825, !5845}
!5845 = !DILocation(line: 132, column: 2, scope: !5824)
!5846 = !DILocation(line: 135, column: 1, scope: !5810)
!5847 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !5795, file: !5795, line: 63, type: !5848, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !373, retainedNodes: !5850)
!5848 = !DISubroutineType(types: !5849)
!5849 = !{!104, !5774}
!5850 = !{!5851, !5852}
!5851 = !DILocalVariable(name: "part", arg: 1, scope: !5847, file: !5795, line: 63, type: !5774)
!5852 = !DILocalVariable(name: "partition_is_valid", scope: !5847, file: !5795, line: 70, type: !104)
!5853 = !DILocation(line: 0, scope: !5847)
!5854 = !DILocation(line: 71, column: 11, scope: !5847)
!5855 = !DILocation(line: 71, column: 37, scope: !5847)
!5856 = !{i32 0, i32 33}
!5857 = !DILocation(line: 72, column: 3, scope: !5847)
!5858 = !DILocation(line: 71, column: 30, scope: !5847)
!5859 = !DILocation(line: 75, column: 11, scope: !5847)
!5860 = !DILocation(line: 75, column: 17, scope: !5847)
!5861 = !DILocation(line: 75, column: 38, scope: !5847)
!5862 = !DILocation(line: 77, column: 2, scope: !5847)
!5863 = distinct !DISubprogram(name: "mpu_configure_region", scope: !406, file: !406, line: 79, type: !5864, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !373, retainedNodes: !5866)
!5864 = !DISubroutineType(types: !5865)
!5865 = !{!104, !1627, !5774}
!5866 = !{!5867, !5868, !5869}
!5867 = !DILocalVariable(name: "index", arg: 1, scope: !5863, file: !406, line: 79, type: !1627)
!5868 = !DILocalVariable(name: "new_region", arg: 2, scope: !5863, file: !406, line: 80, type: !5774)
!5869 = !DILocalVariable(name: "region_conf", scope: !5863, file: !406, line: 82, type: !395)
!5870 = !DILocation(line: 0, scope: !5863)
!5871 = !DILocation(line: 82, column: 2, scope: !5863)
!5872 = !DILocation(line: 82, column: 24, scope: !5863)
!5873 = !DILocation(line: 87, column: 33, scope: !5863)
!5874 = !DILocation(line: 87, column: 14, scope: !5863)
!5875 = !DILocation(line: 87, column: 19, scope: !5863)
!5876 = !DILocation(line: 91, column: 55, scope: !5863)
!5877 = !DILocation(line: 92, column: 16, scope: !5863)
!5878 = !DILocation(line: 92, column: 53, scope: !5863)
!5879 = !DILocation(line: 91, column: 2, scope: !5863)
!5880 = !DILocation(line: 95, column: 9, scope: !5863)
!5881 = !DILocation(line: 97, column: 1, scope: !5863)
!5882 = !DILocation(line: 95, column: 2, scope: !5863)
!5883 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !5795, file: !5795, line: 113, type: !5884, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !373, retainedNodes: !5889)
!5884 = !DISubroutineType(types: !5885)
!5885 = !{null, !5886, !5887, !155, !155}
!5886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 32)
!5887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5888, size: 32)
!5888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5781)
!5889 = !{!5890, !5891, !5892, !5893}
!5890 = !DILocalVariable(name: "p_attr", arg: 1, scope: !5883, file: !5795, line: 114, type: !5886)
!5891 = !DILocalVariable(name: "attr", arg: 2, scope: !5883, file: !5795, line: 115, type: !5887)
!5892 = !DILocalVariable(name: "base", arg: 3, scope: !5883, file: !5795, line: 115, type: !155)
!5893 = !DILocalVariable(name: "size", arg: 4, scope: !5883, file: !5795, line: 115, type: !155)
!5894 = !DILocation(line: 0, scope: !5883)
!5895 = !DILocation(line: 127, column: 23, scope: !5883)
!5896 = !DILocation(line: 127, column: 35, scope: !5883)
!5897 = !DILocation(line: 127, column: 33, scope: !5883)
!5898 = !DILocation(line: 127, column: 10, scope: !5883)
!5899 = !DILocation(line: 127, column: 15, scope: !5883)
!5900 = !DILocation(line: 129, column: 1, scope: !5883)
!5901 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !406, file: !406, line: 57, type: !5902, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !373, retainedNodes: !5904)
!5902 = !DISubroutineType(types: !5903)
!5903 = !{!104, !1627, !393}
!5904 = !{!5905, !5906}
!5905 = !DILocalVariable(name: "index", arg: 1, scope: !5901, file: !406, line: 57, type: !1627)
!5906 = !DILocalVariable(name: "region_conf", arg: 2, scope: !5901, file: !406, line: 58, type: !393)
!5907 = !DILocation(line: 0, scope: !5901)
!5908 = !DILocation(line: 61, column: 6, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5901, file: !406, line: 61, column: 6)
!5910 = !DILocation(line: 61, column: 12, scope: !5909)
!5911 = !DILocation(line: 61, column: 6, scope: !5901)
!5912 = !DILocation(line: 71, column: 2, scope: !5901)
!5913 = !DILocation(line: 73, column: 2, scope: !5901)
!5914 = !DILocation(line: 74, column: 1, scope: !5901)
!5915 = distinct !DISubprogram(name: "region_init", scope: !5795, file: !5795, line: 29, type: !5916, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !373, retainedNodes: !5918)
!5916 = !DISubroutineType(types: !5917)
!5917 = !{null, !5199, !393}
!5918 = !{!5919, !5920}
!5919 = !DILocalVariable(name: "index", arg: 1, scope: !5915, file: !5795, line: 29, type: !5199)
!5920 = !DILocalVariable(name: "region_conf", arg: 2, scope: !5915, file: !5795, line: 30, type: !393)
!5921 = !DILocation(line: 0, scope: !5915)
!5922 = !DILocation(line: 33, column: 2, scope: !5915)
!5923 = !DILocation(line: 47, column: 28, scope: !5915)
!5924 = !DILocation(line: 47, column: 33, scope: !5915)
!5925 = !DILocation(line: 48, column: 26, scope: !5915)
!5926 = !DILocation(line: 47, column: 12, scope: !5915)
!5927 = !DILocation(line: 49, column: 32, scope: !5915)
!5928 = !DILocation(line: 49, column: 37, scope: !5915)
!5929 = !DILocation(line: 49, column: 12, scope: !5915)
!5930 = !DILocation(line: 53, column: 1, scope: !5915)
!5931 = distinct !DISubprogram(name: "set_region_number", scope: !5932, file: !5932, line: 32, type: !5022, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !373, retainedNodes: !5933)
!5932 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5933 = !{!5934}
!5934 = !DILocalVariable(name: "index", arg: 1, scope: !5931, file: !5932, line: 32, type: !155)
!5935 = !DILocation(line: 0, scope: !5931)
!5936 = !DILocation(line: 34, column: 11, scope: !5931)
!5937 = !DILocation(line: 35, column: 1, scope: !5931)
!5938 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !5795, file: !5795, line: 88, type: !5939, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !373, retainedNodes: !5941)
!5939 = !DISubroutineType(types: !5940)
!5940 = !{!155, !155}
!5941 = !{!5942}
!5942 = !DILocalVariable(name: "size", arg: 1, scope: !5938, file: !5795, line: 88, type: !155)
!5943 = !DILocation(line: 0, scope: !5938)
!5944 = !DILocation(line: 91, column: 11, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5938, file: !5795, line: 91, column: 6)
!5946 = !DILocation(line: 91, column: 6, scope: !5938)
!5947 = !DILocation(line: 100, column: 11, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5938, file: !5795, line: 100, column: 6)
!5949 = !DILocation(line: 100, column: 6, scope: !5938)
!5950 = !DILocation(line: 104, column: 35, scope: !5938)
!5951 = !DILocation(line: 104, column: 16, scope: !5938)
!5952 = !DILocation(line: 104, column: 50, scope: !5938)
!5953 = !DILocation(line: 104, column: 72, scope: !5938)
!5954 = !DILocation(line: 104, column: 2, scope: !5938)
!5955 = !DILocation(line: 106, column: 1, scope: !5938)
!5956 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !406, file: !406, line: 307, type: !5957, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !373, retainedNodes: !5959)
!5957 = !DISubroutineType(types: !5958)
!5958 = !{null, !5774, !123}
!5959 = !{!5960, !5961}
!5960 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !5956, file: !406, line: 308, type: !5774)
!5961 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5956, file: !406, line: 308, type: !123)
!5962 = !DILocation(line: 0, scope: !5956)
!5963 = !DILocation(line: 310, column: 6, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5956, file: !406, line: 310, column: 6)
!5965 = !DILocation(line: 316, column: 1, scope: !5956)
!5966 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !5795, file: !5795, line: 249, type: !5967, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !373, retainedNodes: !5969)
!5967 = !DISubroutineType(types: !5968)
!5968 = !{!104, !5774, !123}
!5969 = !{!5970, !5971, !5972, !5973}
!5970 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !5966, file: !5795, line: 250, type: !5774)
!5971 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5966, file: !5795, line: 250, type: !123)
!5972 = !DILocalVariable(name: "mpu_reg_index", scope: !5966, file: !5795, line: 252, type: !104)
!5973 = !DILocalVariable(name: "i", scope: !5974, file: !5795, line: 264, type: !104)
!5974 = distinct !DILexicalBlock(scope: !5975, file: !5795, line: 264, column: 3)
!5975 = distinct !DILexicalBlock(scope: !5976, file: !5795, line: 261, column: 32)
!5976 = distinct !DILexicalBlock(scope: !5966, file: !5795, line: 261, column: 6)
!5977 = !DILocation(line: 0, scope: !5966)
!5978 = !DILocation(line: 252, column: 22, scope: !5966)
!5979 = !DILocation(line: 258, column: 18, scope: !5966)
!5980 = !DILocation(line: 261, column: 20, scope: !5976)
!5981 = !DILocation(line: 261, column: 6, scope: !5966)
!5982 = !DILocation(line: 0, scope: !5974)
!5983 = !DILocation(line: 265, column: 4, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5985, file: !5795, line: 264, column: 59)
!5985 = distinct !DILexicalBlock(scope: !5974, file: !5795, line: 264, column: 3)
!5986 = !DILocation(line: 264, column: 55, scope: !5985)
!5987 = !DILocation(line: 264, column: 33, scope: !5985)
!5988 = !DILocation(line: 264, column: 3, scope: !5974)
!5989 = distinct !{!5989, !5988, !5990}
!5990 = !DILocation(line: 266, column: 3, scope: !5974)
!5991 = !DILocation(line: 269, column: 2, scope: !5966)
!5992 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !5993, file: !5993, line: 218, type: !5022, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !373, retainedNodes: !5994)
!5993 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5994 = !{!5995}
!5995 = !DILocalVariable(name: "rnr", arg: 1, scope: !5992, file: !5993, line: 218, type: !155)
!5996 = !DILocation(line: 0, scope: !5992)
!5997 = !DILocation(line: 220, column: 12, scope: !5992)
!5998 = !DILocation(line: 221, column: 13, scope: !5992)
!5999 = !DILocation(line: 222, column: 1, scope: !5992)
!6000 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !406, file: !406, line: 326, type: !6001, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !373, retainedNodes: !6003)
!6001 = !DISubroutineType(types: !6002)
!6002 = !{!104}
!6003 = !{!6004}
!6004 = !DILocalVariable(name: "r_index", scope: !6000, file: !406, line: 328, type: !155)
!6005 = !DILocation(line: 330, column: 17, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !6000, file: !406, line: 330, column: 6)
!6007 = !DILocation(line: 330, column: 29, scope: !6006)
!6008 = !DILocation(line: 330, column: 6, scope: !6000)
!6009 = !DILocation(line: 347, column: 2, scope: !6000)
!6010 = !DILocation(line: 0, scope: !6000)
!6011 = !DILocation(line: 364, column: 29, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6013, file: !406, line: 364, column: 2)
!6013 = distinct !DILexicalBlock(scope: !6000, file: !406, line: 364, column: 2)
!6014 = !DILocation(line: 364, column: 2, scope: !6013)
!6015 = !DILocation(line: 365, column: 25, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !6012, file: !406, line: 364, column: 66)
!6017 = !DILocation(line: 365, column: 3, scope: !6016)
!6018 = !DILocation(line: 364, column: 62, scope: !6012)
!6019 = distinct !{!6019, !6014, !6020}
!6020 = !DILocation(line: 366, column: 2, scope: !6013)
!6021 = !DILocation(line: 369, column: 23, scope: !6000)
!6022 = !DILocation(line: 369, column: 21, scope: !6000)
!6023 = !DILocation(line: 372, column: 2, scope: !6000)
!6024 = !DILocation(line: 443, column: 2, scope: !6000)
!6025 = !DILocation(line: 444, column: 1, scope: !6000)
!6026 = distinct !DISubprogram(name: "strcpy", scope: !6027, file: !6027, line: 20, type: !6028, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6032)
!6027 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6028 = !DISubroutineType(types: !6029)
!6029 = !{!981, !6030, !6031}
!6030 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !981)
!6031 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !113)
!6032 = !{!6033, !6034, !6035}
!6033 = !DILocalVariable(name: "d", arg: 1, scope: !6026, file: !6027, line: 20, type: !6030)
!6034 = !DILocalVariable(name: "s", arg: 2, scope: !6026, file: !6027, line: 20, type: !6031)
!6035 = !DILocalVariable(name: "dest", scope: !6026, file: !6027, line: 22, type: !981)
!6036 = !DILocation(line: 0, scope: !6026)
!6037 = !DILocation(line: 24, column: 9, scope: !6026)
!6038 = !DILocation(line: 24, column: 12, scope: !6026)
!6039 = !DILocation(line: 24, column: 2, scope: !6026)
!6040 = !DILocation(line: 25, column: 6, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6026, file: !6027, line: 24, column: 21)
!6042 = !DILocation(line: 26, column: 4, scope: !6041)
!6043 = !DILocation(line: 27, column: 4, scope: !6041)
!6044 = distinct !{!6044, !6039, !6045}
!6045 = !DILocation(line: 28, column: 2, scope: !6026)
!6046 = !DILocation(line: 30, column: 5, scope: !6026)
!6047 = !DILocation(line: 32, column: 2, scope: !6026)
!6048 = distinct !DISubprogram(name: "strncpy", scope: !6027, file: !6027, line: 42, type: !6049, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6051)
!6049 = !DISubroutineType(types: !6050)
!6050 = !{!981, !6030, !6031, !222}
!6051 = !{!6052, !6053, !6054, !6055}
!6052 = !DILocalVariable(name: "d", arg: 1, scope: !6048, file: !6027, line: 42, type: !6030)
!6053 = !DILocalVariable(name: "s", arg: 2, scope: !6048, file: !6027, line: 42, type: !6031)
!6054 = !DILocalVariable(name: "n", arg: 3, scope: !6048, file: !6027, line: 42, type: !222)
!6055 = !DILocalVariable(name: "dest", scope: !6048, file: !6027, line: 44, type: !981)
!6056 = !DILocation(line: 0, scope: !6048)
!6057 = !DILocation(line: 46, column: 12, scope: !6048)
!6058 = !DILocation(line: 46, column: 17, scope: !6048)
!6059 = !DILocation(line: 46, column: 20, scope: !6048)
!6060 = !DILocation(line: 46, column: 23, scope: !6048)
!6061 = !DILocation(line: 46, column: 2, scope: !6048)
!6062 = !DILocation(line: 47, column: 6, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6048, file: !6027, line: 46, column: 32)
!6064 = !DILocation(line: 48, column: 4, scope: !6063)
!6065 = !DILocation(line: 49, column: 4, scope: !6063)
!6066 = !DILocation(line: 50, column: 4, scope: !6063)
!6067 = distinct !{!6067, !6061, !6068}
!6068 = !DILocation(line: 51, column: 2, scope: !6048)
!6069 = !DILocation(line: 54, column: 6, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6048, file: !6027, line: 53, column: 16)
!6071 = !DILocation(line: 55, column: 4, scope: !6070)
!6072 = !DILocation(line: 56, column: 4, scope: !6070)
!6073 = !DILocation(line: 53, column: 11, scope: !6048)
!6074 = !DILocation(line: 53, column: 2, scope: !6048)
!6075 = distinct !{!6075, !6074, !6076}
!6076 = !DILocation(line: 57, column: 2, scope: !6048)
!6077 = !DILocation(line: 59, column: 2, scope: !6048)
!6078 = distinct !DISubprogram(name: "strchr", scope: !6027, file: !6027, line: 69, type: !6079, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6081)
!6079 = !DISubroutineType(types: !6080)
!6080 = !{!981, !113, !104}
!6081 = !{!6082, !6083, !6084}
!6082 = !DILocalVariable(name: "s", arg: 1, scope: !6078, file: !6027, line: 69, type: !113)
!6083 = !DILocalVariable(name: "c", arg: 2, scope: !6078, file: !6027, line: 69, type: !104)
!6084 = !DILocalVariable(name: "tmp", scope: !6078, file: !6027, line: 71, type: !115)
!6085 = !DILocation(line: 0, scope: !6078)
!6086 = !DILocation(line: 73, column: 2, scope: !6078)
!6087 = !DILocation(line: 73, column: 10, scope: !6078)
!6088 = !DILocation(line: 73, column: 13, scope: !6078)
!6089 = !DILocation(line: 73, column: 21, scope: !6078)
!6090 = !DILocation(line: 74, column: 4, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6078, file: !6027, line: 73, column: 38)
!6092 = distinct !{!6092, !6086, !6093}
!6093 = !DILocation(line: 75, column: 2, scope: !6078)
!6094 = !DILocation(line: 77, column: 9, scope: !6078)
!6095 = !DILocation(line: 77, column: 2, scope: !6078)
!6096 = distinct !DISubprogram(name: "strrchr", scope: !6027, file: !6027, line: 87, type: !6079, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6097)
!6097 = !{!6098, !6099, !6100}
!6098 = !DILocalVariable(name: "s", arg: 1, scope: !6096, file: !6027, line: 87, type: !113)
!6099 = !DILocalVariable(name: "c", arg: 2, scope: !6096, file: !6027, line: 87, type: !104)
!6100 = !DILocalVariable(name: "match", scope: !6096, file: !6027, line: 89, type: !981)
!6101 = !DILocation(line: 0, scope: !6096)
!6102 = !DILocation(line: 91, column: 2, scope: !6096)
!6103 = !DILocation(line: 92, column: 7, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6105, file: !6027, line: 92, column: 7)
!6105 = distinct !DILexicalBlock(scope: !6096, file: !6027, line: 91, column: 5)
!6106 = !DILocation(line: 92, column: 10, scope: !6104)
!6107 = !DILocation(line: 92, column: 7, scope: !6105)
!6108 = !DILocation(line: 95, column: 13, scope: !6096)
!6109 = !DILocation(line: 95, column: 2, scope: !6105)
!6110 = distinct !{!6110, !6102, !6111}
!6111 = !DILocation(line: 95, column: 15, scope: !6096)
!6112 = !DILocation(line: 97, column: 2, scope: !6096)
!6113 = distinct !DISubprogram(name: "strlen", scope: !6027, file: !6027, line: 107, type: !6114, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6116)
!6114 = !DISubroutineType(types: !6115)
!6115 = !{!222, !113}
!6116 = !{!6117, !6118}
!6117 = !DILocalVariable(name: "s", arg: 1, scope: !6113, file: !6027, line: 107, type: !113)
!6118 = !DILocalVariable(name: "n", scope: !6113, file: !6027, line: 109, type: !222)
!6119 = !DILocation(line: 0, scope: !6113)
!6120 = !DILocation(line: 111, column: 9, scope: !6113)
!6121 = !DILocation(line: 111, column: 12, scope: !6113)
!6122 = !DILocation(line: 111, column: 2, scope: !6113)
!6123 = !DILocation(line: 112, column: 4, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6113, file: !6027, line: 111, column: 21)
!6125 = !DILocation(line: 113, column: 4, scope: !6124)
!6126 = distinct !{!6126, !6122, !6127}
!6127 = !DILocation(line: 114, column: 2, scope: !6113)
!6128 = !DILocation(line: 116, column: 2, scope: !6113)
!6129 = distinct !DISubprogram(name: "strnlen", scope: !6027, file: !6027, line: 126, type: !6130, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6132)
!6130 = !DISubroutineType(types: !6131)
!6131 = !{!222, !113, !222}
!6132 = !{!6133, !6134, !6135}
!6133 = !DILocalVariable(name: "s", arg: 1, scope: !6129, file: !6027, line: 126, type: !113)
!6134 = !DILocalVariable(name: "maxlen", arg: 2, scope: !6129, file: !6027, line: 126, type: !222)
!6135 = !DILocalVariable(name: "n", scope: !6129, file: !6027, line: 128, type: !222)
!6136 = !DILocation(line: 0, scope: !6129)
!6137 = !DILocation(line: 130, column: 9, scope: !6129)
!6138 = !DILocation(line: 130, column: 12, scope: !6129)
!6139 = !DILocation(line: 130, column: 20, scope: !6129)
!6140 = !DILocation(line: 130, column: 2, scope: !6129)
!6141 = !DILocation(line: 131, column: 4, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6129, file: !6027, line: 130, column: 35)
!6143 = !DILocation(line: 132, column: 4, scope: !6142)
!6144 = distinct !{!6144, !6140, !6145}
!6145 = !DILocation(line: 133, column: 2, scope: !6129)
!6146 = !DILocation(line: 135, column: 2, scope: !6129)
!6147 = distinct !DISubprogram(name: "strcmp", scope: !6027, file: !6027, line: 145, type: !6148, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6150)
!6148 = !DISubroutineType(types: !6149)
!6149 = !{!104, !113, !113}
!6150 = !{!6151, !6152}
!6151 = !DILocalVariable(name: "s1", arg: 1, scope: !6147, file: !6027, line: 145, type: !113)
!6152 = !DILocalVariable(name: "s2", arg: 2, scope: !6147, file: !6027, line: 145, type: !113)
!6153 = !DILocation(line: 0, scope: !6147)
!6154 = !DILocation(line: 147, column: 10, scope: !6147)
!6155 = !DILocation(line: 147, column: 17, scope: !6147)
!6156 = !DILocation(line: 147, column: 14, scope: !6147)
!6157 = !DILocation(line: 147, column: 22, scope: !6147)
!6158 = !DILocation(line: 148, column: 5, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6147, file: !6027, line: 147, column: 40)
!6160 = !DILocation(line: 149, column: 5, scope: !6159)
!6161 = distinct !{!6161, !6162, !6163}
!6162 = !DILocation(line: 147, column: 2, scope: !6147)
!6163 = !DILocation(line: 150, column: 2, scope: !6147)
!6164 = !DILocation(line: 152, column: 9, scope: !6147)
!6165 = !DILocation(line: 152, column: 15, scope: !6147)
!6166 = !DILocation(line: 152, column: 13, scope: !6147)
!6167 = !DILocation(line: 152, column: 2, scope: !6147)
!6168 = distinct !DISubprogram(name: "strncmp", scope: !6027, file: !6027, line: 162, type: !6169, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6171)
!6169 = !DISubroutineType(types: !6170)
!6170 = !{!104, !113, !113, !222}
!6171 = !{!6172, !6173, !6174}
!6172 = !DILocalVariable(name: "s1", arg: 1, scope: !6168, file: !6027, line: 162, type: !113)
!6173 = !DILocalVariable(name: "s2", arg: 2, scope: !6168, file: !6027, line: 162, type: !113)
!6174 = !DILocalVariable(name: "n", arg: 3, scope: !6168, file: !6027, line: 162, type: !222)
!6175 = !DILocation(line: 0, scope: !6168)
!6176 = !DILocation(line: 164, column: 17, scope: !6168)
!6177 = !DILocation(line: 164, column: 21, scope: !6168)
!6178 = !DILocation(line: 164, column: 28, scope: !6168)
!6179 = !DILocation(line: 164, column: 25, scope: !6168)
!6180 = !DILocation(line: 164, column: 33, scope: !6168)
!6181 = !DILocation(line: 165, column: 5, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6168, file: !6027, line: 164, column: 51)
!6183 = !DILocation(line: 166, column: 5, scope: !6182)
!6184 = !DILocation(line: 167, column: 4, scope: !6182)
!6185 = distinct !{!6185, !6186, !6187}
!6186 = !DILocation(line: 164, column: 2, scope: !6168)
!6187 = !DILocation(line: 168, column: 2, scope: !6168)
!6188 = !DILocation(line: 170, column: 25, scope: !6168)
!6189 = !DILocation(line: 170, column: 31, scope: !6168)
!6190 = !DILocation(line: 170, column: 29, scope: !6168)
!6191 = !DILocation(line: 170, column: 9, scope: !6168)
!6192 = !DILocation(line: 170, column: 2, scope: !6168)
!6193 = distinct !DISubprogram(name: "strtok_r", scope: !6027, file: !6027, line: 180, type: !6194, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6197)
!6194 = !DISubroutineType(types: !6195)
!6195 = !{!981, !981, !113, !6196}
!6196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!6197 = !{!6198, !6199, !6200, !6201, !6202}
!6198 = !DILocalVariable(name: "str", arg: 1, scope: !6193, file: !6027, line: 180, type: !981)
!6199 = !DILocalVariable(name: "sep", arg: 2, scope: !6193, file: !6027, line: 180, type: !113)
!6200 = !DILocalVariable(name: "state", arg: 3, scope: !6193, file: !6027, line: 180, type: !6196)
!6201 = !DILocalVariable(name: "start", scope: !6193, file: !6027, line: 182, type: !981)
!6202 = !DILocalVariable(name: "end", scope: !6193, file: !6027, line: 182, type: !981)
!6203 = !DILocation(line: 0, scope: !6193)
!6204 = !DILocation(line: 184, column: 10, scope: !6193)
!6205 = !DILocation(line: 184, column: 22, scope: !6193)
!6206 = !DILocation(line: 187, column: 9, scope: !6193)
!6207 = !DILocation(line: 187, column: 16, scope: !6193)
!6208 = !DILocation(line: 187, column: 19, scope: !6193)
!6209 = !DILocation(line: 187, column: 2, scope: !6193)
!6210 = !DILocation(line: 188, column: 8, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6193, file: !6027, line: 187, column: 40)
!6212 = distinct !{!6212, !6209, !6213}
!6213 = !DILocation(line: 189, column: 2, scope: !6193)
!6214 = !DILocation(line: 198, column: 9, scope: !6193)
!6215 = !DILocation(line: 198, column: 18, scope: !6193)
!6216 = !DILocation(line: 198, column: 17, scope: !6193)
!6217 = !DILocation(line: 198, column: 2, scope: !6193)
!6218 = !DILocation(line: 199, column: 6, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6193, file: !6027, line: 198, column: 37)
!6220 = !DILocation(line: 198, column: 14, scope: !6193)
!6221 = distinct !{!6221, !6217, !6222}
!6222 = !DILocation(line: 200, column: 2, scope: !6193)
!6223 = !DILocation(line: 203, column: 8, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6225, file: !6027, line: 202, column: 20)
!6225 = distinct !DILexicalBlock(scope: !6193, file: !6027, line: 202, column: 6)
!6226 = !DILocation(line: 204, column: 16, scope: !6224)
!6227 = !DILocation(line: 205, column: 2, scope: !6224)
!6228 = !DILocation(line: 210, column: 1, scope: !6193)
!6229 = distinct !DISubprogram(name: "strcat", scope: !6027, file: !6027, line: 212, type: !6028, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6230)
!6230 = !{!6231, !6232}
!6231 = !DILocalVariable(name: "dest", arg: 1, scope: !6229, file: !6027, line: 212, type: !6030)
!6232 = !DILocalVariable(name: "src", arg: 2, scope: !6229, file: !6027, line: 212, type: !6031)
!6233 = !DILocation(line: 0, scope: !6229)
!6234 = !DILocation(line: 214, column: 16, scope: !6229)
!6235 = !DILocation(line: 214, column: 14, scope: !6229)
!6236 = !DILocation(line: 214, column: 2, scope: !6229)
!6237 = !DILocation(line: 215, column: 2, scope: !6229)
!6238 = distinct !DISubprogram(name: "strncat", scope: !6027, file: !6027, line: 218, type: !6049, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6239)
!6239 = !{!6240, !6241, !6242, !6243, !6244}
!6240 = !DILocalVariable(name: "dest", arg: 1, scope: !6238, file: !6027, line: 218, type: !6030)
!6241 = !DILocalVariable(name: "src", arg: 2, scope: !6238, file: !6027, line: 218, type: !6031)
!6242 = !DILocalVariable(name: "n", arg: 3, scope: !6238, file: !6027, line: 219, type: !222)
!6243 = !DILocalVariable(name: "orig_dest", scope: !6238, file: !6027, line: 221, type: !981)
!6244 = !DILocalVariable(name: "len", scope: !6238, file: !6027, line: 222, type: !222)
!6245 = !DILocation(line: 0, scope: !6238)
!6246 = !DILocation(line: 222, column: 15, scope: !6238)
!6247 = !DILocation(line: 224, column: 7, scope: !6238)
!6248 = !DILocation(line: 225, column: 14, scope: !6238)
!6249 = !DILocation(line: 225, column: 19, scope: !6238)
!6250 = !DILocation(line: 225, column: 11, scope: !6238)
!6251 = !DILocation(line: 225, column: 23, scope: !6238)
!6252 = !DILocation(line: 225, column: 28, scope: !6238)
!6253 = !DILocation(line: 225, column: 2, scope: !6238)
!6254 = !DILocation(line: 226, column: 17, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6238, file: !6027, line: 225, column: 38)
!6256 = !DILocation(line: 226, column: 8, scope: !6255)
!6257 = !DILocation(line: 226, column: 11, scope: !6255)
!6258 = distinct !{!6258, !6253, !6259}
!6259 = !DILocation(line: 227, column: 2, scope: !6238)
!6260 = !DILocation(line: 228, column: 8, scope: !6238)
!6261 = !DILocation(line: 230, column: 2, scope: !6238)
!6262 = distinct !DISubprogram(name: "memcmp", scope: !6027, file: !6027, line: 239, type: !6263, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6265)
!6263 = !DISubroutineType(types: !6264)
!6264 = !{!104, !13, !13, !222}
!6265 = !{!6266, !6267, !6268, !6269, !6270}
!6266 = !DILocalVariable(name: "m1", arg: 1, scope: !6262, file: !6027, line: 239, type: !13)
!6267 = !DILocalVariable(name: "m2", arg: 2, scope: !6262, file: !6027, line: 239, type: !13)
!6268 = !DILocalVariable(name: "n", arg: 3, scope: !6262, file: !6027, line: 239, type: !222)
!6269 = !DILocalVariable(name: "c1", scope: !6262, file: !6027, line: 241, type: !113)
!6270 = !DILocalVariable(name: "c2", scope: !6262, file: !6027, line: 242, type: !113)
!6271 = !DILocation(line: 0, scope: !6262)
!6272 = !DILocation(line: 244, column: 7, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6262, file: !6027, line: 244, column: 6)
!6274 = !DILocation(line: 244, column: 6, scope: !6262)
!6275 = !DILocation(line: 248, column: 10, scope: !6262)
!6276 = !DILocation(line: 248, column: 14, scope: !6262)
!6277 = !DILocation(line: 248, column: 19, scope: !6262)
!6278 = !DILocation(line: 248, column: 2, scope: !6262)
!6279 = !DILocation(line: 248, column: 23, scope: !6262)
!6280 = !DILocation(line: 248, column: 30, scope: !6262)
!6281 = !DILocation(line: 248, column: 27, scope: !6262)
!6282 = !DILocation(line: 249, column: 5, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6262, file: !6027, line: 248, column: 36)
!6284 = !DILocation(line: 250, column: 5, scope: !6283)
!6285 = distinct !{!6285, !6278, !6286}
!6286 = !DILocation(line: 251, column: 2, scope: !6262)
!6287 = !DILocation(line: 253, column: 9, scope: !6262)
!6288 = !DILocation(line: 253, column: 15, scope: !6262)
!6289 = !DILocation(line: 253, column: 13, scope: !6262)
!6290 = !DILocation(line: 253, column: 2, scope: !6262)
!6291 = !DILocation(line: 254, column: 1, scope: !6262)
!6292 = distinct !DISubprogram(name: "memmove", scope: !6027, file: !6027, line: 263, type: !6293, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6295)
!6293 = !DISubroutineType(types: !6294)
!6294 = !{!103, !103, !13, !222}
!6295 = !{!6296, !6297, !6298, !6299, !6300}
!6296 = !DILocalVariable(name: "d", arg: 1, scope: !6292, file: !6027, line: 263, type: !103)
!6297 = !DILocalVariable(name: "s", arg: 2, scope: !6292, file: !6027, line: 263, type: !13)
!6298 = !DILocalVariable(name: "n", arg: 3, scope: !6292, file: !6027, line: 263, type: !222)
!6299 = !DILocalVariable(name: "dest", scope: !6292, file: !6027, line: 265, type: !981)
!6300 = !DILocalVariable(name: "src", scope: !6292, file: !6027, line: 266, type: !113)
!6301 = !DILocation(line: 0, scope: !6292)
!6302 = !DILocation(line: 268, column: 21, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6292, file: !6027, line: 268, column: 6)
!6304 = !DILocation(line: 268, column: 28, scope: !6303)
!6305 = !DILocation(line: 268, column: 6, scope: !6292)
!6306 = !DILocation(line: 280, column: 12, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6303, file: !6027, line: 278, column: 9)
!6308 = !DILocation(line: 280, column: 3, scope: !6307)
!6309 = !DILocation(line: 275, column: 5, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6311, file: !6027, line: 274, column: 17)
!6311 = distinct !DILexicalBlock(scope: !6303, file: !6027, line: 268, column: 33)
!6312 = !DILocation(line: 276, column: 14, scope: !6310)
!6313 = !DILocation(line: 276, column: 4, scope: !6310)
!6314 = !DILocation(line: 276, column: 12, scope: !6310)
!6315 = !DILocation(line: 274, column: 12, scope: !6311)
!6316 = !DILocation(line: 274, column: 3, scope: !6311)
!6317 = distinct !{!6317, !6316, !6318}
!6318 = !DILocation(line: 277, column: 3, scope: !6311)
!6319 = !DILocation(line: 281, column: 12, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6307, file: !6027, line: 280, column: 17)
!6321 = !DILocation(line: 281, column: 10, scope: !6320)
!6322 = !DILocation(line: 282, column: 8, scope: !6320)
!6323 = !DILocation(line: 283, column: 7, scope: !6320)
!6324 = !DILocation(line: 284, column: 5, scope: !6320)
!6325 = distinct !{!6325, !6308, !6326}
!6326 = !DILocation(line: 285, column: 3, scope: !6307)
!6327 = !DILocation(line: 288, column: 2, scope: !6292)
!6328 = distinct !DISubprogram(name: "memcpy", scope: !6027, file: !6027, line: 298, type: !6329, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6333)
!6329 = !DISubroutineType(types: !6330)
!6330 = !{!103, !6331, !6332, !222}
!6331 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !103)
!6332 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!6333 = !{!6334, !6335, !6336, !6337, !6338}
!6334 = !DILocalVariable(name: "d", arg: 1, scope: !6328, file: !6027, line: 298, type: !6331)
!6335 = !DILocalVariable(name: "s", arg: 2, scope: !6328, file: !6027, line: 298, type: !6332)
!6336 = !DILocalVariable(name: "n", arg: 3, scope: !6328, file: !6027, line: 298, type: !222)
!6337 = !DILocalVariable(name: "d_byte", scope: !6328, file: !6027, line: 302, type: !816)
!6338 = !DILocalVariable(name: "s_byte", scope: !6328, file: !6027, line: 303, type: !2566)
!6339 = !DILocation(line: 0, scope: !6328)
!6340 = !DILocation(line: 337, column: 11, scope: !6328)
!6341 = !DILocation(line: 337, column: 2, scope: !6328)
!6342 = !DILocation(line: 338, column: 25, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6328, file: !6027, line: 337, column: 16)
!6344 = !DILocation(line: 338, column: 17, scope: !6343)
!6345 = !DILocation(line: 338, column: 11, scope: !6343)
!6346 = !DILocation(line: 338, column: 15, scope: !6343)
!6347 = !DILocation(line: 339, column: 4, scope: !6343)
!6348 = distinct !{!6348, !6341, !6349}
!6349 = !DILocation(line: 340, column: 2, scope: !6328)
!6350 = !DILocation(line: 342, column: 2, scope: !6328)
!6351 = distinct !DISubprogram(name: "memset", scope: !6027, file: !6027, line: 352, type: !6352, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6354)
!6352 = !DISubroutineType(types: !6353)
!6353 = !{!103, !103, !104, !222}
!6354 = !{!6355, !6356, !6357, !6358, !6359}
!6355 = !DILocalVariable(name: "buf", arg: 1, scope: !6351, file: !6027, line: 352, type: !103)
!6356 = !DILocalVariable(name: "c", arg: 2, scope: !6351, file: !6027, line: 352, type: !104)
!6357 = !DILocalVariable(name: "n", arg: 3, scope: !6351, file: !6027, line: 352, type: !222)
!6358 = !DILocalVariable(name: "d_byte", scope: !6351, file: !6027, line: 356, type: !816)
!6359 = !DILocalVariable(name: "c_byte", scope: !6351, file: !6027, line: 357, type: !124)
!6360 = !DILocation(line: 0, scope: !6351)
!6361 = !DILocation(line: 357, column: 25, scope: !6351)
!6362 = !DILocation(line: 389, column: 11, scope: !6351)
!6363 = !DILocation(line: 389, column: 2, scope: !6351)
!6364 = !DILocation(line: 390, column: 11, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6351, file: !6027, line: 389, column: 16)
!6366 = !DILocation(line: 390, column: 15, scope: !6365)
!6367 = !DILocation(line: 391, column: 4, scope: !6365)
!6368 = distinct !{!6368, !6363, !6369}
!6369 = !DILocation(line: 392, column: 2, scope: !6351)
!6370 = !DILocation(line: 394, column: 2, scope: !6351)
!6371 = distinct !DISubprogram(name: "memchr", scope: !6027, file: !6027, line: 404, type: !6372, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6374)
!6372 = !DISubroutineType(types: !6373)
!6373 = !{!103, !13, !104, !222}
!6374 = !{!6375, !6376, !6377, !6378}
!6375 = !DILocalVariable(name: "s", arg: 1, scope: !6371, file: !6027, line: 404, type: !13)
!6376 = !DILocalVariable(name: "c", arg: 2, scope: !6371, file: !6027, line: 404, type: !104)
!6377 = !DILocalVariable(name: "n", arg: 3, scope: !6371, file: !6027, line: 404, type: !222)
!6378 = !DILocalVariable(name: "p", scope: !6379, file: !6027, line: 407, type: !2566)
!6379 = distinct !DILexicalBlock(scope: !6380, file: !6027, line: 406, column: 14)
!6380 = distinct !DILexicalBlock(scope: !6371, file: !6027, line: 406, column: 6)
!6381 = !DILocation(line: 0, scope: !6371)
!6382 = !DILocation(line: 406, column: 8, scope: !6380)
!6383 = !DILocation(line: 406, column: 6, scope: !6371)
!6384 = !DILocation(line: 409, column: 3, scope: !6379)
!6385 = !DILocation(line: 0, scope: !6379)
!6386 = !DILocation(line: 410, column: 8, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6388, file: !6027, line: 410, column: 8)
!6388 = distinct !DILexicalBlock(scope: !6379, file: !6027, line: 409, column: 6)
!6389 = !DILocation(line: 410, column: 13, scope: !6387)
!6390 = !DILocation(line: 410, column: 8, scope: !6388)
!6391 = distinct !{!6391, !6384, !6392}
!6392 = !DILocation(line: 414, column: 20, scope: !6379)
!6393 = !DILocation(line: 417, column: 2, scope: !6371)
!6394 = !DILocation(line: 418, column: 1, scope: !6371)
!6395 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !416, file: !416, line: 23, type: !3088, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !6396)
!6396 = !{!6397}
!6397 = !DILocalVariable(name: "hook", arg: 1, scope: !6395, file: !416, line: 23, type: !140)
!6398 = !DILocation(line: 0, scope: !6395)
!6399 = !DILocation(line: 25, column: 15, scope: !6395)
!6400 = !DILocation(line: 26, column: 1, scope: !6395)
!6401 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !416, file: !416, line: 14, type: !141, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !6402)
!6402 = !{!6403}
!6403 = !DILocalVariable(name: "c", arg: 1, scope: !6401, file: !416, line: 14, type: !104)
!6404 = !DILocation(line: 0, scope: !6401)
!6405 = !DILocation(line: 18, column: 2, scope: !6401)
!6406 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !416, file: !416, line: 28, type: !6407, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !6409)
!6407 = !DISubroutineType(types: !6408)
!6408 = !{!104, !104, !412}
!6409 = !{!6410, !6411}
!6410 = !DILocalVariable(name: "c", arg: 1, scope: !6406, file: !416, line: 28, type: !104)
!6411 = !DILocalVariable(name: "stream", arg: 2, scope: !6406, file: !416, line: 28, type: !412)
!6412 = !DILocation(line: 0, scope: !6406)
!6413 = !DILocation(line: 30, column: 27, scope: !6406)
!6414 = !DILocation(line: 30, column: 50, scope: !6406)
!6415 = !DILocation(line: 30, column: 9, scope: !6406)
!6416 = !DILocation(line: 30, column: 2, scope: !6406)
!6417 = distinct !DISubprogram(name: "fputc", scope: !416, file: !416, line: 41, type: !6407, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !6418)
!6418 = !{!6419, !6420}
!6419 = !DILocalVariable(name: "c", arg: 1, scope: !6417, file: !416, line: 41, type: !104)
!6420 = !DILocalVariable(name: "stream", arg: 2, scope: !6417, file: !416, line: 41, type: !412)
!6421 = !DILocation(line: 0, scope: !6417)
!6422 = !DILocation(line: 43, column: 9, scope: !6417)
!6423 = !DILocation(line: 43, column: 2, scope: !6417)
!6424 = distinct !DISubprogram(name: "zephyr_fputc", scope: !6425, file: !6425, line: 72, type: !6407, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !6426)
!6425 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!6426 = !{!6427, !6428}
!6427 = !DILocalVariable(name: "c", arg: 1, scope: !6424, file: !6425, line: 72, type: !104)
!6428 = !DILocalVariable(name: "stream", arg: 2, scope: !6424, file: !6425, line: 72, type: !412)
!6429 = !DILocation(line: 0, scope: !6424)
!6430 = !DILocation(line: 81, column: 2, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6424, file: !6425, line: 81, column: 2)
!6432 = !{i64 2154126763}
!6433 = !DILocation(line: 82, column: 9, scope: !6424)
!6434 = !DILocation(line: 82, column: 2, scope: !6424)
!6435 = distinct !DISubprogram(name: "fputs", scope: !416, file: !416, line: 46, type: !6436, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !6439)
!6436 = !DISubroutineType(types: !6437)
!6437 = !{!104, !6031, !6438}
!6438 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !412)
!6439 = !{!6440, !6441, !6442, !6443}
!6440 = !DILocalVariable(name: "s", arg: 1, scope: !6435, file: !416, line: 46, type: !6031)
!6441 = !DILocalVariable(name: "stream", arg: 2, scope: !6435, file: !416, line: 46, type: !6438)
!6442 = !DILocalVariable(name: "len", scope: !6435, file: !416, line: 48, type: !104)
!6443 = !DILocalVariable(name: "ret", scope: !6435, file: !416, line: 49, type: !104)
!6444 = !DILocation(line: 0, scope: !6435)
!6445 = !DILocation(line: 48, column: 12, scope: !6435)
!6446 = !DILocation(line: 51, column: 8, scope: !6435)
!6447 = !DILocation(line: 53, column: 13, scope: !6435)
!6448 = !DILocation(line: 53, column: 9, scope: !6435)
!6449 = !DILocation(line: 53, column: 2, scope: !6435)
!6450 = distinct !DISubprogram(name: "fwrite", scope: !416, file: !416, line: 99, type: !6451, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !6453)
!6451 = !DISubroutineType(types: !6452)
!6452 = !{!222, !6332, !222, !222, !6438}
!6453 = !{!6454, !6455, !6456, !6457}
!6454 = !DILocalVariable(name: "ptr", arg: 1, scope: !6450, file: !416, line: 99, type: !6332)
!6455 = !DILocalVariable(name: "size", arg: 2, scope: !6450, file: !416, line: 99, type: !222)
!6456 = !DILocalVariable(name: "nitems", arg: 3, scope: !6450, file: !416, line: 99, type: !222)
!6457 = !DILocalVariable(name: "stream", arg: 4, scope: !6450, file: !416, line: 100, type: !6438)
!6458 = !DILocation(line: 0, scope: !6450)
!6459 = !DILocation(line: 102, column: 9, scope: !6450)
!6460 = !DILocation(line: 102, column: 2, scope: !6450)
!6461 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !6425, file: !6425, line: 96, type: !6451, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !6462)
!6462 = !{!6463, !6464, !6465, !6466}
!6463 = !DILocalVariable(name: "ptr", arg: 1, scope: !6461, file: !6425, line: 96, type: !6332)
!6464 = !DILocalVariable(name: "size", arg: 2, scope: !6461, file: !6425, line: 96, type: !222)
!6465 = !DILocalVariable(name: "nitems", arg: 3, scope: !6461, file: !6425, line: 96, type: !222)
!6466 = !DILocalVariable(name: "stream", arg: 4, scope: !6461, file: !6425, line: 96, type: !6438)
!6467 = !DILocation(line: 0, scope: !6461)
!6468 = !DILocation(line: 107, column: 2, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6461, file: !6425, line: 107, column: 2)
!6470 = !{i64 2154126867}
!6471 = !DILocation(line: 108, column: 9, scope: !6461)
!6472 = !DILocation(line: 108, column: 2, scope: !6461)
!6473 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !416, file: !416, line: 56, type: !6451, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !6474)
!6474 = !{!6475, !6476, !6477, !6478, !6479, !6480, !6481, !6482}
!6475 = !DILocalVariable(name: "ptr", arg: 1, scope: !6473, file: !416, line: 56, type: !6332)
!6476 = !DILocalVariable(name: "size", arg: 2, scope: !6473, file: !416, line: 56, type: !222)
!6477 = !DILocalVariable(name: "nitems", arg: 3, scope: !6473, file: !416, line: 57, type: !222)
!6478 = !DILocalVariable(name: "stream", arg: 4, scope: !6473, file: !416, line: 57, type: !6438)
!6479 = !DILocalVariable(name: "i", scope: !6473, file: !416, line: 59, type: !222)
!6480 = !DILocalVariable(name: "j", scope: !6473, file: !416, line: 60, type: !222)
!6481 = !DILocalVariable(name: "p", scope: !6473, file: !416, line: 61, type: !2566)
!6482 = !DILabel(scope: !6473, name: "done", file: !416, line: 82)
!6483 = !DILocation(line: 0, scope: !6473)
!6484 = !DILocation(line: 63, column: 14, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6473, file: !416, line: 63, column: 6)
!6486 = !DILocation(line: 63, column: 24, scope: !6485)
!6487 = !DILocation(line: 72, column: 3, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6473, file: !416, line: 70, column: 5)
!6489 = !DILocation(line: 0, scope: !6488)
!6490 = !DILocation(line: 73, column: 8, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6492, file: !416, line: 73, column: 8)
!6492 = distinct !DILexicalBlock(scope: !6488, file: !416, line: 72, column: 6)
!6493 = !DILocation(line: 73, column: 29, scope: !6491)
!6494 = !DILocation(line: 73, column: 27, scope: !6491)
!6495 = !DILocation(line: 73, column: 21, scope: !6491)
!6496 = !DILocation(line: 73, column: 33, scope: !6491)
!6497 = !DILocation(line: 73, column: 8, scope: !6492)
!6498 = !DILocation(line: 76, column: 5, scope: !6492)
!6499 = !DILocation(line: 77, column: 14, scope: !6488)
!6500 = !DILocation(line: 77, column: 3, scope: !6492)
!6501 = distinct !{!6501, !6487, !6502}
!6502 = !DILocation(line: 77, column: 17, scope: !6488)
!6503 = !DILocation(line: 79, column: 4, scope: !6488)
!6504 = !DILocation(line: 80, column: 13, scope: !6473)
!6505 = !DILocation(line: 80, column: 2, scope: !6488)
!6506 = distinct !{!6506, !6507, !6508}
!6507 = !DILocation(line: 70, column: 2, scope: !6473)
!6508 = !DILocation(line: 80, column: 16, scope: !6473)
!6509 = !DILocation(line: 82, column: 1, scope: !6473)
!6510 = !DILocation(line: 83, column: 17, scope: !6473)
!6511 = !DILocation(line: 83, column: 2, scope: !6473)
!6512 = !DILocation(line: 84, column: 1, scope: !6473)
!6513 = distinct !DISubprogram(name: "puts", scope: !416, file: !416, line: 106, type: !6514, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !409, retainedNodes: !6516)
!6514 = !DISubroutineType(types: !6515)
!6515 = !{!104, !113}
!6516 = !{!6517}
!6517 = !DILocalVariable(name: "s", arg: 1, scope: !6513, file: !416, line: 106, type: !113)
!6518 = !DILocation(line: 0, scope: !6513)
!6519 = !DILocation(line: 108, column: 6, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6513, file: !416, line: 108, column: 6)
!6521 = !DILocation(line: 108, column: 23, scope: !6520)
!6522 = !DILocation(line: 108, column: 6, scope: !6513)
!6523 = !DILocation(line: 112, column: 9, scope: !6513)
!6524 = !DILocation(line: 112, column: 29, scope: !6513)
!6525 = !DILocation(line: 112, column: 2, scope: !6513)
!6526 = !DILocation(line: 113, column: 1, scope: !6513)
!6527 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !528, file: !528, line: 368, type: !581, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6528)
!6528 = !{!6529}
!6529 = !DILocalVariable(name: "dev", arg: 1, scope: !6527, file: !528, line: 368, type: !557)
!6530 = !DILocation(line: 0, scope: !6527)
!6531 = !DILocation(line: 370, column: 2, scope: !6527)
!6532 = !DILocation(line: 371, column: 1, scope: !6527)
!6533 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !528, file: !528, line: 243, type: !6534, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6536)
!6534 = !DISubroutineType(types: !6535)
!6535 = !{null, !104, !104, !557}
!6536 = !{!6537, !6538, !6539, !6540, !6542}
!6537 = !DILocalVariable(name: "min", arg: 1, scope: !6533, file: !528, line: 243, type: !104)
!6538 = !DILocalVariable(name: "max", arg: 2, scope: !6533, file: !528, line: 243, type: !104)
!6539 = !DILocalVariable(name: "dev", arg: 3, scope: !6533, file: !528, line: 243, type: !557)
!6540 = !DILocalVariable(name: "data", scope: !6533, file: !528, line: 245, type: !6541)
!6541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 32)
!6542 = !DILocalVariable(name: "line", scope: !6533, file: !528, line: 246, type: !104)
!6543 = !DILocation(line: 0, scope: !6533)
!6544 = !DILocation(line: 245, column: 38, scope: !6533)
!6545 = !DILocation(line: 249, column: 24, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6547, file: !528, line: 249, column: 2)
!6547 = distinct !DILexicalBlock(scope: !6533, file: !528, line: 249, column: 2)
!6548 = !DILocation(line: 249, column: 2, scope: !6547)
!6549 = !DILocation(line: 251, column: 7, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6551, file: !528, line: 251, column: 7)
!6551 = distinct !DILexicalBlock(scope: !6546, file: !528, line: 249, column: 39)
!6552 = !DILocation(line: 251, column: 7, scope: !6551)
!6553 = !DILocation(line: 253, column: 4, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6550, file: !528, line: 251, column: 36)
!6555 = !DILocation(line: 256, column: 24, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6554, file: !528, line: 256, column: 8)
!6557 = !DILocation(line: 256, column: 9, scope: !6556)
!6558 = !DILocation(line: 256, column: 8, scope: !6554)
!6559 = !DILocation(line: 260, column: 43, scope: !6554)
!6560 = !DILocation(line: 260, column: 4, scope: !6554)
!6561 = !DILocation(line: 261, column: 3, scope: !6554)
!6562 = !DILocation(line: 249, column: 35, scope: !6546)
!6563 = distinct !{!6563, !6548, !6564}
!6564 = !DILocation(line: 262, column: 2, scope: !6547)
!6565 = !DILocation(line: 263, column: 1, scope: !6533)
!6566 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !528, file: !528, line: 158, type: !141, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6567)
!6567 = !{!6568}
!6568 = !DILocalVariable(name: "line", arg: 1, scope: !6566, file: !528, line: 158, type: !104)
!6569 = !DILocation(line: 0, scope: !6566)
!6570 = !DILocation(line: 170, column: 38, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6572, file: !528, line: 160, column: 17)
!6572 = distinct !DILexicalBlock(scope: !6566, file: !528, line: 160, column: 6)
!6573 = !DILocation(line: 170, column: 10, scope: !6571)
!6574 = !DILocation(line: 176, column: 1, scope: !6566)
!6575 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !528, file: !528, line: 183, type: !6576, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6578)
!6576 = !DISubroutineType(types: !6577)
!6577 = !{null, !104}
!6578 = !{!6579}
!6579 = !DILocalVariable(name: "line", arg: 1, scope: !6575, file: !528, line: 183, type: !104)
!6580 = !DILocation(line: 0, scope: !6575)
!6581 = !DILocation(line: 195, column: 28, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6583, file: !528, line: 185, column: 17)
!6583 = distinct !DILexicalBlock(scope: !6575, file: !528, line: 185, column: 6)
!6584 = !DILocation(line: 195, column: 3, scope: !6582)
!6585 = !DILocation(line: 200, column: 1, scope: !6575)
!6586 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !6587, file: !6587, line: 910, type: !5022, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6588)
!6587 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6588 = !{!6589}
!6589 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6586, file: !6587, line: 910, type: !155)
!6590 = !DILocation(line: 0, scope: !6586)
!6591 = !DILocation(line: 912, column: 3, scope: !6586)
!6592 = !DILocation(line: 913, column: 1, scope: !6586)
!6593 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !6587, file: !6587, line: 834, type: !5939, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6594)
!6594 = !{!6595}
!6595 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6593, file: !6587, line: 834, type: !155)
!6596 = !DILocation(line: 0, scope: !6593)
!6597 = !DILocation(line: 836, column: 11, scope: !6593)
!6598 = !DILocation(line: 836, column: 40, scope: !6593)
!6599 = !DILocation(line: 836, column: 3, scope: !6593)
!6600 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !528, file: !528, line: 304, type: !581, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6601)
!6601 = !{!6602}
!6602 = !DILocalVariable(name: "dev", arg: 1, scope: !6600, file: !528, line: 304, type: !557)
!6603 = !DILocation(line: 0, scope: !6600)
!6604 = !DILocation(line: 306, column: 2, scope: !6600)
!6605 = !DILocation(line: 307, column: 1, scope: !6600)
!6606 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !528, file: !528, line: 299, type: !581, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6607)
!6607 = !{!6608}
!6608 = !DILocalVariable(name: "dev", arg: 1, scope: !6606, file: !528, line: 299, type: !557)
!6609 = !DILocation(line: 0, scope: !6606)
!6610 = !DILocation(line: 301, column: 2, scope: !6606)
!6611 = !DILocation(line: 302, column: 1, scope: !6606)
!6612 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !528, file: !528, line: 294, type: !581, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6613)
!6613 = !{!6614}
!6614 = !DILocalVariable(name: "dev", arg: 1, scope: !6612, file: !528, line: 294, type: !557)
!6615 = !DILocation(line: 0, scope: !6612)
!6616 = !DILocation(line: 296, column: 2, scope: !6612)
!6617 = !DILocation(line: 297, column: 1, scope: !6612)
!6618 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !528, file: !528, line: 397, type: !581, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6619)
!6619 = !{!6620}
!6620 = !DILocalVariable(name: "dev", arg: 1, scope: !6618, file: !528, line: 397, type: !557)
!6621 = !DILocation(line: 0, scope: !6618)
!6622 = !DILocation(line: 399, column: 2, scope: !6618)
!6623 = !DILocation(line: 400, column: 1, scope: !6618)
!6624 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !528, file: !528, line: 392, type: !581, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6625)
!6625 = !{!6626}
!6626 = !DILocalVariable(name: "dev", arg: 1, scope: !6624, file: !528, line: 392, type: !557)
!6627 = !DILocation(line: 0, scope: !6624)
!6628 = !DILocation(line: 394, column: 2, scope: !6624)
!6629 = !DILocation(line: 395, column: 1, scope: !6624)
!6630 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !528, file: !528, line: 289, type: !581, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6631)
!6631 = !{!6632}
!6632 = !DILocalVariable(name: "dev", arg: 1, scope: !6630, file: !528, line: 289, type: !557)
!6633 = !DILocation(line: 0, scope: !6630)
!6634 = !DILocation(line: 291, column: 2, scope: !6630)
!6635 = !DILocation(line: 292, column: 1, scope: !6630)
!6636 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !528, file: !528, line: 387, type: !581, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6637)
!6637 = !{!6638}
!6638 = !DILocalVariable(name: "dev", arg: 1, scope: !6636, file: !528, line: 387, type: !557)
!6639 = !DILocation(line: 0, scope: !6636)
!6640 = !DILocation(line: 389, column: 2, scope: !6636)
!6641 = !DILocation(line: 390, column: 1, scope: !6636)
!6642 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !528, file: !528, line: 382, type: !581, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6643)
!6643 = !{!6644}
!6644 = !DILocalVariable(name: "dev", arg: 1, scope: !6642, file: !528, line: 382, type: !557)
!6645 = !DILocation(line: 0, scope: !6642)
!6646 = !DILocation(line: 384, column: 2, scope: !6642)
!6647 = !DILocation(line: 385, column: 1, scope: !6642)
!6648 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !528, file: !528, line: 373, type: !581, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6649)
!6649 = !{!6650}
!6650 = !DILocalVariable(name: "dev", arg: 1, scope: !6648, file: !528, line: 373, type: !557)
!6651 = !DILocation(line: 0, scope: !6648)
!6652 = !DILocation(line: 375, column: 2, scope: !6648)
!6653 = !DILocation(line: 376, column: 1, scope: !6648)
!6654 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !528, file: !528, line: 284, type: !581, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6655)
!6655 = !{!6656}
!6656 = !DILocalVariable(name: "dev", arg: 1, scope: !6654, file: !528, line: 284, type: !557)
!6657 = !DILocation(line: 0, scope: !6654)
!6658 = !DILocation(line: 286, column: 2, scope: !6654)
!6659 = !DILocation(line: 287, column: 1, scope: !6654)
!6660 = distinct !DISubprogram(name: "stm32_exti_init", scope: !528, file: !528, line: 416, type: !555, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6661)
!6661 = !{!6662}
!6662 = !DILocalVariable(name: "dev", arg: 1, scope: !6660, file: !528, line: 416, type: !557)
!6663 = !DILocation(line: 0, scope: !6660)
!6664 = !DILocation(line: 418, column: 2, scope: !6660)
!6665 = !DILocation(line: 420, column: 2, scope: !6660)
!6666 = !DILocation(line: 0, scope: !580)
!6667 = !DILocation(line: 493, column: 2, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !580, file: !528, line: 493, column: 2)
!6669 = !DILocation(line: 497, column: 2, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !580, file: !528, line: 497, column: 2)
!6671 = !DILocation(line: 507, column: 2, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !580, file: !528, line: 507, column: 2)
!6673 = !DILocation(line: 512, column: 2, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !580, file: !528, line: 512, column: 2)
!6675 = !DILocation(line: 516, column: 2, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !580, file: !528, line: 516, column: 2)
!6677 = !DILocation(line: 523, column: 2, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !580, file: !528, line: 523, column: 2)
!6679 = !DILocation(line: 527, column: 2, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !580, file: !528, line: 527, column: 2)
!6681 = !DILocation(line: 581, column: 2, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !580, file: !528, line: 581, column: 2)
!6683 = !DILocation(line: 586, column: 2, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !580, file: !528, line: 586, column: 2)
!6685 = !DILocation(line: 591, column: 2, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !580, file: !528, line: 591, column: 2)
!6687 = !DILocation(line: 595, column: 2, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !580, file: !528, line: 595, column: 2)
!6689 = !DILocation(line: 607, column: 1, scope: !580)
!6690 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !528, file: !528, line: 112, type: !6576, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6691)
!6691 = !{!6692, !6693}
!6692 = !DILocalVariable(name: "line", arg: 1, scope: !6690, file: !528, line: 112, type: !104)
!6693 = !DILocalVariable(name: "irqnum", scope: !6690, file: !528, line: 114, type: !104)
!6694 = !DILocation(line: 0, scope: !6690)
!6695 = !DILocation(line: 121, column: 11, scope: !6690)
!6696 = !DILocation(line: 130, column: 26, scope: !6690)
!6697 = !DILocation(line: 130, column: 2, scope: !6690)
!6698 = !DILocation(line: 134, column: 2, scope: !6690)
!6699 = !DILocation(line: 135, column: 1, scope: !6690)
!6700 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !6587, file: !6587, line: 268, type: !5022, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6701)
!6701 = !{!6702}
!6702 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6700, file: !6587, line: 268, type: !155)
!6703 = !DILocation(line: 0, scope: !6700)
!6704 = !DILocation(line: 270, column: 3, scope: !6700)
!6705 = !DILocation(line: 271, column: 1, scope: !6700)
!6706 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !528, file: !528, line: 137, type: !6576, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6707)
!6707 = !{!6708}
!6708 = !DILocalVariable(name: "line", arg: 1, scope: !6706, file: !528, line: 137, type: !104)
!6709 = !DILocation(line: 0, scope: !6706)
!6710 = !DILocation(line: 141, column: 11, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6706, file: !528, line: 141, column: 6)
!6712 = !DILocation(line: 141, column: 6, scope: !6706)
!6713 = !DILocation(line: 145, column: 28, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6711, file: !528, line: 141, column: 17)
!6715 = !DILocation(line: 145, column: 3, scope: !6714)
!6716 = !DILocation(line: 147, column: 2, scope: !6714)
!6717 = !DILocation(line: 151, column: 1, scope: !6706)
!6718 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !6587, file: !6587, line: 309, type: !5022, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6719)
!6719 = !{!6720}
!6720 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6718, file: !6587, line: 309, type: !155)
!6721 = !DILocation(line: 0, scope: !6718)
!6722 = !DILocation(line: 311, column: 3, scope: !6718)
!6723 = !DILocation(line: 312, column: 1, scope: !6718)
!6724 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !528, file: !528, line: 202, type: !6725, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6727)
!6725 = !DISubroutineType(types: !6726)
!6726 = !{null, !104, !104}
!6727 = !{!6728, !6729}
!6728 = !DILocalVariable(name: "line", arg: 1, scope: !6724, file: !528, line: 202, type: !104)
!6729 = !DILocalVariable(name: "trigger", arg: 2, scope: !6724, file: !528, line: 202, type: !104)
!6730 = !DILocation(line: 0, scope: !6724)
!6731 = !DILocation(line: 211, column: 2, scope: !6724)
!6732 = !DILocation(line: 213, column: 36, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6724, file: !528, line: 211, column: 19)
!6734 = !DILocation(line: 213, column: 3, scope: !6733)
!6735 = !DILocation(line: 214, column: 3, scope: !6733)
!6736 = !DILocation(line: 215, column: 3, scope: !6733)
!6737 = !DILocation(line: 217, column: 35, scope: !6733)
!6738 = !DILocation(line: 217, column: 3, scope: !6733)
!6739 = !DILocation(line: 218, column: 3, scope: !6733)
!6740 = !DILocation(line: 219, column: 3, scope: !6733)
!6741 = !DILocation(line: 221, column: 36, scope: !6733)
!6742 = !DILocation(line: 221, column: 3, scope: !6733)
!6743 = !DILocation(line: 222, column: 3, scope: !6733)
!6744 = !DILocation(line: 223, column: 3, scope: !6733)
!6745 = !DILocation(line: 225, column: 35, scope: !6733)
!6746 = !DILocation(line: 225, column: 3, scope: !6733)
!6747 = !DILocation(line: 226, column: 3, scope: !6733)
!6748 = !DILocation(line: 227, column: 3, scope: !6733)
!6749 = !DILocation(line: 232, column: 1, scope: !6724)
!6750 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !6587, file: !6587, line: 573, type: !5022, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6751)
!6751 = !{!6752}
!6752 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6750, file: !6587, line: 573, type: !155)
!6753 = !DILocation(line: 0, scope: !6750)
!6754 = !DILocation(line: 575, column: 3, scope: !6750)
!6755 = !DILocation(line: 577, column: 1, scope: !6750)
!6756 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !6587, file: !6587, line: 703, type: !5022, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6757)
!6757 = !{!6758}
!6758 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6756, file: !6587, line: 703, type: !155)
!6759 = !DILocation(line: 0, scope: !6756)
!6760 = !DILocation(line: 705, column: 3, scope: !6756)
!6761 = !DILocation(line: 706, column: 1, scope: !6756)
!6762 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !6587, file: !6587, line: 529, type: !5022, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6763)
!6763 = !{!6764}
!6764 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6762, file: !6587, line: 529, type: !155)
!6765 = !DILocation(line: 0, scope: !6762)
!6766 = !DILocation(line: 531, column: 3, scope: !6762)
!6767 = !DILocation(line: 533, column: 1, scope: !6762)
!6768 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !6587, file: !6587, line: 661, type: !5022, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6769)
!6769 = !{!6770}
!6770 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6768, file: !6587, line: 661, type: !155)
!6771 = !DILocation(line: 0, scope: !6768)
!6772 = !DILocation(line: 663, column: 3, scope: !6768)
!6773 = !DILocation(line: 664, column: 1, scope: !6768)
!6774 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !528, file: !528, line: 433, type: !6775, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6777)
!6775 = !DISubroutineType(types: !6776)
!6776 = !{!104, !104, !568, !103}
!6777 = !{!6778, !6779, !6780, !6781, !6783}
!6778 = !DILocalVariable(name: "line", arg: 1, scope: !6774, file: !528, line: 433, type: !104)
!6779 = !DILocalVariable(name: "cb", arg: 2, scope: !6774, file: !528, line: 433, type: !568)
!6780 = !DILocalVariable(name: "arg", arg: 3, scope: !6774, file: !528, line: 433, type: !103)
!6781 = !DILocalVariable(name: "dev", scope: !6774, file: !528, line: 435, type: !6782)
!6782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !557)
!6783 = !DILocalVariable(name: "data", scope: !6774, file: !528, line: 436, type: !6541)
!6784 = !DILocation(line: 0, scope: !6774)
!6785 = !DILocation(line: 438, column: 21, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6774, file: !528, line: 438, column: 6)
!6787 = !DILocation(line: 438, column: 6, scope: !6786)
!6788 = !DILocation(line: 438, column: 6, scope: !6774)
!6789 = !DILocation(line: 442, column: 20, scope: !6774)
!6790 = !DILocation(line: 443, column: 17, scope: !6774)
!6791 = !DILocation(line: 443, column: 22, scope: !6774)
!6792 = !DILocation(line: 445, column: 2, scope: !6774)
!6793 = !DILocation(line: 446, column: 1, scope: !6774)
!6794 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !528, file: !528, line: 448, type: !6576, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !444, retainedNodes: !6795)
!6795 = !{!6796, !6797, !6798}
!6796 = !DILocalVariable(name: "line", arg: 1, scope: !6794, file: !528, line: 448, type: !104)
!6797 = !DILocalVariable(name: "dev", scope: !6794, file: !528, line: 450, type: !6782)
!6798 = !DILocalVariable(name: "data", scope: !6794, file: !528, line: 451, type: !6541)
!6799 = !DILocation(line: 0, scope: !6794)
!6800 = !DILocation(line: 453, column: 17, scope: !6794)
!6801 = !DILocation(line: 453, column: 20, scope: !6794)
!6802 = !DILocation(line: 454, column: 17, scope: !6794)
!6803 = !DILocation(line: 454, column: 22, scope: !6794)
!6804 = !DILocation(line: 455, column: 1, scope: !6794)
!6805 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !715, file: !715, line: 183, type: !753, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !6806)
!6806 = !{!6807, !6808, !6809, !6810, !6811}
!6807 = !DILocalVariable(name: "dev", arg: 1, scope: !6805, file: !715, line: 183, type: !744)
!6808 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6805, file: !715, line: 184, type: !755)
!6809 = !DILocalVariable(name: "pclken", scope: !6805, file: !715, line: 186, type: !705)
!6810 = !DILocalVariable(name: "reg", scope: !6805, file: !715, line: 187, type: !1296)
!6811 = !DILocalVariable(name: "reg_val", scope: !6805, file: !715, line: 188, type: !155)
!6812 = !DILocation(line: 0, scope: !6805)
!6813 = !DILocation(line: 192, column: 6, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6805, file: !715, line: 192, column: 6)
!6815 = !DILocation(line: 192, column: 6, scope: !6805)
!6816 = !DILocation(line: 197, column: 52, scope: !6805)
!6817 = !DILocation(line: 197, column: 8, scope: !6805)
!6818 = !DILocation(line: 198, column: 12, scope: !6805)
!6819 = !DILocation(line: 199, column: 21, scope: !6805)
!6820 = !DILocation(line: 199, column: 10, scope: !6805)
!6821 = !DILocation(line: 200, column: 7, scope: !6805)
!6822 = !DILocation(line: 202, column: 2, scope: !6805)
!6823 = !DILocation(line: 203, column: 1, scope: !6805)
!6824 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !715, file: !715, line: 205, type: !753, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !6825)
!6825 = !{!6826, !6827, !6828, !6829, !6830}
!6826 = !DILocalVariable(name: "dev", arg: 1, scope: !6824, file: !715, line: 205, type: !744)
!6827 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6824, file: !715, line: 206, type: !755)
!6828 = !DILocalVariable(name: "pclken", scope: !6824, file: !715, line: 208, type: !705)
!6829 = !DILocalVariable(name: "reg", scope: !6824, file: !715, line: 209, type: !1296)
!6830 = !DILocalVariable(name: "reg_val", scope: !6824, file: !715, line: 210, type: !155)
!6831 = !DILocation(line: 0, scope: !6824)
!6832 = !DILocation(line: 214, column: 6, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6824, file: !715, line: 214, column: 6)
!6834 = !DILocation(line: 214, column: 6, scope: !6824)
!6835 = !DILocation(line: 219, column: 52, scope: !6824)
!6836 = !DILocation(line: 219, column: 8, scope: !6824)
!6837 = !DILocation(line: 220, column: 12, scope: !6824)
!6838 = !DILocation(line: 221, column: 22, scope: !6824)
!6839 = !DILocation(line: 221, column: 13, scope: !6824)
!6840 = !DILocation(line: 221, column: 10, scope: !6824)
!6841 = !DILocation(line: 222, column: 7, scope: !6824)
!6842 = !DILocation(line: 224, column: 2, scope: !6824)
!6843 = !DILocation(line: 225, column: 1, scope: !6824)
!6844 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !715, file: !715, line: 262, type: !769, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !6845)
!6845 = !{!6846, !6847, !6848, !6849, !6850, !6851, !6852, !6853}
!6846 = !DILocalVariable(name: "clock", arg: 1, scope: !6844, file: !715, line: 262, type: !744)
!6847 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6844, file: !715, line: 263, type: !755)
!6848 = !DILocalVariable(name: "rate", arg: 3, scope: !6844, file: !715, line: 264, type: !711)
!6849 = !DILocalVariable(name: "pclken", scope: !6844, file: !715, line: 266, type: !705)
!6850 = !DILocalVariable(name: "ahb_clock", scope: !6844, file: !715, line: 273, type: !155)
!6851 = !DILocalVariable(name: "apb1_clock", scope: !6844, file: !715, line: 274, type: !155)
!6852 = !DILocalVariable(name: "apb2_clock", scope: !6844, file: !715, line: 276, type: !155)
!6853 = !DILocalVariable(name: "ahb3_clock", scope: !6844, file: !715, line: 286, type: !155)
!6854 = !DILocation(line: 0, scope: !6844)
!6855 = !DILocation(line: 273, column: 23, scope: !6844)
!6856 = !DILocation(line: 299, column: 18, scope: !6844)
!6857 = !DILocation(line: 299, column: 2, scope: !6844)
!6858 = !DILocation(line: 274, column: 24, scope: !6844)
!6859 = !DILocation(line: 319, column: 3, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6844, file: !715, line: 299, column: 23)
!6861 = !DILocation(line: 276, column: 24, scope: !6844)
!6862 = !DILocation(line: 323, column: 3, scope: !6860)
!6863 = !DILocation(line: 346, column: 33, scope: !6860)
!6864 = !DILocation(line: 346, column: 11, scope: !6860)
!6865 = !DILocation(line: 350, column: 3, scope: !6860)
!6866 = !DILocation(line: 374, column: 3, scope: !6860)
!6867 = !DILocation(line: 379, column: 3, scope: !6860)
!6868 = !DILocation(line: 0, scope: !6860)
!6869 = !DILocation(line: 396, column: 1, scope: !6844)
!6870 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !715, file: !715, line: 227, type: !785, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !6871)
!6871 = !{!6872, !6873, !6874, !6875, !6876, !6877, !6878, !6879}
!6872 = !DILocalVariable(name: "dev", arg: 1, scope: !6870, file: !715, line: 227, type: !744)
!6873 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6870, file: !715, line: 228, type: !755)
!6874 = !DILocalVariable(name: "data", arg: 3, scope: !6870, file: !715, line: 229, type: !103)
!6875 = !DILocalVariable(name: "pclken", scope: !6870, file: !715, line: 233, type: !705)
!6876 = !DILocalVariable(name: "reg", scope: !6870, file: !715, line: 234, type: !1296)
!6877 = !DILocalVariable(name: "reg_val", scope: !6870, file: !715, line: 235, type: !155)
!6878 = !DILocalVariable(name: "dt_val", scope: !6870, file: !715, line: 235, type: !155)
!6879 = !DILocalVariable(name: "err", scope: !6870, file: !715, line: 236, type: !104)
!6880 = !DILocation(line: 0, scope: !6870)
!6881 = !DILocation(line: 241, column: 30, scope: !6870)
!6882 = !DILocation(line: 241, column: 8, scope: !6870)
!6883 = !DILocation(line: 242, column: 10, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6870, file: !715, line: 242, column: 6)
!6885 = !DILocation(line: 242, column: 6, scope: !6870)
!6886 = !DILocation(line: 247, column: 11, scope: !6870)
!6887 = !DILocation(line: 248, column: 6, scope: !6870)
!6888 = !DILocation(line: 247, column: 44, scope: !6870)
!6889 = !DILocation(line: 250, column: 6, scope: !6870)
!6890 = !DILocation(line: 249, column: 52, scope: !6870)
!6891 = !DILocation(line: 249, column: 8, scope: !6870)
!6892 = !DILocation(line: 251, column: 12, scope: !6870)
!6893 = !DILocation(line: 252, column: 10, scope: !6870)
!6894 = !DILocation(line: 253, column: 7, scope: !6870)
!6895 = !DILocation(line: 255, column: 2, scope: !6870)
!6896 = !DILocation(line: 260, column: 1, scope: !6870)
!6897 = distinct !DISubprogram(name: "enabled_clock", scope: !715, file: !715, line: 100, type: !6898, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !6900)
!6898 = !DISubroutineType(types: !6899)
!6899 = !{!104, !155}
!6900 = !{!6901, !6902}
!6901 = !DILocalVariable(name: "src_clk", arg: 1, scope: !6897, file: !715, line: 100, type: !155)
!6902 = !DILocalVariable(name: "r", scope: !6897, file: !715, line: 102, type: !104)
!6903 = !DILocation(line: 0, scope: !6897)
!6904 = !DILocation(line: 104, column: 2, scope: !6897)
!6905 = !DILocation(line: 180, column: 2, scope: !6897)
!6906 = !DILocation(line: 181, column: 1, scope: !6897)
!6907 = distinct !DISubprogram(name: "get_bus_clock", scope: !715, file: !715, line: 79, type: !6908, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !6910)
!6908 = !DISubroutineType(types: !6909)
!6909 = !{!155, !155, !155}
!6910 = !{!6911, !6912}
!6911 = !DILocalVariable(name: "clock", arg: 1, scope: !6907, file: !715, line: 79, type: !155)
!6912 = !DILocalVariable(name: "prescaler", arg: 2, scope: !6907, file: !715, line: 79, type: !155)
!6913 = !DILocation(line: 0, scope: !6907)
!6914 = !DILocation(line: 81, column: 15, scope: !6907)
!6915 = !DILocation(line: 81, column: 2, scope: !6907)
!6916 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !715, file: !715, line: 68, type: !6917, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !6919)
!6917 = !DISubroutineType(types: !6918)
!6918 = !{!155, !155, !104, !104, !104}
!6919 = !{!6920, !6921, !6922, !6923}
!6920 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !6916, file: !715, line: 68, type: !155)
!6921 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !6916, file: !715, line: 69, type: !104)
!6922 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !6916, file: !715, line: 70, type: !104)
!6923 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !6916, file: !715, line: 71, type: !104)
!6924 = !DILocation(line: 0, scope: !6916)
!6925 = !DILocation(line: 75, column: 22, scope: !6916)
!6926 = !DILocation(line: 75, column: 34, scope: !6916)
!6927 = !DILocation(line: 75, column: 2, scope: !6916)
!6928 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !715, file: !715, line: 641, type: !742, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !6929)
!6929 = !{!6930, !6931, !6932}
!6930 = !DILocalVariable(name: "dev", arg: 1, scope: !6928, file: !715, line: 641, type: !744)
!6931 = !DILocalVariable(name: "old_flash_freq", scope: !6928, file: !715, line: 664, type: !155)
!6932 = !DILocalVariable(name: "new_flash_freq", scope: !6928, file: !715, line: 665, type: !155)
!6933 = !DILocation(line: 0, scope: !6928)
!6934 = !DILocation(line: 646, column: 2, scope: !6928)
!6935 = !DILocation(line: 667, column: 19, scope: !6928)
!6936 = !DILocation(line: 674, column: 21, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6928, file: !715, line: 674, column: 6)
!6938 = !DILocation(line: 674, column: 6, scope: !6928)
!6939 = !DILocation(line: 675, column: 3, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6937, file: !715, line: 674, column: 59)
!6941 = !DILocation(line: 676, column: 2, scope: !6940)
!6942 = !DILocation(line: 680, column: 2, scope: !6928)
!6943 = !DILocation(line: 683, column: 2, scope: !6928)
!6944 = !DILocation(line: 690, column: 3, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !715, line: 689, column: 9)
!6946 = distinct !DILexicalBlock(scope: !6928, file: !715, line: 685, column: 6)
!6947 = !DILocation(line: 695, column: 2, scope: !6928)
!6948 = !DILocation(line: 696, column: 2, scope: !6928)
!6949 = !DILocation(line: 696, column: 9, scope: !6928)
!6950 = !DILocation(line: 696, column: 34, scope: !6928)
!6951 = distinct !{!6951, !6948, !6952}
!6952 = !DILocation(line: 697, column: 2, scope: !6928)
!6953 = !DILocation(line: 720, column: 21, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6928, file: !715, line: 720, column: 6)
!6955 = !DILocation(line: 720, column: 6, scope: !6928)
!6956 = !DILocation(line: 721, column: 3, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6954, file: !715, line: 720, column: 60)
!6958 = !DILocation(line: 722, column: 2, scope: !6957)
!6959 = !DILocation(line: 725, column: 18, scope: !6928)
!6960 = !DILocation(line: 728, column: 2, scope: !6928)
!6961 = !DILocation(line: 730, column: 2, scope: !6928)
!6962 = !DILocation(line: 745, column: 2, scope: !6928)
!6963 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !6964, file: !6964, line: 3275, type: !5012, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !344)
!6964 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6965 = !DILocation(line: 3277, column: 21, scope: !6963)
!6966 = !DILocation(line: 3277, column: 3, scope: !6963)
!6967 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !715, file: !715, line: 507, type: !2800, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !344)
!6968 = !DILocation(line: 534, column: 7, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6970, file: !715, line: 534, column: 7)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !715, line: 532, column: 37)
!6971 = distinct !DILexicalBlock(scope: !6967, file: !715, line: 532, column: 6)
!6972 = !DILocation(line: 534, column: 28, scope: !6969)
!6973 = !DILocation(line: 534, column: 7, scope: !6970)
!6974 = !DILocation(line: 536, column: 4, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6969, file: !715, line: 534, column: 34)
!6976 = !DILocation(line: 537, column: 4, scope: !6975)
!6977 = !DILocation(line: 537, column: 11, scope: !6975)
!6978 = !DILocation(line: 537, column: 32, scope: !6975)
!6979 = distinct !{!6979, !6976, !6980}
!6980 = !DILocation(line: 539, column: 4, scope: !6975)
!6981 = !DILocation(line: 583, column: 3, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6983, file: !715, line: 577, column: 37)
!6983 = distinct !DILexicalBlock(scope: !6967, file: !715, line: 577, column: 6)
!6984 = !DILocation(line: 584, column: 3, scope: !6982)
!6985 = !DILocation(line: 584, column: 10, scope: !6982)
!6986 = !DILocation(line: 584, column: 31, scope: !6982)
!6987 = distinct !{!6987, !6984, !6988}
!6988 = !DILocation(line: 585, column: 3, scope: !6982)
!6989 = !DILocation(line: 627, column: 1, scope: !6967)
!6990 = distinct !DISubprogram(name: "set_up_plls", scope: !715, file: !715, line: 448, type: !2800, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !344)
!6991 = !DILocation(line: 460, column: 6, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6990, file: !715, line: 460, column: 6)
!6993 = !DILocation(line: 460, column: 31, scope: !6992)
!6994 = !DILocation(line: 460, column: 6, scope: !6990)
!6995 = !DILocation(line: 461, column: 3, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6992, file: !715, line: 460, column: 67)
!6997 = !DILocation(line: 462, column: 3, scope: !6996)
!6998 = !DILocation(line: 463, column: 2, scope: !6996)
!6999 = !DILocation(line: 464, column: 2, scope: !6990)
!7000 = !DILocation(line: 488, column: 2, scope: !6990)
!7001 = !DILocation(line: 496, column: 2, scope: !6990)
!7002 = !DILocation(line: 499, column: 2, scope: !6990)
!7003 = !DILocation(line: 500, column: 2, scope: !6990)
!7004 = !DILocation(line: 500, column: 9, scope: !6990)
!7005 = !DILocation(line: 500, column: 30, scope: !6990)
!7006 = distinct !{!7006, !7003, !7007}
!7007 = !DILocation(line: 502, column: 2, scope: !6990)
!7008 = !DILocation(line: 505, column: 1, scope: !6990)
!7009 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !6964, file: !6964, line: 3224, type: !5022, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7010)
!7010 = !{!7011}
!7011 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7009, file: !6964, line: 3224, type: !155)
!7012 = !DILocation(line: 0, scope: !7009)
!7013 = !DILocation(line: 3226, column: 3, scope: !7009)
!7014 = !DILocation(line: 3227, column: 1, scope: !7009)
!7015 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !6964, file: !6964, line: 3188, type: !5022, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7016)
!7016 = !{!7017}
!7017 = !DILocalVariable(name: "Source", arg: 1, scope: !7015, file: !6964, line: 3188, type: !155)
!7018 = !DILocation(line: 0, scope: !7015)
!7019 = !DILocation(line: 3190, column: 3, scope: !7015)
!7020 = !DILocation(line: 3191, column: 1, scope: !7015)
!7021 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !6964, file: !6964, line: 3204, type: !5012, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !344)
!7022 = !DILocation(line: 3206, column: 21, scope: !7021)
!7023 = !DILocation(line: 3206, column: 3, scope: !7021)
!7024 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !6964, file: !6964, line: 3240, type: !5022, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7025)
!7025 = !{!7026}
!7026 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7024, file: !6964, line: 3240, type: !155)
!7027 = !DILocation(line: 0, scope: !7024)
!7028 = !DILocation(line: 3242, column: 3, scope: !7024)
!7029 = !DILocation(line: 3243, column: 1, scope: !7024)
!7030 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !6964, file: !6964, line: 3256, type: !5022, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !7031)
!7031 = !{!7032}
!7032 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !7030, file: !6964, line: 3256, type: !155)
!7033 = !DILocation(line: 0, scope: !7030)
!7034 = !DILocation(line: 3258, column: 3, scope: !7030)
!7035 = !DILocation(line: 3259, column: 1, scope: !7030)
!7036 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !715, file: !715, line: 409, type: !2800, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !344)
!7037 = !DILocation(line: 412, column: 6, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7036, file: !715, line: 412, column: 6)
!7039 = !DILocation(line: 412, column: 27, scope: !7038)
!7040 = !DILocation(line: 412, column: 6, scope: !7036)
!7041 = !DILocation(line: 414, column: 3, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7038, file: !715, line: 412, column: 33)
!7043 = !DILocation(line: 415, column: 3, scope: !7042)
!7044 = !DILocation(line: 415, column: 10, scope: !7042)
!7045 = !DILocation(line: 415, column: 31, scope: !7042)
!7046 = distinct !{!7046, !7043, !7047}
!7047 = !DILocation(line: 417, column: 3, scope: !7042)
!7048 = !DILocation(line: 421, column: 2, scope: !7036)
!7049 = !DILocation(line: 422, column: 2, scope: !7036)
!7050 = !DILocation(line: 422, column: 9, scope: !7036)
!7051 = !DILocation(line: 422, column: 34, scope: !7036)
!7052 = distinct !{!7052, !7049, !7053}
!7053 = !DILocation(line: 423, column: 2, scope: !7036)
!7054 = !DILocation(line: 424, column: 1, scope: !7036)
!7055 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !6964, file: !6964, line: 4195, type: !2800, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !344)
!7056 = !DILocation(line: 4197, column: 3, scope: !7055)
!7057 = !DILocation(line: 4198, column: 1, scope: !7055)
!7058 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !6964, file: !6964, line: 4184, type: !2800, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !344)
!7059 = !DILocation(line: 4186, column: 3, scope: !7058)
!7060 = !DILocation(line: 4187, column: 1, scope: !7058)
!7061 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !6964, file: !6964, line: 4205, type: !5012, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !344)
!7062 = !DILocation(line: 4207, column: 11, scope: !7061)
!7063 = !DILocation(line: 4207, column: 44, scope: !7061)
!7064 = !DILocation(line: 4207, column: 3, scope: !7061)
!7065 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !6964, file: !6964, line: 3007, type: !5012, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !344)
!7066 = !DILocation(line: 3009, column: 11, scope: !7065)
!7067 = !DILocation(line: 3009, column: 44, scope: !7065)
!7068 = !DILocation(line: 3009, column: 3, scope: !7065)
!7069 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !6964, file: !6964, line: 2987, type: !2800, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !344)
!7070 = !DILocation(line: 2989, column: 3, scope: !7069)
!7071 = !DILocation(line: 2990, column: 1, scope: !7069)
!7072 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !6964, file: !6964, line: 3143, type: !2800, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !344)
!7073 = !DILocation(line: 3145, column: 3, scope: !7072)
!7074 = !DILocation(line: 3146, column: 1, scope: !7072)
!7075 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !6964, file: !6964, line: 3163, type: !5012, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !651, retainedNodes: !344)
!7076 = !DILocation(line: 3165, column: 11, scope: !7075)
!7077 = !DILocation(line: 3165, column: 46, scope: !7075)
!7078 = !DILocation(line: 3165, column: 3, scope: !7075)
!7079 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !7080, file: !7080, line: 40, type: !5012, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !344)
!7080 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7081 = !DILocation(line: 43, column: 3, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7083, file: !7080, line: 42, column: 37)
!7083 = distinct !DILexicalBlock(scope: !7079, file: !7080, line: 42, column: 6)
!7084 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !7080, file: !7080, line: 56, type: !2800, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !344)
!7085 = !DILocation(line: 58, column: 2, scope: !7084)
!7086 = !DILocation(line: 62, column: 1, scope: !7084)
!7087 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !6964, file: !6964, line: 4304, type: !7088, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !7090)
!7088 = !DISubroutineType(types: !7089)
!7089 = !{null, !155, !155, !155, !155}
!7090 = !{!7091, !7092, !7093, !7094}
!7091 = !DILocalVariable(name: "Source", arg: 1, scope: !7087, file: !6964, line: 4304, type: !155)
!7092 = !DILocalVariable(name: "PLLM", arg: 2, scope: !7087, file: !6964, line: 4304, type: !155)
!7093 = !DILocalVariable(name: "PLLN", arg: 3, scope: !7087, file: !6964, line: 4304, type: !155)
!7094 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !7087, file: !6964, line: 4304, type: !155)
!7095 = !DILocation(line: 0, scope: !7087)
!7096 = !DILocation(line: 4306, column: 3, scope: !7087)
!7097 = !DILocation(line: 4308, column: 3, scope: !7087)
!7098 = !DILocation(line: 4312, column: 1, scope: !7087)
!7099 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !7080, file: !7080, line: 69, type: !2800, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !344)
!7100 = !DILocation(line: 72, column: 2, scope: !7099)
!7101 = !DILocation(line: 73, column: 1, scope: !7099)
!7102 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !7103, file: !7103, line: 1185, type: !5022, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !7104)
!7103 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7104 = !{!7105, !7106}
!7105 = !DILocalVariable(name: "Periphs", arg: 1, scope: !7102, file: !7103, line: 1185, type: !155)
!7106 = !DILocalVariable(name: "tmpreg", scope: !7102, file: !7103, line: 1187, type: !154)
!7107 = !DILocation(line: 0, scope: !7102)
!7108 = !DILocation(line: 1187, column: 3, scope: !7102)
!7109 = !DILocation(line: 1187, column: 17, scope: !7102)
!7110 = !DILocation(line: 1188, column: 3, scope: !7102)
!7111 = !DILocation(line: 1190, column: 12, scope: !7102)
!7112 = !DILocation(line: 1190, column: 10, scope: !7102)
!7113 = !DILocation(line: 1191, column: 9, scope: !7102)
!7114 = !DILocation(line: 1192, column: 1, scope: !7102)
!7115 = distinct !DISubprogram(name: "uart_console_init", scope: !846, file: !846, line: 588, type: !823, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !7116)
!7116 = !{!7117}
!7117 = !DILocalVariable(name: "arg", arg: 1, scope: !7115, file: !846, line: 588, type: !801)
!7118 = !DILocation(line: 0, scope: !7115)
!7119 = !DILocation(line: 593, column: 7, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7115, file: !846, line: 593, column: 6)
!7121 = !DILocation(line: 593, column: 6, scope: !7115)
!7122 = !DILocation(line: 597, column: 2, scope: !7115)
!7123 = !DILocation(line: 599, column: 2, scope: !7115)
!7124 = !DILocation(line: 600, column: 1, scope: !7115)
!7125 = distinct !DISubprogram(name: "device_is_ready", scope: !2920, file: !2920, line: 47, type: !7126, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !7128)
!7126 = !DISubroutineType(types: !7127)
!7127 = !{!126, !801}
!7128 = !{!7129}
!7129 = !DILocalVariable(name: "dev", arg: 1, scope: !7125, file: !2920, line: 47, type: !801)
!7130 = !DILocation(line: 0, scope: !7125)
!7131 = !DILocation(line: 55, column: 2, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7125, file: !2920, line: 55, column: 2)
!7133 = !{i64 2154266162}
!7134 = !DILocation(line: 56, column: 9, scope: !7125)
!7135 = !DILocation(line: 56, column: 2, scope: !7125)
!7136 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !846, file: !846, line: 573, type: !2800, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !344)
!7137 = !DILocation(line: 576, column: 2, scope: !7136)
!7138 = !DILocation(line: 579, column: 2, scope: !7136)
!7139 = !DILocation(line: 581, column: 1, scope: !7136)
!7140 = distinct !DISubprogram(name: "console_out", scope: !846, file: !846, line: 77, type: !141, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !7141)
!7141 = !{!7142}
!7142 = !DILocalVariable(name: "c", arg: 1, scope: !7140, file: !846, line: 77, type: !104)
!7143 = !DILocation(line: 0, scope: !7140)
!7144 = !DILocation(line: 89, column: 11, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7140, file: !846, line: 89, column: 6)
!7146 = !DILocation(line: 89, column: 6, scope: !7140)
!7147 = !DILocation(line: 90, column: 3, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7145, file: !846, line: 89, column: 17)
!7149 = !DILocation(line: 91, column: 2, scope: !7148)
!7150 = !DILocation(line: 92, column: 34, scope: !7140)
!7151 = !DILocation(line: 92, column: 2, scope: !7140)
!7152 = !DILocation(line: 94, column: 2, scope: !7140)
!7153 = distinct !DISubprogram(name: "uart_poll_out", scope: !7154, file: !7154, line: 95, type: !819, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !7155)
!7154 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/out_of_tree_driver")
!7155 = !{!7156, !7157}
!7156 = !DILocalVariable(name: "dev", arg: 1, scope: !7153, file: !7154, line: 95, type: !801)
!7157 = !DILocalVariable(name: "out_char", arg: 2, scope: !7153, file: !7154, line: 95, type: !124)
!7158 = !DILocation(line: 0, scope: !7153)
!7159 = !DILocation(line: 105, column: 2, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7153, file: !7154, line: 105, column: 2)
!7161 = !{i64 2154349553}
!7162 = !DILocation(line: 106, column: 2, scope: !7153)
!7163 = !DILocation(line: 107, column: 1, scope: !7153)
!7164 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !795, file: !795, line: 574, type: !819, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !7165)
!7165 = !{!7166, !7167, !7168}
!7166 = !DILocalVariable(name: "dev", arg: 1, scope: !7164, file: !795, line: 574, type: !801)
!7167 = !DILocalVariable(name: "out_char", arg: 2, scope: !7164, file: !795, line: 575, type: !124)
!7168 = !DILocalVariable(name: "api", scope: !7164, file: !795, line: 577, type: !792)
!7169 = !DILocation(line: 0, scope: !7164)
!7170 = !DILocation(line: 578, column: 40, scope: !7164)
!7171 = !DILocation(line: 580, column: 7, scope: !7164)
!7172 = !DILocation(line: 580, column: 2, scope: !7164)
!7173 = !DILocation(line: 581, column: 1, scope: !7164)
!7174 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !110, file: !110, line: 730, type: !7126, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !7175)
!7175 = !{!7176}
!7176 = !DILocalVariable(name: "dev", arg: 1, scope: !7174, file: !110, line: 730, type: !801)
!7177 = !DILocation(line: 0, scope: !7174)
!7178 = !DILocation(line: 732, column: 9, scope: !7174)
!7179 = !DILocation(line: 732, column: 2, scope: !7174)
!7180 = distinct !DISubprogram(name: "uart_register_input", scope: !846, file: !846, line: 560, type: !7181, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !789, retainedNodes: !7226)
!7181 = !DISubroutineType(types: !7182)
!7182 = !{null, !7183, !7183, !7223}
!7183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7184, size: 32)
!7184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !329, line: 2208, size: 128, elements: !7185)
!7185 = !{!7186}
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !7184, file: !329, line: 2209, baseType: !7187, size: 128)
!7187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !329, line: 1709, size: 128, elements: !7188)
!7188 = !{!7189, !7202, !7204}
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !7187, file: !329, line: 1710, baseType: !7190, size: 64)
!7190 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !7191, line: 46, baseType: !7192)
!7191 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !7191, line: 41, size: 64, elements: !7193)
!7193 = !{!7194, !7201}
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7192, file: !7191, line: 42, baseType: !7195, size: 32)
!7195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7196, size: 32)
!7196 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !7191, line: 39, baseType: !7197)
!7197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !7191, line: 35, size: 32, elements: !7198)
!7198 = !{!7199}
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !7197, file: !7191, line: 36, baseType: !7200, size: 32)
!7200 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !7191, line: 32, baseType: !155)
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7192, file: !7191, line: 43, baseType: !7195, size: 32, offset: 32)
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7187, file: !329, line: 1711, baseType: !7203, offset: 64)
!7203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !343, line: 43, elements: !344)
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7187, file: !329, line: 1712, baseType: !7205, size: 64, offset: 64)
!7205 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !269, line: 233, baseType: !7206)
!7206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !269, line: 231, size: 64, elements: !7207)
!7207 = !{!7208}
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7206, file: !269, line: 232, baseType: !7209, size: 64)
!7209 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !243, line: 48, baseType: !7210)
!7210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !243, line: 37, size: 64, elements: !7211)
!7211 = !{!7212, !7218}
!7212 = !DIDerivedType(tag: DW_TAG_member, scope: !7210, file: !243, line: 38, baseType: !7213, size: 32)
!7213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7210, file: !243, line: 38, size: 32, elements: !7214)
!7214 = !{!7215, !7217}
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7213, file: !243, line: 39, baseType: !7216, size: 32)
!7216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7210, size: 32)
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7213, file: !243, line: 40, baseType: !7216, size: 32)
!7218 = !DIDerivedType(tag: DW_TAG_member, scope: !7210, file: !243, line: 42, baseType: !7219, size: 32, offset: 32)
!7219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7210, file: !243, line: 42, size: 32, elements: !7220)
!7220 = !{!7221, !7222}
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7219, file: !243, line: 43, baseType: !7216, size: 32)
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7219, file: !243, line: 44, baseType: !7216, size: 32)
!7223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7224, size: 32)
!7224 = !DISubroutineType(types: !7225)
!7225 = !{!123, !981, !123}
!7226 = !{!7227, !7228, !7229}
!7227 = !DILocalVariable(name: "avail", arg: 1, scope: !7180, file: !846, line: 560, type: !7183)
!7228 = !DILocalVariable(name: "lines", arg: 2, scope: !7180, file: !846, line: 560, type: !7183)
!7229 = !DILocalVariable(name: "completion", arg: 3, scope: !7180, file: !846, line: 561, type: !7223)
!7230 = !DILocation(line: 0, scope: !7180)
!7231 = !DILocation(line: 566, column: 1, scope: !7180)
!7232 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1025, file: !1025, line: 523, type: !882, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7233)
!7233 = !{!7234, !7235, !7236, !7237, !7238}
!7234 = !DILocalVariable(name: "dev", arg: 1, scope: !7232, file: !1025, line: 523, type: !884)
!7235 = !DILocalVariable(name: "pin", arg: 2, scope: !7232, file: !1025, line: 524, type: !899)
!7236 = !DILocalVariable(name: "flags", arg: 3, scope: !7232, file: !1025, line: 524, type: !900)
!7237 = !DILocalVariable(name: "err", scope: !7232, file: !1025, line: 526, type: !104)
!7238 = !DILocalVariable(name: "pincfg", scope: !7232, file: !1025, line: 527, type: !104)
!7239 = !DILocation(line: 0, scope: !7232)
!7240 = !DILocation(line: 527, column: 2, scope: !7232)
!7241 = !DILocation(line: 532, column: 8, scope: !7232)
!7242 = !DILocation(line: 533, column: 10, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7232, file: !1025, line: 533, column: 6)
!7244 = !DILocation(line: 533, column: 6, scope: !7232)
!7245 = !DILocation(line: 543, column: 13, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7232, file: !1025, line: 543, column: 6)
!7247 = !DILocation(line: 543, column: 28, scope: !7246)
!7248 = !DILocation(line: 543, column: 6, scope: !7232)
!7249 = !DILocation(line: 544, column: 14, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7251, file: !1025, line: 544, column: 7)
!7251 = distinct !DILexicalBlock(scope: !7246, file: !1025, line: 543, column: 34)
!7252 = !DILocation(line: 544, column: 39, scope: !7250)
!7253 = !DILocation(line: 544, column: 7, scope: !7251)
!7254 = !DILocation(line: 545, column: 38, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7250, file: !1025, line: 544, column: 45)
!7256 = !DILocation(line: 545, column: 4, scope: !7255)
!7257 = !DILocation(line: 546, column: 3, scope: !7255)
!7258 = !DILocation(line: 546, column: 21, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7250, file: !1025, line: 546, column: 14)
!7260 = !DILocation(line: 546, column: 45, scope: !7259)
!7261 = !DILocation(line: 546, column: 14, scope: !7250)
!7262 = !DILocation(line: 547, column: 40, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7259, file: !1025, line: 546, column: 51)
!7264 = !DILocation(line: 547, column: 4, scope: !7263)
!7265 = !DILocation(line: 548, column: 3, scope: !7263)
!7266 = !DILocation(line: 551, column: 32, scope: !7232)
!7267 = !DILocation(line: 551, column: 37, scope: !7232)
!7268 = !DILocation(line: 551, column: 2, scope: !7232)
!7269 = !DILocation(line: 554, column: 6, scope: !7232)
!7270 = !DILocation(line: 562, column: 1, scope: !7232)
!7271 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1025, file: !1025, line: 410, type: !7272, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7274)
!7272 = !DISubroutineType(types: !7273)
!7273 = !{!104, !884, !711}
!7274 = !{!7275, !7276, !7277, !7279}
!7275 = !DILocalVariable(name: "dev", arg: 1, scope: !7271, file: !1025, line: 410, type: !884)
!7276 = !DILocalVariable(name: "value", arg: 2, scope: !7271, file: !1025, line: 410, type: !711)
!7277 = !DILocalVariable(name: "cfg", scope: !7271, file: !1025, line: 412, type: !7278)
!7278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 32)
!7279 = !DILocalVariable(name: "gpio", scope: !7271, file: !1025, line: 413, type: !957)
!7280 = !DILocation(line: 0, scope: !7271)
!7281 = !DILocation(line: 412, column: 45, scope: !7271)
!7282 = !DILocation(line: 413, column: 44, scope: !7271)
!7283 = !DILocation(line: 415, column: 11, scope: !7271)
!7284 = !DILocation(line: 415, column: 9, scope: !7271)
!7285 = !DILocation(line: 417, column: 2, scope: !7271)
!7286 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1025, file: !1025, line: 420, type: !909, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7287)
!7287 = !{!7288, !7289, !7290, !7291, !7292, !7293}
!7288 = !DILocalVariable(name: "dev", arg: 1, scope: !7286, file: !1025, line: 420, type: !884)
!7289 = !DILocalVariable(name: "mask", arg: 2, scope: !7286, file: !1025, line: 421, type: !911)
!7290 = !DILocalVariable(name: "value", arg: 3, scope: !7286, file: !1025, line: 422, type: !906)
!7291 = !DILocalVariable(name: "cfg", scope: !7286, file: !1025, line: 424, type: !7278)
!7292 = !DILocalVariable(name: "gpio", scope: !7286, file: !1025, line: 425, type: !957)
!7293 = !DILocalVariable(name: "port_value", scope: !7286, file: !1025, line: 426, type: !155)
!7294 = !DILocation(line: 0, scope: !7286)
!7295 = !DILocation(line: 424, column: 45, scope: !7286)
!7296 = !DILocation(line: 425, column: 44, scope: !7286)
!7297 = !DILocation(line: 430, column: 15, scope: !7286)
!7298 = !DILocation(line: 431, column: 46, scope: !7286)
!7299 = !DILocation(line: 431, column: 44, scope: !7286)
!7300 = !DILocation(line: 431, column: 61, scope: !7286)
!7301 = !DILocation(line: 431, column: 53, scope: !7286)
!7302 = !DILocation(line: 431, column: 2, scope: !7286)
!7303 = !DILocation(line: 435, column: 2, scope: !7286)
!7304 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1025, file: !1025, line: 438, type: !914, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7305)
!7305 = !{!7306, !7307, !7308, !7309}
!7306 = !DILocalVariable(name: "dev", arg: 1, scope: !7304, file: !1025, line: 438, type: !884)
!7307 = !DILocalVariable(name: "pins", arg: 2, scope: !7304, file: !1025, line: 439, type: !911)
!7308 = !DILocalVariable(name: "cfg", scope: !7304, file: !1025, line: 441, type: !7278)
!7309 = !DILocalVariable(name: "gpio", scope: !7304, file: !1025, line: 442, type: !957)
!7310 = !DILocation(line: 0, scope: !7304)
!7311 = !DILocation(line: 441, column: 45, scope: !7304)
!7312 = !DILocation(line: 442, column: 44, scope: !7304)
!7313 = !DILocation(line: 448, column: 2, scope: !7304)
!7314 = !DILocation(line: 450, column: 2, scope: !7304)
!7315 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1025, file: !1025, line: 453, type: !914, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7316)
!7316 = !{!7317, !7318, !7319, !7320}
!7317 = !DILocalVariable(name: "dev", arg: 1, scope: !7315, file: !1025, line: 453, type: !884)
!7318 = !DILocalVariable(name: "pins", arg: 2, scope: !7315, file: !1025, line: 454, type: !911)
!7319 = !DILocalVariable(name: "cfg", scope: !7315, file: !1025, line: 456, type: !7278)
!7320 = !DILocalVariable(name: "gpio", scope: !7315, file: !1025, line: 457, type: !957)
!7321 = !DILocation(line: 0, scope: !7315)
!7322 = !DILocation(line: 456, column: 45, scope: !7315)
!7323 = !DILocation(line: 457, column: 44, scope: !7315)
!7324 = !DILocation(line: 467, column: 2, scope: !7315)
!7325 = !DILocation(line: 470, column: 2, scope: !7315)
!7326 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1025, file: !1025, line: 473, type: !914, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7327)
!7327 = !{!7328, !7329, !7330, !7331}
!7328 = !DILocalVariable(name: "dev", arg: 1, scope: !7326, file: !1025, line: 473, type: !884)
!7329 = !DILocalVariable(name: "pins", arg: 2, scope: !7326, file: !1025, line: 474, type: !911)
!7330 = !DILocalVariable(name: "cfg", scope: !7326, file: !1025, line: 476, type: !7278)
!7331 = !DILocalVariable(name: "gpio", scope: !7326, file: !1025, line: 477, type: !957)
!7332 = !DILocation(line: 0, scope: !7326)
!7333 = !DILocation(line: 476, column: 45, scope: !7326)
!7334 = !DILocation(line: 477, column: 44, scope: !7326)
!7335 = !DILocation(line: 484, column: 2, scope: !7326)
!7336 = !DILocation(line: 487, column: 2, scope: !7326)
!7337 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1025, file: !1025, line: 594, type: !920, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7338)
!7338 = !{!7339, !7340, !7341, !7342, !7343, !7344, !7346, !7347, !7348}
!7339 = !DILocalVariable(name: "dev", arg: 1, scope: !7337, file: !1025, line: 594, type: !884)
!7340 = !DILocalVariable(name: "pin", arg: 2, scope: !7337, file: !1025, line: 595, type: !899)
!7341 = !DILocalVariable(name: "mode", arg: 3, scope: !7337, file: !1025, line: 596, type: !858)
!7342 = !DILocalVariable(name: "trig", arg: 4, scope: !7337, file: !1025, line: 597, type: !864)
!7343 = !DILocalVariable(name: "cfg", scope: !7337, file: !1025, line: 599, type: !7278)
!7344 = !DILocalVariable(name: "data", scope: !7337, file: !1025, line: 600, type: !7345)
!7345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 32)
!7346 = !DILocalVariable(name: "edge", scope: !7337, file: !1025, line: 601, type: !104)
!7347 = !DILocalVariable(name: "err", scope: !7337, file: !1025, line: 602, type: !104)
!7348 = !DILabel(scope: !7337, name: "exit", file: !1025, line: 643)
!7349 = !DILocation(line: 0, scope: !7337)
!7350 = !DILocation(line: 599, column: 45, scope: !7337)
!7351 = !DILocation(line: 604, column: 6, scope: !7337)
!7352 = !DILocation(line: 605, column: 34, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7354, file: !1025, line: 605, column: 7)
!7354 = distinct !DILexicalBlock(scope: !7355, file: !1025, line: 604, column: 38)
!7355 = distinct !DILexicalBlock(scope: !7337, file: !1025, line: 604, column: 6)
!7356 = !DILocation(line: 605, column: 7, scope: !7353)
!7357 = !DILocation(line: 605, column: 47, scope: !7353)
!7358 = !DILocation(line: 605, column: 39, scope: !7353)
!7359 = !DILocation(line: 605, column: 7, scope: !7354)
!7360 = !DILocation(line: 606, column: 4, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7353, file: !1025, line: 605, column: 53)
!7362 = !DILocation(line: 607, column: 4, scope: !7361)
!7363 = !DILocation(line: 608, column: 4, scope: !7361)
!7364 = !DILocation(line: 609, column: 3, scope: !7361)
!7365 = !DILocation(line: 600, column: 38, scope: !7337)
!7366 = !DILocation(line: 620, column: 30, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7337, file: !1025, line: 620, column: 6)
!7368 = !DILocation(line: 620, column: 6, scope: !7367)
!7369 = !DILocation(line: 620, column: 57, scope: !7367)
!7370 = !DILocation(line: 620, column: 6, scope: !7337)
!7371 = !DILocation(line: 625, column: 29, scope: !7337)
!7372 = !DILocation(line: 625, column: 2, scope: !7337)
!7373 = !DILocation(line: 627, column: 2, scope: !7337)
!7374 = !DILocation(line: 630, column: 3, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7337, file: !1025, line: 627, column: 16)
!7376 = !DILocation(line: 633, column: 3, scope: !7375)
!7377 = !DILocation(line: 636, column: 3, scope: !7375)
!7378 = !DILocation(line: 639, column: 2, scope: !7337)
!7379 = !DILocation(line: 641, column: 2, scope: !7337)
!7380 = !DILocation(line: 643, column: 1, scope: !7337)
!7381 = !DILocation(line: 644, column: 2, scope: !7337)
!7382 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1025, file: !1025, line: 647, type: !924, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7383)
!7383 = !{!7384, !7385, !7386, !7387}
!7384 = !DILocalVariable(name: "dev", arg: 1, scope: !7382, file: !1025, line: 647, type: !884)
!7385 = !DILocalVariable(name: "callback", arg: 2, scope: !7382, file: !1025, line: 648, type: !926)
!7386 = !DILocalVariable(name: "set", arg: 3, scope: !7382, file: !1025, line: 649, type: !126)
!7387 = !DILocalVariable(name: "data", scope: !7382, file: !1025, line: 651, type: !7345)
!7388 = !DILocation(line: 0, scope: !7382)
!7389 = !DILocation(line: 651, column: 38, scope: !7382)
!7390 = !DILocation(line: 653, column: 37, scope: !7382)
!7391 = !DILocation(line: 653, column: 9, scope: !7382)
!7392 = !DILocation(line: 653, column: 2, scope: !7382)
!7393 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !7394, file: !7394, line: 38, type: !7395, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7398)
!7394 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7395 = !DISubroutineType(types: !7396)
!7396 = !{!104, !7397, !926, !126}
!7397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 32)
!7398 = !{!7399, !7400, !7401}
!7399 = !DILocalVariable(name: "callbacks", arg: 1, scope: !7393, file: !7394, line: 38, type: !7397)
!7400 = !DILocalVariable(name: "callback", arg: 2, scope: !7393, file: !7394, line: 39, type: !926)
!7401 = !DILocalVariable(name: "set", arg: 3, scope: !7393, file: !7394, line: 40, type: !126)
!7402 = !DILocation(line: 0, scope: !7393)
!7403 = !DILocation(line: 45, column: 7, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7393, file: !7394, line: 45, column: 6)
!7405 = !DILocation(line: 45, column: 6, scope: !7393)
!7406 = !DILocation(line: 46, column: 56, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7408, file: !7394, line: 46, column: 7)
!7408 = distinct !DILexicalBlock(scope: !7404, file: !7394, line: 45, column: 38)
!7409 = !DILocation(line: 46, column: 8, scope: !7407)
!7410 = !DILocation(line: 46, column: 7, scope: !7408)
!7411 = !DILocation(line: 51, column: 13, scope: !7404)
!7412 = !DILocation(line: 56, column: 43, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7414, file: !7394, line: 55, column: 11)
!7414 = distinct !DILexicalBlock(scope: !7393, file: !7394, line: 55, column: 6)
!7415 = !DILocation(line: 56, column: 3, scope: !7413)
!7416 = !DILocation(line: 57, column: 2, scope: !7413)
!7417 = !DILocation(line: 60, column: 1, scope: !7393)
!7418 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !931, file: !931, line: 261, type: !7419, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7421)
!7419 = !DISubroutineType(types: !7420)
!7420 = !{!126, !7397}
!7421 = !{!7422}
!7422 = !DILocalVariable(name: "list", arg: 1, scope: !7418, file: !931, line: 261, type: !7397)
!7423 = !DILocation(line: 0, scope: !7418)
!7424 = !DILocation(line: 261, column: 1, scope: !7418)
!7425 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !931, file: !931, line: 417, type: !7426, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7428)
!7426 = !DISubroutineType(types: !7427)
!7427 = !{!126, !7397, !1098}
!7428 = !{!7429, !7430, !7431, !7432}
!7429 = !DILocalVariable(name: "list", arg: 1, scope: !7425, file: !931, line: 417, type: !7397)
!7430 = !DILocalVariable(name: "node", arg: 2, scope: !7425, file: !931, line: 417, type: !1098)
!7431 = !DILocalVariable(name: "prev", scope: !7425, file: !931, line: 417, type: !1098)
!7432 = !DILocalVariable(name: "test", scope: !7425, file: !931, line: 417, type: !1098)
!7433 = !DILocation(line: 0, scope: !7425)
!7434 = !DILocation(line: 417, column: 1, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7425, file: !931, line: 417, column: 1)
!7436 = !DILocation(line: 417, column: 1, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7435, file: !931, line: 417, column: 1)
!7438 = !DILocation(line: 417, column: 1, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7440, file: !931, line: 417, column: 1)
!7440 = distinct !DILexicalBlock(scope: !7437, file: !931, line: 417, column: 1)
!7441 = !DILocation(line: 417, column: 1, scope: !7440)
!7442 = distinct !{!7442, !7434, !7434}
!7443 = !DILocation(line: 417, column: 1, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7439, file: !931, line: 417, column: 1)
!7445 = !DILocation(line: 417, column: 1, scope: !7425)
!7446 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !931, file: !931, line: 298, type: !7447, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7449)
!7447 = !DISubroutineType(types: !7448)
!7448 = !{null, !7397, !1098}
!7449 = !{!7450, !7451}
!7450 = !DILocalVariable(name: "list", arg: 1, scope: !7446, file: !931, line: 298, type: !7397)
!7451 = !DILocalVariable(name: "node", arg: 2, scope: !7446, file: !931, line: 298, type: !1098)
!7452 = !DILocation(line: 0, scope: !7446)
!7453 = !DILocation(line: 298, column: 1, scope: !7446)
!7454 = !DILocation(line: 298, column: 1, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7446, file: !931, line: 298, column: 1)
!7456 = !DILocation(line: 298, column: 1, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7455, file: !931, line: 298, column: 1)
!7458 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !931, file: !931, line: 231, type: !7459, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7461)
!7459 = !DISubroutineType(types: !7460)
!7460 = !{!1098, !7397}
!7461 = !{!7462}
!7462 = !DILocalVariable(name: "list", arg: 1, scope: !7458, file: !931, line: 231, type: !7397)
!7463 = !DILocation(line: 0, scope: !7458)
!7464 = !DILocation(line: 233, column: 15, scope: !7458)
!7465 = !DILocation(line: 233, column: 2, scope: !7458)
!7466 = distinct !DISubprogram(name: "z_snode_next_set", scope: !931, file: !931, line: 209, type: !7467, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7469)
!7467 = !DISubroutineType(types: !7468)
!7468 = !{null, !1098, !1098}
!7469 = !{!7470, !7471}
!7470 = !DILocalVariable(name: "parent", arg: 1, scope: !7466, file: !931, line: 209, type: !1098)
!7471 = !DILocalVariable(name: "child", arg: 2, scope: !7466, file: !931, line: 209, type: !1098)
!7472 = !DILocation(line: 0, scope: !7466)
!7473 = !DILocation(line: 211, column: 10, scope: !7466)
!7474 = !DILocation(line: 211, column: 15, scope: !7466)
!7475 = !DILocation(line: 212, column: 1, scope: !7466)
!7476 = distinct !DISubprogram(name: "z_slist_head_set", scope: !931, file: !931, line: 214, type: !7447, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7477)
!7477 = !{!7478, !7479}
!7478 = !DILocalVariable(name: "list", arg: 1, scope: !7476, file: !931, line: 214, type: !7397)
!7479 = !DILocalVariable(name: "node", arg: 2, scope: !7476, file: !931, line: 214, type: !1098)
!7480 = !DILocation(line: 0, scope: !7476)
!7481 = !DILocation(line: 216, column: 8, scope: !7476)
!7482 = !DILocation(line: 216, column: 13, scope: !7476)
!7483 = !DILocation(line: 217, column: 1, scope: !7476)
!7484 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !931, file: !931, line: 243, type: !7459, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7485)
!7485 = !{!7486}
!7486 = !DILocalVariable(name: "list", arg: 1, scope: !7484, file: !931, line: 243, type: !7397)
!7487 = !DILocation(line: 0, scope: !7484)
!7488 = !DILocation(line: 245, column: 15, scope: !7484)
!7489 = !DILocation(line: 245, column: 2, scope: !7484)
!7490 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !931, file: !931, line: 219, type: !7447, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7491)
!7491 = !{!7492, !7493}
!7492 = !DILocalVariable(name: "list", arg: 1, scope: !7490, file: !931, line: 219, type: !7397)
!7493 = !DILocalVariable(name: "node", arg: 2, scope: !7490, file: !931, line: 219, type: !1098)
!7494 = !DILocation(line: 0, scope: !7490)
!7495 = !DILocation(line: 221, column: 8, scope: !7490)
!7496 = !DILocation(line: 221, column: 13, scope: !7490)
!7497 = !DILocation(line: 222, column: 1, scope: !7490)
!7498 = distinct !DISubprogram(name: "sys_slist_remove", scope: !931, file: !931, line: 401, type: !7499, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7501)
!7499 = !DISubroutineType(types: !7500)
!7500 = !{null, !7397, !1098, !1098}
!7501 = !{!7502, !7503, !7504}
!7502 = !DILocalVariable(name: "list", arg: 1, scope: !7498, file: !931, line: 401, type: !7397)
!7503 = !DILocalVariable(name: "prev_node", arg: 2, scope: !7498, file: !931, line: 401, type: !1098)
!7504 = !DILocalVariable(name: "node", arg: 3, scope: !7498, file: !931, line: 401, type: !1098)
!7505 = !DILocation(line: 0, scope: !7498)
!7506 = !DILocation(line: 401, column: 1, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7498, file: !931, line: 401, column: 1)
!7508 = !DILocation(line: 0, scope: !7507)
!7509 = !DILocation(line: 401, column: 1, scope: !7498)
!7510 = !DILocation(line: 401, column: 1, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7507, file: !931, line: 401, column: 1)
!7512 = !DILocation(line: 401, column: 1, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7511, file: !931, line: 401, column: 1)
!7514 = !DILocation(line: 401, column: 1, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7513, file: !931, line: 401, column: 1)
!7516 = !DILocation(line: 401, column: 1, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7507, file: !931, line: 401, column: 1)
!7518 = !DILocation(line: 401, column: 1, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7517, file: !931, line: 401, column: 1)
!7520 = !DILocation(line: 401, column: 1, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7519, file: !931, line: 401, column: 1)
!7522 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !931, file: !931, line: 285, type: !7523, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7525)
!7523 = !DISubroutineType(types: !7524)
!7524 = !{!1098, !1098}
!7525 = !{!7526}
!7526 = !DILocalVariable(name: "node", arg: 1, scope: !7522, file: !931, line: 285, type: !1098)
!7527 = !DILocation(line: 0, scope: !7522)
!7528 = !DILocation(line: 285, column: 1, scope: !7522)
!7529 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !931, file: !931, line: 274, type: !7523, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7530)
!7530 = !{!7531}
!7531 = !DILocalVariable(name: "node", arg: 1, scope: !7529, file: !931, line: 274, type: !1098)
!7532 = !DILocation(line: 0, scope: !7529)
!7533 = !DILocation(line: 274, column: 1, scope: !7529)
!7534 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !931, file: !931, line: 204, type: !7523, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7535)
!7535 = !{!7536}
!7536 = !DILocalVariable(name: "node", arg: 1, scope: !7534, file: !931, line: 204, type: !1098)
!7537 = !DILocation(line: 0, scope: !7534)
!7538 = !DILocation(line: 206, column: 15, scope: !7534)
!7539 = !DILocation(line: 206, column: 2, scope: !7534)
!7540 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1025, file: !1025, line: 342, type: !141, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7541)
!7541 = !{!7542, !7543, !7544}
!7542 = !DILocalVariable(name: "pin", arg: 1, scope: !7540, file: !1025, line: 342, type: !104)
!7543 = !DILocalVariable(name: "line", scope: !7540, file: !1025, line: 344, type: !155)
!7544 = !DILocalVariable(name: "port", scope: !7540, file: !1025, line: 345, type: !104)
!7545 = !DILocation(line: 0, scope: !7540)
!7546 = !DILocation(line: 344, column: 18, scope: !7540)
!7547 = !{i32 983040, i32 0}
!7548 = !DILocation(line: 356, column: 9, scope: !7540)
!7549 = !DILocation(line: 370, column: 2, scope: !7540)
!7550 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1025, file: !1025, line: 37, type: !571, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7551)
!7551 = !{!7552, !7553, !7554}
!7552 = !DILocalVariable(name: "line", arg: 1, scope: !7550, file: !1025, line: 37, type: !104)
!7553 = !DILocalVariable(name: "arg", arg: 2, scope: !7550, file: !1025, line: 37, type: !103)
!7554 = !DILocalVariable(name: "data", scope: !7550, file: !1025, line: 39, type: !7345)
!7555 = !DILocation(line: 0, scope: !7550)
!7556 = !DILocation(line: 41, column: 29, scope: !7550)
!7557 = !DILocation(line: 41, column: 39, scope: !7550)
!7558 = !DILocation(line: 41, column: 44, scope: !7550)
!7559 = !DILocation(line: 41, column: 2, scope: !7550)
!7560 = !DILocation(line: 42, column: 1, scope: !7550)
!7561 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1025, file: !1025, line: 376, type: !7562, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7564)
!7562 = !DISubroutineType(types: !7563)
!7563 = !{!104, !104, !104}
!7564 = !{!7565, !7566, !7567, !7569, !7570}
!7565 = !DILocalVariable(name: "port", arg: 1, scope: !7561, file: !1025, line: 376, type: !104)
!7566 = !DILocalVariable(name: "pin", arg: 2, scope: !7561, file: !1025, line: 376, type: !104)
!7567 = !DILocalVariable(name: "clk", scope: !7561, file: !1025, line: 386, type: !7568)
!7568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !884)
!7569 = !DILocalVariable(name: "pclken", scope: !7561, file: !1025, line: 387, type: !1141)
!7570 = !DILocalVariable(name: "ret", scope: !7561, file: !1025, line: 396, type: !104)
!7571 = !DILocation(line: 0, scope: !7561)
!7572 = !DILocation(line: 387, column: 2, scope: !7561)
!7573 = !DILocation(line: 387, column: 22, scope: !7561)
!7574 = !DILocation(line: 399, column: 8, scope: !7561)
!7575 = !DILocation(line: 400, column: 10, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7561, file: !1025, line: 400, column: 6)
!7577 = !DILocation(line: 400, column: 6, scope: !7561)
!7578 = !DILocation(line: 405, column: 2, scope: !7561)
!7579 = !DILocation(line: 407, column: 2, scope: !7561)
!7580 = !DILocation(line: 408, column: 1, scope: !7561)
!7581 = distinct !DISubprogram(name: "clock_control_on", scope: !660, file: !660, line: 123, type: !990, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7582)
!7582 = !{!7583, !7584, !7585}
!7583 = !DILocalVariable(name: "dev", arg: 1, scope: !7581, file: !660, line: 123, type: !884)
!7584 = !DILocalVariable(name: "sys", arg: 2, scope: !7581, file: !660, line: 124, type: !755)
!7585 = !DILocalVariable(name: "api", scope: !7581, file: !660, line: 126, type: !983)
!7586 = !DILocation(line: 0, scope: !7581)
!7587 = !DILocation(line: 127, column: 49, scope: !7581)
!7588 = !DILocation(line: 129, column: 14, scope: !7581)
!7589 = !DILocation(line: 129, column: 9, scope: !7581)
!7590 = !DILocation(line: 129, column: 2, scope: !7581)
!7591 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1025, file: !1025, line: 311, type: !6725, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7592)
!7592 = !{!7593, !7594, !7595}
!7593 = !DILocalVariable(name: "port", arg: 1, scope: !7591, file: !1025, line: 311, type: !104)
!7594 = !DILocalVariable(name: "pin", arg: 2, scope: !7591, file: !1025, line: 311, type: !104)
!7595 = !DILocalVariable(name: "line", scope: !7591, file: !1025, line: 313, type: !155)
!7596 = !DILocation(line: 0, scope: !7591)
!7597 = !DILocation(line: 313, column: 18, scope: !7591)
!7598 = !DILocation(line: 337, column: 2, scope: !7591)
!7599 = !DILocation(line: 340, column: 1, scope: !7591)
!7600 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1025, file: !1025, line: 295, type: !7601, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7603)
!7601 = !DISubroutineType(types: !7602)
!7602 = !{!155, !104}
!7603 = !{!7604}
!7604 = !DILocalVariable(name: "pin", arg: 1, scope: !7600, file: !1025, line: 295, type: !104)
!7605 = !DILocation(line: 0, scope: !7600)
!7606 = !DILocation(line: 307, column: 46, scope: !7600)
!7607 = !DILocation(line: 307, column: 27, scope: !7600)
!7608 = !DILocation(line: 307, column: 32, scope: !7600)
!7609 = !DILocation(line: 307, column: 14, scope: !7600)
!7610 = !DILocation(line: 307, column: 39, scope: !7600)
!7611 = !DILocation(line: 307, column: 2, scope: !7600)
!7612 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !4778, file: !4778, line: 671, type: !7613, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7615)
!7613 = !DISubroutineType(types: !7614)
!7614 = !{null, !155, !155}
!7615 = !{!7616, !7617}
!7616 = !DILocalVariable(name: "Port", arg: 1, scope: !7612, file: !4778, line: 671, type: !155)
!7617 = !DILocalVariable(name: "Line", arg: 2, scope: !7612, file: !4778, line: 671, type: !155)
!7618 = !DILocation(line: 0, scope: !7612)
!7619 = !DILocation(line: 673, column: 3, scope: !7612)
!7620 = !DILocalVariable(name: "value", arg: 1, scope: !7621, file: !4931, line: 373, type: !155)
!7621 = distinct !DISubprogram(name: "__RBIT", scope: !4931, file: !4931, line: 373, type: !5939, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7622)
!7622 = !{!7620, !7623}
!7623 = !DILocalVariable(name: "result", scope: !7621, file: !4931, line: 375, type: !155)
!7624 = !DILocation(line: 0, scope: !7621, inlinedAt: !7625)
!7625 = distinct !DILocation(line: 673, column: 3, scope: !7612)
!7626 = !DILocation(line: 380, column: 4, scope: !7621, inlinedAt: !7625)
!7627 = !{i64 2831748}
!7628 = !DILocalVariable(name: "value", arg: 1, scope: !7629, file: !4931, line: 403, type: !155)
!7629 = distinct !DISubprogram(name: "__CLZ", scope: !4931, file: !4931, line: 403, type: !7630, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7632)
!7630 = !DISubroutineType(types: !7631)
!7631 = !{!123, !155}
!7632 = !{!7628}
!7633 = !DILocation(line: 0, scope: !7629, inlinedAt: !7634)
!7634 = distinct !DILocation(line: 673, column: 3, scope: !7612)
!7635 = !DILocation(line: 414, column: 7, scope: !7629, inlinedAt: !7634)
!7636 = !DILocation(line: 674, column: 1, scope: !7612)
!7637 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !7394, file: !7394, line: 69, type: !7638, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7640)
!7638 = !DISubroutineType(types: !7639)
!7639 = !{null, !7397, !884, !155}
!7640 = !{!7641, !7642, !7643, !7644, !7645}
!7641 = !DILocalVariable(name: "list", arg: 1, scope: !7637, file: !7394, line: 69, type: !7397)
!7642 = !DILocalVariable(name: "port", arg: 2, scope: !7637, file: !7394, line: 70, type: !884)
!7643 = !DILocalVariable(name: "pins", arg: 3, scope: !7637, file: !7394, line: 71, type: !155)
!7644 = !DILocalVariable(name: "cb", scope: !7637, file: !7394, line: 73, type: !926)
!7645 = !DILocalVariable(name: "tmp", scope: !7637, file: !7394, line: 73, type: !926)
!7646 = !DILocation(line: 0, scope: !7637)
!7647 = !DILocation(line: 75, column: 2, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7637, file: !7394, line: 75, column: 2)
!7649 = !DILocation(line: 0, scope: !7648)
!7650 = !DILocation(line: 76, column: 11, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7652, file: !7394, line: 76, column: 7)
!7652 = distinct !DILexicalBlock(scope: !7653, file: !7394, line: 75, column: 57)
!7653 = distinct !DILexicalBlock(scope: !7648, file: !7394, line: 75, column: 2)
!7654 = !DILocation(line: 76, column: 20, scope: !7651)
!7655 = !DILocation(line: 76, column: 7, scope: !7652)
!7656 = !DILocation(line: 78, column: 8, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7651, file: !7394, line: 76, column: 28)
!7658 = !DILocation(line: 78, column: 4, scope: !7657)
!7659 = !DILocation(line: 79, column: 3, scope: !7657)
!7660 = !DILocation(line: 75, column: 2, scope: !7653)
!7661 = !DILocation(line: 81, column: 1, scope: !7637)
!7662 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !4778, file: !4778, line: 710, type: !5939, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7663)
!7663 = !{!7664}
!7664 = !DILocalVariable(name: "Line", arg: 1, scope: !7662, file: !4778, line: 710, type: !155)
!7665 = !DILocation(line: 0, scope: !7662)
!7666 = !DILocation(line: 712, column: 21, scope: !7662)
!7667 = !DILocation(line: 0, scope: !7621, inlinedAt: !7668)
!7668 = distinct !DILocation(line: 712, column: 76, scope: !7662)
!7669 = !DILocation(line: 380, column: 4, scope: !7621, inlinedAt: !7668)
!7670 = !DILocation(line: 0, scope: !7629, inlinedAt: !7671)
!7671 = distinct !DILocation(line: 712, column: 76, scope: !7662)
!7672 = !DILocation(line: 414, column: 7, scope: !7629, inlinedAt: !7671)
!7673 = !DILocation(line: 712, column: 73, scope: !7662)
!7674 = !DILocation(line: 712, column: 3, scope: !7662)
!7675 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !7676, file: !7676, line: 910, type: !7677, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7679)
!7676 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7677 = !DISubroutineType(types: !7678)
!7678 = !{null, !957, !155}
!7679 = !{!7680, !7681}
!7680 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7675, file: !7676, line: 910, type: !957)
!7681 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7675, file: !7676, line: 910, type: !155)
!7682 = !DILocation(line: 0, scope: !7675)
!7683 = !DILocation(line: 912, column: 3, scope: !7675)
!7684 = !DILocation(line: 913, column: 1, scope: !7675)
!7685 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !7676, file: !7676, line: 823, type: !7686, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7688)
!7686 = !DISubroutineType(types: !7687)
!7687 = !{!155, !957}
!7688 = !{!7689}
!7689 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7685, file: !7676, line: 823, type: !957)
!7690 = !DILocation(line: 0, scope: !7685)
!7691 = !DILocation(line: 825, column: 21, scope: !7685)
!7692 = !DILocation(line: 825, column: 3, scope: !7685)
!7693 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !7676, file: !7676, line: 812, type: !7677, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7694)
!7694 = !{!7695, !7696}
!7695 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7693, file: !7676, line: 812, type: !957)
!7696 = !DILocalVariable(name: "PortValue", arg: 2, scope: !7693, file: !7676, line: 812, type: !155)
!7697 = !DILocation(line: 0, scope: !7693)
!7698 = !DILocation(line: 814, column: 3, scope: !7693)
!7699 = !DILocation(line: 815, column: 1, scope: !7693)
!7700 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !7676, file: !7676, line: 771, type: !7686, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7701)
!7701 = !{!7702}
!7702 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7700, file: !7676, line: 771, type: !957)
!7703 = !DILocation(line: 0, scope: !7700)
!7704 = !DILocation(line: 773, column: 21, scope: !7700)
!7705 = !DILocation(line: 773, column: 3, scope: !7700)
!7706 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1025, file: !1025, line: 47, type: !7707, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7709)
!7707 = !DISubroutineType(types: !7708)
!7708 = !{!104, !900, !2248}
!7709 = !{!7710, !7711}
!7710 = !DILocalVariable(name: "flags", arg: 1, scope: !7706, file: !1025, line: 47, type: !900)
!7711 = !DILocalVariable(name: "pincfg", arg: 2, scope: !7706, file: !1025, line: 47, type: !2248)
!7712 = !DILocation(line: 0, scope: !7706)
!7713 = !DILocation(line: 50, column: 13, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !7706, file: !1025, line: 50, column: 6)
!7715 = !DILocation(line: 50, column: 28, scope: !7714)
!7716 = !DILocation(line: 50, column: 6, scope: !7706)
!7717 = !DILocation(line: 53, column: 11, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7714, file: !1025, line: 50, column: 34)
!7719 = !DILocation(line: 55, column: 14, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7718, file: !1025, line: 55, column: 7)
!7721 = !DILocation(line: 55, column: 35, scope: !7720)
!7722 = !DILocation(line: 55, column: 7, scope: !7718)
!7723 = !DILocation(line: 56, column: 14, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7725, file: !1025, line: 56, column: 8)
!7725 = distinct !DILexicalBlock(scope: !7720, file: !1025, line: 55, column: 41)
!7726 = !DILocation(line: 56, column: 8, scope: !7725)
!7727 = !DILocation(line: 0, scope: !7720)
!7728 = !DILocation(line: 66, column: 14, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7718, file: !1025, line: 66, column: 7)
!7730 = !DILocation(line: 66, column: 30, scope: !7729)
!7731 = !DILocation(line: 66, column: 7, scope: !7718)
!7732 = !DILocation(line: 67, column: 12, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7729, file: !1025, line: 66, column: 36)
!7734 = !DILocation(line: 68, column: 3, scope: !7733)
!7735 = !DILocation(line: 68, column: 21, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7729, file: !1025, line: 68, column: 14)
!7737 = !DILocation(line: 68, column: 39, scope: !7736)
!7738 = !DILocation(line: 68, column: 14, scope: !7729)
!7739 = !DILocation(line: 69, column: 12, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7736, file: !1025, line: 68, column: 45)
!7741 = !DILocation(line: 70, column: 3, scope: !7740)
!7742 = !DILocation(line: 72, column: 21, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7714, file: !1025, line: 72, column: 14)
!7744 = !DILocation(line: 72, column: 35, scope: !7743)
!7745 = !DILocation(line: 72, column: 14, scope: !7714)
!7746 = !DILocation(line: 77, column: 14, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !1025, line: 77, column: 7)
!7748 = distinct !DILexicalBlock(scope: !7743, file: !1025, line: 72, column: 41)
!7749 = !DILocation(line: 77, column: 30, scope: !7747)
!7750 = !DILocation(line: 77, column: 7, scope: !7748)
!7751 = !DILocation(line: 0, scope: !7714)
!7752 = !DILocation(line: 90, column: 1, scope: !7706)
!7753 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1025, file: !1025, line: 157, type: !7754, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7756)
!7754 = !DISubroutineType(types: !7755)
!7755 = !{null, !884, !104, !104, !104}
!7756 = !{!7757, !7758, !7759, !7760, !7761, !7762, !7763, !7764, !7765, !7766, !7767}
!7757 = !DILocalVariable(name: "dev", arg: 1, scope: !7753, file: !1025, line: 157, type: !884)
!7758 = !DILocalVariable(name: "pin", arg: 2, scope: !7753, file: !1025, line: 157, type: !104)
!7759 = !DILocalVariable(name: "conf", arg: 3, scope: !7753, file: !1025, line: 158, type: !104)
!7760 = !DILocalVariable(name: "func", arg: 4, scope: !7753, file: !1025, line: 158, type: !104)
!7761 = !DILocalVariable(name: "cfg", scope: !7753, file: !1025, line: 160, type: !7278)
!7762 = !DILocalVariable(name: "gpio", scope: !7753, file: !1025, line: 161, type: !957)
!7763 = !DILocalVariable(name: "pin_ll", scope: !7753, file: !1025, line: 163, type: !104)
!7764 = !DILocalVariable(name: "mode", scope: !7753, file: !1025, line: 227, type: !32)
!7765 = !DILocalVariable(name: "otype", scope: !7753, file: !1025, line: 227, type: !32)
!7766 = !DILocalVariable(name: "ospeed", scope: !7753, file: !1025, line: 227, type: !32)
!7767 = !DILocalVariable(name: "pupd", scope: !7753, file: !1025, line: 227, type: !32)
!7768 = !DILocation(line: 0, scope: !7753)
!7769 = !DILocation(line: 160, column: 45, scope: !7753)
!7770 = !DILocation(line: 161, column: 44, scope: !7753)
!7771 = !DILocation(line: 163, column: 15, scope: !7753)
!7772 = !DILocation(line: 229, column: 14, scope: !7753)
!7773 = !DILocation(line: 246, column: 47, scope: !7753)
!7774 = !DILocation(line: 246, column: 2, scope: !7753)
!7775 = !DILocation(line: 248, column: 43, scope: !7753)
!7776 = !DILocation(line: 248, column: 2, scope: !7753)
!7777 = !DILocation(line: 250, column: 40, scope: !7753)
!7778 = !DILocation(line: 250, column: 2, scope: !7753)
!7779 = !DILocation(line: 252, column: 11, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7753, file: !1025, line: 252, column: 6)
!7781 = !DILocation(line: 252, column: 6, scope: !7753)
!7782 = !DILocation(line: 253, column: 11, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7784, file: !1025, line: 253, column: 7)
!7784 = distinct !DILexicalBlock(scope: !7780, file: !1025, line: 252, column: 36)
!7785 = !DILocation(line: 253, column: 7, scope: !7784)
!7786 = !DILocation(line: 254, column: 4, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7783, file: !1025, line: 253, column: 16)
!7788 = !DILocation(line: 255, column: 3, scope: !7787)
!7789 = !DILocation(line: 256, column: 4, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7783, file: !1025, line: 255, column: 10)
!7791 = !DILocation(line: 260, column: 40, scope: !7753)
!7792 = !DILocation(line: 260, column: 2, scope: !7753)
!7793 = !DILocation(line: 265, column: 1, scope: !7753)
!7794 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1025, file: !1025, line: 137, type: !7601, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7795)
!7795 = !{!7796, !7797}
!7796 = !DILocalVariable(name: "pin", arg: 1, scope: !7794, file: !1025, line: 137, type: !104)
!7797 = !DILocalVariable(name: "pinval", scope: !7794, file: !1025, line: 139, type: !155)
!7798 = !DILocation(line: 0, scope: !7794)
!7799 = !DILocation(line: 149, column: 13, scope: !7794)
!7800 = !DILocation(line: 151, column: 2, scope: !7794)
!7801 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !7676, file: !7676, line: 342, type: !7802, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7804)
!7802 = !DISubroutineType(types: !7803)
!7803 = !{null, !957, !155, !155}
!7804 = !{!7805, !7806, !7807}
!7805 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7801, file: !7676, line: 342, type: !957)
!7806 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7801, file: !7676, line: 342, type: !155)
!7807 = !DILocalVariable(name: "OutputType", arg: 3, scope: !7801, file: !7676, line: 342, type: !155)
!7808 = !DILocation(line: 0, scope: !7801)
!7809 = !DILocation(line: 344, column: 3, scope: !7801)
!7810 = !DILocation(line: 345, column: 1, scope: !7801)
!7811 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !7676, file: !7676, line: 413, type: !7802, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7812)
!7812 = !{!7813, !7814, !7815}
!7813 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7811, file: !7676, line: 413, type: !957)
!7814 = !DILocalVariable(name: "Pin", arg: 2, scope: !7811, file: !7676, line: 413, type: !155)
!7815 = !DILocalVariable(name: "Speed", arg: 3, scope: !7811, file: !7676, line: 413, type: !155)
!7816 = !DILocation(line: 0, scope: !7811)
!7817 = !DILocation(line: 415, column: 3, scope: !7811)
!7818 = !DILocation(line: 0, scope: !7621, inlinedAt: !7819)
!7819 = distinct !DILocation(line: 415, column: 3, scope: !7811)
!7820 = !DILocation(line: 380, column: 4, scope: !7621, inlinedAt: !7819)
!7821 = !DILocation(line: 0, scope: !7629, inlinedAt: !7822)
!7822 = distinct !DILocation(line: 415, column: 3, scope: !7811)
!7823 = !DILocation(line: 414, column: 7, scope: !7629, inlinedAt: !7822)
!7824 = !DILocation(line: 0, scope: !7621, inlinedAt: !7825)
!7825 = distinct !DILocation(line: 415, column: 3, scope: !7811)
!7826 = !DILocation(line: 0, scope: !7629, inlinedAt: !7827)
!7827 = distinct !DILocation(line: 415, column: 3, scope: !7811)
!7828 = !DILocation(line: 417, column: 1, scope: !7811)
!7829 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !7676, file: !7676, line: 484, type: !7802, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7830)
!7830 = !{!7831, !7832, !7833}
!7831 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7829, file: !7676, line: 484, type: !957)
!7832 = !DILocalVariable(name: "Pin", arg: 2, scope: !7829, file: !7676, line: 484, type: !155)
!7833 = !DILocalVariable(name: "Pull", arg: 3, scope: !7829, file: !7676, line: 484, type: !155)
!7834 = !DILocation(line: 0, scope: !7829)
!7835 = !DILocation(line: 486, column: 3, scope: !7829)
!7836 = !DILocation(line: 0, scope: !7621, inlinedAt: !7837)
!7837 = distinct !DILocation(line: 486, column: 3, scope: !7829)
!7838 = !DILocation(line: 380, column: 4, scope: !7621, inlinedAt: !7837)
!7839 = !DILocation(line: 0, scope: !7629, inlinedAt: !7840)
!7840 = distinct !DILocation(line: 486, column: 3, scope: !7829)
!7841 = !DILocation(line: 414, column: 7, scope: !7629, inlinedAt: !7840)
!7842 = !DILocation(line: 0, scope: !7621, inlinedAt: !7843)
!7843 = distinct !DILocation(line: 486, column: 3, scope: !7829)
!7844 = !DILocation(line: 0, scope: !7629, inlinedAt: !7845)
!7845 = distinct !DILocation(line: 486, column: 3, scope: !7829)
!7846 = !DILocation(line: 487, column: 1, scope: !7829)
!7847 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !7676, file: !7676, line: 556, type: !7802, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7848)
!7848 = !{!7849, !7850, !7851}
!7849 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7847, file: !7676, line: 556, type: !957)
!7850 = !DILocalVariable(name: "Pin", arg: 2, scope: !7847, file: !7676, line: 556, type: !155)
!7851 = !DILocalVariable(name: "Alternate", arg: 3, scope: !7847, file: !7676, line: 556, type: !155)
!7852 = !DILocation(line: 0, scope: !7847)
!7853 = !DILocation(line: 558, column: 3, scope: !7847)
!7854 = !DILocation(line: 0, scope: !7621, inlinedAt: !7855)
!7855 = distinct !DILocation(line: 558, column: 3, scope: !7847)
!7856 = !DILocation(line: 380, column: 4, scope: !7621, inlinedAt: !7855)
!7857 = !DILocation(line: 0, scope: !7629, inlinedAt: !7858)
!7858 = distinct !DILocation(line: 558, column: 3, scope: !7847)
!7859 = !DILocation(line: 414, column: 7, scope: !7629, inlinedAt: !7858)
!7860 = !DILocation(line: 0, scope: !7621, inlinedAt: !7861)
!7861 = distinct !DILocation(line: 558, column: 3, scope: !7847)
!7862 = !DILocation(line: 0, scope: !7629, inlinedAt: !7863)
!7863 = distinct !DILocation(line: 558, column: 3, scope: !7847)
!7864 = !DILocation(line: 560, column: 1, scope: !7847)
!7865 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !7676, file: !7676, line: 633, type: !7802, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7866)
!7866 = !{!7867, !7868, !7869}
!7867 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7865, file: !7676, line: 633, type: !957)
!7868 = !DILocalVariable(name: "Pin", arg: 2, scope: !7865, file: !7676, line: 633, type: !155)
!7869 = !DILocalVariable(name: "Alternate", arg: 3, scope: !7865, file: !7676, line: 633, type: !155)
!7870 = !DILocation(line: 0, scope: !7865)
!7871 = !DILocation(line: 635, column: 3, scope: !7865)
!7872 = !DILocation(line: 0, scope: !7621, inlinedAt: !7873)
!7873 = distinct !DILocation(line: 635, column: 3, scope: !7865)
!7874 = !DILocation(line: 380, column: 4, scope: !7621, inlinedAt: !7873)
!7875 = !DILocation(line: 0, scope: !7629, inlinedAt: !7876)
!7876 = distinct !DILocation(line: 635, column: 3, scope: !7865)
!7877 = !DILocation(line: 414, column: 7, scope: !7629, inlinedAt: !7876)
!7878 = !DILocation(line: 0, scope: !7621, inlinedAt: !7879)
!7879 = distinct !DILocation(line: 635, column: 3, scope: !7865)
!7880 = !DILocation(line: 0, scope: !7629, inlinedAt: !7881)
!7881 = distinct !DILocation(line: 635, column: 3, scope: !7865)
!7882 = !DILocation(line: 637, column: 1, scope: !7865)
!7883 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !7676, file: !7676, line: 273, type: !7802, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7884)
!7884 = !{!7885, !7886, !7887}
!7885 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7883, file: !7676, line: 273, type: !957)
!7886 = !DILocalVariable(name: "Pin", arg: 2, scope: !7883, file: !7676, line: 273, type: !155)
!7887 = !DILocalVariable(name: "Mode", arg: 3, scope: !7883, file: !7676, line: 273, type: !155)
!7888 = !DILocation(line: 0, scope: !7883)
!7889 = !DILocation(line: 275, column: 3, scope: !7883)
!7890 = !DILocation(line: 0, scope: !7621, inlinedAt: !7891)
!7891 = distinct !DILocation(line: 275, column: 3, scope: !7883)
!7892 = !DILocation(line: 380, column: 4, scope: !7621, inlinedAt: !7891)
!7893 = !DILocation(line: 0, scope: !7629, inlinedAt: !7894)
!7894 = distinct !DILocation(line: 275, column: 3, scope: !7883)
!7895 = !DILocation(line: 414, column: 7, scope: !7629, inlinedAt: !7894)
!7896 = !DILocation(line: 0, scope: !7621, inlinedAt: !7897)
!7897 = distinct !DILocation(line: 275, column: 3, scope: !7883)
!7898 = !DILocation(line: 0, scope: !7629, inlinedAt: !7899)
!7899 = distinct !DILocation(line: 275, column: 3, scope: !7883)
!7900 = !DILocation(line: 276, column: 1, scope: !7883)
!7901 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1025, file: !1025, line: 698, type: !1038, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7902)
!7902 = !{!7903, !7904, !7905}
!7903 = !DILocalVariable(name: "dev", arg: 1, scope: !7901, file: !1025, line: 698, type: !884)
!7904 = !DILocalVariable(name: "data", scope: !7901, file: !1025, line: 700, type: !7345)
!7905 = !DILocalVariable(name: "ret", scope: !7901, file: !1025, line: 701, type: !104)
!7906 = !DILocation(line: 0, scope: !7901)
!7907 = !DILocation(line: 700, column: 38, scope: !7901)
!7908 = !DILocation(line: 703, column: 8, scope: !7901)
!7909 = !DILocation(line: 703, column: 12, scope: !7901)
!7910 = !DILocation(line: 705, column: 7, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7901, file: !1025, line: 705, column: 6)
!7912 = !DILocation(line: 705, column: 6, scope: !7901)
!7913 = !DILocation(line: 722, column: 8, scope: !7901)
!7914 = !DILocation(line: 723, column: 10, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7901, file: !1025, line: 723, column: 6)
!7916 = !DILocation(line: 723, column: 6, scope: !7901)
!7917 = !DILocation(line: 731, column: 1, scope: !7901)
!7918 = distinct !DISubprogram(name: "device_is_ready", scope: !2920, file: !2920, line: 47, type: !7919, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7921)
!7919 = !DISubroutineType(types: !7920)
!7920 = !{!126, !884}
!7921 = !{!7922}
!7922 = !DILocalVariable(name: "dev", arg: 1, scope: !7918, file: !2920, line: 47, type: !884)
!7923 = !DILocation(line: 0, scope: !7918)
!7924 = !DILocation(line: 55, column: 2, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7918, file: !2920, line: 55, column: 2)
!7926 = !{i64 2154257369}
!7927 = !DILocation(line: 56, column: 9, scope: !7918)
!7928 = !DILocation(line: 56, column: 2, scope: !7918)
!7929 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1025, file: !1025, line: 270, type: !7930, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7932)
!7930 = !DISubroutineType(types: !7931)
!7931 = !{!104, !884, !126}
!7932 = !{!7933, !7934, !7935, !7936, !7937}
!7933 = !DILocalVariable(name: "dev", arg: 1, scope: !7929, file: !1025, line: 270, type: !884)
!7934 = !DILocalVariable(name: "on", arg: 2, scope: !7929, file: !1025, line: 270, type: !126)
!7935 = !DILocalVariable(name: "cfg", scope: !7929, file: !1025, line: 272, type: !7278)
!7936 = !DILocalVariable(name: "ret", scope: !7929, file: !1025, line: 273, type: !104)
!7937 = !DILocalVariable(name: "clk", scope: !7929, file: !1025, line: 278, type: !7568)
!7938 = !DILocation(line: 0, scope: !7929)
!7939 = !DILocation(line: 272, column: 45, scope: !7929)
!7940 = !DILocation(line: 282, column: 38, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7942, file: !1025, line: 280, column: 10)
!7942 = distinct !DILexicalBlock(scope: !7929, file: !1025, line: 280, column: 6)
!7943 = !DILocation(line: 282, column: 6, scope: !7941)
!7944 = !DILocation(line: 281, column: 9, scope: !7941)
!7945 = !DILocation(line: 293, column: 1, scope: !7929)
!7946 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !110, file: !110, line: 730, type: !7919, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7947)
!7947 = !{!7948}
!7948 = !DILocalVariable(name: "dev", arg: 1, scope: !7946, file: !110, line: 730, type: !884)
!7949 = !DILocation(line: 0, scope: !7946)
!7950 = !DILocation(line: 732, column: 9, scope: !7946)
!7951 = !DILocation(line: 732, column: 2, scope: !7946)
!7952 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1025, file: !1025, line: 496, type: !7953, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !855, retainedNodes: !7955)
!7953 = !DISubroutineType(types: !7954)
!7954 = !{!104, !884, !104, !104, !104}
!7955 = !{!7956, !7957, !7958, !7959, !7960, !7961}
!7956 = !DILocalVariable(name: "dev", arg: 1, scope: !7952, file: !1025, line: 496, type: !884)
!7957 = !DILocalVariable(name: "pin", arg: 2, scope: !7952, file: !1025, line: 496, type: !104)
!7958 = !DILocalVariable(name: "conf", arg: 3, scope: !7952, file: !1025, line: 496, type: !104)
!7959 = !DILocalVariable(name: "func", arg: 4, scope: !7952, file: !1025, line: 496, type: !104)
!7960 = !DILocalVariable(name: "ret", scope: !7952, file: !1025, line: 498, type: !104)
!7961 = !DILocalVariable(name: "gpio_out", scope: !7962, file: !1025, line: 508, type: !155)
!7962 = distinct !DILexicalBlock(scope: !7963, file: !1025, line: 507, column: 27)
!7963 = distinct !DILexicalBlock(scope: !7952, file: !1025, line: 507, column: 6)
!7964 = !DILocation(line: 0, scope: !7952)
!7965 = !DILocation(line: 505, column: 2, scope: !7952)
!7966 = !DILocation(line: 507, column: 11, scope: !7963)
!7967 = !DILocation(line: 507, column: 6, scope: !7952)
!7968 = !DILocation(line: 508, column: 28, scope: !7962)
!7969 = !DILocation(line: 0, scope: !7962)
!7970 = !DILocation(line: 510, column: 16, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7962, file: !1025, line: 510, column: 7)
!7972 = !DILocation(line: 0, scope: !7971)
!7973 = !DILocation(line: 510, column: 7, scope: !7962)
!7974 = !DILocation(line: 511, column: 4, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7971, file: !1025, line: 510, column: 32)
!7976 = !DILocation(line: 512, column: 3, scope: !7975)
!7977 = !DILocation(line: 513, column: 4, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7979, file: !1025, line: 512, column: 39)
!7979 = distinct !DILexicalBlock(scope: !7971, file: !1025, line: 512, column: 14)
!7980 = !DILocation(line: 514, column: 3, scope: !7978)
!7981 = !DILocation(line: 518, column: 1, scope: !7952)
!7982 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1300, file: !1300, line: 526, type: !1201, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !7983)
!7983 = !{!7984, !7985, !7986}
!7984 = !DILocalVariable(name: "dev", arg: 1, scope: !7982, file: !1300, line: 526, type: !1203)
!7985 = !DILocalVariable(name: "c", arg: 2, scope: !7982, file: !1300, line: 526, type: !816)
!7986 = !DILocalVariable(name: "config", scope: !7982, file: !1300, line: 528, type: !7987)
!7987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 32)
!7988 = !DILocation(line: 0, scope: !7982)
!7989 = !DILocation(line: 528, column: 48, scope: !7982)
!7990 = !DILocation(line: 531, column: 40, scope: !7991)
!7991 = distinct !DILexicalBlock(scope: !7982, file: !1300, line: 531, column: 6)
!7992 = !DILocation(line: 531, column: 6, scope: !7991)
!7993 = !DILocation(line: 531, column: 6, scope: !7982)
!7994 = !DILocation(line: 532, column: 34, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7991, file: !1300, line: 531, column: 48)
!7996 = !DILocation(line: 532, column: 3, scope: !7995)
!7997 = !DILocation(line: 533, column: 2, scope: !7995)
!7998 = !DILocation(line: 539, column: 42, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7982, file: !1300, line: 539, column: 6)
!8000 = !DILocation(line: 539, column: 7, scope: !7999)
!8001 = !DILocation(line: 539, column: 6, scope: !7982)
!8002 = !DILocation(line: 543, column: 52, scope: !7982)
!8003 = !DILocation(line: 543, column: 22, scope: !7982)
!8004 = !DILocation(line: 543, column: 5, scope: !7982)
!8005 = !DILocation(line: 545, column: 2, scope: !7982)
!8006 = !DILocation(line: 546, column: 1, scope: !7982)
!8007 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1300, file: !1300, line: 548, type: !1220, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8008)
!8008 = !{!8009, !8010, !8011, !8012}
!8009 = !DILocalVariable(name: "dev", arg: 1, scope: !8007, file: !1300, line: 548, type: !1203)
!8010 = !DILocalVariable(name: "c", arg: 2, scope: !8007, file: !1300, line: 549, type: !124)
!8011 = !DILocalVariable(name: "config", scope: !8007, file: !1300, line: 551, type: !7987)
!8012 = !DILocalVariable(name: "key", scope: !8007, file: !1300, line: 555, type: !32)
!8013 = !DILocation(line: 0, scope: !8007)
!8014 = !DILocation(line: 551, column: 48, scope: !8007)
!8015 = !DILocation(line: 562, column: 2, scope: !8007)
!8016 = !DILocation(line: 563, column: 41, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8018, file: !1300, line: 563, column: 7)
!8018 = distinct !DILexicalBlock(scope: !8007, file: !1300, line: 562, column: 12)
!8019 = !DILocation(line: 563, column: 7, scope: !8017)
!8020 = !DILocation(line: 563, column: 7, scope: !8018)
!8021 = !DILocation(line: 55, column: 2, scope: !8022, inlinedAt: !8026)
!8022 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4757, file: !4757, line: 42, type: !4758, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8023)
!8023 = !{!8024, !8025}
!8024 = !DILocalVariable(name: "key", scope: !8022, file: !4757, line: 44, type: !32)
!8025 = !DILocalVariable(name: "tmp", scope: !8022, file: !4757, line: 53, type: !32)
!8026 = distinct !DILocation(line: 564, column: 10, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8017, file: !1300, line: 563, column: 49)
!8028 = !{i64 1997293}
!8029 = !DILocation(line: 0, scope: !8022, inlinedAt: !8026)
!8030 = !DILocation(line: 565, column: 42, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !8027, file: !1300, line: 565, column: 8)
!8032 = !DILocation(line: 565, column: 8, scope: !8031)
!8033 = !DILocation(line: 565, column: 8, scope: !8027)
!8034 = !DILocalVariable(name: "key", arg: 1, scope: !8035, file: !4757, line: 84, type: !32)
!8035 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4757, file: !4757, line: 84, type: !4768, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8036)
!8036 = !{!8034}
!8037 = !DILocation(line: 0, scope: !8035, inlinedAt: !8038)
!8038 = distinct !DILocation(line: 568, column: 4, scope: !8027)
!8039 = !DILocation(line: 95, column: 2, scope: !8035, inlinedAt: !8038)
!8040 = !{i64 1998110}
!8041 = !DILocation(line: 569, column: 3, scope: !8027)
!8042 = distinct !{!8042, !8015, !8043}
!8043 = !DILocation(line: 570, column: 2, scope: !8007)
!8044 = !DILocation(line: 592, column: 33, scope: !8007)
!8045 = !DILocation(line: 592, column: 2, scope: !8007)
!8046 = !DILocation(line: 0, scope: !8035, inlinedAt: !8047)
!8047 = distinct !DILocation(line: 593, column: 2, scope: !8007)
!8048 = !DILocation(line: 95, column: 2, scope: !8035, inlinedAt: !8047)
!8049 = !DILocation(line: 594, column: 1, scope: !8007)
!8050 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1300, file: !1300, line: 596, type: !1224, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8051)
!8051 = !{!8052, !8053, !8054}
!8052 = !DILocalVariable(name: "dev", arg: 1, scope: !8050, file: !1300, line: 596, type: !1203)
!8053 = !DILocalVariable(name: "config", scope: !8050, file: !1300, line: 598, type: !7987)
!8054 = !DILocalVariable(name: "err", scope: !8050, file: !1300, line: 599, type: !155)
!8055 = !DILocation(line: 0, scope: !8050)
!8056 = !DILocation(line: 598, column: 48, scope: !8050)
!8057 = !DILocation(line: 606, column: 40, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8050, file: !1300, line: 606, column: 6)
!8059 = !DILocation(line: 606, column: 6, scope: !8058)
!8060 = !DILocation(line: 606, column: 6, scope: !8050)
!8061 = !DILocation(line: 610, column: 39, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8050, file: !1300, line: 610, column: 6)
!8063 = !DILocation(line: 610, column: 6, scope: !8062)
!8064 = !DILocation(line: 610, column: 6, scope: !8050)
!8065 = !DILocation(line: 614, column: 39, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8050, file: !1300, line: 614, column: 6)
!8067 = !DILocation(line: 614, column: 6, scope: !8066)
!8068 = !DILocation(line: 614, column: 6, scope: !8050)
!8069 = !DILocation(line: 619, column: 40, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8050, file: !1300, line: 619, column: 6)
!8071 = !DILocation(line: 619, column: 6, scope: !8070)
!8072 = !DILocation(line: 619, column: 6, scope: !8050)
!8073 = !DILocation(line: 623, column: 10, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8050, file: !1300, line: 623, column: 6)
!8075 = !DILocation(line: 623, column: 6, scope: !8050)
!8076 = !DILocation(line: 624, column: 34, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8074, file: !1300, line: 623, column: 24)
!8078 = !DILocation(line: 624, column: 3, scope: !8077)
!8079 = !DILocation(line: 625, column: 2, scope: !8077)
!8080 = !DILocation(line: 632, column: 10, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8050, file: !1300, line: 632, column: 6)
!8082 = !DILocation(line: 632, column: 6, scope: !8050)
!8083 = !DILocation(line: 633, column: 34, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8081, file: !1300, line: 632, column: 32)
!8085 = !DILocation(line: 633, column: 3, scope: !8084)
!8086 = !DILocation(line: 634, column: 2, scope: !8084)
!8087 = !DILocation(line: 636, column: 10, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8050, file: !1300, line: 636, column: 6)
!8089 = !DILocation(line: 636, column: 6, scope: !8050)
!8090 = !DILocation(line: 637, column: 33, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8088, file: !1300, line: 636, column: 31)
!8092 = !DILocation(line: 637, column: 3, scope: !8091)
!8093 = !DILocation(line: 638, column: 2, scope: !8091)
!8094 = !DILocation(line: 640, column: 10, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8050, file: !1300, line: 640, column: 6)
!8096 = !DILocation(line: 640, column: 6, scope: !8050)
!8097 = !DILocation(line: 641, column: 33, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8095, file: !1300, line: 640, column: 32)
!8099 = !DILocation(line: 641, column: 3, scope: !8098)
!8100 = !DILocation(line: 642, column: 2, scope: !8098)
!8101 = !DILocation(line: 646, column: 32, scope: !8050)
!8102 = !DILocation(line: 646, column: 2, scope: !8050)
!8103 = !DILocation(line: 648, column: 2, scope: !8050)
!8104 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1300, file: !1300, line: 419, type: !1228, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8105)
!8105 = !{!8106, !8107, !8108, !8109, !8111, !8112, !8113, !8114}
!8106 = !DILocalVariable(name: "dev", arg: 1, scope: !8104, file: !1300, line: 419, type: !1203)
!8107 = !DILocalVariable(name: "cfg", arg: 2, scope: !8104, file: !1300, line: 420, type: !1230)
!8108 = !DILocalVariable(name: "config", scope: !8104, file: !1300, line: 422, type: !7987)
!8109 = !DILocalVariable(name: "data", scope: !8104, file: !1300, line: 423, type: !8110)
!8110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 32)
!8111 = !DILocalVariable(name: "parity", scope: !8104, file: !1300, line: 424, type: !5199)
!8112 = !DILocalVariable(name: "stopbits", scope: !8104, file: !1300, line: 425, type: !5199)
!8113 = !DILocalVariable(name: "databits", scope: !8104, file: !1300, line: 426, type: !5199)
!8114 = !DILocalVariable(name: "flowctrl", scope: !8104, file: !1300, line: 428, type: !5199)
!8115 = !DILocation(line: 0, scope: !8104)
!8116 = !DILocation(line: 422, column: 48, scope: !8104)
!8117 = !DILocation(line: 423, column: 38, scope: !8104)
!8118 = !DILocation(line: 424, column: 56, scope: !8104)
!8119 = !DILocation(line: 424, column: 51, scope: !8104)
!8120 = !DILocation(line: 424, column: 26, scope: !8104)
!8121 = !DILocation(line: 425, column: 60, scope: !8104)
!8122 = !DILocation(line: 425, column: 55, scope: !8104)
!8123 = !DILocation(line: 425, column: 28, scope: !8104)
!8124 = !DILocation(line: 426, column: 60, scope: !8104)
!8125 = !DILocation(line: 426, column: 55, scope: !8104)
!8126 = !DILocation(line: 426, column: 28, scope: !8104)
!8127 = !DILocation(line: 428, column: 58, scope: !8104)
!8128 = !DILocation(line: 428, column: 53, scope: !8104)
!8129 = !DILocation(line: 428, column: 28, scope: !8104)
!8130 = !DILocation(line: 431, column: 44, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8104, file: !1300, line: 431, column: 6)
!8132 = !DILocation(line: 438, column: 22, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8104, file: !1300, line: 437, column: 6)
!8134 = !DILocation(line: 437, column: 6, scope: !8104)
!8135 = !DILocation(line: 448, column: 6, scope: !8104)
!8136 = !DILocation(line: 465, column: 47, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8104, file: !1300, line: 465, column: 6)
!8138 = !DILocation(line: 475, column: 21, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8104, file: !1300, line: 475, column: 6)
!8140 = !DILocation(line: 475, column: 6, scope: !8104)
!8141 = !DILocation(line: 476, column: 8, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8143, file: !1300, line: 476, column: 7)
!8143 = distinct !DILexicalBlock(scope: !8139, file: !1300, line: 475, column: 49)
!8144 = !DILocation(line: 477, column: 34, scope: !8142)
!8145 = !DILocation(line: 476, column: 7, scope: !8143)
!8146 = !DILocation(line: 482, column: 27, scope: !8104)
!8147 = !DILocation(line: 482, column: 2, scope: !8104)
!8148 = !DILocation(line: 484, column: 16, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8104, file: !1300, line: 484, column: 6)
!8150 = !DILocation(line: 484, column: 13, scope: !8149)
!8151 = !DILocation(line: 484, column: 6, scope: !8104)
!8152 = !DILocation(line: 485, column: 3, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8149, file: !1300, line: 484, column: 44)
!8154 = !DILocation(line: 486, column: 2, scope: !8153)
!8155 = !DILocation(line: 488, column: 18, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8104, file: !1300, line: 488, column: 6)
!8157 = !DILocation(line: 488, column: 15, scope: !8156)
!8158 = !DILocation(line: 488, column: 6, scope: !8104)
!8159 = !DILocation(line: 489, column: 3, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8156, file: !1300, line: 488, column: 48)
!8161 = !DILocation(line: 490, column: 2, scope: !8160)
!8162 = !DILocation(line: 492, column: 18, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8104, file: !1300, line: 492, column: 6)
!8164 = !DILocation(line: 492, column: 15, scope: !8163)
!8165 = !DILocation(line: 492, column: 6, scope: !8104)
!8166 = !DILocation(line: 493, column: 3, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8163, file: !1300, line: 492, column: 48)
!8168 = !DILocation(line: 494, column: 2, scope: !8167)
!8169 = !DILocation(line: 496, column: 18, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8104, file: !1300, line: 496, column: 6)
!8171 = !DILocation(line: 496, column: 15, scope: !8170)
!8172 = !DILocation(line: 496, column: 6, scope: !8104)
!8173 = !DILocation(line: 497, column: 3, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8170, file: !1300, line: 496, column: 46)
!8175 = !DILocation(line: 498, column: 2, scope: !8174)
!8176 = !DILocation(line: 500, column: 11, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8104, file: !1300, line: 500, column: 6)
!8178 = !DILocation(line: 500, column: 29, scope: !8177)
!8179 = !DILocation(line: 500, column: 20, scope: !8177)
!8180 = !DILocation(line: 500, column: 6, scope: !8104)
!8181 = !DILocation(line: 501, column: 3, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8177, file: !1300, line: 500, column: 40)
!8183 = !DILocation(line: 502, column: 26, scope: !8182)
!8184 = !DILocation(line: 502, column: 19, scope: !8182)
!8185 = !DILocation(line: 503, column: 2, scope: !8182)
!8186 = !DILocation(line: 505, column: 26, scope: !8104)
!8187 = !DILocation(line: 505, column: 2, scope: !8104)
!8188 = !DILocation(line: 506, column: 2, scope: !8104)
!8189 = !DILocation(line: 507, column: 1, scope: !8104)
!8190 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1300, file: !1300, line: 509, type: !1241, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8191)
!8191 = !{!8192, !8193, !8194}
!8192 = !DILocalVariable(name: "dev", arg: 1, scope: !8190, file: !1300, line: 509, type: !1203)
!8193 = !DILocalVariable(name: "cfg", arg: 2, scope: !8190, file: !1300, line: 510, type: !1243)
!8194 = !DILocalVariable(name: "data", scope: !8190, file: !1300, line: 512, type: !8110)
!8195 = !DILocation(line: 0, scope: !8190)
!8196 = !DILocation(line: 512, column: 38, scope: !8190)
!8197 = !DILocation(line: 514, column: 24, scope: !8190)
!8198 = !DILocation(line: 514, column: 7, scope: !8190)
!8199 = !DILocation(line: 514, column: 16, scope: !8190)
!8200 = !DILocation(line: 515, column: 41, scope: !8190)
!8201 = !{i32 0, i32 1537}
!8202 = !DILocation(line: 515, column: 16, scope: !8190)
!8203 = !DILocation(line: 515, column: 7, scope: !8190)
!8204 = !DILocation(line: 515, column: 14, scope: !8190)
!8205 = !DILocation(line: 517, column: 3, scope: !8190)
!8206 = !{i32 0, i32 12289}
!8207 = !DILocation(line: 516, column: 19, scope: !8190)
!8208 = !DILocation(line: 516, column: 7, scope: !8190)
!8209 = !DILocation(line: 516, column: 17, scope: !8190)
!8210 = !DILocation(line: 519, column: 3, scope: !8190)
!8211 = !DILocation(line: 519, column: 33, scope: !8190)
!8212 = !DILocation(line: 518, column: 19, scope: !8190)
!8213 = !DILocation(line: 518, column: 7, scope: !8190)
!8214 = !DILocation(line: 518, column: 17, scope: !8190)
!8215 = !DILocation(line: 521, column: 3, scope: !8190)
!8216 = !{i32 0, i32 769}
!8217 = !DILocation(line: 520, column: 19, scope: !8190)
!8218 = !DILocation(line: 520, column: 7, scope: !8190)
!8219 = !DILocation(line: 520, column: 17, scope: !8190)
!8220 = !DILocation(line: 522, column: 2, scope: !8190)
!8221 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1300, file: !1300, line: 205, type: !8222, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8224)
!8222 = !DISubroutineType(types: !8223)
!8223 = !{!155, !1203}
!8224 = !{!8225, !8226}
!8225 = !DILocalVariable(name: "dev", arg: 1, scope: !8221, file: !1300, line: 205, type: !1203)
!8226 = !DILocalVariable(name: "config", scope: !8221, file: !1300, line: 207, type: !7987)
!8227 = !DILocation(line: 0, scope: !8221)
!8228 = !DILocation(line: 207, column: 48, scope: !8221)
!8229 = !DILocation(line: 209, column: 36, scope: !8221)
!8230 = !DILocation(line: 209, column: 9, scope: !8221)
!8231 = !DILocation(line: 209, column: 2, scope: !8221)
!8232 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1300, file: !1300, line: 270, type: !8233, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8235)
!8233 = !DISubroutineType(types: !8234)
!8234 = !{!1169, !155}
!8235 = !{!8236}
!8236 = !DILocalVariable(name: "parity", arg: 1, scope: !8232, file: !1300, line: 270, type: !155)
!8237 = !DILocation(line: 0, scope: !8232)
!8238 = !DILocation(line: 272, column: 2, scope: !8232)
!8239 = !DILocation(line: 281, column: 1, scope: !8232)
!8240 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1300, file: !1300, line: 220, type: !8222, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8241)
!8241 = !{!8242, !8243}
!8242 = !DILocalVariable(name: "dev", arg: 1, scope: !8240, file: !1300, line: 220, type: !1203)
!8243 = !DILocalVariable(name: "config", scope: !8240, file: !1300, line: 222, type: !7987)
!8244 = !DILocation(line: 0, scope: !8240)
!8245 = !DILocation(line: 222, column: 48, scope: !8240)
!8246 = !DILocation(line: 224, column: 44, scope: !8240)
!8247 = !DILocation(line: 224, column: 9, scope: !8240)
!8248 = !DILocation(line: 224, column: 2, scope: !8240)
!8249 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1300, file: !1300, line: 304, type: !8250, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8252)
!8250 = !DISubroutineType(types: !8251)
!8251 = !{!1183, !155}
!8252 = !{!8253}
!8253 = !DILocalVariable(name: "sb", arg: 1, scope: !8249, file: !1300, line: 304, type: !155)
!8254 = !DILocation(line: 0, scope: !8249)
!8255 = !DILocation(line: 306, column: 2, scope: !8249)
!8256 = !DILocation(line: 0, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8249, file: !1300, line: 306, column: 14)
!8258 = !DILocation(line: 323, column: 1, scope: !8249)
!8259 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1300, file: !1300, line: 235, type: !8222, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8260)
!8260 = !{!8261, !8262}
!8261 = !DILocalVariable(name: "dev", arg: 1, scope: !8259, file: !1300, line: 235, type: !1203)
!8262 = !DILocalVariable(name: "config", scope: !8259, file: !1300, line: 237, type: !7987)
!8263 = !DILocation(line: 0, scope: !8259)
!8264 = !DILocation(line: 237, column: 48, scope: !8259)
!8265 = !DILocation(line: 239, column: 39, scope: !8259)
!8266 = !DILocation(line: 239, column: 9, scope: !8259)
!8267 = !DILocation(line: 239, column: 2, scope: !8259)
!8268 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1300, file: !1300, line: 355, type: !8269, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8271)
!8269 = !DISubroutineType(types: !8270)
!8270 = !{!1176, !155, !155}
!8271 = !{!8272, !8273}
!8272 = !DILocalVariable(name: "db", arg: 1, scope: !8268, file: !1300, line: 355, type: !155)
!8273 = !DILocalVariable(name: "p", arg: 2, scope: !8268, file: !1300, line: 356, type: !155)
!8274 = !DILocation(line: 0, scope: !8268)
!8275 = !DILocation(line: 358, column: 2, scope: !8268)
!8276 = !DILocation(line: 384, column: 1, scope: !8268)
!8277 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1300, file: !1300, line: 250, type: !8222, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8278)
!8278 = !{!8279, !8280}
!8279 = !DILocalVariable(name: "dev", arg: 1, scope: !8277, file: !1300, line: 250, type: !1203)
!8280 = !DILocalVariable(name: "config", scope: !8277, file: !1300, line: 252, type: !7987)
!8281 = !DILocation(line: 0, scope: !8277)
!8282 = !DILocation(line: 252, column: 48, scope: !8277)
!8283 = !DILocation(line: 254, column: 40, scope: !8277)
!8284 = !DILocation(line: 254, column: 9, scope: !8277)
!8285 = !DILocation(line: 254, column: 2, scope: !8277)
!8286 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1300, file: !1300, line: 409, type: !8287, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8289)
!8287 = !DISubroutineType(types: !8288)
!8288 = !{!1189, !155}
!8289 = !{!8290}
!8290 = !DILocalVariable(name: "fc", arg: 1, scope: !8286, file: !1300, line: 409, type: !155)
!8291 = !DILocation(line: 0, scope: !8286)
!8292 = !DILocation(line: 411, column: 9, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8286, file: !1300, line: 411, column: 6)
!8294 = !DILocation(line: 416, column: 1, scope: !8286)
!8295 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !8296, file: !8296, line: 967, type: !8297, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8299)
!8296 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8297 = !DISubroutineType(types: !8298)
!8298 = !{!155, !1244}
!8299 = !{!8300}
!8300 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8295, file: !8296, line: 967, type: !1244)
!8301 = !DILocation(line: 0, scope: !8295)
!8302 = !DILocation(line: 969, column: 21, scope: !8295)
!8303 = !DILocation(line: 969, column: 3, scope: !8295)
!8304 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !8296, file: !8296, line: 601, type: !8297, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8305)
!8305 = !{!8306}
!8306 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8304, file: !8296, line: 601, type: !1244)
!8307 = !DILocation(line: 0, scope: !8304)
!8308 = !DILocation(line: 603, column: 21, scope: !8304)
!8309 = !DILocation(line: 603, column: 3, scope: !8304)
!8310 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !8296, file: !8296, line: 820, type: !8297, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8311)
!8311 = !{!8312}
!8312 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8310, file: !8296, line: 820, type: !1244)
!8313 = !DILocation(line: 0, scope: !8310)
!8314 = !DILocation(line: 822, column: 21, scope: !8310)
!8315 = !DILocation(line: 822, column: 3, scope: !8310)
!8316 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !8296, file: !8296, line: 547, type: !8297, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8317)
!8317 = !{!8318}
!8318 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8316, file: !8296, line: 547, type: !1244)
!8319 = !DILocation(line: 0, scope: !8316)
!8320 = !DILocation(line: 549, column: 21, scope: !8316)
!8321 = !DILocation(line: 549, column: 3, scope: !8316)
!8322 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1300, file: !1300, line: 257, type: !8323, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8325)
!8323 = !DISubroutineType(types: !8324)
!8324 = !{!155, !1169}
!8325 = !{!8326}
!8326 = !DILocalVariable(name: "parity", arg: 1, scope: !8322, file: !1300, line: 257, type: !1169)
!8327 = !DILocation(line: 0, scope: !8322)
!8328 = !DILocation(line: 259, column: 2, scope: !8322)
!8329 = !DILocation(line: 268, column: 1, scope: !8322)
!8330 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1300, file: !1300, line: 283, type: !8331, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8333)
!8331 = !DISubroutineType(types: !8332)
!8332 = !{!155, !1183}
!8333 = !{!8334}
!8334 = !DILocalVariable(name: "sb", arg: 1, scope: !8330, file: !1300, line: 283, type: !1183)
!8335 = !DILocation(line: 0, scope: !8330)
!8336 = !DILocation(line: 285, column: 2, scope: !8330)
!8337 = !DILocation(line: 0, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8330, file: !1300, line: 285, column: 14)
!8339 = !DILocation(line: 302, column: 1, scope: !8330)
!8340 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1300, file: !1300, line: 325, type: !8341, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8343)
!8341 = !DISubroutineType(types: !8342)
!8342 = !{!155, !1176, !1169}
!8343 = !{!8344, !8345}
!8344 = !DILocalVariable(name: "db", arg: 1, scope: !8340, file: !1300, line: 325, type: !1176)
!8345 = !DILocalVariable(name: "p", arg: 2, scope: !8340, file: !1300, line: 326, type: !1169)
!8346 = !DILocation(line: 0, scope: !8340)
!8347 = !DILocation(line: 328, column: 2, scope: !8340)
!8348 = !DILocation(line: 353, column: 1, scope: !8340)
!8349 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1300, file: !1300, line: 393, type: !8350, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8352)
!8350 = !DISubroutineType(types: !8351)
!8351 = !{!155, !1189}
!8352 = !{!8353}
!8353 = !DILocalVariable(name: "fc", arg: 1, scope: !8349, file: !1300, line: 393, type: !1189)
!8354 = !DILocation(line: 0, scope: !8349)
!8355 = !DILocation(line: 395, column: 9, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !8349, file: !1300, line: 395, column: 6)
!8357 = !DILocation(line: 400, column: 1, scope: !8349)
!8358 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !8296, file: !8296, line: 424, type: !8359, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8361)
!8359 = !DISubroutineType(types: !8360)
!8360 = !{null, !1244}
!8361 = !{!8362}
!8362 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8358, file: !8296, line: 424, type: !1244)
!8363 = !DILocation(line: 0, scope: !8358)
!8364 = !DILocation(line: 426, column: 3, scope: !8358)
!8365 = !DILocation(line: 427, column: 1, scope: !8358)
!8366 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1300, file: !1300, line: 197, type: !8367, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8369)
!8367 = !DISubroutineType(types: !8368)
!8368 = !{null, !1203, !155}
!8369 = !{!8370, !8371, !8372}
!8370 = !DILocalVariable(name: "dev", arg: 1, scope: !8366, file: !1300, line: 197, type: !1203)
!8371 = !DILocalVariable(name: "parity", arg: 2, scope: !8366, file: !1300, line: 198, type: !155)
!8372 = !DILocalVariable(name: "config", scope: !8366, file: !1300, line: 200, type: !7987)
!8373 = !DILocation(line: 0, scope: !8366)
!8374 = !DILocation(line: 200, column: 48, scope: !8366)
!8375 = !DILocation(line: 202, column: 29, scope: !8366)
!8376 = !DILocation(line: 202, column: 2, scope: !8366)
!8377 = !DILocation(line: 203, column: 1, scope: !8366)
!8378 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1300, file: !1300, line: 212, type: !8367, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8379)
!8379 = !{!8380, !8381, !8382}
!8380 = !DILocalVariable(name: "dev", arg: 1, scope: !8378, file: !1300, line: 212, type: !1203)
!8381 = !DILocalVariable(name: "stopbits", arg: 2, scope: !8378, file: !1300, line: 213, type: !155)
!8382 = !DILocalVariable(name: "config", scope: !8378, file: !1300, line: 215, type: !7987)
!8383 = !DILocation(line: 0, scope: !8378)
!8384 = !DILocation(line: 215, column: 48, scope: !8378)
!8385 = !DILocation(line: 217, column: 37, scope: !8378)
!8386 = !DILocation(line: 217, column: 2, scope: !8378)
!8387 = !DILocation(line: 218, column: 1, scope: !8378)
!8388 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1300, file: !1300, line: 227, type: !8367, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8389)
!8389 = !{!8390, !8391, !8392}
!8390 = !DILocalVariable(name: "dev", arg: 1, scope: !8388, file: !1300, line: 227, type: !1203)
!8391 = !DILocalVariable(name: "databits", arg: 2, scope: !8388, file: !1300, line: 228, type: !155)
!8392 = !DILocalVariable(name: "config", scope: !8388, file: !1300, line: 230, type: !7987)
!8393 = !DILocation(line: 0, scope: !8388)
!8394 = !DILocation(line: 230, column: 48, scope: !8388)
!8395 = !DILocation(line: 232, column: 32, scope: !8388)
!8396 = !DILocation(line: 232, column: 2, scope: !8388)
!8397 = !DILocation(line: 233, column: 1, scope: !8388)
!8398 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1300, file: !1300, line: 242, type: !8367, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8399)
!8399 = !{!8400, !8401, !8402}
!8400 = !DILocalVariable(name: "dev", arg: 1, scope: !8398, file: !1300, line: 242, type: !1203)
!8401 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !8398, file: !1300, line: 243, type: !155)
!8402 = !DILocalVariable(name: "config", scope: !8398, file: !1300, line: 245, type: !7987)
!8403 = !DILocation(line: 0, scope: !8398)
!8404 = !DILocation(line: 245, column: 48, scope: !8398)
!8405 = !DILocation(line: 247, column: 33, scope: !8398)
!8406 = !DILocation(line: 247, column: 2, scope: !8398)
!8407 = !DILocation(line: 248, column: 1, scope: !8398)
!8408 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1300, file: !1300, line: 107, type: !8367, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8409)
!8409 = !{!8410, !8411, !8412, !8413, !8414}
!8410 = !DILocalVariable(name: "dev", arg: 1, scope: !8408, file: !1300, line: 107, type: !1203)
!8411 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !8408, file: !1300, line: 107, type: !155)
!8412 = !DILocalVariable(name: "config", scope: !8408, file: !1300, line: 109, type: !7987)
!8413 = !DILocalVariable(name: "data", scope: !8408, file: !1300, line: 110, type: !8110)
!8414 = !DILocalVariable(name: "clock_rate", scope: !8408, file: !1300, line: 112, type: !155)
!8415 = !DILocation(line: 0, scope: !8408)
!8416 = !DILocation(line: 109, column: 48, scope: !8408)
!8417 = !DILocation(line: 110, column: 38, scope: !8408)
!8418 = !DILocation(line: 112, column: 2, scope: !8408)
!8419 = !DILocation(line: 123, column: 36, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8421, file: !1300, line: 123, column: 7)
!8421 = distinct !DILexicalBlock(scope: !8422, file: !1300, line: 122, column: 9)
!8422 = distinct !DILexicalBlock(scope: !8408, file: !1300, line: 115, column: 6)
!8423 = !DILocation(line: 124, column: 42, scope: !8420)
!8424 = !DILocation(line: 123, column: 7, scope: !8420)
!8425 = !DILocation(line: 125, column: 22, scope: !8420)
!8426 = !DILocation(line: 123, column: 7, scope: !8421)
!8427 = !DILocation(line: 176, column: 36, scope: !8408)
!8428 = !DILocation(line: 176, column: 3, scope: !8408)
!8429 = !DILocation(line: 179, column: 32, scope: !8408)
!8430 = !DILocation(line: 180, column: 10, scope: !8408)
!8431 = !DILocation(line: 179, column: 3, scope: !8408)
!8432 = !DILocation(line: 195, column: 1, scope: !8408)
!8433 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !8296, file: !8296, line: 410, type: !8359, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8434)
!8434 = !{!8435}
!8435 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8433, file: !8296, line: 410, type: !1244)
!8436 = !DILocation(line: 0, scope: !8433)
!8437 = !DILocation(line: 412, column: 3, scope: !8433)
!8438 = !DILocation(line: 413, column: 1, scope: !8433)
!8439 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !660, file: !660, line: 216, type: !1277, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8440)
!8440 = !{!8441, !8442, !8443, !8444}
!8441 = !DILocalVariable(name: "dev", arg: 1, scope: !8439, file: !660, line: 216, type: !1203)
!8442 = !DILocalVariable(name: "sys", arg: 2, scope: !8439, file: !660, line: 217, type: !755)
!8443 = !DILocalVariable(name: "rate", arg: 3, scope: !8439, file: !660, line: 218, type: !711)
!8444 = !DILocalVariable(name: "api", scope: !8439, file: !660, line: 220, type: !1255)
!8445 = !DILocation(line: 0, scope: !8439)
!8446 = !DILocation(line: 221, column: 49, scope: !8439)
!8447 = !DILocation(line: 223, column: 11, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8439, file: !660, line: 223, column: 6)
!8449 = !DILocation(line: 223, column: 20, scope: !8448)
!8450 = !DILocation(line: 223, column: 6, scope: !8439)
!8451 = !DILocation(line: 227, column: 9, scope: !8439)
!8452 = !DILocation(line: 227, column: 2, scope: !8439)
!8453 = !DILocation(line: 228, column: 1, scope: !8439)
!8454 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !8296, file: !8296, line: 615, type: !8455, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8457)
!8455 = !DISubroutineType(types: !8456)
!8456 = !{null, !1244, !155}
!8457 = !{!8458, !8459}
!8458 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8454, file: !8296, line: 615, type: !1244)
!8459 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !8454, file: !8296, line: 615, type: !155)
!8460 = !DILocation(line: 0, scope: !8454)
!8461 = !DILocation(line: 617, column: 3, scope: !8454)
!8462 = !DILocation(line: 618, column: 1, scope: !8454)
!8463 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !8296, file: !8296, line: 1020, type: !8464, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8466)
!8464 = !DISubroutineType(types: !8465)
!8465 = !{null, !1244, !155, !155, !155}
!8466 = !{!8467, !8468, !8469, !8470}
!8467 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8463, file: !8296, line: 1020, type: !1244)
!8468 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !8463, file: !8296, line: 1020, type: !155)
!8469 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !8463, file: !8296, line: 1020, type: !155)
!8470 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !8463, file: !8296, line: 1021, type: !155)
!8471 = !DILocation(line: 0, scope: !8463)
!8472 = !DILocation(line: 1029, column: 30, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8474, file: !8296, line: 1028, column: 3)
!8474 = distinct !DILexicalBlock(scope: !8463, file: !8296, line: 1023, column: 7)
!8475 = !DILocation(line: 1029, column: 19, scope: !8473)
!8476 = !DILocation(line: 1029, column: 13, scope: !8473)
!8477 = !DILocation(line: 1029, column: 17, scope: !8473)
!8478 = !DILocation(line: 1031, column: 1, scope: !8463)
!8479 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !8296, file: !8296, line: 949, type: !8455, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8480)
!8480 = !{!8481, !8482}
!8481 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8479, file: !8296, line: 949, type: !1244)
!8482 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !8479, file: !8296, line: 949, type: !155)
!8483 = !DILocation(line: 0, scope: !8479)
!8484 = !DILocation(line: 951, column: 3, scope: !8479)
!8485 = !DILocation(line: 952, column: 1, scope: !8479)
!8486 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !8296, file: !8296, line: 588, type: !8455, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8487)
!8487 = !{!8488, !8489}
!8488 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8486, file: !8296, line: 588, type: !1244)
!8489 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8486, file: !8296, line: 588, type: !155)
!8490 = !DILocation(line: 0, scope: !8486)
!8491 = !DILocation(line: 590, column: 3, scope: !8486)
!8492 = !DILocation(line: 591, column: 1, scope: !8486)
!8493 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !8296, file: !8296, line: 805, type: !8455, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8494)
!8494 = !{!8495, !8496}
!8495 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8493, file: !8296, line: 805, type: !1244)
!8496 = !DILocalVariable(name: "StopBits", arg: 2, scope: !8493, file: !8296, line: 805, type: !155)
!8497 = !DILocation(line: 0, scope: !8493)
!8498 = !DILocation(line: 807, column: 3, scope: !8493)
!8499 = !DILocation(line: 808, column: 1, scope: !8493)
!8500 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !8296, file: !8296, line: 532, type: !8455, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8501)
!8501 = !{!8502, !8503}
!8502 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8500, file: !8296, line: 532, type: !1244)
!8503 = !DILocalVariable(name: "Parity", arg: 2, scope: !8500, file: !8296, line: 532, type: !155)
!8504 = !DILocation(line: 0, scope: !8500)
!8505 = !DILocation(line: 534, column: 3, scope: !8500)
!8506 = !DILocation(line: 535, column: 1, scope: !8500)
!8507 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !8296, file: !8296, line: 1770, type: !8297, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8508)
!8508 = !{!8509}
!8509 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8507, file: !8296, line: 1770, type: !1244)
!8510 = !DILocation(line: 0, scope: !8507)
!8511 = !DILocation(line: 1772, column: 11, scope: !8507)
!8512 = !DILocation(line: 1772, column: 46, scope: !8507)
!8513 = !DILocation(line: 1772, column: 3, scope: !8507)
!8514 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !8296, file: !8296, line: 1737, type: !8297, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8515)
!8515 = !{!8516}
!8516 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8514, file: !8296, line: 1737, type: !1244)
!8517 = !DILocation(line: 0, scope: !8514)
!8518 = !DILocation(line: 1739, column: 11, scope: !8514)
!8519 = !DILocation(line: 1739, column: 3, scope: !8514)
!8520 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !8296, file: !8296, line: 1748, type: !8297, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8521)
!8521 = !{!8522}
!8522 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8520, file: !8296, line: 1748, type: !1244)
!8523 = !DILocation(line: 0, scope: !8520)
!8524 = !DILocation(line: 1750, column: 11, scope: !8520)
!8525 = !DILocation(line: 1750, column: 45, scope: !8520)
!8526 = !DILocation(line: 1750, column: 3, scope: !8520)
!8527 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !8296, file: !8296, line: 1827, type: !8297, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8528)
!8528 = !{!8529}
!8529 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8527, file: !8296, line: 1827, type: !1244)
!8530 = !DILocation(line: 0, scope: !8527)
!8531 = !DILocation(line: 1829, column: 11, scope: !8527)
!8532 = !DILocation(line: 1829, column: 46, scope: !8527)
!8533 = !DILocation(line: 1829, column: 3, scope: !8527)
!8534 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !8296, file: !8296, line: 1992, type: !8359, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8535)
!8535 = !{!8536}
!8536 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8534, file: !8296, line: 1992, type: !1244)
!8537 = !DILocation(line: 0, scope: !8534)
!8538 = !DILocation(line: 1994, column: 3, scope: !8534)
!8539 = !DILocation(line: 1995, column: 1, scope: !8534)
!8540 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !8296, file: !8296, line: 1934, type: !8359, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8541)
!8541 = !{!8542, !8543}
!8542 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8540, file: !8296, line: 1934, type: !1244)
!8543 = !DILocalVariable(name: "tmpreg", scope: !8540, file: !8296, line: 1936, type: !154)
!8544 = !DILocation(line: 0, scope: !8540)
!8545 = !DILocation(line: 1936, column: 3, scope: !8540)
!8546 = !DILocation(line: 1936, column: 17, scope: !8540)
!8547 = !DILocation(line: 1937, column: 20, scope: !8540)
!8548 = !DILocation(line: 1937, column: 10, scope: !8540)
!8549 = !DILocation(line: 1938, column: 10, scope: !8540)
!8550 = !DILocation(line: 1939, column: 20, scope: !8540)
!8551 = !DILocation(line: 1939, column: 10, scope: !8540)
!8552 = !DILocation(line: 1940, column: 10, scope: !8540)
!8553 = !DILocation(line: 1941, column: 1, scope: !8540)
!8554 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !8296, file: !8296, line: 1877, type: !8359, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8555)
!8555 = !{!8556, !8557}
!8556 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8554, file: !8296, line: 1877, type: !1244)
!8557 = !DILocalVariable(name: "tmpreg", scope: !8554, file: !8296, line: 1879, type: !154)
!8558 = !DILocation(line: 0, scope: !8554)
!8559 = !DILocation(line: 1879, column: 3, scope: !8554)
!8560 = !DILocation(line: 1879, column: 17, scope: !8554)
!8561 = !DILocation(line: 1880, column: 20, scope: !8554)
!8562 = !DILocation(line: 1880, column: 10, scope: !8554)
!8563 = !DILocation(line: 1881, column: 10, scope: !8554)
!8564 = !DILocation(line: 1882, column: 20, scope: !8554)
!8565 = !DILocation(line: 1882, column: 10, scope: !8554)
!8566 = !DILocation(line: 1883, column: 10, scope: !8554)
!8567 = !DILocation(line: 1884, column: 1, scope: !8554)
!8568 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !8296, file: !8296, line: 1896, type: !8359, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8569)
!8569 = !{!8570, !8571}
!8570 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8568, file: !8296, line: 1896, type: !1244)
!8571 = !DILocalVariable(name: "tmpreg", scope: !8568, file: !8296, line: 1898, type: !154)
!8572 = !DILocation(line: 0, scope: !8568)
!8573 = !DILocation(line: 1898, column: 3, scope: !8568)
!8574 = !DILocation(line: 1898, column: 17, scope: !8568)
!8575 = !DILocation(line: 1899, column: 20, scope: !8568)
!8576 = !DILocation(line: 1899, column: 10, scope: !8568)
!8577 = !DILocation(line: 1900, column: 10, scope: !8568)
!8578 = !DILocation(line: 1901, column: 20, scope: !8568)
!8579 = !DILocation(line: 1901, column: 10, scope: !8568)
!8580 = !DILocation(line: 1902, column: 10, scope: !8568)
!8581 = !DILocation(line: 1903, column: 1, scope: !8568)
!8582 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !8296, file: !8296, line: 1915, type: !8359, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8583)
!8583 = !{!8584, !8585}
!8584 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8582, file: !8296, line: 1915, type: !1244)
!8585 = !DILocalVariable(name: "tmpreg", scope: !8582, file: !8296, line: 1917, type: !154)
!8586 = !DILocation(line: 0, scope: !8582)
!8587 = !DILocation(line: 1917, column: 3, scope: !8582)
!8588 = !DILocation(line: 1917, column: 17, scope: !8582)
!8589 = !DILocation(line: 1918, column: 20, scope: !8582)
!8590 = !DILocation(line: 1918, column: 10, scope: !8582)
!8591 = !DILocation(line: 1919, column: 10, scope: !8582)
!8592 = !DILocation(line: 1920, column: 20, scope: !8582)
!8593 = !DILocation(line: 1920, column: 10, scope: !8582)
!8594 = !DILocation(line: 1921, column: 10, scope: !8582)
!8595 = !DILocation(line: 1922, column: 1, scope: !8582)
!8596 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !8296, file: !8296, line: 1814, type: !8297, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8597)
!8597 = !{!8598}
!8598 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8596, file: !8296, line: 1814, type: !1244)
!8599 = !DILocation(line: 0, scope: !8596)
!8600 = !DILocation(line: 1816, column: 11, scope: !8596)
!8601 = !DILocation(line: 1816, column: 46, scope: !8596)
!8602 = !DILocation(line: 1816, column: 3, scope: !8596)
!8603 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !8296, file: !8296, line: 2426, type: !8604, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8606)
!8604 = !DISubroutineType(types: !8605)
!8605 = !{null, !1244, !123}
!8606 = !{!8607, !8608}
!8607 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8603, file: !8296, line: 2426, type: !1244)
!8608 = !DILocalVariable(name: "Value", arg: 2, scope: !8603, file: !8296, line: 2426, type: !123)
!8609 = !DILocation(line: 0, scope: !8603)
!8610 = !DILocation(line: 2428, column: 16, scope: !8603)
!8611 = !DILocation(line: 2428, column: 11, scope: !8603)
!8612 = !DILocation(line: 2428, column: 14, scope: !8603)
!8613 = !DILocation(line: 2429, column: 1, scope: !8603)
!8614 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !8296, file: !8296, line: 1792, type: !8297, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8615)
!8615 = !{!8616}
!8616 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8614, file: !8296, line: 1792, type: !1244)
!8617 = !DILocation(line: 0, scope: !8614)
!8618 = !DILocation(line: 1794, column: 11, scope: !8614)
!8619 = !DILocation(line: 1794, column: 47, scope: !8614)
!8620 = !DILocation(line: 1794, column: 3, scope: !8614)
!8621 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !8296, file: !8296, line: 2403, type: !8622, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8624)
!8622 = !DISubroutineType(types: !8623)
!8623 = !{!123, !1244}
!8624 = !{!8625}
!8625 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8621, file: !8296, line: 2403, type: !1244)
!8626 = !DILocation(line: 0, scope: !8621)
!8627 = !DILocation(line: 2405, column: 20, scope: !8621)
!8628 = !DILocation(line: 2405, column: 10, scope: !8621)
!8629 = !DILocation(line: 2405, column: 3, scope: !8621)
!8630 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1300, file: !1300, line: 1583, type: !1224, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8631)
!8631 = !{!8632, !8633, !8634, !8635, !8636, !8637}
!8632 = !DILocalVariable(name: "dev", arg: 1, scope: !8630, file: !1300, line: 1583, type: !1203)
!8633 = !DILocalVariable(name: "config", scope: !8630, file: !1300, line: 1585, type: !7987)
!8634 = !DILocalVariable(name: "data", scope: !8630, file: !1300, line: 1586, type: !8110)
!8635 = !DILocalVariable(name: "ll_parity", scope: !8630, file: !1300, line: 1587, type: !155)
!8636 = !DILocalVariable(name: "ll_datawidth", scope: !8630, file: !1300, line: 1588, type: !155)
!8637 = !DILocalVariable(name: "err", scope: !8630, file: !1300, line: 1589, type: !104)
!8638 = !DILocation(line: 0, scope: !8630)
!8639 = !DILocation(line: 1585, column: 48, scope: !8630)
!8640 = !DILocation(line: 1586, column: 38, scope: !8630)
!8641 = !DILocation(line: 1591, column: 2, scope: !8630)
!8642 = !DILocation(line: 1593, column: 29, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8630, file: !1300, line: 1593, column: 6)
!8644 = !DILocation(line: 1593, column: 7, scope: !8643)
!8645 = !DILocation(line: 1593, column: 6, scope: !8630)
!8646 = !DILocation(line: 1599, column: 31, scope: !8630)
!8647 = !DILocation(line: 1599, column: 71, scope: !8630)
!8648 = !DILocation(line: 1599, column: 8, scope: !8630)
!8649 = !DILocation(line: 1600, column: 10, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8630, file: !1300, line: 1600, column: 6)
!8651 = !DILocation(line: 1600, column: 6, scope: !8630)
!8652 = !DILocation(line: 1616, column: 36, scope: !8630)
!8653 = !DILocation(line: 1616, column: 8, scope: !8630)
!8654 = !DILocation(line: 1617, column: 10, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8630, file: !1300, line: 1617, column: 6)
!8656 = !DILocation(line: 1617, column: 6, scope: !8630)
!8657 = !DILocation(line: 1621, column: 27, scope: !8630)
!8658 = !DILocation(line: 1621, column: 2, scope: !8630)
!8659 = !DILocation(line: 1624, column: 40, scope: !8630)
!8660 = !DILocation(line: 1624, column: 2, scope: !8630)
!8661 = !DILocation(line: 1630, column: 14, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8630, file: !1300, line: 1630, column: 6)
!8663 = !DILocation(line: 1630, column: 6, scope: !8630)
!8664 = !DILocation(line: 1638, column: 2, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8666, file: !1300, line: 1634, column: 34)
!8666 = distinct !DILexicalBlock(scope: !8662, file: !1300, line: 1634, column: 13)
!8667 = !DILocation(line: 0, scope: !8662)
!8668 = !DILocation(line: 1649, column: 35, scope: !8630)
!8669 = !DILocation(line: 1649, column: 2, scope: !8630)
!8670 = !DILocation(line: 1654, column: 14, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !8630, file: !1300, line: 1654, column: 6)
!8672 = !DILocation(line: 1654, column: 6, scope: !8630)
!8673 = !DILocation(line: 1655, column: 3, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8671, file: !1300, line: 1654, column: 31)
!8675 = !DILocation(line: 1656, column: 2, scope: !8674)
!8676 = !DILocation(line: 1659, column: 37, scope: !8630)
!8677 = !DILocation(line: 1659, column: 2, scope: !8630)
!8678 = !DILocation(line: 1662, column: 14, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8630, file: !1300, line: 1662, column: 6)
!8680 = !DILocation(line: 1662, column: 6, scope: !8630)
!8681 = !DILocation(line: 1663, column: 37, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8679, file: !1300, line: 1662, column: 27)
!8683 = !DILocation(line: 1663, column: 3, scope: !8682)
!8684 = !DILocation(line: 1664, column: 2, scope: !8682)
!8685 = !DILocation(line: 1684, column: 26, scope: !8630)
!8686 = !DILocation(line: 1684, column: 2, scope: !8630)
!8687 = !DILocation(line: 1722, column: 2, scope: !8630)
!8688 = !DILocation(line: 1724, column: 1, scope: !8630)
!8689 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1300, file: !1300, line: 651, type: !8690, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8692)
!8690 = !DISubroutineType(types: !8691)
!8691 = !{null, !1203}
!8692 = !{!8693, !8694, !8695}
!8693 = !DILocalVariable(name: "dev", arg: 1, scope: !8689, file: !1300, line: 651, type: !1203)
!8694 = !DILocalVariable(name: "data", scope: !8689, file: !1300, line: 653, type: !8110)
!8695 = !DILocalVariable(name: "clk", scope: !8689, file: !1300, line: 654, type: !8696)
!8696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1203)
!8697 = !DILocation(line: 0, scope: !8689)
!8698 = !DILocation(line: 653, column: 38, scope: !8689)
!8699 = !DILocation(line: 656, column: 8, scope: !8689)
!8700 = !DILocation(line: 656, column: 14, scope: !8689)
!8701 = !DILocation(line: 657, column: 1, scope: !8689)
!8702 = distinct !DISubprogram(name: "device_is_ready", scope: !2920, file: !2920, line: 47, type: !8703, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8705)
!8703 = !DISubroutineType(types: !8704)
!8704 = !{!126, !1203}
!8705 = !{!8706}
!8706 = !DILocalVariable(name: "dev", arg: 1, scope: !8702, file: !2920, line: 47, type: !1203)
!8707 = !DILocation(line: 0, scope: !8702)
!8708 = !DILocation(line: 55, column: 2, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8702, file: !2920, line: 55, column: 2)
!8710 = !{i64 2154348532}
!8711 = !DILocation(line: 56, column: 9, scope: !8702)
!8712 = !DILocation(line: 56, column: 2, scope: !8702)
!8713 = distinct !DISubprogram(name: "clock_control_on", scope: !660, file: !660, line: 123, type: !1262, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8714)
!8714 = !{!8715, !8716, !8717}
!8715 = !DILocalVariable(name: "dev", arg: 1, scope: !8713, file: !660, line: 123, type: !1203)
!8716 = !DILocalVariable(name: "sys", arg: 2, scope: !8713, file: !660, line: 124, type: !755)
!8717 = !DILocalVariable(name: "api", scope: !8713, file: !660, line: 126, type: !1255)
!8718 = !DILocation(line: 0, scope: !8713)
!8719 = !DILocation(line: 127, column: 49, scope: !8713)
!8720 = !DILocation(line: 129, column: 14, scope: !8713)
!8721 = !DILocation(line: 129, column: 9, scope: !8713)
!8722 = !DILocation(line: 129, column: 2, scope: !8713)
!8723 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1327, file: !1327, line: 342, type: !8724, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8726)
!8724 = !DISubroutineType(types: !8725)
!8725 = !{!104, !1375, !123}
!8726 = !{!8727, !8728, !8729, !8730}
!8727 = !DILocalVariable(name: "config", arg: 1, scope: !8723, file: !1327, line: 342, type: !1375)
!8728 = !DILocalVariable(name: "id", arg: 2, scope: !8723, file: !1327, line: 343, type: !123)
!8729 = !DILocalVariable(name: "ret", scope: !8723, file: !1327, line: 345, type: !104)
!8730 = !DILocalVariable(name: "state", scope: !8723, file: !1327, line: 346, type: !1330)
!8731 = !DILocation(line: 0, scope: !8723)
!8732 = !DILocation(line: 346, column: 2, scope: !8723)
!8733 = !DILocation(line: 348, column: 8, scope: !8723)
!8734 = !DILocation(line: 349, column: 10, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8723, file: !1327, line: 349, column: 6)
!8736 = !DILocation(line: 349, column: 6, scope: !8723)
!8737 = !DILocation(line: 353, column: 44, scope: !8723)
!8738 = !DILocation(line: 353, column: 9, scope: !8723)
!8739 = !DILocation(line: 353, column: 2, scope: !8723)
!8740 = !DILocation(line: 354, column: 1, scope: !8723)
!8741 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !8296, file: !8296, line: 497, type: !8455, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8742)
!8742 = !{!8743, !8744, !8745}
!8743 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8741, file: !8296, line: 497, type: !1244)
!8744 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !8741, file: !8296, line: 497, type: !155)
!8745 = !DILocalVariable(name: "val", scope: !8746, file: !8296, line: 499, type: !155)
!8746 = distinct !DILexicalBlock(scope: !8741, file: !8296, line: 499, column: 3)
!8747 = !DILocation(line: 0, scope: !8741)
!8748 = !DILocation(line: 499, column: 3, scope: !8746)
!8749 = !DILocalVariable(name: "addr", arg: 1, scope: !8750, file: !4931, line: 476, type: !1296)
!8750 = distinct !DISubprogram(name: "__LDREXW", scope: !4931, file: !4931, line: 476, type: !8751, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8753)
!8751 = !DISubroutineType(types: !8752)
!8752 = !{!155, !1296}
!8753 = !{!8749, !8754}
!8754 = !DILocalVariable(name: "result", scope: !8750, file: !4931, line: 478, type: !155)
!8755 = !DILocation(line: 0, scope: !8750, inlinedAt: !8756)
!8756 = distinct !DILocation(line: 499, column: 3, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !8746, file: !8296, line: 499, column: 3)
!8758 = !DILocation(line: 480, column: 4, scope: !8750, inlinedAt: !8756)
!8759 = !{i64 2859355}
!8760 = !DILocation(line: 499, column: 3, scope: !8757)
!8761 = !DILocation(line: 0, scope: !8746)
!8762 = !DILocalVariable(name: "value", arg: 1, scope: !8763, file: !4931, line: 527, type: !155)
!8763 = distinct !DISubprogram(name: "__STREXW", scope: !4931, file: !4931, line: 527, type: !8764, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8766)
!8764 = !DISubroutineType(types: !8765)
!8765 = !{!155, !155, !1296}
!8766 = !{!8762, !8767, !8768}
!8767 = !DILocalVariable(name: "addr", arg: 2, scope: !8763, file: !4931, line: 527, type: !1296)
!8768 = !DILocalVariable(name: "result", scope: !8763, file: !4931, line: 529, type: !155)
!8769 = !DILocation(line: 0, scope: !8763, inlinedAt: !8770)
!8770 = distinct !DILocation(line: 499, column: 3, scope: !8746)
!8771 = !DILocation(line: 531, column: 4, scope: !8763, inlinedAt: !8770)
!8772 = !{i64 2860791}
!8773 = distinct !{!8773, !8748, !8748}
!8774 = !DILocation(line: 500, column: 1, scope: !8741)
!8775 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !8296, file: !8296, line: 850, type: !8464, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8776)
!8776 = !{!8777, !8778, !8779, !8780}
!8777 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8775, file: !8296, line: 850, type: !1244)
!8778 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8775, file: !8296, line: 850, type: !155)
!8779 = !DILocalVariable(name: "Parity", arg: 3, scope: !8775, file: !8296, line: 850, type: !155)
!8780 = !DILocalVariable(name: "StopBits", arg: 4, scope: !8775, file: !8296, line: 851, type: !155)
!8781 = !DILocation(line: 0, scope: !8775)
!8782 = !DILocation(line: 853, column: 3, scope: !8775)
!8783 = !DILocation(line: 854, column: 3, scope: !8775)
!8784 = !DILocation(line: 855, column: 1, scope: !8775)
!8785 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !8296, file: !8296, line: 1337, type: !8359, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8786)
!8786 = !{!8787}
!8787 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8785, file: !8296, line: 1337, type: !1244)
!8788 = !DILocation(line: 0, scope: !8785)
!8789 = !DILocation(line: 1339, column: 3, scope: !8785)
!8790 = !DILocation(line: 1340, column: 1, scope: !8785)
!8791 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1327, file: !1327, line: 316, type: !8792, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8794)
!8792 = !DISubroutineType(types: !8793)
!8793 = !{!104, !1375, !1330}
!8794 = !{!8795, !8796, !8797}
!8795 = !DILocalVariable(name: "config", arg: 1, scope: !8791, file: !1327, line: 317, type: !1375)
!8796 = !DILocalVariable(name: "state", arg: 2, scope: !8791, file: !1327, line: 318, type: !1330)
!8797 = !DILocalVariable(name: "reg", scope: !8791, file: !1327, line: 320, type: !22)
!8798 = !DILocation(line: 0, scope: !8791)
!8799 = !DILocation(line: 329, column: 39, scope: !8791)
!8800 = !DILocation(line: 329, column: 52, scope: !8791)
!8801 = !DILocation(line: 329, column: 9, scope: !8791)
!8802 = !DILocation(line: 329, column: 2, scope: !8791)
!8803 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !110, file: !110, line: 730, type: !8703, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1159, retainedNodes: !8804)
!8804 = !{!8805}
!8805 = !DILocalVariable(name: "dev", arg: 1, scope: !8803, file: !110, line: 730, type: !1203)
!8806 = !DILocation(line: 0, scope: !8803)
!8807 = !DILocation(line: 732, column: 9, scope: !8803)
!8808 = !DILocation(line: 732, column: 2, scope: !8803)
!8809 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1456, file: !1456, line: 270, type: !1462, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1378, retainedNodes: !8810)
!8810 = !{!8811}
!8811 = !DILocalVariable(name: "dev", arg: 1, scope: !8809, file: !1456, line: 270, type: !1464)
!8812 = !DILocation(line: 0, scope: !8809)
!8813 = !DILocation(line: 274, column: 2, scope: !8809)
!8814 = !DILocation(line: 275, column: 12, scope: !8809)
!8815 = !DILocation(line: 276, column: 15, scope: !8809)
!8816 = !DILocation(line: 277, column: 16, scope: !8809)
!8817 = !DILocation(line: 278, column: 15, scope: !8809)
!8818 = !DILocation(line: 279, column: 16, scope: !8809)
!8819 = !DILocation(line: 282, column: 2, scope: !8809)
!8820 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !378, file: !378, line: 1814, type: !4965, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1378, retainedNodes: !8821)
!8821 = !{!8822, !8823}
!8822 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8820, file: !378, line: 1814, type: !614)
!8823 = !DILocalVariable(name: "priority", arg: 2, scope: !8820, file: !378, line: 1814, type: !155)
!8824 = !DILocation(line: 0, scope: !8820)
!8825 = !DILocation(line: 1822, column: 46, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8827, file: !378, line: 1821, column: 3)
!8827 = distinct !DILexicalBlock(scope: !8820, file: !378, line: 1816, column: 7)
!8828 = !DILocation(line: 1824, column: 1, scope: !8820)
!8829 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1456, file: !1456, line: 118, type: !4868, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1378, retainedNodes: !8830)
!8830 = !{!8831, !8832}
!8831 = !DILocalVariable(name: "arg", arg: 1, scope: !8829, file: !1456, line: 118, type: !103)
!8832 = !DILocalVariable(name: "dticks", scope: !8829, file: !1456, line: 121, type: !155)
!8833 = !DILocation(line: 0, scope: !8829)
!8834 = !DILocation(line: 124, column: 2, scope: !8829)
!8835 = !DILocation(line: 129, column: 17, scope: !8829)
!8836 = !DILocation(line: 129, column: 14, scope: !8829)
!8837 = !DILocation(line: 130, column: 15, scope: !8829)
!8838 = !DILocation(line: 145, column: 27, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8840, file: !1456, line: 132, column: 16)
!8840 = distinct !DILexicalBlock(scope: !8829, file: !1456, line: 132, column: 6)
!8841 = !DILocation(line: 145, column: 25, scope: !8839)
!8842 = !DILocation(line: 145, column: 45, scope: !8839)
!8843 = !DILocation(line: 146, column: 30, scope: !8839)
!8844 = !DILocation(line: 146, column: 20, scope: !8839)
!8845 = !DILocation(line: 147, column: 3, scope: !8839)
!8846 = !DILocation(line: 151, column: 2, scope: !8829)
!8847 = !DILocation(line: 152, column: 1, scope: !8829)
!8848 = distinct !DISubprogram(name: "elapsed", scope: !1456, file: !1456, line: 85, type: !5012, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1378, retainedNodes: !8849)
!8849 = !{!8850, !8851, !8852}
!8850 = !DILocalVariable(name: "val1", scope: !8848, file: !1456, line: 87, type: !155)
!8851 = !DILocalVariable(name: "ctrl", scope: !8848, file: !1456, line: 88, type: !155)
!8852 = !DILocalVariable(name: "val2", scope: !8848, file: !1456, line: 89, type: !155)
!8853 = !DILocation(line: 87, column: 27, scope: !8848)
!8854 = !DILocation(line: 0, scope: !8848)
!8855 = !DILocation(line: 88, column: 27, scope: !8848)
!8856 = !DILocation(line: 89, column: 27, scope: !8848)
!8857 = !DILocation(line: 105, column: 12, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8848, file: !1456, line: 105, column: 6)
!8859 = !DILocation(line: 106, column: 6, scope: !8858)
!8860 = !DILocation(line: 107, column: 16, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8858, file: !1456, line: 106, column: 24)
!8862 = !DILocation(line: 111, column: 18, scope: !8861)
!8863 = !DILocation(line: 112, column: 2, scope: !8861)
!8864 = !DILocation(line: 114, column: 20, scope: !8848)
!8865 = !DILocation(line: 114, column: 30, scope: !8848)
!8866 = !DILocation(line: 114, column: 28, scope: !8848)
!8867 = !DILocation(line: 114, column: 2, scope: !8848)
!8868 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1456, file: !1456, line: 154, type: !8869, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1378, retainedNodes: !8871)
!8869 = !DISubroutineType(types: !8870)
!8870 = !{null, !588, !126}
!8871 = !{!8872, !8873, !8874, !8875, !8876, !8877, !8878, !8883, !8884}
!8872 = !DILocalVariable(name: "ticks", arg: 1, scope: !8868, file: !1456, line: 154, type: !588)
!8873 = !DILocalVariable(name: "idle", arg: 2, scope: !8868, file: !1456, line: 154, type: !126)
!8874 = !DILocalVariable(name: "delay", scope: !8868, file: !1456, line: 169, type: !155)
!8875 = !DILocalVariable(name: "val1", scope: !8868, file: !1456, line: 170, type: !155)
!8876 = !DILocalVariable(name: "val2", scope: !8868, file: !1456, line: 170, type: !155)
!8877 = !DILocalVariable(name: "last_load_", scope: !8868, file: !1456, line: 171, type: !155)
!8878 = !DILocalVariable(name: "key", scope: !8868, file: !1456, line: 176, type: !8879)
!8879 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !343, line: 106, baseType: !8880)
!8880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !343, line: 32, size: 32, elements: !8881)
!8881 = !{!8882}
!8882 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8880, file: !343, line: 33, baseType: !104, size: 32)
!8883 = !DILocalVariable(name: "pending", scope: !8868, file: !1456, line: 178, type: !155)
!8884 = !DILocalVariable(name: "unannounced", scope: !8868, file: !1456, line: 185, type: !155)
!8885 = !DILocation(line: 0, scope: !8868)
!8886 = !DILocation(line: 162, column: 49, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8868, file: !1456, line: 162, column: 6)
!8888 = !DILocation(line: 163, column: 17, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8887, file: !1456, line: 162, column: 78)
!8890 = !DILocation(line: 164, column: 13, scope: !8889)
!8891 = !DILocation(line: 165, column: 3, scope: !8889)
!8892 = !DILocation(line: 171, column: 24, scope: !8868)
!8893 = !DILocation(line: 173, column: 10, scope: !8868)
!8894 = !DILocation(line: 174, column: 10, scope: !8868)
!8895 = !DILocalVariable(name: "l", arg: 1, scope: !8896, file: !343, line: 136, type: !8899)
!8896 = distinct !DISubprogram(name: "k_spin_lock", scope: !343, file: !343, line: 136, type: !8897, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1378, retainedNodes: !8900)
!8897 = !DISubroutineType(types: !8898)
!8898 = !{!8879, !8899}
!8899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 32)
!8900 = !{!8895, !8901}
!8901 = !DILocalVariable(name: "k", scope: !8896, file: !343, line: 139, type: !8879)
!8902 = !DILocation(line: 0, scope: !8896, inlinedAt: !8903)
!8903 = distinct !DILocation(line: 176, column: 25, scope: !8868)
!8904 = !DILocation(line: 55, column: 2, scope: !8905, inlinedAt: !8909)
!8905 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4757, file: !4757, line: 42, type: !4758, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1378, retainedNodes: !8906)
!8906 = !{!8907, !8908}
!8907 = !DILocalVariable(name: "key", scope: !8905, file: !4757, line: 44, type: !32)
!8908 = !DILocalVariable(name: "tmp", scope: !8905, file: !4757, line: 53, type: !32)
!8909 = distinct !DILocation(line: 145, column: 10, scope: !8896, inlinedAt: !8903)
!8910 = !{i64 1921147}
!8911 = !DILocation(line: 0, scope: !8905, inlinedAt: !8909)
!8912 = !DILocation(line: 178, column: 21, scope: !8868)
!8913 = !DILocation(line: 180, column: 18, scope: !8868)
!8914 = !DILocation(line: 182, column: 14, scope: !8868)
!8915 = !DILocation(line: 183, column: 15, scope: !8868)
!8916 = !DILocation(line: 185, column: 39, scope: !8868)
!8917 = !DILocation(line: 185, column: 37, scope: !8868)
!8918 = !DILocation(line: 187, column: 27, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8868, file: !1456, line: 187, column: 6)
!8920 = !DILocation(line: 187, column: 6, scope: !8868)
!8921 = !DILocation(line: 202, column: 27, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8919, file: !1456, line: 195, column: 9)
!8923 = !DILocation(line: 202, column: 48, scope: !8922)
!8924 = !DILocation(line: 203, column: 9, scope: !8922)
!8925 = !DILocation(line: 204, column: 11, scope: !8922)
!8926 = !DILocation(line: 205, column: 13, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8922, file: !1456, line: 205, column: 7)
!8928 = !DILocation(line: 205, column: 7, scope: !8922)
!8929 = !DILocation(line: 0, scope: !8919)
!8930 = !DILocation(line: 212, column: 18, scope: !8868)
!8931 = !DILocation(line: 214, column: 28, scope: !8868)
!8932 = !DILocation(line: 214, column: 16, scope: !8868)
!8933 = !DILocation(line: 215, column: 15, scope: !8868)
!8934 = !DILocation(line: 227, column: 11, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8868, file: !1456, line: 227, column: 6)
!8936 = !DILocation(line: 227, column: 6, scope: !8868)
!8937 = !DILocation(line: 228, column: 15, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8935, file: !1456, line: 227, column: 19)
!8939 = !DILocation(line: 228, column: 38, scope: !8938)
!8940 = !DILocation(line: 228, column: 24, scope: !8938)
!8941 = !DILocation(line: 229, column: 2, scope: !8938)
!8942 = !DILocation(line: 230, column: 24, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8935, file: !1456, line: 229, column: 9)
!8944 = !DILocation(line: 230, column: 15, scope: !8943)
!8945 = !DILocation(line: 0, scope: !8935)
!8946 = !DILocalVariable(name: "key", arg: 2, scope: !8947, file: !343, line: 190, type: !8879)
!8947 = distinct !DISubprogram(name: "k_spin_unlock", scope: !343, file: !343, line: 189, type: !8948, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1378, retainedNodes: !8950)
!8948 = !DISubroutineType(types: !8949)
!8949 = !{null, !8899, !8879}
!8950 = !{!8951, !8946}
!8951 = !DILocalVariable(name: "l", arg: 1, scope: !8947, file: !343, line: 189, type: !8899)
!8952 = !DILocation(line: 0, scope: !8947, inlinedAt: !8953)
!8953 = distinct !DILocation(line: 232, column: 2, scope: !8868)
!8954 = !DILocalVariable(name: "key", arg: 1, scope: !8955, file: !4757, line: 84, type: !32)
!8955 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4757, file: !4757, line: 84, type: !4768, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1378, retainedNodes: !8956)
!8956 = !{!8954}
!8957 = !DILocation(line: 0, scope: !8955, inlinedAt: !8958)
!8958 = distinct !DILocation(line: 215, column: 2, scope: !8947, inlinedAt: !8953)
!8959 = !DILocation(line: 95, column: 2, scope: !8955, inlinedAt: !8958)
!8960 = !{i64 1921964}
!8961 = !DILocation(line: 234, column: 1, scope: !8868)
!8962 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1456, file: !1456, line: 236, type: !5012, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1378, retainedNodes: !8963)
!8963 = !{!8964, !8965}
!8964 = !DILocalVariable(name: "key", scope: !8962, file: !1456, line: 242, type: !8879)
!8965 = !DILocalVariable(name: "cyc", scope: !8962, file: !1456, line: 243, type: !155)
!8966 = !DILocation(line: 0, scope: !8896, inlinedAt: !8967)
!8967 = distinct !DILocation(line: 242, column: 25, scope: !8962)
!8968 = !DILocation(line: 55, column: 2, scope: !8905, inlinedAt: !8969)
!8969 = distinct !DILocation(line: 145, column: 10, scope: !8896, inlinedAt: !8967)
!8970 = !DILocation(line: 0, scope: !8905, inlinedAt: !8969)
!8971 = !DILocation(line: 0, scope: !8962)
!8972 = !DILocation(line: 243, column: 17, scope: !8962)
!8973 = !DILocation(line: 243, column: 29, scope: !8962)
!8974 = !DILocation(line: 243, column: 27, scope: !8962)
!8975 = !DILocation(line: 243, column: 43, scope: !8962)
!8976 = !DILocation(line: 243, column: 41, scope: !8962)
!8977 = !DILocation(line: 0, scope: !8947, inlinedAt: !8978)
!8978 = distinct !DILocation(line: 245, column: 2, scope: !8962)
!8979 = !DILocation(line: 0, scope: !8955, inlinedAt: !8980)
!8980 = distinct !DILocation(line: 215, column: 2, scope: !8947, inlinedAt: !8978)
!8981 = !DILocation(line: 95, column: 2, scope: !8955, inlinedAt: !8980)
!8982 = !DILocation(line: 246, column: 13, scope: !8962)
!8983 = !DILocation(line: 246, column: 2, scope: !8962)
!8984 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1456, file: !1456, line: 249, type: !5012, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1378, retainedNodes: !8985)
!8985 = !{!8986, !8987}
!8986 = !DILocalVariable(name: "key", scope: !8984, file: !1456, line: 251, type: !8879)
!8987 = !DILocalVariable(name: "ret", scope: !8984, file: !1456, line: 252, type: !155)
!8988 = !DILocation(line: 0, scope: !8896, inlinedAt: !8989)
!8989 = distinct !DILocation(line: 251, column: 25, scope: !8984)
!8990 = !DILocation(line: 55, column: 2, scope: !8905, inlinedAt: !8991)
!8991 = distinct !DILocation(line: 145, column: 10, scope: !8896, inlinedAt: !8989)
!8992 = !DILocation(line: 0, scope: !8905, inlinedAt: !8991)
!8993 = !DILocation(line: 0, scope: !8984)
!8994 = !DILocation(line: 252, column: 17, scope: !8984)
!8995 = !DILocation(line: 252, column: 29, scope: !8984)
!8996 = !DILocation(line: 252, column: 27, scope: !8984)
!8997 = !DILocation(line: 0, scope: !8947, inlinedAt: !8998)
!8998 = distinct !DILocation(line: 254, column: 2, scope: !8984)
!8999 = !DILocation(line: 0, scope: !8955, inlinedAt: !9000)
!9000 = distinct !DILocation(line: 215, column: 2, scope: !8947, inlinedAt: !8998)
!9001 = !DILocation(line: 95, column: 2, scope: !8955, inlinedAt: !9000)
!9002 = !DILocation(line: 255, column: 2, scope: !8984)
!9003 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1456, file: !1456, line: 258, type: !2800, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1378, retainedNodes: !344)
!9004 = !DILocation(line: 260, column: 6, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !9003, file: !1456, line: 260, column: 6)
!9006 = !DILocation(line: 260, column: 16, scope: !9005)
!9007 = !DILocation(line: 260, column: 6, scope: !9003)
!9008 = !DILocation(line: 261, column: 17, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !9005, file: !1456, line: 260, column: 34)
!9010 = !DILocation(line: 262, column: 2, scope: !9009)
!9011 = !DILocation(line: 263, column: 1, scope: !9003)
!9012 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1456, file: !1456, line: 265, type: !2800, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1378, retainedNodes: !344)
!9013 = !DILocation(line: 267, column: 16, scope: !9012)
!9014 = !DILocation(line: 268, column: 1, scope: !9012)
!9015 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !9016, file: !9016, line: 9, type: !9017, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !9040)
!9016 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9017 = !DISubroutineType(types: !9018)
!9018 = !{!104, !9019, !123, !9039}
!9019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9020, size: 32)
!9020 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9021)
!9021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1327, line: 60, size: 64, elements: !9022)
!9022 = !{!9023, !9038}
!9023 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !9021, file: !1327, line: 69, baseType: !9024, size: 32)
!9024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9025, size: 32)
!9025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9026)
!9026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1327, line: 50, size: 64, elements: !9027)
!9027 = !{!9028, !9036, !9037}
!9028 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !9026, file: !1327, line: 52, baseType: !9029, size: 32)
!9029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9030, size: 32)
!9030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9031)
!9031 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1338, line: 37, baseType: !9032)
!9032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1338, line: 32, size: 64, elements: !9033)
!9033 = !{!9034, !9035}
!9034 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9032, file: !1338, line: 34, baseType: !155, size: 32)
!9035 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9032, file: !1338, line: 36, baseType: !155, size: 32, offset: 32)
!9036 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !9026, file: !1327, line: 54, baseType: !123, size: 8, offset: 32)
!9037 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9026, file: !1327, line: 56, baseType: !123, size: 8, offset: 40)
!9038 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !9021, file: !1327, line: 71, baseType: !123, size: 8, offset: 32)
!9039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9024, size: 32)
!9040 = !{!9041, !9042, !9043}
!9041 = !DILocalVariable(name: "config", arg: 1, scope: !9015, file: !9016, line: 9, type: !9019)
!9042 = !DILocalVariable(name: "id", arg: 2, scope: !9015, file: !9016, line: 9, type: !123)
!9043 = !DILocalVariable(name: "state", arg: 3, scope: !9015, file: !9016, line: 10, type: !9039)
!9044 = !DILocation(line: 0, scope: !9015)
!9045 = !DILocation(line: 12, column: 20, scope: !9015)
!9046 = !DILocation(line: 13, column: 27, scope: !9015)
!9047 = !DILocation(line: 13, column: 42, scope: !9015)
!9048 = !DILocation(line: 13, column: 19, scope: !9015)
!9049 = !DILocation(line: 13, column: 16, scope: !9015)
!9050 = !DILocation(line: 13, column: 2, scope: !9015)
!9051 = distinct !{!9051, !9050, !9052}
!9052 = !DILocation(line: 19, column: 2, scope: !9015)
!9053 = !DILocation(line: 14, column: 23, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9055, file: !9016, line: 14, column: 7)
!9055 = distinct !DILexicalBlock(scope: !9015, file: !9016, line: 13, column: 54)
!9056 = !DILocation(line: 14, column: 10, scope: !9054)
!9057 = !DILocation(line: 18, column: 11, scope: !9055)
!9058 = !DILocation(line: 14, column: 7, scope: !9055)
!9059 = !DILocation(line: 22, column: 1, scope: !9015)
!9060 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1573, file: !1573, line: 193, type: !9061, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1491, retainedNodes: !9070)
!9061 = !DISubroutineType(types: !9062)
!9062 = !{!104, !9063, !123, !22}
!9063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9064, size: 32)
!9064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9065)
!9065 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1338, line: 37, baseType: !9066)
!9066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1338, line: 32, size: 64, elements: !9067)
!9067 = !{!9068, !9069}
!9068 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9066, file: !1338, line: 34, baseType: !155, size: 32)
!9069 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !9066, file: !1338, line: 36, baseType: !155, size: 32, offset: 32)
!9070 = !{!9071, !9072, !9073, !9074, !9075, !9076, !9077, !9078, !9080}
!9071 = !DILocalVariable(name: "pins", arg: 1, scope: !9060, file: !1573, line: 193, type: !9063)
!9072 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !9060, file: !1573, line: 193, type: !123)
!9073 = !DILocalVariable(name: "reg", arg: 3, scope: !9060, file: !1573, line: 194, type: !22)
!9074 = !DILocalVariable(name: "pin", scope: !9060, file: !1573, line: 196, type: !155)
!9075 = !DILocalVariable(name: "mux", scope: !9060, file: !1573, line: 196, type: !155)
!9076 = !DILocalVariable(name: "pin_cgf", scope: !9060, file: !1573, line: 197, type: !155)
!9077 = !DILocalVariable(name: "ret", scope: !9060, file: !1573, line: 198, type: !104)
!9078 = !DILocalVariable(name: "i", scope: !9079, file: !1573, line: 209, type: !123)
!9079 = distinct !DILexicalBlock(scope: !9060, file: !1573, line: 209, column: 2)
!9080 = !DILocalVariable(name: "gpio_out", scope: !9081, file: !1573, line: 239, type: !155)
!9081 = distinct !DILexicalBlock(scope: !9082, file: !1573, line: 238, column: 55)
!9082 = distinct !DILexicalBlock(scope: !9083, file: !1573, line: 238, column: 14)
!9083 = distinct !DILexicalBlock(scope: !9084, file: !1573, line: 236, column: 14)
!9084 = distinct !DILexicalBlock(scope: !9085, file: !1573, line: 234, column: 7)
!9085 = distinct !DILexicalBlock(scope: !9086, file: !1573, line: 209, column: 41)
!9086 = distinct !DILexicalBlock(scope: !9079, file: !1573, line: 209, column: 2)
!9087 = !DILocation(line: 0, scope: !9060)
!9088 = !DILocation(line: 0, scope: !9079)
!9089 = !DILocation(line: 209, column: 25, scope: !9086)
!9090 = !DILocation(line: 209, column: 2, scope: !9079)
!9091 = distinct !{!9091, !9090, !9092}
!9092 = !DILocation(line: 259, column: 2, scope: !9079)
!9093 = !DILocation(line: 210, column: 17, scope: !9085)
!9094 = !DILocation(line: 234, column: 7, scope: !9084)
!9095 = !DILocation(line: 234, column: 33, scope: !9084)
!9096 = !DILocation(line: 234, column: 7, scope: !9085)
!9097 = !DILocation(line: 235, column: 22, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !9084, file: !1573, line: 234, column: 49)
!9099 = !DILocation(line: 235, column: 29, scope: !9098)
!9100 = !DILocation(line: 236, column: 3, scope: !9098)
!9101 = !DILocation(line: 236, column: 14, scope: !9084)
!9102 = !DILocation(line: 239, column: 32, scope: !9081)
!9103 = !DILocation(line: 0, scope: !9081)
!9104 = !DILocation(line: 241, column: 8, scope: !9081)
!9105 = !DILocation(line: 246, column: 3, scope: !9081)
!9106 = !DILocation(line: 252, column: 9, scope: !9085)
!9107 = !DILocation(line: 255, column: 9, scope: !9085)
!9108 = !DILocation(line: 256, column: 11, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9085, file: !1573, line: 256, column: 7)
!9110 = !DILocation(line: 209, column: 37, scope: !9086)
!9111 = !DILocation(line: 256, column: 7, scope: !9085)
!9112 = !DILocation(line: 262, column: 1, scope: !9060)
!9113 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1573, file: !1573, line: 176, type: !9114, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1491, retainedNodes: !9116)
!9114 = !DISubroutineType(types: !9115)
!9115 = !{!104, !155, !155, !155}
!9116 = !{!9117, !9118, !9119, !9120}
!9117 = !DILocalVariable(name: "pin", arg: 1, scope: !9113, file: !1573, line: 176, type: !155)
!9118 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !9113, file: !1573, line: 176, type: !155)
!9119 = !DILocalVariable(name: "pin_func", arg: 3, scope: !9113, file: !1573, line: 176, type: !155)
!9120 = !DILocalVariable(name: "port_device", scope: !9113, file: !1573, line: 178, type: !1503)
!9121 = !DILocation(line: 0, scope: !9113)
!9122 = !DILocation(line: 180, column: 22, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9113, file: !1573, line: 180, column: 6)
!9124 = !DILocation(line: 180, column: 6, scope: !9113)
!9125 = !DILocation(line: 180, column: 6, scope: !9123)
!9126 = !DILocation(line: 184, column: 16, scope: !9113)
!9127 = !DILocation(line: 186, column: 19, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9113, file: !1573, line: 186, column: 6)
!9129 = !DILocation(line: 186, column: 28, scope: !9128)
!9130 = !DILocation(line: 186, column: 33, scope: !9128)
!9131 = !DILocation(line: 186, column: 6, scope: !9113)
!9132 = !DILocation(line: 190, column: 43, scope: !9113)
!9133 = !DILocation(line: 190, column: 9, scope: !9113)
!9134 = !DILocation(line: 190, column: 2, scope: !9113)
!9135 = !DILocation(line: 191, column: 1, scope: !9113)
!9136 = distinct !DISubprogram(name: "device_is_ready", scope: !2920, file: !2920, line: 47, type: !9137, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1491, retainedNodes: !9139)
!9137 = !DISubroutineType(types: !9138)
!9138 = !{!126, !1503}
!9139 = !{!9140}
!9140 = !DILocalVariable(name: "dev", arg: 1, scope: !9136, file: !2920, line: 47, type: !1503)
!9141 = !DILocation(line: 0, scope: !9136)
!9142 = !DILocation(line: 55, column: 2, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9136, file: !2920, line: 55, column: 2)
!9144 = !{i64 2149155156}
!9145 = !DILocation(line: 56, column: 9, scope: !9136)
!9146 = !DILocation(line: 56, column: 2, scope: !9136)
!9147 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !110, file: !110, line: 730, type: !9137, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1491, retainedNodes: !9148)
!9148 = !{!9149}
!9149 = !DILocalVariable(name: "dev", arg: 1, scope: !9147, file: !110, line: 730, type: !1503)
!9150 = !DILocation(line: 0, scope: !9147)
!9151 = !DILocation(line: 732, column: 9, scope: !9147)
!9152 = !DILocation(line: 732, column: 2, scope: !9147)
!9153 = distinct !DISubprogram(name: "SystemInit", scope: !1623, file: !1623, line: 167, type: !2800, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !344)
!9154 = !DILocation(line: 182, column: 1, scope: !9153)
!9155 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1623, file: !1623, line: 220, type: !2800, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1581, retainedNodes: !9156)
!9156 = !{!9157, !9158, !9159, !9160, !9161}
!9157 = !DILocalVariable(name: "tmp", scope: !9155, file: !1623, line: 222, type: !155)
!9158 = !DILocalVariable(name: "pllvco", scope: !9155, file: !1623, line: 222, type: !155)
!9159 = !DILocalVariable(name: "pllp", scope: !9155, file: !1623, line: 222, type: !155)
!9160 = !DILocalVariable(name: "pllsource", scope: !9155, file: !1623, line: 222, type: !155)
!9161 = !DILocalVariable(name: "pllm", scope: !9155, file: !1623, line: 222, type: !155)
!9162 = !DILocation(line: 0, scope: !9155)
!9163 = !DILocation(line: 225, column: 14, scope: !9155)
!9164 = !DILocation(line: 225, column: 19, scope: !9155)
!9165 = !DILocation(line: 227, column: 3, scope: !9155)
!9166 = !DILocation(line: 234, column: 7, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9155, file: !1623, line: 228, column: 3)
!9168 = !DILocation(line: 240, column: 25, scope: !9167)
!9169 = !DILocation(line: 241, column: 19, scope: !9167)
!9170 = !DILocation(line: 241, column: 27, scope: !9167)
!9171 = !DILocation(line: 243, column: 21, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9167, file: !1623, line: 243, column: 11)
!9173 = !DILocation(line: 0, scope: !9172)
!9174 = !DILocation(line: 254, column: 22, scope: !9167)
!9175 = !DILocation(line: 254, column: 62, scope: !9167)
!9176 = !DILocation(line: 255, column: 31, scope: !9167)
!9177 = !DILocation(line: 256, column: 7, scope: !9167)
!9178 = !DILocation(line: 0, scope: !9167)
!9179 = !DILocation(line: 263, column: 30, scope: !9155)
!9180 = !DILocation(line: 263, column: 52, scope: !9155)
!9181 = !DILocation(line: 263, column: 9, scope: !9155)
!9182 = !DILocation(line: 265, column: 19, scope: !9155)
!9183 = !DILocation(line: 266, column: 1, scope: !9155)
!9184 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !9185, file: !9185, line: 200, type: !9186, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !344)
!9185 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9186 = !DISubroutineType(types: !9187)
!9187 = !{!9188}
!9188 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2613, line: 44, baseType: !2612)
!9189 = !DILocation(line: 202, column: 3, scope: !9184)
!9190 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !9185, file: !9185, line: 219, type: !9191, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !9215)
!9191 = !DISubroutineType(types: !9192)
!9192 = !{!9188, !9193}
!9193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9194, size: 32)
!9194 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !9195, line: 70, baseType: !9196)
!9195 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9196 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9195, line: 49, size: 384, elements: !9197)
!9197 = !{!9198, !9199, !9200, !9201, !9202, !9203, !9204}
!9198 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !9196, file: !9195, line: 51, baseType: !155, size: 32)
!9199 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !9196, file: !9195, line: 54, baseType: !155, size: 32, offset: 32)
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !9196, file: !9195, line: 57, baseType: !155, size: 32, offset: 64)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !9196, file: !9195, line: 60, baseType: !155, size: 32, offset: 96)
!9202 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !9196, file: !9195, line: 63, baseType: !155, size: 32, offset: 128)
!9203 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !9196, file: !9195, line: 66, baseType: !155, size: 32, offset: 160)
!9204 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !9196, file: !9195, line: 69, baseType: !9205, size: 192, offset: 192)
!9205 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !9206, line: 73, baseType: !9207)
!9206 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9207 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9206, line: 45, size: 192, elements: !9208)
!9208 = !{!9209, !9210, !9211, !9212, !9213, !9214}
!9209 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !9207, file: !9206, line: 47, baseType: !155, size: 32)
!9210 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !9207, file: !9206, line: 50, baseType: !155, size: 32, offset: 32)
!9211 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !9207, file: !9206, line: 53, baseType: !155, size: 32, offset: 64)
!9212 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !9207, file: !9206, line: 56, baseType: !155, size: 32, offset: 96)
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !9207, file: !9206, line: 60, baseType: !155, size: 32, offset: 128)
!9214 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !9207, file: !9206, line: 63, baseType: !155, size: 32, offset: 160)
!9215 = !{!9216, !9217, !9218, !9219, !9223}
!9216 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !9190, file: !9185, line: 219, type: !9193)
!9217 = !DILocalVariable(name: "tickstart", scope: !9190, file: !9185, line: 221, type: !155)
!9218 = !DILocalVariable(name: "pll_config", scope: !9190, file: !9185, line: 221, type: !155)
!9219 = !DILocalVariable(name: "pwrclkchanged", scope: !9220, file: !9185, line: 391, type: !9222)
!9220 = distinct !DILexicalBlock(scope: !9221, file: !9185, line: 390, column: 3)
!9221 = distinct !DILexicalBlock(scope: !9190, file: !9185, line: 389, column: 6)
!9222 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !655, line: 188, baseType: !2619)
!9223 = !DILocalVariable(name: "tmpreg", scope: !9224, file: !9185, line: 400, type: !154)
!9224 = distinct !DILexicalBlock(scope: !9225, file: !9185, line: 400, column: 7)
!9225 = distinct !DILexicalBlock(scope: !9226, file: !9185, line: 399, column: 5)
!9226 = distinct !DILexicalBlock(scope: !9220, file: !9185, line: 398, column: 8)
!9227 = !DILocation(line: 0, scope: !9190)
!9228 = !DILocation(line: 224, column: 24, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9190, file: !9185, line: 224, column: 6)
!9230 = !DILocation(line: 224, column: 6, scope: !9190)
!9231 = !DILocation(line: 232, column: 27, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9190, file: !9185, line: 232, column: 6)
!9233 = !DILocation(line: 232, column: 43, scope: !9232)
!9234 = !DILocation(line: 232, column: 69, scope: !9232)
!9235 = !DILocation(line: 232, column: 6, scope: !9190)
!9236 = !DILocation(line: 237, column: 9, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !9238, file: !9185, line: 237, column: 8)
!9238 = distinct !DILexicalBlock(scope: !9232, file: !9185, line: 233, column: 3)
!9239 = !DILocation(line: 237, column: 39, scope: !9237)
!9240 = !DILocation(line: 237, column: 60, scope: !9237)
!9241 = !DILocation(line: 238, column: 9, scope: !9237)
!9242 = !DILocation(line: 238, column: 39, scope: !9237)
!9243 = !DILocation(line: 238, column: 60, scope: !9237)
!9244 = !DILocation(line: 238, column: 70, scope: !9237)
!9245 = !DILocation(line: 238, column: 78, scope: !9237)
!9246 = !DILocation(line: 238, column: 100, scope: !9237)
!9247 = !DILocation(line: 237, column: 8, scope: !9238)
!9248 = !DILocation(line: 240, column: 11, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9250, file: !9185, line: 240, column: 10)
!9250 = distinct !DILexicalBlock(scope: !9237, file: !9185, line: 239, column: 5)
!9251 = !DILocation(line: 240, column: 57, scope: !9249)
!9252 = !DILocation(line: 240, column: 80, scope: !9249)
!9253 = !DILocation(line: 240, column: 89, scope: !9249)
!9254 = !DILocation(line: 240, column: 10, scope: !9250)
!9255 = !DILocation(line: 248, column: 7, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9257, file: !9185, line: 248, column: 7)
!9257 = distinct !DILexicalBlock(scope: !9258, file: !9185, line: 248, column: 7)
!9258 = distinct !DILexicalBlock(scope: !9237, file: !9185, line: 246, column: 5)
!9259 = !DILocation(line: 248, column: 7, scope: !9257)
!9260 = !DILocation(line: 248, column: 7, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9256, file: !9185, line: 248, column: 7)
!9262 = !DILocation(line: 248, column: 7, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9264, file: !9185, line: 248, column: 7)
!9264 = distinct !DILexicalBlock(scope: !9256, file: !9185, line: 248, column: 7)
!9265 = !DILocation(line: 248, column: 7, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9264, file: !9185, line: 248, column: 7)
!9267 = !DILocation(line: 0, scope: !9256)
!9268 = !DILocation(line: 251, column: 30, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9258, file: !9185, line: 251, column: 10)
!9270 = !DILocation(line: 251, column: 40, scope: !9269)
!9271 = !DILocation(line: 0, scope: !9269)
!9272 = !DILocation(line: 251, column: 10, scope: !9258)
!9273 = !DILocation(line: 257, column: 15, scope: !9274)
!9274 = distinct !DILexicalBlock(scope: !9269, file: !9185, line: 252, column: 7)
!9275 = !DILocation(line: 257, column: 51, scope: !9274)
!9276 = !DILocation(line: 257, column: 9, scope: !9274)
!9277 = !DILocation(line: 259, column: 15, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9279, file: !9185, line: 259, column: 14)
!9279 = distinct !DILexicalBlock(scope: !9274, file: !9185, line: 258, column: 9)
!9280 = !DILocation(line: 259, column: 29, scope: !9278)
!9281 = !DILocation(line: 259, column: 43, scope: !9278)
!9282 = !DILocation(line: 259, column: 14, scope: !9279)
!9283 = distinct !{!9283, !9276, !9284}
!9284 = !DILocation(line: 263, column: 9, scope: !9274)
!9285 = !DILocation(line: 271, column: 15, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9269, file: !9185, line: 266, column: 7)
!9287 = !DILocation(line: 271, column: 9, scope: !9286)
!9288 = !DILocation(line: 273, column: 15, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9290, file: !9185, line: 273, column: 14)
!9290 = distinct !DILexicalBlock(scope: !9286, file: !9185, line: 272, column: 9)
!9291 = !DILocation(line: 273, column: 29, scope: !9289)
!9292 = !DILocation(line: 273, column: 43, scope: !9289)
!9293 = !DILocation(line: 273, column: 14, scope: !9290)
!9294 = distinct !{!9294, !9287, !9295}
!9295 = !DILocation(line: 277, column: 9, scope: !9286)
!9296 = !DILocation(line: 282, column: 27, scope: !9297)
!9297 = distinct !DILexicalBlock(scope: !9190, file: !9185, line: 282, column: 6)
!9298 = !DILocation(line: 282, column: 43, scope: !9297)
!9299 = !DILocation(line: 282, column: 69, scope: !9297)
!9300 = !DILocation(line: 282, column: 6, scope: !9190)
!9301 = !DILocation(line: 289, column: 9, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9303, file: !9185, line: 289, column: 8)
!9303 = distinct !DILexicalBlock(scope: !9297, file: !9185, line: 283, column: 3)
!9304 = !DILocation(line: 289, column: 39, scope: !9302)
!9305 = !DILocation(line: 289, column: 60, scope: !9302)
!9306 = !DILocation(line: 290, column: 9, scope: !9302)
!9307 = !DILocation(line: 290, column: 39, scope: !9302)
!9308 = !DILocation(line: 290, column: 60, scope: !9302)
!9309 = !DILocation(line: 290, column: 70, scope: !9302)
!9310 = !DILocation(line: 290, column: 78, scope: !9302)
!9311 = !DILocation(line: 290, column: 100, scope: !9302)
!9312 = !DILocation(line: 289, column: 8, scope: !9303)
!9313 = !DILocation(line: 293, column: 11, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9315, file: !9185, line: 293, column: 10)
!9315 = distinct !DILexicalBlock(scope: !9302, file: !9185, line: 291, column: 5)
!9316 = !DILocation(line: 293, column: 57, scope: !9314)
!9317 = !DILocation(line: 293, column: 80, scope: !9314)
!9318 = !DILocation(line: 293, column: 89, scope: !9314)
!9319 = !DILocation(line: 293, column: 10, scope: !9315)
!9320 = !DILocation(line: 307, column: 30, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9322, file: !9185, line: 307, column: 10)
!9322 = distinct !DILexicalBlock(scope: !9302, file: !9185, line: 305, column: 5)
!9323 = !DILocation(line: 307, column: 39, scope: !9321)
!9324 = !DILocation(line: 307, column: 10, scope: !9322)
!9325 = !DILocation(line: 310, column: 9, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9321, file: !9185, line: 308, column: 7)
!9327 = !DILocation(line: 313, column: 21, scope: !9326)
!9328 = !DILocation(line: 316, column: 9, scope: !9326)
!9329 = !DILocation(line: 316, column: 15, scope: !9326)
!9330 = !DILocation(line: 316, column: 51, scope: !9326)
!9331 = !DILocation(line: 318, column: 15, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9333, file: !9185, line: 318, column: 14)
!9333 = distinct !DILexicalBlock(scope: !9326, file: !9185, line: 317, column: 9)
!9334 = !DILocation(line: 318, column: 29, scope: !9332)
!9335 = !DILocation(line: 318, column: 43, scope: !9332)
!9336 = !DILocation(line: 318, column: 14, scope: !9333)
!9337 = distinct !{!9337, !9328, !9338}
!9338 = !DILocation(line: 322, column: 9, scope: !9326)
!9339 = !DILocation(line: 330, column: 9, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9321, file: !9185, line: 328, column: 7)
!9341 = !DILocation(line: 333, column: 21, scope: !9340)
!9342 = !DILocation(line: 336, column: 9, scope: !9340)
!9343 = !DILocation(line: 336, column: 15, scope: !9340)
!9344 = !DILocation(line: 338, column: 15, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9346, file: !9185, line: 338, column: 14)
!9346 = distinct !DILexicalBlock(scope: !9340, file: !9185, line: 337, column: 9)
!9347 = !DILocation(line: 338, column: 29, scope: !9345)
!9348 = !DILocation(line: 338, column: 43, scope: !9345)
!9349 = !DILocation(line: 338, column: 14, scope: !9346)
!9350 = distinct !{!9350, !9342, !9351}
!9351 = !DILocation(line: 342, column: 9, scope: !9340)
!9352 = !DILocation(line: 0, scope: !9302)
!9353 = !DILocation(line: 347, column: 27, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9190, file: !9185, line: 347, column: 6)
!9355 = !DILocation(line: 347, column: 43, scope: !9354)
!9356 = !DILocation(line: 347, column: 69, scope: !9354)
!9357 = !DILocation(line: 347, column: 6, scope: !9190)
!9358 = !DILocation(line: 353, column: 28, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9360, file: !9185, line: 353, column: 8)
!9360 = distinct !DILexicalBlock(scope: !9354, file: !9185, line: 348, column: 3)
!9361 = !DILocation(line: 353, column: 37, scope: !9359)
!9362 = !DILocation(line: 353, column: 8, scope: !9360)
!9363 = !DILocation(line: 356, column: 7, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9359, file: !9185, line: 354, column: 5)
!9365 = !DILocation(line: 359, column: 19, scope: !9364)
!9366 = !DILocation(line: 362, column: 7, scope: !9364)
!9367 = !DILocation(line: 362, column: 13, scope: !9364)
!9368 = !DILocation(line: 362, column: 49, scope: !9364)
!9369 = !DILocation(line: 364, column: 13, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9371, file: !9185, line: 364, column: 12)
!9371 = distinct !DILexicalBlock(scope: !9364, file: !9185, line: 363, column: 7)
!9372 = !DILocation(line: 364, column: 27, scope: !9370)
!9373 = !DILocation(line: 364, column: 41, scope: !9370)
!9374 = !DILocation(line: 364, column: 12, scope: !9371)
!9375 = distinct !{!9375, !9366, !9376}
!9376 = !DILocation(line: 368, column: 7, scope: !9364)
!9377 = !DILocation(line: 373, column: 7, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9359, file: !9185, line: 371, column: 5)
!9379 = !DILocation(line: 376, column: 19, scope: !9378)
!9380 = !DILocation(line: 379, column: 7, scope: !9378)
!9381 = !DILocation(line: 379, column: 13, scope: !9378)
!9382 = !DILocation(line: 381, column: 13, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9384, file: !9185, line: 381, column: 12)
!9384 = distinct !DILexicalBlock(scope: !9378, file: !9185, line: 380, column: 7)
!9385 = !DILocation(line: 381, column: 27, scope: !9383)
!9386 = !DILocation(line: 381, column: 41, scope: !9383)
!9387 = !DILocation(line: 381, column: 12, scope: !9384)
!9388 = distinct !{!9388, !9380, !9389}
!9389 = !DILocation(line: 385, column: 7, scope: !9378)
!9390 = !DILocation(line: 389, column: 27, scope: !9221)
!9391 = !DILocation(line: 389, column: 43, scope: !9221)
!9392 = !DILocation(line: 389, column: 69, scope: !9221)
!9393 = !DILocation(line: 389, column: 6, scope: !9190)
!9394 = !DILocation(line: 0, scope: !9220)
!9395 = !DILocation(line: 398, column: 8, scope: !9226)
!9396 = !DILocation(line: 398, column: 8, scope: !9220)
!9397 = !DILocation(line: 400, column: 7, scope: !9224)
!9398 = !DILocation(line: 400, column: 7, scope: !9225)
!9399 = !DILocation(line: 402, column: 5, scope: !9225)
!9400 = !DILocation(line: 404, column: 8, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9220, file: !9185, line: 404, column: 8)
!9402 = !DILocation(line: 404, column: 8, scope: !9220)
!9403 = !DILocation(line: 407, column: 7, scope: !9404)
!9404 = distinct !DILexicalBlock(scope: !9401, file: !9185, line: 405, column: 5)
!9405 = !DILocation(line: 410, column: 19, scope: !9404)
!9406 = !DILocation(line: 412, column: 7, scope: !9404)
!9407 = !DILocation(line: 412, column: 13, scope: !9404)
!9408 = !DILocation(line: 414, column: 13, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9410, file: !9185, line: 414, column: 12)
!9410 = distinct !DILexicalBlock(scope: !9404, file: !9185, line: 413, column: 7)
!9411 = !DILocation(line: 414, column: 27, scope: !9409)
!9412 = !DILocation(line: 414, column: 40, scope: !9409)
!9413 = !DILocation(line: 414, column: 12, scope: !9410)
!9414 = distinct !{!9414, !9406, !9415}
!9415 = !DILocation(line: 418, column: 7, scope: !9404)
!9416 = !DILocation(line: 422, column: 5, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9418, file: !9185, line: 422, column: 5)
!9418 = distinct !DILexicalBlock(scope: !9220, file: !9185, line: 422, column: 5)
!9419 = !DILocation(line: 422, column: 5, scope: !9418)
!9420 = !DILocation(line: 422, column: 5, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9417, file: !9185, line: 422, column: 5)
!9422 = !DILocation(line: 422, column: 5, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9424, file: !9185, line: 422, column: 5)
!9424 = distinct !DILexicalBlock(scope: !9417, file: !9185, line: 422, column: 5)
!9425 = !DILocation(line: 422, column: 5, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9424, file: !9185, line: 422, column: 5)
!9427 = !DILocation(line: 0, scope: !9417)
!9428 = !DILocation(line: 424, column: 28, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9220, file: !9185, line: 424, column: 8)
!9430 = !DILocation(line: 424, column: 38, scope: !9429)
!9431 = !DILocation(line: 0, scope: !9429)
!9432 = !DILocation(line: 424, column: 8, scope: !9220)
!9433 = !DILocation(line: 430, column: 13, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9429, file: !9185, line: 425, column: 5)
!9435 = !DILocation(line: 430, column: 49, scope: !9434)
!9436 = !DILocation(line: 430, column: 7, scope: !9434)
!9437 = !DILocation(line: 432, column: 13, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9439, file: !9185, line: 432, column: 12)
!9439 = distinct !DILexicalBlock(scope: !9434, file: !9185, line: 431, column: 7)
!9440 = !DILocation(line: 432, column: 27, scope: !9438)
!9441 = !DILocation(line: 432, column: 41, scope: !9438)
!9442 = !DILocation(line: 432, column: 12, scope: !9439)
!9443 = distinct !{!9443, !9436, !9444}
!9444 = !DILocation(line: 436, column: 7, scope: !9434)
!9445 = !DILocation(line: 444, column: 13, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9429, file: !9185, line: 439, column: 5)
!9447 = !DILocation(line: 444, column: 7, scope: !9446)
!9448 = !DILocation(line: 446, column: 13, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9450, file: !9185, line: 446, column: 12)
!9450 = distinct !DILexicalBlock(scope: !9446, file: !9185, line: 445, column: 7)
!9451 = !DILocation(line: 446, column: 27, scope: !9449)
!9452 = !DILocation(line: 446, column: 41, scope: !9449)
!9453 = !DILocation(line: 446, column: 12, scope: !9450)
!9454 = distinct !{!9454, !9447, !9455}
!9455 = !DILocation(line: 450, column: 7, scope: !9446)
!9456 = !DILocation(line: 454, column: 8, scope: !9220)
!9457 = !DILocation(line: 456, column: 7, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9459, file: !9185, line: 455, column: 5)
!9459 = distinct !DILexicalBlock(scope: !9220, file: !9185, line: 454, column: 8)
!9460 = !DILocation(line: 457, column: 5, scope: !9458)
!9461 = !DILocation(line: 462, column: 31, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9190, file: !9185, line: 462, column: 7)
!9463 = !DILocation(line: 462, column: 41, scope: !9462)
!9464 = !DILocation(line: 462, column: 7, scope: !9190)
!9465 = !DILocation(line: 465, column: 8, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9467, file: !9185, line: 465, column: 8)
!9467 = distinct !DILexicalBlock(scope: !9462, file: !9185, line: 463, column: 3)
!9468 = !DILocation(line: 465, column: 38, scope: !9466)
!9469 = !DILocation(line: 465, column: 8, scope: !9467)
!9470 = !DILocation(line: 467, column: 44, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9472, file: !9185, line: 467, column: 10)
!9472 = distinct !DILexicalBlock(scope: !9466, file: !9185, line: 466, column: 5)
!9473 = !DILocation(line: 0, scope: !9471)
!9474 = !DILocation(line: 467, column: 10, scope: !9472)
!9475 = !DILocation(line: 483, column: 15, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9471, file: !9185, line: 468, column: 7)
!9477 = !DILocation(line: 483, column: 9, scope: !9476)
!9478 = !DILocation(line: 485, column: 15, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9480, file: !9185, line: 485, column: 14)
!9480 = distinct !DILexicalBlock(scope: !9476, file: !9185, line: 484, column: 9)
!9481 = !DILocation(line: 485, column: 29, scope: !9479)
!9482 = !DILocation(line: 485, column: 43, scope: !9479)
!9483 = !DILocation(line: 485, column: 14, scope: !9480)
!9484 = distinct !{!9484, !9477, !9485}
!9485 = !DILocation(line: 489, column: 9, scope: !9476)
!9486 = !DILocation(line: 492, column: 9, scope: !9476)
!9487 = !DILocation(line: 498, column: 9, scope: !9476)
!9488 = !DILocation(line: 501, column: 21, scope: !9476)
!9489 = !DILocation(line: 504, column: 9, scope: !9476)
!9490 = !DILocation(line: 504, column: 15, scope: !9476)
!9491 = !DILocation(line: 504, column: 51, scope: !9476)
!9492 = !DILocation(line: 506, column: 15, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9494, file: !9185, line: 506, column: 14)
!9494 = distinct !DILexicalBlock(scope: !9476, file: !9185, line: 505, column: 9)
!9495 = !DILocation(line: 506, column: 29, scope: !9493)
!9496 = !DILocation(line: 506, column: 43, scope: !9493)
!9497 = !DILocation(line: 506, column: 14, scope: !9494)
!9498 = distinct !{!9498, !9489, !9499}
!9499 = !DILocation(line: 510, column: 9, scope: !9476)
!9500 = !DILocation(line: 521, column: 15, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9471, file: !9185, line: 513, column: 7)
!9502 = !DILocation(line: 521, column: 9, scope: !9501)
!9503 = !DILocation(line: 523, column: 15, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9505, file: !9185, line: 523, column: 14)
!9505 = distinct !DILexicalBlock(scope: !9501, file: !9185, line: 522, column: 9)
!9506 = !DILocation(line: 523, column: 29, scope: !9504)
!9507 = !DILocation(line: 523, column: 43, scope: !9504)
!9508 = !DILocation(line: 523, column: 14, scope: !9505)
!9509 = distinct !{!9509, !9502, !9510}
!9510 = !DILocation(line: 527, column: 9, scope: !9501)
!9511 = !DILocation(line: 533, column: 44, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9513, file: !9185, line: 533, column: 10)
!9513 = distinct !DILexicalBlock(scope: !9466, file: !9185, line: 531, column: 5)
!9514 = !DILocation(line: 533, column: 10, scope: !9513)
!9515 = !DILocation(line: 540, column: 27, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9512, file: !9185, line: 538, column: 7)
!9517 = !DILocation(line: 551, column: 14, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9516, file: !9185, line: 550, column: 13)
!9519 = !DILocation(line: 551, column: 81, scope: !9518)
!9520 = !DILocation(line: 551, column: 55, scope: !9518)
!9521 = !DILocation(line: 551, column: 92, scope: !9518)
!9522 = !DILocation(line: 552, column: 14, scope: !9518)
!9523 = !DILocation(line: 552, column: 80, scope: !9518)
!9524 = !DILocation(line: 552, column: 53, scope: !9518)
!9525 = !DILocation(line: 552, column: 111, scope: !9518)
!9526 = !DILocation(line: 553, column: 14, scope: !9518)
!9527 = !DILocation(line: 553, column: 80, scope: !9518)
!9528 = !DILocation(line: 553, column: 86, scope: !9518)
!9529 = !DILocation(line: 553, column: 53, scope: !9518)
!9530 = !DILocation(line: 553, column: 111, scope: !9518)
!9531 = !DILocation(line: 554, column: 14, scope: !9518)
!9532 = !DILocation(line: 554, column: 82, scope: !9518)
!9533 = !DILocation(line: 554, column: 101, scope: !9518)
!9534 = !DILocation(line: 554, column: 53, scope: !9518)
!9535 = !DILocation(line: 554, column: 126, scope: !9518)
!9536 = !DILocation(line: 555, column: 14, scope: !9518)
!9537 = !DILocation(line: 555, column: 80, scope: !9518)
!9538 = !DILocation(line: 555, column: 85, scope: !9518)
!9539 = !DILocation(line: 555, column: 53, scope: !9518)
!9540 = !DILocation(line: 550, column: 13, scope: !9516)
!9541 = !DILocation(line: 563, column: 3, scope: !9190)
!9542 = !DILocation(line: 564, column: 1, scope: !9190)
!9543 = !DISubprogram(name: "HAL_GetTick", scope: !9544, file: !9544, line: 234, type: !5012, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !344)
!9544 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9545 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !9185, file: !9185, line: 591, type: !9546, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !9557)
!9546 = !DISubroutineType(types: !9547)
!9547 = !{!9188, !9548, !155}
!9548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9549, size: 32)
!9549 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !9195, line: 92, baseType: !9550)
!9550 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9195, line: 75, size: 160, elements: !9551)
!9551 = !{!9552, !9553, !9554, !9555, !9556}
!9552 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !9550, file: !9195, line: 77, baseType: !155, size: 32)
!9553 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !9550, file: !9195, line: 80, baseType: !155, size: 32, offset: 32)
!9554 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !9550, file: !9195, line: 83, baseType: !155, size: 32, offset: 64)
!9555 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !9550, file: !9195, line: 86, baseType: !155, size: 32, offset: 96)
!9556 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !9550, file: !9195, line: 89, baseType: !155, size: 32, offset: 128)
!9557 = !{!9558, !9559, !9560}
!9558 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !9545, file: !9185, line: 591, type: !9548)
!9559 = !DILocalVariable(name: "FLatency", arg: 2, scope: !9545, file: !9185, line: 591, type: !155)
!9560 = !DILocalVariable(name: "tickstart", scope: !9545, file: !9185, line: 593, type: !155)
!9561 = !DILocation(line: 0, scope: !9545)
!9562 = !DILocation(line: 596, column: 24, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9545, file: !9185, line: 596, column: 6)
!9564 = !DILocation(line: 596, column: 6, scope: !9545)
!9565 = !DILocation(line: 610, column: 17, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9545, file: !9185, line: 610, column: 6)
!9567 = !DILocation(line: 610, column: 15, scope: !9566)
!9568 = !DILocation(line: 610, column: 6, scope: !9545)
!9569 = !DILocation(line: 613, column: 5, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9566, file: !9185, line: 611, column: 3)
!9571 = !DILocation(line: 617, column: 8, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9570, file: !9185, line: 617, column: 8)
!9573 = !DILocation(line: 617, column: 34, scope: !9572)
!9574 = !DILocation(line: 617, column: 8, scope: !9570)
!9575 = !DILocation(line: 624, column: 27, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9545, file: !9185, line: 624, column: 6)
!9577 = !DILocation(line: 624, column: 38, scope: !9576)
!9578 = !DILocation(line: 624, column: 60, scope: !9576)
!9579 = !DILocation(line: 624, column: 6, scope: !9545)
!9580 = !DILocation(line: 628, column: 40, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9582, file: !9185, line: 628, column: 8)
!9582 = distinct !DILexicalBlock(scope: !9576, file: !9185, line: 625, column: 3)
!9583 = !DILocation(line: 628, column: 63, scope: !9581)
!9584 = !DILocation(line: 628, column: 8, scope: !9582)
!9585 = !DILocation(line: 630, column: 7, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9581, file: !9185, line: 629, column: 5)
!9587 = !DILocation(line: 633, column: 29, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9582, file: !9185, line: 633, column: 8)
!9589 = !DILocation(line: 631, column: 5, scope: !9586)
!9590 = !DILocation(line: 633, column: 40, scope: !9588)
!9591 = !DILocation(line: 633, column: 63, scope: !9588)
!9592 = !DILocation(line: 633, column: 8, scope: !9582)
!9593 = !DILocation(line: 635, column: 7, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9588, file: !9185, line: 634, column: 5)
!9595 = !DILocation(line: 636, column: 5, scope: !9594)
!9596 = !DILocation(line: 639, column: 5, scope: !9582)
!9597 = !DILocation(line: 643, column: 27, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9545, file: !9185, line: 643, column: 6)
!9599 = !DILocation(line: 640, column: 3, scope: !9582)
!9600 = !DILocation(line: 643, column: 38, scope: !9598)
!9601 = !DILocation(line: 643, column: 62, scope: !9598)
!9602 = !DILocation(line: 643, column: 6, scope: !9545)
!9603 = !DILocation(line: 648, column: 27, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9605, file: !9185, line: 648, column: 8)
!9605 = distinct !DILexicalBlock(scope: !9598, file: !9185, line: 644, column: 3)
!9606 = !DILocation(line: 648, column: 8, scope: !9605)
!9607 = !DILocation(line: 651, column: 10, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9609, file: !9185, line: 651, column: 10)
!9609 = distinct !DILexicalBlock(scope: !9604, file: !9185, line: 649, column: 5)
!9610 = !DILocation(line: 651, column: 46, scope: !9608)
!9611 = !DILocation(line: 651, column: 10, scope: !9609)
!9612 = !DILocation(line: 661, column: 10, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9614, file: !9185, line: 661, column: 10)
!9614 = distinct !DILexicalBlock(scope: !9615, file: !9185, line: 659, column: 5)
!9615 = distinct !DILexicalBlock(scope: !9604, file: !9185, line: 657, column: 13)
!9616 = !DILocation(line: 661, column: 46, scope: !9613)
!9617 = !DILocation(line: 661, column: 10, scope: !9614)
!9618 = !DILocation(line: 670, column: 10, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9620, file: !9185, line: 670, column: 10)
!9620 = distinct !DILexicalBlock(scope: !9615, file: !9185, line: 668, column: 5)
!9621 = !DILocation(line: 670, column: 46, scope: !9619)
!9622 = !DILocation(line: 670, column: 10, scope: !9620)
!9623 = !DILocation(line: 676, column: 5, scope: !9605)
!9624 = !DILocation(line: 679, column: 17, scope: !9605)
!9625 = !DILocation(line: 681, column: 5, scope: !9605)
!9626 = !DILocation(line: 681, column: 12, scope: !9605)
!9627 = !DILocation(line: 681, column: 65, scope: !9605)
!9628 = !DILocation(line: 681, column: 78, scope: !9605)
!9629 = !DILocation(line: 681, column: 42, scope: !9605)
!9630 = !DILocation(line: 683, column: 12, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9632, file: !9185, line: 683, column: 11)
!9632 = distinct !DILexicalBlock(scope: !9605, file: !9185, line: 682, column: 5)
!9633 = !DILocation(line: 683, column: 26, scope: !9631)
!9634 = !DILocation(line: 683, column: 39, scope: !9631)
!9635 = !DILocation(line: 683, column: 11, scope: !9632)
!9636 = distinct !{!9636, !9625, !9637}
!9637 = !DILocation(line: 687, column: 5, scope: !9605)
!9638 = !DILocation(line: 691, column: 17, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9545, file: !9185, line: 691, column: 6)
!9640 = !DILocation(line: 691, column: 15, scope: !9639)
!9641 = !DILocation(line: 691, column: 6, scope: !9545)
!9642 = !DILocation(line: 694, column: 5, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9639, file: !9185, line: 692, column: 3)
!9644 = !DILocation(line: 698, column: 8, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9643, file: !9185, line: 698, column: 8)
!9646 = !DILocation(line: 698, column: 34, scope: !9645)
!9647 = !DILocation(line: 698, column: 8, scope: !9643)
!9648 = !DILocation(line: 705, column: 27, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9545, file: !9185, line: 705, column: 6)
!9650 = !DILocation(line: 705, column: 38, scope: !9649)
!9651 = !DILocation(line: 705, column: 61, scope: !9649)
!9652 = !DILocation(line: 705, column: 6, scope: !9545)
!9653 = !DILocation(line: 708, column: 5, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9649, file: !9185, line: 706, column: 3)
!9655 = !DILocation(line: 712, column: 27, scope: !9656)
!9656 = distinct !DILexicalBlock(scope: !9545, file: !9185, line: 712, column: 6)
!9657 = !DILocation(line: 709, column: 3, scope: !9654)
!9658 = !DILocation(line: 712, column: 38, scope: !9656)
!9659 = !DILocation(line: 712, column: 61, scope: !9656)
!9660 = !DILocation(line: 712, column: 6, scope: !9545)
!9661 = !DILocation(line: 715, column: 5, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9656, file: !9185, line: 713, column: 3)
!9663 = !DILocation(line: 716, column: 3, scope: !9662)
!9664 = !DILocation(line: 719, column: 21, scope: !9545)
!9665 = !DILocation(line: 719, column: 70, scope: !9545)
!9666 = !DILocation(line: 719, column: 91, scope: !9545)
!9667 = !DILocation(line: 719, column: 50, scope: !9545)
!9668 = !DILocation(line: 719, column: 47, scope: !9545)
!9669 = !DILocation(line: 719, column: 19, scope: !9545)
!9670 = !DILocation(line: 722, column: 17, scope: !9545)
!9671 = !DILocation(line: 722, column: 3, scope: !9545)
!9672 = !DILocation(line: 724, column: 3, scope: !9545)
!9673 = !DILocation(line: 725, column: 1, scope: !9545)
!9674 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !9185, file: !9185, line: 885, type: !5012, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !9675)
!9675 = !{!9676, !9677, !9678, !9679}
!9676 = !DILocalVariable(name: "pllm", scope: !9674, file: !9185, line: 887, type: !155)
!9677 = !DILocalVariable(name: "pllvco", scope: !9674, file: !9185, line: 887, type: !155)
!9678 = !DILocalVariable(name: "pllp", scope: !9674, file: !9185, line: 887, type: !155)
!9679 = !DILocalVariable(name: "sysclockfreq", scope: !9674, file: !9185, line: 888, type: !155)
!9680 = !DILocation(line: 0, scope: !9674)
!9681 = !DILocation(line: 891, column: 16, scope: !9674)
!9682 = !DILocation(line: 891, column: 21, scope: !9674)
!9683 = !DILocation(line: 891, column: 3, scope: !9674)
!9684 = !DILocation(line: 901, column: 7, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9686, file: !9185, line: 899, column: 5)
!9686 = distinct !DILexicalBlock(scope: !9674, file: !9185, line: 892, column: 3)
!9687 = !DILocation(line: 907, column: 19, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9686, file: !9185, line: 904, column: 5)
!9689 = !DILocation(line: 907, column: 27, scope: !9688)
!9690 = !DILocation(line: 908, column: 10, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9688, file: !9185, line: 908, column: 10)
!9692 = !DILocation(line: 908, column: 40, scope: !9691)
!9693 = !DILocation(line: 0, scope: !9691)
!9694 = !DILocation(line: 908, column: 10, scope: !9688)
!9695 = !DILocation(line: 911, column: 53, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9691, file: !9185, line: 909, column: 7)
!9697 = !DILocation(line: 911, column: 130, scope: !9696)
!9698 = !DILocation(line: 912, column: 7, scope: !9696)
!9699 = !DILocation(line: 916, column: 56, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9691, file: !9185, line: 914, column: 7)
!9701 = !DILocation(line: 916, column: 53, scope: !9700)
!9702 = !DILocation(line: 916, column: 132, scope: !9700)
!9703 = !DILocation(line: 916, column: 130, scope: !9700)
!9704 = !DILocation(line: 916, column: 18, scope: !9700)
!9705 = !DILocation(line: 918, column: 23, scope: !9688)
!9706 = !DILocation(line: 918, column: 82, scope: !9688)
!9707 = !DILocation(line: 920, column: 28, scope: !9688)
!9708 = !DILocation(line: 921, column: 7, scope: !9688)
!9709 = !DILocation(line: 0, scope: !9686)
!9710 = !DILocation(line: 929, column: 3, scope: !9674)
!9711 = !DISubprogram(name: "HAL_InitTick", scope: !9544, file: !9544, line: 223, type: !9712, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !344)
!9712 = !DISubroutineType(types: !9713)
!9713 = !{!9188, !155}
!9714 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !9185, file: !9185, line: 775, type: !9715, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !9717)
!9715 = !DISubroutineType(types: !9716)
!9716 = !{null, !155, !155, !155}
!9717 = !{!9718, !9719, !9720, !9721, !9731, !9735}
!9718 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !9714, file: !9185, line: 775, type: !155)
!9719 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !9714, file: !9185, line: 775, type: !155)
!9720 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !9714, file: !9185, line: 775, type: !155)
!9721 = !DILocalVariable(name: "GPIO_InitStruct", scope: !9714, file: !9185, line: 777, type: !9722)
!9722 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !9723, line: 62, baseType: !9724)
!9723 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9724 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9723, line: 46, size: 160, elements: !9725)
!9725 = !{!9726, !9727, !9728, !9729, !9730}
!9726 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !9724, file: !9723, line: 48, baseType: !155, size: 32)
!9727 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !9724, file: !9723, line: 51, baseType: !155, size: 32, offset: 32)
!9728 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !9724, file: !9723, line: 54, baseType: !155, size: 32, offset: 64)
!9729 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !9724, file: !9723, line: 57, baseType: !155, size: 32, offset: 96)
!9730 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !9724, file: !9723, line: 60, baseType: !155, size: 32, offset: 128)
!9731 = !DILocalVariable(name: "tmpreg", scope: !9732, file: !9185, line: 787, type: !154)
!9732 = distinct !DILexicalBlock(scope: !9733, file: !9185, line: 787, column: 5)
!9733 = distinct !DILexicalBlock(scope: !9734, file: !9185, line: 783, column: 3)
!9734 = distinct !DILexicalBlock(scope: !9714, file: !9185, line: 782, column: 6)
!9735 = !DILocalVariable(name: "tmpreg", scope: !9736, file: !9185, line: 811, type: !154)
!9736 = distinct !DILexicalBlock(scope: !9737, file: !9185, line: 811, column: 5)
!9737 = distinct !DILexicalBlock(scope: !9734, file: !9185, line: 807, column: 3)
!9738 = !DILocation(line: 0, scope: !9714)
!9739 = !DILocation(line: 777, column: 3, scope: !9714)
!9740 = !DILocation(line: 777, column: 20, scope: !9714)
!9741 = !DILocation(line: 782, column: 15, scope: !9734)
!9742 = !DILocation(line: 782, column: 6, scope: !9714)
!9743 = !DILocation(line: 787, column: 5, scope: !9732)
!9744 = !DILocation(line: 787, column: 5, scope: !9733)
!9745 = !DILocation(line: 790, column: 21, scope: !9733)
!9746 = !DILocation(line: 790, column: 25, scope: !9733)
!9747 = !DILocation(line: 791, column: 21, scope: !9733)
!9748 = !DILocation(line: 791, column: 26, scope: !9733)
!9749 = !DILocation(line: 792, column: 21, scope: !9733)
!9750 = !DILocation(line: 792, column: 27, scope: !9733)
!9751 = !DILocation(line: 793, column: 21, scope: !9733)
!9752 = !DILocation(line: 793, column: 26, scope: !9733)
!9753 = !DILocation(line: 794, column: 21, scope: !9733)
!9754 = !DILocation(line: 794, column: 31, scope: !9733)
!9755 = !DILocation(line: 795, column: 5, scope: !9733)
!9756 = !DILocation(line: 798, column: 5, scope: !9733)
!9757 = !DILocation(line: 804, column: 3, scope: !9733)
!9758 = !DILocation(line: 811, column: 5, scope: !9736)
!9759 = !DILocation(line: 811, column: 5, scope: !9737)
!9760 = !DILocation(line: 814, column: 21, scope: !9737)
!9761 = !DILocation(line: 814, column: 25, scope: !9737)
!9762 = !DILocation(line: 815, column: 21, scope: !9737)
!9763 = !DILocation(line: 815, column: 26, scope: !9737)
!9764 = !DILocation(line: 816, column: 21, scope: !9737)
!9765 = !DILocation(line: 816, column: 27, scope: !9737)
!9766 = !DILocation(line: 817, column: 21, scope: !9737)
!9767 = !DILocation(line: 817, column: 26, scope: !9737)
!9768 = !DILocation(line: 818, column: 21, scope: !9737)
!9769 = !DILocation(line: 818, column: 31, scope: !9737)
!9770 = !DILocation(line: 819, column: 5, scope: !9737)
!9771 = !DILocation(line: 822, column: 5, scope: !9737)
!9772 = !DILocation(line: 0, scope: !9734)
!9773 = !DILocation(line: 830, column: 1, scope: !9714)
!9774 = !DISubprogram(name: "HAL_GPIO_Init", scope: !9723, file: !9723, line: 224, type: !9775, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !344)
!9775 = !DISubroutineType(types: !9776)
!9776 = !{null, !2682, !9777}
!9777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9722, size: 32)
!9778 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !9185, file: !9185, line: 841, type: !2800, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !344)
!9779 = !DILocation(line: 843, column: 38, scope: !9778)
!9780 = !DILocation(line: 844, column: 1, scope: !9778)
!9781 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !9185, file: !9185, line: 850, type: !2800, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !344)
!9782 = !DILocation(line: 852, column: 38, scope: !9781)
!9783 = !DILocation(line: 853, column: 1, scope: !9781)
!9784 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !9185, file: !9185, line: 941, type: !5012, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !344)
!9785 = !DILocation(line: 943, column: 10, scope: !9784)
!9786 = !DILocation(line: 943, column: 3, scope: !9784)
!9787 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !9185, file: !9185, line: 952, type: !5012, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !344)
!9788 = !DILocation(line: 955, column: 11, scope: !9787)
!9789 = !DILocation(line: 955, column: 56, scope: !9787)
!9790 = !DILocation(line: 955, column: 78, scope: !9787)
!9791 = !DILocation(line: 955, column: 36, scope: !9787)
!9792 = !DILocation(line: 955, column: 33, scope: !9787)
!9793 = !DILocation(line: 955, column: 3, scope: !9787)
!9794 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !9185, file: !9185, line: 964, type: !5012, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !344)
!9795 = !DILocation(line: 967, column: 11, scope: !9794)
!9796 = !DILocation(line: 967, column: 55, scope: !9794)
!9797 = !DILocation(line: 967, column: 77, scope: !9794)
!9798 = !DILocation(line: 967, column: 35, scope: !9794)
!9799 = !DILocation(line: 967, column: 32, scope: !9794)
!9800 = !DILocation(line: 967, column: 3, scope: !9794)
!9801 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !9185, file: !9185, line: 977, type: !9802, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !9804)
!9802 = !DISubroutineType(types: !9803)
!9803 = !{null, !9193}
!9804 = !{!9805}
!9805 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !9801, file: !9185, line: 977, type: !9193)
!9806 = !DILocation(line: 0, scope: !9801)
!9807 = !DILocation(line: 980, column: 22, scope: !9801)
!9808 = !DILocation(line: 980, column: 37, scope: !9801)
!9809 = !DILocation(line: 983, column: 12, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9801, file: !9185, line: 983, column: 6)
!9811 = !DILocation(line: 983, column: 15, scope: !9810)
!9812 = !DILocation(line: 983, column: 31, scope: !9810)
!9813 = !DILocation(line: 983, column: 6, scope: !9801)
!9814 = !DILocation(line: 985, column: 24, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9810, file: !9185, line: 984, column: 3)
!9816 = !DILocation(line: 985, column: 33, scope: !9815)
!9817 = !DILocation(line: 986, column: 3, scope: !9815)
!9818 = !DILocation(line: 987, column: 17, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9810, file: !9185, line: 987, column: 11)
!9820 = !DILocation(line: 987, column: 20, scope: !9819)
!9821 = !DILocation(line: 987, column: 35, scope: !9819)
!9822 = !DILocation(line: 0, scope: !9819)
!9823 = !DILocation(line: 987, column: 11, scope: !9810)
!9824 = !DILocation(line: 989, column: 33, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9819, file: !9185, line: 988, column: 3)
!9826 = !DILocation(line: 990, column: 3, scope: !9825)
!9827 = !DILocation(line: 993, column: 33, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9819, file: !9185, line: 992, column: 3)
!9829 = !DILocation(line: 997, column: 12, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9801, file: !9185, line: 997, column: 6)
!9831 = !DILocation(line: 997, column: 15, scope: !9830)
!9832 = !DILocation(line: 1003, column: 24, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9830, file: !9185, line: 1002, column: 3)
!9834 = !DILocation(line: 1003, column: 33, scope: !9833)
!9835 = !DILocation(line: 1006, column: 61, scope: !9801)
!9836 = !DILocation(line: 1006, column: 81, scope: !9801)
!9837 = !DILocation(line: 1006, column: 22, scope: !9801)
!9838 = !DILocation(line: 1006, column: 42, scope: !9801)
!9839 = !DILocation(line: 1009, column: 12, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9801, file: !9185, line: 1009, column: 6)
!9841 = !DILocation(line: 1009, column: 17, scope: !9840)
!9842 = !DILocation(line: 1009, column: 35, scope: !9840)
!9843 = !DILocation(line: 1009, column: 6, scope: !9801)
!9844 = !DILocation(line: 1011, column: 24, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9840, file: !9185, line: 1010, column: 3)
!9846 = !DILocation(line: 1011, column: 33, scope: !9845)
!9847 = !DILocation(line: 1012, column: 3, scope: !9845)
!9848 = !DILocation(line: 1013, column: 17, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9840, file: !9185, line: 1013, column: 11)
!9850 = !DILocation(line: 1013, column: 22, scope: !9849)
!9851 = !DILocation(line: 1013, column: 39, scope: !9849)
!9852 = !DILocation(line: 0, scope: !9849)
!9853 = !DILocation(line: 1013, column: 11, scope: !9840)
!9854 = !DILocation(line: 1015, column: 33, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9849, file: !9185, line: 1014, column: 3)
!9856 = !DILocation(line: 1016, column: 3, scope: !9855)
!9857 = !DILocation(line: 1019, column: 33, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9849, file: !9185, line: 1018, column: 3)
!9859 = !DILocation(line: 1023, column: 12, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !9801, file: !9185, line: 1023, column: 6)
!9861 = !DILocation(line: 1023, column: 16, scope: !9860)
!9862 = !DILocation(line: 1029, column: 24, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9860, file: !9185, line: 1028, column: 3)
!9864 = !DILocation(line: 1029, column: 33, scope: !9863)
!9865 = !DILocation(line: 1033, column: 12, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9801, file: !9185, line: 1033, column: 6)
!9867 = !DILocation(line: 1033, column: 15, scope: !9866)
!9868 = !DILocation(line: 1033, column: 30, scope: !9866)
!9869 = !DILocation(line: 1033, column: 6, scope: !9801)
!9870 = !DILocation(line: 1039, column: 28, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9866, file: !9185, line: 1038, column: 3)
!9872 = !DILocation(line: 1039, column: 37, scope: !9871)
!9873 = !DILocation(line: 1041, column: 54, scope: !9801)
!9874 = !DILocation(line: 1041, column: 62, scope: !9801)
!9875 = !DILocation(line: 1041, column: 26, scope: !9801)
!9876 = !DILocation(line: 1041, column: 36, scope: !9801)
!9877 = !DILocation(line: 1042, column: 49, scope: !9801)
!9878 = !DILocation(line: 1042, column: 57, scope: !9801)
!9879 = !DILocation(line: 1042, column: 26, scope: !9801)
!9880 = !DILocation(line: 1042, column: 31, scope: !9801)
!9881 = !DILocation(line: 1043, column: 50, scope: !9801)
!9882 = !DILocation(line: 1043, column: 78, scope: !9801)
!9883 = !DILocation(line: 1043, column: 26, scope: !9801)
!9884 = !DILocation(line: 1043, column: 31, scope: !9801)
!9885 = !DILocation(line: 1044, column: 52, scope: !9801)
!9886 = !DILocation(line: 1044, column: 102, scope: !9801)
!9887 = !DILocation(line: 1044, column: 109, scope: !9801)
!9888 = !DILocation(line: 1044, column: 26, scope: !9801)
!9889 = !DILocation(line: 1044, column: 31, scope: !9801)
!9890 = !DILocation(line: 1045, column: 50, scope: !9801)
!9891 = !DILocation(line: 1045, column: 78, scope: !9801)
!9892 = !DILocation(line: 1045, column: 26, scope: !9801)
!9893 = !DILocation(line: 1045, column: 31, scope: !9801)
!9894 = !DILocation(line: 1046, column: 1, scope: !9801)
!9895 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !9185, file: !9185, line: 1056, type: !9896, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !9898)
!9896 = !DISubroutineType(types: !9897)
!9897 = !{null, !9548, !711}
!9898 = !{!9899, !9900}
!9899 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !9895, file: !9185, line: 1056, type: !9548)
!9900 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !9895, file: !9185, line: 1056, type: !711)
!9901 = !DILocation(line: 0, scope: !9895)
!9902 = !DILocation(line: 1059, column: 22, scope: !9895)
!9903 = !DILocation(line: 1059, column: 32, scope: !9895)
!9904 = !DILocation(line: 1062, column: 53, scope: !9895)
!9905 = !DILocation(line: 1062, column: 58, scope: !9895)
!9906 = !DILocation(line: 1062, column: 22, scope: !9895)
!9907 = !DILocation(line: 1062, column: 35, scope: !9895)
!9908 = !DILocation(line: 1065, column: 54, scope: !9895)
!9909 = !DILocation(line: 1065, column: 59, scope: !9895)
!9910 = !DILocation(line: 1065, column: 22, scope: !9895)
!9911 = !DILocation(line: 1065, column: 36, scope: !9895)
!9912 = !DILocation(line: 1068, column: 55, scope: !9895)
!9913 = !DILocation(line: 1068, column: 60, scope: !9895)
!9914 = !DILocation(line: 1068, column: 22, scope: !9895)
!9915 = !DILocation(line: 1068, column: 37, scope: !9895)
!9916 = !DILocation(line: 1071, column: 56, scope: !9895)
!9917 = !DILocation(line: 1071, column: 79, scope: !9895)
!9918 = !DILocation(line: 1071, column: 22, scope: !9895)
!9919 = !DILocation(line: 1071, column: 37, scope: !9895)
!9920 = !DILocation(line: 1074, column: 34, scope: !9895)
!9921 = !DILocation(line: 1074, column: 38, scope: !9895)
!9922 = !DILocation(line: 1074, column: 14, scope: !9895)
!9923 = !DILocation(line: 1075, column: 1, scope: !9895)
!9924 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !9185, file: !9185, line: 1082, type: !2800, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !344)
!9925 = !DILocation(line: 1085, column: 6, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9924, file: !9185, line: 1085, column: 6)
!9927 = !DILocation(line: 1085, column: 6, scope: !9924)
!9928 = !DILocation(line: 1088, column: 5, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9926, file: !9185, line: 1086, column: 3)
!9930 = !DILocation(line: 1091, column: 5, scope: !9929)
!9931 = !DILocation(line: 1092, column: 3, scope: !9929)
!9932 = !DILocation(line: 1093, column: 1, scope: !9924)
!9933 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !9185, file: !9185, line: 1099, type: !2800, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !344)
!9934 = !DILocation(line: 1104, column: 1, scope: !9933)
!9935 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !9936, file: !9936, line: 257, type: !5022, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !9937)
!9936 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9937 = !{!9938}
!9938 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !9935, file: !9936, line: 257, type: !155)
!9939 = !DILocation(line: 0, scope: !9935)
!9940 = !DILocation(line: 260, column: 3, scope: !9935)
!9941 = !DILocation(line: 261, column: 1, scope: !9935)
!9942 = distinct !DISubprogram(name: "LL_InitTick", scope: !9943, file: !9943, line: 260, type: !7613, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !9944)
!9943 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9944 = !{!9945, !9946}
!9945 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !9942, file: !9943, line: 260, type: !155)
!9946 = !DILocalVariable(name: "Ticks", arg: 2, scope: !9942, file: !9943, line: 260, type: !155)
!9947 = !DILocation(line: 0, scope: !9942)
!9948 = !DILocation(line: 263, column: 46, scope: !9942)
!9949 = !DILocation(line: 263, column: 55, scope: !9942)
!9950 = !DILocation(line: 263, column: 18, scope: !9942)
!9951 = !DILocation(line: 264, column: 18, scope: !9942)
!9952 = !DILocation(line: 265, column: 18, scope: !9942)
!9953 = !DILocation(line: 267, column: 1, scope: !9942)
!9954 = distinct !DISubprogram(name: "LL_mDelay", scope: !9936, file: !9936, line: 273, type: !5022, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !9955)
!9955 = !{!9956, !9957}
!9956 = !DILocalVariable(name: "Delay", arg: 1, scope: !9954, file: !9936, line: 273, type: !155)
!9957 = !DILocalVariable(name: "tmp", scope: !9954, file: !9936, line: 275, type: !154)
!9958 = !DILocation(line: 0, scope: !9954)
!9959 = !DILocation(line: 275, column: 3, scope: !9954)
!9960 = !DILocation(line: 275, column: 18, scope: !9954)
!9961 = !DILocation(line: 275, column: 33, scope: !9954)
!9962 = !DILocation(line: 277, column: 10, scope: !9954)
!9963 = !DILocation(line: 280, column: 12, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9954, file: !9936, line: 280, column: 6)
!9965 = !DILocation(line: 285, column: 3, scope: !9954)
!9966 = !DILocation(line: 287, column: 18, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9968, file: !9936, line: 287, column: 8)
!9968 = distinct !DILexicalBlock(scope: !9954, file: !9936, line: 286, column: 3)
!9969 = !DILocation(line: 292, column: 1, scope: !9954)
!9970 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !9936, file: !9936, line: 323, type: !5022, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !9971)
!9971 = !{!9972}
!9972 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !9970, file: !9936, line: 323, type: !155)
!9973 = !DILocation(line: 0, scope: !9970)
!9974 = !DILocation(line: 326, column: 19, scope: !9970)
!9975 = !DILocation(line: 327, column: 1, scope: !9970)
!9976 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !9936, file: !9936, line: 338, type: !9977, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !9980)
!9977 = !DISubroutineType(types: !9978)
!9978 = !{!9979, !155}
!9979 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !655, line: 201, baseType: !654)
!9980 = !{!9981, !9982, !9983, !9984, !9985}
!9981 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !9976, file: !9936, line: 338, type: !155)
!9982 = !DILocalVariable(name: "timeout", scope: !9976, file: !9936, line: 340, type: !155)
!9983 = !DILocalVariable(name: "getlatency", scope: !9976, file: !9936, line: 341, type: !155)
!9984 = !DILocalVariable(name: "latency", scope: !9976, file: !9936, line: 342, type: !155)
!9985 = !DILocalVariable(name: "status", scope: !9976, file: !9936, line: 343, type: !9979)
!9986 = !DILocation(line: 0, scope: !9976)
!9987 = !DILocation(line: 347, column: 21, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9976, file: !9936, line: 347, column: 6)
!9989 = !DILocation(line: 347, column: 6, scope: !9976)
!9990 = !DILocation(line: 353, column: 8, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9992, file: !9936, line: 353, column: 8)
!9992 = distinct !DILexicalBlock(scope: !9988, file: !9936, line: 352, column: 3)
!9993 = !DILocation(line: 353, column: 40, scope: !9991)
!9994 = !DILocation(line: 353, column: 8, scope: !9992)
!9995 = !DILocation(line: 374, column: 55, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9997, file: !9936, line: 374, column: 10)
!9997 = distinct !DILexicalBlock(scope: !9991, file: !9936, line: 354, column: 5)
!9998 = !DILocation(line: 368, column: 26, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !9997, file: !9936, line: 368, column: 10)
!10000 = !DILocation(line: 368, column: 55, scope: !9999)
!10001 = !DILocation(line: 380, column: 57, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !10003, file: !9936, line: 380, column: 12)
!10003 = distinct !DILexicalBlock(scope: !9996, file: !9936, line: 379, column: 7)
!10004 = !DILocation(line: 387, column: 8, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !9992, file: !9936, line: 387, column: 8)
!10006 = !DILocation(line: 387, column: 40, scope: !10005)
!10007 = !DILocation(line: 387, column: 8, scope: !9992)
!10008 = !DILocation(line: 407, column: 26, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10010, file: !9936, line: 407, column: 10)
!10010 = distinct !DILexicalBlock(scope: !10005, file: !9936, line: 388, column: 5)
!10011 = !DILocation(line: 407, column: 55, scope: !10009)
!10012 = !DILocation(line: 413, column: 28, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !10014, file: !9936, line: 413, column: 12)
!10014 = distinct !DILexicalBlock(scope: !10009, file: !9936, line: 412, column: 7)
!10015 = !DILocation(line: 413, column: 57, scope: !10013)
!10016 = !DILocation(line: 0, scope: !9992)
!10017 = !DILocation(line: 420, column: 8, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !9992, file: !9936, line: 420, column: 8)
!10019 = !DILocation(line: 420, column: 40, scope: !10018)
!10020 = !DILocation(line: 420, column: 8, scope: !9992)
!10021 = !DILocation(line: 429, column: 26, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10023, file: !9936, line: 429, column: 10)
!10023 = distinct !DILexicalBlock(scope: !10018, file: !9936, line: 421, column: 5)
!10024 = !DILocation(line: 429, column: 55, scope: !10022)
!10025 = !DILocation(line: 435, column: 28, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10027, file: !9936, line: 435, column: 12)
!10027 = distinct !DILexicalBlock(scope: !10022, file: !9936, line: 434, column: 7)
!10028 = !DILocation(line: 435, column: 57, scope: !10026)
!10029 = !DILocation(line: 444, column: 5, scope: !9992)
!10030 = !DILocation(line: 448, column: 5, scope: !9992)
!10031 = !DILocation(line: 451, column: 18, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !9992, file: !9936, line: 449, column: 5)
!10033 = !DILocation(line: 452, column: 12, scope: !10032)
!10034 = !DILocation(line: 453, column: 26, scope: !9992)
!10035 = !DILocation(line: 453, column: 38, scope: !9992)
!10036 = !DILocation(line: 453, column: 5, scope: !10032)
!10037 = distinct !{!10037, !10030, !10038}
!10038 = !DILocation(line: 453, column: 54, scope: !9992)
!10039 = !DILocation(line: 0, scope: !9988)
!10040 = !DILocation(line: 464, column: 3, scope: !9976)
!10041 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !10042, file: !10042, line: 519, type: !5012, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !344)
!10042 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10043 = !DILocation(line: 521, column: 21, scope: !10041)
!10044 = !DILocation(line: 521, column: 3, scope: !10041)
!10045 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !4778, file: !4778, line: 1543, type: !5022, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !10046)
!10046 = !{!10047}
!10047 = !DILocalVariable(name: "Latency", arg: 1, scope: !10045, file: !4778, line: 1543, type: !155)
!10048 = !DILocation(line: 0, scope: !10045)
!10049 = !DILocation(line: 1545, column: 3, scope: !10045)
!10050 = !DILocation(line: 1546, column: 1, scope: !10045)
!10051 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !4778, file: !4778, line: 1569, type: !5012, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !344)
!10052 = !DILocation(line: 1571, column: 21, scope: !10051)
!10053 = !DILocation(line: 1571, column: 3, scope: !10051)
!10054 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !9936, file: !9936, line: 483, type: !10055, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !10071)
!10055 = !DISubroutineType(types: !10056)
!10056 = !{!9979, !10057, !10064}
!10057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10058, size: 32)
!10058 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !9943, line: 114, baseType: !10059)
!10059 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9943, line: 94, size: 96, elements: !10060)
!10060 = !{!10061, !10062, !10063}
!10061 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10059, file: !9943, line: 96, baseType: !155, size: 32)
!10062 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10059, file: !9943, line: 102, baseType: !155, size: 32, offset: 32)
!10063 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10059, file: !9943, line: 109, baseType: !155, size: 32, offset: 64)
!10064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10065, size: 32)
!10065 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !9943, line: 139, baseType: !10066)
!10066 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9943, line: 119, size: 96, elements: !10067)
!10067 = !{!10068, !10069, !10070}
!10068 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !10066, file: !9943, line: 121, baseType: !155, size: 32)
!10069 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !10066, file: !9943, line: 127, baseType: !155, size: 32, offset: 32)
!10070 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !10066, file: !9943, line: 133, baseType: !155, size: 32, offset: 64)
!10071 = !{!10072, !10073, !10074, !10075}
!10072 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !10054, file: !9936, line: 483, type: !10057)
!10073 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10054, file: !9936, line: 484, type: !10064)
!10074 = !DILocalVariable(name: "status", scope: !10054, file: !9936, line: 486, type: !9979)
!10075 = !DILocalVariable(name: "pllfreq", scope: !10054, file: !9936, line: 487, type: !155)
!10076 = !DILocation(line: 0, scope: !10054)
!10077 = !DILocation(line: 490, column: 6, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10054, file: !9936, line: 490, column: 6)
!10079 = !DILocation(line: 490, column: 25, scope: !10078)
!10080 = !DILocation(line: 490, column: 6, scope: !10054)
!10081 = !DILocation(line: 493, column: 15, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10078, file: !9936, line: 491, column: 3)
!10083 = !DILocation(line: 496, column: 8, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !10082, file: !9936, line: 496, column: 8)
!10085 = !DILocation(line: 496, column: 29, scope: !10084)
!10086 = !DILocation(line: 496, column: 8, scope: !10082)
!10087 = !DILocation(line: 498, column: 7, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10084, file: !9936, line: 497, column: 5)
!10089 = !DILocation(line: 499, column: 7, scope: !10088)
!10090 = !DILocation(line: 499, column: 14, scope: !10088)
!10091 = !DILocation(line: 499, column: 35, scope: !10088)
!10092 = distinct !{!10092, !10089, !10093}
!10093 = !DILocation(line: 502, column: 7, scope: !10088)
!10094 = !DILocation(line: 506, column: 76, scope: !10082)
!10095 = !DILocation(line: 506, column: 103, scope: !10082)
!10096 = !DILocation(line: 507, column: 54, scope: !10082)
!10097 = !DILocation(line: 506, column: 5, scope: !10082)
!10098 = !DILocation(line: 510, column: 14, scope: !10082)
!10099 = !DILocation(line: 511, column: 3, scope: !10082)
!10100 = !DILocation(line: 0, scope: !10078)
!10101 = !DILocation(line: 518, column: 3, scope: !10054)
!10102 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !9936, file: !9936, line: 642, type: !10103, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !10105)
!10103 = !DISubroutineType(types: !10104)
!10104 = !{!9979}
!10105 = !{!10106}
!10106 = !DILocalVariable(name: "status", scope: !10102, file: !9936, line: 644, type: !9979)
!10107 = !DILocation(line: 0, scope: !10102)
!10108 = !DILocation(line: 647, column: 6, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10102, file: !9936, line: 647, column: 6)
!10110 = !DILocation(line: 647, column: 27, scope: !10109)
!10111 = !DILocation(line: 663, column: 6, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10102, file: !9936, line: 663, column: 6)
!10113 = !DILocation(line: 663, column: 30, scope: !10112)
!10114 = !DILocation(line: 663, column: 6, scope: !10102)
!10115 = !DILocation(line: 669, column: 3, scope: !10102)
!10116 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !9936, file: !9936, line: 611, type: !10117, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !10119)
!10117 = !DISubroutineType(types: !10118)
!10118 = !{!155, !155, !10057}
!10119 = !{!10120, !10121, !10122}
!10120 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !10116, file: !9936, line: 611, type: !155)
!10121 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !10116, file: !9936, line: 611, type: !10057)
!10122 = !DILocalVariable(name: "pllfreq", scope: !10116, file: !9936, line: 613, type: !155)
!10123 = !DILocation(line: 0, scope: !10116)
!10124 = !DILocation(line: 622, column: 56, scope: !10116)
!10125 = !DILocation(line: 622, column: 61, scope: !10116)
!10126 = !DILocation(line: 622, column: 32, scope: !10116)
!10127 = !DILocation(line: 626, column: 45, scope: !10116)
!10128 = !DILocation(line: 626, column: 50, scope: !10116)
!10129 = !DILocation(line: 626, column: 21, scope: !10116)
!10130 = !DILocation(line: 630, column: 47, scope: !10116)
!10131 = !DILocation(line: 630, column: 82, scope: !10116)
!10132 = !DILocation(line: 630, column: 21, scope: !10116)
!10133 = !DILocation(line: 633, column: 3, scope: !10116)
!10134 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !6964, file: !6964, line: 3007, type: !5012, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !344)
!10135 = !DILocation(line: 3009, column: 11, scope: !10134)
!10136 = !DILocation(line: 3009, column: 44, scope: !10134)
!10137 = !DILocation(line: 3009, column: 3, scope: !10134)
!10138 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !6964, file: !6964, line: 2987, type: !2800, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !344)
!10139 = !DILocation(line: 2989, column: 3, scope: !10138)
!10140 = !DILocation(line: 2990, column: 1, scope: !10138)
!10141 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !6964, file: !6964, line: 4304, type: !7088, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !10142)
!10142 = !{!10143, !10144, !10145, !10146}
!10143 = !DILocalVariable(name: "Source", arg: 1, scope: !10141, file: !6964, line: 4304, type: !155)
!10144 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10141, file: !6964, line: 4304, type: !155)
!10145 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10141, file: !6964, line: 4304, type: !155)
!10146 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10141, file: !6964, line: 4304, type: !155)
!10147 = !DILocation(line: 0, scope: !10141)
!10148 = !DILocation(line: 4306, column: 3, scope: !10141)
!10149 = !DILocation(line: 4308, column: 3, scope: !10141)
!10150 = !DILocation(line: 4312, column: 1, scope: !10141)
!10151 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !9936, file: !9936, line: 681, type: !10152, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !10154)
!10152 = !DISubroutineType(types: !10153)
!10153 = !{!9979, !155, !10064}
!10154 = !{!10155, !10156, !10157, !10158}
!10155 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !10151, file: !9936, line: 681, type: !155)
!10156 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10151, file: !9936, line: 681, type: !10064)
!10157 = !DILocalVariable(name: "status", scope: !10151, file: !9936, line: 683, type: !9979)
!10158 = !DILocalVariable(name: "hclk_frequency", scope: !10151, file: !9936, line: 684, type: !155)
!10159 = !DILocation(line: 0, scope: !10151)
!10160 = !DILocation(line: 691, column: 20, scope: !10151)
!10161 = !DILocation(line: 694, column: 6, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10151, file: !9936, line: 694, column: 6)
!10163 = !DILocation(line: 694, column: 22, scope: !10162)
!10164 = !DILocation(line: 694, column: 6, scope: !10151)
!10165 = !DILocation(line: 697, column: 14, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10162, file: !9936, line: 695, column: 3)
!10167 = !DILocation(line: 701, column: 13, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10151, file: !9936, line: 701, column: 6)
!10169 = !DILocation(line: 701, column: 6, scope: !10151)
!10170 = !DILocation(line: 704, column: 5, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10168, file: !9936, line: 702, column: 3)
!10172 = !DILocation(line: 705, column: 5, scope: !10171)
!10173 = !DILocation(line: 705, column: 12, scope: !10171)
!10174 = !DILocation(line: 705, column: 33, scope: !10171)
!10175 = distinct !{!10175, !10172, !10176}
!10176 = !DILocation(line: 708, column: 5, scope: !10171)
!10177 = !DILocation(line: 711, column: 49, scope: !10171)
!10178 = !DILocation(line: 711, column: 5, scope: !10171)
!10179 = !DILocation(line: 712, column: 5, scope: !10171)
!10180 = !DILocation(line: 713, column: 5, scope: !10171)
!10181 = !DILocation(line: 713, column: 12, scope: !10171)
!10182 = !DILocation(line: 713, column: 37, scope: !10171)
!10183 = distinct !{!10183, !10180, !10184}
!10184 = !DILocation(line: 716, column: 5, scope: !10171)
!10185 = !DILocation(line: 719, column: 50, scope: !10171)
!10186 = !DILocation(line: 719, column: 5, scope: !10171)
!10187 = !DILocation(line: 720, column: 50, scope: !10171)
!10188 = !DILocation(line: 720, column: 5, scope: !10171)
!10189 = !DILocation(line: 721, column: 3, scope: !10171)
!10190 = !DILocation(line: 724, column: 6, scope: !10191)
!10191 = distinct !DILexicalBlock(scope: !10151, file: !9936, line: 724, column: 6)
!10192 = !DILocation(line: 724, column: 22, scope: !10191)
!10193 = !DILocation(line: 724, column: 6, scope: !10151)
!10194 = !DILocation(line: 727, column: 14, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10191, file: !9936, line: 725, column: 3)
!10196 = !DILocation(line: 728, column: 3, scope: !10195)
!10197 = !DILocation(line: 731, column: 13, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10151, file: !9936, line: 731, column: 6)
!10199 = !DILocation(line: 731, column: 6, scope: !10151)
!10200 = !DILocation(line: 733, column: 5, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10198, file: !9936, line: 732, column: 3)
!10202 = !DILocation(line: 734, column: 3, scope: !10201)
!10203 = !DILocation(line: 736, column: 3, scope: !10151)
!10204 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !6964, file: !6964, line: 4184, type: !2800, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !344)
!10205 = !DILocation(line: 4186, column: 3, scope: !10204)
!10206 = !DILocation(line: 4187, column: 1, scope: !10204)
!10207 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !6964, file: !6964, line: 4205, type: !5012, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !344)
!10208 = !DILocation(line: 4207, column: 11, scope: !10207)
!10209 = !DILocation(line: 4207, column: 44, scope: !10207)
!10210 = !DILocation(line: 4207, column: 3, scope: !10207)
!10211 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !6964, file: !6964, line: 3224, type: !5022, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !10212)
!10212 = !{!10213}
!10213 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10211, file: !6964, line: 3224, type: !155)
!10214 = !DILocation(line: 0, scope: !10211)
!10215 = !DILocation(line: 3226, column: 3, scope: !10211)
!10216 = !DILocation(line: 3227, column: 1, scope: !10211)
!10217 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !6964, file: !6964, line: 3188, type: !5022, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !10218)
!10218 = !{!10219}
!10219 = !DILocalVariable(name: "Source", arg: 1, scope: !10217, file: !6964, line: 3188, type: !155)
!10220 = !DILocation(line: 0, scope: !10217)
!10221 = !DILocation(line: 3190, column: 3, scope: !10217)
!10222 = !DILocation(line: 3191, column: 1, scope: !10217)
!10223 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !6964, file: !6964, line: 3204, type: !5012, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !344)
!10224 = !DILocation(line: 3206, column: 21, scope: !10223)
!10225 = !DILocation(line: 3206, column: 3, scope: !10223)
!10226 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !6964, file: !6964, line: 3240, type: !5022, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !10227)
!10227 = !{!10228}
!10228 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10226, file: !6964, line: 3240, type: !155)
!10229 = !DILocation(line: 0, scope: !10226)
!10230 = !DILocation(line: 3242, column: 3, scope: !10226)
!10231 = !DILocation(line: 3243, column: 1, scope: !10226)
!10232 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !6964, file: !6964, line: 3256, type: !5022, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !10233)
!10233 = !{!10234}
!10234 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10232, file: !6964, line: 3256, type: !155)
!10235 = !DILocation(line: 0, scope: !10232)
!10236 = !DILocation(line: 3258, column: 3, scope: !10232)
!10237 = !DILocation(line: 3259, column: 1, scope: !10232)
!10238 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !6964, file: !6964, line: 5153, type: !5012, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !344)
!10239 = !DILocation(line: 5155, column: 11, scope: !10238)
!10240 = !DILocation(line: 5155, column: 47, scope: !10238)
!10241 = !DILocation(line: 5155, column: 3, scope: !10238)
!10242 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !9936, file: !9936, line: 540, type: !10243, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !10245)
!10243 = !DISubroutineType(types: !10244)
!10244 = !{!9979, !155, !155, !10057, !10064}
!10245 = !{!10246, !10247, !10248, !10249, !10250, !10251}
!10246 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !10242, file: !9936, line: 540, type: !155)
!10247 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !10242, file: !9936, line: 540, type: !155)
!10248 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !10242, file: !9936, line: 541, type: !10057)
!10249 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !10242, file: !9936, line: 541, type: !10064)
!10250 = !DILocalVariable(name: "status", scope: !10242, file: !9936, line: 543, type: !9979)
!10251 = !DILocalVariable(name: "pllfreq", scope: !10242, file: !9936, line: 544, type: !155)
!10252 = !DILocation(line: 0, scope: !10242)
!10253 = !DILocation(line: 551, column: 6, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10242, file: !9936, line: 551, column: 6)
!10255 = !DILocation(line: 551, column: 25, scope: !10254)
!10256 = !DILocation(line: 551, column: 6, scope: !10242)
!10257 = !DILocation(line: 554, column: 15, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10254, file: !9936, line: 552, column: 3)
!10259 = !DILocation(line: 557, column: 8, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10258, file: !9936, line: 557, column: 8)
!10261 = !DILocation(line: 557, column: 29, scope: !10260)
!10262 = !DILocation(line: 557, column: 8, scope: !10258)
!10263 = !DILocation(line: 560, column: 20, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10265, file: !9936, line: 560, column: 10)
!10265 = distinct !DILexicalBlock(scope: !10260, file: !9936, line: 558, column: 5)
!10266 = !DILocation(line: 560, column: 10, scope: !10265)
!10267 = !DILocation(line: 562, column: 9, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10264, file: !9936, line: 561, column: 7)
!10269 = !DILocation(line: 563, column: 7, scope: !10268)
!10270 = !DILocation(line: 566, column: 9, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10264, file: !9936, line: 565, column: 7)
!10272 = !DILocation(line: 570, column: 7, scope: !10265)
!10273 = !DILocation(line: 571, column: 7, scope: !10265)
!10274 = !DILocation(line: 571, column: 14, scope: !10265)
!10275 = !DILocation(line: 571, column: 35, scope: !10265)
!10276 = distinct !{!10276, !10273, !10277}
!10277 = !DILocation(line: 574, column: 7, scope: !10265)
!10278 = !DILocation(line: 578, column: 76, scope: !10258)
!10279 = !DILocation(line: 578, column: 103, scope: !10258)
!10280 = !DILocation(line: 579, column: 54, scope: !10258)
!10281 = !DILocation(line: 578, column: 5, scope: !10258)
!10282 = !DILocation(line: 582, column: 14, scope: !10258)
!10283 = !DILocation(line: 583, column: 3, scope: !10258)
!10284 = !DILocation(line: 0, scope: !10254)
!10285 = !DILocation(line: 590, column: 3, scope: !10242)
!10286 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !6964, file: !6964, line: 2969, type: !5012, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !344)
!10287 = !DILocation(line: 2971, column: 11, scope: !10286)
!10288 = !DILocation(line: 2971, column: 44, scope: !10286)
!10289 = !DILocation(line: 2971, column: 3, scope: !10286)
!10290 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !6964, file: !6964, line: 2929, type: !2800, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !344)
!10291 = !DILocation(line: 2931, column: 3, scope: !10290)
!10292 = !DILocation(line: 2932, column: 1, scope: !10290)
!10293 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !6964, file: !6964, line: 2939, type: !2800, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !344)
!10294 = !DILocation(line: 2941, column: 3, scope: !10293)
!10295 = !DILocation(line: 2942, column: 1, scope: !10293)
!10296 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !6964, file: !6964, line: 2949, type: !2800, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2695, retainedNodes: !344)
!10297 = !DILocation(line: 2951, column: 3, scope: !10296)
!10298 = !DILocation(line: 2952, column: 1, scope: !10296)
!10299 = distinct !DISubprogram(name: "init", scope: !1638, file: !1638, line: 21, type: !1662, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10300)
!10300 = !{!10301}
!10301 = !DILocalVariable(name: "dev", arg: 1, scope: !10299, file: !1638, line: 21, type: !1664)
!10302 = !DILocation(line: 0, scope: !10299)
!10303 = !DILocation(line: 23, column: 11, scope: !10299)
!10304 = !DILocation(line: 25, column: 2, scope: !10299)
!10305 = distinct !DISubprogram(name: "print_impl", scope: !1638, file: !1638, line: 28, type: !10306, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1633, retainedNodes: !10308)
!10306 = !DISubroutineType(types: !10307)
!10307 = !{null, !1664}
!10308 = !{!10309}
!10309 = !DILocalVariable(name: "dev", arg: 1, scope: !10305, file: !1638, line: 28, type: !1664)
!10310 = !DILocation(line: 0, scope: !10305)
!10311 = !DILocation(line: 30, column: 51, scope: !10305)
!10312 = !DILocation(line: 30, column: 2, scope: !10305)
!10313 = !DILocation(line: 33, column: 1, scope: !10305)
!10314 = distinct !DISubprogram(name: "z_device_state_init", scope: !10315, file: !10315, line: 23, type: !2800, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !10316)
!10315 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10316 = !{!10317}
!10317 = !DILocalVariable(name: "dev", scope: !10314, file: !10315, line: 25, type: !10318)
!10318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10319, size: 32)
!10319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10320)
!10320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !110, line: 378, size: 192, elements: !10321)
!10321 = !{!10322, !10323, !10324, !10325, !10331, !10332}
!10322 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10320, file: !110, line: 380, baseType: !113, size: 32)
!10323 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10320, file: !110, line: 382, baseType: !13, size: 32, offset: 32)
!10324 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !10320, file: !110, line: 384, baseType: !13, size: 32, offset: 64)
!10325 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10320, file: !110, line: 386, baseType: !10326, size: 32, offset: 96)
!10326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10327, size: 32)
!10327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !110, line: 351, size: 16, elements: !10328)
!10328 = !{!10329, !10330}
!10329 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !10327, file: !110, line: 359, baseType: !123, size: 8)
!10330 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !10327, file: !110, line: 364, baseType: !126, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!10331 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10320, file: !110, line: 388, baseType: !103, size: 32, offset: 128)
!10332 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !10320, file: !110, line: 396, baseType: !129, size: 32, offset: 160)
!10333 = !DILocation(line: 0, scope: !10314)
!10334 = !DILocation(line: 31, column: 1, scope: !10314)
!10335 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !10315, file: !10315, line: 33, type: !10336, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !10338)
!10336 = !DISubroutineType(types: !10337)
!10337 = !{!10318, !113}
!10338 = !{!10339, !10340}
!10339 = !DILocalVariable(name: "name", arg: 1, scope: !10335, file: !10315, line: 33, type: !113)
!10340 = !DILocalVariable(name: "dev", scope: !10335, file: !10315, line: 35, type: !10318)
!10341 = !DILocation(line: 0, scope: !10335)
!10342 = !DILocation(line: 40, column: 12, scope: !10343)
!10343 = distinct !DILexicalBlock(scope: !10335, file: !10315, line: 40, column: 6)
!10344 = !DILocation(line: 40, column: 21, scope: !10343)
!10345 = !DILocation(line: 40, column: 25, scope: !10343)
!10346 = !DILocation(line: 40, column: 33, scope: !10343)
!10347 = !DILocation(line: 40, column: 6, scope: !10335)
!10348 = !DILocation(line: 55, column: 2, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10335, file: !10315, line: 55, column: 2)
!10350 = !DILocation(line: 50, column: 7, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10352, file: !10315, line: 50, column: 7)
!10352 = distinct !DILexicalBlock(scope: !10353, file: !10315, line: 49, column: 57)
!10353 = distinct !DILexicalBlock(scope: !10354, file: !10315, line: 49, column: 2)
!10354 = distinct !DILexicalBlock(scope: !10335, file: !10315, line: 49, column: 2)
!10355 = !DILocation(line: 50, column: 30, scope: !10351)
!10356 = !DILocation(line: 50, column: 39, scope: !10351)
!10357 = !DILocation(line: 50, column: 44, scope: !10351)
!10358 = !DILocation(line: 50, column: 7, scope: !10352)
!10359 = !DILocation(line: 49, column: 53, scope: !10353)
!10360 = !DILocation(line: 49, column: 33, scope: !10353)
!10361 = !DILocation(line: 49, column: 2, scope: !10354)
!10362 = distinct !{!10362, !10361, !10363}
!10363 = !DILocation(line: 53, column: 2, scope: !10354)
!10364 = !DILocation(line: 56, column: 7, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10366, file: !10315, line: 56, column: 7)
!10366 = distinct !DILexicalBlock(scope: !10367, file: !10315, line: 55, column: 57)
!10367 = distinct !DILexicalBlock(scope: !10349, file: !10315, line: 55, column: 2)
!10368 = !DILocation(line: 56, column: 30, scope: !10365)
!10369 = !DILocation(line: 56, column: 52, scope: !10365)
!10370 = !DILocation(line: 56, column: 34, scope: !10365)
!10371 = !DILocation(line: 56, column: 58, scope: !10365)
!10372 = !DILocation(line: 56, column: 7, scope: !10366)
!10373 = !DILocation(line: 55, column: 53, scope: !10367)
!10374 = !DILocation(line: 55, column: 33, scope: !10367)
!10375 = distinct !{!10375, !10348, !10376}
!10376 = !DILocation(line: 59, column: 2, scope: !10349)
!10377 = !DILocation(line: 62, column: 1, scope: !10335)
!10378 = distinct !DISubprogram(name: "z_device_is_ready", scope: !10315, file: !10315, line: 93, type: !10379, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !10381)
!10379 = !DISubroutineType(types: !10380)
!10380 = !{!126, !10318}
!10381 = !{!10382}
!10382 = !DILocalVariable(name: "dev", arg: 1, scope: !10378, file: !10315, line: 93, type: !10318)
!10383 = !DILocation(line: 0, scope: !10378)
!10384 = !DILocation(line: 99, column: 10, scope: !10385)
!10385 = distinct !DILexicalBlock(scope: !10378, file: !10315, line: 99, column: 6)
!10386 = !DILocation(line: 99, column: 6, scope: !10378)
!10387 = !DILocation(line: 103, column: 14, scope: !10378)
!10388 = !DILocation(line: 103, column: 21, scope: !10378)
!10389 = !DILocation(line: 103, column: 33, scope: !10378)
!10390 = !DILocation(line: 103, column: 49, scope: !10378)
!10391 = !DILocation(line: 103, column: 58, scope: !10378)
!10392 = !DILocation(line: 104, column: 1, scope: !10378)
!10393 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !10315, file: !10315, line: 87, type: !10394, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !10397)
!10394 = !DISubroutineType(types: !10395)
!10395 = !{!222, !10396}
!10396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10318, size: 32)
!10397 = !{!10398}
!10398 = !DILocalVariable(name: "devices", arg: 1, scope: !10393, file: !10315, line: 87, type: !10396)
!10399 = !DILocation(line: 0, scope: !10393)
!10400 = !DILocation(line: 89, column: 11, scope: !10393)
!10401 = !DILocation(line: 90, column: 2, scope: !10393)
!10402 = distinct !DISubprogram(name: "device_required_foreach", scope: !10315, file: !10315, line: 125, type: !10403, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !10409)
!10403 = !DISubroutineType(types: !10404)
!10404 = !{!104, !10318, !10405, !103}
!10405 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !110, line: 471, baseType: !10406)
!10406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10407, size: 32)
!10407 = !DISubroutineType(types: !10408)
!10408 = !{!104, !10318, !103}
!10409 = !{!10410, !10411, !10412, !10413, !10414}
!10410 = !DILocalVariable(name: "dev", arg: 1, scope: !10402, file: !10315, line: 125, type: !10318)
!10411 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10402, file: !10315, line: 126, type: !10405)
!10412 = !DILocalVariable(name: "context", arg: 3, scope: !10402, file: !10315, line: 127, type: !103)
!10413 = !DILocalVariable(name: "handle_count", scope: !10402, file: !10315, line: 129, type: !222)
!10414 = !DILocalVariable(name: "handles", scope: !10402, file: !10315, line: 130, type: !129)
!10415 = !DILocation(line: 0, scope: !10402)
!10416 = !DILocation(line: 129, column: 2, scope: !10402)
!10417 = !DILocation(line: 129, column: 9, scope: !10402)
!10418 = !DILocation(line: 130, column: 35, scope: !10402)
!10419 = !DILocation(line: 132, column: 33, scope: !10402)
!10420 = !DILocation(line: 132, column: 9, scope: !10402)
!10421 = !DILocation(line: 133, column: 1, scope: !10402)
!10422 = !DILocation(line: 132, column: 2, scope: !10402)
!10423 = distinct !DISubprogram(name: "device_required_handles_get", scope: !110, file: !110, line: 493, type: !10424, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !10426)
!10424 = !DISubroutineType(types: !10425)
!10425 = !{!129, !10318, !2255}
!10426 = !{!10427, !10428, !10429, !10430}
!10427 = !DILocalVariable(name: "dev", arg: 1, scope: !10423, file: !110, line: 493, type: !10318)
!10428 = !DILocalVariable(name: "count", arg: 2, scope: !10423, file: !110, line: 493, type: !2255)
!10429 = !DILocalVariable(name: "rv", scope: !10423, file: !110, line: 495, type: !129)
!10430 = !DILocalVariable(name: "i", scope: !10431, file: !110, line: 498, type: !222)
!10431 = distinct !DILexicalBlock(scope: !10432, file: !110, line: 497, column: 18)
!10432 = distinct !DILexicalBlock(scope: !10423, file: !110, line: 497, column: 6)
!10433 = !DILocation(line: 0, scope: !10423)
!10434 = !DILocation(line: 495, column: 35, scope: !10423)
!10435 = !DILocation(line: 497, column: 9, scope: !10432)
!10436 = !DILocation(line: 497, column: 6, scope: !10423)
!10437 = !DILocation(line: 0, scope: !10431)
!10438 = !DILocation(line: 500, column: 11, scope: !10431)
!10439 = !DILocation(line: 500, column: 40, scope: !10431)
!10440 = !DILocation(line: 502, column: 4, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10431, file: !110, line: 501, column: 40)
!10442 = distinct !{!10442, !10443, !10444}
!10443 = !DILocation(line: 500, column: 3, scope: !10431)
!10444 = !DILocation(line: 503, column: 3, scope: !10431)
!10445 = !DILocation(line: 504, column: 10, scope: !10431)
!10446 = !DILocation(line: 505, column: 2, scope: !10431)
!10447 = !DILocation(line: 507, column: 2, scope: !10423)
!10448 = distinct !DISubprogram(name: "device_visitor", scope: !10315, file: !10315, line: 106, type: !10449, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !10451)
!10449 = !DISubroutineType(types: !10450)
!10450 = !{!104, !129, !222, !10405, !103}
!10451 = !{!10452, !10453, !10454, !10455, !10456, !10458, !10461, !10462}
!10452 = !DILocalVariable(name: "handles", arg: 1, scope: !10448, file: !10315, line: 106, type: !129)
!10453 = !DILocalVariable(name: "handle_count", arg: 2, scope: !10448, file: !10315, line: 107, type: !222)
!10454 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !10448, file: !10315, line: 108, type: !10405)
!10455 = !DILocalVariable(name: "context", arg: 4, scope: !10448, file: !10315, line: 109, type: !103)
!10456 = !DILocalVariable(name: "i", scope: !10457, file: !10315, line: 112, type: !222)
!10457 = distinct !DILexicalBlock(scope: !10448, file: !10315, line: 112, column: 2)
!10458 = !DILocalVariable(name: "dh", scope: !10459, file: !10315, line: 113, type: !131)
!10459 = distinct !DILexicalBlock(scope: !10460, file: !10315, line: 112, column: 44)
!10460 = distinct !DILexicalBlock(scope: !10457, file: !10315, line: 112, column: 2)
!10461 = !DILocalVariable(name: "rdev", scope: !10459, file: !10315, line: 114, type: !10318)
!10462 = !DILocalVariable(name: "rc", scope: !10459, file: !10315, line: 115, type: !104)
!10463 = !DILocation(line: 0, scope: !10448)
!10464 = !DILocation(line: 0, scope: !10457)
!10465 = !DILocation(line: 112, column: 23, scope: !10460)
!10466 = !DILocation(line: 112, column: 2, scope: !10457)
!10467 = distinct !{!10467, !10466, !10468}
!10468 = !DILocation(line: 120, column: 2, scope: !10457)
!10469 = !DILocation(line: 113, column: 24, scope: !10459)
!10470 = !DILocation(line: 0, scope: !10459)
!10471 = !DILocation(line: 114, column: 31, scope: !10459)
!10472 = !DILocation(line: 115, column: 12, scope: !10459)
!10473 = !DILocation(line: 117, column: 10, scope: !10474)
!10474 = distinct !DILexicalBlock(scope: !10459, file: !10315, line: 117, column: 7)
!10475 = !DILocation(line: 112, column: 39, scope: !10460)
!10476 = !DILocation(line: 123, column: 1, scope: !10448)
!10477 = distinct !DISubprogram(name: "device_from_handle", scope: !110, file: !110, line: 439, type: !10478, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !10480)
!10478 = !DISubroutineType(types: !10479)
!10479 = !{!10318, !131}
!10480 = !{!10481, !10482, !10483}
!10481 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !10477, file: !110, line: 439, type: !131)
!10482 = !DILocalVariable(name: "dev", scope: !10477, file: !110, line: 443, type: !10318)
!10483 = !DILocalVariable(name: "numdev", scope: !10477, file: !110, line: 444, type: !222)
!10484 = !DILocation(line: 0, scope: !10477)
!10485 = !DILocation(line: 446, column: 7, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10477, file: !110, line: 446, column: 6)
!10487 = !DILocation(line: 446, column: 18, scope: !10486)
!10488 = !DILocation(line: 446, column: 23, scope: !10486)
!10489 = !DILocation(line: 450, column: 2, scope: !10477)
!10490 = distinct !DISubprogram(name: "device_supported_foreach", scope: !10315, file: !10315, line: 135, type: !10403, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !10491)
!10491 = !{!10492, !10493, !10494, !10495, !10496}
!10492 = !DILocalVariable(name: "dev", arg: 1, scope: !10490, file: !10315, line: 135, type: !10318)
!10493 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10490, file: !10315, line: 136, type: !10405)
!10494 = !DILocalVariable(name: "context", arg: 3, scope: !10490, file: !10315, line: 137, type: !103)
!10495 = !DILocalVariable(name: "handle_count", scope: !10490, file: !10315, line: 139, type: !222)
!10496 = !DILocalVariable(name: "handles", scope: !10490, file: !10315, line: 140, type: !129)
!10497 = !DILocation(line: 0, scope: !10490)
!10498 = !DILocation(line: 139, column: 2, scope: !10490)
!10499 = !DILocation(line: 139, column: 9, scope: !10490)
!10500 = !DILocation(line: 140, column: 35, scope: !10490)
!10501 = !DILocation(line: 142, column: 33, scope: !10490)
!10502 = !DILocation(line: 142, column: 9, scope: !10490)
!10503 = !DILocation(line: 143, column: 1, scope: !10490)
!10504 = !DILocation(line: 142, column: 2, scope: !10490)
!10505 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !110, file: !110, line: 573, type: !10424, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !10506)
!10506 = !{!10507, !10508, !10509, !10510, !10511}
!10507 = !DILocalVariable(name: "dev", arg: 1, scope: !10505, file: !110, line: 573, type: !10318)
!10508 = !DILocalVariable(name: "count", arg: 2, scope: !10505, file: !110, line: 573, type: !2255)
!10509 = !DILocalVariable(name: "rv", scope: !10505, file: !110, line: 575, type: !129)
!10510 = !DILocalVariable(name: "region", scope: !10505, file: !110, line: 576, type: !222)
!10511 = !DILocalVariable(name: "i", scope: !10505, file: !110, line: 577, type: !222)
!10512 = !DILocation(line: 0, scope: !10505)
!10513 = !DILocation(line: 575, column: 35, scope: !10505)
!10514 = !DILocation(line: 579, column: 9, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10505, file: !110, line: 579, column: 6)
!10516 = !DILocation(line: 579, column: 6, scope: !10505)
!10517 = !DILocation(line: 582, column: 8, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10519, file: !110, line: 582, column: 8)
!10519 = distinct !DILexicalBlock(scope: !10520, file: !110, line: 581, column: 23)
!10520 = distinct !DILexicalBlock(scope: !10515, file: !110, line: 579, column: 18)
!10521 = !DILocation(line: 582, column: 12, scope: !10518)
!10522 = !DILocation(line: 585, column: 6, scope: !10519)
!10523 = !DILocation(line: 0, scope: !10520)
!10524 = !DILocation(line: 581, column: 17, scope: !10520)
!10525 = !DILocation(line: 581, column: 3, scope: !10520)
!10526 = !DILocation(line: 588, column: 10, scope: !10520)
!10527 = !DILocation(line: 588, column: 16, scope: !10520)
!10528 = !DILocation(line: 589, column: 4, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10520, file: !110, line: 588, column: 39)
!10530 = !DILocation(line: 588, column: 3, scope: !10520)
!10531 = distinct !{!10531, !10530, !10532}
!10532 = !DILocation(line: 590, column: 3, scope: !10520)
!10533 = !DILocation(line: 591, column: 10, scope: !10520)
!10534 = !DILocation(line: 592, column: 2, scope: !10520)
!10535 = !DILocation(line: 575, column: 25, scope: !10505)
!10536 = !DILocation(line: 594, column: 2, scope: !10505)
!10537 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1676, file: !1676, line: 49, type: !10538, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1673, retainedNodes: !344)
!10538 = !DISubroutineType(types: !10539)
!10539 = !{!2248}
!10540 = !DILocation(line: 51, column: 10, scope: !10537)
!10541 = !DILocation(line: 51, column: 20, scope: !10537)
!10542 = !DILocation(line: 51, column: 2, scope: !10537)
!10543 = distinct !DISubprogram(name: "coredump", scope: !2767, file: !2767, line: 209, type: !10544, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !10690)
!10544 = !DISubroutineType(types: !10545)
!10545 = !{null, !32, !10546, !10590}
!10546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10547, size: 32)
!10547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10548)
!10548 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2380, line: 141, baseType: !10549)
!10549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2380, line: 97, size: 256, elements: !10550)
!10550 = !{!10551}
!10551 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !10549, file: !2380, line: 107, baseType: !10552, size: 256)
!10552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2380, line: 98, size: 256, elements: !10553)
!10553 = !{!10554, !10559, !10564, !10569, !10574, !10579, !10584, !10589}
!10554 = !DIDerivedType(tag: DW_TAG_member, scope: !10552, file: !2380, line: 99, baseType: !10555, size: 32)
!10555 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10552, file: !2380, line: 99, size: 32, elements: !10556)
!10556 = !{!10557, !10558}
!10557 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !10555, file: !2380, line: 99, baseType: !155, size: 32)
!10558 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !10555, file: !2380, line: 99, baseType: !155, size: 32)
!10559 = !DIDerivedType(tag: DW_TAG_member, scope: !10552, file: !2380, line: 100, baseType: !10560, size: 32, offset: 32)
!10560 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10552, file: !2380, line: 100, size: 32, elements: !10561)
!10561 = !{!10562, !10563}
!10562 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !10560, file: !2380, line: 100, baseType: !155, size: 32)
!10563 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !10560, file: !2380, line: 100, baseType: !155, size: 32)
!10564 = !DIDerivedType(tag: DW_TAG_member, scope: !10552, file: !2380, line: 101, baseType: !10565, size: 32, offset: 64)
!10565 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10552, file: !2380, line: 101, size: 32, elements: !10566)
!10566 = !{!10567, !10568}
!10567 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !10565, file: !2380, line: 101, baseType: !155, size: 32)
!10568 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !10565, file: !2380, line: 101, baseType: !155, size: 32)
!10569 = !DIDerivedType(tag: DW_TAG_member, scope: !10552, file: !2380, line: 102, baseType: !10570, size: 32, offset: 96)
!10570 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10552, file: !2380, line: 102, size: 32, elements: !10571)
!10571 = !{!10572, !10573}
!10572 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !10570, file: !2380, line: 102, baseType: !155, size: 32)
!10573 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !10570, file: !2380, line: 102, baseType: !155, size: 32)
!10574 = !DIDerivedType(tag: DW_TAG_member, scope: !10552, file: !2380, line: 103, baseType: !10575, size: 32, offset: 128)
!10575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10552, file: !2380, line: 103, size: 32, elements: !10576)
!10576 = !{!10577, !10578}
!10577 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !10575, file: !2380, line: 103, baseType: !155, size: 32)
!10578 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !10575, file: !2380, line: 103, baseType: !155, size: 32)
!10579 = !DIDerivedType(tag: DW_TAG_member, scope: !10552, file: !2380, line: 104, baseType: !10580, size: 32, offset: 160)
!10580 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10552, file: !2380, line: 104, size: 32, elements: !10581)
!10581 = !{!10582, !10583}
!10582 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !10580, file: !2380, line: 104, baseType: !155, size: 32)
!10583 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !10580, file: !2380, line: 104, baseType: !155, size: 32)
!10584 = !DIDerivedType(tag: DW_TAG_member, scope: !10552, file: !2380, line: 105, baseType: !10585, size: 32, offset: 192)
!10585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10552, file: !2380, line: 105, size: 32, elements: !10586)
!10586 = !{!10587, !10588}
!10587 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !10585, file: !2380, line: 105, baseType: !155, size: 32)
!10588 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !10585, file: !2380, line: 105, baseType: !155, size: 32)
!10589 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !10552, file: !2380, line: 106, baseType: !155, size: 32, offset: 224)
!10590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10591, size: 32)
!10591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !233, line: 245, size: 1024, elements: !10592)
!10592 = !{!10593, !10651, !10663, !10664, !10665, !10666, !10672, !10685}
!10593 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !10591, file: !233, line: 247, baseType: !10594, size: 384)
!10594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !233, line: 57, size: 384, elements: !10595)
!10595 = !{!10596, !10620, !10627, !10628, !10629, !10638, !10639, !10640}
!10596 = !DIDerivedType(tag: DW_TAG_member, scope: !10594, file: !233, line: 60, baseType: !10597, size: 64)
!10597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10594, file: !233, line: 60, size: 64, elements: !10598)
!10598 = !{!10599, !10614}
!10599 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !10597, file: !233, line: 61, baseType: !10600, size: 64)
!10600 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !243, line: 49, baseType: !10601)
!10601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !243, line: 37, size: 64, elements: !10602)
!10602 = !{!10603, !10609}
!10603 = !DIDerivedType(tag: DW_TAG_member, scope: !10601, file: !243, line: 38, baseType: !10604, size: 32)
!10604 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10601, file: !243, line: 38, size: 32, elements: !10605)
!10605 = !{!10606, !10608}
!10606 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10604, file: !243, line: 39, baseType: !10607, size: 32)
!10607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10601, size: 32)
!10608 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10604, file: !243, line: 40, baseType: !10607, size: 32)
!10609 = !DIDerivedType(tag: DW_TAG_member, scope: !10601, file: !243, line: 42, baseType: !10610, size: 32, offset: 32)
!10610 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10601, file: !243, line: 42, size: 32, elements: !10611)
!10611 = !{!10612, !10613}
!10612 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10610, file: !243, line: 43, baseType: !10607, size: 32)
!10613 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10610, file: !243, line: 44, baseType: !10607, size: 32)
!10614 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !10597, file: !233, line: 62, baseType: !10615, size: 64)
!10615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !259, line: 49, size: 64, elements: !10616)
!10616 = !{!10617}
!10617 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !10615, file: !259, line: 50, baseType: !10618, size: 64)
!10618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10619, size: 64, elements: !264)
!10619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10615, size: 32)
!10620 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !10594, file: !233, line: 68, baseType: !10621, size: 32, offset: 64)
!10621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10622, size: 32)
!10622 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !269, line: 233, baseType: !10623)
!10623 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !269, line: 231, size: 64, elements: !10624)
!10624 = !{!10625}
!10625 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10623, file: !269, line: 232, baseType: !10626, size: 64)
!10626 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !243, line: 48, baseType: !10601)
!10627 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !10594, file: !233, line: 71, baseType: !123, size: 8, offset: 96)
!10628 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !10594, file: !233, line: 74, baseType: !123, size: 8, offset: 104)
!10629 = !DIDerivedType(tag: DW_TAG_member, scope: !10594, file: !233, line: 90, baseType: !10630, size: 16, offset: 112)
!10630 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10594, file: !233, line: 90, size: 16, elements: !10631)
!10631 = !{!10632, !10637}
!10632 = !DIDerivedType(tag: DW_TAG_member, scope: !10630, file: !233, line: 91, baseType: !10633, size: 16)
!10633 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10630, file: !233, line: 91, size: 16, elements: !10634)
!10634 = !{!10635, !10636}
!10635 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !10633, file: !233, line: 96, baseType: !283, size: 8)
!10636 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !10633, file: !233, line: 97, baseType: !123, size: 8, offset: 8)
!10637 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !10630, file: !233, line: 100, baseType: !287, size: 16)
!10638 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !10594, file: !233, line: 107, baseType: !155, size: 32, offset: 128)
!10639 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !10594, file: !233, line: 127, baseType: !103, size: 32, offset: 160)
!10640 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !10594, file: !233, line: 131, baseType: !10641, size: 192, offset: 192)
!10641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !269, line: 244, size: 192, elements: !10642)
!10642 = !{!10643, !10644, !10650}
!10643 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10641, file: !269, line: 245, baseType: !10600, size: 64)
!10644 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !10641, file: !269, line: 246, baseType: !10645, size: 32, offset: 64)
!10645 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !269, line: 242, baseType: !10646)
!10646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10647, size: 32)
!10647 = !DISubroutineType(types: !10648)
!10648 = !{null, !10649}
!10649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10641, size: 32)
!10650 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !10641, file: !269, line: 249, baseType: !302, size: 64, offset: 128)
!10651 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !10591, file: !233, line: 250, baseType: !10652, size: 288, offset: 384)
!10652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !306, line: 25, size: 288, elements: !10653)
!10653 = !{!10654, !10655, !10656, !10657, !10658, !10659, !10660, !10661, !10662}
!10654 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !10652, file: !306, line: 26, baseType: !155, size: 32)
!10655 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !10652, file: !306, line: 27, baseType: !155, size: 32, offset: 32)
!10656 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !10652, file: !306, line: 28, baseType: !155, size: 32, offset: 64)
!10657 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !10652, file: !306, line: 29, baseType: !155, size: 32, offset: 96)
!10658 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !10652, file: !306, line: 30, baseType: !155, size: 32, offset: 128)
!10659 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !10652, file: !306, line: 31, baseType: !155, size: 32, offset: 160)
!10660 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !10652, file: !306, line: 32, baseType: !155, size: 32, offset: 192)
!10661 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !10652, file: !306, line: 33, baseType: !155, size: 32, offset: 224)
!10662 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !10652, file: !306, line: 34, baseType: !155, size: 32, offset: 256)
!10663 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !10591, file: !233, line: 253, baseType: !103, size: 32, offset: 672)
!10664 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !10591, file: !233, line: 256, baseType: !10622, size: 64, offset: 704)
!10665 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !10591, file: !233, line: 294, baseType: !104, size: 32, offset: 768)
!10666 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !10591, file: !233, line: 300, baseType: !10667, size: 96, offset: 800)
!10667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !233, line: 149, size: 96, elements: !10668)
!10668 = !{!10669, !10670, !10671}
!10669 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !10667, file: !233, line: 153, baseType: !22, size: 32)
!10670 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10667, file: !233, line: 162, baseType: !222, size: 32, offset: 32)
!10671 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !10667, file: !233, line: 168, baseType: !222, size: 32, offset: 64)
!10672 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !10591, file: !233, line: 325, baseType: !10673, size: 32, offset: 896)
!10673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10674, size: 32)
!10674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !329, line: 5073, size: 160, elements: !10675)
!10675 = !{!10676, !10682, !10683}
!10676 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10674, file: !329, line: 5074, baseType: !10677, size: 96)
!10677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !333, line: 56, size: 96, elements: !10678)
!10678 = !{!10679, !10680, !10681}
!10679 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10677, file: !333, line: 57, baseType: !336, size: 32)
!10680 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !10677, file: !333, line: 58, baseType: !103, size: 32, offset: 32)
!10681 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !10677, file: !333, line: 59, baseType: !222, size: 32, offset: 64)
!10682 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10674, file: !329, line: 5075, baseType: !10622, size: 64, offset: 96)
!10683 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10674, file: !329, line: 5076, baseType: !10684, offset: 160)
!10684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !343, line: 43, elements: !344)
!10685 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !10591, file: !233, line: 343, baseType: !10686, size: 64, offset: 928)
!10686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !306, line: 60, size: 64, elements: !10687)
!10687 = !{!10688, !10689}
!10688 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !10686, file: !306, line: 63, baseType: !155, size: 32)
!10689 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !10686, file: !306, line: 66, baseType: !155, size: 32, offset: 32)
!10690 = !{!10691, !10692, !10693}
!10691 = !DILocalVariable(name: "reason", arg: 1, scope: !10543, file: !2767, line: 209, type: !32)
!10692 = !DILocalVariable(name: "esf", arg: 2, scope: !10543, file: !2767, line: 209, type: !10546)
!10693 = !DILocalVariable(name: "thread", arg: 3, scope: !10543, file: !2767, line: 210, type: !10590)
!10694 = !DILocation(line: 0, scope: !10543)
!10695 = !DILocation(line: 212, column: 1, scope: !10543)
!10696 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2767, file: !2767, line: 214, type: !10697, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !10699)
!10697 = !DISubroutineType(types: !10698)
!10698 = !{null, !22, !22}
!10699 = !{!10700, !10701}
!10700 = !DILocalVariable(name: "start_addr", arg: 1, scope: !10696, file: !2767, line: 214, type: !22)
!10701 = !DILocalVariable(name: "end_addr", arg: 2, scope: !10696, file: !2767, line: 214, type: !22)
!10702 = !DILocation(line: 0, scope: !10696)
!10703 = !DILocation(line: 216, column: 1, scope: !10696)
!10704 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2767, file: !2767, line: 218, type: !10705, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !10707)
!10705 = !DISubroutineType(types: !10706)
!10706 = !{null, !1717, !222}
!10707 = !{!10708, !10709}
!10708 = !DILocalVariable(name: "buf", arg: 1, scope: !10704, file: !2767, line: 218, type: !1717)
!10709 = !DILocalVariable(name: "buflen", arg: 2, scope: !10704, file: !2767, line: 218, type: !222)
!10710 = !DILocation(line: 0, scope: !10704)
!10711 = !DILocation(line: 220, column: 1, scope: !10704)
!10712 = distinct !DISubprogram(name: "coredump_query", scope: !2767, file: !2767, line: 222, type: !10713, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !10715)
!10713 = !DISubroutineType(types: !10714)
!10714 = !{!104, !2766, !103}
!10715 = !{!10716, !10717}
!10716 = !DILocalVariable(name: "query_id", arg: 1, scope: !10712, file: !2767, line: 222, type: !2766)
!10717 = !DILocalVariable(name: "arg", arg: 2, scope: !10712, file: !2767, line: 222, type: !103)
!10718 = !DILocation(line: 0, scope: !10712)
!10719 = !DILocation(line: 224, column: 2, scope: !10712)
!10720 = distinct !DISubprogram(name: "coredump_cmd", scope: !2767, file: !2767, line: 227, type: !10721, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !10723)
!10721 = !DISubroutineType(types: !10722)
!10722 = !{!104, !2773, !103}
!10723 = !{!10724, !10725}
!10724 = !DILocalVariable(name: "query_id", arg: 1, scope: !10720, file: !2767, line: 227, type: !2773)
!10725 = !DILocalVariable(name: "arg", arg: 2, scope: !10720, file: !2767, line: 227, type: !103)
!10726 = !DILocation(line: 0, scope: !10720)
!10727 = !DILocation(line: 229, column: 2, scope: !10720)
!10728 = distinct !DISubprogram(name: "arch_system_halt", scope: !10729, file: !10729, line: 23, type: !4768, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !10730)
!10729 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10730 = !{!10731}
!10731 = !DILocalVariable(name: "reason", arg: 1, scope: !10728, file: !10729, line: 23, type: !32)
!10732 = !DILocation(line: 0, scope: !10728)
!10733 = !DILocation(line: 55, column: 2, scope: !10734, inlinedAt: !10738)
!10734 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4757, file: !4757, line: 42, type: !4758, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !10735)
!10735 = !{!10736, !10737}
!10736 = !DILocalVariable(name: "key", scope: !10734, file: !4757, line: 44, type: !32)
!10737 = !DILocalVariable(name: "tmp", scope: !10734, file: !4757, line: 53, type: !32)
!10738 = distinct !DILocation(line: 31, column: 8, scope: !10728)
!10739 = !{i64 1949853}
!10740 = !DILocation(line: 0, scope: !10734, inlinedAt: !10738)
!10741 = !DILocation(line: 32, column: 2, scope: !10728)
!10742 = !DILocation(line: 32, column: 2, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10744, file: !10729, line: 32, column: 2)
!10744 = distinct !DILexicalBlock(scope: !10728, file: !10729, line: 32, column: 2)
!10745 = distinct !{!10745, !10746, !10747}
!10746 = !DILocation(line: 32, column: 2, scope: !10744)
!10747 = !DILocation(line: 34, column: 2, scope: !10744)
!10748 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !10729, file: !10729, line: 39, type: !10749, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !10751)
!10749 = !DISubroutineType(types: !10750)
!10750 = !{null, !32, !10546}
!10751 = !{!10752, !10753}
!10752 = !DILocalVariable(name: "reason", arg: 1, scope: !10748, file: !10729, line: 39, type: !32)
!10753 = !DILocalVariable(name: "esf", arg: 2, scope: !10748, file: !10729, line: 40, type: !10546)
!10754 = !DILocation(line: 0, scope: !10748)
!10755 = !DILocation(line: 46, column: 2, scope: !10748)
!10756 = distinct !DISubprogram(name: "k_fatal_halt", scope: !10729, file: !10729, line: 81, type: !4768, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !10757)
!10757 = !{!10758}
!10758 = !DILocalVariable(name: "reason", arg: 1, scope: !10756, file: !10729, line: 81, type: !32)
!10759 = !DILocation(line: 0, scope: !10756)
!10760 = !DILocation(line: 83, column: 2, scope: !10756)
!10761 = distinct !DISubprogram(name: "z_fatal_error", scope: !10729, file: !10729, line: 96, type: !10749, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !10762)
!10762 = !{!10763, !10764, !10765, !10766}
!10763 = !DILocalVariable(name: "reason", arg: 1, scope: !10761, file: !10729, line: 96, type: !32)
!10764 = !DILocalVariable(name: "esf", arg: 2, scope: !10761, file: !10729, line: 96, type: !10546)
!10765 = !DILocalVariable(name: "key", scope: !10761, file: !10729, line: 102, type: !32)
!10766 = !DILocalVariable(name: "thread", scope: !10761, file: !10729, line: 103, type: !10590)
!10767 = !DILocation(line: 0, scope: !10761)
!10768 = !DILocation(line: 55, column: 2, scope: !10734, inlinedAt: !10769)
!10769 = distinct !DILocation(line: 102, column: 21, scope: !10761)
!10770 = !DILocation(line: 0, scope: !10734, inlinedAt: !10769)
!10771 = !DILocation(line: 119, column: 11, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10761, file: !10729, line: 119, column: 6)
!10773 = !DILocation(line: 119, column: 20, scope: !10772)
!10774 = !DILocation(line: 131, column: 2, scope: !10761)
!10775 = !DILocation(line: 151, column: 7, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10777, file: !10729, line: 146, column: 32)
!10777 = distinct !DILexicalBlock(scope: !10761, file: !10729, line: 146, column: 6)
!10778 = !DILocation(line: 151, column: 21, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10776, file: !10729, line: 151, column: 7)
!10780 = !DILocation(line: 104, column: 4, scope: !10761)
!10781 = !DILocalVariable(name: "key", arg: 1, scope: !10782, file: !4757, line: 84, type: !32)
!10782 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4757, file: !4757, line: 84, type: !4768, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !10783)
!10783 = !{!10781}
!10784 = !DILocation(line: 0, scope: !10782, inlinedAt: !10785)
!10785 = distinct !DILocation(line: 186, column: 2, scope: !10761)
!10786 = !DILocation(line: 95, column: 2, scope: !10782, inlinedAt: !10785)
!10787 = !{i64 1950670}
!10788 = !DILocation(line: 189, column: 3, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10790, file: !10729, line: 188, column: 41)
!10790 = distinct !DILexicalBlock(scope: !10761, file: !10729, line: 188, column: 6)
!10791 = !DILocation(line: 191, column: 1, scope: !10761)
!10792 = distinct !DISubprogram(name: "k_current_get", scope: !329, file: !329, line: 530, type: !10793, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !344)
!10793 = !DISubroutineType(types: !10794)
!10794 = !{!10795}
!10795 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !233, line: 347, baseType: !10590)
!10796 = !DILocation(line: 535, column: 9, scope: !10792)
!10797 = !DILocation(line: 535, column: 2, scope: !10792)
!10798 = distinct !DISubprogram(name: "k_thread_abort", scope: !3390, file: !3390, line: 188, type: !10799, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !10801)
!10799 = !DISubroutineType(types: !10800)
!10800 = !{null, !10795}
!10801 = !{!10802}
!10802 = !DILocalVariable(name: "thread", arg: 1, scope: !10798, file: !3390, line: 188, type: !10795)
!10803 = !DILocation(line: 0, scope: !10798)
!10804 = !DILocation(line: 197, column: 2, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10798, file: !3390, line: 197, column: 2)
!10806 = !{i64 2154064919}
!10807 = !DILocation(line: 198, column: 2, scope: !10798)
!10808 = !DILocation(line: 199, column: 1, scope: !10798)
!10809 = distinct !DISubprogram(name: "z_current_get", scope: !3390, file: !3390, line: 173, type: !10793, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !344)
!10810 = !DILocation(line: 180, column: 2, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10809, file: !3390, line: 180, column: 2)
!10812 = !{i64 2154064851}
!10813 = !DILocation(line: 181, column: 9, scope: !10809)
!10814 = !DILocation(line: 181, column: 2, scope: !10809)
!10815 = distinct !DISubprogram(name: "z_early_memset", scope: !1684, file: !1684, line: 108, type: !10816, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10818)
!10816 = !DISubroutineType(types: !10817)
!10817 = !{null, !103, !104, !222}
!10818 = !{!10819, !10820, !10821}
!10819 = !DILocalVariable(name: "dst", arg: 1, scope: !10815, file: !1684, line: 108, type: !103)
!10820 = !DILocalVariable(name: "c", arg: 2, scope: !10815, file: !1684, line: 108, type: !104)
!10821 = !DILocalVariable(name: "n", arg: 3, scope: !10815, file: !1684, line: 108, type: !222)
!10822 = !DILocation(line: 0, scope: !10815)
!10823 = !DILocation(line: 110, column: 9, scope: !10815)
!10824 = !DILocation(line: 111, column: 1, scope: !10815)
!10825 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1684, file: !1684, line: 121, type: !10826, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10828)
!10826 = !DISubroutineType(types: !10827)
!10827 = !{null, !103, !13, !222}
!10828 = !{!10829, !10830, !10831}
!10829 = !DILocalVariable(name: "dst", arg: 1, scope: !10825, file: !1684, line: 121, type: !103)
!10830 = !DILocalVariable(name: "src", arg: 2, scope: !10825, file: !1684, line: 121, type: !13)
!10831 = !DILocalVariable(name: "n", arg: 3, scope: !10825, file: !1684, line: 121, type: !222)
!10832 = !DILocation(line: 0, scope: !10825)
!10833 = !DILocation(line: 123, column: 9, scope: !10825)
!10834 = !DILocation(line: 124, column: 1, scope: !10825)
!10835 = distinct !DISubprogram(name: "z_bss_zero", scope: !1684, file: !1684, line: 132, type: !2800, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !344)
!10836 = !DILocation(line: 143, column: 2, scope: !10835)
!10837 = !DILocation(line: 168, column: 1, scope: !10835)
!10838 = distinct !DISubprogram(name: "z_init_cpu", scope: !1684, file: !1684, line: 372, type: !6576, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10839)
!10839 = !{!10840}
!10840 = !DILocalVariable(name: "id", arg: 1, scope: !10838, file: !1684, line: 372, type: !104)
!10841 = !DILocation(line: 0, scope: !10838)
!10842 = !DILocation(line: 374, column: 2, scope: !10838)
!10843 = !DILocation(line: 375, column: 34, scope: !10838)
!10844 = !DILocation(line: 375, column: 19, scope: !10838)
!10845 = !DILocation(line: 375, column: 31, scope: !10838)
!10846 = !DILocation(line: 376, column: 24, scope: !10838)
!10847 = !DILocation(line: 376, column: 19, scope: !10838)
!10848 = !DILocation(line: 376, column: 22, scope: !10838)
!10849 = !DILocation(line: 378, column: 26, scope: !10838)
!10850 = !DILocation(line: 378, column: 4, scope: !10838)
!10851 = !DILocation(line: 378, column: 50, scope: !10838)
!10852 = !DILocation(line: 377, column: 19, scope: !10838)
!10853 = !DILocation(line: 377, column: 29, scope: !10838)
!10854 = !DILocation(line: 384, column: 1, scope: !10838)
!10855 = distinct !DISubprogram(name: "init_idle_thread", scope: !1684, file: !1684, line: 343, type: !6576, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10856)
!10856 = !{!10857, !10858, !10859, !10862}
!10857 = !DILocalVariable(name: "i", arg: 1, scope: !10855, file: !1684, line: 343, type: !104)
!10858 = !DILocalVariable(name: "thread", scope: !10855, file: !1684, line: 345, type: !1777)
!10859 = !DILocalVariable(name: "stack", scope: !10855, file: !1684, line: 346, type: !10860)
!10860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10861, size: 32)
!10861 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3271, line: 44, baseType: !1891)
!10862 = !DILocalVariable(name: "tname", scope: !10855, file: !1684, line: 358, type: !981)
!10863 = !DILocation(line: 0, scope: !10855)
!10864 = !DILocation(line: 345, column: 29, scope: !10855)
!10865 = !DILocation(line: 346, column: 28, scope: !10855)
!10866 = !DILocation(line: 362, column: 37, scope: !10855)
!10867 = !DILocation(line: 362, column: 36, scope: !10855)
!10868 = !DILocation(line: 361, column: 2, scope: !10855)
!10869 = !DILocation(line: 365, column: 2, scope: !10855)
!10870 = !DILocation(line: 370, column: 1, scope: !10855)
!10871 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1892, file: !1892, line: 331, type: !10872, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10874)
!10872 = !DISubroutineType(types: !10873)
!10873 = !{!981, !10860}
!10874 = !{!10875}
!10875 = !DILocalVariable(name: "sym", arg: 1, scope: !10871, file: !1892, line: 331, type: !10860)
!10876 = !DILocation(line: 0, scope: !10871)
!10877 = !DILocation(line: 333, column: 21, scope: !10871)
!10878 = !DILocation(line: 333, column: 2, scope: !10871)
!10879 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10880, file: !10880, line: 155, type: !10881, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10883)
!10880 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10881 = !DISubroutineType(types: !10882)
!10882 = !{null, !1777}
!10883 = !{!10884}
!10884 = !DILocalVariable(name: "thread", arg: 1, scope: !10879, file: !10880, line: 155, type: !1777)
!10885 = !DILocation(line: 0, scope: !10879)
!10886 = !DILocation(line: 157, column: 15, scope: !10879)
!10887 = !DILocation(line: 157, column: 28, scope: !10879)
!10888 = !DILocation(line: 158, column: 1, scope: !10879)
!10889 = distinct !DISubprogram(name: "z_cstart", scope: !1684, file: !1684, line: 501, type: !2800, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10890)
!10890 = !{!10891}
!10891 = !DILocalVariable(name: "dummy_thread", scope: !10889, file: !1684, line: 518, type: !1778)
!10892 = !DILocation(line: 507, column: 2, scope: !10889)
!10893 = !DILocation(line: 43, column: 14, scope: !10894, inlinedAt: !10898)
!10894 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !10895, file: !10895, line: 40, type: !2800, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10896)
!10895 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10896 = !{!10897}
!10897 = !DILocalVariable(name: "msp", scope: !10894, file: !10895, line: 42, type: !155)
!10898 = distinct !DILocation(line: 44, column: 2, scope: !10899, inlinedAt: !10901)
!10899 = distinct !DISubprogram(name: "arch_kernel_init", scope: !10900, file: !10900, line: 42, type: !2800, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !344)
!10900 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10901 = distinct !DILocation(line: 510, column: 2, scope: !10889)
!10902 = !DILocation(line: 43, column: 3, scope: !10894, inlinedAt: !10898)
!10903 = !DILocation(line: 43, column: 60, scope: !10894, inlinedAt: !10898)
!10904 = !DILocation(line: 0, scope: !10894, inlinedAt: !10898)
!10905 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !10906, file: !4931, line: 1153, type: !155)
!10906 = distinct !DISubprogram(name: "__set_MSP", scope: !4931, file: !4931, line: 1153, type: !5022, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10907)
!10907 = !{!10905}
!10908 = !DILocation(line: 0, scope: !10906, inlinedAt: !10909)
!10909 = distinct !DILocation(line: 46, column: 2, scope: !10894, inlinedAt: !10898)
!10910 = !DILocation(line: 1155, column: 3, scope: !10906, inlinedAt: !10909)
!10911 = !{i64 2847097}
!10912 = !DILocation(line: 62, column: 11, scope: !10894, inlinedAt: !10898)
!10913 = !DILocation(line: 102, column: 2, scope: !10914, inlinedAt: !10915)
!10914 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !5725, file: !5725, line: 97, type: !2800, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !344)
!10915 = distinct !DILocation(line: 45, column: 2, scope: !10899, inlinedAt: !10901)
!10916 = !DILocation(line: 108, column: 2, scope: !10914, inlinedAt: !10915)
!10917 = !DILocation(line: 112, column: 2, scope: !10914, inlinedAt: !10915)
!10918 = !DILocation(line: 113, column: 2, scope: !10914, inlinedAt: !10915)
!10919 = !DILocation(line: 114, column: 2, scope: !10914, inlinedAt: !10915)
!10920 = !DILocation(line: 116, column: 2, scope: !10914, inlinedAt: !10915)
!10921 = !DILocation(line: 123, column: 13, scope: !10914, inlinedAt: !10915)
!10922 = !DILocation(line: 46, column: 2, scope: !10899, inlinedAt: !10901)
!10923 = !DILocation(line: 47, column: 2, scope: !10899, inlinedAt: !10901)
!10924 = !DILocation(line: 174, column: 12, scope: !10925, inlinedAt: !10926)
!10925 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !5725, file: !5725, line: 169, type: !2800, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !344)
!10926 = distinct !DILocation(line: 48, column: 2, scope: !10899, inlinedAt: !10901)
!10927 = !DILocation(line: 179, column: 12, scope: !10925, inlinedAt: !10926)
!10928 = !DILocation(line: 50, column: 2, scope: !10899, inlinedAt: !10901)
!10929 = !DILocation(line: 57, column: 2, scope: !10899, inlinedAt: !10901)
!10930 = !DILocation(line: 518, column: 2, scope: !10889)
!10931 = !DILocation(line: 518, column: 18, scope: !10889)
!10932 = !DILocation(line: 520, column: 2, scope: !10889)
!10933 = !DILocation(line: 523, column: 2, scope: !10889)
!10934 = !DILocation(line: 526, column: 2, scope: !10889)
!10935 = !DILocation(line: 527, column: 2, scope: !10889)
!10936 = !DILocation(line: 543, column: 24, scope: !10889)
!10937 = !DILocation(line: 543, column: 2, scope: !10889)
!10938 = !DILocation(line: 0, scope: !1911)
!10939 = !DILocation(line: 246, column: 15, scope: !1929)
!10940 = !DILocation(line: 246, column: 36, scope: !1928)
!10941 = !DILocation(line: 246, column: 2, scope: !1929)
!10942 = !DILocation(line: 247, column: 37, scope: !1927)
!10943 = !DILocation(line: 0, scope: !1927)
!10944 = !DILocation(line: 248, column: 19, scope: !1927)
!10945 = !DILocation(line: 248, column: 12, scope: !1927)
!10946 = !DILocation(line: 250, column: 11, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !1927, file: !1684, line: 250, column: 7)
!10948 = !DILocation(line: 250, column: 7, scope: !1927)
!10949 = !DILocation(line: 254, column: 11, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10951, file: !1684, line: 254, column: 8)
!10951 = distinct !DILexicalBlock(scope: !10947, file: !1684, line: 250, column: 20)
!10952 = !DILocation(line: 254, column: 8, scope: !10951)
!10953 = !DILocation(line: 255, column: 9, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10950, file: !1684, line: 254, column: 17)
!10955 = !DILocation(line: 258, column: 9, scope: !10954)
!10956 = !DILocation(line: 261, column: 28, scope: !10954)
!10957 = !DILocation(line: 261, column: 10, scope: !10954)
!10958 = !DILocation(line: 261, column: 17, scope: !10954)
!10959 = !DILocation(line: 261, column: 26, scope: !10954)
!10960 = !DILocation(line: 262, column: 4, scope: !10954)
!10961 = !DILocation(line: 263, column: 9, scope: !10951)
!10962 = !DILocation(line: 263, column: 16, scope: !10951)
!10963 = !DILocation(line: 263, column: 28, scope: !10951)
!10964 = !DILocation(line: 264, column: 3, scope: !10951)
!10965 = !DILocation(line: 246, column: 60, scope: !1928)
!10966 = distinct !{!10966, !10941, !10967}
!10967 = !DILocation(line: 265, column: 2, scope: !1929)
!10968 = !DILocation(line: 266, column: 1, scope: !1911)
!10969 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !378, file: !378, line: 1814, type: !4965, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10970)
!10970 = !{!10971, !10972}
!10971 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10969, file: !378, line: 1814, type: !614)
!10972 = !DILocalVariable(name: "priority", arg: 2, scope: !10969, file: !378, line: 1814, type: !155)
!10973 = !DILocation(line: 0, scope: !10969)
!10974 = !DILocation(line: 1822, column: 48, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10976, file: !378, line: 1821, column: 3)
!10976 = distinct !DILexicalBlock(scope: !10969, file: !378, line: 1816, column: 7)
!10977 = !DILocation(line: 1822, column: 32, scope: !10975)
!10978 = !DILocation(line: 1822, column: 40, scope: !10975)
!10979 = !DILocation(line: 1822, column: 5, scope: !10975)
!10980 = !DILocation(line: 1822, column: 46, scope: !10975)
!10981 = !DILocation(line: 1824, column: 1, scope: !10969)
!10982 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !10900, file: !10900, line: 32, type: !2800, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !344)
!10983 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !10984, file: !10984, line: 215, type: !10881, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10985)
!10984 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10985 = !{!10986}
!10986 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !10983, file: !10984, line: 215, type: !1777)
!10987 = !DILocation(line: 0, scope: !10983)
!10988 = !DILocation(line: 217, column: 21, scope: !10983)
!10989 = !DILocation(line: 217, column: 34, scope: !10983)
!10990 = !DILocation(line: 221, column: 21, scope: !10983)
!10991 = !DILocation(line: 221, column: 34, scope: !10983)
!10992 = !DILocation(line: 223, column: 27, scope: !10983)
!10993 = !DILocation(line: 223, column: 33, scope: !10983)
!10994 = !DILocation(line: 224, column: 27, scope: !10983)
!10995 = !DILocation(line: 224, column: 32, scope: !10983)
!10996 = !DILocation(line: 232, column: 16, scope: !10983)
!10997 = !DILocation(line: 232, column: 30, scope: !10983)
!10998 = !DILocation(line: 239, column: 24, scope: !10983)
!10999 = !DILocation(line: 240, column: 1, scope: !10983)
!11000 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1684, file: !1684, line: 399, type: !11001, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !11003)
!11001 = !DISubroutineType(types: !11002)
!11002 = !{!981}
!11003 = !{!11004}
!11004 = !DILocalVariable(name: "stack_ptr", scope: !11000, file: !1684, line: 401, type: !981)
!11005 = !DILocation(line: 404, column: 2, scope: !11000)
!11006 = !DILocation(line: 416, column: 24, scope: !11000)
!11007 = !DILocation(line: 418, column: 14, scope: !11000)
!11008 = !DILocation(line: 0, scope: !11000)
!11009 = !DILocation(line: 423, column: 2, scope: !11000)
!11010 = !DILocation(line: 424, column: 2, scope: !11000)
!11011 = !DILocation(line: 426, column: 2, scope: !11000)
!11012 = !DILocation(line: 428, column: 2, scope: !11000)
!11013 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1684, file: !1684, line: 432, type: !11014, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !11016)
!11014 = !DISubroutineType(types: !11015)
!11015 = !{null, !981}
!11016 = !{!11017}
!11017 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !11013, file: !1684, line: 432, type: !981)
!11018 = !DILocation(line: 0, scope: !11013)
!11019 = !DILocation(line: 435, column: 2, scope: !11013)
!11020 = !DILocation(line: 445, column: 2, scope: !11013)
!11021 = distinct !DISubprogram(name: "bg_thread_main", scope: !1684, file: !1684, line: 277, type: !3044, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !11022)
!11022 = !{!11023, !11024, !11025}
!11023 = !DILocalVariable(name: "unused1", arg: 1, scope: !11021, file: !1684, line: 277, type: !103)
!11024 = !DILocalVariable(name: "unused2", arg: 2, scope: !11021, file: !1684, line: 277, type: !103)
!11025 = !DILocalVariable(name: "unused3", arg: 3, scope: !11021, file: !1684, line: 277, type: !103)
!11026 = !DILocation(line: 0, scope: !11021)
!11027 = !DILocation(line: 291, column: 20, scope: !11021)
!11028 = !DILocation(line: 293, column: 2, scope: !11021)
!11029 = !DILocation(line: 297, column: 2, scope: !11021)
!11030 = !DILocation(line: 305, column: 2, scope: !11021)
!11031 = !DILocation(line: 307, column: 2, scope: !11021)
!11032 = !DILocation(line: 330, column: 8, scope: !11021)
!11033 = !DILocation(line: 333, column: 34, scope: !11021)
!11034 = !DILocation(line: 339, column: 1, scope: !11021)
!11035 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1940, file: !1940, line: 45, type: !11036, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11044)
!11036 = !DISubroutineType(types: !11037)
!11037 = !{null, !11038, !103}
!11038 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !329, line: 103, baseType: !11039)
!11039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11040, size: 32)
!11040 = !DISubroutineType(types: !11041)
!11041 = !{null, !11042, !103}
!11042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11043, size: 32)
!11043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1945)
!11044 = !{!11045, !11046}
!11045 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11035, file: !1940, line: 45, type: !11038)
!11046 = !DILocalVariable(name: "user_data", arg: 2, scope: !11035, file: !1940, line: 45, type: !103)
!11047 = !DILocation(line: 0, scope: !11035)
!11048 = !DILocation(line: 71, column: 1, scope: !11035)
!11049 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1940, file: !1940, line: 73, type: !11036, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11050)
!11050 = !{!11051, !11052}
!11051 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11049, file: !1940, line: 73, type: !11038)
!11052 = !DILocalVariable(name: "user_data", arg: 2, scope: !11049, file: !1940, line: 73, type: !103)
!11053 = !DILocation(line: 0, scope: !11049)
!11054 = !DILocation(line: 95, column: 1, scope: !11049)
!11055 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1940, file: !1940, line: 97, type: !5726, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !344)
!11056 = !DILocation(line: 1031, column: 3, scope: !11057, inlinedAt: !11060)
!11057 = distinct !DISubprogram(name: "__get_IPSR", scope: !4931, file: !4931, line: 1027, type: !5012, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11058)
!11058 = !{!11059}
!11059 = !DILocalVariable(name: "result", scope: !11057, file: !4931, line: 1029, type: !155)
!11060 = distinct !DILocation(line: 48, column: 10, scope: !11061, inlinedAt: !11062)
!11061 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5725, file: !5725, line: 46, type: !5726, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !344)
!11062 = distinct !DILocation(line: 99, column: 9, scope: !11055)
!11063 = !{i64 2852748}
!11064 = !DILocation(line: 0, scope: !11057, inlinedAt: !11060)
!11065 = !DILocation(line: 48, column: 9, scope: !11061, inlinedAt: !11062)
!11066 = !DILocation(line: 99, column: 2, scope: !11055)
!11067 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1940, file: !1940, line: 106, type: !2800, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !344)
!11068 = !DILocation(line: 108, column: 2, scope: !11067)
!11069 = !DILocation(line: 108, column: 17, scope: !11067)
!11070 = !DILocation(line: 108, column: 30, scope: !11067)
!11071 = !DILocation(line: 109, column: 1, scope: !11067)
!11072 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1940, file: !1940, line: 116, type: !2800, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !344)
!11073 = !DILocation(line: 118, column: 2, scope: !11072)
!11074 = !DILocation(line: 118, column: 17, scope: !11072)
!11075 = !DILocation(line: 118, column: 30, scope: !11072)
!11076 = !DILocation(line: 119, column: 1, scope: !11072)
!11077 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1940, file: !1940, line: 126, type: !5726, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !344)
!11078 = !DILocation(line: 128, column: 10, scope: !11077)
!11079 = !DILocation(line: 128, column: 25, scope: !11077)
!11080 = !DILocation(line: 128, column: 38, scope: !11077)
!11081 = !DILocation(line: 128, column: 53, scope: !11077)
!11082 = !DILocation(line: 128, column: 2, scope: !11077)
!11083 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1940, file: !1940, line: 187, type: !11084, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11086)
!11084 = !DISubroutineType(types: !11085)
!11085 = !{!104, !1944, !113}
!11086 = !{!11087, !11088}
!11087 = !DILocalVariable(name: "thread", arg: 1, scope: !11083, file: !1940, line: 187, type: !1944)
!11088 = !DILocalVariable(name: "value", arg: 2, scope: !11083, file: !1940, line: 187, type: !113)
!11089 = !DILocation(line: 0, scope: !11083)
!11090 = !DILocation(line: 206, column: 2, scope: !11083)
!11091 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1940, file: !1940, line: 238, type: !11092, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11094)
!11092 = !DISubroutineType(types: !11093)
!11093 = !{!113, !1944}
!11094 = !{!11095}
!11095 = !DILocalVariable(name: "thread", arg: 1, scope: !11091, file: !1940, line: 238, type: !1944)
!11096 = !DILocation(line: 0, scope: !11091)
!11097 = !DILocation(line: 244, column: 2, scope: !11091)
!11098 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1940, file: !1940, line: 248, type: !11099, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11101)
!11099 = !DISubroutineType(types: !11100)
!11100 = !{!104, !1943, !981, !222}
!11101 = !{!11102, !11103, !11104}
!11102 = !DILocalVariable(name: "thread", arg: 1, scope: !11098, file: !1940, line: 248, type: !1943)
!11103 = !DILocalVariable(name: "buf", arg: 2, scope: !11098, file: !1940, line: 248, type: !981)
!11104 = !DILocalVariable(name: "size", arg: 3, scope: !11098, file: !1940, line: 248, type: !222)
!11105 = !DILocation(line: 0, scope: !11098)
!11106 = !DILocation(line: 257, column: 2, scope: !11098)
!11107 = !DILocation(line: 0, scope: !1939)
!11108 = !DILocation(line: 281, column: 11, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !1939, file: !1940, line: 281, column: 6)
!11110 = !DILocation(line: 281, column: 20, scope: !11109)
!11111 = !DILocation(line: 275, column: 45, scope: !1939)
!11112 = !DILocation(line: 285, column: 10, scope: !1939)
!11113 = !DILocation(line: 0, scope: !2060)
!11114 = !DILocation(line: 293, column: 39, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !2060, file: !1940, line: 293, column: 2)
!11116 = !DILocation(line: 293, column: 2, scope: !2060)
!11117 = !DILocation(line: 273, column: 14, scope: !1939)
!11118 = !DILocation(line: 309, column: 2, scope: !1939)
!11119 = !DILocation(line: 309, column: 11, scope: !1939)
!11120 = !DILocation(line: 311, column: 2, scope: !1939)
!11121 = !DILocation(line: 293, column: 26, scope: !11115)
!11122 = !DILocation(line: 294, column: 9, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11115, file: !1940, line: 293, column: 54)
!11124 = !DILocation(line: 295, column: 21, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11123, file: !1940, line: 295, column: 7)
!11126 = !DILocation(line: 295, column: 28, scope: !11125)
!11127 = !DILocation(line: 295, column: 7, scope: !11123)
!11128 = !DILocation(line: 299, column: 25, scope: !11123)
!11129 = !DILocation(line: 299, column: 41, scope: !11123)
!11130 = !DILocation(line: 300, column: 7, scope: !11123)
!11131 = !DILocation(line: 300, column: 26, scope: !11123)
!11132 = !DILocation(line: 299, column: 10, scope: !11123)
!11133 = !DILocation(line: 299, column: 7, scope: !11123)
!11134 = !DILocation(line: 302, column: 16, scope: !11123)
!11135 = !DILocation(line: 304, column: 20, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11123, file: !1940, line: 304, column: 7)
!11137 = !DILocation(line: 304, column: 7, scope: !11123)
!11138 = !DILocation(line: 305, column: 26, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11136, file: !1940, line: 304, column: 26)
!11140 = !DILocation(line: 305, column: 42, scope: !11139)
!11141 = !DILocation(line: 305, column: 11, scope: !11139)
!11142 = !DILocation(line: 305, column: 8, scope: !11139)
!11143 = !DILocation(line: 306, column: 3, scope: !11139)
!11144 = !DILocation(line: 293, column: 50, scope: !11115)
!11145 = !DILocation(line: 312, column: 1, scope: !1939)
!11146 = distinct !DISubprogram(name: "copy_bytes", scope: !1940, file: !1940, line: 261, type: !11147, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11149)
!11147 = !DISubroutineType(types: !11148)
!11148 = !{!222, !981, !222, !113, !222}
!11149 = !{!11150, !11151, !11152, !11153, !11154}
!11150 = !DILocalVariable(name: "dest", arg: 1, scope: !11146, file: !1940, line: 261, type: !981)
!11151 = !DILocalVariable(name: "dest_size", arg: 2, scope: !11146, file: !1940, line: 261, type: !222)
!11152 = !DILocalVariable(name: "src", arg: 3, scope: !11146, file: !1940, line: 261, type: !113)
!11153 = !DILocalVariable(name: "src_size", arg: 4, scope: !11146, file: !1940, line: 261, type: !222)
!11154 = !DILocalVariable(name: "bytes_to_copy", scope: !11146, file: !1940, line: 263, type: !222)
!11155 = !DILocation(line: 0, scope: !11146)
!11156 = !DILocation(line: 265, column: 18, scope: !11146)
!11157 = !DILocation(line: 266, column: 2, scope: !11146)
!11158 = !DILocation(line: 268, column: 2, scope: !11146)
!11159 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1940, file: !1940, line: 383, type: !11160, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11162)
!11160 = !DISubroutineType(types: !11161)
!11161 = !{null, !1944}
!11162 = !{!11163}
!11163 = !DILocalVariable(name: "thread", arg: 1, scope: !11159, file: !1940, line: 383, type: !1944)
!11164 = !DILocation(line: 0, scope: !11159)
!11165 = !DILocation(line: 387, column: 2, scope: !11159)
!11166 = !DILocation(line: 388, column: 1, scope: !11159)
!11167 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1940, file: !1940, line: 528, type: !11168, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11175)
!11168 = !DISubroutineType(types: !11169)
!11169 = !{!981, !1944, !11170, !222, !3270, !103, !103, !103, !104, !155, !113}
!11170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11171, size: 32)
!11171 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3271, line: 44, baseType: !11172)
!11172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1892, line: 47, size: 8, elements: !11173)
!11173 = !{!11174}
!11174 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11172, file: !1892, line: 48, baseType: !115, size: 8)
!11175 = !{!11176, !11177, !11178, !11179, !11180, !11181, !11182, !11183, !11184, !11185, !11186}
!11176 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11167, file: !1940, line: 528, type: !1944)
!11177 = !DILocalVariable(name: "stack", arg: 2, scope: !11167, file: !1940, line: 529, type: !11170)
!11178 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11167, file: !1940, line: 529, type: !222)
!11179 = !DILocalVariable(name: "entry", arg: 4, scope: !11167, file: !1940, line: 530, type: !3270)
!11180 = !DILocalVariable(name: "p1", arg: 5, scope: !11167, file: !1940, line: 531, type: !103)
!11181 = !DILocalVariable(name: "p2", arg: 6, scope: !11167, file: !1940, line: 531, type: !103)
!11182 = !DILocalVariable(name: "p3", arg: 7, scope: !11167, file: !1940, line: 531, type: !103)
!11183 = !DILocalVariable(name: "prio", arg: 8, scope: !11167, file: !1940, line: 532, type: !104)
!11184 = !DILocalVariable(name: "options", arg: 9, scope: !11167, file: !1940, line: 532, type: !155)
!11185 = !DILocalVariable(name: "name", arg: 10, scope: !11167, file: !1940, line: 532, type: !113)
!11186 = !DILocalVariable(name: "stack_ptr", scope: !11167, file: !1940, line: 534, type: !981)
!11187 = !DILocation(line: 0, scope: !11167)
!11188 = !DILocation(line: 550, column: 28, scope: !11167)
!11189 = !DILocation(line: 550, column: 2, scope: !11167)
!11190 = !DILocation(line: 553, column: 34, scope: !11167)
!11191 = !DILocation(line: 553, column: 2, scope: !11167)
!11192 = !DILocation(line: 554, column: 14, scope: !11167)
!11193 = !DILocation(line: 564, column: 2, scope: !11167)
!11194 = !DILocation(line: 567, column: 14, scope: !11167)
!11195 = !DILocation(line: 567, column: 24, scope: !11167)
!11196 = !DILocation(line: 612, column: 7, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11167, file: !1940, line: 612, column: 6)
!11198 = !DILocation(line: 612, column: 6, scope: !11167)
!11199 = !DILocation(line: 627, column: 40, scope: !11167)
!11200 = !DILocation(line: 637, column: 2, scope: !11167)
!11201 = !DILocation(line: 613, column: 15, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11197, file: !1940, line: 612, column: 17)
!11203 = !DILocation(line: 613, column: 29, scope: !11202)
!11204 = !DILocation(line: 638, column: 1, scope: !11167)
!11205 = distinct !DISubprogram(name: "z_waitq_init", scope: !11206, file: !11206, line: 47, type: !11207, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11209)
!11206 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11207 = !DISubroutineType(types: !11208)
!11208 = !{null, !1975}
!11209 = !{!11210}
!11210 = !DILocalVariable(name: "w", arg: 1, scope: !11205, file: !11206, line: 47, type: !1975)
!11211 = !DILocation(line: 0, scope: !11205)
!11212 = !DILocation(line: 49, column: 21, scope: !11205)
!11213 = !DILocation(line: 49, column: 2, scope: !11205)
!11214 = !DILocation(line: 50, column: 1, scope: !11205)
!11215 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1940, file: !1940, line: 791, type: !11216, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11219)
!11216 = !DISubroutineType(types: !11217)
!11217 = !{null, !11218, !104, !155, !32}
!11218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 32)
!11219 = !{!11220, !11221, !11222, !11223}
!11220 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11215, file: !1940, line: 791, type: !11218)
!11221 = !DILocalVariable(name: "priority", arg: 2, scope: !11215, file: !1940, line: 791, type: !104)
!11222 = !DILocalVariable(name: "initial_state", arg: 3, scope: !11215, file: !1940, line: 792, type: !155)
!11223 = !DILocalVariable(name: "options", arg: 4, scope: !11215, file: !1940, line: 792, type: !32)
!11224 = !DILocation(line: 0, scope: !11215)
!11225 = !DILocation(line: 795, column: 15, scope: !11215)
!11226 = !DILocation(line: 795, column: 25, scope: !11215)
!11227 = !DILocation(line: 796, column: 30, scope: !11215)
!11228 = !DILocation(line: 796, column: 15, scope: !11215)
!11229 = !DILocation(line: 796, column: 28, scope: !11215)
!11230 = !DILocation(line: 797, column: 30, scope: !11215)
!11231 = !DILocation(line: 797, column: 15, scope: !11215)
!11232 = !DILocation(line: 797, column: 28, scope: !11215)
!11233 = !DILocation(line: 799, column: 22, scope: !11215)
!11234 = !DILocation(line: 799, column: 15, scope: !11215)
!11235 = !DILocation(line: 799, column: 20, scope: !11215)
!11236 = !DILocation(line: 801, column: 15, scope: !11215)
!11237 = !DILocation(line: 801, column: 28, scope: !11215)
!11238 = !DILocation(line: 814, column: 2, scope: !11215)
!11239 = !DILocation(line: 815, column: 1, scope: !11215)
!11240 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1940, file: !1940, line: 449, type: !11241, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11243)
!11241 = !DISubroutineType(types: !11242)
!11242 = !{!981, !1944, !11170, !222}
!11243 = !{!11244, !11245, !11246, !11247, !11248, !11249, !11250, !11251}
!11244 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11240, file: !1940, line: 449, type: !1944)
!11245 = !DILocalVariable(name: "stack", arg: 2, scope: !11240, file: !1940, line: 450, type: !11170)
!11246 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11240, file: !1940, line: 450, type: !222)
!11247 = !DILocalVariable(name: "stack_obj_size", scope: !11240, file: !1940, line: 452, type: !222)
!11248 = !DILocalVariable(name: "stack_buf_size", scope: !11240, file: !1940, line: 452, type: !222)
!11249 = !DILocalVariable(name: "stack_ptr", scope: !11240, file: !1940, line: 453, type: !981)
!11250 = !DILocalVariable(name: "stack_buf_start", scope: !11240, file: !1940, line: 453, type: !981)
!11251 = !DILocalVariable(name: "delta", scope: !11240, file: !1940, line: 454, type: !222)
!11252 = !DILocation(line: 0, scope: !11240)
!11253 = !DILocation(line: 465, column: 20, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11240, file: !1940, line: 463, column: 2)
!11255 = !DILocation(line: 466, column: 21, scope: !11254)
!11256 = !DILocation(line: 473, column: 28, scope: !11240)
!11257 = !DILocation(line: 514, column: 33, scope: !11240)
!11258 = !DILocation(line: 514, column: 25, scope: !11240)
!11259 = !DILocation(line: 514, column: 31, scope: !11240)
!11260 = !DILocation(line: 515, column: 25, scope: !11240)
!11261 = !DILocation(line: 515, column: 30, scope: !11240)
!11262 = !DILocation(line: 516, column: 25, scope: !11240)
!11263 = !DILocation(line: 516, column: 31, scope: !11240)
!11264 = !DILocation(line: 520, column: 2, scope: !11240)
!11265 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1892, file: !1892, line: 331, type: !11266, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11268)
!11266 = !DISubroutineType(types: !11267)
!11267 = !{!981, !11170}
!11268 = !{!11269}
!11269 = !DILocalVariable(name: "sym", arg: 1, scope: !11265, file: !1892, line: 331, type: !11170)
!11270 = !DILocation(line: 0, scope: !11265)
!11271 = !DILocation(line: 333, column: 21, scope: !11265)
!11272 = !DILocation(line: 333, column: 2, scope: !11265)
!11273 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !11274, file: !11274, line: 40, type: !11275, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11277)
!11274 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11275 = !DISubroutineType(types: !11276)
!11276 = !{null, !11218}
!11277 = !{!11278}
!11278 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11273, file: !11274, line: 40, type: !11218)
!11279 = !DILocation(line: 0, scope: !11273)
!11280 = !DILocation(line: 42, column: 31, scope: !11273)
!11281 = !DILocation(line: 42, column: 2, scope: !11273)
!11282 = !DILocation(line: 43, column: 1, scope: !11273)
!11283 = distinct !DISubprogram(name: "z_init_timeout", scope: !11274, file: !11274, line: 25, type: !2001, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11284)
!11284 = !{!11285}
!11285 = !DILocalVariable(name: "to", arg: 1, scope: !11283, file: !11274, line: 25, type: !2003)
!11286 = !DILocation(line: 0, scope: !11283)
!11287 = !DILocation(line: 27, column: 22, scope: !11283)
!11288 = !DILocation(line: 27, column: 2, scope: !11283)
!11289 = !DILocation(line: 28, column: 1, scope: !11283)
!11290 = distinct !DISubprogram(name: "sys_dnode_init", scope: !243, file: !243, line: 211, type: !11291, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11293)
!11291 = !DISubroutineType(types: !11292)
!11292 = !{null, !2047}
!11293 = !{!11294}
!11294 = !DILocalVariable(name: "node", arg: 1, scope: !11290, file: !243, line: 211, type: !2047)
!11295 = !DILocation(line: 0, scope: !11290)
!11296 = !DILocation(line: 213, column: 8, scope: !11290)
!11297 = !DILocation(line: 213, column: 13, scope: !11290)
!11298 = !DILocation(line: 214, column: 8, scope: !11290)
!11299 = !DILocation(line: 214, column: 13, scope: !11290)
!11300 = !DILocation(line: 215, column: 1, scope: !11290)
!11301 = distinct !DISubprogram(name: "sys_dlist_init", scope: !243, file: !243, line: 197, type: !11302, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11305)
!11302 = !DISubroutineType(types: !11303)
!11303 = !{null, !11304}
!11304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 32)
!11305 = !{!11306}
!11306 = !DILocalVariable(name: "list", arg: 1, scope: !11301, file: !243, line: 197, type: !11304)
!11307 = !DILocation(line: 0, scope: !11301)
!11308 = !DILocation(line: 199, column: 8, scope: !11301)
!11309 = !DILocation(line: 199, column: 13, scope: !11301)
!11310 = !DILocation(line: 200, column: 8, scope: !11301)
!11311 = !DILocation(line: 200, column: 13, scope: !11301)
!11312 = !DILocation(line: 201, column: 1, scope: !11301)
!11313 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1940, file: !1940, line: 641, type: !11314, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11320)
!11314 = !DISubroutineType(types: !11315)
!11315 = !{!1943, !1944, !11170, !222, !3270, !103, !103, !103, !104, !155, !11316}
!11316 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1383, line: 67, baseType: !11317)
!11317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 65, size: 64, elements: !11318)
!11318 = !{!11319}
!11319 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11317, file: !1383, line: 66, baseType: !1382, size: 64)
!11320 = !{!11321, !11322, !11323, !11324, !11325, !11326, !11327, !11328, !11329, !11330}
!11321 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11313, file: !1940, line: 641, type: !1944)
!11322 = !DILocalVariable(name: "stack", arg: 2, scope: !11313, file: !1940, line: 642, type: !11170)
!11323 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11313, file: !1940, line: 643, type: !222)
!11324 = !DILocalVariable(name: "entry", arg: 4, scope: !11313, file: !1940, line: 643, type: !3270)
!11325 = !DILocalVariable(name: "p1", arg: 5, scope: !11313, file: !1940, line: 644, type: !103)
!11326 = !DILocalVariable(name: "p2", arg: 6, scope: !11313, file: !1940, line: 644, type: !103)
!11327 = !DILocalVariable(name: "p3", arg: 7, scope: !11313, file: !1940, line: 644, type: !103)
!11328 = !DILocalVariable(name: "prio", arg: 8, scope: !11313, file: !1940, line: 645, type: !104)
!11329 = !DILocalVariable(name: "options", arg: 9, scope: !11313, file: !1940, line: 645, type: !155)
!11330 = !DILocalVariable(name: "delay", arg: 10, scope: !11313, file: !1940, line: 645, type: !11316)
!11331 = !DILocation(line: 0, scope: !11313)
!11332 = !DILocation(line: 649, column: 2, scope: !11313)
!11333 = !DILocation(line: 652, column: 7, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11313, file: !1940, line: 652, column: 6)
!11335 = !DILocation(line: 652, column: 6, scope: !11313)
!11336 = !DILocation(line: 653, column: 3, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11334, file: !1940, line: 652, column: 39)
!11338 = !DILocation(line: 654, column: 2, scope: !11337)
!11339 = !DILocation(line: 656, column: 2, scope: !11313)
!11340 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1940, file: !1940, line: 401, type: !11341, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11343)
!11341 = !DISubroutineType(types: !11342)
!11342 = !{null, !1944, !11316}
!11343 = !{!11344, !11345}
!11344 = !DILocalVariable(name: "thread", arg: 1, scope: !11340, file: !1940, line: 401, type: !1944)
!11345 = !DILocalVariable(name: "delay", arg: 2, scope: !11340, file: !1940, line: 401, type: !11316)
!11346 = !DILocation(line: 0, scope: !11340)
!11347 = !DILocation(line: 404, column: 6, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11340, file: !1940, line: 404, column: 6)
!11349 = !DILocation(line: 404, column: 6, scope: !11340)
!11350 = !DILocation(line: 405, column: 3, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11348, file: !1940, line: 404, column: 38)
!11352 = !DILocation(line: 406, column: 2, scope: !11351)
!11353 = !DILocation(line: 407, column: 3, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11348, file: !1940, line: 406, column: 9)
!11355 = !DILocation(line: 413, column: 1, scope: !11340)
!11356 = distinct !DISubprogram(name: "k_thread_start", scope: !3390, file: !3390, line: 205, type: !11357, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11359)
!11357 = !DISubroutineType(types: !11358)
!11358 = !{null, !1943}
!11359 = !{!11360}
!11360 = !DILocalVariable(name: "thread", arg: 1, scope: !11356, file: !3390, line: 205, type: !1943)
!11361 = !DILocation(line: 0, scope: !11356)
!11362 = !DILocation(line: 214, column: 2, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11356, file: !3390, line: 214, column: 2)
!11364 = !{i64 2154090143}
!11365 = !DILocation(line: 215, column: 2, scope: !11356)
!11366 = !DILocation(line: 216, column: 1, scope: !11356)
!11367 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11274, file: !11274, line: 47, type: !11341, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11368)
!11368 = !{!11369, !11370}
!11369 = !DILocalVariable(name: "thread", arg: 1, scope: !11367, file: !11274, line: 47, type: !1944)
!11370 = !DILocalVariable(name: "ticks", arg: 2, scope: !11367, file: !11274, line: 47, type: !11316)
!11371 = !DILocation(line: 0, scope: !11367)
!11372 = !DILocation(line: 49, column: 30, scope: !11367)
!11373 = !DILocation(line: 49, column: 2, scope: !11367)
!11374 = !DILocation(line: 50, column: 1, scope: !11367)
!11375 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1940, file: !1940, line: 748, type: !2800, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11376)
!11376 = !{!11377, !11395}
!11377 = !DILocalVariable(name: "thread_data", scope: !11378, file: !1940, line: 750, type: !11379)
!11378 = distinct !DILexicalBlock(scope: !11375, file: !1940, line: 750, column: 2)
!11379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11380, size: 32)
!11380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !329, line: 620, size: 384, elements: !11381)
!11381 = !{!11382, !11383, !11384, !11385, !11386, !11387, !11388, !11389, !11390, !11391, !11392, !11394}
!11382 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !11380, file: !329, line: 621, baseType: !1944, size: 32)
!11383 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !11380, file: !329, line: 622, baseType: !11170, size: 32, offset: 32)
!11384 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !11380, file: !329, line: 623, baseType: !32, size: 32, offset: 64)
!11385 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !11380, file: !329, line: 624, baseType: !3270, size: 32, offset: 96)
!11386 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !11380, file: !329, line: 625, baseType: !103, size: 32, offset: 128)
!11387 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !11380, file: !329, line: 626, baseType: !103, size: 32, offset: 160)
!11388 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !11380, file: !329, line: 627, baseType: !103, size: 32, offset: 192)
!11389 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !11380, file: !329, line: 628, baseType: !104, size: 32, offset: 224)
!11390 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !11380, file: !329, line: 629, baseType: !155, size: 32, offset: 256)
!11391 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !11380, file: !329, line: 630, baseType: !588, size: 32, offset: 288)
!11392 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !11380, file: !329, line: 631, baseType: !11393, size: 32, offset: 320)
!11393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 32)
!11394 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !11380, file: !329, line: 632, baseType: !113, size: 32, offset: 352)
!11395 = !DILocalVariable(name: "thread_data", scope: !11396, file: !1940, line: 781, type: !11379)
!11396 = distinct !DILexicalBlock(scope: !11375, file: !1940, line: 781, column: 2)
!11397 = !DILocation(line: 0, scope: !11378)
!11398 = !DILocation(line: 750, column: 2, scope: !11378)
!11399 = !DILocation(line: 780, column: 2, scope: !11375)
!11400 = !DILocation(line: 0, scope: !11396)
!11401 = !DILocation(line: 781, column: 2, scope: !11396)
!11402 = !DILocation(line: 752, column: 17, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11404, file: !1940, line: 750, column: 38)
!11404 = distinct !DILexicalBlock(scope: !11378, file: !1940, line: 750, column: 2)
!11405 = !DILocation(line: 753, column: 17, scope: !11403)
!11406 = !DILocation(line: 754, column: 17, scope: !11403)
!11407 = !DILocation(line: 755, column: 17, scope: !11403)
!11408 = !DILocation(line: 756, column: 17, scope: !11403)
!11409 = !DILocation(line: 757, column: 17, scope: !11403)
!11410 = !DILocation(line: 758, column: 17, scope: !11403)
!11411 = !DILocation(line: 759, column: 17, scope: !11403)
!11412 = !DILocation(line: 760, column: 17, scope: !11403)
!11413 = !DILocation(line: 751, column: 3, scope: !11403)
!11414 = !DILocation(line: 763, column: 16, scope: !11403)
!11415 = !DILocation(line: 763, column: 29, scope: !11403)
!11416 = !DILocation(line: 763, column: 39, scope: !11403)
!11417 = !DILocation(line: 750, column: 2, scope: !11404)
!11418 = !DILocation(line: 750, column: 2, scope: !11419)
!11419 = distinct !DILexicalBlock(scope: !11404, file: !1940, line: 750, column: 2)
!11420 = distinct !{!11420, !11398, !11421}
!11421 = !DILocation(line: 764, column: 2, scope: !11378)
!11422 = !DILocation(line: 787, column: 2, scope: !11375)
!11423 = !DILocation(line: 788, column: 1, scope: !11375)
!11424 = !DILocation(line: 782, column: 20, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11426, file: !1940, line: 782, column: 7)
!11426 = distinct !DILexicalBlock(scope: !11427, file: !1940, line: 781, column: 38)
!11427 = distinct !DILexicalBlock(scope: !11396, file: !1940, line: 781, column: 2)
!11428 = !DILocation(line: 782, column: 31, scope: !11425)
!11429 = !DILocation(line: 782, column: 7, scope: !11426)
!11430 = !DILocation(line: 783, column: 37, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11425, file: !1940, line: 782, column: 51)
!11432 = !DILocation(line: 784, column: 10, scope: !11431)
!11433 = !DILocation(line: 783, column: 4, scope: !11431)
!11434 = !DILocation(line: 785, column: 3, scope: !11431)
!11435 = !DILocation(line: 781, column: 2, scope: !11427)
!11436 = !DILocation(line: 781, column: 2, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11427, file: !1940, line: 781, column: 2)
!11438 = distinct !{!11438, !11401, !11439}
!11439 = !DILocation(line: 786, column: 2, scope: !11396)
!11440 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !11441, file: !11441, line: 403, type: !11442, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11444)
!11441 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11442 = !DISubroutineType(types: !11443)
!11443 = !{!1294, !1294}
!11444 = !{!11445}
!11445 = !DILocalVariable(name: "t", arg: 1, scope: !11440, file: !11441, line: 403, type: !1294)
!11446 = !DILocation(line: 0, scope: !11440)
!11447 = !DILocalVariable(name: "t", arg: 1, scope: !11448, file: !11441, line: 102, type: !1294)
!11448 = distinct !DISubprogram(name: "z_tmcvt", scope: !11441, file: !11441, line: 102, type: !11449, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11451)
!11449 = !DISubroutineType(types: !11450)
!11450 = !{!1294, !1294, !155, !155, !126, !126, !126, !126}
!11451 = !{!11447, !11452, !11453, !11454, !11455, !11456, !11457, !11458, !11459, !11460, !11461}
!11452 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11448, file: !11441, line: 102, type: !155)
!11453 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11448, file: !11441, line: 103, type: !155)
!11454 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11448, file: !11441, line: 103, type: !126)
!11455 = !DILocalVariable(name: "result32", arg: 5, scope: !11448, file: !11441, line: 104, type: !126)
!11456 = !DILocalVariable(name: "round_up", arg: 6, scope: !11448, file: !11441, line: 104, type: !126)
!11457 = !DILocalVariable(name: "round_off", arg: 7, scope: !11448, file: !11441, line: 105, type: !126)
!11458 = !DILocalVariable(name: "mul_ratio", scope: !11448, file: !11441, line: 107, type: !126)
!11459 = !DILocalVariable(name: "div_ratio", scope: !11448, file: !11441, line: 109, type: !126)
!11460 = !DILocalVariable(name: "off", scope: !11448, file: !11441, line: 116, type: !1294)
!11461 = !DILocalVariable(name: "rdivisor", scope: !11462, file: !11441, line: 119, type: !155)
!11462 = distinct !DILexicalBlock(scope: !11463, file: !11441, line: 118, column: 18)
!11463 = distinct !DILexicalBlock(scope: !11448, file: !11441, line: 118, column: 6)
!11464 = !DILocation(line: 0, scope: !11448, inlinedAt: !11465)
!11465 = distinct !DILocation(line: 406, column: 9, scope: !11440)
!11466 = !DILocation(line: 145, column: 13, scope: !11467, inlinedAt: !11465)
!11467 = distinct !DILexicalBlock(scope: !11468, file: !11441, line: 144, column: 10)
!11468 = distinct !DILexicalBlock(scope: !11469, file: !11441, line: 142, column: 7)
!11469 = distinct !DILexicalBlock(scope: !11470, file: !11441, line: 141, column: 24)
!11470 = distinct !DILexicalBlock(scope: !11471, file: !11441, line: 141, column: 13)
!11471 = distinct !DILexicalBlock(scope: !11448, file: !11441, line: 134, column: 6)
!11472 = !DILocation(line: 406, column: 2, scope: !11440)
!11473 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1940, file: !1940, line: 817, type: !3268, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11474)
!11474 = !{!11475, !11476, !11477, !11478}
!11475 = !DILocalVariable(name: "entry", arg: 1, scope: !11473, file: !1940, line: 817, type: !3270)
!11476 = !DILocalVariable(name: "p1", arg: 2, scope: !11473, file: !1940, line: 818, type: !103)
!11477 = !DILocalVariable(name: "p2", arg: 3, scope: !11473, file: !1940, line: 818, type: !103)
!11478 = !DILocalVariable(name: "p3", arg: 4, scope: !11473, file: !1940, line: 818, type: !103)
!11479 = !DILocation(line: 0, scope: !11473)
!11480 = !DILocation(line: 822, column: 2, scope: !11473)
!11481 = !DILocation(line: 822, column: 17, scope: !11473)
!11482 = !DILocation(line: 822, column: 30, scope: !11473)
!11483 = !DILocation(line: 823, column: 2, scope: !11473)
!11484 = !DILocation(line: 845, column: 2, scope: !11473)
!11485 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1940, file: !1940, line: 888, type: !11486, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11488)
!11486 = !DISubroutineType(types: !11487)
!11487 = !{!104, !1944}
!11488 = !{!11489}
!11489 = !DILocalVariable(name: "thread", arg: 1, scope: !11485, file: !1940, line: 888, type: !1944)
!11490 = !DILocation(line: 0, scope: !11485)
!11491 = !DILocation(line: 893, column: 2, scope: !11485)
!11492 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1940, file: !1940, line: 897, type: !11493, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11495)
!11493 = !DISubroutineType(types: !11494)
!11494 = !{!104, !1944, !32}
!11495 = !{!11496, !11497}
!11496 = !DILocalVariable(name: "thread", arg: 1, scope: !11492, file: !1940, line: 897, type: !1944)
!11497 = !DILocalVariable(name: "options", arg: 2, scope: !11492, file: !1940, line: 897, type: !32)
!11498 = !DILocation(line: 0, scope: !11492)
!11499 = !DILocation(line: 902, column: 2, scope: !11492)
!11500 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1940, file: !1940, line: 1072, type: !11501, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11506)
!11501 = !DISubroutineType(types: !11502)
!11502 = !{!104, !1943, !11503}
!11503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11504, size: 32)
!11504 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !233, line: 234, baseType: !11505)
!11505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !233, line: 192, elements: !344)
!11506 = !{!11507, !11508}
!11507 = !DILocalVariable(name: "thread", arg: 1, scope: !11500, file: !1940, line: 1072, type: !1943)
!11508 = !DILocalVariable(name: "stats", arg: 2, scope: !11500, file: !1940, line: 1073, type: !11503)
!11509 = !DILocation(line: 0, scope: !11500)
!11510 = !DILocation(line: 1075, column: 14, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11500, file: !1940, line: 1075, column: 6)
!11512 = !DILocation(line: 1075, column: 23, scope: !11511)
!11513 = !DILocation(line: 1086, column: 1, scope: !11500)
!11514 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1940, file: !1940, line: 1088, type: !11515, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2044, retainedNodes: !11517)
!11515 = !DISubroutineType(types: !11516)
!11516 = !{!104, !11503}
!11517 = !{!11518}
!11518 = !DILocalVariable(name: "stats", arg: 1, scope: !11514, file: !1940, line: 1088, type: !11503)
!11519 = !DILocation(line: 0, scope: !11514)
!11520 = !DILocation(line: 1094, column: 12, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11514, file: !1940, line: 1094, column: 6)
!11522 = !DILocation(line: 1120, column: 1, scope: !11514)
!11523 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !11524, file: !11524, line: 20, type: !2800, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !344)
!11524 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11525 = !DILocation(line: 30, column: 2, scope: !11523)
!11526 = !DILocation(line: 31, column: 1, scope: !11523)
!11527 = distinct !DISubprogram(name: "idle", scope: !11524, file: !11524, line: 33, type: !3044, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !11528)
!11528 = !{!11529, !11530, !11531}
!11529 = !DILocalVariable(name: "unused1", arg: 1, scope: !11527, file: !11524, line: 33, type: !103)
!11530 = !DILocalVariable(name: "unused2", arg: 2, scope: !11527, file: !11524, line: 33, type: !103)
!11531 = !DILocalVariable(name: "unused3", arg: 3, scope: !11527, file: !11524, line: 33, type: !103)
!11532 = !DILocation(line: 0, scope: !11527)
!11533 = !DILocation(line: 41, column: 2, scope: !11527)
!11534 = !DILocation(line: 55, column: 2, scope: !11535, inlinedAt: !11539)
!11535 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4757, file: !4757, line: 42, type: !4758, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !11536)
!11536 = !{!11537, !11538}
!11537 = !DILocalVariable(name: "key", scope: !11535, file: !4757, line: 44, type: !32)
!11538 = !DILocalVariable(name: "tmp", scope: !11535, file: !4757, line: 53, type: !32)
!11539 = distinct !DILocation(line: 62, column: 10, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11527, file: !11524, line: 41, column: 15)
!11541 = !{i64 1948195}
!11542 = !DILocation(line: 0, scope: !11535, inlinedAt: !11539)
!11543 = !DILocation(line: 86, column: 3, scope: !11540)
!11544 = distinct !{!11544, !11533, !11545}
!11545 = !DILocation(line: 105, column: 2, scope: !11527)
!11546 = distinct !DISubprogram(name: "k_cpu_idle", scope: !329, file: !329, line: 5627, type: !2800, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !344)
!11547 = !DILocation(line: 5629, column: 2, scope: !11546)
!11548 = !DILocation(line: 5630, column: 1, scope: !11546)
!11549 = !DISubprogram(name: "arch_cpu_idle", scope: !3271, file: !3271, line: 167, type: !2800, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !344)
!11550 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2172, file: !2172, line: 93, type: !11551, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11553)
!11551 = !DISubroutineType(types: !11552)
!11552 = !{!588, !2067, !2067}
!11553 = !{!11554, !11555, !11556, !11557}
!11554 = !DILocalVariable(name: "thread_1", arg: 1, scope: !11550, file: !2172, line: 93, type: !2067)
!11555 = !DILocalVariable(name: "thread_2", arg: 2, scope: !11550, file: !2172, line: 94, type: !2067)
!11556 = !DILocalVariable(name: "b1", scope: !11550, file: !2172, line: 97, type: !588)
!11557 = !DILocalVariable(name: "b2", scope: !11550, file: !2172, line: 98, type: !588)
!11558 = !DILocation(line: 0, scope: !11550)
!11559 = !DILocation(line: 97, column: 30, scope: !11550)
!11560 = !DILocation(line: 98, column: 30, scope: !11550)
!11561 = !DILocation(line: 100, column: 9, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11550, file: !2172, line: 100, column: 6)
!11563 = !DILocation(line: 100, column: 6, scope: !11550)
!11564 = !DILocation(line: 125, column: 1, scope: !11550)
!11565 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2172, file: !2172, line: 428, type: !11566, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11568)
!11566 = !DISubroutineType(types: !11567)
!11567 = !{null, !2067}
!11568 = !{!11569}
!11569 = !DILocalVariable(name: "curr", arg: 1, scope: !11565, file: !2172, line: 428, type: !2067)
!11570 = !DILocation(line: 0, scope: !11565)
!11571 = !DILocation(line: 434, column: 6, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11565, file: !2172, line: 434, column: 6)
!11573 = !DILocation(line: 434, column: 23, scope: !11572)
!11574 = !DILocation(line: 434, column: 6, scope: !11565)
!11575 = !DILocation(line: 435, column: 50, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11572, file: !2172, line: 434, column: 29)
!11577 = !DILocation(line: 435, column: 48, scope: !11576)
!11578 = !DILocation(line: 435, column: 29, scope: !11576)
!11579 = !DILocation(line: 436, column: 24, scope: !11576)
!11580 = !DILocation(line: 436, column: 3, scope: !11576)
!11581 = !DILocation(line: 437, column: 2, scope: !11576)
!11582 = !DILocation(line: 438, column: 1, scope: !11565)
!11583 = distinct !DISubprogram(name: "slice_time", scope: !2172, file: !2172, line: 407, type: !11584, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11586)
!11584 = !DISubroutineType(types: !11585)
!11585 = !{!104, !2067}
!11586 = !{!11587, !11588}
!11587 = !DILocalVariable(name: "curr", arg: 1, scope: !11583, file: !2172, line: 407, type: !2067)
!11588 = !DILocalVariable(name: "ret", scope: !11583, file: !2172, line: 409, type: !104)
!11589 = !DILocation(line: 0, scope: !11583)
!11590 = !DILocation(line: 409, column: 12, scope: !11583)
!11591 = !DILocation(line: 416, column: 2, scope: !11583)
!11592 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2172, file: !2172, line: 440, type: !11593, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11595)
!11593 = !DISubroutineType(types: !11594)
!11594 = !{null, !588, !104}
!11595 = !{!11596, !11597, !11598, !11604}
!11596 = !DILocalVariable(name: "slice", arg: 1, scope: !11592, file: !2172, line: 440, type: !588)
!11597 = !DILocalVariable(name: "prio", arg: 2, scope: !11592, file: !2172, line: 440, type: !104)
!11598 = !DILocalVariable(name: "__i", scope: !11599, file: !2172, line: 442, type: !11600)
!11599 = distinct !DILexicalBlock(scope: !11592, file: !2172, line: 442, column: 2)
!11600 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !343, line: 106, baseType: !11601)
!11601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !343, line: 32, size: 32, elements: !11602)
!11602 = !{!11603}
!11603 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11601, file: !343, line: 33, baseType: !104, size: 32)
!11604 = !DILocalVariable(name: "__key", scope: !11599, file: !2172, line: 442, type: !11600)
!11605 = !DILocation(line: 0, scope: !11592)
!11606 = !DILocation(line: 0, scope: !11599)
!11607 = !DILocalVariable(name: "l", arg: 1, scope: !11608, file: !343, line: 136, type: !11611)
!11608 = distinct !DISubprogram(name: "k_spin_lock", scope: !343, file: !343, line: 136, type: !11609, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11612)
!11609 = !DISubroutineType(types: !11610)
!11610 = !{!11600, !11611}
!11611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 32)
!11612 = !{!11607, !11613}
!11613 = !DILocalVariable(name: "k", scope: !11608, file: !343, line: 139, type: !11600)
!11614 = !DILocation(line: 0, scope: !11608, inlinedAt: !11615)
!11615 = distinct !DILocation(line: 442, column: 2, scope: !11599)
!11616 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !11621)
!11617 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4757, file: !4757, line: 42, type: !4758, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11618)
!11618 = !{!11619, !11620}
!11619 = !DILocalVariable(name: "key", scope: !11617, file: !4757, line: 44, type: !32)
!11620 = !DILocalVariable(name: "tmp", scope: !11617, file: !4757, line: 53, type: !32)
!11621 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !11615)
!11622 = !{i64 1992166}
!11623 = !DILocation(line: 0, scope: !11617, inlinedAt: !11621)
!11624 = !DILocation(line: 443, column: 29, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11626, file: !2172, line: 442, column: 26)
!11626 = distinct !DILexicalBlock(scope: !11599, file: !2172, line: 442, column: 2)
!11627 = !DILocation(line: 444, column: 17, scope: !11625)
!11628 = !DILocation(line: 445, column: 51, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11625, file: !2172, line: 445, column: 7)
!11630 = !DILocation(line: 445, column: 7, scope: !11625)
!11631 = !DILocation(line: 0, scope: !11625)
!11632 = !DILocation(line: 451, column: 18, scope: !11625)
!11633 = !DILocation(line: 452, column: 3, scope: !11625)
!11634 = !DILocalVariable(name: "key", arg: 2, scope: !11635, file: !343, line: 190, type: !11600)
!11635 = distinct !DISubprogram(name: "k_spin_unlock", scope: !343, file: !343, line: 189, type: !11636, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11638)
!11636 = !DISubroutineType(types: !11637)
!11637 = !{null, !11611, !11600}
!11638 = !{!11639, !11634}
!11639 = !DILocalVariable(name: "l", arg: 1, scope: !11635, file: !343, line: 189, type: !11611)
!11640 = !DILocation(line: 0, scope: !11635, inlinedAt: !11641)
!11641 = distinct !DILocation(line: 442, column: 2, scope: !11626)
!11642 = !DILocalVariable(name: "key", arg: 1, scope: !11643, file: !4757, line: 84, type: !32)
!11643 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4757, file: !4757, line: 84, type: !4768, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11644)
!11644 = !{!11642}
!11645 = !DILocation(line: 0, scope: !11643, inlinedAt: !11646)
!11646 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !11641)
!11647 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !11646)
!11648 = !{i64 1992983}
!11649 = !DILocation(line: 454, column: 1, scope: !11592)
!11650 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !11441, file: !11441, line: 389, type: !5939, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11651)
!11651 = !{!11652}
!11652 = !DILocalVariable(name: "t", arg: 1, scope: !11650, file: !11441, line: 389, type: !155)
!11653 = !DILocation(line: 0, scope: !11650)
!11654 = !DILocalVariable(name: "t", arg: 1, scope: !11655, file: !11441, line: 102, type: !1294)
!11655 = distinct !DISubprogram(name: "z_tmcvt", scope: !11441, file: !11441, line: 102, type: !11449, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11656)
!11656 = !{!11654, !11657, !11658, !11659, !11660, !11661, !11662, !11663, !11664, !11665, !11666}
!11657 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11655, file: !11441, line: 102, type: !155)
!11658 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11655, file: !11441, line: 103, type: !155)
!11659 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11655, file: !11441, line: 103, type: !126)
!11660 = !DILocalVariable(name: "result32", arg: 5, scope: !11655, file: !11441, line: 104, type: !126)
!11661 = !DILocalVariable(name: "round_up", arg: 6, scope: !11655, file: !11441, line: 104, type: !126)
!11662 = !DILocalVariable(name: "round_off", arg: 7, scope: !11655, file: !11441, line: 105, type: !126)
!11663 = !DILocalVariable(name: "mul_ratio", scope: !11655, file: !11441, line: 107, type: !126)
!11664 = !DILocalVariable(name: "div_ratio", scope: !11655, file: !11441, line: 109, type: !126)
!11665 = !DILocalVariable(name: "off", scope: !11655, file: !11441, line: 116, type: !1294)
!11666 = !DILocalVariable(name: "rdivisor", scope: !11667, file: !11441, line: 119, type: !155)
!11667 = distinct !DILexicalBlock(scope: !11668, file: !11441, line: 118, column: 18)
!11668 = distinct !DILexicalBlock(scope: !11655, file: !11441, line: 118, column: 6)
!11669 = !DILocation(line: 0, scope: !11655, inlinedAt: !11670)
!11670 = distinct !DILocation(line: 392, column: 9, scope: !11650)
!11671 = !DILocation(line: 143, column: 25, scope: !11672, inlinedAt: !11670)
!11672 = distinct !DILexicalBlock(scope: !11673, file: !11441, line: 142, column: 17)
!11673 = distinct !DILexicalBlock(scope: !11674, file: !11441, line: 142, column: 7)
!11674 = distinct !DILexicalBlock(scope: !11675, file: !11441, line: 141, column: 24)
!11675 = distinct !DILexicalBlock(scope: !11676, file: !11441, line: 141, column: 13)
!11676 = distinct !DILexicalBlock(scope: !11655, file: !11441, line: 134, column: 6)
!11677 = !DILocation(line: 392, column: 2, scope: !11650)
!11678 = distinct !DISubprogram(name: "z_time_slice", scope: !2172, file: !2172, line: 502, type: !6576, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11679)
!11679 = !{!11680, !11681}
!11680 = !DILocalVariable(name: "ticks", arg: 1, scope: !11678, file: !2172, line: 502, type: !104)
!11681 = !DILocalVariable(name: "key", scope: !11678, file: !2172, line: 511, type: !11600)
!11682 = !DILocation(line: 0, scope: !11678)
!11683 = !DILocation(line: 0, scope: !11608, inlinedAt: !11684)
!11684 = distinct !DILocation(line: 511, column: 25, scope: !11678)
!11685 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !11686)
!11686 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !11684)
!11687 = !DILocation(line: 0, scope: !11617, inlinedAt: !11686)
!11688 = !DILocation(line: 514, column: 6, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11678, file: !2172, line: 514, column: 6)
!11690 = !DILocation(line: 514, column: 25, scope: !11689)
!11691 = !DILocation(line: 514, column: 22, scope: !11689)
!11692 = !DILocation(line: 514, column: 6, scope: !11678)
!11693 = !DILocation(line: 515, column: 3, scope: !11694)
!11694 = distinct !DILexicalBlock(scope: !11689, file: !2172, line: 514, column: 35)
!11695 = !DILocation(line: 0, scope: !11635, inlinedAt: !11696)
!11696 = distinct !DILocation(line: 516, column: 3, scope: !11694)
!11697 = !DILocation(line: 0, scope: !11643, inlinedAt: !11698)
!11698 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !11696)
!11699 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !11698)
!11700 = !DILocation(line: 517, column: 3, scope: !11694)
!11701 = !DILocation(line: 519, column: 18, scope: !11678)
!11702 = !DILocation(line: 522, column: 6, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11678, file: !2172, line: 522, column: 6)
!11704 = !DILocation(line: 522, column: 27, scope: !11703)
!11705 = !DILocation(line: 522, column: 30, scope: !11703)
!11706 = !DILocation(line: 522, column: 6, scope: !11678)
!11707 = !DILocation(line: 523, column: 30, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11709, file: !2172, line: 523, column: 7)
!11709 = distinct !DILexicalBlock(scope: !11703, file: !2172, line: 522, column: 51)
!11710 = !DILocation(line: 523, column: 13, scope: !11708)
!11711 = !DILocation(line: 523, column: 7, scope: !11709)
!11712 = !DILocation(line: 530, column: 10, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11708, file: !2172, line: 523, column: 43)
!11714 = !DILocation(line: 531, column: 3, scope: !11713)
!11715 = !DILocation(line: 532, column: 30, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11708, file: !2172, line: 531, column: 10)
!11717 = !DILocation(line: 535, column: 29, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11703, file: !2172, line: 534, column: 9)
!11719 = !DILocation(line: 0, scope: !11635, inlinedAt: !11720)
!11720 = distinct !DILocation(line: 537, column: 2, scope: !11678)
!11721 = !DILocation(line: 0, scope: !11643, inlinedAt: !11722)
!11722 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !11720)
!11723 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !11722)
!11724 = !DILocation(line: 538, column: 1, scope: !11678)
!11725 = distinct !DISubprogram(name: "sliceable", scope: !2172, file: !2172, line: 468, type: !11726, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11728)
!11726 = !DISubroutineType(types: !11727)
!11727 = !{!126, !2067}
!11728 = !{!11729, !11730}
!11729 = !DILocalVariable(name: "thread", arg: 1, scope: !11725, file: !2172, line: 468, type: !2067)
!11730 = !DILocalVariable(name: "ret", scope: !11725, file: !2172, line: 470, type: !126)
!11731 = !DILocation(line: 0, scope: !11725)
!11732 = !DILocation(line: 470, column: 13, scope: !11725)
!11733 = !DILocation(line: 471, column: 3, scope: !11725)
!11734 = !DILocation(line: 471, column: 7, scope: !11725)
!11735 = !DILocation(line: 472, column: 3, scope: !11725)
!11736 = !DILocation(line: 472, column: 37, scope: !11725)
!11737 = !DILocation(line: 472, column: 24, scope: !11725)
!11738 = !DILocation(line: 472, column: 43, scope: !11725)
!11739 = !DILocation(line: 472, column: 7, scope: !11725)
!11740 = !DILocation(line: 473, column: 3, scope: !11725)
!11741 = !DILocation(line: 473, column: 7, scope: !11725)
!11742 = !DILocation(line: 473, column: 6, scope: !11725)
!11743 = !DILocation(line: 479, column: 2, scope: !11725)
!11744 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2172, file: !2172, line: 482, type: !11745, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11747)
!11745 = !DISubroutineType(types: !11746)
!11746 = !{!11600, !11600}
!11747 = !{!11748, !11749}
!11748 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !11744, file: !2172, line: 482, type: !11600)
!11749 = !DILocalVariable(name: "curr", scope: !11744, file: !2172, line: 484, type: !2067)
!11750 = !DILocation(line: 0, scope: !11744)
!11751 = !DILocation(line: 484, column: 26, scope: !11744)
!11752 = !DILocation(line: 493, column: 7, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11744, file: !2172, line: 493, column: 6)
!11754 = !DILocation(line: 493, column: 6, scope: !11744)
!11755 = !DILocation(line: 494, column: 3, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11753, file: !2172, line: 493, column: 49)
!11757 = !DILocation(line: 495, column: 2, scope: !11756)
!11758 = !DILocation(line: 496, column: 2, scope: !11744)
!11759 = !DILocation(line: 499, column: 1, scope: !11744)
!11760 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !10880, file: !10880, line: 106, type: !11726, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11761)
!11761 = !{!11762, !11763}
!11762 = !DILocalVariable(name: "thread", arg: 1, scope: !11760, file: !10880, line: 106, type: !2067)
!11763 = !DILocalVariable(name: "state", scope: !11760, file: !10880, line: 108, type: !123)
!11764 = !DILocation(line: 0, scope: !11760)
!11765 = !DILocation(line: 108, column: 31, scope: !11760)
!11766 = !DILocation(line: 110, column: 16, scope: !11760)
!11767 = !DILocation(line: 111, column: 41, scope: !11760)
!11768 = !DILocation(line: 110, column: 2, scope: !11760)
!11769 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2172, file: !2172, line: 393, type: !11566, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11770)
!11770 = !{!11771}
!11771 = !DILocalVariable(name: "thread", arg: 1, scope: !11769, file: !2172, line: 393, type: !2067)
!11772 = !DILocation(line: 0, scope: !11769)
!11773 = !DILocation(line: 395, column: 6, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11769, file: !2172, line: 395, column: 6)
!11775 = !DILocation(line: 395, column: 6, scope: !11769)
!11776 = !DILocalVariable(name: "thread", arg: 1, scope: !11777, file: !2172, line: 264, type: !2067)
!11777 = distinct !DISubprogram(name: "dequeue_thread", scope: !2172, file: !2172, line: 264, type: !11566, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11778)
!11778 = !{!11776}
!11779 = !DILocation(line: 0, scope: !11777, inlinedAt: !11780)
!11780 = distinct !DILocation(line: 396, column: 3, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11774, file: !2172, line: 395, column: 34)
!11782 = !DILocation(line: 266, column: 15, scope: !11777, inlinedAt: !11780)
!11783 = !DILocation(line: 266, column: 28, scope: !11777, inlinedAt: !11780)
!11784 = !DILocalVariable(name: "thread", arg: 1, scope: !11785, file: !2172, line: 232, type: !2067)
!11785 = distinct !DISubprogram(name: "runq_remove", scope: !2172, file: !2172, line: 232, type: !11566, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11786)
!11786 = !{!11784}
!11787 = !DILocation(line: 0, scope: !11785, inlinedAt: !11788)
!11788 = distinct !DILocation(line: 268, column: 3, scope: !11789, inlinedAt: !11780)
!11789 = distinct !DILexicalBlock(scope: !11790, file: !2172, line: 267, column: 35)
!11790 = distinct !DILexicalBlock(scope: !11777, file: !2172, line: 267, column: 6)
!11791 = !DILocation(line: 234, column: 2, scope: !11785, inlinedAt: !11788)
!11792 = !DILocation(line: 397, column: 2, scope: !11781)
!11793 = !DILocalVariable(name: "thread", arg: 1, scope: !11794, file: !2172, line: 250, type: !2067)
!11794 = distinct !DISubprogram(name: "queue_thread", scope: !2172, file: !2172, line: 250, type: !11566, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11795)
!11795 = !{!11793}
!11796 = !DILocation(line: 0, scope: !11794, inlinedAt: !11797)
!11797 = distinct !DILocation(line: 398, column: 2, scope: !11769)
!11798 = !DILocation(line: 252, column: 15, scope: !11794, inlinedAt: !11797)
!11799 = !DILocation(line: 252, column: 28, scope: !11794, inlinedAt: !11797)
!11800 = !DILocalVariable(name: "thread", arg: 1, scope: !11801, file: !2172, line: 227, type: !2067)
!11801 = distinct !DISubprogram(name: "runq_add", scope: !2172, file: !2172, line: 227, type: !11566, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11802)
!11802 = !{!11800}
!11803 = !DILocation(line: 0, scope: !11801, inlinedAt: !11804)
!11804 = distinct !DILocation(line: 254, column: 3, scope: !11805, inlinedAt: !11797)
!11805 = distinct !DILexicalBlock(scope: !11806, file: !2172, line: 253, column: 35)
!11806 = distinct !DILexicalBlock(scope: !11794, file: !2172, line: 253, column: 6)
!11807 = !DILocalVariable(name: "pq", arg: 1, scope: !11808, file: !2172, line: 181, type: !11811)
!11808 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2172, file: !2172, line: 181, type: !11809, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11812)
!11809 = !DISubroutineType(types: !11810)
!11810 = !{null, !11811, !2067}
!11811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 32)
!11812 = !{!11807, !11813, !11814}
!11813 = !DILocalVariable(name: "thread", arg: 2, scope: !11808, file: !2172, line: 182, type: !2067)
!11814 = !DILocalVariable(name: "t", scope: !11808, file: !2172, line: 184, type: !2067)
!11815 = !DILocation(line: 0, scope: !11808, inlinedAt: !11816)
!11816 = distinct !DILocation(line: 229, column: 2, scope: !11801, inlinedAt: !11804)
!11817 = !DILocation(line: 188, column: 2, scope: !11818, inlinedAt: !11816)
!11818 = distinct !DILexicalBlock(scope: !11808, file: !2172, line: 188, column: 2)
!11819 = !DILocation(line: 188, column: 2, scope: !11820, inlinedAt: !11816)
!11820 = distinct !DILexicalBlock(scope: !11818, file: !2172, line: 188, column: 2)
!11821 = !DILocation(line: 0, scope: !11818, inlinedAt: !11816)
!11822 = !DILocation(line: 189, column: 7, scope: !11823, inlinedAt: !11816)
!11823 = distinct !DILexicalBlock(scope: !11824, file: !2172, line: 189, column: 7)
!11824 = distinct !DILexicalBlock(scope: !11820, file: !2172, line: 188, column: 56)
!11825 = !DILocation(line: 189, column: 35, scope: !11823, inlinedAt: !11816)
!11826 = !DILocation(line: 189, column: 7, scope: !11824, inlinedAt: !11816)
!11827 = !DILocation(line: 191, column: 21, scope: !11828, inlinedAt: !11816)
!11828 = distinct !DILexicalBlock(scope: !11823, file: !2172, line: 189, column: 40)
!11829 = !DILocation(line: 190, column: 4, scope: !11828, inlinedAt: !11816)
!11830 = !DILocation(line: 192, column: 4, scope: !11828, inlinedAt: !11816)
!11831 = distinct !{!11831, !11817, !11832}
!11832 = !DILocation(line: 194, column: 2, scope: !11818, inlinedAt: !11816)
!11833 = !DILocation(line: 196, column: 37, scope: !11808, inlinedAt: !11816)
!11834 = !DILocation(line: 196, column: 2, scope: !11808, inlinedAt: !11816)
!11835 = !DILocation(line: 197, column: 1, scope: !11808, inlinedAt: !11816)
!11836 = !DILocation(line: 399, column: 25, scope: !11769)
!11837 = !DILocation(line: 399, column: 22, scope: !11769)
!11838 = !DILocation(line: 399, column: 2, scope: !11769)
!11839 = !DILocation(line: 400, column: 1, scope: !11769)
!11840 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !10880, file: !10880, line: 136, type: !11726, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11841)
!11841 = !{!11842}
!11842 = !DILocalVariable(name: "thread", arg: 1, scope: !11840, file: !10880, line: 136, type: !2067)
!11843 = !DILocation(line: 0, scope: !11840)
!11844 = !DILocation(line: 138, column: 9, scope: !11840)
!11845 = !DILocation(line: 138, column: 2, scope: !11840)
!11846 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2172, file: !2172, line: 1137, type: !11809, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11847)
!11847 = !{!11848, !11849}
!11848 = !DILocalVariable(name: "pq", arg: 1, scope: !11846, file: !2172, line: 1137, type: !11811)
!11849 = !DILocalVariable(name: "thread", arg: 2, scope: !11846, file: !2172, line: 1137, type: !2067)
!11850 = !DILocation(line: 0, scope: !11846)
!11851 = !DILocation(line: 1141, column: 33, scope: !11846)
!11852 = !DILocation(line: 1141, column: 2, scope: !11846)
!11853 = !DILocation(line: 1142, column: 1, scope: !11846)
!11854 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !243, file: !243, line: 294, type: !11855, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11857)
!11855 = !DISubroutineType(types: !11856)
!11856 = !{!2168, !11811}
!11857 = !{!11858}
!11858 = !DILocalVariable(name: "list", arg: 1, scope: !11854, file: !243, line: 294, type: !11811)
!11859 = !DILocation(line: 0, scope: !11854)
!11860 = !DILocation(line: 296, column: 9, scope: !11854)
!11861 = !DILocation(line: 296, column: 49, scope: !11854)
!11862 = !DILocation(line: 296, column: 2, scope: !11854)
!11863 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !243, file: !243, line: 443, type: !11864, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11866)
!11864 = !DISubroutineType(types: !11865)
!11865 = !{null, !2168, !2168}
!11866 = !{!11867, !11868, !11869}
!11867 = !DILocalVariable(name: "successor", arg: 1, scope: !11863, file: !243, line: 443, type: !2168)
!11868 = !DILocalVariable(name: "node", arg: 2, scope: !11863, file: !243, line: 443, type: !2168)
!11869 = !DILocalVariable(name: "prev", scope: !11863, file: !243, line: 445, type: !11870)
!11870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2168)
!11871 = !DILocation(line: 0, scope: !11863)
!11872 = !DILocation(line: 445, column: 39, scope: !11863)
!11873 = !DILocation(line: 447, column: 8, scope: !11863)
!11874 = !DILocation(line: 447, column: 13, scope: !11863)
!11875 = !DILocation(line: 448, column: 8, scope: !11863)
!11876 = !DILocation(line: 448, column: 13, scope: !11863)
!11877 = !DILocation(line: 449, column: 8, scope: !11863)
!11878 = !DILocation(line: 449, column: 13, scope: !11863)
!11879 = !DILocation(line: 450, column: 18, scope: !11863)
!11880 = !DILocation(line: 451, column: 1, scope: !11863)
!11881 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !243, file: !243, line: 341, type: !11882, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11884)
!11882 = !DISubroutineType(types: !11883)
!11883 = !{!2168, !11811, !2168}
!11884 = !{!11885, !11886}
!11885 = !DILocalVariable(name: "list", arg: 1, scope: !11881, file: !243, line: 341, type: !11811)
!11886 = !DILocalVariable(name: "node", arg: 2, scope: !11881, file: !243, line: 342, type: !2168)
!11887 = !DILocation(line: 0, scope: !11881)
!11888 = !DILocation(line: 344, column: 15, scope: !11881)
!11889 = !DILocation(line: 344, column: 9, scope: !11881)
!11890 = !DILocation(line: 344, column: 26, scope: !11881)
!11891 = !DILocation(line: 344, column: 2, scope: !11881)
!11892 = distinct !DISubprogram(name: "sys_dlist_append", scope: !243, file: !243, line: 404, type: !11893, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11895)
!11893 = !DISubroutineType(types: !11894)
!11894 = !{null, !11811, !2168}
!11895 = !{!11896, !11897, !11898}
!11896 = !DILocalVariable(name: "list", arg: 1, scope: !11892, file: !243, line: 404, type: !11811)
!11897 = !DILocalVariable(name: "node", arg: 2, scope: !11892, file: !243, line: 404, type: !2168)
!11898 = !DILocalVariable(name: "tail", scope: !11892, file: !243, line: 406, type: !11870)
!11899 = !DILocation(line: 0, scope: !11892)
!11900 = !DILocation(line: 406, column: 34, scope: !11892)
!11901 = !DILocation(line: 408, column: 8, scope: !11892)
!11902 = !DILocation(line: 408, column: 13, scope: !11892)
!11903 = !DILocation(line: 409, column: 8, scope: !11892)
!11904 = !DILocation(line: 409, column: 13, scope: !11892)
!11905 = !DILocation(line: 411, column: 8, scope: !11892)
!11906 = !DILocation(line: 411, column: 13, scope: !11892)
!11907 = !DILocation(line: 412, column: 13, scope: !11892)
!11908 = !DILocation(line: 413, column: 1, scope: !11892)
!11909 = distinct !DISubprogram(name: "update_cache", scope: !2172, file: !2172, line: 559, type: !6576, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11910)
!11910 = !{!11911, !11912}
!11911 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !11909, file: !2172, line: 559, type: !104)
!11912 = !DILocalVariable(name: "thread", scope: !11909, file: !2172, line: 562, type: !2067)
!11913 = !DILocation(line: 0, scope: !11909)
!11914 = !DILocation(line: 239, column: 9, scope: !11915, inlinedAt: !11918)
!11915 = distinct !DISubprogram(name: "runq_best", scope: !2172, file: !2172, line: 237, type: !11916, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !344)
!11916 = !DISubroutineType(types: !11917)
!11917 = !{!2067}
!11918 = distinct !DILocation(line: 314, column: 28, scope: !11919, inlinedAt: !11922)
!11919 = distinct !DISubprogram(name: "next_up", scope: !2172, file: !2172, line: 312, type: !11916, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11920)
!11920 = !{!11921}
!11921 = !DILocalVariable(name: "thread", scope: !11919, file: !2172, line: 314, type: !2067)
!11922 = distinct !DILocation(line: 562, column: 28, scope: !11909)
!11923 = !DILocation(line: 0, scope: !11919, inlinedAt: !11922)
!11924 = !DILocation(line: 340, column: 17, scope: !11919, inlinedAt: !11922)
!11925 = !DILocation(line: 340, column: 9, scope: !11919, inlinedAt: !11922)
!11926 = !DILocalVariable(name: "thread", arg: 1, scope: !11927, file: !2172, line: 127, type: !2067)
!11927 = distinct !DISubprogram(name: "should_preempt", scope: !2172, file: !2172, line: 127, type: !11928, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11930)
!11928 = !DISubroutineType(types: !11929)
!11929 = !{!126, !2067, !104}
!11930 = !{!11926, !11931}
!11931 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !11927, file: !2172, line: 128, type: !104)
!11932 = !DILocation(line: 0, scope: !11927, inlinedAt: !11933)
!11933 = distinct !DILocation(line: 564, column: 6, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11909, file: !2172, line: 564, column: 6)
!11935 = !DILocation(line: 133, column: 17, scope: !11936, inlinedAt: !11933)
!11936 = distinct !DILexicalBlock(scope: !11927, file: !2172, line: 133, column: 6)
!11937 = !DILocation(line: 0, scope: !11934)
!11938 = !DILocation(line: 133, column: 6, scope: !11927, inlinedAt: !11933)
!11939 = !DILocation(line: 140, column: 6, scope: !11940, inlinedAt: !11933)
!11940 = distinct !DILexicalBlock(scope: !11927, file: !2172, line: 140, column: 6)
!11941 = !DILocation(line: 140, column: 6, scope: !11927, inlinedAt: !11933)
!11942 = !DILocation(line: 150, column: 9, scope: !11943, inlinedAt: !11933)
!11943 = distinct !DILexicalBlock(scope: !11927, file: !2172, line: 149, column: 6)
!11944 = !DILocation(line: 149, column: 6, scope: !11927, inlinedAt: !11933)
!11945 = !DILocation(line: 157, column: 6, scope: !11946, inlinedAt: !11933)
!11946 = distinct !DILexicalBlock(scope: !11927, file: !2172, line: 157, column: 6)
!11947 = !DILocation(line: 564, column: 6, scope: !11909)
!11948 = !DILocation(line: 566, column: 14, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11950, file: !2172, line: 566, column: 7)
!11950 = distinct !DILexicalBlock(scope: !11934, file: !2172, line: 564, column: 42)
!11951 = !DILocation(line: 566, column: 7, scope: !11950)
!11952 = !DILocation(line: 567, column: 4, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11949, file: !2172, line: 566, column: 27)
!11954 = !DILocation(line: 568, column: 3, scope: !11953)
!11955 = !DILocation(line: 585, column: 1, scope: !11909)
!11956 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2172, file: !2172, line: 1144, type: !11957, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11959)
!11957 = !DISubroutineType(types: !11958)
!11958 = !{!2067, !11811}
!11959 = !{!11960, !11961, !11962}
!11960 = !DILocalVariable(name: "pq", arg: 1, scope: !11956, file: !2172, line: 1144, type: !11811)
!11961 = !DILocalVariable(name: "thread", scope: !11956, file: !2172, line: 1146, type: !2067)
!11962 = !DILocalVariable(name: "n", scope: !11956, file: !2172, line: 1147, type: !2168)
!11963 = !DILocation(line: 0, scope: !11956)
!11964 = !DILocation(line: 1147, column: 19, scope: !11956)
!11965 = !DILocation(line: 1152, column: 2, scope: !11956)
!11966 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !10880, file: !10880, line: 115, type: !11726, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11967)
!11967 = !{!11968}
!11968 = !DILocalVariable(name: "thread", arg: 1, scope: !11966, file: !10880, line: 115, type: !2067)
!11969 = !DILocation(line: 0, scope: !11966)
!11970 = !DILocation(line: 117, column: 46, scope: !11966)
!11971 = !DILocation(line: 117, column: 10, scope: !11966)
!11972 = !DILocation(line: 117, column: 9, scope: !11966)
!11973 = !DILocation(line: 117, column: 2, scope: !11966)
!11974 = distinct !DISubprogram(name: "is_preempt", scope: !2172, file: !2172, line: 62, type: !11584, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11975)
!11975 = !{!11976}
!11976 = !DILocalVariable(name: "thread", arg: 1, scope: !11974, file: !2172, line: 62, type: !2067)
!11977 = !DILocation(line: 0, scope: !11974)
!11978 = !DILocation(line: 65, column: 22, scope: !11974)
!11979 = !DILocation(line: 65, column: 30, scope: !11974)
!11980 = !DILocation(line: 65, column: 2, scope: !11974)
!11981 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11274, file: !11274, line: 35, type: !11982, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11986)
!11982 = !DISubroutineType(types: !11983)
!11983 = !{!126, !11984}
!11984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11985, size: 32)
!11985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2118)
!11986 = !{!11987}
!11987 = !DILocalVariable(name: "to", arg: 1, scope: !11981, file: !11274, line: 35, type: !11984)
!11988 = !DILocation(line: 0, scope: !11981)
!11989 = !DILocation(line: 37, column: 35, scope: !11981)
!11990 = !DILocation(line: 37, column: 10, scope: !11981)
!11991 = !DILocation(line: 37, column: 9, scope: !11981)
!11992 = !DILocation(line: 37, column: 2, scope: !11981)
!11993 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !243, file: !243, line: 225, type: !11994, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !11998)
!11994 = !DISubroutineType(types: !11995)
!11995 = !{!126, !11996}
!11996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11997, size: 32)
!11997 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2077)
!11998 = !{!11999}
!11999 = !DILocalVariable(name: "node", arg: 1, scope: !11993, file: !243, line: 225, type: !11996)
!12000 = !DILocation(line: 0, scope: !11993)
!12001 = !DILocation(line: 227, column: 15, scope: !11993)
!12002 = !DILocation(line: 227, column: 20, scope: !11993)
!12003 = !DILocation(line: 227, column: 2, scope: !11993)
!12004 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !243, file: !243, line: 325, type: !11882, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12005)
!12005 = !{!12006, !12007}
!12006 = !DILocalVariable(name: "list", arg: 1, scope: !12004, file: !243, line: 325, type: !11811)
!12007 = !DILocalVariable(name: "node", arg: 2, scope: !12004, file: !243, line: 326, type: !2168)
!12008 = !DILocation(line: 0, scope: !12004)
!12009 = !DILocation(line: 328, column: 24, scope: !12004)
!12010 = !DILocation(line: 328, column: 15, scope: !12004)
!12011 = !DILocation(line: 328, column: 9, scope: !12004)
!12012 = !DILocation(line: 328, column: 45, scope: !12004)
!12013 = !DILocation(line: 328, column: 2, scope: !12004)
!12014 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !243, file: !243, line: 266, type: !12015, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12017)
!12015 = !DISubroutineType(types: !12016)
!12016 = !{!126, !11811}
!12017 = !{!12018}
!12018 = !DILocalVariable(name: "list", arg: 1, scope: !12014, file: !243, line: 266, type: !11811)
!12019 = !DILocation(line: 0, scope: !12014)
!12020 = !DILocation(line: 268, column: 15, scope: !12014)
!12021 = !DILocation(line: 268, column: 20, scope: !12014)
!12022 = !DILocation(line: 268, column: 2, scope: !12014)
!12023 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !243, file: !243, line: 496, type: !12024, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12026)
!12024 = !DISubroutineType(types: !12025)
!12025 = !{null, !2168}
!12026 = !{!12027, !12028, !12029}
!12027 = !DILocalVariable(name: "node", arg: 1, scope: !12023, file: !243, line: 496, type: !2168)
!12028 = !DILocalVariable(name: "prev", scope: !12023, file: !243, line: 498, type: !11870)
!12029 = !DILocalVariable(name: "next", scope: !12023, file: !243, line: 499, type: !11870)
!12030 = !DILocation(line: 0, scope: !12023)
!12031 = !DILocation(line: 498, column: 34, scope: !12023)
!12032 = !DILocation(line: 499, column: 34, scope: !12023)
!12033 = !DILocation(line: 501, column: 8, scope: !12023)
!12034 = !DILocation(line: 501, column: 13, scope: !12023)
!12035 = !DILocation(line: 502, column: 8, scope: !12023)
!12036 = !DILocation(line: 502, column: 13, scope: !12023)
!12037 = !DILocation(line: 503, column: 2, scope: !12023)
!12038 = !DILocation(line: 504, column: 1, scope: !12023)
!12039 = distinct !DISubprogram(name: "sys_dnode_init", scope: !243, file: !243, line: 211, type: !12024, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12040)
!12040 = !{!12041}
!12041 = !DILocalVariable(name: "node", arg: 1, scope: !12039, file: !243, line: 211, type: !2168)
!12042 = !DILocation(line: 0, scope: !12039)
!12043 = !DILocation(line: 213, column: 8, scope: !12039)
!12044 = !DILocation(line: 213, column: 13, scope: !12039)
!12045 = !DILocation(line: 214, column: 8, scope: !12039)
!12046 = !DILocation(line: 214, column: 13, scope: !12039)
!12047 = !DILocation(line: 215, column: 1, scope: !12039)
!12048 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !10880, file: !10880, line: 131, type: !12049, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12051)
!12049 = !DISubroutineType(types: !12050)
!12050 = !{!126, !2067, !155}
!12051 = !{!12052, !12053}
!12052 = !DILocalVariable(name: "thread", arg: 1, scope: !12048, file: !10880, line: 131, type: !2067)
!12053 = !DILocalVariable(name: "state", arg: 2, scope: !12048, file: !10880, line: 131, type: !155)
!12054 = !DILocation(line: 0, scope: !12048)
!12055 = !DILocation(line: 133, column: 23, scope: !12048)
!12056 = !DILocation(line: 133, column: 45, scope: !12048)
!12057 = !DILocation(line: 133, column: 2, scope: !12048)
!12058 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !10880, file: !10880, line: 211, type: !12059, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12061)
!12059 = !DISubroutineType(types: !12060)
!12060 = !{!126, !104, !104}
!12061 = !{!12062, !12063}
!12062 = !DILocalVariable(name: "prio", arg: 1, scope: !12058, file: !10880, line: 211, type: !104)
!12063 = !DILocalVariable(name: "test_prio", arg: 2, scope: !12058, file: !10880, line: 211, type: !104)
!12064 = !DILocation(line: 0, scope: !12058)
!12065 = !DILocation(line: 213, column: 9, scope: !12058)
!12066 = !DILocation(line: 213, column: 2, scope: !12058)
!12067 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !10880, file: !10880, line: 83, type: !11726, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12068)
!12068 = !{!12069}
!12069 = !DILocalVariable(name: "thread", arg: 1, scope: !12067, file: !10880, line: 83, type: !2067)
!12070 = !DILocation(line: 0, scope: !12067)
!12071 = !DILocation(line: 89, column: 16, scope: !12067)
!12072 = !DILocation(line: 89, column: 2, scope: !12067)
!12073 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !10880, file: !10880, line: 206, type: !12059, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12074)
!12074 = !{!12075, !12076}
!12075 = !DILocalVariable(name: "prio1", arg: 1, scope: !12073, file: !10880, line: 206, type: !104)
!12076 = !DILocalVariable(name: "prio2", arg: 2, scope: !12073, file: !10880, line: 206, type: !104)
!12077 = !DILocation(line: 0, scope: !12073)
!12078 = !DILocation(line: 208, column: 15, scope: !12073)
!12079 = !DILocation(line: 208, column: 2, scope: !12073)
!12080 = distinct !DISubprogram(name: "z_ready_thread", scope: !2172, file: !2172, line: 635, type: !11566, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12081)
!12081 = !{!12082, !12083, !12085}
!12082 = !DILocalVariable(name: "thread", arg: 1, scope: !12080, file: !2172, line: 635, type: !2067)
!12083 = !DILocalVariable(name: "__i", scope: !12084, file: !2172, line: 637, type: !11600)
!12084 = distinct !DILexicalBlock(scope: !12080, file: !2172, line: 637, column: 2)
!12085 = !DILocalVariable(name: "__key", scope: !12084, file: !2172, line: 637, type: !11600)
!12086 = !DILocation(line: 0, scope: !12080)
!12087 = !DILocation(line: 0, scope: !12084)
!12088 = !DILocation(line: 0, scope: !11608, inlinedAt: !12089)
!12089 = distinct !DILocation(line: 637, column: 2, scope: !12084)
!12090 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !12091)
!12091 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !12089)
!12092 = !DILocation(line: 0, scope: !11617, inlinedAt: !12091)
!12093 = !DILocation(line: 639, column: 4, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12095, file: !2172, line: 638, column: 41)
!12095 = distinct !DILexicalBlock(scope: !12096, file: !2172, line: 638, column: 7)
!12096 = distinct !DILexicalBlock(scope: !12097, file: !2172, line: 637, column: 26)
!12097 = distinct !DILexicalBlock(scope: !12084, file: !2172, line: 637, column: 2)
!12098 = !DILocation(line: 0, scope: !11635, inlinedAt: !12099)
!12099 = distinct !DILocation(line: 637, column: 2, scope: !12097)
!12100 = !DILocation(line: 0, scope: !11643, inlinedAt: !12101)
!12101 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !12099)
!12102 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !12101)
!12103 = !DILocation(line: 642, column: 1, scope: !12080)
!12104 = distinct !DISubprogram(name: "ready_thread", scope: !2172, file: !2172, line: 617, type: !11566, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12105)
!12105 = !{!12106}
!12106 = !DILocalVariable(name: "thread", arg: 1, scope: !12104, file: !2172, line: 617, type: !2067)
!12107 = !DILocation(line: 0, scope: !12104)
!12108 = !DILocation(line: 626, column: 7, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12104, file: !2172, line: 626, column: 6)
!12110 = !DILocation(line: 626, column: 34, scope: !12109)
!12111 = !DILocation(line: 626, column: 37, scope: !12109)
!12112 = !DILocation(line: 626, column: 6, scope: !12104)
!12113 = !DILocation(line: 0, scope: !11794, inlinedAt: !12114)
!12114 = distinct !DILocation(line: 629, column: 3, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !12109, file: !2172, line: 626, column: 64)
!12116 = !DILocation(line: 252, column: 15, scope: !11794, inlinedAt: !12114)
!12117 = !DILocation(line: 252, column: 28, scope: !11794, inlinedAt: !12114)
!12118 = !DILocation(line: 0, scope: !11801, inlinedAt: !12119)
!12119 = distinct !DILocation(line: 254, column: 3, scope: !11805, inlinedAt: !12114)
!12120 = !DILocation(line: 0, scope: !11808, inlinedAt: !12121)
!12121 = distinct !DILocation(line: 229, column: 2, scope: !11801, inlinedAt: !12119)
!12122 = !DILocation(line: 188, column: 2, scope: !11818, inlinedAt: !12121)
!12123 = !DILocation(line: 188, column: 2, scope: !11820, inlinedAt: !12121)
!12124 = !DILocation(line: 0, scope: !11818, inlinedAt: !12121)
!12125 = !DILocation(line: 189, column: 7, scope: !11823, inlinedAt: !12121)
!12126 = !DILocation(line: 189, column: 35, scope: !11823, inlinedAt: !12121)
!12127 = !DILocation(line: 189, column: 7, scope: !11824, inlinedAt: !12121)
!12128 = !DILocation(line: 191, column: 21, scope: !11828, inlinedAt: !12121)
!12129 = !DILocation(line: 190, column: 4, scope: !11828, inlinedAt: !12121)
!12130 = !DILocation(line: 192, column: 4, scope: !11828, inlinedAt: !12121)
!12131 = distinct !{!12131, !12122, !12132}
!12132 = !DILocation(line: 194, column: 2, scope: !11818, inlinedAt: !12121)
!12133 = !DILocation(line: 196, column: 37, scope: !11808, inlinedAt: !12121)
!12134 = !DILocation(line: 196, column: 2, scope: !11808, inlinedAt: !12121)
!12135 = !DILocation(line: 197, column: 1, scope: !11808, inlinedAt: !12121)
!12136 = !DILocation(line: 630, column: 3, scope: !12115)
!12137 = !DILocation(line: 632, column: 2, scope: !12115)
!12138 = !DILocation(line: 633, column: 1, scope: !12104)
!12139 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !10880, file: !10880, line: 120, type: !11726, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12140)
!12140 = !{!12141}
!12141 = !DILocalVariable(name: "thread", arg: 1, scope: !12139, file: !10880, line: 120, type: !2067)
!12142 = !DILocation(line: 0, scope: !12139)
!12143 = !DILocation(line: 122, column: 12, scope: !12139)
!12144 = !DILocation(line: 122, column: 62, scope: !12139)
!12145 = !DILocation(line: 123, column: 4, scope: !12139)
!12146 = !DILocation(line: 122, column: 2, scope: !12139)
!12147 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2172, file: !2172, line: 644, type: !11566, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12148)
!12148 = !{!12149, !12150, !12152}
!12149 = !DILocalVariable(name: "thread", arg: 1, scope: !12147, file: !2172, line: 644, type: !2067)
!12150 = !DILocalVariable(name: "__i", scope: !12151, file: !2172, line: 646, type: !11600)
!12151 = distinct !DILexicalBlock(scope: !12147, file: !2172, line: 646, column: 2)
!12152 = !DILocalVariable(name: "__key", scope: !12151, file: !2172, line: 646, type: !11600)
!12153 = !DILocation(line: 0, scope: !12147)
!12154 = !DILocation(line: 0, scope: !12151)
!12155 = !DILocation(line: 0, scope: !11608, inlinedAt: !12156)
!12156 = distinct !DILocation(line: 646, column: 2, scope: !12151)
!12157 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !12158)
!12158 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !12156)
!12159 = !DILocation(line: 0, scope: !11617, inlinedAt: !12158)
!12160 = !DILocation(line: 647, column: 3, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12162, file: !2172, line: 646, column: 26)
!12162 = distinct !DILexicalBlock(scope: !12151, file: !2172, line: 646, column: 2)
!12163 = !DILocation(line: 0, scope: !11635, inlinedAt: !12164)
!12164 = distinct !DILocation(line: 646, column: 2, scope: !12162)
!12165 = !DILocation(line: 0, scope: !11643, inlinedAt: !12166)
!12166 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !12164)
!12167 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !12166)
!12168 = !DILocation(line: 649, column: 1, scope: !12147)
!12169 = distinct !DISubprogram(name: "z_sched_start", scope: !2172, file: !2172, line: 651, type: !11566, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12170)
!12170 = !{!12171, !12172}
!12171 = !DILocalVariable(name: "thread", arg: 1, scope: !12169, file: !2172, line: 651, type: !2067)
!12172 = !DILocalVariable(name: "key", scope: !12169, file: !2172, line: 653, type: !11600)
!12173 = !DILocation(line: 0, scope: !12169)
!12174 = !DILocation(line: 0, scope: !11608, inlinedAt: !12175)
!12175 = distinct !DILocation(line: 653, column: 25, scope: !12169)
!12176 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !12177)
!12177 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !12175)
!12178 = !DILocation(line: 0, scope: !11617, inlinedAt: !12177)
!12179 = !DILocation(line: 655, column: 6, scope: !12180)
!12180 = distinct !DILexicalBlock(scope: !12169, file: !2172, line: 655, column: 6)
!12181 = !DILocation(line: 655, column: 6, scope: !12169)
!12182 = !DILocation(line: 0, scope: !11635, inlinedAt: !12183)
!12183 = distinct !DILocation(line: 656, column: 3, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12180, file: !2172, line: 655, column: 36)
!12185 = !DILocation(line: 0, scope: !11643, inlinedAt: !12186)
!12186 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !12183)
!12187 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !12186)
!12188 = !DILocation(line: 657, column: 3, scope: !12184)
!12189 = !DILocation(line: 660, column: 2, scope: !12169)
!12190 = !DILocation(line: 661, column: 2, scope: !12169)
!12191 = !DILocation(line: 662, column: 2, scope: !12169)
!12192 = !DILocation(line: 663, column: 1, scope: !12169)
!12193 = distinct !DISubprogram(name: "z_has_thread_started", scope: !10880, file: !10880, line: 126, type: !11726, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12194)
!12194 = !{!12195}
!12195 = !DILocalVariable(name: "thread", arg: 1, scope: !12193, file: !10880, line: 126, type: !2067)
!12196 = !DILocation(line: 0, scope: !12193)
!12197 = !DILocation(line: 128, column: 23, scope: !12193)
!12198 = !DILocation(line: 128, column: 36, scope: !12193)
!12199 = !DILocation(line: 128, column: 56, scope: !12193)
!12200 = !DILocation(line: 128, column: 2, scope: !12193)
!12201 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10880, file: !10880, line: 155, type: !11566, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12202)
!12202 = !{!12203}
!12203 = !DILocalVariable(name: "thread", arg: 1, scope: !12201, file: !10880, line: 155, type: !2067)
!12204 = !DILocation(line: 0, scope: !12201)
!12205 = !DILocation(line: 157, column: 15, scope: !12201)
!12206 = !DILocation(line: 157, column: 28, scope: !12201)
!12207 = !DILocation(line: 158, column: 1, scope: !12201)
!12208 = distinct !DISubprogram(name: "z_reschedule", scope: !2172, file: !2172, line: 967, type: !11636, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12209)
!12209 = !{!12210, !12211}
!12210 = !DILocalVariable(name: "lock", arg: 1, scope: !12208, file: !2172, line: 967, type: !11611)
!12211 = !DILocalVariable(name: "key", arg: 2, scope: !12208, file: !2172, line: 967, type: !11600)
!12212 = !DILocation(line: 0, scope: !12208)
!12213 = !DILocation(line: 969, column: 6, scope: !12214)
!12214 = distinct !DILexicalBlock(scope: !12208, file: !2172, line: 969, column: 6)
!12215 = !DILocation(line: 969, column: 23, scope: !12214)
!12216 = !DILocation(line: 969, column: 26, scope: !12214)
!12217 = !DILocation(line: 969, column: 6, scope: !12208)
!12218 = !DILocalVariable(name: "key", arg: 2, scope: !12219, file: !10984, line: 193, type: !11600)
!12219 = distinct !DISubprogram(name: "z_swap", scope: !10984, file: !10984, line: 193, type: !12220, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12222)
!12220 = !DISubroutineType(types: !12221)
!12221 = !{!104, !11611, !11600}
!12222 = !{!12223, !12218}
!12223 = !DILocalVariable(name: "lock", arg: 1, scope: !12219, file: !10984, line: 193, type: !11611)
!12224 = !DILocation(line: 0, scope: !12219, inlinedAt: !12225)
!12225 = distinct !DILocation(line: 970, column: 3, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12214, file: !2172, line: 969, column: 39)
!12227 = !DILocation(line: 196, column: 9, scope: !12219, inlinedAt: !12225)
!12228 = !DILocation(line: 971, column: 2, scope: !12226)
!12229 = !DILocation(line: 0, scope: !11635, inlinedAt: !12230)
!12230 = distinct !DILocation(line: 972, column: 3, scope: !12231)
!12231 = distinct !DILexicalBlock(scope: !12214, file: !2172, line: 971, column: 9)
!12232 = !DILocation(line: 0, scope: !11643, inlinedAt: !12233)
!12233 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !12230)
!12234 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !12233)
!12235 = !DILocation(line: 975, column: 1, scope: !12208)
!12236 = distinct !DISubprogram(name: "resched", scope: !2172, file: !2172, line: 940, type: !12237, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12239)
!12237 = !DISubroutineType(types: !12238)
!12238 = !{!126, !155}
!12239 = !{!12240}
!12240 = !DILocalVariable(name: "key", arg: 1, scope: !12236, file: !2172, line: 940, type: !155)
!12241 = !DILocation(line: 0, scope: !12236)
!12242 = !DILocalVariable(name: "key", arg: 1, scope: !12243, file: !4757, line: 112, type: !32)
!12243 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !4757, file: !4757, line: 112, type: !12244, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12246)
!12244 = !DISubroutineType(types: !12245)
!12245 = !{!126, !32}
!12246 = !{!12242}
!12247 = !DILocation(line: 0, scope: !12243, inlinedAt: !12248)
!12248 = distinct !DILocation(line: 946, column: 9, scope: !12236)
!12249 = !DILocation(line: 115, column: 13, scope: !12243, inlinedAt: !12248)
!12250 = !DILocation(line: 946, column: 32, scope: !12236)
!12251 = !DILocation(line: 1031, column: 3, scope: !12252, inlinedAt: !12255)
!12252 = distinct !DISubprogram(name: "__get_IPSR", scope: !4931, file: !4931, line: 1027, type: !5012, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12253)
!12253 = !{!12254}
!12254 = !DILocalVariable(name: "result", scope: !12252, file: !4931, line: 1029, type: !155)
!12255 = distinct !DILocation(line: 48, column: 10, scope: !12256, inlinedAt: !12257)
!12256 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5725, file: !5725, line: 46, type: !5726, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !344)
!12257 = distinct !DILocation(line: 946, column: 36, scope: !12236)
!12258 = !{i64 2869905}
!12259 = !DILocation(line: 0, scope: !12252, inlinedAt: !12255)
!12260 = !DILocation(line: 48, column: 9, scope: !12256, inlinedAt: !12257)
!12261 = !DILocation(line: 946, column: 2, scope: !12236)
!12262 = distinct !DISubprogram(name: "need_swap", scope: !2172, file: !2172, line: 953, type: !5726, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12263)
!12263 = !{!12264}
!12264 = !DILocalVariable(name: "new_thread", scope: !12262, file: !2172, line: 959, type: !2067)
!12265 = !DILocation(line: 962, column: 31, scope: !12262)
!12266 = !DILocation(line: 0, scope: !12262)
!12267 = !DILocation(line: 963, column: 23, scope: !12262)
!12268 = !DILocation(line: 963, column: 20, scope: !12262)
!12269 = !DILocation(line: 963, column: 2, scope: !12262)
!12270 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !10984, file: !10984, line: 181, type: !4941, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12271)
!12271 = !{!12272, !12273}
!12272 = !DILocalVariable(name: "key", arg: 1, scope: !12270, file: !10984, line: 181, type: !32)
!12273 = !DILocalVariable(name: "ret", scope: !12270, file: !10984, line: 183, type: !104)
!12274 = !DILocation(line: 0, scope: !12270)
!12275 = !DILocation(line: 185, column: 8, scope: !12270)
!12276 = !DILocation(line: 186, column: 2, scope: !12270)
!12277 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2172, file: !2172, line: 665, type: !11566, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12278)
!12278 = !{!12279, !12280, !12282}
!12279 = !DILocalVariable(name: "thread", arg: 1, scope: !12277, file: !2172, line: 665, type: !2067)
!12280 = !DILocalVariable(name: "__i", scope: !12281, file: !2172, line: 671, type: !11600)
!12281 = distinct !DILexicalBlock(scope: !12277, file: !2172, line: 671, column: 2)
!12282 = !DILocalVariable(name: "__key", scope: !12281, file: !2172, line: 671, type: !11600)
!12283 = !DILocation(line: 0, scope: !12277)
!12284 = !DILocation(line: 669, column: 8, scope: !12277)
!12285 = !DILocation(line: 0, scope: !12281)
!12286 = !DILocation(line: 0, scope: !11608, inlinedAt: !12287)
!12287 = distinct !DILocation(line: 671, column: 2, scope: !12281)
!12288 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !12289)
!12289 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !12287)
!12290 = !DILocation(line: 0, scope: !11617, inlinedAt: !12289)
!12291 = !DILocation(line: 672, column: 7, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12293, file: !2172, line: 672, column: 7)
!12293 = distinct !DILexicalBlock(scope: !12294, file: !2172, line: 671, column: 26)
!12294 = distinct !DILexicalBlock(scope: !12281, file: !2172, line: 671, column: 2)
!12295 = !DILocation(line: 672, column: 7, scope: !12293)
!12296 = !DILocation(line: 0, scope: !11777, inlinedAt: !12297)
!12297 = distinct !DILocation(line: 673, column: 4, scope: !12298)
!12298 = distinct !DILexicalBlock(scope: !12292, file: !2172, line: 672, column: 35)
!12299 = !DILocation(line: 266, column: 15, scope: !11777, inlinedAt: !12297)
!12300 = !DILocation(line: 266, column: 28, scope: !11777, inlinedAt: !12297)
!12301 = !DILocation(line: 0, scope: !11785, inlinedAt: !12302)
!12302 = distinct !DILocation(line: 268, column: 3, scope: !11789, inlinedAt: !12297)
!12303 = !DILocation(line: 234, column: 2, scope: !11785, inlinedAt: !12302)
!12304 = !DILocation(line: 674, column: 3, scope: !12298)
!12305 = !DILocation(line: 675, column: 3, scope: !12293)
!12306 = !DILocation(line: 676, column: 26, scope: !12293)
!12307 = !DILocation(line: 676, column: 23, scope: !12293)
!12308 = !DILocation(line: 676, column: 3, scope: !12293)
!12309 = !DILocation(line: 0, scope: !11635, inlinedAt: !12310)
!12310 = distinct !DILocation(line: 671, column: 2, scope: !12294)
!12311 = !DILocation(line: 0, scope: !11643, inlinedAt: !12312)
!12312 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !12310)
!12313 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !12312)
!12314 = !DILocation(line: 679, column: 16, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12277, file: !2172, line: 679, column: 6)
!12316 = !DILocation(line: 679, column: 13, scope: !12315)
!12317 = !DILocation(line: 679, column: 6, scope: !12277)
!12318 = !DILocation(line: 680, column: 3, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12315, file: !2172, line: 679, column: 26)
!12320 = !DILocation(line: 681, column: 2, scope: !12319)
!12321 = !DILocation(line: 684, column: 1, scope: !12277)
!12322 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !11274, file: !11274, line: 52, type: !11584, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12323)
!12323 = !{!12324}
!12324 = !DILocalVariable(name: "thread", arg: 1, scope: !12322, file: !11274, line: 52, type: !2067)
!12325 = !DILocation(line: 0, scope: !12322)
!12326 = !DILocation(line: 54, column: 39, scope: !12322)
!12327 = !DILocation(line: 54, column: 9, scope: !12322)
!12328 = !DILocation(line: 54, column: 2, scope: !12322)
!12329 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !10880, file: !10880, line: 141, type: !11566, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12330)
!12330 = !{!12331}
!12331 = !DILocalVariable(name: "thread", arg: 1, scope: !12329, file: !10880, line: 141, type: !2067)
!12332 = !DILocation(line: 0, scope: !12329)
!12333 = !DILocation(line: 143, column: 15, scope: !12329)
!12334 = !DILocation(line: 143, column: 28, scope: !12329)
!12335 = !DILocation(line: 146, column: 1, scope: !12329)
!12336 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !10880, file: !10880, line: 73, type: !2800, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !344)
!12337 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !12338)
!12338 = distinct !DILocation(line: 75, column: 30, scope: !12336)
!12339 = !DILocation(line: 0, scope: !11617, inlinedAt: !12338)
!12340 = !DILocation(line: 75, column: 9, scope: !12336)
!12341 = !DILocation(line: 76, column: 1, scope: !12336)
!12342 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2172, file: !2172, line: 977, type: !5022, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12343)
!12343 = !{!12344}
!12344 = !DILocalVariable(name: "key", arg: 1, scope: !12342, file: !2172, line: 977, type: !155)
!12345 = !DILocation(line: 0, scope: !12342)
!12346 = !DILocation(line: 979, column: 6, scope: !12347)
!12347 = distinct !DILexicalBlock(scope: !12342, file: !2172, line: 979, column: 6)
!12348 = !DILocation(line: 979, column: 6, scope: !12342)
!12349 = !DILocation(line: 980, column: 3, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12347, file: !2172, line: 979, column: 20)
!12351 = !DILocation(line: 981, column: 2, scope: !12350)
!12352 = !DILocation(line: 0, scope: !11643, inlinedAt: !12353)
!12353 = distinct !DILocation(line: 982, column: 3, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12347, file: !2172, line: 981, column: 9)
!12355 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !12353)
!12356 = !DILocation(line: 985, column: 1, scope: !12342)
!12357 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2172, file: !2172, line: 695, type: !11566, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12358)
!12358 = !{!12359, !12360}
!12359 = !DILocalVariable(name: "thread", arg: 1, scope: !12357, file: !2172, line: 695, type: !2067)
!12360 = !DILocalVariable(name: "key", scope: !12357, file: !2172, line: 699, type: !11600)
!12361 = !DILocation(line: 0, scope: !12357)
!12362 = !DILocation(line: 0, scope: !11608, inlinedAt: !12363)
!12363 = distinct !DILocation(line: 699, column: 25, scope: !12357)
!12364 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !12365)
!12365 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !12363)
!12366 = !DILocation(line: 0, scope: !11617, inlinedAt: !12365)
!12367 = !DILocation(line: 702, column: 7, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12357, file: !2172, line: 702, column: 6)
!12369 = !DILocation(line: 702, column: 6, scope: !12357)
!12370 = !DILocation(line: 0, scope: !11635, inlinedAt: !12371)
!12371 = distinct !DILocation(line: 703, column: 3, scope: !12372)
!12372 = distinct !DILexicalBlock(scope: !12368, file: !2172, line: 702, column: 38)
!12373 = !DILocation(line: 0, scope: !11643, inlinedAt: !12374)
!12374 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !12371)
!12375 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !12374)
!12376 = !DILocation(line: 704, column: 3, scope: !12372)
!12377 = !DILocation(line: 707, column: 2, scope: !12357)
!12378 = !DILocation(line: 708, column: 2, scope: !12357)
!12379 = !DILocation(line: 710, column: 2, scope: !12357)
!12380 = !DILocation(line: 713, column: 1, scope: !12357)
!12381 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !10880, file: !10880, line: 96, type: !11726, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12382)
!12382 = !{!12383}
!12383 = !DILocalVariable(name: "thread", arg: 1, scope: !12381, file: !10880, line: 96, type: !2067)
!12384 = !DILocation(line: 0, scope: !12381)
!12385 = !DILocation(line: 98, column: 23, scope: !12381)
!12386 = !DILocation(line: 98, column: 36, scope: !12381)
!12387 = !DILocation(line: 98, column: 57, scope: !12381)
!12388 = !DILocation(line: 98, column: 2, scope: !12381)
!12389 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !10880, file: !10880, line: 148, type: !11566, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12390)
!12390 = !{!12391}
!12391 = !DILocalVariable(name: "thread", arg: 1, scope: !12389, file: !10880, line: 148, type: !2067)
!12392 = !DILocation(line: 0, scope: !12389)
!12393 = !DILocation(line: 150, column: 15, scope: !12389)
!12394 = !DILocation(line: 150, column: 28, scope: !12389)
!12395 = !DILocation(line: 153, column: 1, scope: !12389)
!12396 = distinct !DISubprogram(name: "z_pend_thread", scope: !2172, file: !2172, line: 770, type: !12397, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12403)
!12397 = !DISubroutineType(types: !12398)
!12398 = !{null, !2067, !2098, !12399}
!12399 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1383, line: 67, baseType: !12400)
!12400 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 65, size: 64, elements: !12401)
!12401 = !{!12402}
!12402 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12400, file: !1383, line: 66, baseType: !1382, size: 64)
!12403 = !{!12404, !12405, !12406, !12407, !12409}
!12404 = !DILocalVariable(name: "thread", arg: 1, scope: !12396, file: !2172, line: 770, type: !2067)
!12405 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12396, file: !2172, line: 770, type: !2098)
!12406 = !DILocalVariable(name: "timeout", arg: 3, scope: !12396, file: !2172, line: 771, type: !12399)
!12407 = !DILocalVariable(name: "__i", scope: !12408, file: !2172, line: 774, type: !11600)
!12408 = distinct !DILexicalBlock(scope: !12396, file: !2172, line: 774, column: 2)
!12409 = !DILocalVariable(name: "__key", scope: !12408, file: !2172, line: 774, type: !11600)
!12410 = !DILocation(line: 0, scope: !12396)
!12411 = !DILocation(line: 0, scope: !12408)
!12412 = !DILocation(line: 0, scope: !11608, inlinedAt: !12413)
!12413 = distinct !DILocation(line: 774, column: 2, scope: !12408)
!12414 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !12415)
!12415 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !12413)
!12416 = !DILocation(line: 0, scope: !11617, inlinedAt: !12415)
!12417 = !DILocation(line: 775, column: 3, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12419, file: !2172, line: 774, column: 26)
!12419 = distinct !DILexicalBlock(scope: !12408, file: !2172, line: 774, column: 2)
!12420 = !DILocation(line: 0, scope: !11635, inlinedAt: !12421)
!12421 = distinct !DILocation(line: 774, column: 2, scope: !12419)
!12422 = !DILocation(line: 0, scope: !11643, inlinedAt: !12423)
!12423 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !12421)
!12424 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !12423)
!12425 = !DILocation(line: 777, column: 1, scope: !12396)
!12426 = distinct !DISubprogram(name: "pend_locked", scope: !2172, file: !2172, line: 760, type: !12397, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12427)
!12427 = !{!12428, !12429, !12430}
!12428 = !DILocalVariable(name: "thread", arg: 1, scope: !12426, file: !2172, line: 760, type: !2067)
!12429 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12426, file: !2172, line: 760, type: !2098)
!12430 = !DILocalVariable(name: "timeout", arg: 3, scope: !12426, file: !2172, line: 761, type: !12399)
!12431 = !DILocation(line: 0, scope: !12426)
!12432 = !DILocation(line: 766, column: 2, scope: !12426)
!12433 = !DILocation(line: 767, column: 2, scope: !12426)
!12434 = !DILocation(line: 768, column: 1, scope: !12426)
!12435 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2172, file: !2172, line: 740, type: !12436, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12438)
!12436 = !DISubroutineType(types: !12437)
!12437 = !{null, !2067, !2098}
!12438 = !{!12439, !12440}
!12439 = !DILocalVariable(name: "thread", arg: 1, scope: !12435, file: !2172, line: 740, type: !2067)
!12440 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12435, file: !2172, line: 740, type: !2098)
!12441 = !DILocation(line: 0, scope: !12435)
!12442 = !DILocation(line: 742, column: 2, scope: !12435)
!12443 = !DILocation(line: 743, column: 2, scope: !12435)
!12444 = !DILocation(line: 747, column: 13, scope: !12445)
!12445 = distinct !DILexicalBlock(scope: !12435, file: !2172, line: 747, column: 6)
!12446 = !DILocation(line: 747, column: 6, scope: !12435)
!12447 = !DILocation(line: 748, column: 16, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12445, file: !2172, line: 747, column: 22)
!12449 = !DILocation(line: 748, column: 26, scope: !12448)
!12450 = !DILocation(line: 749, column: 28, scope: !12448)
!12451 = !DILocation(line: 0, scope: !11808, inlinedAt: !12452)
!12452 = distinct !DILocation(line: 749, column: 3, scope: !12448)
!12453 = !DILocation(line: 188, column: 2, scope: !11818, inlinedAt: !12452)
!12454 = !DILocation(line: 188, column: 2, scope: !11820, inlinedAt: !12452)
!12455 = !DILocation(line: 0, scope: !11818, inlinedAt: !12452)
!12456 = !DILocation(line: 189, column: 7, scope: !11823, inlinedAt: !12452)
!12457 = !DILocation(line: 189, column: 35, scope: !11823, inlinedAt: !12452)
!12458 = !DILocation(line: 189, column: 7, scope: !11824, inlinedAt: !12452)
!12459 = !DILocation(line: 191, column: 21, scope: !11828, inlinedAt: !12452)
!12460 = !DILocation(line: 190, column: 4, scope: !11828, inlinedAt: !12452)
!12461 = !DILocation(line: 192, column: 4, scope: !11828, inlinedAt: !12452)
!12462 = distinct !{!12462, !12453, !12463}
!12463 = !DILocation(line: 194, column: 2, scope: !11818, inlinedAt: !12452)
!12464 = !DILocation(line: 196, column: 37, scope: !11808, inlinedAt: !12452)
!12465 = !DILocation(line: 196, column: 2, scope: !11808, inlinedAt: !12452)
!12466 = !DILocation(line: 197, column: 1, scope: !11808, inlinedAt: !12452)
!12467 = !DILocation(line: 751, column: 1, scope: !12435)
!12468 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2172, file: !2172, line: 753, type: !12469, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12471)
!12469 = !DISubroutineType(types: !12470)
!12470 = !{null, !2067, !12399}
!12471 = !{!12472, !12473}
!12472 = !DILocalVariable(name: "thread", arg: 1, scope: !12468, file: !2172, line: 753, type: !2067)
!12473 = !DILocalVariable(name: "timeout", arg: 2, scope: !12468, file: !2172, line: 753, type: !12399)
!12474 = !DILocation(line: 0, scope: !12468)
!12475 = !DILocation(line: 755, column: 7, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12468, file: !2172, line: 755, column: 6)
!12477 = !DILocation(line: 755, column: 6, scope: !12468)
!12478 = !DILocation(line: 756, column: 3, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12476, file: !2172, line: 755, column: 41)
!12480 = !DILocation(line: 757, column: 2, scope: !12479)
!12481 = !DILocation(line: 758, column: 1, scope: !12468)
!12482 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11274, file: !11274, line: 47, type: !12469, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12483)
!12483 = !{!12484, !12485}
!12484 = !DILocalVariable(name: "thread", arg: 1, scope: !12482, file: !11274, line: 47, type: !2067)
!12485 = !DILocalVariable(name: "ticks", arg: 2, scope: !12482, file: !11274, line: 47, type: !12399)
!12486 = !DILocation(line: 0, scope: !12482)
!12487 = !DILocation(line: 49, column: 30, scope: !12482)
!12488 = !DILocation(line: 49, column: 2, scope: !12482)
!12489 = !DILocation(line: 50, column: 1, scope: !12482)
!12490 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2172, file: !2172, line: 795, type: !2124, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12491)
!12491 = !{!12492, !12493, !12494, !12496, !12497}
!12492 = !DILocalVariable(name: "timeout", arg: 1, scope: !12490, file: !2172, line: 795, type: !2126)
!12493 = !DILocalVariable(name: "thread", scope: !12490, file: !2172, line: 797, type: !2067)
!12494 = !DILocalVariable(name: "__i", scope: !12495, file: !2172, line: 800, type: !11600)
!12495 = distinct !DILexicalBlock(scope: !12490, file: !2172, line: 800, column: 2)
!12496 = !DILocalVariable(name: "__key", scope: !12495, file: !2172, line: 800, type: !11600)
!12497 = !DILocalVariable(name: "killed", scope: !12498, file: !2172, line: 801, type: !126)
!12498 = distinct !DILexicalBlock(scope: !12499, file: !2172, line: 800, column: 26)
!12499 = distinct !DILexicalBlock(scope: !12495, file: !2172, line: 800, column: 2)
!12500 = !DILocation(line: 0, scope: !12490)
!12501 = !DILocation(line: 797, column: 28, scope: !12490)
!12502 = !DILocation(line: 0, scope: !12495)
!12503 = !DILocation(line: 0, scope: !11608, inlinedAt: !12504)
!12504 = distinct !DILocation(line: 800, column: 2, scope: !12495)
!12505 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !12506)
!12506 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !12504)
!12507 = !DILocation(line: 0, scope: !11617, inlinedAt: !12506)
!12508 = !DILocation(line: 801, column: 27, scope: !12498)
!12509 = !DILocation(line: 801, column: 32, scope: !12498)
!12510 = !DILocation(line: 801, column: 61, scope: !12498)
!12511 = !DILocation(line: 0, scope: !12498)
!12512 = !DILocation(line: 804, column: 7, scope: !12498)
!12513 = !DILocation(line: 805, column: 21, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12515, file: !2172, line: 805, column: 8)
!12515 = distinct !DILexicalBlock(scope: !12516, file: !2172, line: 804, column: 16)
!12516 = distinct !DILexicalBlock(scope: !12498, file: !2172, line: 804, column: 7)
!12517 = !DILocation(line: 805, column: 31, scope: !12514)
!12518 = !DILocation(line: 805, column: 8, scope: !12515)
!12519 = !DILocation(line: 806, column: 5, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12514, file: !2172, line: 805, column: 40)
!12521 = !DILocation(line: 807, column: 4, scope: !12520)
!12522 = !DILocation(line: 808, column: 4, scope: !12515)
!12523 = !DILocation(line: 809, column: 4, scope: !12515)
!12524 = !DILocation(line: 810, column: 4, scope: !12515)
!12525 = !DILocation(line: 811, column: 3, scope: !12515)
!12526 = !DILocation(line: 0, scope: !11635, inlinedAt: !12527)
!12527 = distinct !DILocation(line: 800, column: 2, scope: !12499)
!12528 = !DILocation(line: 0, scope: !11643, inlinedAt: !12529)
!12529 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !12527)
!12530 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !12529)
!12531 = !DILocation(line: 813, column: 1, scope: !12490)
!12532 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2172, file: !2172, line: 779, type: !11566, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12533)
!12533 = !{!12534}
!12534 = !DILocalVariable(name: "thread", arg: 1, scope: !12532, file: !2172, line: 779, type: !2067)
!12535 = !DILocation(line: 0, scope: !12532)
!12536 = !DILocation(line: 781, column: 2, scope: !12532)
!12537 = !DILocation(line: 782, column: 2, scope: !12532)
!12538 = !DILocation(line: 783, column: 15, scope: !12532)
!12539 = !DILocation(line: 783, column: 25, scope: !12532)
!12540 = !DILocation(line: 784, column: 1, scope: !12532)
!12541 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !10880, file: !10880, line: 165, type: !11566, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12542)
!12542 = !{!12543}
!12543 = !DILocalVariable(name: "thread", arg: 1, scope: !12541, file: !10880, line: 165, type: !2067)
!12544 = !DILocation(line: 0, scope: !12541)
!12545 = !DILocation(line: 167, column: 15, scope: !12541)
!12546 = !DILocation(line: 167, column: 28, scope: !12541)
!12547 = !DILocation(line: 168, column: 1, scope: !12541)
!12548 = distinct !DISubprogram(name: "unready_thread", scope: !2172, file: !2172, line: 731, type: !11566, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12549)
!12549 = !{!12550}
!12550 = !DILocalVariable(name: "thread", arg: 1, scope: !12548, file: !2172, line: 731, type: !2067)
!12551 = !DILocation(line: 0, scope: !12548)
!12552 = !DILocation(line: 733, column: 6, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12548, file: !2172, line: 733, column: 6)
!12554 = !DILocation(line: 733, column: 6, scope: !12548)
!12555 = !DILocation(line: 0, scope: !11777, inlinedAt: !12556)
!12556 = distinct !DILocation(line: 734, column: 3, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12553, file: !2172, line: 733, column: 34)
!12558 = !DILocation(line: 266, column: 15, scope: !11777, inlinedAt: !12556)
!12559 = !DILocation(line: 266, column: 28, scope: !11777, inlinedAt: !12556)
!12560 = !DILocation(line: 0, scope: !11785, inlinedAt: !12561)
!12561 = distinct !DILocation(line: 268, column: 3, scope: !11789, inlinedAt: !12556)
!12562 = !DILocation(line: 234, column: 2, scope: !11785, inlinedAt: !12561)
!12563 = !DILocation(line: 735, column: 2, scope: !12557)
!12564 = !DILocation(line: 736, column: 25, scope: !12548)
!12565 = !DILocation(line: 736, column: 22, scope: !12548)
!12566 = !DILocation(line: 736, column: 2, scope: !12548)
!12567 = !DILocation(line: 737, column: 1, scope: !12548)
!12568 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !10880, file: !10880, line: 160, type: !11566, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12569)
!12569 = !{!12570}
!12570 = !DILocalVariable(name: "thread", arg: 1, scope: !12568, file: !10880, line: 160, type: !2067)
!12571 = !DILocation(line: 0, scope: !12568)
!12572 = !DILocation(line: 162, column: 15, scope: !12568)
!12573 = !DILocation(line: 162, column: 28, scope: !12568)
!12574 = !DILocation(line: 163, column: 1, scope: !12568)
!12575 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2172, file: !2172, line: 786, type: !11566, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12576)
!12576 = !{!12577, !12578, !12580}
!12577 = !DILocalVariable(name: "thread", arg: 1, scope: !12575, file: !2172, line: 786, type: !2067)
!12578 = !DILocalVariable(name: "__i", scope: !12579, file: !2172, line: 788, type: !11600)
!12579 = distinct !DILexicalBlock(scope: !12575, file: !2172, line: 788, column: 2)
!12580 = !DILocalVariable(name: "__key", scope: !12579, file: !2172, line: 788, type: !11600)
!12581 = !DILocation(line: 0, scope: !12575)
!12582 = !DILocation(line: 0, scope: !12579)
!12583 = !DILocation(line: 0, scope: !11608, inlinedAt: !12584)
!12584 = distinct !DILocation(line: 788, column: 2, scope: !12579)
!12585 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !12586)
!12586 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !12584)
!12587 = !DILocation(line: 0, scope: !11617, inlinedAt: !12586)
!12588 = !DILocation(line: 789, column: 3, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12590, file: !2172, line: 788, column: 26)
!12590 = distinct !DILexicalBlock(scope: !12579, file: !2172, line: 788, column: 2)
!12591 = !DILocation(line: 0, scope: !11635, inlinedAt: !12592)
!12592 = distinct !DILocation(line: 788, column: 2, scope: !12590)
!12593 = !DILocation(line: 0, scope: !11643, inlinedAt: !12594)
!12594 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !12592)
!12595 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !12594)
!12596 = !DILocation(line: 791, column: 1, scope: !12575)
!12597 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2172, file: !2172, line: 816, type: !12598, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12600)
!12598 = !DISubroutineType(types: !12599)
!12599 = !{!104, !155, !2098, !12399}
!12600 = !{!12601, !12602, !12603, !12604, !12605, !12607}
!12601 = !DILocalVariable(name: "key", arg: 1, scope: !12597, file: !2172, line: 816, type: !155)
!12602 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12597, file: !2172, line: 816, type: !2098)
!12603 = !DILocalVariable(name: "timeout", arg: 3, scope: !12597, file: !2172, line: 816, type: !12399)
!12604 = !DILocalVariable(name: "ret", scope: !12597, file: !2172, line: 828, type: !104)
!12605 = !DILocalVariable(name: "__i", scope: !12606, file: !2172, line: 829, type: !11600)
!12606 = distinct !DILexicalBlock(scope: !12597, file: !2172, line: 829, column: 2)
!12607 = !DILocalVariable(name: "__key", scope: !12606, file: !2172, line: 829, type: !11600)
!12608 = !DILocation(line: 0, scope: !12597)
!12609 = !DILocation(line: 823, column: 14, scope: !12597)
!12610 = !DILocation(line: 823, column: 2, scope: !12597)
!12611 = !DILocation(line: 826, column: 20, scope: !12597)
!12612 = !DILocation(line: 826, column: 18, scope: !12597)
!12613 = !DILocation(line: 828, column: 12, scope: !12597)
!12614 = !DILocation(line: 0, scope: !12606)
!12615 = !DILocation(line: 0, scope: !11608, inlinedAt: !12616)
!12616 = distinct !DILocation(line: 829, column: 2, scope: !12606)
!12617 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !12618)
!12618 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !12616)
!12619 = !DILocation(line: 0, scope: !11617, inlinedAt: !12618)
!12620 = !DILocation(line: 830, column: 7, scope: !12621)
!12621 = distinct !DILexicalBlock(scope: !12622, file: !2172, line: 830, column: 7)
!12622 = distinct !DILexicalBlock(scope: !12623, file: !2172, line: 829, column: 26)
!12623 = distinct !DILexicalBlock(scope: !12606, file: !2172, line: 829, column: 2)
!12624 = !DILocation(line: 830, column: 26, scope: !12621)
!12625 = !DILocation(line: 830, column: 23, scope: !12621)
!12626 = !DILocation(line: 830, column: 7, scope: !12622)
!12627 = !DILocation(line: 831, column: 20, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12621, file: !2172, line: 830, column: 36)
!12629 = !DILocation(line: 832, column: 3, scope: !12628)
!12630 = !DILocation(line: 0, scope: !11635, inlinedAt: !12631)
!12631 = distinct !DILocation(line: 829, column: 2, scope: !12623)
!12632 = !DILocation(line: 0, scope: !11643, inlinedAt: !12633)
!12633 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !12631)
!12634 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !12633)
!12635 = !DILocation(line: 834, column: 2, scope: !12597)
!12636 = distinct !DISubprogram(name: "z_pend_curr", scope: !2172, file: !2172, line: 840, type: !12637, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12639)
!12637 = !DISubroutineType(types: !12638)
!12638 = !{!104, !11611, !11600, !2098, !12399}
!12639 = !{!12640, !12641, !12642, !12643}
!12640 = !DILocalVariable(name: "lock", arg: 1, scope: !12636, file: !2172, line: 840, type: !11611)
!12641 = !DILocalVariable(name: "key", arg: 2, scope: !12636, file: !2172, line: 840, type: !11600)
!12642 = !DILocalVariable(name: "wait_q", arg: 3, scope: !12636, file: !2172, line: 841, type: !2098)
!12643 = !DILocalVariable(name: "timeout", arg: 4, scope: !12636, file: !2172, line: 841, type: !12399)
!12644 = !DILocation(line: 0, scope: !12636)
!12645 = !DILocation(line: 844, column: 20, scope: !12636)
!12646 = !DILocation(line: 844, column: 18, scope: !12636)
!12647 = !DILocation(line: 0, scope: !11608, inlinedAt: !12648)
!12648 = distinct !DILocation(line: 856, column: 9, scope: !12636)
!12649 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !12650)
!12650 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !12648)
!12651 = !DILocation(line: 0, scope: !11617, inlinedAt: !12650)
!12652 = !DILocation(line: 857, column: 14, scope: !12636)
!12653 = !DILocation(line: 857, column: 2, scope: !12636)
!12654 = !DILocation(line: 0, scope: !12219, inlinedAt: !12655)
!12655 = distinct !DILocation(line: 859, column: 9, scope: !12636)
!12656 = !DILocation(line: 196, column: 9, scope: !12219, inlinedAt: !12655)
!12657 = !DILocation(line: 859, column: 2, scope: !12636)
!12658 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2172, file: !2172, line: 862, type: !12659, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12661)
!12659 = !DISubroutineType(types: !12660)
!12660 = !{!2067, !2098}
!12661 = !{!12662, !12663, !12664, !12666}
!12662 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12658, file: !2172, line: 862, type: !2098)
!12663 = !DILocalVariable(name: "thread", scope: !12658, file: !2172, line: 864, type: !2067)
!12664 = !DILocalVariable(name: "__i", scope: !12665, file: !2172, line: 866, type: !11600)
!12665 = distinct !DILexicalBlock(scope: !12658, file: !2172, line: 866, column: 2)
!12666 = !DILocalVariable(name: "__key", scope: !12665, file: !2172, line: 866, type: !11600)
!12667 = !DILocation(line: 0, scope: !12658)
!12668 = !DILocation(line: 0, scope: !12665)
!12669 = !DILocation(line: 0, scope: !11608, inlinedAt: !12670)
!12670 = distinct !DILocation(line: 866, column: 2, scope: !12665)
!12671 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !12672)
!12672 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !12670)
!12673 = !DILocation(line: 0, scope: !11617, inlinedAt: !12672)
!12674 = !DILocation(line: 867, column: 12, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12676, file: !2172, line: 866, column: 26)
!12676 = distinct !DILexicalBlock(scope: !12665, file: !2172, line: 866, column: 2)
!12677 = !DILocation(line: 869, column: 14, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12675, file: !2172, line: 869, column: 7)
!12679 = !DILocation(line: 869, column: 7, scope: !12675)
!12680 = !DILocation(line: 870, column: 4, scope: !12681)
!12681 = distinct !DILexicalBlock(scope: !12678, file: !2172, line: 869, column: 23)
!12682 = !DILocation(line: 871, column: 3, scope: !12681)
!12683 = !DILocation(line: 0, scope: !11635, inlinedAt: !12684)
!12684 = distinct !DILocation(line: 866, column: 2, scope: !12676)
!12685 = !DILocation(line: 0, scope: !11643, inlinedAt: !12686)
!12686 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !12684)
!12687 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !12686)
!12688 = !DILocation(line: 874, column: 2, scope: !12658)
!12689 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2172, file: !2172, line: 877, type: !12659, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12690)
!12690 = !{!12691, !12692, !12693, !12695}
!12691 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12689, file: !2172, line: 877, type: !2098)
!12692 = !DILocalVariable(name: "thread", scope: !12689, file: !2172, line: 879, type: !2067)
!12693 = !DILocalVariable(name: "__i", scope: !12694, file: !2172, line: 881, type: !11600)
!12694 = distinct !DILexicalBlock(scope: !12689, file: !2172, line: 881, column: 2)
!12695 = !DILocalVariable(name: "__key", scope: !12694, file: !2172, line: 881, type: !11600)
!12696 = !DILocation(line: 0, scope: !12689)
!12697 = !DILocation(line: 0, scope: !12694)
!12698 = !DILocation(line: 0, scope: !11608, inlinedAt: !12699)
!12699 = distinct !DILocation(line: 881, column: 2, scope: !12694)
!12700 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !12701)
!12701 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !12699)
!12702 = !DILocation(line: 0, scope: !11617, inlinedAt: !12701)
!12703 = !DILocation(line: 882, column: 12, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12705, file: !2172, line: 881, column: 26)
!12705 = distinct !DILexicalBlock(scope: !12694, file: !2172, line: 881, column: 2)
!12706 = !DILocation(line: 884, column: 14, scope: !12707)
!12707 = distinct !DILexicalBlock(scope: !12704, file: !2172, line: 884, column: 7)
!12708 = !DILocation(line: 884, column: 7, scope: !12704)
!12709 = !DILocation(line: 885, column: 4, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12707, file: !2172, line: 884, column: 23)
!12711 = !DILocation(line: 886, column: 10, scope: !12710)
!12712 = !DILocation(line: 887, column: 3, scope: !12710)
!12713 = !DILocation(line: 0, scope: !11635, inlinedAt: !12714)
!12714 = distinct !DILocation(line: 881, column: 2, scope: !12705)
!12715 = !DILocation(line: 0, scope: !11643, inlinedAt: !12716)
!12716 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !12714)
!12717 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !12716)
!12718 = !DILocation(line: 890, column: 2, scope: !12689)
!12719 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2172, file: !2172, line: 893, type: !11566, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12720)
!12720 = !{!12721}
!12721 = !DILocalVariable(name: "thread", arg: 1, scope: !12719, file: !2172, line: 893, type: !2067)
!12722 = !DILocation(line: 0, scope: !12719)
!12723 = !DILocation(line: 0, scope: !12575, inlinedAt: !12724)
!12724 = distinct !DILocation(line: 895, column: 2, scope: !12719)
!12725 = !DILocation(line: 0, scope: !12579, inlinedAt: !12724)
!12726 = !DILocation(line: 0, scope: !11608, inlinedAt: !12727)
!12727 = distinct !DILocation(line: 788, column: 2, scope: !12579, inlinedAt: !12724)
!12728 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !12729)
!12729 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !12727)
!12730 = !DILocation(line: 0, scope: !11617, inlinedAt: !12729)
!12731 = !DILocation(line: 789, column: 3, scope: !12589, inlinedAt: !12724)
!12732 = !DILocation(line: 0, scope: !11635, inlinedAt: !12733)
!12733 = distinct !DILocation(line: 788, column: 2, scope: !12590, inlinedAt: !12724)
!12734 = !DILocation(line: 0, scope: !11643, inlinedAt: !12735)
!12735 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !12733)
!12736 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !12735)
!12737 = !DILocation(line: 896, column: 8, scope: !12719)
!12738 = !DILocation(line: 897, column: 1, scope: !12719)
!12739 = distinct !DISubprogram(name: "z_set_prio", scope: !2172, file: !2172, line: 902, type: !11928, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12740)
!12740 = !{!12741, !12742, !12743, !12744, !12746}
!12741 = !DILocalVariable(name: "thread", arg: 1, scope: !12739, file: !2172, line: 902, type: !2067)
!12742 = !DILocalVariable(name: "prio", arg: 2, scope: !12739, file: !2172, line: 902, type: !104)
!12743 = !DILocalVariable(name: "need_sched", scope: !12739, file: !2172, line: 904, type: !126)
!12744 = !DILocalVariable(name: "__i", scope: !12745, file: !2172, line: 906, type: !11600)
!12745 = distinct !DILexicalBlock(scope: !12739, file: !2172, line: 906, column: 2)
!12746 = !DILocalVariable(name: "__key", scope: !12745, file: !2172, line: 906, type: !11600)
!12747 = !DILocation(line: 0, scope: !12739)
!12748 = !DILocation(line: 0, scope: !12745)
!12749 = !DILocation(line: 0, scope: !11608, inlinedAt: !12750)
!12750 = distinct !DILocation(line: 906, column: 2, scope: !12745)
!12751 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !12752)
!12752 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !12750)
!12753 = !DILocation(line: 0, scope: !11617, inlinedAt: !12752)
!12754 = !DILocation(line: 907, column: 16, scope: !12755)
!12755 = distinct !DILexicalBlock(scope: !12756, file: !2172, line: 906, column: 26)
!12756 = distinct !DILexicalBlock(scope: !12745, file: !2172, line: 906, column: 2)
!12757 = !DILocation(line: 909, column: 7, scope: !12755)
!12758 = !DILocation(line: 0, scope: !11777, inlinedAt: !12759)
!12759 = distinct !DILocation(line: 912, column: 5, scope: !12760)
!12760 = distinct !DILexicalBlock(scope: !12761, file: !2172, line: 911, column: 63)
!12761 = distinct !DILexicalBlock(scope: !12762, file: !2172, line: 911, column: 8)
!12762 = distinct !DILexicalBlock(scope: !12763, file: !2172, line: 909, column: 19)
!12763 = distinct !DILexicalBlock(scope: !12755, file: !2172, line: 909, column: 7)
!12764 = !DILocation(line: 266, column: 28, scope: !11777, inlinedAt: !12759)
!12765 = !DILocation(line: 0, scope: !11785, inlinedAt: !12766)
!12766 = distinct !DILocation(line: 268, column: 3, scope: !11789, inlinedAt: !12759)
!12767 = !DILocation(line: 234, column: 2, scope: !11785, inlinedAt: !12766)
!12768 = !DILocation(line: 913, column: 23, scope: !12760)
!12769 = !DILocation(line: 0, scope: !11794, inlinedAt: !12770)
!12770 = distinct !DILocation(line: 914, column: 5, scope: !12760)
!12771 = !DILocation(line: 252, column: 28, scope: !11794, inlinedAt: !12770)
!12772 = !DILocation(line: 0, scope: !11801, inlinedAt: !12773)
!12773 = distinct !DILocation(line: 254, column: 3, scope: !11805, inlinedAt: !12770)
!12774 = !DILocation(line: 0, scope: !11808, inlinedAt: !12775)
!12775 = distinct !DILocation(line: 229, column: 2, scope: !11801, inlinedAt: !12773)
!12776 = !DILocation(line: 188, column: 2, scope: !11818, inlinedAt: !12775)
!12777 = !DILocation(line: 188, column: 2, scope: !11820, inlinedAt: !12775)
!12778 = !DILocation(line: 0, scope: !11818, inlinedAt: !12775)
!12779 = !DILocation(line: 189, column: 7, scope: !11823, inlinedAt: !12775)
!12780 = !DILocation(line: 189, column: 35, scope: !11823, inlinedAt: !12775)
!12781 = !DILocation(line: 189, column: 7, scope: !11824, inlinedAt: !12775)
!12782 = !DILocation(line: 190, column: 4, scope: !11828, inlinedAt: !12775)
!12783 = !DILocation(line: 192, column: 4, scope: !11828, inlinedAt: !12775)
!12784 = distinct !{!12784, !12776, !12785}
!12785 = !DILocation(line: 194, column: 2, scope: !11818, inlinedAt: !12775)
!12786 = !DILocation(line: 196, column: 2, scope: !11808, inlinedAt: !12775)
!12787 = !DILocation(line: 197, column: 1, scope: !11808, inlinedAt: !12775)
!12788 = !DILocation(line: 918, column: 4, scope: !12762)
!12789 = !DILocation(line: 919, column: 3, scope: !12762)
!12790 = !DILocation(line: 920, column: 22, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12763, file: !2172, line: 919, column: 10)
!12792 = !DILocation(line: 0, scope: !11635, inlinedAt: !12793)
!12793 = distinct !DILocation(line: 906, column: 2, scope: !12756)
!12794 = !DILocation(line: 0, scope: !11643, inlinedAt: !12795)
!12795 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !12793)
!12796 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !12795)
!12797 = !DILocation(line: 926, column: 2, scope: !12739)
!12798 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2172, file: !2172, line: 929, type: !12799, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12801)
!12799 = !DISubroutineType(types: !12800)
!12800 = !{null, !2067, !104}
!12801 = !{!12802, !12803, !12804}
!12802 = !DILocalVariable(name: "thread", arg: 1, scope: !12798, file: !2172, line: 929, type: !2067)
!12803 = !DILocalVariable(name: "prio", arg: 2, scope: !12798, file: !2172, line: 929, type: !104)
!12804 = !DILocalVariable(name: "need_sched", scope: !12798, file: !2172, line: 931, type: !126)
!12805 = !DILocation(line: 0, scope: !12798)
!12806 = !DILocation(line: 931, column: 20, scope: !12798)
!12807 = !DILocation(line: 935, column: 17, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12798, file: !2172, line: 935, column: 6)
!12809 = !DILocation(line: 935, column: 20, scope: !12808)
!12810 = !DILocation(line: 935, column: 35, scope: !12808)
!12811 = !DILocation(line: 935, column: 48, scope: !12808)
!12812 = !DILocation(line: 935, column: 6, scope: !12798)
!12813 = !DILocation(line: 936, column: 3, scope: !12814)
!12814 = distinct !DILexicalBlock(scope: !12808, file: !2172, line: 935, column: 55)
!12815 = !DILocation(line: 937, column: 2, scope: !12814)
!12816 = !DILocation(line: 938, column: 1, scope: !12798)
!12817 = distinct !DISubprogram(name: "k_sched_lock", scope: !2172, file: !2172, line: 987, type: !2800, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12818)
!12818 = !{!12819, !12821}
!12819 = !DILocalVariable(name: "__i", scope: !12820, file: !2172, line: 989, type: !11600)
!12820 = distinct !DILexicalBlock(scope: !12817, file: !2172, line: 989, column: 2)
!12821 = !DILocalVariable(name: "__key", scope: !12820, file: !2172, line: 989, type: !11600)
!12822 = !DILocation(line: 0, scope: !12820)
!12823 = !DILocation(line: 0, scope: !11608, inlinedAt: !12824)
!12824 = distinct !DILocation(line: 989, column: 2, scope: !12820)
!12825 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !12826)
!12826 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !12824)
!12827 = !DILocation(line: 0, scope: !11617, inlinedAt: !12826)
!12828 = !DILocation(line: 992, column: 3, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12830, file: !2172, line: 989, column: 26)
!12830 = distinct !DILexicalBlock(scope: !12820, file: !2172, line: 989, column: 2)
!12831 = !DILocation(line: 0, scope: !11635, inlinedAt: !12832)
!12832 = distinct !DILocation(line: 989, column: 2, scope: !12830)
!12833 = !DILocation(line: 0, scope: !11643, inlinedAt: !12834)
!12834 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !12832)
!12835 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !12834)
!12836 = !DILocation(line: 994, column: 1, scope: !12817)
!12837 = distinct !DISubprogram(name: "z_sched_lock", scope: !10880, file: !10880, line: 251, type: !2800, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !344)
!12838 = !DILocation(line: 256, column: 4, scope: !12837)
!12839 = !DILocation(line: 256, column: 19, scope: !12837)
!12840 = !DILocation(line: 256, column: 2, scope: !12837)
!12841 = !DILocation(line: 258, column: 2, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12837, file: !10880, line: 258, column: 2)
!12843 = !{i64 2154189319}
!12844 = !DILocation(line: 259, column: 1, scope: !12837)
!12845 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2172, file: !2172, line: 996, type: !2800, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12846)
!12846 = !{!12847, !12849}
!12847 = !DILocalVariable(name: "__i", scope: !12848, file: !2172, line: 998, type: !11600)
!12848 = distinct !DILexicalBlock(scope: !12845, file: !2172, line: 998, column: 2)
!12849 = !DILocalVariable(name: "__key", scope: !12848, file: !2172, line: 998, type: !11600)
!12850 = !DILocation(line: 0, scope: !12848)
!12851 = !DILocation(line: 0, scope: !11608, inlinedAt: !12852)
!12852 = distinct !DILocation(line: 998, column: 2, scope: !12848)
!12853 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !12854)
!12854 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !12852)
!12855 = !DILocation(line: 0, scope: !11617, inlinedAt: !12854)
!12856 = !DILocation(line: 1002, column: 5, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12858, file: !2172, line: 998, column: 26)
!12858 = distinct !DILexicalBlock(scope: !12848, file: !2172, line: 998, column: 2)
!12859 = !DILocation(line: 1002, column: 20, scope: !12857)
!12860 = !DILocation(line: 1002, column: 3, scope: !12857)
!12861 = !DILocation(line: 1003, column: 3, scope: !12857)
!12862 = !DILocation(line: 0, scope: !11635, inlinedAt: !12863)
!12863 = distinct !DILocation(line: 998, column: 2, scope: !12858)
!12864 = !DILocation(line: 0, scope: !11643, inlinedAt: !12865)
!12865 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !12863)
!12866 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !12865)
!12867 = !DILocation(line: 1011, column: 2, scope: !12845)
!12868 = !DILocation(line: 1012, column: 1, scope: !12845)
!12869 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2172, file: !2172, line: 1014, type: !11916, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !344)
!12870 = !DILocation(line: 1028, column: 25, scope: !12869)
!12871 = !DILocation(line: 1028, column: 2, scope: !12869)
!12872 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2172, file: !2172, line: 1155, type: !12873, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12875)
!12873 = !DISubroutineType(types: !12874)
!12874 = !{!126, !2096, !2096}
!12875 = !{!12876, !12877, !12878, !12879, !12880}
!12876 = !DILocalVariable(name: "a", arg: 1, scope: !12872, file: !2172, line: 1155, type: !2096)
!12877 = !DILocalVariable(name: "b", arg: 2, scope: !12872, file: !2172, line: 1155, type: !2096)
!12878 = !DILocalVariable(name: "thread_a", scope: !12872, file: !2172, line: 1157, type: !2067)
!12879 = !DILocalVariable(name: "thread_b", scope: !12872, file: !2172, line: 1157, type: !2067)
!12880 = !DILocalVariable(name: "cmp", scope: !12872, file: !2172, line: 1158, type: !588)
!12881 = !DILocation(line: 0, scope: !12872)
!12882 = !DILocation(line: 1160, column: 13, scope: !12872)
!12883 = !DILocation(line: 1161, column: 13, scope: !12872)
!12884 = !DILocation(line: 1163, column: 8, scope: !12872)
!12885 = !DILocation(line: 1165, column: 10, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12872, file: !2172, line: 1165, column: 6)
!12887 = !DILocation(line: 1165, column: 6, scope: !12872)
!12888 = !DILocation(line: 1167, column: 17, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12886, file: !2172, line: 1167, column: 13)
!12890 = !DILocation(line: 1167, column: 13, scope: !12886)
!12891 = !DILocation(line: 1170, column: 25, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12889, file: !2172, line: 1169, column: 9)
!12893 = !DILocation(line: 1170, column: 52, scope: !12892)
!12894 = !DILocation(line: 1170, column: 35, scope: !12892)
!12895 = !DILocation(line: 1170, column: 3, scope: !12892)
!12896 = !DILocation(line: 0, scope: !12886)
!12897 = !DILocation(line: 1173, column: 1, scope: !12872)
!12898 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2172, file: !2172, line: 1175, type: !12899, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12914)
!12899 = !DISubroutineType(types: !12900)
!12900 = !{null, !12901, !2067}
!12901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12902, size: 32)
!12902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !12903, line: 37, size: 128, elements: !12904)
!12903 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12904 = !{!12905, !12913}
!12905 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !12902, file: !12903, line: 38, baseType: !12906, size: 96)
!12906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !259, line: 83, size: 96, elements: !12907)
!12907 = !{!12908, !12909, !12912}
!12908 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !12906, file: !259, line: 84, baseType: !2096, size: 32)
!12909 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !12906, file: !259, line: 85, baseType: !12910, size: 32, offset: 32)
!12910 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !259, line: 81, baseType: !12911)
!12911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12873, size: 32)
!12912 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !12906, file: !259, line: 86, baseType: !104, size: 32, offset: 64)
!12913 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !12902, file: !12903, line: 39, baseType: !104, size: 32, offset: 96)
!12914 = !{!12915, !12916, !12917, !12918, !12927}
!12915 = !DILocalVariable(name: "pq", arg: 1, scope: !12898, file: !2172, line: 1175, type: !12901)
!12916 = !DILocalVariable(name: "thread", arg: 2, scope: !12898, file: !2172, line: 1175, type: !2067)
!12917 = !DILocalVariable(name: "t", scope: !12898, file: !2172, line: 1177, type: !2067)
!12918 = !DILocalVariable(name: "__f", scope: !12919, file: !2172, line: 1190, type: !12922)
!12919 = distinct !DILexicalBlock(scope: !12920, file: !2172, line: 1190, column: 3)
!12920 = distinct !DILexicalBlock(scope: !12921, file: !2172, line: 1189, column: 27)
!12921 = distinct !DILexicalBlock(scope: !12898, file: !2172, line: 1189, column: 6)
!12922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !259, line: 155, size: 96, elements: !12923)
!12923 = !{!12924, !12925, !12926}
!12924 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !12922, file: !259, line: 156, baseType: !2167, size: 32)
!12925 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !12922, file: !259, line: 157, baseType: !1717, size: 32, offset: 32)
!12926 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !12922, file: !259, line: 158, baseType: !588, size: 32, offset: 64)
!12927 = !DILocalVariable(name: "n", scope: !12928, file: !2172, line: 1190, type: !2096)
!12928 = distinct !DILexicalBlock(scope: !12929, file: !2172, line: 1190, column: 3)
!12929 = distinct !DILexicalBlock(scope: !12919, file: !2172, line: 1190, column: 3)
!12930 = !DILocation(line: 0, scope: !12898)
!12931 = !DILocation(line: 1181, column: 31, scope: !12898)
!12932 = !DILocation(line: 1181, column: 45, scope: !12898)
!12933 = !DILocation(line: 1181, column: 15, scope: !12898)
!12934 = !DILocation(line: 1181, column: 25, scope: !12898)
!12935 = !DILocation(line: 1189, column: 11, scope: !12921)
!12936 = !DILocation(line: 1189, column: 7, scope: !12921)
!12937 = !DILocation(line: 1189, column: 6, scope: !12898)
!12938 = !DILocation(line: 1190, column: 3, scope: !12919)
!12939 = !DILocation(line: 1190, column: 3, scope: !12928)
!12940 = !DILocation(line: 0, scope: !12928)
!12941 = !DILocation(line: 1190, column: 3, scope: !12929)
!12942 = !DILocation(line: 1193, column: 2, scope: !12920)
!12943 = !DILocation(line: 1191, column: 42, scope: !12944)
!12944 = distinct !DILexicalBlock(scope: !12929, file: !2172, line: 1190, column: 54)
!12945 = !DILocation(line: 1191, column: 12, scope: !12944)
!12946 = !DILocation(line: 1191, column: 22, scope: !12944)
!12947 = distinct !{!12947, !12938, !12948}
!12948 = !DILocation(line: 1192, column: 3, scope: !12919)
!12949 = !DILocation(line: 1195, column: 17, scope: !12898)
!12950 = !DILocation(line: 1195, column: 37, scope: !12898)
!12951 = !DILocation(line: 1195, column: 2, scope: !12898)
!12952 = !DILocation(line: 1196, column: 1, scope: !12898)
!12953 = !DISubprogram(name: "z_rb_foreach_next", scope: !259, file: !259, line: 176, type: !12954, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !344)
!12954 = !DISubroutineType(types: !12955)
!12955 = !{!2096, !12956, !12957}
!12956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12906, size: 32)
!12957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12922, size: 32)
!12958 = !DISubprogram(name: "rb_insert", scope: !259, file: !259, line: 105, type: !12959, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !344)
!12959 = !DISubroutineType(types: !12960)
!12960 = !{null, !12956, !2096}
!12961 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2172, file: !2172, line: 1198, type: !12899, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12962)
!12962 = !{!12963, !12964}
!12963 = !DILocalVariable(name: "pq", arg: 1, scope: !12961, file: !2172, line: 1198, type: !12901)
!12964 = !DILocalVariable(name: "thread", arg: 2, scope: !12961, file: !2172, line: 1198, type: !2067)
!12965 = !DILocation(line: 0, scope: !12961)
!12966 = !DILocation(line: 1202, column: 17, scope: !12961)
!12967 = !DILocation(line: 1202, column: 37, scope: !12961)
!12968 = !DILocation(line: 1202, column: 2, scope: !12961)
!12969 = !DILocation(line: 1204, column: 16, scope: !12970)
!12970 = distinct !DILexicalBlock(scope: !12961, file: !2172, line: 1204, column: 6)
!12971 = !DILocation(line: 1204, column: 7, scope: !12970)
!12972 = !DILocation(line: 1204, column: 6, scope: !12961)
!12973 = !DILocation(line: 1205, column: 7, scope: !12974)
!12974 = distinct !DILexicalBlock(scope: !12970, file: !2172, line: 1204, column: 22)
!12975 = !DILocation(line: 1205, column: 22, scope: !12974)
!12976 = !DILocation(line: 1206, column: 2, scope: !12974)
!12977 = !DILocation(line: 1207, column: 1, scope: !12961)
!12978 = !DISubprogram(name: "rb_remove", scope: !259, file: !259, line: 110, type: !12959, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !344)
!12979 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2172, file: !2172, line: 1209, type: !12980, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12982)
!12980 = !DISubroutineType(types: !12981)
!12981 = !{!2067, !12901}
!12982 = !{!12983, !12984, !12985}
!12983 = !DILocalVariable(name: "pq", arg: 1, scope: !12979, file: !2172, line: 1209, type: !12901)
!12984 = !DILocalVariable(name: "thread", scope: !12979, file: !2172, line: 1211, type: !2067)
!12985 = !DILocalVariable(name: "n", scope: !12979, file: !2172, line: 1212, type: !2096)
!12986 = !DILocation(line: 0, scope: !12979)
!12987 = !DILocation(line: 1212, column: 37, scope: !12979)
!12988 = !DILocation(line: 1212, column: 21, scope: !12979)
!12989 = !DILocation(line: 1217, column: 2, scope: !12979)
!12990 = distinct !DISubprogram(name: "rb_get_min", scope: !259, file: !259, line: 115, type: !12991, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12993)
!12991 = !DISubroutineType(types: !12992)
!12992 = !{!2096, !12956}
!12993 = !{!12994}
!12994 = !DILocalVariable(name: "tree", arg: 1, scope: !12990, file: !259, line: 115, type: !12956)
!12995 = !DILocation(line: 0, scope: !12990)
!12996 = !DILocation(line: 117, column: 9, scope: !12990)
!12997 = !DILocation(line: 117, column: 2, scope: !12990)
!12998 = !DISubprogram(name: "z_rb_get_minmax", scope: !259, file: !259, line: 100, type: !12999, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !344)
!12999 = !DISubroutineType(types: !13000)
!13000 = !{!2096, !12956, !123}
!13001 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2172, file: !2172, line: 1246, type: !13002, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13012)
!13002 = !DISubroutineType(types: !13003)
!13003 = !{!2067, !13004}
!13004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13005, size: 32)
!13005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !12903, line: 53, size: 2080, elements: !13006)
!13006 = !{!13007, !13011}
!13007 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !13005, file: !12903, line: 54, baseType: !13008, size: 2048)
!13008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2103, size: 2048, elements: !13009)
!13009 = !{!13010}
!13010 = !DISubrange(count: 32)
!13011 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !13005, file: !12903, line: 55, baseType: !32, size: 32, offset: 2048)
!13012 = !{!13013, !13014, !13015, !13016}
!13013 = !DILocalVariable(name: "pq", arg: 1, scope: !13001, file: !2172, line: 1246, type: !13004)
!13014 = !DILocalVariable(name: "thread", scope: !13001, file: !2172, line: 1252, type: !2067)
!13015 = !DILocalVariable(name: "l", scope: !13001, file: !2172, line: 1253, type: !11811)
!13016 = !DILocalVariable(name: "n", scope: !13001, file: !2172, line: 1254, type: !2168)
!13017 = !DILocation(line: 0, scope: !13001)
!13018 = !DILocation(line: 1248, column: 11, scope: !13019)
!13019 = distinct !DILexicalBlock(scope: !13001, file: !2172, line: 1248, column: 6)
!13020 = !DILocation(line: 1248, column: 7, scope: !13019)
!13021 = !DILocation(line: 1248, column: 6, scope: !13001)
!13022 = !DILocation(line: 1253, column: 31, scope: !13001)
!13023 = !DILocation(line: 1253, column: 20, scope: !13001)
!13024 = !DILocation(line: 1254, column: 19, scope: !13001)
!13025 = !DILocation(line: 1260, column: 1, scope: !13001)
!13026 = distinct !DISubprogram(name: "z_unpend_all", scope: !2172, file: !2172, line: 1262, type: !13027, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13029)
!13027 = !DISubroutineType(types: !13028)
!13028 = !{!104, !2098}
!13029 = !{!13030, !13031, !13032}
!13030 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13026, file: !2172, line: 1262, type: !2098)
!13031 = !DILocalVariable(name: "need_sched", scope: !13026, file: !2172, line: 1264, type: !104)
!13032 = !DILocalVariable(name: "thread", scope: !13026, file: !2172, line: 1265, type: !2067)
!13033 = !DILocation(line: 0, scope: !13026)
!13034 = !DILocation(line: 1267, column: 19, scope: !13026)
!13035 = !DILocation(line: 1267, column: 41, scope: !13026)
!13036 = !DILocation(line: 1267, column: 2, scope: !13026)
!13037 = !DILocation(line: 1268, column: 3, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !13026, file: !2172, line: 1267, column: 50)
!13039 = !DILocation(line: 1269, column: 3, scope: !13038)
!13040 = distinct !{!13040, !13036, !13041}
!13041 = !DILocation(line: 1271, column: 2, scope: !13026)
!13042 = !DILocation(line: 1273, column: 2, scope: !13026)
!13043 = distinct !DISubprogram(name: "z_waitq_head", scope: !11206, file: !11206, line: 52, type: !12659, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13044)
!13044 = !{!13045}
!13045 = !DILocalVariable(name: "w", arg: 1, scope: !13043, file: !11206, line: 52, type: !2098)
!13046 = !DILocation(line: 0, scope: !13043)
!13047 = !DILocation(line: 54, column: 52, scope: !13043)
!13048 = !DILocation(line: 54, column: 28, scope: !13043)
!13049 = !DILocation(line: 54, column: 9, scope: !13043)
!13050 = !DILocation(line: 54, column: 2, scope: !13043)
!13051 = distinct !DISubprogram(name: "init_ready_q", scope: !2172, file: !2172, line: 1276, type: !13052, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13059)
!13052 = !DISubroutineType(types: !13053)
!13053 = !{null, !13054}
!13054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13055, size: 32)
!13055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !269, line: 83, size: 96, elements: !13056)
!13056 = !{!13057, !13058}
!13057 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !13055, file: !269, line: 86, baseType: !2067, size: 32)
!13058 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !13055, file: !269, line: 90, baseType: !2103, size: 64, offset: 32)
!13059 = !{!13060}
!13060 = !DILocalVariable(name: "rq", arg: 1, scope: !13051, file: !2172, line: 1276, type: !13054)
!13061 = !DILocation(line: 0, scope: !13051)
!13062 = !DILocation(line: 1289, column: 22, scope: !13051)
!13063 = !DILocation(line: 1289, column: 2, scope: !13051)
!13064 = !DILocation(line: 1291, column: 1, scope: !13051)
!13065 = distinct !DISubprogram(name: "sys_dlist_init", scope: !243, file: !243, line: 197, type: !13066, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13068)
!13066 = !DISubroutineType(types: !13067)
!13067 = !{null, !11811}
!13068 = !{!13069}
!13069 = !DILocalVariable(name: "list", arg: 1, scope: !13065, file: !243, line: 197, type: !11811)
!13070 = !DILocation(line: 0, scope: !13065)
!13071 = !DILocation(line: 199, column: 8, scope: !13065)
!13072 = !DILocation(line: 199, column: 13, scope: !13065)
!13073 = !DILocation(line: 200, column: 8, scope: !13065)
!13074 = !DILocation(line: 200, column: 13, scope: !13065)
!13075 = !DILocation(line: 201, column: 1, scope: !13065)
!13076 = distinct !DISubprogram(name: "z_sched_init", scope: !2172, file: !2172, line: 1293, type: !2800, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !344)
!13077 = !DILocation(line: 1302, column: 2, scope: !13076)
!13078 = !DILocation(line: 1306, column: 2, scope: !13076)
!13079 = !DILocation(line: 1309, column: 1, scope: !13076)
!13080 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2172, file: !2172, line: 1311, type: !13081, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13084)
!13081 = !DISubroutineType(types: !13082)
!13082 = !{!104, !13083}
!13083 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !233, line: 347, baseType: !2067)
!13084 = !{!13085}
!13085 = !DILocalVariable(name: "thread", arg: 1, scope: !13080, file: !2172, line: 1311, type: !13083)
!13086 = !DILocation(line: 0, scope: !13080)
!13087 = !DILocation(line: 1313, column: 22, scope: !13080)
!13088 = !DILocation(line: 1313, column: 9, scope: !13080)
!13089 = !DILocation(line: 1313, column: 2, scope: !13080)
!13090 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2172, file: !2172, line: 1325, type: !13091, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13093)
!13091 = !DISubroutineType(types: !13092)
!13092 = !{null, !13083, !104}
!13093 = !{!13094, !13095, !13096}
!13094 = !DILocalVariable(name: "thread", arg: 1, scope: !13090, file: !2172, line: 1325, type: !13083)
!13095 = !DILocalVariable(name: "prio", arg: 2, scope: !13090, file: !2172, line: 1325, type: !104)
!13096 = !DILocalVariable(name: "th", scope: !13090, file: !2172, line: 1334, type: !2067)
!13097 = !DILocation(line: 0, scope: !13090)
!13098 = !DILocation(line: 1336, column: 2, scope: !13090)
!13099 = !DILocation(line: 1337, column: 1, scope: !13090)
!13100 = distinct !DISubprogram(name: "k_can_yield", scope: !2172, file: !2172, line: 1384, type: !5726, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !344)
!13101 = !DILocation(line: 1386, column: 11, scope: !13100)
!13102 = !DILocation(line: 1386, column: 29, scope: !13100)
!13103 = !DILocation(line: 1386, column: 32, scope: !13100)
!13104 = !DILocation(line: 1386, column: 46, scope: !13100)
!13105 = !DILocation(line: 1387, column: 28, scope: !13100)
!13106 = !DILocation(line: 1387, column: 4, scope: !13100)
!13107 = !DILocation(line: 1386, column: 2, scope: !13100)
!13108 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !329, file: !329, line: 989, type: !5726, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !344)
!13109 = !DILocation(line: 993, column: 10, scope: !13108)
!13110 = !DILocation(line: 993, column: 2, scope: !13108)
!13111 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2172, file: !2172, line: 1390, type: !2800, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13112)
!13112 = !{!13113}
!13113 = !DILocalVariable(name: "key", scope: !13111, file: !2172, line: 1396, type: !11600)
!13114 = !DILocation(line: 0, scope: !11608, inlinedAt: !13115)
!13115 = distinct !DILocation(line: 1396, column: 25, scope: !13111)
!13116 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !13117)
!13117 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !13115)
!13118 = !DILocation(line: 0, scope: !11617, inlinedAt: !13117)
!13119 = !DILocation(line: 0, scope: !13111)
!13120 = !DILocation(line: 1400, column: 18, scope: !13121)
!13121 = distinct !DILexicalBlock(scope: !13122, file: !2172, line: 1399, column: 36)
!13122 = distinct !DILexicalBlock(scope: !13111, file: !2172, line: 1398, column: 6)
!13123 = !DILocation(line: 0, scope: !11777, inlinedAt: !13124)
!13124 = distinct !DILocation(line: 1400, column: 3, scope: !13121)
!13125 = !DILocation(line: 266, column: 15, scope: !11777, inlinedAt: !13124)
!13126 = !DILocation(line: 266, column: 28, scope: !11777, inlinedAt: !13124)
!13127 = !DILocation(line: 0, scope: !11785, inlinedAt: !13128)
!13128 = distinct !DILocation(line: 268, column: 3, scope: !11789, inlinedAt: !13124)
!13129 = !DILocation(line: 234, column: 2, scope: !11785, inlinedAt: !13128)
!13130 = !DILocation(line: 1402, column: 15, scope: !13111)
!13131 = !DILocation(line: 0, scope: !11794, inlinedAt: !13132)
!13132 = distinct !DILocation(line: 1402, column: 2, scope: !13111)
!13133 = !DILocation(line: 252, column: 15, scope: !11794, inlinedAt: !13132)
!13134 = !DILocation(line: 252, column: 28, scope: !11794, inlinedAt: !13132)
!13135 = !DILocation(line: 0, scope: !11801, inlinedAt: !13136)
!13136 = distinct !DILocation(line: 254, column: 3, scope: !11805, inlinedAt: !13132)
!13137 = !DILocation(line: 0, scope: !11808, inlinedAt: !13138)
!13138 = distinct !DILocation(line: 229, column: 2, scope: !11801, inlinedAt: !13136)
!13139 = !DILocation(line: 188, column: 2, scope: !11818, inlinedAt: !13138)
!13140 = !DILocation(line: 188, column: 2, scope: !11820, inlinedAt: !13138)
!13141 = !DILocation(line: 0, scope: !11818, inlinedAt: !13138)
!13142 = !DILocation(line: 189, column: 7, scope: !11823, inlinedAt: !13138)
!13143 = !DILocation(line: 189, column: 35, scope: !11823, inlinedAt: !13138)
!13144 = !DILocation(line: 189, column: 7, scope: !11824, inlinedAt: !13138)
!13145 = !DILocation(line: 191, column: 21, scope: !11828, inlinedAt: !13138)
!13146 = !DILocation(line: 190, column: 4, scope: !11828, inlinedAt: !13138)
!13147 = !DILocation(line: 192, column: 4, scope: !11828, inlinedAt: !13138)
!13148 = distinct !{!13148, !13139, !13149}
!13149 = !DILocation(line: 194, column: 2, scope: !11818, inlinedAt: !13138)
!13150 = !DILocation(line: 196, column: 37, scope: !11808, inlinedAt: !13138)
!13151 = !DILocation(line: 196, column: 2, scope: !11808, inlinedAt: !13138)
!13152 = !DILocation(line: 197, column: 1, scope: !11808, inlinedAt: !13138)
!13153 = !DILocation(line: 1403, column: 2, scope: !13111)
!13154 = !DILocation(line: 0, scope: !12219, inlinedAt: !13155)
!13155 = distinct !DILocation(line: 1404, column: 2, scope: !13111)
!13156 = !DILocation(line: 196, column: 9, scope: !12219, inlinedAt: !13155)
!13157 = !DILocation(line: 1405, column: 1, scope: !13111)
!13158 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2172, file: !2172, line: 1459, type: !13159, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13161)
!13159 = !DISubroutineType(types: !13160)
!13160 = !{!588, !12399}
!13161 = !{!13162, !13163, !13164}
!13162 = !DILocalVariable(name: "timeout", arg: 1, scope: !13158, file: !2172, line: 1459, type: !12399)
!13163 = !DILocalVariable(name: "ticks", scope: !13158, file: !2172, line: 1461, type: !1382)
!13164 = !DILocalVariable(name: "ret", scope: !13158, file: !2172, line: 1480, type: !588)
!13165 = !DILocation(line: 0, scope: !13158)
!13166 = !DILocation(line: 1468, column: 6, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13158, file: !2172, line: 1468, column: 6)
!13168 = !DILocation(line: 1468, column: 6, scope: !13158)
!13169 = !DILocation(line: 1469, column: 20, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13167, file: !2172, line: 1468, column: 40)
!13171 = !DILocation(line: 1469, column: 3, scope: !13170)
!13172 = !DILocation(line: 1473, column: 3, scope: !13170)
!13173 = !DILocation(line: 1478, column: 10, scope: !13158)
!13174 = !DILocation(line: 1480, column: 16, scope: !13158)
!13175 = !DILocation(line: 1485, column: 1, scope: !13158)
!13176 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3390, file: !3390, line: 310, type: !13177, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13179)
!13177 = !DISubroutineType(types: !13178)
!13178 = !{null, !13083}
!13179 = !{!13180}
!13180 = !DILocalVariable(name: "thread", arg: 1, scope: !13176, file: !3390, line: 310, type: !13083)
!13181 = !DILocation(line: 0, scope: !13176)
!13182 = !DILocation(line: 319, column: 2, scope: !13183)
!13183 = distinct !DILexicalBlock(scope: !13176, file: !3390, line: 319, column: 2)
!13184 = !{i64 2154107708}
!13185 = !DILocation(line: 320, column: 2, scope: !13176)
!13186 = !DILocation(line: 321, column: 1, scope: !13176)
!13187 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2172, file: !2172, line: 1415, type: !13188, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13190)
!13188 = !DISubroutineType(types: !13189)
!13189 = !{!588, !1382}
!13190 = !{!13191, !13192, !13193, !13194}
!13191 = !DILocalVariable(name: "ticks", arg: 1, scope: !13187, file: !2172, line: 1415, type: !1382)
!13192 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !13187, file: !2172, line: 1418, type: !155)
!13193 = !DILocalVariable(name: "timeout", scope: !13187, file: !2172, line: 1430, type: !12399)
!13194 = !DILocalVariable(name: "key", scope: !13187, file: !2172, line: 1437, type: !11600)
!13195 = !DILocation(line: 0, scope: !13187)
!13196 = !DILocation(line: 1425, column: 12, scope: !13197)
!13197 = distinct !DILexicalBlock(scope: !13187, file: !2172, line: 1425, column: 6)
!13198 = !DILocation(line: 1425, column: 6, scope: !13187)
!13199 = !DILocation(line: 1426, column: 3, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13197, file: !2172, line: 1425, column: 18)
!13201 = !DILocation(line: 1427, column: 3, scope: !13200)
!13202 = !DILocation(line: 1431, column: 24, scope: !13203)
!13203 = distinct !DILexicalBlock(scope: !13187, file: !2172, line: 1431, column: 6)
!13204 = !DILocation(line: 1431, column: 6, scope: !13187)
!13205 = !DILocation(line: 1432, column: 35, scope: !13206)
!13206 = distinct !DILexicalBlock(scope: !13203, file: !2172, line: 1431, column: 30)
!13207 = !DILocation(line: 1432, column: 27, scope: !13206)
!13208 = !DILocation(line: 1433, column: 2, scope: !13206)
!13209 = !DILocation(line: 1434, column: 27, scope: !13210)
!13210 = distinct !DILexicalBlock(scope: !13203, file: !2172, line: 1433, column: 9)
!13211 = !DILocation(line: 0, scope: !13203)
!13212 = !DILocation(line: 0, scope: !11608, inlinedAt: !13213)
!13213 = distinct !DILocation(line: 1437, column: 25, scope: !13187)
!13214 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !13215)
!13215 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !13213)
!13216 = !DILocation(line: 0, scope: !11617, inlinedAt: !13215)
!13217 = !DILocation(line: 1440, column: 20, scope: !13187)
!13218 = !DILocation(line: 1440, column: 18, scope: !13187)
!13219 = !DILocation(line: 1442, column: 2, scope: !13187)
!13220 = !DILocation(line: 1443, column: 23, scope: !13187)
!13221 = !DILocation(line: 1443, column: 2, scope: !13187)
!13222 = !DILocation(line: 1444, column: 29, scope: !13187)
!13223 = !DILocation(line: 1444, column: 2, scope: !13187)
!13224 = !DILocation(line: 0, scope: !12219, inlinedAt: !13225)
!13225 = distinct !DILocation(line: 1446, column: 8, scope: !13187)
!13226 = !DILocation(line: 196, column: 9, scope: !12219, inlinedAt: !13225)
!13227 = !DILocation(line: 1450, column: 10, scope: !13187)
!13228 = !DILocation(line: 1450, column: 45, scope: !13187)
!13229 = !DILocation(line: 1450, column: 43, scope: !13187)
!13230 = !DILocation(line: 1451, column: 6, scope: !13187)
!13231 = !DILocation(line: 1457, column: 1, scope: !13187)
!13232 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !11441, file: !11441, line: 1103, type: !11442, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13233)
!13233 = !{!13234}
!13234 = !DILocalVariable(name: "t", arg: 1, scope: !13232, file: !11441, line: 1103, type: !1294)
!13235 = !DILocation(line: 0, scope: !13232)
!13236 = !DILocation(line: 0, scope: !11655, inlinedAt: !13237)
!13237 = distinct !DILocation(line: 1106, column: 9, scope: !13232)
!13238 = !DILocation(line: 139, column: 13, scope: !13239, inlinedAt: !13237)
!13239 = distinct !DILexicalBlock(scope: !13240, file: !11441, line: 138, column: 10)
!13240 = distinct !DILexicalBlock(scope: !13241, file: !11441, line: 136, column: 7)
!13241 = distinct !DILexicalBlock(scope: !11676, file: !11441, line: 134, column: 17)
!13242 = !DILocation(line: 1106, column: 2, scope: !13232)
!13243 = distinct !DISubprogram(name: "k_yield", scope: !3390, file: !3390, line: 140, type: !2800, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !344)
!13244 = !DILocation(line: 148, column: 2, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13243, file: !3390, line: 148, column: 2)
!13246 = !{i64 2154107028}
!13247 = !DILocation(line: 149, column: 2, scope: !13243)
!13248 = !DILocation(line: 150, column: 1, scope: !13243)
!13249 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2172, file: !2172, line: 1495, type: !13250, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13252)
!13250 = !DISubroutineType(types: !13251)
!13251 = !{!588, !104}
!13252 = !{!13253, !13254}
!13253 = !DILocalVariable(name: "us", arg: 1, scope: !13249, file: !2172, line: 1495, type: !104)
!13254 = !DILocalVariable(name: "ticks", scope: !13249, file: !2172, line: 1497, type: !588)
!13255 = !DILocation(line: 0, scope: !13249)
!13256 = !DILocation(line: 1501, column: 31, scope: !13249)
!13257 = !DILocation(line: 1501, column: 10, scope: !13249)
!13258 = !DILocation(line: 1502, column: 23, scope: !13249)
!13259 = !DILocation(line: 1502, column: 10, scope: !13249)
!13260 = !DILocation(line: 1506, column: 31, scope: !13249)
!13261 = !DILocation(line: 1506, column: 9, scope: !13249)
!13262 = !DILocation(line: 1506, column: 2, scope: !13249)
!13263 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !11441, file: !11441, line: 571, type: !11442, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13264)
!13264 = !{!13265}
!13265 = !DILocalVariable(name: "t", arg: 1, scope: !13263, file: !11441, line: 571, type: !1294)
!13266 = !DILocation(line: 0, scope: !13263)
!13267 = !DILocation(line: 0, scope: !11655, inlinedAt: !13268)
!13268 = distinct !DILocation(line: 574, column: 9, scope: !13263)
!13269 = !DILocation(line: 135, column: 5, scope: !13241, inlinedAt: !13268)
!13270 = !DILocation(line: 139, column: 13, scope: !13239, inlinedAt: !13268)
!13271 = !DILocation(line: 574, column: 2, scope: !13263)
!13272 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !11441, file: !11441, line: 1187, type: !11442, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13273)
!13273 = !{!13274}
!13274 = !DILocalVariable(name: "t", arg: 1, scope: !13272, file: !11441, line: 1187, type: !1294)
!13275 = !DILocation(line: 0, scope: !13272)
!13276 = !DILocation(line: 0, scope: !11655, inlinedAt: !13277)
!13277 = distinct !DILocation(line: 1190, column: 9, scope: !13272)
!13278 = !DILocation(line: 145, column: 13, scope: !13279, inlinedAt: !13277)
!13279 = distinct !DILexicalBlock(scope: !11673, file: !11441, line: 144, column: 10)
!13280 = !DILocation(line: 1190, column: 2, scope: !13272)
!13281 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2172, file: !2172, line: 1517, type: !13177, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13282)
!13282 = !{!13283}
!13283 = !DILocalVariable(name: "thread", arg: 1, scope: !13281, file: !2172, line: 1517, type: !13083)
!13284 = !DILocation(line: 0, scope: !13281)
!13285 = !DILocation(line: 1521, column: 6, scope: !13286)
!13286 = distinct !DILexicalBlock(scope: !13281, file: !2172, line: 1521, column: 6)
!13287 = !DILocation(line: 1521, column: 6, scope: !13281)
!13288 = !DILocation(line: 1525, column: 6, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !13281, file: !2172, line: 1525, column: 6)
!13290 = !DILocation(line: 1525, column: 37, scope: !13289)
!13291 = !DILocation(line: 1525, column: 6, scope: !13281)
!13292 = !DILocation(line: 1527, column: 20, scope: !13293)
!13293 = distinct !DILexicalBlock(scope: !13294, file: !2172, line: 1527, column: 7)
!13294 = distinct !DILexicalBlock(scope: !13289, file: !2172, line: 1525, column: 42)
!13295 = !DILocation(line: 1527, column: 33, scope: !13293)
!13296 = !DILocation(line: 1527, column: 7, scope: !13294)
!13297 = !DILocation(line: 1532, column: 2, scope: !13281)
!13298 = !DILocation(line: 1533, column: 2, scope: !13281)
!13299 = !DILocation(line: 1031, column: 3, scope: !12252, inlinedAt: !13300)
!13300 = distinct !DILocation(line: 48, column: 10, scope: !12256, inlinedAt: !13301)
!13301 = distinct !DILocation(line: 1537, column: 7, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13281, file: !2172, line: 1537, column: 6)
!13303 = !DILocation(line: 0, scope: !12252, inlinedAt: !13300)
!13304 = !DILocation(line: 48, column: 9, scope: !12256, inlinedAt: !13301)
!13305 = !DILocation(line: 1537, column: 6, scope: !13281)
!13306 = !DILocation(line: 1538, column: 3, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13302, file: !2172, line: 1537, column: 25)
!13308 = !DILocation(line: 1539, column: 2, scope: !13307)
!13309 = !DILocation(line: 1540, column: 1, scope: !13281)
!13310 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !10880, file: !10880, line: 101, type: !11726, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13311)
!13311 = !{!13312}
!13312 = !DILocalVariable(name: "thread", arg: 1, scope: !13310, file: !10880, line: 101, type: !2067)
!13313 = !DILocation(line: 0, scope: !13310)
!13314 = !DILocation(line: 103, column: 23, scope: !13310)
!13315 = !DILocation(line: 103, column: 36, scope: !13310)
!13316 = !DILocation(line: 103, column: 55, scope: !13310)
!13317 = !DILocation(line: 103, column: 2, scope: !13310)
!13318 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2172, file: !2172, line: 1567, type: !13319, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13321)
!13319 = !DISubroutineType(types: !13320)
!13320 = !{!13083}
!13321 = !{!13322}
!13322 = !DILocalVariable(name: "ret", scope: !13318, file: !2172, line: 1577, type: !13083)
!13323 = !DILocation(line: 1577, column: 30, scope: !13318)
!13324 = !DILocation(line: 0, scope: !13318)
!13325 = !DILocation(line: 1582, column: 2, scope: !13318)
!13326 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2172, file: !2172, line: 1593, type: !6001, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !344)
!13327 = !DILocation(line: 1031, column: 3, scope: !12252, inlinedAt: !13328)
!13328 = distinct !DILocation(line: 48, column: 10, scope: !12256, inlinedAt: !13329)
!13329 = distinct !DILocation(line: 1595, column: 10, scope: !13326)
!13330 = !DILocation(line: 0, scope: !12252, inlinedAt: !13328)
!13331 = !DILocation(line: 48, column: 9, scope: !12256, inlinedAt: !13329)
!13332 = !DILocation(line: 1595, column: 27, scope: !13326)
!13333 = !DILocation(line: 1595, column: 41, scope: !13326)
!13334 = !DILocation(line: 1595, column: 30, scope: !13326)
!13335 = !DILocation(line: 1595, column: 2, scope: !13326)
!13336 = distinct !DISubprogram(name: "z_thread_abort", scope: !2172, file: !2172, line: 1725, type: !11566, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13337)
!13337 = !{!13338, !13339}
!13338 = !DILocalVariable(name: "thread", arg: 1, scope: !13336, file: !2172, line: 1725, type: !2067)
!13339 = !DILocalVariable(name: "key", scope: !13336, file: !2172, line: 1727, type: !11600)
!13340 = !DILocation(line: 0, scope: !13336)
!13341 = !DILocation(line: 0, scope: !11608, inlinedAt: !13342)
!13342 = distinct !DILocation(line: 1727, column: 25, scope: !13336)
!13343 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !13344)
!13344 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !13342)
!13345 = !DILocation(line: 0, scope: !11617, inlinedAt: !13344)
!13346 = !DILocation(line: 1729, column: 20, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13336, file: !2172, line: 1729, column: 6)
!13348 = !DILocation(line: 1729, column: 33, scope: !13347)
!13349 = !DILocation(line: 1729, column: 48, scope: !13347)
!13350 = !DILocation(line: 1729, column: 6, scope: !13336)
!13351 = !DILocation(line: 0, scope: !11635, inlinedAt: !13352)
!13352 = distinct !DILocation(line: 1730, column: 3, scope: !13353)
!13353 = distinct !DILexicalBlock(scope: !13347, file: !2172, line: 1729, column: 54)
!13354 = !DILocation(line: 0, scope: !11643, inlinedAt: !13355)
!13355 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !13352)
!13356 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !13355)
!13357 = !DILocation(line: 1732, column: 3, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13353, file: !2172, line: 1732, column: 3)
!13359 = !{i64 2154844438, i64 2154844454, i64 2154844480, i64 2154844508, i64 2154844528}
!13360 = !DILocation(line: 1733, column: 3, scope: !13353)
!13361 = !DILocation(line: 1736, column: 20, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13336, file: !2172, line: 1736, column: 6)
!13363 = !DILocation(line: 1736, column: 33, scope: !13362)
!13364 = !DILocation(line: 1736, column: 49, scope: !13362)
!13365 = !DILocation(line: 1736, column: 6, scope: !13336)
!13366 = !DILocation(line: 0, scope: !11635, inlinedAt: !13367)
!13367 = distinct !DILocation(line: 1737, column: 3, scope: !13368)
!13368 = distinct !DILexicalBlock(scope: !13362, file: !2172, line: 1736, column: 56)
!13369 = !DILocation(line: 0, scope: !11643, inlinedAt: !13370)
!13370 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !13367)
!13371 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !13370)
!13372 = !DILocation(line: 1738, column: 3, scope: !13368)
!13373 = !DILocation(line: 1775, column: 2, scope: !13336)
!13374 = !DILocation(line: 1776, column: 16, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13336, file: !2172, line: 1776, column: 6)
!13376 = !DILocation(line: 1776, column: 13, scope: !13375)
!13377 = !DILocation(line: 1776, column: 25, scope: !13375)
!13378 = !DILocation(line: 1031, column: 3, scope: !12252, inlinedAt: !13379)
!13379 = distinct !DILocation(line: 48, column: 10, scope: !12256, inlinedAt: !13380)
!13380 = distinct !DILocation(line: 1776, column: 29, scope: !13375)
!13381 = !DILocation(line: 0, scope: !12252, inlinedAt: !13379)
!13382 = !DILocation(line: 48, column: 9, scope: !12256, inlinedAt: !13380)
!13383 = !DILocation(line: 1776, column: 6, scope: !13336)
!13384 = !DILocation(line: 0, scope: !12219, inlinedAt: !13385)
!13385 = distinct !DILocation(line: 1777, column: 3, scope: !13386)
!13386 = distinct !DILexicalBlock(scope: !13375, file: !2172, line: 1776, column: 47)
!13387 = !DILocation(line: 196, column: 9, scope: !12219, inlinedAt: !13385)
!13388 = !DILocation(line: 1779, column: 2, scope: !13386)
!13389 = !DILocation(line: 0, scope: !11635, inlinedAt: !13390)
!13390 = distinct !DILocation(line: 1780, column: 2, scope: !13336)
!13391 = !DILocation(line: 0, scope: !11643, inlinedAt: !13392)
!13392 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !13390)
!13393 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !13392)
!13394 = !DILocation(line: 1781, column: 1, scope: !13336)
!13395 = distinct !DISubprogram(name: "end_thread", scope: !2172, file: !2172, line: 1690, type: !11566, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13396)
!13396 = !{!13397}
!13397 = !DILocalVariable(name: "thread", arg: 1, scope: !13395, file: !2172, line: 1690, type: !2067)
!13398 = !DILocation(line: 0, scope: !13395)
!13399 = !DILocation(line: 1695, column: 20, scope: !13400)
!13400 = distinct !DILexicalBlock(scope: !13395, file: !2172, line: 1695, column: 6)
!13401 = !DILocation(line: 1695, column: 33, scope: !13400)
!13402 = !DILocation(line: 1695, column: 49, scope: !13400)
!13403 = !DILocation(line: 1695, column: 6, scope: !13395)
!13404 = !DILocation(line: 1697, column: 29, scope: !13405)
!13405 = distinct !DILexicalBlock(scope: !13400, file: !2172, line: 1695, column: 56)
!13406 = !DILocation(line: 1698, column: 7, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13405, file: !2172, line: 1698, column: 7)
!13408 = !DILocation(line: 1698, column: 7, scope: !13405)
!13409 = !DILocation(line: 0, scope: !11777, inlinedAt: !13410)
!13410 = distinct !DILocation(line: 1699, column: 4, scope: !13411)
!13411 = distinct !DILexicalBlock(scope: !13407, file: !2172, line: 1698, column: 35)
!13412 = !DILocation(line: 266, column: 28, scope: !11777, inlinedAt: !13410)
!13413 = !DILocation(line: 0, scope: !11785, inlinedAt: !13414)
!13414 = distinct !DILocation(line: 268, column: 3, scope: !11789, inlinedAt: !13410)
!13415 = !DILocation(line: 234, column: 2, scope: !11785, inlinedAt: !13414)
!13416 = !DILocation(line: 1700, column: 3, scope: !13411)
!13417 = !DILocation(line: 1701, column: 20, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13405, file: !2172, line: 1701, column: 7)
!13419 = !DILocation(line: 1701, column: 30, scope: !13418)
!13420 = !DILocation(line: 1701, column: 7, scope: !13405)
!13421 = !DILocation(line: 1702, column: 4, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13418, file: !2172, line: 1701, column: 39)
!13423 = !DILocation(line: 1703, column: 3, scope: !13422)
!13424 = !DILocation(line: 1704, column: 9, scope: !13405)
!13425 = !DILocation(line: 1705, column: 23, scope: !13405)
!13426 = !DILocation(line: 1705, column: 3, scope: !13405)
!13427 = !DILocation(line: 1706, column: 3, scope: !13405)
!13428 = !DILocation(line: 1722, column: 2, scope: !13405)
!13429 = !DILocation(line: 1723, column: 1, scope: !13395)
!13430 = distinct !DISubprogram(name: "unpend_all", scope: !2172, file: !2172, line: 1674, type: !13431, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13433)
!13431 = !DISubroutineType(types: !13432)
!13432 = !{null, !2098}
!13433 = !{!13434, !13435}
!13434 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13430, file: !2172, line: 1674, type: !2098)
!13435 = !DILocalVariable(name: "thread", scope: !13430, file: !2172, line: 1676, type: !2067)
!13436 = !DILocation(line: 0, scope: !13430)
!13437 = !DILocation(line: 1678, column: 19, scope: !13430)
!13438 = !DILocation(line: 1678, column: 41, scope: !13430)
!13439 = !DILocation(line: 1678, column: 2, scope: !13430)
!13440 = !DILocation(line: 1679, column: 3, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13430, file: !2172, line: 1678, column: 50)
!13442 = !DILocation(line: 1680, column: 9, scope: !13441)
!13443 = !DILocalVariable(name: "thread", arg: 1, scope: !13444, file: !10900, line: 65, type: !2067)
!13444 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !10900, file: !10900, line: 65, type: !13445, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13447)
!13445 = !DISubroutineType(types: !13446)
!13446 = !{null, !2067, !32}
!13447 = !{!13443, !13448}
!13448 = !DILocalVariable(name: "value", arg: 2, scope: !13444, file: !10900, line: 65, type: !32)
!13449 = !DILocation(line: 0, scope: !13444, inlinedAt: !13450)
!13450 = distinct !DILocation(line: 1681, column: 3, scope: !13441)
!13451 = !DILocation(line: 67, column: 15, scope: !13444, inlinedAt: !13450)
!13452 = !DILocation(line: 67, column: 33, scope: !13444, inlinedAt: !13450)
!13453 = !DILocation(line: 1682, column: 3, scope: !13441)
!13454 = distinct !{!13454, !13439, !13455}
!13455 = !DILocation(line: 1683, column: 2, scope: !13430)
!13456 = !DILocation(line: 1684, column: 1, scope: !13430)
!13457 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2172, file: !2172, line: 1794, type: !13458, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13460)
!13458 = !DISubroutineType(types: !13459)
!13459 = !{!104, !2067, !12399}
!13460 = !{!13461, !13462, !13463, !13464}
!13461 = !DILocalVariable(name: "thread", arg: 1, scope: !13457, file: !2172, line: 1794, type: !2067)
!13462 = !DILocalVariable(name: "timeout", arg: 2, scope: !13457, file: !2172, line: 1794, type: !12399)
!13463 = !DILocalVariable(name: "key", scope: !13457, file: !2172, line: 1796, type: !11600)
!13464 = !DILocalVariable(name: "ret", scope: !13457, file: !2172, line: 1797, type: !104)
!13465 = !DILocation(line: 0, scope: !13457)
!13466 = !DILocation(line: 0, scope: !11608, inlinedAt: !13467)
!13467 = distinct !DILocation(line: 1796, column: 25, scope: !13457)
!13468 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !13469)
!13469 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !13467)
!13470 = !DILocation(line: 0, scope: !11617, inlinedAt: !13469)
!13471 = !DILocation(line: 1801, column: 20, scope: !13472)
!13472 = distinct !DILexicalBlock(scope: !13457, file: !2172, line: 1801, column: 6)
!13473 = !DILocation(line: 1801, column: 33, scope: !13472)
!13474 = !DILocation(line: 1801, column: 49, scope: !13472)
!13475 = !DILocation(line: 1801, column: 6, scope: !13457)
!13476 = !DILocation(line: 1803, column: 13, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13472, file: !2172, line: 1803, column: 13)
!13478 = !DILocation(line: 1803, column: 13, scope: !13472)
!13479 = !DILocation(line: 1805, column: 24, scope: !13480)
!13480 = distinct !DILexicalBlock(scope: !13477, file: !2172, line: 1805, column: 13)
!13481 = !DILocation(line: 1805, column: 21, scope: !13480)
!13482 = !DILocation(line: 1805, column: 34, scope: !13480)
!13483 = !DILocation(line: 1806, column: 20, scope: !13480)
!13484 = !DILocation(line: 1806, column: 44, scope: !13480)
!13485 = !DILocation(line: 1806, column: 30, scope: !13480)
!13486 = !DILocation(line: 1805, column: 13, scope: !13477)
!13487 = !DILocation(line: 1810, column: 42, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13480, file: !2172, line: 1808, column: 9)
!13489 = !DILocation(line: 1810, column: 3, scope: !13488)
!13490 = !DILocation(line: 1811, column: 22, scope: !13488)
!13491 = !DILocation(line: 1811, column: 3, scope: !13488)
!13492 = !DILocation(line: 0, scope: !12219, inlinedAt: !13493)
!13493 = distinct !DILocation(line: 1814, column: 9, scope: !13488)
!13494 = !DILocation(line: 196, column: 9, scope: !12219, inlinedAt: !13493)
!13495 = !DILocation(line: 1817, column: 3, scope: !13488)
!13496 = !DILocation(line: 0, scope: !13472)
!13497 = !DILocation(line: 0, scope: !11635, inlinedAt: !13498)
!13498 = distinct !DILocation(line: 1822, column: 2, scope: !13457)
!13499 = !DILocation(line: 0, scope: !11643, inlinedAt: !13500)
!13500 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !13498)
!13501 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !13500)
!13502 = !DILocation(line: 1823, column: 2, scope: !13457)
!13503 = !DILocation(line: 1824, column: 1, scope: !13457)
!13504 = distinct !DISubprogram(name: "z_sched_wake", scope: !2172, file: !2172, line: 1882, type: !13505, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13507)
!13505 = !DISubroutineType(types: !13506)
!13506 = !{!126, !2098, !104, !103}
!13507 = !{!13508, !13509, !13510, !13511, !13512, !13513, !13515}
!13508 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13504, file: !2172, line: 1882, type: !2098)
!13509 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !13504, file: !2172, line: 1882, type: !104)
!13510 = !DILocalVariable(name: "swap_data", arg: 3, scope: !13504, file: !2172, line: 1882, type: !103)
!13511 = !DILocalVariable(name: "thread", scope: !13504, file: !2172, line: 1884, type: !2067)
!13512 = !DILocalVariable(name: "ret", scope: !13504, file: !2172, line: 1885, type: !126)
!13513 = !DILocalVariable(name: "__i", scope: !13514, file: !2172, line: 1887, type: !11600)
!13514 = distinct !DILexicalBlock(scope: !13504, file: !2172, line: 1887, column: 2)
!13515 = !DILocalVariable(name: "__key", scope: !13514, file: !2172, line: 1887, type: !11600)
!13516 = !DILocation(line: 0, scope: !13504)
!13517 = !DILocation(line: 0, scope: !13514)
!13518 = !DILocation(line: 0, scope: !11608, inlinedAt: !13519)
!13519 = distinct !DILocation(line: 1887, column: 2, scope: !13514)
!13520 = !DILocation(line: 55, column: 2, scope: !11617, inlinedAt: !13521)
!13521 = distinct !DILocation(line: 145, column: 10, scope: !11608, inlinedAt: !13519)
!13522 = !DILocation(line: 0, scope: !11617, inlinedAt: !13521)
!13523 = !DILocation(line: 1888, column: 12, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13525, file: !2172, line: 1887, column: 26)
!13525 = distinct !DILexicalBlock(scope: !13514, file: !2172, line: 1887, column: 2)
!13526 = !DILocation(line: 1890, column: 14, scope: !13527)
!13527 = distinct !DILexicalBlock(scope: !13524, file: !2172, line: 1890, column: 7)
!13528 = !DILocation(line: 1890, column: 7, scope: !13524)
!13529 = !DILocalVariable(name: "thread", arg: 1, scope: !13530, file: !13531, line: 134, type: !2067)
!13530 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13531, file: !13531, line: 134, type: !13532, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13534)
!13531 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13532 = !DISubroutineType(types: !13533)
!13533 = !{null, !2067, !32, !103}
!13534 = !{!13529, !13535, !13536}
!13535 = !DILocalVariable(name: "value", arg: 2, scope: !13530, file: !13531, line: 135, type: !32)
!13536 = !DILocalVariable(name: "data", arg: 3, scope: !13530, file: !13531, line: 136, type: !103)
!13537 = !DILocation(line: 0, scope: !13530, inlinedAt: !13538)
!13538 = distinct !DILocation(line: 1891, column: 4, scope: !13539)
!13539 = distinct !DILexicalBlock(scope: !13527, file: !2172, line: 1890, column: 23)
!13540 = !DILocation(line: 0, scope: !13444, inlinedAt: !13541)
!13541 = distinct !DILocation(line: 138, column: 2, scope: !13530, inlinedAt: !13538)
!13542 = !DILocation(line: 67, column: 15, scope: !13444, inlinedAt: !13541)
!13543 = !DILocation(line: 67, column: 33, scope: !13444, inlinedAt: !13541)
!13544 = !DILocation(line: 139, column: 15, scope: !13530, inlinedAt: !13538)
!13545 = !DILocation(line: 139, column: 25, scope: !13530, inlinedAt: !13538)
!13546 = !DILocation(line: 1894, column: 4, scope: !13539)
!13547 = !DILocation(line: 1895, column: 10, scope: !13539)
!13548 = !DILocation(line: 1896, column: 4, scope: !13539)
!13549 = !DILocation(line: 1898, column: 3, scope: !13539)
!13550 = !DILocation(line: 0, scope: !11635, inlinedAt: !13551)
!13551 = distinct !DILocation(line: 1887, column: 2, scope: !13525)
!13552 = !DILocation(line: 0, scope: !11643, inlinedAt: !13553)
!13553 = distinct !DILocation(line: 215, column: 2, scope: !11635, inlinedAt: !13551)
!13554 = !DILocation(line: 95, column: 2, scope: !11643, inlinedAt: !13553)
!13555 = !DILocation(line: 1901, column: 2, scope: !13504)
!13556 = distinct !DISubprogram(name: "z_sched_wait", scope: !2172, file: !2172, line: 1904, type: !13557, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !13560)
!13557 = !DISubroutineType(types: !13558)
!13558 = !{!104, !11611, !11600, !2098, !12399, !13559}
!13559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!13560 = !{!13561, !13562, !13563, !13564, !13565, !13566}
!13561 = !DILocalVariable(name: "lock", arg: 1, scope: !13556, file: !2172, line: 1904, type: !11611)
!13562 = !DILocalVariable(name: "key", arg: 2, scope: !13556, file: !2172, line: 1904, type: !11600)
!13563 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13556, file: !2172, line: 1905, type: !2098)
!13564 = !DILocalVariable(name: "timeout", arg: 4, scope: !13556, file: !2172, line: 1905, type: !12399)
!13565 = !DILocalVariable(name: "data", arg: 5, scope: !13556, file: !2172, line: 1905, type: !13559)
!13566 = !DILocalVariable(name: "ret", scope: !13556, file: !2172, line: 1907, type: !104)
!13567 = !DILocation(line: 0, scope: !13556)
!13568 = !DILocation(line: 1907, column: 12, scope: !13556)
!13569 = !DILocation(line: 1909, column: 11, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13556, file: !2172, line: 1909, column: 6)
!13571 = !DILocation(line: 1909, column: 6, scope: !13556)
!13572 = !DILocation(line: 1910, column: 11, scope: !13573)
!13573 = distinct !DILexicalBlock(scope: !13570, file: !2172, line: 1909, column: 20)
!13574 = !DILocation(line: 1910, column: 26, scope: !13573)
!13575 = !DILocation(line: 1910, column: 9, scope: !13573)
!13576 = !DILocation(line: 1911, column: 2, scope: !13573)
!13577 = !DILocation(line: 1912, column: 2, scope: !13556)
!13578 = distinct !DISubprogram(name: "z_data_copy", scope: !13579, file: !13579, line: 22, type: !2800, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2783, retainedNodes: !344)
!13579 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13580 = !DILocation(line: 24, column: 2, scope: !13578)
!13581 = !DILocation(line: 27, column: 2, scope: !13578)
!13582 = !DILocation(line: 71, column: 1, scope: !13578)
!13583 = distinct !DISubprogram(name: "z_add_timeout", scope: !2209, file: !2209, line: 88, type: !13584, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13590)
!13584 = !DISubroutineType(types: !13585)
!13585 = !{null, !2182, !2201, !13586}
!13586 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1383, line: 67, baseType: !13587)
!13587 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 65, size: 64, elements: !13588)
!13588 = !{!13589}
!13589 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13587, file: !1383, line: 66, baseType: !1382, size: 64)
!13590 = !{!13591, !13592, !13593, !13594, !13600, !13601, !13604, !13607}
!13591 = !DILocalVariable(name: "to", arg: 1, scope: !13583, file: !2209, line: 88, type: !2182)
!13592 = !DILocalVariable(name: "fn", arg: 2, scope: !13583, file: !2209, line: 88, type: !2201)
!13593 = !DILocalVariable(name: "timeout", arg: 3, scope: !13583, file: !2209, line: 89, type: !13586)
!13594 = !DILocalVariable(name: "__i", scope: !13595, file: !2209, line: 102, type: !13596)
!13595 = distinct !DILexicalBlock(scope: !13583, file: !2209, line: 102, column: 2)
!13596 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !343, line: 106, baseType: !13597)
!13597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !343, line: 32, size: 32, elements: !13598)
!13598 = !{!13599}
!13599 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13597, file: !343, line: 33, baseType: !104, size: 32)
!13600 = !DILocalVariable(name: "__key", scope: !13595, file: !2209, line: 102, type: !13596)
!13601 = !DILocalVariable(name: "t", scope: !13602, file: !2209, line: 103, type: !2182)
!13602 = distinct !DILexicalBlock(scope: !13603, file: !2209, line: 102, column: 24)
!13603 = distinct !DILexicalBlock(scope: !13595, file: !2209, line: 102, column: 2)
!13604 = !DILocalVariable(name: "ticks", scope: !13605, file: !2209, line: 107, type: !1382)
!13605 = distinct !DILexicalBlock(scope: !13606, file: !2209, line: 106, column: 39)
!13606 = distinct !DILexicalBlock(scope: !13602, file: !2209, line: 105, column: 7)
!13607 = !DILocalVariable(name: "next_time", scope: !13608, file: !2209, line: 137, type: !588)
!13608 = distinct !DILexicalBlock(scope: !13609, file: !2209, line: 127, column: 22)
!13609 = distinct !DILexicalBlock(scope: !13602, file: !2209, line: 127, column: 7)
!13610 = !DILocation(line: 0, scope: !13583)
!13611 = !DILocation(line: 91, column: 6, scope: !13612)
!13612 = distinct !DILexicalBlock(scope: !13583, file: !2209, line: 91, column: 6)
!13613 = !DILocation(line: 91, column: 6, scope: !13583)
!13614 = !DILocation(line: 100, column: 6, scope: !13583)
!13615 = !DILocation(line: 100, column: 9, scope: !13583)
!13616 = !DILocation(line: 0, scope: !13595)
!13617 = !DILocalVariable(name: "l", arg: 1, scope: !13618, file: !343, line: 136, type: !13621)
!13618 = distinct !DISubprogram(name: "k_spin_lock", scope: !343, file: !343, line: 136, type: !13619, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13622)
!13619 = !DISubroutineType(types: !13620)
!13620 = !{!13596, !13621}
!13621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 32)
!13622 = !{!13617, !13623}
!13623 = !DILocalVariable(name: "k", scope: !13618, file: !343, line: 139, type: !13596)
!13624 = !DILocation(line: 0, scope: !13618, inlinedAt: !13625)
!13625 = distinct !DILocation(line: 102, column: 2, scope: !13595)
!13626 = !DILocation(line: 55, column: 2, scope: !13627, inlinedAt: !13631)
!13627 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4757, file: !4757, line: 42, type: !4758, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13628)
!13628 = !{!13629, !13630}
!13629 = !DILocalVariable(name: "key", scope: !13627, file: !4757, line: 44, type: !32)
!13630 = !DILocalVariable(name: "tmp", scope: !13627, file: !4757, line: 53, type: !32)
!13631 = distinct !DILocation(line: 145, column: 10, scope: !13618, inlinedAt: !13625)
!13632 = !{i64 1953708}
!13633 = !DILocation(line: 0, scope: !13627, inlinedAt: !13631)
!13634 = !DILocation(line: 106, column: 33, scope: !13606)
!13635 = !DILocation(line: 105, column: 7, scope: !13602)
!13636 = !DILocation(line: 107, column: 50, scope: !13605)
!13637 = !DILocation(line: 107, column: 48, scope: !13605)
!13638 = !DILocation(line: 0, scope: !13605)
!13639 = !DILocation(line: 109, column: 17, scope: !13605)
!13640 = !DILocation(line: 110, column: 3, scope: !13605)
!13641 = !DILocation(line: 111, column: 31, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13606, file: !2209, line: 110, column: 10)
!13643 = !DILocation(line: 111, column: 37, scope: !13642)
!13644 = !DILocation(line: 111, column: 35, scope: !13642)
!13645 = !DILocation(line: 0, scope: !13606)
!13646 = !DILocation(line: 109, column: 8, scope: !13605)
!13647 = !DILocation(line: 109, column: 15, scope: !13605)
!13648 = !DILocation(line: 114, column: 12, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13602, file: !2209, line: 114, column: 3)
!13650 = !DILocation(line: 0, scope: !13602)
!13651 = !DILocation(line: 114, column: 3, scope: !13649)
!13652 = !DILocation(line: 115, column: 24, scope: !13653)
!13653 = distinct !DILexicalBlock(scope: !13654, file: !2209, line: 115, column: 8)
!13654 = distinct !DILexicalBlock(scope: !13655, file: !2209, line: 114, column: 45)
!13655 = distinct !DILexicalBlock(scope: !13649, file: !2209, line: 114, column: 3)
!13656 = !DILocation(line: 115, column: 11, scope: !13653)
!13657 = !DILocation(line: 115, column: 18, scope: !13653)
!13658 = !DILocation(line: 115, column: 8, scope: !13654)
!13659 = !DILocation(line: 116, column: 15, scope: !13660)
!13660 = distinct !DILexicalBlock(scope: !13653, file: !2209, line: 115, column: 32)
!13661 = !DILocation(line: 117, column: 26, scope: !13660)
!13662 = !DILocation(line: 117, column: 37, scope: !13660)
!13663 = !DILocation(line: 117, column: 5, scope: !13660)
!13664 = !DILocation(line: 123, column: 7, scope: !13602)
!13665 = !DILocation(line: 120, column: 15, scope: !13654)
!13666 = !DILocation(line: 114, column: 36, scope: !13655)
!13667 = distinct !{!13667, !13651, !13668}
!13668 = !DILocation(line: 121, column: 3, scope: !13649)
!13669 = !DILocation(line: 124, column: 41, scope: !13670)
!13670 = distinct !DILexicalBlock(scope: !13671, file: !2209, line: 123, column: 18)
!13671 = distinct !DILexicalBlock(scope: !13602, file: !2209, line: 123, column: 7)
!13672 = !DILocation(line: 124, column: 4, scope: !13670)
!13673 = !DILocation(line: 125, column: 3, scope: !13670)
!13674 = !DILocation(line: 127, column: 13, scope: !13609)
!13675 = !DILocation(line: 127, column: 10, scope: !13609)
!13676 = !DILocation(line: 127, column: 7, scope: !13602)
!13677 = !DILocation(line: 137, column: 24, scope: !13608)
!13678 = !DILocation(line: 0, scope: !13608)
!13679 = !DILocation(line: 139, column: 18, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13608, file: !2209, line: 139, column: 8)
!13681 = !DILocation(line: 139, column: 23, scope: !13680)
!13682 = !DILocation(line: 141, column: 5, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13680, file: !2209, line: 140, column: 48)
!13684 = !DILocation(line: 142, column: 4, scope: !13683)
!13685 = !DILocalVariable(name: "key", arg: 2, scope: !13686, file: !343, line: 190, type: !13596)
!13686 = distinct !DISubprogram(name: "k_spin_unlock", scope: !343, file: !343, line: 189, type: !13687, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13689)
!13687 = !DISubroutineType(types: !13688)
!13688 = !{null, !13621, !13596}
!13689 = !{!13690, !13685}
!13690 = !DILocalVariable(name: "l", arg: 1, scope: !13686, file: !343, line: 189, type: !13621)
!13691 = !DILocation(line: 0, scope: !13686, inlinedAt: !13692)
!13692 = distinct !DILocation(line: 102, column: 2, scope: !13603)
!13693 = !DILocalVariable(name: "key", arg: 1, scope: !13694, file: !4757, line: 84, type: !32)
!13694 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4757, file: !4757, line: 84, type: !4768, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13695)
!13695 = !{!13693}
!13696 = !DILocation(line: 0, scope: !13694, inlinedAt: !13697)
!13697 = distinct !DILocation(line: 215, column: 2, scope: !13686, inlinedAt: !13692)
!13698 = !DILocation(line: 95, column: 2, scope: !13694, inlinedAt: !13697)
!13699 = !{i64 1954525}
!13700 = !DILocation(line: 148, column: 1, scope: !13583)
!13701 = distinct !DISubprogram(name: "elapsed", scope: !2209, file: !2209, line: 62, type: !13702, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !344)
!13702 = !DISubroutineType(types: !13703)
!13703 = !{!588}
!13704 = !DILocation(line: 64, column: 9, scope: !13701)
!13705 = !DILocation(line: 64, column: 28, scope: !13701)
!13706 = !DILocation(line: 64, column: 35, scope: !13701)
!13707 = !DILocation(line: 64, column: 2, scope: !13701)
!13708 = distinct !DISubprogram(name: "first", scope: !2209, file: !2209, line: 39, type: !13709, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13711)
!13709 = !DISubroutineType(types: !13710)
!13710 = !{!2182}
!13711 = !{!13712}
!13712 = !DILocalVariable(name: "t", scope: !13708, file: !2209, line: 41, type: !13713)
!13713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 32)
!13714 = !DILocation(line: 41, column: 19, scope: !13708)
!13715 = !DILocation(line: 0, scope: !13708)
!13716 = !DILocation(line: 43, column: 9, scope: !13708)
!13717 = !DILocation(line: 43, column: 2, scope: !13708)
!13718 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !243, file: !243, line: 443, type: !13719, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13721)
!13719 = !DISubroutineType(types: !13720)
!13720 = !{null, !13713, !13713}
!13721 = !{!13722, !13723, !13724}
!13722 = !DILocalVariable(name: "successor", arg: 1, scope: !13718, file: !243, line: 443, type: !13713)
!13723 = !DILocalVariable(name: "node", arg: 2, scope: !13718, file: !243, line: 443, type: !13713)
!13724 = !DILocalVariable(name: "prev", scope: !13718, file: !243, line: 445, type: !13725)
!13725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13713)
!13726 = !DILocation(line: 0, scope: !13718)
!13727 = !DILocation(line: 445, column: 39, scope: !13718)
!13728 = !DILocation(line: 447, column: 8, scope: !13718)
!13729 = !DILocation(line: 447, column: 13, scope: !13718)
!13730 = !DILocation(line: 448, column: 8, scope: !13718)
!13731 = !DILocation(line: 448, column: 13, scope: !13718)
!13732 = !DILocation(line: 449, column: 8, scope: !13718)
!13733 = !DILocation(line: 449, column: 13, scope: !13718)
!13734 = !DILocation(line: 450, column: 18, scope: !13718)
!13735 = !DILocation(line: 451, column: 1, scope: !13718)
!13736 = distinct !DISubprogram(name: "next", scope: !2209, file: !2209, line: 46, type: !13737, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13739)
!13737 = !DISubroutineType(types: !13738)
!13738 = !{!2182, !2182}
!13739 = !{!13740, !13741}
!13740 = !DILocalVariable(name: "t", arg: 1, scope: !13736, file: !2209, line: 46, type: !2182)
!13741 = !DILocalVariable(name: "n", scope: !13736, file: !2209, line: 48, type: !13713)
!13742 = !DILocation(line: 0, scope: !13736)
!13743 = !DILocation(line: 48, column: 58, scope: !13736)
!13744 = !DILocation(line: 48, column: 19, scope: !13736)
!13745 = !DILocation(line: 50, column: 9, scope: !13736)
!13746 = !DILocation(line: 50, column: 2, scope: !13736)
!13747 = distinct !DISubprogram(name: "sys_dlist_append", scope: !243, file: !243, line: 404, type: !13748, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13751)
!13748 = !DISubroutineType(types: !13749)
!13749 = !{null, !13750, !13713}
!13750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2215, size: 32)
!13751 = !{!13752, !13753, !13754}
!13752 = !DILocalVariable(name: "list", arg: 1, scope: !13747, file: !243, line: 404, type: !13750)
!13753 = !DILocalVariable(name: "node", arg: 2, scope: !13747, file: !243, line: 404, type: !13713)
!13754 = !DILocalVariable(name: "tail", scope: !13747, file: !243, line: 406, type: !13725)
!13755 = !DILocation(line: 0, scope: !13747)
!13756 = !DILocation(line: 406, column: 34, scope: !13747)
!13757 = !DILocation(line: 408, column: 8, scope: !13747)
!13758 = !DILocation(line: 408, column: 13, scope: !13747)
!13759 = !DILocation(line: 409, column: 8, scope: !13747)
!13760 = !DILocation(line: 409, column: 13, scope: !13747)
!13761 = !DILocation(line: 411, column: 8, scope: !13747)
!13762 = !DILocation(line: 411, column: 13, scope: !13747)
!13763 = !DILocation(line: 412, column: 13, scope: !13747)
!13764 = !DILocation(line: 413, column: 1, scope: !13747)
!13765 = distinct !DISubprogram(name: "next_timeout", scope: !2209, file: !2209, line: 67, type: !13702, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13766)
!13766 = !{!13767, !13768, !13769}
!13767 = !DILocalVariable(name: "to", scope: !13765, file: !2209, line: 69, type: !2182)
!13768 = !DILocalVariable(name: "ticks_elapsed", scope: !13765, file: !2209, line: 70, type: !588)
!13769 = !DILocalVariable(name: "ret", scope: !13765, file: !2209, line: 71, type: !588)
!13770 = !DILocation(line: 69, column: 24, scope: !13765)
!13771 = !DILocation(line: 0, scope: !13765)
!13772 = !DILocation(line: 70, column: 26, scope: !13765)
!13773 = !DILocation(line: 73, column: 10, scope: !13774)
!13774 = distinct !DILexicalBlock(scope: !13765, file: !2209, line: 73, column: 6)
!13775 = !DILocation(line: 73, column: 19, scope: !13774)
!13776 = !DILocation(line: 74, column: 21, scope: !13774)
!13777 = !DILocation(line: 74, column: 30, scope: !13774)
!13778 = !DILocation(line: 74, column: 28, scope: !13774)
!13779 = !DILocation(line: 74, column: 45, scope: !13774)
!13780 = !DILocation(line: 73, column: 6, scope: !13765)
!13781 = !DILocation(line: 77, column: 9, scope: !13782)
!13782 = distinct !DILexicalBlock(scope: !13774, file: !2209, line: 76, column: 9)
!13783 = !DILocation(line: 0, scope: !13774)
!13784 = !DILocation(line: 81, column: 20, scope: !13785)
!13785 = distinct !DILexicalBlock(scope: !13765, file: !2209, line: 81, column: 6)
!13786 = !DILocation(line: 81, column: 6, scope: !13785)
!13787 = !DILocation(line: 81, column: 32, scope: !13785)
!13788 = !DILocation(line: 85, column: 2, scope: !13765)
!13789 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !243, file: !243, line: 341, type: !13790, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13792)
!13790 = !DISubroutineType(types: !13791)
!13791 = !{!13713, !13750, !13713}
!13792 = !{!13793, !13794}
!13793 = !DILocalVariable(name: "list", arg: 1, scope: !13789, file: !243, line: 341, type: !13750)
!13794 = !DILocalVariable(name: "node", arg: 2, scope: !13789, file: !243, line: 342, type: !13713)
!13795 = !DILocation(line: 0, scope: !13789)
!13796 = !DILocation(line: 344, column: 15, scope: !13789)
!13797 = !DILocation(line: 344, column: 9, scope: !13789)
!13798 = !DILocation(line: 344, column: 26, scope: !13789)
!13799 = !DILocation(line: 344, column: 2, scope: !13789)
!13800 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !243, file: !243, line: 325, type: !13790, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13801)
!13801 = !{!13802, !13803}
!13802 = !DILocalVariable(name: "list", arg: 1, scope: !13800, file: !243, line: 325, type: !13750)
!13803 = !DILocalVariable(name: "node", arg: 2, scope: !13800, file: !243, line: 326, type: !13713)
!13804 = !DILocation(line: 0, scope: !13800)
!13805 = !DILocation(line: 328, column: 24, scope: !13800)
!13806 = !DILocation(line: 328, column: 15, scope: !13800)
!13807 = !DILocation(line: 328, column: 9, scope: !13800)
!13808 = !DILocation(line: 328, column: 45, scope: !13800)
!13809 = !DILocation(line: 328, column: 2, scope: !13800)
!13810 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !243, file: !243, line: 294, type: !13811, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13813)
!13811 = !DISubroutineType(types: !13812)
!13812 = !{!13713, !13750}
!13813 = !{!13814}
!13814 = !DILocalVariable(name: "list", arg: 1, scope: !13810, file: !243, line: 294, type: !13750)
!13815 = !DILocation(line: 0, scope: !13810)
!13816 = !DILocation(line: 296, column: 9, scope: !13810)
!13817 = !DILocation(line: 296, column: 2, scope: !13810)
!13818 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !243, file: !243, line: 266, type: !13819, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13821)
!13819 = !DISubroutineType(types: !13820)
!13820 = !{!126, !13750}
!13821 = !{!13822}
!13822 = !DILocalVariable(name: "list", arg: 1, scope: !13818, file: !243, line: 266, type: !13750)
!13823 = !DILocation(line: 0, scope: !13818)
!13824 = !DILocation(line: 268, column: 15, scope: !13818)
!13825 = !DILocation(line: 268, column: 20, scope: !13818)
!13826 = !DILocation(line: 268, column: 2, scope: !13818)
!13827 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2209, file: !2209, line: 150, type: !13828, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13830)
!13828 = !DISubroutineType(types: !13829)
!13829 = !{!104, !2182}
!13830 = !{!13831, !13832, !13833, !13835}
!13831 = !DILocalVariable(name: "to", arg: 1, scope: !13827, file: !2209, line: 150, type: !2182)
!13832 = !DILocalVariable(name: "ret", scope: !13827, file: !2209, line: 152, type: !104)
!13833 = !DILocalVariable(name: "__i", scope: !13834, file: !2209, line: 154, type: !13596)
!13834 = distinct !DILexicalBlock(scope: !13827, file: !2209, line: 154, column: 2)
!13835 = !DILocalVariable(name: "__key", scope: !13834, file: !2209, line: 154, type: !13596)
!13836 = !DILocation(line: 0, scope: !13827)
!13837 = !DILocation(line: 0, scope: !13834)
!13838 = !DILocation(line: 0, scope: !13618, inlinedAt: !13839)
!13839 = distinct !DILocation(line: 154, column: 2, scope: !13834)
!13840 = !DILocation(line: 55, column: 2, scope: !13627, inlinedAt: !13841)
!13841 = distinct !DILocation(line: 145, column: 10, scope: !13618, inlinedAt: !13839)
!13842 = !DILocation(line: 0, scope: !13627, inlinedAt: !13841)
!13843 = !DILocation(line: 155, column: 7, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13845, file: !2209, line: 155, column: 7)
!13845 = distinct !DILexicalBlock(scope: !13846, file: !2209, line: 154, column: 24)
!13846 = distinct !DILexicalBlock(scope: !13834, file: !2209, line: 154, column: 2)
!13847 = !DILocation(line: 155, column: 7, scope: !13845)
!13848 = !DILocation(line: 156, column: 4, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13844, file: !2209, line: 155, column: 39)
!13850 = !DILocation(line: 158, column: 3, scope: !13849)
!13851 = !DILocation(line: 0, scope: !13686, inlinedAt: !13852)
!13852 = distinct !DILocation(line: 154, column: 2, scope: !13846)
!13853 = !DILocation(line: 0, scope: !13694, inlinedAt: !13854)
!13854 = distinct !DILocation(line: 215, column: 2, scope: !13686, inlinedAt: !13852)
!13855 = !DILocation(line: 95, column: 2, scope: !13694, inlinedAt: !13854)
!13856 = !DILocation(line: 161, column: 2, scope: !13827)
!13857 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !243, file: !243, line: 225, type: !13858, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13862)
!13858 = !DISubroutineType(types: !13859)
!13859 = !{!126, !13860}
!13860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13861, size: 32)
!13861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2186)
!13862 = !{!13863}
!13863 = !DILocalVariable(name: "node", arg: 1, scope: !13857, file: !243, line: 225, type: !13860)
!13864 = !DILocation(line: 0, scope: !13857)
!13865 = !DILocation(line: 227, column: 15, scope: !13857)
!13866 = !DILocation(line: 227, column: 20, scope: !13857)
!13867 = !DILocation(line: 227, column: 2, scope: !13857)
!13868 = distinct !DISubprogram(name: "remove_timeout", scope: !2209, file: !2209, line: 53, type: !2203, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13869)
!13869 = !{!13870}
!13870 = !DILocalVariable(name: "t", arg: 1, scope: !13868, file: !2209, line: 53, type: !2182)
!13871 = !DILocation(line: 0, scope: !13868)
!13872 = !DILocation(line: 55, column: 6, scope: !13873)
!13873 = distinct !DILexicalBlock(scope: !13868, file: !2209, line: 55, column: 6)
!13874 = !DILocation(line: 55, column: 14, scope: !13873)
!13875 = !DILocation(line: 55, column: 6, scope: !13868)
!13876 = !DILocation(line: 56, column: 25, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !13873, file: !2209, line: 55, column: 23)
!13878 = !DILocation(line: 56, column: 12, scope: !13877)
!13879 = !DILocation(line: 56, column: 19, scope: !13877)
!13880 = !DILocation(line: 57, column: 2, scope: !13877)
!13881 = !DILocation(line: 59, column: 23, scope: !13868)
!13882 = !DILocation(line: 59, column: 2, scope: !13868)
!13883 = !DILocation(line: 60, column: 1, scope: !13868)
!13884 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !243, file: !243, line: 496, type: !13885, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13887)
!13885 = !DISubroutineType(types: !13886)
!13886 = !{null, !13713}
!13887 = !{!13888, !13889, !13890}
!13888 = !DILocalVariable(name: "node", arg: 1, scope: !13884, file: !243, line: 496, type: !13713)
!13889 = !DILocalVariable(name: "prev", scope: !13884, file: !243, line: 498, type: !13725)
!13890 = !DILocalVariable(name: "next", scope: !13884, file: !243, line: 499, type: !13725)
!13891 = !DILocation(line: 0, scope: !13884)
!13892 = !DILocation(line: 498, column: 34, scope: !13884)
!13893 = !DILocation(line: 499, column: 34, scope: !13884)
!13894 = !DILocation(line: 501, column: 8, scope: !13884)
!13895 = !DILocation(line: 501, column: 13, scope: !13884)
!13896 = !DILocation(line: 502, column: 8, scope: !13884)
!13897 = !DILocation(line: 502, column: 13, scope: !13884)
!13898 = !DILocation(line: 503, column: 2, scope: !13884)
!13899 = !DILocation(line: 504, column: 1, scope: !13884)
!13900 = distinct !DISubprogram(name: "sys_dnode_init", scope: !243, file: !243, line: 211, type: !13885, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13901)
!13901 = !{!13902}
!13902 = !DILocalVariable(name: "node", arg: 1, scope: !13900, file: !243, line: 211, type: !13713)
!13903 = !DILocation(line: 0, scope: !13900)
!13904 = !DILocation(line: 213, column: 8, scope: !13900)
!13905 = !DILocation(line: 213, column: 13, scope: !13900)
!13906 = !DILocation(line: 214, column: 8, scope: !13900)
!13907 = !DILocation(line: 214, column: 13, scope: !13900)
!13908 = !DILocation(line: 215, column: 1, scope: !13900)
!13909 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2209, file: !2209, line: 183, type: !13910, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13914)
!13910 = !DISubroutineType(types: !13911)
!13911 = !{!1382, !13912}
!13912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13913, size: 32)
!13913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2183)
!13914 = !{!13915, !13916, !13917, !13919}
!13915 = !DILocalVariable(name: "timeout", arg: 1, scope: !13909, file: !2209, line: 183, type: !13912)
!13916 = !DILocalVariable(name: "ticks", scope: !13909, file: !2209, line: 185, type: !1382)
!13917 = !DILocalVariable(name: "__i", scope: !13918, file: !2209, line: 187, type: !13596)
!13918 = distinct !DILexicalBlock(scope: !13909, file: !2209, line: 187, column: 2)
!13919 = !DILocalVariable(name: "__key", scope: !13918, file: !2209, line: 187, type: !13596)
!13920 = !DILocation(line: 0, scope: !13909)
!13921 = !DILocation(line: 0, scope: !13918)
!13922 = !DILocation(line: 0, scope: !13618, inlinedAt: !13923)
!13923 = distinct !DILocation(line: 187, column: 2, scope: !13918)
!13924 = !DILocation(line: 55, column: 2, scope: !13627, inlinedAt: !13925)
!13925 = distinct !DILocation(line: 145, column: 10, scope: !13618, inlinedAt: !13923)
!13926 = !DILocation(line: 0, scope: !13627, inlinedAt: !13925)
!13927 = !DILocation(line: 188, column: 11, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13929, file: !2209, line: 187, column: 24)
!13929 = distinct !DILexicalBlock(scope: !13918, file: !2209, line: 187, column: 2)
!13930 = !DILocation(line: 0, scope: !13686, inlinedAt: !13931)
!13931 = distinct !DILocation(line: 187, column: 2, scope: !13929)
!13932 = !DILocation(line: 0, scope: !13694, inlinedAt: !13933)
!13933 = distinct !DILocation(line: 215, column: 2, scope: !13686, inlinedAt: !13931)
!13934 = !DILocation(line: 95, column: 2, scope: !13694, inlinedAt: !13933)
!13935 = !DILocation(line: 191, column: 2, scope: !13909)
!13936 = distinct !DISubprogram(name: "timeout_rem", scope: !2209, file: !2209, line: 165, type: !13910, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13937)
!13937 = !{!13938, !13939, !13940}
!13938 = !DILocalVariable(name: "timeout", arg: 1, scope: !13936, file: !2209, line: 165, type: !13912)
!13939 = !DILocalVariable(name: "ticks", scope: !13936, file: !2209, line: 167, type: !1382)
!13940 = !DILocalVariable(name: "t", scope: !13941, file: !2209, line: 173, type: !2182)
!13941 = distinct !DILexicalBlock(scope: !13936, file: !2209, line: 173, column: 2)
!13942 = !DILocation(line: 0, scope: !13936)
!13943 = !DILocation(line: 169, column: 6, scope: !13944)
!13944 = distinct !DILexicalBlock(scope: !13936, file: !2209, line: 169, column: 6)
!13945 = !DILocation(line: 169, column: 6, scope: !13936)
!13946 = !DILocation(line: 173, column: 28, scope: !13941)
!13947 = !DILocation(line: 0, scope: !13941)
!13948 = !DILocation(line: 173, column: 39, scope: !13949)
!13949 = distinct !DILexicalBlock(scope: !13941, file: !2209, line: 173, column: 2)
!13950 = !DILocation(line: 173, column: 2, scope: !13941)
!13951 = !DILocation(line: 174, column: 15, scope: !13952)
!13952 = distinct !DILexicalBlock(scope: !13949, file: !2209, line: 173, column: 61)
!13953 = !DILocation(line: 174, column: 9, scope: !13952)
!13954 = !DILocation(line: 175, column: 15, scope: !13955)
!13955 = distinct !DILexicalBlock(scope: !13952, file: !2209, line: 175, column: 7)
!13956 = !DILocation(line: 175, column: 7, scope: !13952)
!13957 = !DILocation(line: 173, column: 52, scope: !13949)
!13958 = distinct !{!13958, !13950, !13959}
!13959 = !DILocation(line: 178, column: 2, scope: !13941)
!13960 = !DILocation(line: 180, column: 17, scope: !13936)
!13961 = !DILocation(line: 180, column: 15, scope: !13936)
!13962 = !DILocation(line: 180, column: 2, scope: !13936)
!13963 = !DILocation(line: 181, column: 1, scope: !13936)
!13964 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11274, file: !11274, line: 35, type: !13965, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13967)
!13965 = !DISubroutineType(types: !13966)
!13966 = !{!126, !13912}
!13967 = !{!13968}
!13968 = !DILocalVariable(name: "to", arg: 1, scope: !13964, file: !11274, line: 35, type: !13912)
!13969 = !DILocation(line: 0, scope: !13964)
!13970 = !DILocation(line: 37, column: 35, scope: !13964)
!13971 = !DILocation(line: 37, column: 10, scope: !13964)
!13972 = !DILocation(line: 37, column: 9, scope: !13964)
!13973 = !DILocation(line: 37, column: 2, scope: !13964)
!13974 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2209, file: !2209, line: 194, type: !13910, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !13975)
!13975 = !{!13976, !13977, !13978, !13980}
!13976 = !DILocalVariable(name: "timeout", arg: 1, scope: !13974, file: !2209, line: 194, type: !13912)
!13977 = !DILocalVariable(name: "ticks", scope: !13974, file: !2209, line: 196, type: !1382)
!13978 = !DILocalVariable(name: "__i", scope: !13979, file: !2209, line: 198, type: !13596)
!13979 = distinct !DILexicalBlock(scope: !13974, file: !2209, line: 198, column: 2)
!13980 = !DILocalVariable(name: "__key", scope: !13979, file: !2209, line: 198, type: !13596)
!13981 = !DILocation(line: 0, scope: !13974)
!13982 = !DILocation(line: 0, scope: !13979)
!13983 = !DILocation(line: 0, scope: !13618, inlinedAt: !13984)
!13984 = distinct !DILocation(line: 198, column: 2, scope: !13979)
!13985 = !DILocation(line: 55, column: 2, scope: !13627, inlinedAt: !13986)
!13986 = distinct !DILocation(line: 145, column: 10, scope: !13618, inlinedAt: !13984)
!13987 = !DILocation(line: 0, scope: !13627, inlinedAt: !13986)
!13988 = !DILocation(line: 199, column: 11, scope: !13989)
!13989 = distinct !DILexicalBlock(scope: !13990, file: !2209, line: 198, column: 24)
!13990 = distinct !DILexicalBlock(scope: !13979, file: !2209, line: 198, column: 2)
!13991 = !DILocation(line: 199, column: 23, scope: !13989)
!13992 = !DILocation(line: 0, scope: !13686, inlinedAt: !13993)
!13993 = distinct !DILocation(line: 198, column: 2, scope: !13990)
!13994 = !DILocation(line: 0, scope: !13694, inlinedAt: !13995)
!13995 = distinct !DILocation(line: 215, column: 2, scope: !13686, inlinedAt: !13993)
!13996 = !DILocation(line: 95, column: 2, scope: !13694, inlinedAt: !13995)
!13997 = !DILocation(line: 199, column: 21, scope: !13989)
!13998 = !DILocation(line: 202, column: 2, scope: !13974)
!13999 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2209, file: !2209, line: 205, type: !13702, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !14000)
!14000 = !{!14001, !14002, !14004}
!14001 = !DILocalVariable(name: "ret", scope: !13999, file: !2209, line: 207, type: !588)
!14002 = !DILocalVariable(name: "__i", scope: !14003, file: !2209, line: 209, type: !13596)
!14003 = distinct !DILexicalBlock(scope: !13999, file: !2209, line: 209, column: 2)
!14004 = !DILocalVariable(name: "__key", scope: !14003, file: !2209, line: 209, type: !13596)
!14005 = !DILocation(line: 0, scope: !13999)
!14006 = !DILocation(line: 0, scope: !14003)
!14007 = !DILocation(line: 0, scope: !13618, inlinedAt: !14008)
!14008 = distinct !DILocation(line: 209, column: 2, scope: !14003)
!14009 = !DILocation(line: 55, column: 2, scope: !13627, inlinedAt: !14010)
!14010 = distinct !DILocation(line: 145, column: 10, scope: !13618, inlinedAt: !14008)
!14011 = !DILocation(line: 0, scope: !13627, inlinedAt: !14010)
!14012 = !DILocation(line: 210, column: 9, scope: !14013)
!14013 = distinct !DILexicalBlock(scope: !14014, file: !2209, line: 209, column: 24)
!14014 = distinct !DILexicalBlock(scope: !14003, file: !2209, line: 209, column: 2)
!14015 = !DILocation(line: 0, scope: !13686, inlinedAt: !14016)
!14016 = distinct !DILocation(line: 209, column: 2, scope: !14014)
!14017 = !DILocation(line: 0, scope: !13694, inlinedAt: !14018)
!14018 = distinct !DILocation(line: 215, column: 2, scope: !13686, inlinedAt: !14016)
!14019 = !DILocation(line: 95, column: 2, scope: !13694, inlinedAt: !14018)
!14020 = !DILocation(line: 212, column: 2, scope: !13999)
!14021 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2209, file: !2209, line: 215, type: !8869, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !14022)
!14022 = !{!14023, !14024, !14025, !14027, !14028, !14031, !14032}
!14023 = !DILocalVariable(name: "ticks", arg: 1, scope: !14021, file: !2209, line: 215, type: !588)
!14024 = !DILocalVariable(name: "is_idle", arg: 2, scope: !14021, file: !2209, line: 215, type: !126)
!14025 = !DILocalVariable(name: "__i", scope: !14026, file: !2209, line: 217, type: !13596)
!14026 = distinct !DILexicalBlock(scope: !14021, file: !2209, line: 217, column: 2)
!14027 = !DILocalVariable(name: "__key", scope: !14026, file: !2209, line: 217, type: !13596)
!14028 = !DILocalVariable(name: "next_to", scope: !14029, file: !2209, line: 218, type: !104)
!14029 = distinct !DILexicalBlock(scope: !14030, file: !2209, line: 217, column: 24)
!14030 = distinct !DILexicalBlock(scope: !14026, file: !2209, line: 217, column: 2)
!14031 = !DILocalVariable(name: "sooner", scope: !14029, file: !2209, line: 219, type: !126)
!14032 = !DILocalVariable(name: "imminent", scope: !14029, file: !2209, line: 221, type: !126)
!14033 = !DILocation(line: 0, scope: !14021)
!14034 = !DILocation(line: 0, scope: !14026)
!14035 = !DILocation(line: 0, scope: !13618, inlinedAt: !14036)
!14036 = distinct !DILocation(line: 217, column: 2, scope: !14026)
!14037 = !DILocation(line: 55, column: 2, scope: !13627, inlinedAt: !14038)
!14038 = distinct !DILocation(line: 145, column: 10, scope: !13618, inlinedAt: !14036)
!14039 = !DILocation(line: 0, scope: !13627, inlinedAt: !14038)
!14040 = !DILocation(line: 218, column: 17, scope: !14029)
!14041 = !DILocation(line: 0, scope: !14029)
!14042 = !DILocation(line: 221, column: 27, scope: !14029)
!14043 = !DILocation(line: 233, column: 17, scope: !14044)
!14044 = distinct !DILexicalBlock(scope: !14029, file: !2209, line: 233, column: 7)
!14045 = !DILocation(line: 234, column: 26, scope: !14046)
!14046 = distinct !DILexicalBlock(scope: !14044, file: !2209, line: 233, column: 56)
!14047 = !DILocation(line: 234, column: 4, scope: !14046)
!14048 = !DILocation(line: 235, column: 3, scope: !14046)
!14049 = !DILocation(line: 0, scope: !13686, inlinedAt: !14050)
!14050 = distinct !DILocation(line: 217, column: 2, scope: !14030)
!14051 = !DILocation(line: 0, scope: !13694, inlinedAt: !14052)
!14052 = distinct !DILocation(line: 215, column: 2, scope: !13686, inlinedAt: !14050)
!14053 = !DILocation(line: 95, column: 2, scope: !13694, inlinedAt: !14052)
!14054 = !DILocation(line: 237, column: 1, scope: !14021)
!14055 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2209, file: !2209, line: 239, type: !14056, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !14058)
!14056 = !DISubroutineType(types: !14057)
!14057 = !{null, !588}
!14058 = !{!14059, !14060, !14061, !14063}
!14059 = !DILocalVariable(name: "ticks", arg: 1, scope: !14055, file: !2209, line: 239, type: !588)
!14060 = !DILocalVariable(name: "key", scope: !14055, file: !2209, line: 245, type: !13596)
!14061 = !DILocalVariable(name: "t", scope: !14062, file: !2209, line: 262, type: !2182)
!14062 = distinct !DILexicalBlock(scope: !14055, file: !2209, line: 261, column: 67)
!14063 = !DILocalVariable(name: "dt", scope: !14062, file: !2209, line: 263, type: !104)
!14064 = !DILocation(line: 0, scope: !14055)
!14065 = !DILocation(line: 242, column: 2, scope: !14055)
!14066 = !DILocation(line: 0, scope: !13618, inlinedAt: !14067)
!14067 = distinct !DILocation(line: 245, column: 25, scope: !14055)
!14068 = !DILocation(line: 55, column: 2, scope: !13627, inlinedAt: !14069)
!14069 = distinct !DILocation(line: 145, column: 10, scope: !13618, inlinedAt: !14067)
!14070 = !DILocation(line: 0, scope: !13627, inlinedAt: !14069)
!14071 = !DILocation(line: 261, column: 9, scope: !14055)
!14072 = !DILocation(line: 261, column: 17, scope: !14055)
!14073 = !DILocation(line: 261, column: 25, scope: !14055)
!14074 = !DILocation(line: 261, column: 37, scope: !14055)
!14075 = !DILocation(line: 261, column: 47, scope: !14055)
!14076 = !DILocation(line: 261, column: 44, scope: !14055)
!14077 = !DILocation(line: 261, column: 2, scope: !14055)
!14078 = !DILocation(line: 0, scope: !14062)
!14079 = !DILocation(line: 263, column: 12, scope: !14062)
!14080 = !DILocation(line: 265, column: 16, scope: !14062)
!14081 = !DILocation(line: 265, column: 13, scope: !14062)
!14082 = !DILocation(line: 266, column: 13, scope: !14062)
!14083 = !DILocation(line: 267, column: 3, scope: !14062)
!14084 = !DILocation(line: 0, scope: !13686, inlinedAt: !14085)
!14085 = distinct !DILocation(line: 269, column: 3, scope: !14062)
!14086 = !DILocation(line: 0, scope: !13694, inlinedAt: !14087)
!14087 = distinct !DILocation(line: 215, column: 2, scope: !13686, inlinedAt: !14085)
!14088 = !DILocation(line: 95, column: 2, scope: !13694, inlinedAt: !14087)
!14089 = !DILocation(line: 270, column: 6, scope: !14062)
!14090 = !DILocation(line: 270, column: 3, scope: !14062)
!14091 = !DILocation(line: 0, scope: !13618, inlinedAt: !14092)
!14092 = distinct !DILocation(line: 271, column: 9, scope: !14062)
!14093 = !DILocation(line: 55, column: 2, scope: !13627, inlinedAt: !14094)
!14094 = distinct !DILocation(line: 145, column: 10, scope: !13618, inlinedAt: !14092)
!14095 = !DILocation(line: 0, scope: !13627, inlinedAt: !14094)
!14096 = !DILocation(line: 272, column: 22, scope: !14062)
!14097 = distinct !{!14097, !14077, !14098}
!14098 = !DILocation(line: 273, column: 2, scope: !14055)
!14099 = !DILocation(line: 276, column: 19, scope: !14100)
!14100 = distinct !DILexicalBlock(scope: !14101, file: !2209, line: 275, column: 23)
!14101 = distinct !DILexicalBlock(scope: !14055, file: !2209, line: 275, column: 6)
!14102 = !DILocation(line: 277, column: 2, scope: !14100)
!14103 = !DILocation(line: 279, column: 15, scope: !14055)
!14104 = !DILocation(line: 279, column: 12, scope: !14055)
!14105 = !DILocation(line: 280, column: 21, scope: !14055)
!14106 = !DILocation(line: 282, column: 24, scope: !14055)
!14107 = !DILocation(line: 282, column: 2, scope: !14055)
!14108 = !DILocation(line: 0, scope: !13686, inlinedAt: !14109)
!14109 = distinct !DILocation(line: 284, column: 2, scope: !14055)
!14110 = !DILocation(line: 0, scope: !13694, inlinedAt: !14111)
!14111 = distinct !DILocation(line: 215, column: 2, scope: !13686, inlinedAt: !14109)
!14112 = !DILocation(line: 95, column: 2, scope: !13694, inlinedAt: !14111)
!14113 = !DILocation(line: 285, column: 1, scope: !14055)
!14114 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2209, file: !2209, line: 287, type: !14115, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !14117)
!14115 = !DISubroutineType(types: !14116)
!14116 = !{!302}
!14117 = !{!14118, !14119, !14121}
!14118 = !DILocalVariable(name: "t", scope: !14114, file: !2209, line: 289, type: !1294)
!14119 = !DILocalVariable(name: "__i", scope: !14120, file: !2209, line: 291, type: !13596)
!14120 = distinct !DILexicalBlock(scope: !14114, file: !2209, line: 291, column: 2)
!14121 = !DILocalVariable(name: "__key", scope: !14120, file: !2209, line: 291, type: !13596)
!14122 = !DILocation(line: 0, scope: !14114)
!14123 = !DILocation(line: 0, scope: !14120)
!14124 = !DILocation(line: 0, scope: !13618, inlinedAt: !14125)
!14125 = distinct !DILocation(line: 291, column: 2, scope: !14120)
!14126 = !DILocation(line: 55, column: 2, scope: !13627, inlinedAt: !14127)
!14127 = distinct !DILocation(line: 145, column: 10, scope: !13618, inlinedAt: !14125)
!14128 = !DILocation(line: 0, scope: !13627, inlinedAt: !14127)
!14129 = !DILocation(line: 292, column: 7, scope: !14130)
!14130 = distinct !DILexicalBlock(scope: !14131, file: !2209, line: 291, column: 24)
!14131 = distinct !DILexicalBlock(scope: !14120, file: !2209, line: 291, column: 2)
!14132 = !DILocation(line: 292, column: 19, scope: !14130)
!14133 = !DILocation(line: 0, scope: !13686, inlinedAt: !14134)
!14134 = distinct !DILocation(line: 291, column: 2, scope: !14131)
!14135 = !DILocation(line: 0, scope: !13694, inlinedAt: !14136)
!14136 = distinct !DILocation(line: 215, column: 2, scope: !13686, inlinedAt: !14134)
!14137 = !DILocation(line: 95, column: 2, scope: !13694, inlinedAt: !14136)
!14138 = !DILocation(line: 292, column: 17, scope: !14130)
!14139 = !DILocation(line: 294, column: 2, scope: !14114)
!14140 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2209, file: !2209, line: 297, type: !5012, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !344)
!14141 = !DILocation(line: 300, column: 19, scope: !14140)
!14142 = !DILocation(line: 300, column: 9, scope: !14140)
!14143 = !DILocation(line: 300, column: 2, scope: !14140)
!14144 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2209, file: !2209, line: 306, type: !14115, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !344)
!14145 = !DILocation(line: 308, column: 9, scope: !14144)
!14146 = !DILocation(line: 308, column: 2, scope: !14144)
!14147 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2209, file: !2209, line: 319, type: !5022, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !14148)
!14148 = !{!14149, !14150, !14151, !14152}
!14149 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !14147, file: !2209, line: 319, type: !155)
!14150 = !DILocalVariable(name: "start_cycles", scope: !14147, file: !2209, line: 328, type: !155)
!14151 = !DILocalVariable(name: "cycles_to_wait", scope: !14147, file: !2209, line: 331, type: !155)
!14152 = !DILocalVariable(name: "current_cycles", scope: !14153, file: !2209, line: 338, type: !155)
!14153 = distinct !DILexicalBlock(scope: !14154, file: !2209, line: 337, column: 11)
!14154 = distinct !DILexicalBlock(scope: !14155, file: !2209, line: 337, column: 2)
!14155 = distinct !DILexicalBlock(scope: !14147, file: !2209, line: 337, column: 2)
!14156 = !DILocation(line: 0, scope: !14147)
!14157 = !DILocation(line: 322, column: 19, scope: !14158)
!14158 = distinct !DILexicalBlock(scope: !14147, file: !2209, line: 322, column: 6)
!14159 = !DILocation(line: 322, column: 6, scope: !14147)
!14160 = !DILocation(line: 328, column: 26, scope: !14147)
!14161 = !DILocation(line: 333, column: 43, scope: !14147)
!14162 = !DILocation(line: 337, column: 2, scope: !14147)
!14163 = !DILocation(line: 338, column: 29, scope: !14153)
!14164 = !DILocation(line: 0, scope: !14153)
!14165 = !DILocation(line: 341, column: 23, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !14153, file: !2209, line: 341, column: 7)
!14167 = !DILocation(line: 341, column: 39, scope: !14166)
!14168 = !DILocation(line: 349, column: 1, scope: !14147)
!14169 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !329, file: !329, line: 1675, type: !5012, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !344)
!14170 = !DILocation(line: 1677, column: 9, scope: !14169)
!14171 = !DILocation(line: 1677, column: 2, scope: !14169)
!14172 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !14173, file: !14173, line: 24, type: !5012, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !344)
!14173 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14174 = !DILocation(line: 26, column: 9, scope: !14172)
!14175 = !DILocation(line: 26, column: 2, scope: !14172)
!14176 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2209, file: !2209, line: 364, type: !14177, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !14179)
!14177 = !DISubroutineType(types: !14178)
!14178 = !{!1294, !13586}
!14179 = !{!14180, !14181}
!14180 = !DILocalVariable(name: "timeout", arg: 1, scope: !14176, file: !2209, line: 364, type: !13586)
!14181 = !DILocalVariable(name: "dt", scope: !14176, file: !2209, line: 366, type: !1382)
!14182 = !DILocation(line: 0, scope: !14176)
!14183 = !DILocation(line: 368, column: 6, scope: !14176)
!14184 = !DILocation(line: 371, column: 10, scope: !14185)
!14185 = distinct !DILexicalBlock(scope: !14186, file: !2209, line: 370, column: 47)
!14186 = distinct !DILexicalBlock(scope: !14187, file: !2209, line: 370, column: 13)
!14187 = distinct !DILexicalBlock(scope: !14176, file: !2209, line: 368, column: 6)
!14188 = !DILocation(line: 371, column: 3, scope: !14185)
!14189 = !DILocation(line: 376, column: 58, scope: !14190)
!14190 = distinct !DILexicalBlock(scope: !14191, file: !2209, line: 376, column: 7)
!14191 = distinct !DILexicalBlock(scope: !14186, file: !2209, line: 372, column: 9)
!14192 = !DILocation(line: 376, column: 7, scope: !14191)
!14193 = !DILocation(line: 376, column: 43, scope: !14190)
!14194 = !DILocation(line: 377, column: 4, scope: !14195)
!14195 = distinct !DILexicalBlock(scope: !14190, file: !2209, line: 376, column: 64)
!14196 = !DILocation(line: 379, column: 10, scope: !14191)
!14197 = !DILocation(line: 379, column: 33, scope: !14191)
!14198 = !DILocation(line: 379, column: 31, scope: !14191)
!14199 = !DILocation(line: 379, column: 3, scope: !14191)
!14200 = !DILocation(line: 0, scope: !14187)
!14201 = !DILocation(line: 381, column: 1, scope: !14176)
!14202 = distinct !DISubprogram(name: "boot_banner", scope: !14203, file: !14203, line: 26, type: !2800, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2786, retainedNodes: !344)
!14203 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14204 = !DILocation(line: 34, column: 2, scope: !14202)
!14205 = !DILocation(line: 36, column: 1, scope: !14202)
