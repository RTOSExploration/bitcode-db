; ModuleID = 'build/96b_neonkey/metairq_dispatch/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.k_spinlock] }
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.k_sem = type { %union.anon, i32, i32 }
%struct.thread_rec = type { %struct.k_thread, %struct.k_msgq, [16 x %struct.msg] }
%struct.k_msgq = type { %union.anon, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct.msg = type { i32, i32, i32, i32, i32 }
%struct.anon.3 = type { i32, [40 x i32], [4 x %struct.anon.4] }
%struct.anon.4 = type { i32, [20 x i32] }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [86 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [86 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238456 to i8*), void (i8*)* inttoptr (i32 134237067 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238456 to i8*), void (i8*)* inttoptr (i32 134237047 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238456 to i8*), void (i8*)* inttoptr (i32 134237037 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238456 to i8*), void (i8*)* inttoptr (i32 134237137 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238456 to i8*), void (i8*)* inttoptr (i32 134237127 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238456 to i8*), void (i8*)* inttoptr (i32 134237117 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238456 to i8*), void (i8*)* inttoptr (i32 134237107 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238456 to i8*), void (i8*)* inttoptr (i32 134237097 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238456 to i8*), void (i8*)* inttoptr (i32 134237087 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238456 to i8*), void (i8*)* inttoptr (i32 134237077 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238456 to i8*), void (i8*)* inttoptr (i32 134237057 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [46 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_metairq_thread to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.k_sem* @report_cookie to i8*), i8* bitcast (%struct.k_msgq* @hw_msgs to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_39 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_67 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_68 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_69 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_70 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_71 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_72 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_73 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_67 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_68 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_69 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_70 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_71 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_72 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_73 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 3 }, section ".log_const_main", align 4, !dbg !25
@_k_thread_obj_metairq_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !324
@_k_thread_stack_metairq_thread = dso_local global [2112 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.1", align 64, !dbg !320
@.str.1 = private unnamed_addr constant [15 x i8] c"metairq_thread\00", align 1
@_k_thread_data_metairq_thread = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_metairq_thread, %struct.z_thread_stack_element* getelementptr inbounds ([2112 x %struct.z_thread_stack_element], [2112 x %struct.z_thread_stack_element]* @_k_thread_stack_metairq_thread, i32 0, i32 0), i32 2048, void (i8*, i8*, i8*)* @metairq_fn, i8* null, i8* null, i8* null, i32 -16, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_metairq_thread", align 4, !dbg !118
@metairq_thread = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_metairq_thread, align 4, !dbg !271
@report_cookie = dso_local global %struct.k_sem { %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @report_cookie, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @report_cookie, i32 0, i32 0, i32 0) } } }, i32 1, i32 1 }, section "._k_sem.static.report_cookie", align 4, !dbg !275
@threads = internal global [4 x %struct.thread_rec] zeroinitializer, align 8, !dbg !282
@thread_stacks = dso_local global [4 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !315
@stats = dso_local global %struct.anon.3 zeroinitializer, align 4, !dbg !326
@.str.2 = private unnamed_addr constant [46 x i8] c"%c: Thread %d queue full, message %d dropped\0A\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"%c: Starting Thread%d at priority %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"ret == 0\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"CMAKE_SOURCE_DIR/src/main.c\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"%c: M%d T%d mirq %d disp %d proc %d real %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [49 x i8] c"%c:         ---------- Latency (cyc) ----------\0A\00", align 1
@.str.9 = private unnamed_addr constant [49 x i8] c"%c:             Best    Worst     Mean    Stdev\0A\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"%c: MetaIRQ %8d %8d %8d %8d\0A\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"%c: No events for thread %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"%c: Thread%d %8d %8d %8d %8d\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: MetaIRQ Test Complete\0A\00", align 1
@hw_msgs = dso_local global %struct.k_msgq { %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @hw_msgs, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @hw_msgs, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 20, i32 2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i64 1, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static.hw_msgs", align 4, !dbg !352
@_k_fifo_buf_hw_msgs = internal global [40 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/msgdev.c\22.0", align 4, !dbg !389
@max_duty_cyc = dso_local local_unnamed_addr global i32 0, align 4, !dbg !385
@timeout = internal global %struct._timeout zeroinitializer, align 8, !dbg !358
@.str.14 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.24 = private unnamed_addr constant [9 x i8] c"ret == 0\00", align 1
@.str.2.16 = private unnamed_addr constant [30 x i8] c"CMAKE_SOURCE_DIR/src/msgdev.c\00", align 1
@msg_seq = dso_local local_unnamed_addr global i32 0, align 4, !dbg !387
@.str.3.15 = private unnamed_addr constant [14 x i8] c"t == &timeout\00", align 1
@.str.4.19 = private unnamed_addr constant [35 x i8] c"ERROR: Queue full, event dropped!\0A\00", align 1
@rand32.state = internal unnamed_addr global i64 0, align 8, !dbg !392
@.str.25 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !418
@.str.1.27 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.28 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.29 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.30 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.31 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.32 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.33 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.34 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.35 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10.36 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11.37 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12.38 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !440
@.str.43 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.44 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.45 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.46 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.47 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.48 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.49 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.50 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.51 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.52 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.53 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11.54 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12.55 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13.56 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !450
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !501
@.str.69 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.71 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.72 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.70 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.74 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.75 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.73 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.76 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.77 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.78 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.79 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.80 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.81 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.82 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.83 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.86 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.87 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.88 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.89 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.101 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.93 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.94 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.95 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.96 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.97 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.98 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.99 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.100 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.91 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14.92 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25.90 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.107 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !530
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !663
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !536
@.str.113 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.114 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.115 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.116 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.121 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.122 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !672
@.str.6.123 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.124 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.117 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.118 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !708
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.133, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.134, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !718
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !723
@.str.133 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.134 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.137 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.138 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.139 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !743
@__devicehdl_dts_ord_39 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !913
@.str.4.135 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_39 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !875
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !858
@__device_dts_ord_39 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.135, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_39, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_39, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !831
@__init___device_dts_ord_39 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_39 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !847
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !877
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !890
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !892
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !894
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !896
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !898
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !900
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !902
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !904
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !906
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_39 to i8*) }, section ".intList", align 4, !dbg !908
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !918
@.str.140 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !945
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1042
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1031
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 -134, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1083
@__devicehdl_dts_ord_67 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !938
@.str.149 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1149
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1425
@__devstate_dts_ord_67 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1395
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1381
@__init___device_dts_ord_67 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_67 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1326
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !936
@.str.1.157 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1427
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1399
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1397
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1343
@__devicehdl_dts_ord_68 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !934
@.str.2.158 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1440
@__devstate_dts_ord_68 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1403
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1401
@__init___device_dts_ord_68 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_68 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1349
@__devicehdl_dts_ord_69 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !932
@.str.3.159 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1442
@__devstate_dts_ord_69 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1407
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1405
@__init___device_dts_ord_69 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_69 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1355
@__devicehdl_dts_ord_70 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !930
@.str.4.160 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1444
@__devstate_dts_ord_70 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1411
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1409
@__init___device_dts_ord_70 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_70 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1361
@__devicehdl_dts_ord_71 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !928
@.str.5.161 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1446
@__devstate_dts_ord_71 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1415
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1413
@__init___device_dts_ord_71 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_71 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1367
@__devicehdl_dts_ord_72 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !926
@.str.6.162 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1448
@__devstate_dts_ord_72 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1419
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1417
@__init___device_dts_ord_72 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_72 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1373
@__devicehdl_dts_ord_73 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !924
@.str.7.163 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1450
@__devstate_dts_ord_73 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1423
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1421
@__init___device_dts_ord_73 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_73 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1379
@.str.8.150 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.156 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.152 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.155 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.151 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.153 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.154 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.167 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.167, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1452
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !940
@.str.1.170 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1608
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1663
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1606
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1665
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.170, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1597
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1599
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1652
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1655
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1657
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1660
@.str.2.172 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.173 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.4.174 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.5.175 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.6.176 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.7.179 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.181 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.182 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.140, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1015
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1676
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1785
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1787
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1783
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1778
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1752
@.str.186 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.187 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.188 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.189 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.190 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.191 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_67, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_68, %struct.device* @__device_dts_ord_69, %struct.device* @__device_dts_ord_70, %struct.device* @__device_dts_ord_71, %struct.device* @__device_dts_ord_72, %struct.device* @__device_dts_ord_73, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1789
@__device_dts_ord_67 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.149, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_67, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_67, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1324
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.157, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1341
@__device_dts_ord_68 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.158, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_68, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_68, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1347
@__device_dts_ord_69 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.159, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_69, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_69, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1353
@__device_dts_ord_70 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.160, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_70, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_70, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1359
@__device_dts_ord_71 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.161, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_71, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_71, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1365
@__device_dts_ord_72 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.162, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_72, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_72, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1371
@__device_dts_ord_73 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.163, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_73, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_73, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1377
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1879
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1921
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1924
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1929
@.str.222 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.226 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.227 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.228 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.229 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.230 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.6.231 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.7.232 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@.str.8.236 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.9.237 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.10.238 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.11.239 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.12.240 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.13.235 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.14.234 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.236, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.237, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10.238, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.239, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.240, i32 0, i32 0)], align 4
@.str.242 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.242, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1936
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2161
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2148
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2156
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2167
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2172
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.5.251 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.256, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.257, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.258, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.259, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.260, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.261, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.255, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.262, i32 0, i32 0)], align 4, !dbg !2202
@.str.256 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.257 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.258 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.259 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.260 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.261 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.255 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.262 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2316
@.str.8.254 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.265 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.266 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.267 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.268 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.272 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.273 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.276 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.277 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.286 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.287 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.288 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.295 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.296 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.297 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/msg_q.c\00", align 1
@.str.3.298 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.299 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.300 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.301 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.302 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.303 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@lock.308 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2329
@.str.309 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.315 = private unnamed_addr constant [78 x i8] c"((arch_is_in_isr() == 0) || ((timeout).ticks == (((k_timeout_t) {0})).ticks))\00", align 1
@.str.2.316 = private unnamed_addr constant [25 x i8] c"ZEPHYR_BASE/kernel/sem.c\00", align 1
@.str.3.317 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.310 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.311 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.312 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.318 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.319 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2354
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2464
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2467
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2469
@.str.320 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.340 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.327 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.347 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.357 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.330 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.352 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.326 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.364 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.365 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.373 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.374 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.375 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.376 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.321 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.322 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.323 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.324 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.325 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.329 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.344 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.353 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.354 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2158
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2165
@.str.23.368 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.382 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.383 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.384 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.385 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2471
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2501
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2506
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2023
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2504
@.str.4.386 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.387 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.388 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.392 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.393 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.413 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2512
@.str.415 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.424 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.417 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.425 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.416 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.418 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.421 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.422 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.423 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.426 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.427 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3266 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #26, !dbg !3268, !srcloc !3269
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #26, !dbg !3270, !srcloc !3271
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #26, !dbg !3272, !srcloc !3273
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -26) #26, !dbg !3274, !srcloc !3275
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -29) #26, !dbg !3276, !srcloc !3277
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #26, !dbg !3278, !srcloc !3279
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -29) #26, !dbg !3280, !srcloc !3281
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #26, !dbg !3282, !srcloc !3283
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -41) #26, !dbg !3284, !srcloc !3285
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #26, !dbg !3286, !srcloc !3287
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #26, !dbg !3288, !srcloc !3289
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #26, !dbg !3290, !srcloc !3291
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #26, !dbg !3292, !srcloc !3293
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #26, !dbg !3294, !srcloc !3295
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #26, !dbg !3296, !srcloc !3297
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #26, !dbg !3298, !srcloc !3299
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #26, !dbg !3300, !srcloc !3301
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #26, !dbg !3302, !srcloc !3303
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #26, !dbg !3304, !srcloc !3305
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #26, !dbg !3306, !srcloc !3307
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #26, !dbg !3308, !srcloc !3309
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #26, !dbg !3310, !srcloc !3311
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #26, !dbg !3312, !srcloc !3313
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #26, !dbg !3314, !srcloc !3315
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #26, !dbg !3316, !srcloc !3317
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #26, !dbg !3318, !srcloc !3319
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #26, !dbg !3320, !srcloc !3321
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #26, !dbg !3322, !srcloc !3325
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #26, !dbg !3326, !srcloc !3327
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #26, !dbg !3328, !srcloc !3329
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #26, !dbg !3330, !srcloc !3331
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #26, !dbg !3332, !srcloc !3333
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #26, !dbg !3334, !srcloc !3335
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #26, !dbg !3336, !srcloc !3337
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #26, !dbg !3338, !srcloc !3339
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #26, !dbg !3340, !srcloc !3341
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #26, !dbg !3342, !srcloc !3343
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #26, !dbg !3344, !srcloc !3345
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #26, !dbg !3346, !srcloc !3347
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #26, !dbg !3348, !srcloc !3349
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #26, !dbg !3350, !srcloc !3351
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #26, !dbg !3352, !srcloc !3353
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #26, !dbg !3354, !srcloc !3355
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #26, !dbg !3356, !srcloc !3357
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #26, !dbg !3358, !srcloc !3359
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #26, !dbg !3360, !srcloc !3361
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #26, !dbg !3362, !srcloc !3363
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #26, !dbg !3364, !srcloc !3365
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #26, !dbg !3366, !srcloc !3367
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #26, !dbg !3368, !srcloc !3369
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #26, !dbg !3370, !srcloc !3371
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #26, !dbg !3372, !srcloc !3373
  ret void, !dbg !3374
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @metairq_fn(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !3377 {
  %4 = alloca %struct.msg, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3379, metadata !DIExpression()), !dbg !3385
  call void @llvm.dbg.value(metadata i8* %1, metadata !3380, metadata !DIExpression()), !dbg !3385
  call void @llvm.dbg.value(metadata i8* %2, metadata !3381, metadata !DIExpression()), !dbg !3385
  %5 = bitcast %struct.msg* %4 to i8*
  %6 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4
  %8 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 2
  %9 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0
  br label %10, !dbg !3386

10:                                               ; preds = %3, %23
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #26, !dbg !3387
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !3382, metadata !DIExpression()), !dbg !3388
  call void @message_dev_fetch(%struct.msg* noundef nonnull %4) #27, !dbg !3389
  %11 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3390
  %12 = load i32, i32* %6, align 4, !dbg !3391
  %13 = sub i32 %11, %12, !dbg !3392
  store i32 %13, i32* %7, align 4, !dbg !3393
  %14 = load i32, i32* %8, align 4, !dbg !3394
  %15 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %14, i32 1, !dbg !3395
  %16 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %15, i8* noundef nonnull %5) #28, !dbg !3396
  call void @llvm.dbg.value(metadata i32 %16, metadata !3384, metadata !DIExpression()), !dbg !3397
  %17 = icmp eq i32 %16, 0, !dbg !3398
  br i1 %17, label %23, label %18, !dbg !3400

18:                                               ; preds = %10
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #28, !dbg !3401
  %20 = zext i8 %19 to i32, !dbg !3401
  %21 = load i32, i32* %8, align 4, !dbg !3401
  %22 = load i32, i32* %9, align 4, !dbg !3401
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i32 0, i32 0), i32 noundef %20, i32 noundef %21, i32 noundef %22) #27, !dbg !3401
  br label %23, !dbg !3407

23:                                               ; preds = %18, %10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #26, !dbg !3408
  br label %10, !dbg !3386, !llvm.loop !3409
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !3410 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #28, !dbg !3411
  ret i32 %1, !dbg !3412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3413 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3425, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !3423, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata i8* %1, metadata !3424, metadata !DIExpression()), !dbg !3426
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3427, !srcloc !3429
  %3 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] zeroinitializer) #27, !dbg !3430
  ret i32 %3, !dbg !3431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #5 !dbg !3432 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3437, metadata !DIExpression()), !dbg !3438
  %2 = icmp eq i32 %0, 2, !dbg !3439
  %3 = select i1 %2, i8 87, i8 63, !dbg !3439
  %4 = icmp eq i32 %0, 3, !dbg !3439
  %5 = select i1 %4, i8 73, i8 %3, !dbg !3439
  ret i8 %5, !dbg !3440
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !3441 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !3443
  ret i32 %1, !dbg !3444
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3445 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3447, metadata !DIExpression()), !dbg !3452
  br label %2, !dbg !3453

1:                                                ; preds = %2
  tail call void @message_dev_init() #27, !dbg !3454
  ret void, !dbg !3455

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %11, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !3447, metadata !DIExpression()), !dbg !3452
  %4 = add nsw i32 %3, -2, !dbg !3456
  call void @llvm.dbg.value(metadata i32 %4, metadata !3449, metadata !DIExpression()), !dbg !3457
  %5 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 1, !dbg !3458
  %6 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 2, i32 0, !dbg !3459
  %7 = bitcast %struct.msg* %6 to i8*, !dbg !3460
  tail call void @k_msgq_init(%struct.k_msgq* noundef nonnull %5, i8* noundef nonnull %7, i32 noundef 20, i32 noundef 16) #27, !dbg !3461
  %8 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 0, !dbg !3462
  %9 = getelementptr inbounds [4 x [2112 x %struct.z_thread_stack_element]], [4 x [2112 x %struct.z_thread_stack_element]]* @thread_stacks, i32 0, i32 %3, i32 0, !dbg !3463
  %10 = inttoptr i32 %3 to i8*, !dbg !3464
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull %8, %struct.z_thread_stack_element* noundef nonnull %9, i8* noundef %10, i32 noundef %4) #28, !dbg !3465
  %11 = add nuw nsw i32 %3, 1, !dbg !3466
  call void @llvm.dbg.value(metadata i32 %11, metadata !3447, metadata !DIExpression()), !dbg !3452
  %12 = icmp eq i32 %11, 4, !dbg !3467
  br i1 %12, label %1, label %2, !dbg !3453, !llvm.loop !3468
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !3470 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3483, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3474, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3475, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.value(metadata i32 2048, metadata !3476, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @thread_fn, metadata !3477, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.value(metadata i8* %2, metadata !3478, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.value(metadata i8* null, metadata !3479, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.value(metadata i8* null, metadata !3480, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.value(metadata i32 %3, metadata !3481, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.value(metadata i32 0, metadata !3482, metadata !DIExpression()), !dbg !3484
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3485, !srcloc !3487
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 2048, void (i8*, i8*, i8*)* noundef nonnull @thread_fn, i8* noundef %2, i8* noundef null, i8* noundef null, i32 noundef %3, i32 noundef 0, [1 x i64] zeroinitializer) #27, !dbg !3488
  ret void, !dbg !3489
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @thread_fn(i8* noundef %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !3490 {
  %4 = alloca %struct.msg, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3492, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %1, metadata !3493, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %2, metadata !3494, metadata !DIExpression()), !dbg !3505
  %6 = ptrtoint i8* %0 to i32, !dbg !3506
  call void @llvm.dbg.value(metadata i32 %6, metadata !3495, metadata !DIExpression()), !dbg !3505
  %7 = bitcast %struct.msg* %4 to i8*, !dbg !3507
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #26, !dbg !3507
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !3496, metadata !DIExpression()), !dbg !3508
  %8 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #28, !dbg !3509
  %9 = zext i8 %8 to i32, !dbg !3509
  %10 = tail call fastcc %struct.k_thread* @k_current_get() #29, !dbg !3509
  %11 = tail call fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %10) #28, !dbg !3509
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i32 0, i32 0), i32 noundef %9, i32 noundef %6, i32 noundef %11) #27, !dbg !3509
  %12 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %6, i32 1
  %13 = call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %12, i8* noundef nonnull %7) #28, !dbg !3514
  call void @llvm.dbg.value(metadata i32 %13, metadata !3497, metadata !DIExpression()), !dbg !3515
  %14 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3516
  call void @llvm.dbg.value(metadata i32 %14, metadata !3499, metadata !DIExpression()), !dbg !3515
  %15 = icmp eq i32 %13, 0, !dbg !3517
  br i1 %15, label %16, label %28, !dbg !3520

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 3
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0
  %19 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4
  %20 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1
  %21 = bitcast i32* %5 to i8*
  br label %22, !dbg !3520

22:                                               ; preds = %16, %42
  %23 = phi i32 [ %14, %16 ], [ %53, %42 ]
  %24 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3521
  %25 = sub i32 %24, %23, !dbg !3522
  %26 = load i32, i32* %17, align 4, !dbg !3523
  %27 = icmp ult i32 %25, %26, !dbg !3524
  br i1 %27, label %29, label %42, !dbg !3525

28:                                               ; preds = %42, %3
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 191) #27, !dbg !3526
  call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 191) #27, !dbg !3526
  unreachable, !dbg !3526

29:                                               ; preds = %22, %32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !3528
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3500, metadata !DIExpression()), !dbg !3529
  store volatile i32 0, i32* %5, align 4, !dbg !3529
  %30 = load volatile i32, i32* %5, align 4, !dbg !3530
  %31 = icmp slt i32 %30, 100, !dbg !3532
  br i1 %31, label %37, label %32, !dbg !3533

32:                                               ; preds = %37, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21), !dbg !3534
  %33 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3521
  %34 = sub i32 %33, %23, !dbg !3522
  %35 = load i32, i32* %17, align 4, !dbg !3523
  %36 = icmp ult i32 %34, %35, !dbg !3524
  br i1 %36, label %29, label %42, !dbg !3525, !llvm.loop !3535

37:                                               ; preds = %29, %37
  %38 = load volatile i32, i32* %5, align 4, !dbg !3537
  %39 = add nsw i32 %38, 1, !dbg !3537
  store volatile i32 %39, i32* %5, align 4, !dbg !3537
  %40 = load volatile i32, i32* %5, align 4, !dbg !3530
  %41 = icmp slt i32 %40, 100, !dbg !3532
  br i1 %41, label %37, label %32, !dbg !3533, !llvm.loop !3538

42:                                               ; preds = %32, %22
  %43 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3540
  %44 = sub i32 %43, %23, !dbg !3541
  call void @llvm.dbg.value(metadata i32 %44, metadata !3504, metadata !DIExpression()), !dbg !3515
  %45 = load i32, i32* %18, align 4, !dbg !3542
  %46 = load i32, i32* %19, align 4, !dbg !3542
  %47 = load i32, i32* %20, align 4, !dbg !3542
  %48 = sub i32 %23, %47, !dbg !3542
  %49 = load i32, i32* %17, align 4, !dbg !3542
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i32 0, i32 0), i32 noundef %9, i32 noundef %45, i32 noundef %6, i32 noundef %46, i32 noundef %48, i32 noundef %49, i32 noundef %44) #27, !dbg !3542
  %50 = load i32, i32* %20, align 4, !dbg !3547
  %51 = sub i32 %23, %50, !dbg !3548
  call fastcc void @record_latencies(%struct.msg* noundef nonnull %4, i32 noundef %51) #28, !dbg !3549
  %52 = call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %12, i8* noundef nonnull %7) #28, !dbg !3514
  call void @llvm.dbg.value(metadata i32 %52, metadata !3497, metadata !DIExpression()), !dbg !3515
  %53 = call fastcc i32 @k_cycle_get_32() #28, !dbg !3516
  call void @llvm.dbg.value(metadata i32 %53, metadata !3499, metadata !DIExpression()), !dbg !3515
  %54 = icmp eq i32 %52, 0, !dbg !3517
  br i1 %54, label %22, label %28, !dbg !3520, !llvm.loop !3550
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #6 !dbg !3553 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #29, !dbg !3556
  ret %struct.k_thread* %1, !dbg !3557
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3558 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3562, metadata !DIExpression()), !dbg !3563
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3564, !srcloc !3566
  %2 = tail call i32 @z_impl_k_thread_priority_get(%struct.k_thread* noundef %0) #27, !dbg !3567
  ret i32 %2, !dbg !3568
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3569 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3575, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !3573, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.value(metadata i8* %1, metadata !3574, metadata !DIExpression()), !dbg !3576
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3577, !srcloc !3579
  %3 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] [i64 -1]) #27, !dbg !3580
  ret i32 %3, !dbg !3581
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @record_latencies(%struct.msg* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !3582 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !3587, metadata !DIExpression()), !dbg !3600
  call void @llvm.dbg.value(metadata i32 %1, metadata !3588, metadata !DIExpression()), !dbg !3600
  %7 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 0, !dbg !3601
  %8 = load i32, i32* %7, align 4, !dbg !3601
  %9 = icmp ugt i32 %8, 39, !dbg !3603
  br i1 %9, label %60, label %10, !dbg !3604

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 2, !dbg !3605
  %12 = load i32, i32* %11, align 4, !dbg !3605
  call void @llvm.dbg.value(metadata i32 %12, metadata !3589, metadata !DIExpression()), !dbg !3600
  %13 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %12, i32 0, !dbg !3606
  %14 = load i32, i32* %13, align 4, !dbg !3607
  %15 = add i32 %14, 1, !dbg !3607
  store i32 %15, i32* %13, align 4, !dbg !3607
  call void @llvm.dbg.value(metadata i32 %14, metadata !3590, metadata !DIExpression()), !dbg !3600
  %16 = icmp ult i32 %14, 20, !dbg !3608
  br i1 %16, label %17, label %19, !dbg !3610

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %12, i32 1, i32 %14, !dbg !3611
  store i32 %1, i32* %18, align 4, !dbg !3613
  br label %19, !dbg !3614

19:                                               ; preds = %17, %10
  %20 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 4, !dbg !3615
  %21 = load i32, i32* %20, align 4, !dbg !3615
  %22 = tail call fastcc i32 @atomic_inc() #28, !dbg !3616
  %23 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 1, i32 %22, !dbg !3617
  store i32 %21, i32* %23, align 4, !dbg !3618
  %24 = load i32, i32* %7, align 4, !dbg !3619
  %25 = icmp eq i32 %24, 39, !dbg !3620
  br i1 %25, label %26, label %60, !dbg !3621

26:                                               ; preds = %19
  %27 = bitcast i32* %3 to i8*, !dbg !3622
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #26, !dbg !3622
  %28 = bitcast i32* %4 to i8*, !dbg !3622
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #26, !dbg !3622
  %29 = bitcast i32* %5 to i8*, !dbg !3622
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #26, !dbg !3622
  %30 = bitcast i32* %6 to i8*, !dbg !3622
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #26, !dbg !3622
  %31 = tail call fastcc i32 @k_sem_take() #28, !dbg !3623
  call void @llvm.dbg.value(metadata i32 %31, metadata !3597, metadata !DIExpression()), !dbg !3624
  %32 = icmp eq i32 %31, 0, !dbg !3625
  br i1 %32, label %34, label %33, !dbg !3628

33:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 148) #27, !dbg !3629
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 148) #27, !dbg !3629
  unreachable, !dbg !3629

34:                                               ; preds = %26
  tail call fastcc void @k_msleep() #28, !dbg !3631
  %35 = load i32, i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), align 4, !dbg !3632
  call void @llvm.dbg.value(metadata i32* %3, metadata !3591, metadata !DIExpression(DW_OP_deref)), !dbg !3624
  call void @llvm.dbg.value(metadata i32* %4, metadata !3594, metadata !DIExpression(DW_OP_deref)), !dbg !3624
  call void @llvm.dbg.value(metadata i32* %5, metadata !3595, metadata !DIExpression(DW_OP_deref)), !dbg !3624
  call void @llvm.dbg.value(metadata i32* %6, metadata !3596, metadata !DIExpression(DW_OP_deref)), !dbg !3624
  call fastcc void @calc_stats(i32* noundef getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 1, i32 0), i32 noundef %35, i32* noundef nonnull %4, i32* noundef nonnull %3, i32* noundef nonnull %5, i32* noundef nonnull %6) #28, !dbg !3633
  %36 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #28, !dbg !3634
  %37 = zext i8 %36 to i32, !dbg !3634
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.8, i32 0, i32 0), i32 noundef %37) #27, !dbg !3634
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i32 0, i32 0), i32 noundef %37) #27, !dbg !3639
  %38 = load i32, i32* %4, align 4, !dbg !3644
  call void @llvm.dbg.value(metadata i32 %38, metadata !3594, metadata !DIExpression()), !dbg !3624
  %39 = load i32, i32* %3, align 4, !dbg !3644
  call void @llvm.dbg.value(metadata i32 %39, metadata !3591, metadata !DIExpression()), !dbg !3624
  %40 = load i32, i32* %5, align 4, !dbg !3644
  call void @llvm.dbg.value(metadata i32 %40, metadata !3595, metadata !DIExpression()), !dbg !3624
  %41 = load i32, i32* %6, align 4, !dbg !3644
  call void @llvm.dbg.value(metadata i32 %41, metadata !3596, metadata !DIExpression()), !dbg !3624
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i32 0, i32 0), i32 noundef %37, i32 noundef %38, i32 noundef %39, i32 noundef %40, i32 noundef %41) #27, !dbg !3644
  call void @llvm.dbg.value(metadata i32 0, metadata !3598, metadata !DIExpression()), !dbg !3649
  br label %43, !dbg !3650

42:                                               ; preds = %57
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef %37) #27, !dbg !3651
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #26, !dbg !3656
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #26, !dbg !3656
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #26, !dbg !3656
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #26, !dbg !3656
  br label %60, !dbg !3657

43:                                               ; preds = %34, %57
  %44 = phi i32 [ 0, %34 ], [ %58, %57 ]
  call void @llvm.dbg.value(metadata i32 %44, metadata !3598, metadata !DIExpression()), !dbg !3649
  %45 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %44, i32 0, !dbg !3658
  %46 = load i32, i32* %45, align 4, !dbg !3658
  %47 = icmp eq i32 %46, 0, !dbg !3662
  br i1 %47, label %48, label %51, !dbg !3663

48:                                               ; preds = %43
  %49 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 2) #28, !dbg !3664
  %50 = zext i8 %49 to i32, !dbg !3664
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i32 0, i32 0), i32 noundef %50, i32 noundef %44) #27, !dbg !3664
  br label %57, !dbg !3670

51:                                               ; preds = %43
  %52 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %44, i32 1, i32 0, !dbg !3671
  call void @llvm.dbg.value(metadata i32* %3, metadata !3591, metadata !DIExpression(DW_OP_deref)), !dbg !3624
  call void @llvm.dbg.value(metadata i32* %4, metadata !3594, metadata !DIExpression(DW_OP_deref)), !dbg !3624
  call void @llvm.dbg.value(metadata i32* %5, metadata !3595, metadata !DIExpression(DW_OP_deref)), !dbg !3624
  call void @llvm.dbg.value(metadata i32* %6, metadata !3596, metadata !DIExpression(DW_OP_deref)), !dbg !3624
  call fastcc void @calc_stats(i32* noundef nonnull %52, i32 noundef %46, i32* noundef nonnull %4, i32* noundef nonnull %3, i32* noundef nonnull %5, i32* noundef nonnull %6) #28, !dbg !3672
  %53 = load i32, i32* %4, align 4, !dbg !3673
  call void @llvm.dbg.value(metadata i32 %53, metadata !3594, metadata !DIExpression()), !dbg !3624
  %54 = load i32, i32* %3, align 4, !dbg !3673
  call void @llvm.dbg.value(metadata i32 %54, metadata !3591, metadata !DIExpression()), !dbg !3624
  %55 = load i32, i32* %5, align 4, !dbg !3673
  call void @llvm.dbg.value(metadata i32 %55, metadata !3595, metadata !DIExpression()), !dbg !3624
  %56 = load i32, i32* %6, align 4, !dbg !3673
  call void @llvm.dbg.value(metadata i32 %56, metadata !3596, metadata !DIExpression()), !dbg !3624
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0), i32 noundef %37, i32 noundef %44, i32 noundef %53, i32 noundef %54, i32 noundef %55, i32 noundef %56) #27, !dbg !3673
  br label %57, !dbg !3678

57:                                               ; preds = %51, %48
  %58 = add nuw nsw i32 %44, 1, !dbg !3679
  call void @llvm.dbg.value(metadata i32 %58, metadata !3598, metadata !DIExpression()), !dbg !3649
  %59 = icmp eq i32 %58, 4, !dbg !3680
  br i1 %59, label %42, label %43, !dbg !3650, !llvm.loop !3681

60:                                               ; preds = %19, %42, %2
  ret void, !dbg !3683
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_inc() unnamed_addr #7 !dbg !3684 {
  call void @llvm.dbg.value(metadata i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), metadata !3691, metadata !DIExpression()), !dbg !3692
  %1 = tail call fastcc i32 @atomic_add() #28, !dbg !3693
  ret i32 %1, !dbg !3694
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_sem_take() unnamed_addr #1 !dbg !3695 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3701, metadata !DIExpression()), !dbg !3702
  call void @llvm.dbg.value(metadata %struct.k_sem* @report_cookie, metadata !3700, metadata !DIExpression()), !dbg !3702
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3703, !srcloc !3705
  %1 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef nonnull @report_cookie, [1 x i64] [i64 -1]) #27, !dbg !3706
  ret i32 %1, !dbg !3707
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep() unnamed_addr #1 !dbg !3708 {
  call void @llvm.dbg.value(metadata i32 100, metadata !3712, metadata !DIExpression()), !dbg !3713
  tail call fastcc void @k_sleep([1 x i64] [i64 1000]) #28, !dbg !3714
  ret void, !dbg !3715
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc void @calc_stats(i32* nocapture noundef readonly %0, i32 noundef %1, i32* nocapture noundef %2, i32* nocapture noundef %3, i32* nocapture noundef %4, i32* nocapture noundef writeonly %5) unnamed_addr #8 !dbg !3716 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3722, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.value(metadata i32 %1, metadata !3723, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.value(metadata i32* %2, metadata !3724, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.value(metadata i32* %3, metadata !3725, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.value(metadata i32* %4, metadata !3726, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.value(metadata i32* %5, metadata !3727, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.value(metadata i64 0, metadata !3728, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.value(metadata i64 0, metadata !3729, metadata !DIExpression()), !dbg !3737
  store i32 2147483647, i32* %2, align 4, !dbg !3738
  store i32 0, i32* %3, align 4, !dbg !3739
  call void @llvm.dbg.value(metadata i32 0, metadata !3730, metadata !DIExpression()), !dbg !3740
  call void @llvm.dbg.value(metadata i64 0, metadata !3728, metadata !DIExpression()), !dbg !3737
  %7 = icmp eq i32 %1, 0, !dbg !3741
  br i1 %7, label %8, label %21, !dbg !3743

8:                                                ; preds = %6
  %9 = lshr i32 %1, 1, !dbg !3744
  %10 = trunc i32 %9 to i8, !dbg !3745
  %11 = trunc i32 %1 to i8, !dbg !3745
  %12 = udiv i8 %10, %11, !dbg !3745
  %13 = zext i8 %12 to i32, !dbg !3746
  store i32 %13, i32* %4, align 4, !dbg !3747
  call void @llvm.dbg.value(metadata i32 0, metadata !3732, metadata !DIExpression()), !dbg !3748
  call void @llvm.dbg.value(metadata i64 0, metadata !3729, metadata !DIExpression()), !dbg !3737
  br label %38, !dbg !3749

14:                                               ; preds = %21
  %15 = lshr i32 %1, 1, !dbg !3744
  %16 = zext i32 %15 to i64, !dbg !3750
  %17 = add i64 %35, %16, !dbg !3751
  %18 = zext i32 %1 to i64, !dbg !3752
  %19 = udiv i64 %17, %18, !dbg !3745
  %20 = trunc i64 %19 to i32, !dbg !3746
  store i32 %20, i32* %4, align 4, !dbg !3747
  call void @llvm.dbg.value(metadata i32 0, metadata !3732, metadata !DIExpression()), !dbg !3748
  call void @llvm.dbg.value(metadata i64 0, metadata !3729, metadata !DIExpression()), !dbg !3737
  br i1 %7, label %38, label %45, !dbg !3749

21:                                               ; preds = %6, %21
  %22 = phi i64 [ %35, %21 ], [ 0, %6 ]
  %23 = phi i32 [ %36, %21 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !3728, metadata !DIExpression()), !dbg !3737
  call void @llvm.dbg.value(metadata i32 %23, metadata !3730, metadata !DIExpression()), !dbg !3740
  %24 = load i32, i32* %2, align 4, !dbg !3753
  %25 = getelementptr inbounds i32, i32* %0, i32 %23, !dbg !3753
  %26 = load i32, i32* %25, align 4, !dbg !3753
  %27 = icmp ult i32 %24, %26, !dbg !3753
  %28 = select i1 %27, i32 %24, i32 %26, !dbg !3753
  store i32 %28, i32* %2, align 4, !dbg !3755
  %29 = load i32, i32* %3, align 4, !dbg !3756
  %30 = load i32, i32* %25, align 4, !dbg !3756
  %31 = icmp ugt i32 %29, %30, !dbg !3756
  %32 = select i1 %31, i32 %29, i32 %30, !dbg !3756
  store i32 %32, i32* %3, align 4, !dbg !3757
  %33 = load i32, i32* %25, align 4, !dbg !3758
  %34 = zext i32 %33 to i64, !dbg !3758
  %35 = add i64 %22, %34, !dbg !3759
  call void @llvm.dbg.value(metadata i64 %35, metadata !3728, metadata !DIExpression()), !dbg !3737
  %36 = add nuw nsw i32 %23, 1, !dbg !3760
  call void @llvm.dbg.value(metadata i32 %36, metadata !3730, metadata !DIExpression()), !dbg !3740
  %37 = icmp eq i32 %36, %1, !dbg !3741
  br i1 %37, label %14, label %21, !dbg !3743, !llvm.loop !3761

38:                                               ; preds = %45, %8, %14
  %39 = phi i64 [ 0, %14 ], [ 0, %8 ], [ %18, %45 ]
  %40 = phi i64 [ %16, %14 ], [ 0, %8 ], [ %16, %45 ]
  %41 = phi i64 [ 0, %14 ], [ 0, %8 ], [ %53, %45 ], !dbg !3737
  %42 = add i64 %41, %40, !dbg !3763
  %43 = udiv i64 %42, %39, !dbg !3764
  %44 = tail call fastcc i32 @isqrt(i64 noundef %43) #28, !dbg !3765
  store i32 %44, i32* %5, align 4, !dbg !3766
  ret void, !dbg !3767

45:                                               ; preds = %14, %45
  %46 = phi i32 [ %54, %45 ], [ 0, %14 ]
  %47 = phi i64 [ %53, %45 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %46, metadata !3732, metadata !DIExpression()), !dbg !3748
  call void @llvm.dbg.value(metadata i64 %47, metadata !3729, metadata !DIExpression()), !dbg !3737
  %48 = getelementptr inbounds i32, i32* %0, i32 %46, !dbg !3768
  %49 = load i32, i32* %48, align 4, !dbg !3768
  %50 = sub i32 %49, %20, !dbg !3769
  %51 = sext i32 %50 to i64, !dbg !3770
  call void @llvm.dbg.value(metadata i64 %51, metadata !3734, metadata !DIExpression()), !dbg !3771
  %52 = mul nsw i64 %51, %51, !dbg !3772
  %53 = add i64 %52, %47, !dbg !3773
  call void @llvm.dbg.value(metadata i64 %53, metadata !3729, metadata !DIExpression()), !dbg !3737
  %54 = add nuw nsw i32 %46, 1, !dbg !3774
  call void @llvm.dbg.value(metadata i32 %54, metadata !3732, metadata !DIExpression()), !dbg !3748
  %55 = icmp eq i32 %54, %1, !dbg !3775
  br i1 %55, label %38, label %45, !dbg !3749, !llvm.loop !3776
}

; Function Attrs: nofree noinline nosync nounwind optsize readnone
define internal fastcc i32 @isqrt(i64 noundef %0) unnamed_addr #9 !dbg !3778 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3782, metadata !DIExpression()), !dbg !3787
  %2 = icmp ugt i64 %0, 1, !dbg !3788
  %3 = trunc i64 %0 to i32, !dbg !3789
  br i1 %2, label %6, label %4, !dbg !3789

4:                                                ; preds = %1, %6
  %5 = phi i32 [ %15, %6 ], [ %3, %1 ]
  ret i32 %5, !dbg !3790

6:                                                ; preds = %1
  %7 = lshr i64 %0, 2, !dbg !3791
  %8 = tail call fastcc i32 @isqrt(i64 noundef %7) #28, !dbg !3792
  %9 = shl i32 %8, 1, !dbg !3793
  %10 = zext i32 %9 to i64, !dbg !3792
  call void @llvm.dbg.value(metadata i64 %10, metadata !3783, metadata !DIExpression()), !dbg !3794
  %11 = or i64 %10, 1, !dbg !3795
  call void @llvm.dbg.value(metadata i64 %11, metadata !3786, metadata !DIExpression()), !dbg !3794
  %12 = mul nuw i64 %11, %11, !dbg !3796
  %13 = icmp ugt i64 %12, %0, !dbg !3797
  %14 = select i1 %13, i64 %10, i64 %11, !dbg !3798
  %15 = trunc i64 %14 to i32
  br label %4
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3799 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3803, metadata !DIExpression()), !dbg !3804
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3805, !srcloc !3807
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #27, !dbg !3808
  ret void, !dbg !3809
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_add() unnamed_addr #7 !dbg !3810 {
  call void @llvm.dbg.value(metadata i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), metadata !3814, metadata !DIExpression()), !dbg !3816
  call void @llvm.dbg.value(metadata i32 1, metadata !3815, metadata !DIExpression()), !dbg !3816
  %1 = atomicrmw add i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), i32 1 seq_cst, align 4, !dbg !3817
  ret i32 %1, !dbg !3818
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #6 !dbg !3819 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3820, !srcloc !3822
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !3823
  ret %struct.k_thread* %1, !dbg !3824
}

; Function Attrs: noinline nounwind optsize
define dso_local void @message_dev_init() local_unnamed_addr #1 !dbg !3825 {
  call void @llvm.dbg.value(metadata i64 8400, metadata !3827, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata i64 4, metadata !3828, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata i64 33600, metadata !3829, metadata !DIExpression()), !dbg !3830
  store i32 40320, i32* @max_duty_cyc, align 4, !dbg !3831
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull @timeout, void (%struct._timeout*)* noundef nonnull @dev_timer_expired, [1 x i64] zeroinitializer) #27, !dbg !3832
  ret void, !dbg !3833
}

; Function Attrs: noinline nounwind optsize
define internal void @dev_timer_expired(%struct._timeout* noundef readnone %0) #1 !dbg !3834 {
  %2 = alloca %struct.msg, align 4
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !3836, metadata !DIExpression()), !dbg !3847
  %3 = icmp eq %struct._timeout* %0, @timeout, !dbg !3848
  br i1 %3, label %5, label %4, !dbg !3851

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 56) #27, !dbg !3852
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 56) #27, !dbg !3852
  unreachable, !dbg !3852

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @k_cycle_get_32.17() #28, !dbg !3854
  call void @llvm.dbg.value(metadata i32 %6, metadata !3837, metadata !DIExpression()), !dbg !3847
  %7 = bitcast %struct.msg* %2 to i8*, !dbg !3855
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #26, !dbg !3855
  call void @llvm.dbg.declare(metadata %struct.msg* %2, metadata !3838, metadata !DIExpression()), !dbg !3856
  %8 = load i32, i32* @msg_seq, align 4, !dbg !3857
  %9 = add i32 %8, 1, !dbg !3857
  store i32 %9, i32* @msg_seq, align 4, !dbg !3857
  %10 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 0, !dbg !3858
  store i32 %8, i32* %10, align 4, !dbg !3859
  %11 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 1, !dbg !3860
  store i32 %6, i32* %11, align 4, !dbg !3861
  %12 = tail call fastcc i32 @rand32() #28, !dbg !3862
  %13 = and i32 %12, 3, !dbg !3863
  %14 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 2, !dbg !3864
  store i32 %13, i32* %14, align 4, !dbg !3865
  %15 = tail call fastcc i32 @rand32() #28, !dbg !3866
  %16 = load i32, i32* @max_duty_cyc, align 4, !dbg !3867
  %17 = urem i32 %15, %16, !dbg !3868
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 3, !dbg !3869
  store i32 %17, i32* %18, align 4, !dbg !3870
  %19 = call fastcc i32 @k_msgq_put.18(i8* noundef nonnull %7) #28, !dbg !3871
  call void @llvm.dbg.value(metadata i32 %19, metadata !3846, metadata !DIExpression()), !dbg !3847
  %20 = icmp eq i32 %19, 0, !dbg !3872
  br i1 %20, label %22, label %21, !dbg !3874

21:                                               ; preds = %5
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4.19, i32 0, i32 0)) #27, !dbg !3875
  br label %22, !dbg !3877

22:                                               ; preds = %21, %5
  %23 = load i32, i32* %10, align 4, !dbg !3878
  %24 = icmp ult i32 %23, 40, !dbg !3880
  br i1 %24, label %25, label %26, !dbg !3881

25:                                               ; preds = %22
  call fastcc void @timeout_reset() #28, !dbg !3882
  br label %26, !dbg !3884

26:                                               ; preds = %25, %22
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #26, !dbg !3885
  ret void, !dbg !3885
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.17() unnamed_addr #1 !dbg !3886 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.20() #28, !dbg !3887
  ret i32 %1, !dbg !3888
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @rand32() unnamed_addr #1 !dbg !394 {
  %1 = load i64, i64* @rand32.state, align 8, !dbg !3889
  %2 = icmp eq i64 %1, 0, !dbg !3889
  br i1 %2, label %3, label %7, !dbg !3891

3:                                                ; preds = %0
  %4 = tail call fastcc i32 @k_cycle_get_32.17() #28, !dbg !3892
  %5 = zext i32 %4 to i64, !dbg !3894
  %6 = shl nuw nsw i64 %5, 16, !dbg !3895
  br label %7, !dbg !3896

7:                                                ; preds = %3, %0
  %8 = phi i64 [ %6, %3 ], [ %1, %0 ], !dbg !3897
  %9 = mul i64 %8, 6364136223846793005, !dbg !3898
  %10 = add i64 %9, 1442695040888963407, !dbg !3899
  store i64 %10, i64* @rand32.state, align 8, !dbg !3900
  %11 = lshr i64 %10, 32, !dbg !3901
  %12 = trunc i64 %11 to i32, !dbg !3902
  ret i32 %12, !dbg !3903
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put.18(i8* noundef %0) unnamed_addr #1 !dbg !3904 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3915, metadata !DIExpression()), !dbg !3916
  call void @llvm.dbg.value(metadata %struct.k_msgq* @hw_msgs, metadata !3913, metadata !DIExpression()), !dbg !3916
  call void @llvm.dbg.value(metadata i8* %0, metadata !3914, metadata !DIExpression()), !dbg !3916
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3917, !srcloc !3919
  %2 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef nonnull @hw_msgs, i8* noundef %0, [1 x i64] zeroinitializer) #27, !dbg !3920
  ret i32 %2, !dbg !3921
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @timeout_reset() unnamed_addr #1 !dbg !3922 {
  %1 = tail call fastcc i32 @rand32() #28, !dbg !3925
  %2 = and i32 %1, 7, !dbg !3926
  call void @llvm.dbg.value(metadata i32 %2, metadata !3924, metadata !DIExpression()), !dbg !3927
  %3 = zext i32 %2 to i64, !dbg !3928
  %4 = insertvalue [1 x i64] poison, i64 %3, 0, !dbg !3929
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull @timeout, void (%struct._timeout*)* noundef nonnull @dev_timer_expired, [1 x i64] %4) #27, !dbg !3929
  ret void, !dbg !3930
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.20() unnamed_addr #1 !dbg !3931 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !3932
  ret i32 %1, !dbg !3933
}

; Function Attrs: noinline nounwind optsize
define dso_local void @message_dev_fetch(%struct.msg* noundef %0) local_unnamed_addr #1 !dbg !3934 {
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !3939, metadata !DIExpression()), !dbg !3941
  %2 = bitcast %struct.msg* %0 to i8*, !dbg !3942
  %3 = tail call fastcc i32 @k_msgq_get.23(i8* noundef %2) #28, !dbg !3943
  call void @llvm.dbg.value(metadata i32 %3, metadata !3940, metadata !DIExpression()), !dbg !3941
  %4 = icmp eq i32 %3, 0, !dbg !3944
  br i1 %4, label %6, label %5, !dbg !3947

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 103) #27, !dbg !3948
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 103) #27, !dbg !3948
  unreachable, !dbg !3948

6:                                                ; preds = %1
  ret void, !dbg !3950
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get.23(i8* noundef %0) unnamed_addr #1 !dbg !3951 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3957, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.value(metadata %struct.k_msgq* @hw_msgs, metadata !3955, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.value(metadata i8* %0, metadata !3956, metadata !DIExpression()), !dbg !3958
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !3959, !srcloc !3961
  %2 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef nonnull @hw_msgs, i8* noundef %0, [1 x i64] [i64 -1]) #27, !dbg !3962
  ret i32 %2, !dbg !3963
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3964 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3979, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %0, metadata !3975, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %1, metadata !3976, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %2, metadata !3977, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %3, metadata !3978, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %0, metadata !3980, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %0, metadata !3981, metadata !DIExpression()), !dbg !4042
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4043
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #26, !dbg !4043
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3984, metadata !DIExpression()), !dbg !4044
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4045
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #26, !dbg !4045
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3986, metadata !DIExpression()), !dbg !4046
  call void @llvm.dbg.value(metadata i32 0, metadata !3987, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 0, metadata !3988, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 0, metadata !3989, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 -1, metadata !3990, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8 0, metadata !3993, metadata !DIExpression()), !dbg !4042
  %12 = and i32 %2, 4, !dbg !4047
  %13 = icmp eq i32 %12, 0, !dbg !4048
  call void @llvm.dbg.value(metadata i1 %13, metadata !3994, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4042
  %14 = lshr i32 %2, 3, !dbg !4049
  %15 = and i32 %14, 7, !dbg !4049
  %16 = add nuw nsw i32 %15, 1, !dbg !4050
  call void @llvm.dbg.value(metadata i32 %16, metadata !3995, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8 0, metadata !3996, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %0, metadata !3997, metadata !DIExpression()), !dbg !4042
  %17 = ptrtoint i8* %0 to i32, !dbg !4051
  %18 = and i32 %17, 3, !dbg !4053
  %19 = icmp eq i32 %18, 0, !dbg !4053
  br i1 %19, label %20, label %320, !dbg !4054

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4055
  call void @llvm.dbg.value(metadata i8* %21, metadata !3981, metadata !DIExpression()), !dbg !4042
  %22 = icmp eq i8* %0, null, !dbg !4056
  %23 = and i32 %1, 7, !dbg !4058
  %24 = sub nuw nsw i32 8, %23, !dbg !4058
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4058
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4058
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4058
  call void @llvm.dbg.value(metadata i32 %27, metadata !3976, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %26, metadata !3981, metadata !DIExpression()), !dbg !4042
  br i1 %22, label %33, label %28, !dbg !4059

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4061
  %30 = sub i32 4, %17, !dbg !4061
  %31 = add i32 %30, %29, !dbg !4062
  %32 = icmp ugt i32 %31, %27, !dbg !4063
  br i1 %32, label %320, label %33, !dbg !4064

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4065
  call void @llvm.dbg.value(metadata i8* %34, metadata !3978, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %3, metadata !3992, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 4, metadata !3983, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 4, metadata !3982, metadata !DIExpression()), !dbg !4042
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4066

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3979, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %42, metadata !3978, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %43, metadata !3981, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %44, metadata !3982, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %45, metadata !3983, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %72, metadata !3990, metadata !DIExpression()), !dbg !4042
  br i1 %46, label %73, label %47, !dbg !4067

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4068
  %49 = zext i1 %48 to i32, !dbg !4072
  %50 = add nsw i32 %72, %49, !dbg !4072
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4072
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4072
  call void @llvm.dbg.value(metadata i32 %52, metadata !3982, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %51, metadata !3983, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8 poison, metadata !3993, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %50, metadata !3990, metadata !DIExpression()), !dbg !4042
  br label %53, !dbg !4073

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3979, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %40, metadata !3978, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %58, metadata !3981, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %57, metadata !3982, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %56, metadata !3983, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8 poison, metadata !3993, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %54, metadata !3990, metadata !DIExpression()), !dbg !4042
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4074
  call void @llvm.dbg.value(metadata i8* %60, metadata !3978, metadata !DIExpression()), !dbg !4042
  %61 = load i8, i8* %60, align 1, !dbg !4076
  %62 = icmp eq i8 %61, 0, !dbg !4077
  br i1 %62, label %226, label %63, !dbg !4078, !llvm.loop !4079

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !4067

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4082

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3993, metadata !DIExpression()), !dbg !4042
  %75 = add nsw i32 %72, -1, !dbg !4083
  call void @llvm.dbg.value(metadata i32 %75, metadata !3990, metadata !DIExpression()), !dbg !4042
  br label %53, !dbg !4084

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4085

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3983, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 4, metadata !3982, metadata !DIExpression()), !dbg !4042
  br label %53, !dbg !4086

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3983, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 4, metadata !3982, metadata !DIExpression()), !dbg !4042
  br label %53, !dbg !4087

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4088
  %81 = icmp eq i8 %80, 108, !dbg !4090
  br i1 %81, label %82, label %109, !dbg !4091

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4092
  %84 = load i8, i8* %83, align 1, !dbg !4092
  %85 = icmp eq i8 %84, 108, !dbg !4095
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4096
  %89 = add i32 %88, 7, !dbg !4096
  %90 = and i32 %89, -8, !dbg !4096
  %91 = inttoptr i32 %90 to i8*, !dbg !4096
  %92 = inttoptr i32 %90 to double*, !dbg !4096
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4096
  %94 = load double, double* %92, align 8, !dbg !4096
  call void @llvm.dbg.value(metadata i8* %93, metadata !3979, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 8, metadata !3982, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 8, metadata !3983, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata double %94, metadata !4010, metadata !DIExpression()), !dbg !4098
  %95 = ptrtoint i8* %43 to i32, !dbg !4099
  %96 = add i32 %95, 7, !dbg !4099
  %97 = and i32 %96, -8, !dbg !4099
  %98 = inttoptr i32 %97 to i8*, !dbg !4100
  call void @llvm.dbg.value(metadata i8* %98, metadata !3981, metadata !DIExpression()), !dbg !4042
  br i1 %22, label %104, label %99, !dbg !4101

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4102
  %101 = icmp ugt i32 %100, %196, !dbg !4106
  br i1 %101, label %320, label %102, !dbg !4107

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4108
  store double %94, double* %103, align 8, !dbg !4108
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4111
  call void @llvm.dbg.value(metadata i8* %105, metadata !3981, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8 poison, metadata !3993, metadata !DIExpression()), !dbg !4042
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3993, metadata !DIExpression()), !dbg !4042
  br label %53, !dbg !4112

107:                                              ; preds = %73, %73
  br label %109, !dbg !4113

108:                                              ; preds = %73
  br label %109, !dbg !4113

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4042
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4042
  call void @llvm.dbg.value(metadata i32 %113, metadata !3982, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %112, metadata !3983, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8 poison, metadata !3996, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8 poison, metadata !3993, metadata !DIExpression()), !dbg !4042
  %114 = ptrtoint i8* %43 to i32, !dbg !4113
  %115 = add i32 %114, -1, !dbg !4113
  %116 = add i32 %115, %112, !dbg !4113
  %117 = sub i32 0, %112, !dbg !4113
  %118 = and i32 %116, %117, !dbg !4113
  %119 = inttoptr i32 %118 to i8*, !dbg !4114
  call void @llvm.dbg.value(metadata i8* %119, metadata !3981, metadata !DIExpression()), !dbg !4042
  br i1 %22, label %124, label %120, !dbg !4115

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4117
  %122 = add i32 %121, %118, !dbg !4118
  %123 = icmp ugt i32 %122, %196, !dbg !4119
  br i1 %123, label %320, label %124, !dbg !4120

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !4121

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4114
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4122
  call void @llvm.dbg.value(metadata i8* %127, metadata !3979, metadata !DIExpression()), !dbg !4042
  %128 = bitcast i8* %41 to i8**, !dbg !4122
  %129 = load i8*, i8** %128, align 4, !dbg !4122
  call void @llvm.dbg.value(metadata i8* %129, metadata !3992, metadata !DIExpression()), !dbg !4042
  br label %130, !dbg !4123

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4042
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4124
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4042
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !4125
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4042
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !4042
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4042
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4042
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4042
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4042
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !4126
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3979, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %142, metadata !3976, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %141, metadata !3978, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %140, metadata !3981, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %139, metadata !3982, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %138, metadata !3983, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %137, metadata !3987, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %136, metadata !3995, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %135, metadata !3988, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8 poison, metadata !3993, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %133, metadata !3992, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %132, metadata !3990, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %131, metadata !3989, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.label(metadata !4041), !dbg !4128
  br i1 %22, label %146, label %144, !dbg !4129

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4130
  store i8* %133, i8** %145, align 4, !dbg !4133
  br label %146, !dbg !4134

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4135
  call void @llvm.dbg.value(metadata i32 %147, metadata !3995, metadata !DIExpression()), !dbg !4042
  %148 = icmp sgt i32 %136, 0, !dbg !4136
  br i1 %148, label %152, label %149, !dbg !4137

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #28, !dbg !4138
  %151 = zext i1 %150 to i32, !dbg !4138
  br label %152, !dbg !4137

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4137
  %154 = icmp eq i32 %153, 0, !dbg !4137
  call void @llvm.dbg.value(metadata i1 %154, metadata !4019, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4139
  call void @llvm.dbg.value(metadata i1 %36, metadata !4022, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4139
  %155 = or i1 %36, %154, !dbg !4140
  br i1 %155, label %156, label %192, !dbg !4140

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4141
  %158 = sub i32 %157, %17, !dbg !4141
  %159 = lshr i32 %158, 2, !dbg !4142
  call void @llvm.dbg.value(metadata i32 %159, metadata !4023, metadata !DIExpression()), !dbg !4143
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4144
  br i1 %161, label %162, label %163, !dbg !4144

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 635) #27, !dbg !4146
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.30, i32 0, i32 0)) #27, !dbg !4146
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 635) #27, !dbg !4146
  unreachable, !dbg !4146

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !4151
  br i1 %164, label %165, label %166, !dbg !4153

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 640) #27, !dbg !4154
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.31, i32 0, i32 0)) #27, !dbg !4154
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 640) #27, !dbg !4154
  unreachable, !dbg !4154

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !4159

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !4160
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4163
  store i8 %168, i8* %169, align 1, !dbg !4164
  %170 = trunc i32 %132 to i8, !dbg !4165
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4166
  store i8 %170, i8* %171, align 1, !dbg !4167
  br i1 %154, label %175, label %172, !dbg !4168

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !4169
  store i8 %173, i8* %169, align 1, !dbg !4169
  %174 = add i32 %131, 1, !dbg !4172
  call void @llvm.dbg.value(metadata i32 %174, metadata !3989, metadata !DIExpression()), !dbg !4042
  br label %187, !dbg !4173

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !4174
  call void @llvm.dbg.value(metadata i32 %176, metadata !3988, metadata !DIExpression()), !dbg !4042
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !4176

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !4177
  call void @llvm.dbg.value(metadata i32 %179, metadata !3976, metadata !DIExpression()), !dbg !4042
  br label %187, !dbg !4180

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !4181

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !4182
  call void @llvm.dbg.value(metadata i32 %182, metadata !3976, metadata !DIExpression()), !dbg !4042
  br label %187, !dbg !4185

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #27, !dbg !4186
  %185 = add i32 %142, 2, !dbg !4188
  %186 = add i32 %185, %184, !dbg !4189
  call void @llvm.dbg.value(metadata i32 %186, metadata !3976, metadata !DIExpression()), !dbg !4042
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !4042
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !4042
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !4042
  call void @llvm.dbg.value(metadata i32 %190, metadata !3976, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %189, metadata !3988, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %188, metadata !3989, metadata !DIExpression()), !dbg !4042
  %191 = add nuw nsw i32 %137, 1, !dbg !4190
  call void @llvm.dbg.value(metadata i32 %191, metadata !3987, metadata !DIExpression()), !dbg !4042
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !4042
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !4125
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !4042
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !4126
  call void @llvm.dbg.value(metadata i32 %196, metadata !3976, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %195, metadata !3987, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %194, metadata !3988, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %193, metadata !3989, metadata !DIExpression()), !dbg !4042
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4191
  call void @llvm.dbg.value(metadata i8* %197, metadata !3981, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %143, metadata !3979, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %141, metadata !3978, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %139, metadata !3982, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %138, metadata !3983, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8 poison, metadata !3996, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8 poison, metadata !3993, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %132, metadata !3990, metadata !DIExpression()), !dbg !4042
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4074
  call void @llvm.dbg.value(metadata i8* %198, metadata !3978, metadata !DIExpression()), !dbg !4042
  %199 = load i8, i8* %198, align 1, !dbg !4076
  %200 = icmp eq i8 %199, 0, !dbg !4077
  br i1 %200, label %226, label %63, !dbg !4078

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !4192

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4193
  call void @llvm.dbg.value(metadata i8* %203, metadata !3979, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 undef, metadata !4026, metadata !DIExpression()), !dbg !4194
  br i1 %22, label %219, label %204, !dbg !4195

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !4193
  %206 = load i32, i32* %205, align 4, !dbg !4193
  call void @llvm.dbg.value(metadata i32 %206, metadata !4026, metadata !DIExpression()), !dbg !4194
  %207 = inttoptr i32 %118 to i32*, !dbg !4196
  store i32 %206, i32* %207, align 4, !dbg !4199
  br label %219, !dbg !4200

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !4201
  %210 = add i32 %209, 7, !dbg !4201
  %211 = and i32 %210, -8, !dbg !4201
  %212 = inttoptr i32 %211 to i8*, !dbg !4201
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !4201
  call void @llvm.dbg.value(metadata i8* %213, metadata !3979, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i64 undef, metadata !4032, metadata !DIExpression()), !dbg !4202
  br i1 %22, label %219, label %214, !dbg !4203

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !4201
  %216 = load i64, i64* %215, align 8, !dbg !4201
  call void @llvm.dbg.value(metadata i64 %216, metadata !4032, metadata !DIExpression()), !dbg !4202
  %217 = inttoptr i32 %118 to i64*, !dbg !4204
  store i64 %216, i64* %217, align 8, !dbg !4209
  br label %219, !dbg !4210

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 709) #27, !dbg !4211
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.32, i32 0, i32 0), i32 noundef %113) #27, !dbg !4211
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 709) #27, !dbg !4211
  unreachable, !dbg !4211

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !4216
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !4216
  call void @llvm.dbg.value(metadata i8* %221, metadata !3979, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %40, metadata !3978, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %222, metadata !3981, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %113, metadata !3982, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %112, metadata !3983, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8 poison, metadata !3996, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8 poison, metadata !3993, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %72, metadata !3990, metadata !DIExpression()), !dbg !4042
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4074
  call void @llvm.dbg.value(metadata i8* %223, metadata !3978, metadata !DIExpression()), !dbg !4042
  %224 = load i8, i8* %223, align 1, !dbg !4076
  %225 = icmp eq i8 %224, 0, !dbg !4077
  br i1 %225, label %226, label %38, !dbg !4078

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !4217
  %228 = ptrtoint i8* %227 to i32, !dbg !4218
  %229 = sub i32 %228, %17, !dbg !4218
  %230 = lshr i32 %229, 2, !dbg !4220
  %231 = icmp ugt i32 %229, 1023, !dbg !4221
  br i1 %231, label %232, label %233, !dbg !4222

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 721) #27, !dbg !4223
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.33, i32 0, i32 0)) #27, !dbg !4223
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 721) #27, !dbg !4223
  unreachable, !dbg !4223

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !4228

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !4229
  %236 = add i32 %235, %229, !dbg !4232
  br label %320, !dbg !4233

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !4234
  store i8 %238, i8* %0, align 1, !dbg !4235
  %239 = trunc i32 %194 to i8, !dbg !4236
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4238
  store i8 %240, i8* %242, align 1, !dbg !4240
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4241
  store i8 %241, i8* %243, align 1, !dbg !4242
  %244 = trunc i32 %193 to i8, !dbg !4243
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4244
  store i8 %244, i8* %245, align 1, !dbg !4245
  %246 = icmp eq i32 %193, 0, !dbg !4246
  %247 = xor i1 %246, true, !dbg !4247
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !4247
  call void @llvm.dbg.value(metadata i8* %227, metadata !3981, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 0, metadata !3991, metadata !DIExpression()), !dbg !4042
  br i1 %249, label %250, label %269, !dbg !4247

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !4248

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3981, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %254, metadata !3991, metadata !DIExpression()), !dbg !4042
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !4249
  %256 = load i8, i8* %255, align 1, !dbg !4249
  %257 = icmp sgt i8 %256, -1, !dbg !4251
  br i1 %257, label %265, label %258, !dbg !4252

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !4035, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4253
  %259 = ptrtoint i8* %253 to i32, !dbg !4254
  %260 = add i32 %251, %259, !dbg !4256
  %261 = icmp ugt i32 %260, %196, !dbg !4257
  br i1 %261, label %320, label %262, !dbg !4258

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !4259
  call void @llvm.dbg.value(metadata i8 %263, metadata !4035, metadata !DIExpression()), !dbg !4253
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !4260
  call void @llvm.dbg.value(metadata i8* %264, metadata !3981, metadata !DIExpression()), !dbg !4042
  store i8 %263, i8* %253, align 1, !dbg !4261
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !4191
  call void @llvm.dbg.value(metadata i8* %266, metadata !3981, metadata !DIExpression()), !dbg !4042
  %267 = add nuw i32 %254, 1, !dbg !4262
  call void @llvm.dbg.value(metadata i32 %267, metadata !3991, metadata !DIExpression()), !dbg !4042
  %268 = icmp eq i32 %267, %195, !dbg !4263
  br i1 %268, label %269, label %252, !dbg !4248, !llvm.loop !4264

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !4191
  call void @llvm.dbg.value(metadata i8* %270, metadata !3981, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 0, metadata !3991, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %133, metadata !3992, metadata !DIExpression()), !dbg !4042
  %271 = icmp eq i32 %195, 0, !dbg !4266
  br i1 %271, label %316, label %272, !dbg !4269

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !4269

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3981, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %276, metadata !3992, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %277, metadata !3991, metadata !DIExpression()), !dbg !4042
  br i1 %246, label %282, label %278, !dbg !4270

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4273
  %280 = load i8, i8* %279, align 1, !dbg !4273
  %281 = icmp sgt i8 %280, -1, !dbg !4274
  br i1 %281, label %282, label %311, !dbg !4275

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !4276

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3982, metadata !DIExpression()), !dbg !4042
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !4277
  %285 = load i8, i8* %284, align 1, !dbg !4277
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !4280
  call void @llvm.dbg.value(metadata i8* %286, metadata !3981, metadata !DIExpression()), !dbg !4042
  store i8 %285, i8* %275, align 1, !dbg !4281
  br label %297, !dbg !4282

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4283
  %289 = load i8, i8* %288, align 1, !dbg !4283
  %290 = zext i8 %289 to i32, !dbg !4283
  %291 = shl nuw nsw i32 %290, 2, !dbg !4285
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !4286
  %293 = bitcast i8* %292 to i8**, !dbg !4287
  %294 = load i8*, i8** %293, align 4, !dbg !4287
  call void @llvm.dbg.value(metadata i8* %294, metadata !3992, metadata !DIExpression()), !dbg !4042
  store i8* null, i8** %293, align 4, !dbg !4288
  %295 = tail call i32 @strlen(i8* noundef %294) #27, !dbg !4289
  %296 = add i32 %295, 1, !dbg !4290
  call void @llvm.dbg.value(metadata i32 %296, metadata !3982, metadata !DIExpression()), !dbg !4042
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !4042
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !4291
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !4042
  call void @llvm.dbg.value(metadata i8* %300, metadata !3981, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i32 %299, metadata !3982, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %298, metadata !3992, metadata !DIExpression()), !dbg !4042
  %301 = ptrtoint i8* %300 to i32, !dbg !4292
  %302 = add i32 %273, %299, !dbg !4294
  %303 = add i32 %302, %301, !dbg !4295
  %304 = icmp ugt i32 %303, %196, !dbg !4296
  br i1 %304, label %320, label %305, !dbg !4297

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4298
  %307 = load i8, i8* %306, align 1, !dbg !4298
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !4299
  call void @llvm.dbg.value(metadata i8* %308, metadata !3981, metadata !DIExpression()), !dbg !4042
  store i8 %307, i8* %300, align 1, !dbg !4300
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #27, !dbg !4301
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !4302
  call void @llvm.dbg.value(metadata i8* %310, metadata !3981, metadata !DIExpression()), !dbg !4042
  br label %311, !dbg !4303

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !4304
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !4042
  call void @llvm.dbg.value(metadata i8* %313, metadata !3981, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.value(metadata i8* %312, metadata !3992, metadata !DIExpression()), !dbg !4042
  %314 = add nuw i32 %277, 1, !dbg !4305
  call void @llvm.dbg.value(metadata i32 %314, metadata !3991, metadata !DIExpression()), !dbg !4042
  %315 = icmp eq i32 %314, %195, !dbg !4266
  br i1 %315, label %316, label %274, !dbg !4269, !llvm.loop !4306

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !4191
  %318 = ptrtoint i8* %317 to i32, !dbg !4308
  %319 = sub i32 %318, %17, !dbg !4308
  br label %320, !dbg !4309

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #26, !dbg !4310
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #26, !dbg !4310
  ret i32 %321, !dbg !4310
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4311 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4315, metadata !DIExpression()), !dbg !4316
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #28, !dbg !4317
  ret i1 %2, !dbg !4318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4319 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4324, metadata !DIExpression()), !dbg !4325
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4326
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4327
  %4 = and i1 %2, %3, !dbg !4327
  ret i1 %4, !dbg !4328
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4329 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4333, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata i32 %1, metadata !4334, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata i32 %2, metadata !4335, metadata !DIExpression()), !dbg !4339
  call void @llvm.dbg.value(metadata i8* %3, metadata !4336, metadata !DIExpression()), !dbg !4339
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4340
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #26, !dbg !4340
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4337, metadata !DIExpression()), !dbg !4341
  call void @llvm.va_start(i8* nonnull %6), !dbg !4342
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4343
  %8 = load i32, i32* %7, align 4, !dbg !4343
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4343
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #28, !dbg !4343
  call void @llvm.dbg.value(metadata i32 %10, metadata !4338, metadata !DIExpression()), !dbg !4339
  call void @llvm.va_end(i8* nonnull %6), !dbg !4344
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #26, !dbg !4345
  ret i32 %10, !dbg !4346
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #10

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4347 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4359, metadata !DIExpression()), !dbg !4378
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4360, metadata !DIExpression()), !dbg !4378
  call void @llvm.dbg.value(metadata i8* %2, metadata !4361, metadata !DIExpression()), !dbg !4378
  call void @llvm.dbg.value(metadata i8* %3, metadata !4362, metadata !DIExpression()), !dbg !4378
  call void @llvm.dbg.value(metadata i8* %3, metadata !4363, metadata !DIExpression()), !dbg !4378
  call void @llvm.dbg.value(metadata i8* %3, metadata !4364, metadata !DIExpression()), !dbg !4378
  %5 = icmp eq i8* %3, null, !dbg !4379
  br i1 %5, label %45, label %6, !dbg !4381

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4373, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4378
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4382
  %8 = load i8, i8* %7, align 1, !dbg !4382
  %9 = zext i8 %8 to i32, !dbg !4383
  call void @llvm.dbg.value(metadata i32 %9, metadata !4374, metadata !DIExpression()), !dbg !4378
  call void @llvm.dbg.value(metadata i8 undef, metadata !4375, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4378
  call void @llvm.dbg.value(metadata i8 undef, metadata !4376, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4378
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4370, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4378
  call void @llvm.dbg.value(metadata i32 0, metadata !4372, metadata !DIExpression()), !dbg !4378
  %10 = icmp eq i8 %8, 0, !dbg !4384
  br i1 %10, label %39, label %11, !dbg !4387

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4388
  call void @llvm.dbg.value(metadata i8 %12, metadata !4373, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4378
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4370, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4378
  %13 = zext i8 %12 to i32, !dbg !4389
  call void @llvm.dbg.value(metadata i32 %13, metadata !4373, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4378
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4370, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4378
  %14 = shl nuw nsw i32 %13, 2, !dbg !4390
  call void @llvm.dbg.value(metadata i32 %14, metadata !4373, metadata !DIExpression()), !dbg !4378
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4370, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4378
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4391
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4370, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4378
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4392
  %17 = load i8, i8* %16, align 1, !dbg !4392
  call void @llvm.dbg.value(metadata i8 %17, metadata !4375, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4378
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4370, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4378
  %18 = zext i8 %17 to i32, !dbg !4393
  call void @llvm.dbg.value(metadata i32 %18, metadata !4375, metadata !DIExpression()), !dbg !4378
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4370, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4378
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4394
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4370, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4378
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4395
  %21 = load i8, i8* %20, align 1, !dbg !4395
  call void @llvm.dbg.value(metadata i8 %21, metadata !4376, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4378
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4370, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4378
  %22 = zext i8 %21 to i32, !dbg !4396
  call void @llvm.dbg.value(metadata i32 %22, metadata !4376, metadata !DIExpression()), !dbg !4378
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4370, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4378
  %23 = shl nuw nsw i32 %22, 1, !dbg !4397
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4370, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4378
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4398
  call void @llvm.dbg.value(metadata i8* %24, metadata !4370, metadata !DIExpression()), !dbg !4378
  br label %25, !dbg !4387

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4370, metadata !DIExpression()), !dbg !4378
  call void @llvm.dbg.value(metadata i32 %27, metadata !4372, metadata !DIExpression()), !dbg !4378
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4399
  call void @llvm.dbg.value(metadata i8* %28, metadata !4370, metadata !DIExpression()), !dbg !4378
  %29 = load i8, i8* %26, align 1, !dbg !4401
  %30 = zext i8 %29 to i32, !dbg !4401
  call void @llvm.dbg.value(metadata i32 %30, metadata !4377, metadata !DIExpression()), !dbg !4378
  %31 = shl nuw nsw i32 %30, 2, !dbg !4402
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4403
  %33 = bitcast i8* %32 to i8**, !dbg !4404
  call void @llvm.dbg.value(metadata i8** %33, metadata !4371, metadata !DIExpression()), !dbg !4378
  store i8* %28, i8** %33, align 4, !dbg !4405
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #27, !dbg !4406
  %35 = add i32 %34, 1, !dbg !4407
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4408
  call void @llvm.dbg.value(metadata i8* %36, metadata !4370, metadata !DIExpression()), !dbg !4378
  %37 = add nuw nsw i32 %27, 1, !dbg !4409
  call void @llvm.dbg.value(metadata i32 %37, metadata !4372, metadata !DIExpression()), !dbg !4378
  %38 = icmp eq i32 %37, %9, !dbg !4384
  br i1 %38, label %39, label %25, !dbg !4387, !llvm.loop !4410

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4412
  call void @llvm.dbg.value(metadata i8* %40, metadata !4363, metadata !DIExpression()), !dbg !4378
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4413
  %42 = bitcast i8* %41 to i8**, !dbg !4413
  %43 = load i8*, i8** %42, align 1, !dbg !4413
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #28, !dbg !4414
  br label %45, !dbg !4415

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4378
  ret i32 %46, !dbg !4416
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4417 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4421, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4422, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.value(metadata i8* %2, metadata !4423, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.value(metadata i8* %3, metadata !4424, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.value(metadata i8* %4, metadata !4425, metadata !DIExpression()), !dbg !4431
  call void @llvm.dbg.value(metadata i8* %4, metadata !4426, metadata !DIExpression()), !dbg !4431
  %6 = ptrtoint i8* %4 to i32, !dbg !4432
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4432
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #27, !dbg !4432
  ret i32 %8, !dbg !4433
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !4434 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4438, metadata !DIExpression()), !dbg !4443
  call void @llvm.dbg.value(metadata i32 %1, metadata !4439, metadata !DIExpression()), !dbg !4443
  call void @llvm.dbg.value(metadata i8 0, metadata !4441, metadata !DIExpression()), !dbg !4443
  call void @llvm.dbg.value(metadata i32 0, metadata !4442, metadata !DIExpression()), !dbg !4443
  call void @llvm.dbg.value(metadata i8 poison, metadata !4441, metadata !DIExpression()), !dbg !4443
  call void @llvm.dbg.value(metadata i8* %0, metadata !4438, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4443
  %3 = load i8, i8* %0, align 1, !dbg !4444
  call void @llvm.dbg.value(metadata i8 %3, metadata !4440, metadata !DIExpression()), !dbg !4443
  %4 = icmp eq i8 %3, 0, !dbg !4445
  br i1 %4, label %29, label %5, !dbg !4446

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4447
  call void @llvm.dbg.value(metadata i32 %8, metadata !4442, metadata !DIExpression()), !dbg !4443
  br i1 %9, label %11, label %22, !dbg !4448

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4450
  br i1 %12, label %13, label %17, !dbg !4454

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4455
  br i1 %14, label %29, label %15, !dbg !4458

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #28, !dbg !4459
  br i1 %16, label %29, label %22, !dbg !4461

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #28, !dbg !4462
  %19 = xor i1 %18, true, !dbg !4464
  %20 = zext i1 %18 to i32, !dbg !4464
  %21 = add nsw i32 %8, %20, !dbg !4464
  br label %22, !dbg !4464

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4443
  call void @llvm.dbg.value(metadata i32 %24, metadata !4442, metadata !DIExpression()), !dbg !4443
  call void @llvm.dbg.value(metadata i8 poison, metadata !4441, metadata !DIExpression()), !dbg !4443
  %25 = icmp eq i8 %6, 37, !dbg !4465
  %26 = xor i1 %25, %23, !dbg !4467
  call void @llvm.dbg.value(metadata i8* %10, metadata !4438, metadata !DIExpression()), !dbg !4443
  call void @llvm.dbg.value(metadata i8* %10, metadata !4438, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4443
  %27 = load i8, i8* %10, align 1, !dbg !4444
  call void @llvm.dbg.value(metadata i8 %27, metadata !4440, metadata !DIExpression()), !dbg !4443
  %28 = icmp eq i8 %27, 0, !dbg !4445
  br i1 %28, label %29, label %5, !dbg !4446, !llvm.loop !4468

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4443
  ret i1 %30, !dbg !4470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #5 !dbg !4471 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4475, metadata !DIExpression()), !dbg !4476
  %2 = add i8 %0, -64, !dbg !4477
  %3 = icmp ult i8 %2, 59, !dbg !4477
  ret i1 %3, !dbg !4478
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4479 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4487, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %1, metadata !4488, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4489, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8* %3, metadata !4490, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %4, metadata !4491, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i16* %5, metadata !4492, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %6, metadata !4493, metadata !DIExpression()), !dbg !4556
  %11 = icmp eq i8* %0, null, !dbg !4557
  br i1 %11, label %12, label %13, !dbg !4560

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 916) #27, !dbg !4561
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 916) #27, !dbg !4561
  unreachable, !dbg !4561

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !4494, metadata !DIExpression()), !dbg !4556
  %14 = bitcast i8* %0 to i32*, !dbg !4563
  call void @llvm.dbg.value(metadata i32* %14, metadata !4495, metadata !DIExpression()), !dbg !4556
  %15 = and i32 %4, 8, !dbg !4564
  %16 = icmp eq i32 %15, 0, !dbg !4565
  call void @llvm.dbg.value(metadata i1 %16, metadata !4499, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4556
  call void @llvm.dbg.value(metadata i8* %0, metadata !4502, metadata !DIExpression()), !dbg !4556
  %17 = icmp eq i32 %1, 0, !dbg !4566
  br i1 %17, label %18, label %20, !dbg !4567

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #28, !dbg !4568
  br label %20, !dbg !4567

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !4567
  call void @llvm.dbg.value(metadata i32 %21, metadata !4488, metadata !DIExpression()), !dbg !4556
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4569
  %23 = load i8, i8* %22, align 1, !dbg !4569
  %24 = zext i8 %23 to i32, !dbg !4570
  call void @llvm.dbg.value(metadata i32 %24, metadata !4497, metadata !DIExpression()), !dbg !4556
  %25 = icmp ne i8 %23, 0, !dbg !4571
  %26 = and i32 %4, 1, !dbg !4572
  %27 = icmp ne i32 %26, 0, !dbg !4572
  %28 = and i1 %27, %25, !dbg !4572
  call void @llvm.dbg.value(metadata i1 %28, metadata !4501, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4556
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4573
  %30 = load i8, i8* %29, align 1, !dbg !4573
  %31 = zext i8 %30 to i32, !dbg !4574
  call void @llvm.dbg.value(metadata i32 %31, metadata !4498, metadata !DIExpression()), !dbg !4556
  %32 = icmp ne i8 %30, 0, !dbg !4575
  %33 = and i32 %4, 2, !dbg !4576
  %34 = icmp ne i32 %33, 0, !dbg !4576
  %35 = and i1 %34, %32, !dbg !4576
  call void @llvm.dbg.value(metadata i1 %35, metadata !4500, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4556
  %36 = select i1 %35, i1 true, i1 %28, !dbg !4577
  br i1 %36, label %41, label %37, !dbg !4577

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4579
  br i1 %38, label %287, label %39, !dbg !4582

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #27, !dbg !4583
  br label %287, !dbg !4585

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4586
  %43 = zext i8 %42 to i32, !dbg !4587
  %44 = shl nuw nsw i32 %43, 2, !dbg !4588
  call void @llvm.dbg.value(metadata i32 %44, metadata !4496, metadata !DIExpression()), !dbg !4556
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4589
  %46 = bitcast i8* %45 to i8**, !dbg !4590
  %47 = load i8*, i8** %46, align 4, !dbg !4590
  call void @llvm.dbg.value(metadata i8* %47, metadata !4505, metadata !DIExpression()), !dbg !4556
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4591
  call void @llvm.dbg.value(metadata i8* %48, metadata !4506, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 0, metadata !4507, metadata !DIExpression()), !dbg !4556
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4592
  br i1 %49, label %50, label %135, !dbg !4593

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !4504, metadata !DIExpression()), !dbg !4556
  br i1 %28, label %51, label %76, !dbg !4594

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !4504, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8* %48, metadata !4506, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 0, metadata !4507, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 0, metadata !4508, metadata !DIExpression()), !dbg !4595
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4596

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !4504, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8* %55, metadata !4506, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %56, metadata !4507, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %57, metadata !4508, metadata !DIExpression()), !dbg !4595
  %58 = load i8, i8* %55, align 1, !dbg !4597
  %59 = zext i8 %58 to i32, !dbg !4598
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4598
  %61 = bitcast i32* %60 to i8**, !dbg !4599
  %62 = load i8*, i8** %61, align 4, !dbg !4599
  call void @llvm.dbg.value(metadata i8* %62, metadata !4514, metadata !DIExpression()), !dbg !4600
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #28, !dbg !4601
  call void @llvm.dbg.value(metadata i32 %63, metadata !4517, metadata !DIExpression()), !dbg !4600
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4602
  br i1 %65, label %66, label %70, !dbg !4602

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4604
  %68 = add nuw i32 %56, 1, !dbg !4606
  call void @llvm.dbg.value(metadata i32 %68, metadata !4507, metadata !DIExpression()), !dbg !4556
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4607
  store i16 %67, i16* %69, align 2, !dbg !4608
  br label %70, !dbg !4609

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !4556
  call void @llvm.dbg.value(metadata i32 %71, metadata !4507, metadata !DIExpression()), !dbg !4556
  %72 = add nsw i32 %63, %54, !dbg !4610
  call void @llvm.dbg.value(metadata i32 %72, metadata !4504, metadata !DIExpression()), !dbg !4556
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4611
  call void @llvm.dbg.value(metadata i8* %73, metadata !4506, metadata !DIExpression()), !dbg !4556
  %74 = add nuw nsw i32 %57, 1, !dbg !4612
  call void @llvm.dbg.value(metadata i32 %74, metadata !4508, metadata !DIExpression()), !dbg !4595
  %75 = icmp eq i32 %74, %24, !dbg !4613
  br i1 %75, label %82, label %53, !dbg !4596, !llvm.loop !4614

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4616
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4616
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4616
  br label %82, !dbg !4616

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4619
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !4556
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4620
  call void @llvm.dbg.value(metadata i1 undef, metadata !4518, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4621
  call void @llvm.dbg.value(metadata i32 0, metadata !4519, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %85, metadata !4504, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8* %84, metadata !4506, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %83, metadata !4507, metadata !DIExpression()), !dbg !4556
  %86 = icmp eq i8 %30, 0, !dbg !4623
  br i1 %86, label %287, label %87, !dbg !4624

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4625
  %89 = icmp eq i32 %88, 0, !dbg !4626
  call void @llvm.dbg.value(metadata i1 %89, metadata !4518, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4621
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4624

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !4504, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8* %96, metadata !4506, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %97, metadata !4507, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %98, metadata !4519, metadata !DIExpression()), !dbg !4622
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4627
  call void @llvm.dbg.value(metadata i8* %99, metadata !4506, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8 undef, metadata !4521, metadata !DIExpression()), !dbg !4628
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4629
  call void @llvm.dbg.value(metadata i8* %100, metadata !4506, metadata !DIExpression()), !dbg !4556
  %101 = load i8, i8* %99, align 1, !dbg !4630
  call void @llvm.dbg.value(metadata i8 %101, metadata !4524, metadata !DIExpression()), !dbg !4628
  %102 = zext i8 %101 to i32, !dbg !4631
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4631
  %104 = bitcast i32* %103 to i8**, !dbg !4632
  %105 = load i8*, i8** %104, align 4, !dbg !4632
  call void @llvm.dbg.value(metadata i8* %105, metadata !4525, metadata !DIExpression()), !dbg !4628
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #28, !dbg !4633
  call void @llvm.dbg.value(metadata i1 %106, metadata !4526, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4628
  br i1 %16, label %113, label %107, !dbg !4634

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4636
  call void @llvm.dbg.value(metadata i8 %108, metadata !4521, metadata !DIExpression()), !dbg !4628
  %109 = zext i8 %108 to i32, !dbg !4637
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #28, !dbg !4638
  br i1 %110, label %111, label %113, !dbg !4639

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.35, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #27, !dbg !4640
  %112 = add nsw i32 %95, -2, !dbg !4646
  call void @llvm.dbg.value(metadata i32 %112, metadata !4504, metadata !DIExpression()), !dbg !4556
  br label %130, !dbg !4647

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4648

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4649

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4651
  call void @llvm.dbg.value(metadata i32 %116, metadata !4504, metadata !DIExpression()), !dbg !4556
  br label %130, !dbg !4654

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4655

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !4552), !dbg !4656
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #28, !dbg !4657
  call void @llvm.dbg.value(metadata i32 %119, metadata !4527, metadata !DIExpression()), !dbg !4628
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4658
  br i1 %121, label %122, label %126, !dbg !4658

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4660
  %124 = add nuw i32 %97, 1, !dbg !4662
  call void @llvm.dbg.value(metadata i32 %124, metadata !4507, metadata !DIExpression()), !dbg !4556
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4663
  store i16 %123, i16* %125, align 2, !dbg !4664
  br label %126, !dbg !4665

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !4556
  call void @llvm.dbg.value(metadata i32 %127, metadata !4507, metadata !DIExpression()), !dbg !4556
  %128 = add i32 %95, -1, !dbg !4666
  %129 = add i32 %128, %119, !dbg !4667
  call void @llvm.dbg.value(metadata i32 %129, metadata !4504, metadata !DIExpression()), !dbg !4556
  br label %130, !dbg !4668

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !4556
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4628
  call void @llvm.dbg.value(metadata i32 %132, metadata !4504, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %131, metadata !4507, metadata !DIExpression()), !dbg !4556
  %133 = add nuw nsw i32 %98, 1, !dbg !4669
  call void @llvm.dbg.value(metadata i8* %100, metadata !4506, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %133, metadata !4519, metadata !DIExpression()), !dbg !4622
  %134 = icmp eq i32 %133, %31, !dbg !4623
  br i1 %134, label %287, label %94, !dbg !4624, !llvm.loop !4670

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4529, metadata !DIExpression()), !dbg !4672
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4530, metadata !DIExpression()), !dbg !4673
  br i1 %28, label %136, label %138, !dbg !4674

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !4531, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8 0, metadata !4532, metadata !DIExpression()), !dbg !4556
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4675
  call void @llvm.dbg.value(metadata i8* %137, metadata !4533, metadata !DIExpression()), !dbg !4556
  br label %143, !dbg !4678

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4679
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4679

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4533, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8 undef, metadata !4532, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8 0, metadata !4531, metadata !DIExpression()), !dbg !4556
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #27, !dbg !4681
  br label %148, !dbg !4684

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4685
  call void @llvm.dbg.value(metadata i8* %151, metadata !4506, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 0, metadata !4535, metadata !DIExpression()), !dbg !4686
  call void @llvm.dbg.value(metadata i8 %149, metadata !4532, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8 %150, metadata !4531, metadata !DIExpression()), !dbg !4556
  %152 = icmp eq i8 %30, 0, !dbg !4687
  br i1 %152, label %153, label %155, !dbg !4688

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4689
  br label %160, !dbg !4688

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4688

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4689
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4690
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4691
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !4556
  call void @llvm.dbg.value(metadata i8 undef, metadata !4528, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4556
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4692
  %166 = load i8, i8* %165, align 1, !dbg !4692
  %167 = zext i8 %162 to i32, !dbg !4693
  %168 = add i8 %166, %162, !dbg !4694
  call void @llvm.dbg.value(metadata i8 %168, metadata !4528, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4556
  %169 = icmp eq i32 %33, 0, !dbg !4695
  %170 = lshr i8 %163, 1, !dbg !4696
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4696
  call void @llvm.dbg.value(metadata i8 %171, metadata !4528, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4556
  %172 = icmp eq i32 %26, 0, !dbg !4697
  %173 = icmp eq i32 %161, 0, !dbg !4689
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4689
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4689
  call void @llvm.dbg.value(metadata i8 %175, metadata !4528, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4556
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4543, metadata !DIExpression()), !dbg !4698
  %176 = load i32, i32* %14, align 1, !dbg !4699
  store i8 %168, i8* %165, align 1, !dbg !4700
  store i8 %175, i8* %22, align 1, !dbg !4700
  store i8 %171, i8* %29, align 1, !dbg !4700
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #27, !dbg !4701
  call void @llvm.dbg.value(metadata i32 %177, metadata !4534, metadata !DIExpression()), !dbg !4556
  %178 = icmp slt i32 %177, 0, !dbg !4702
  br i1 %178, label %287, label %240, !dbg !4704

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !4506, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %181, metadata !4535, metadata !DIExpression()), !dbg !4686
  call void @llvm.dbg.value(metadata i8 %182, metadata !4532, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8 %183, metadata !4531, metadata !DIExpression()), !dbg !4556
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4705
  call void @llvm.dbg.value(metadata i8* %184, metadata !4506, metadata !DIExpression()), !dbg !4556
  %185 = load i8, i8* %180, align 1, !dbg !4706
  call void @llvm.dbg.value(metadata i8 %185, metadata !4537, metadata !DIExpression()), !dbg !4707
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4708
  call void @llvm.dbg.value(metadata i8* %186, metadata !4506, metadata !DIExpression()), !dbg !4556
  %187 = load i8, i8* %184, align 1, !dbg !4709
  call void @llvm.dbg.value(metadata i8 %187, metadata !4540, metadata !DIExpression()), !dbg !4707
  %188 = zext i8 %187 to i32, !dbg !4710
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4710
  %190 = bitcast i32* %189 to i8**, !dbg !4711
  %191 = load i8*, i8** %190, align 4, !dbg !4711
  call void @llvm.dbg.value(metadata i8* %191, metadata !4541, metadata !DIExpression()), !dbg !4707
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #28, !dbg !4712
  call void @llvm.dbg.value(metadata i1 %192, metadata !4542, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4707
  br i1 %16, label %196, label %193, !dbg !4713

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4715
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #28, !dbg !4716
  br i1 %195, label %235, label %196, !dbg !4717

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4718

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4719

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4722
  br i1 %199, label %201, label %200, !dbg !4727

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1086) #27, !dbg !4728
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1086) #27, !dbg !4728
  unreachable, !dbg !4728

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4722
  %203 = add nuw nsw i8 %183, 1, !dbg !4730
  call void @llvm.dbg.value(metadata i8 %203, metadata !4531, metadata !DIExpression()), !dbg !4556
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4731
  br label %231, !dbg !4732

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4733

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4734
  br i1 %207, label %209, label %208, !dbg !4739

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1089) #27, !dbg !4740
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1089) #27, !dbg !4740
  unreachable, !dbg !4740

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4734
  %211 = add nuw nsw i8 %182, 1, !dbg !4742
  call void @llvm.dbg.value(metadata i8 %211, metadata !4532, metadata !DIExpression()), !dbg !4556
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4743
  br label %231, !dbg !4744

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4745

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4747
  br i1 %215, label %217, label %216, !dbg !4752

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1096) #27, !dbg !4753
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1096) #27, !dbg !4753
  unreachable, !dbg !4753

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4747
  %219 = add nuw nsw i8 %183, 1, !dbg !4755
  call void @llvm.dbg.value(metadata i8 %219, metadata !4531, metadata !DIExpression()), !dbg !4556
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4756
  br label %231, !dbg !4757

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4758
  br i1 %222, label %224, label %223, !dbg !4762

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1099) #27, !dbg !4763
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1099) #27, !dbg !4763
  unreachable, !dbg !4763

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4758
  %226 = add nuw nsw i8 %182, 1, !dbg !4765
  call void @llvm.dbg.value(metadata i8 %226, metadata !4532, metadata !DIExpression()), !dbg !4556
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4766
  store i8 %185, i8* %227, align 1, !dbg !4767
  %228 = add nuw nsw i8 %182, 2, !dbg !4768
  call void @llvm.dbg.value(metadata i8 %228, metadata !4532, metadata !DIExpression()), !dbg !4556
  %229 = zext i8 %226 to i32, !dbg !4769
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4769
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4770
  br label %235, !dbg !4771

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !4556
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4691
  call void @llvm.dbg.value(metadata i8 %237, metadata !4532, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8 %236, metadata !4531, metadata !DIExpression()), !dbg !4556
  %238 = add nuw nsw i32 %181, 1, !dbg !4771
  call void @llvm.dbg.value(metadata i8* %186, metadata !4506, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %238, metadata !4535, metadata !DIExpression()), !dbg !4686
  %239 = icmp eq i32 %238, %31, !dbg !4687
  br i1 %239, label %160, label %179, !dbg !4688, !llvm.loop !4772

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4696
  call void @llvm.dbg.value(metadata i32 %177, metadata !4504, metadata !DIExpression()), !dbg !4556
  store i32 %176, i32* %14, align 1, !dbg !4774
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4775
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #27, !dbg !4776
  call void @llvm.dbg.value(metadata i32 %243, metadata !4534, metadata !DIExpression()), !dbg !4556
  %244 = icmp slt i32 %243, 0, !dbg !4777
  br i1 %244, label %287, label %245, !dbg !4779

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !4504, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4556
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4780
  %248 = add nuw nsw i32 %44, %24, !dbg !4780
  %249 = sub i32 %247, %248, !dbg !4780
  call void @llvm.dbg.value(metadata i32 %249, metadata !4544, metadata !DIExpression()), !dbg !4556
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #27, !dbg !4781
  call void @llvm.dbg.value(metadata i32 %250, metadata !4534, metadata !DIExpression()), !dbg !4556
  %251 = icmp slt i32 %250, 0, !dbg !4782
  br i1 %251, label %287, label %252, !dbg !4784

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4785
  call void @llvm.dbg.value(metadata i32 %253, metadata !4504, metadata !DIExpression()), !dbg !4556
  %254 = add nuw nsw i32 %253, %250, !dbg !4786
  call void @llvm.dbg.value(metadata i32 %254, metadata !4504, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 0, metadata !4545, metadata !DIExpression()), !dbg !4787
  %255 = icmp eq i8 %162, 0, !dbg !4788
  br i1 %255, label %284, label %256, !dbg !4789

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4789

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !4545, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata i32 %260, metadata !4504, metadata !DIExpression()), !dbg !4556
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4790
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4791
  %262 = load i8, i8* %261, align 1, !dbg !4791
  call void @llvm.dbg.value(metadata i8 %262, metadata !4547, metadata !DIExpression()), !dbg !4792
  store i8 %262, i8* %10, align 1, !dbg !4793
  %263 = zext i8 %262 to i32, !dbg !4794
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4794
  %265 = bitcast i32* %264 to i8**, !dbg !4795
  %266 = load i8*, i8** %265, align 4, !dbg !4795
  call void @llvm.dbg.value(metadata i8* %266, metadata !4550, metadata !DIExpression()), !dbg !4792
  br i1 %257, label %270, label %267, !dbg !4796

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4797
  %269 = load i16, i16* %268, align 2, !dbg !4797
  br label %270, !dbg !4796

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4796
  call void @llvm.dbg.value(metadata i32 undef, metadata !4551, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4792
  call void @llvm.dbg.value(metadata i8* %10, metadata !4547, metadata !DIExpression(DW_OP_deref)), !dbg !4792
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #27, !dbg !4798
  call void @llvm.dbg.value(metadata i32 %272, metadata !4534, metadata !DIExpression()), !dbg !4556
  %273 = icmp slt i32 %272, 0, !dbg !4799
  br i1 %273, label %277, label %274, !dbg !4801

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !4551, metadata !DIExpression()), !dbg !4792
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !4504, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4556
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #28, !dbg !4802
  call void @llvm.dbg.value(metadata i32 %275, metadata !4534, metadata !DIExpression()), !dbg !4556
  %276 = icmp slt i32 %275, 0, !dbg !4803
  br i1 %276, label %277, label %279, !dbg !4805

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4504, metadata !DIExpression()), !dbg !4556
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4806
  call void @llvm.dbg.value(metadata i32 undef, metadata !4504, metadata !DIExpression()), !dbg !4556
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4807
  call void @llvm.dbg.value(metadata i32 %280, metadata !4504, metadata !DIExpression()), !dbg !4556
  %281 = add nsw i32 %280, %275, !dbg !4808
  call void @llvm.dbg.value(metadata i32 %281, metadata !4504, metadata !DIExpression()), !dbg !4556
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #26, !dbg !4806
  %282 = add nuw nsw i32 %259, 1, !dbg !4809
  call void @llvm.dbg.value(metadata i32 %282, metadata !4545, metadata !DIExpression()), !dbg !4787
  %283 = icmp eq i32 %282, %167, !dbg !4788
  br i1 %283, label %284, label %258, !dbg !4789, !llvm.loop !4810

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4786
  call void @llvm.dbg.value(metadata i32 %285, metadata !4504, metadata !DIExpression()), !dbg !4556
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #27, !dbg !4812
  br label %287, !dbg !4813

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !4556
  ret i32 %288, !dbg !4814
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4815 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4819, metadata !DIExpression()), !dbg !4827
  %2 = icmp eq i8* %0, null, !dbg !4828
  br i1 %2, label %3, label %4, !dbg !4831

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 198) #27, !dbg !4832
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 198) #27, !dbg !4832
  unreachable, !dbg !4832

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4820, metadata !DIExpression()), !dbg !4827
  call void @llvm.dbg.value(metadata i8* %0, metadata !4821, metadata !DIExpression()), !dbg !4827
  %5 = load i8, i8* %0, align 1, !dbg !4834
  %6 = zext i8 %5 to i32, !dbg !4834
  %7 = shl nuw nsw i32 %6, 2, !dbg !4835
  call void @llvm.dbg.value(metadata i32 %7, metadata !4822, metadata !DIExpression()), !dbg !4827
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4836
  %9 = load i8, i8* %8, align 1, !dbg !4836
  %10 = zext i8 %9 to i32, !dbg !4836
  call void @llvm.dbg.value(metadata i32 %10, metadata !4823, metadata !DIExpression()), !dbg !4827
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4837
  %12 = load i8, i8* %11, align 1, !dbg !4837
  %13 = zext i8 %12 to i32, !dbg !4837
  call void @llvm.dbg.value(metadata i32 %13, metadata !4824, metadata !DIExpression()), !dbg !4827
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4838
  call void @llvm.dbg.value(metadata i8* %14, metadata !4820, metadata !DIExpression()), !dbg !4827
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4839
  call void @llvm.dbg.value(metadata i8* %15, metadata !4820, metadata !DIExpression()), !dbg !4827
  call void @llvm.dbg.value(metadata i32 0, metadata !4825, metadata !DIExpression()), !dbg !4840
  %16 = icmp eq i8 %9, 0, !dbg !4841
  br i1 %16, label %17, label %22, !dbg !4843

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4827
  %19 = ptrtoint i8* %18 to i32, !dbg !4844
  %20 = ptrtoint i8* %0 to i32, !dbg !4844
  %21 = sub i32 %19, %20, !dbg !4844
  ret i32 %21, !dbg !4845

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4825, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata i8* %24, metadata !4820, metadata !DIExpression()), !dbg !4827
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4846
  call void @llvm.dbg.value(metadata i8* %25, metadata !4820, metadata !DIExpression()), !dbg !4827
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #27, !dbg !4848
  %27 = add i32 %26, 1, !dbg !4849
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4850
  call void @llvm.dbg.value(metadata i8* %28, metadata !4820, metadata !DIExpression()), !dbg !4827
  %29 = add nuw nsw i32 %23, 1, !dbg !4851
  call void @llvm.dbg.value(metadata i32 %29, metadata !4825, metadata !DIExpression()), !dbg !4840
  %30 = icmp eq i32 %29, %10, !dbg !4841
  br i1 %30, label %17, label %22, !dbg !4843, !llvm.loop !4852
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4854 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4858, metadata !DIExpression()), !dbg !4862
  call void @llvm.dbg.value(metadata i8* %1, metadata !4859, metadata !DIExpression()), !dbg !4862
  call void @llvm.dbg.value(metadata i8* %2, metadata !4860, metadata !DIExpression()), !dbg !4862
  call void @llvm.dbg.value(metadata i16 %3, metadata !4861, metadata !DIExpression()), !dbg !4862
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4863
  br i1 %5, label %6, label %9, !dbg !4865

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4866
  %8 = add i32 %7, 1, !dbg !4868
  br label %20, !dbg !4869

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4870
  br i1 %10, label %13, label %11, !dbg !4871

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4871
  br label %16, !dbg !4871

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !4872
  %15 = add i32 %14, 1, !dbg !4873
  br label %16, !dbg !4871

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4871
  %18 = and i32 %17, 65535, !dbg !4874
  call void @llvm.dbg.value(metadata i32 %17, metadata !4861, metadata !DIExpression()), !dbg !4862
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #27, !dbg !4875
  br label %20, !dbg !4876

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4862
  ret i32 %21, !dbg !4877
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4878 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4880, metadata !DIExpression()), !dbg !4881
  ret i32 0, !dbg !4882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #12 !dbg !4883 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4887, metadata !DIExpression()), !dbg !4888
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4889
  ret void, !dbg !4890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #13 !dbg !4891 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4894
  ret i8* %1, !dbg !4895
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4896 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4907, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.value(metadata i8* %0, metadata !4906, metadata !DIExpression()), !dbg !4916
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #28, !dbg !4917
  ret void, !dbg !4919
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4920 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4924, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i8* %1, metadata !4925, metadata !DIExpression()), !dbg !4926
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4927
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !4927
  ret i32 %4, !dbg !4928
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4929 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4936, metadata !DIExpression()), !dbg !4937
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4933, metadata !DIExpression()), !dbg !4937
  call void @llvm.dbg.value(metadata i8* %1, metadata !4934, metadata !DIExpression()), !dbg !4937
  call void @llvm.dbg.value(metadata i8* %2, metadata !4935, metadata !DIExpression()), !dbg !4937
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !4938
  ret void, !dbg !4939
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4940 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4944, metadata !DIExpression()), !dbg !4947
  call void @llvm.dbg.value(metadata i32 %1, metadata !4945, metadata !DIExpression()), !dbg !4947
  call void @llvm.dbg.value(metadata i32 0, metadata !4946, metadata !DIExpression()), !dbg !4947
  %3 = icmp eq i32 %1, 0, !dbg !4948
  br i1 %3, label %13, label %4, !dbg !4951

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4946, metadata !DIExpression()), !dbg !4947
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4952
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4954
  %8 = load i8, i8* %7, align 1, !dbg !4954
  %9 = zext i8 %8 to i32, !dbg !4954
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !4952
  %11 = add nuw i32 %5, 1, !dbg !4955
  call void @llvm.dbg.value(metadata i32 %11, metadata !4946, metadata !DIExpression()), !dbg !4947
  %12 = icmp eq i32 %11, %1, !dbg !4948
  br i1 %12, label %13, label %4, !dbg !4951, !llvm.loop !4956

13:                                               ; preds = %4, %2
  ret void, !dbg !4958
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4959 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4963, metadata !DIExpression()), !dbg !4965
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4966
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !4966
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4964, metadata !DIExpression()), !dbg !4967
  call void @llvm.va_start(i8* nonnull %3), !dbg !4968
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4969
  %5 = load i32, i32* %4, align 4, !dbg !4969
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4969
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #28, !dbg !4969
  call void @llvm.va_end(i8* nonnull %3), !dbg !4970
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !4971
  ret void, !dbg !4971
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4972 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4976, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i32 %1, metadata !4977, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i8* %2, metadata !4978, metadata !DIExpression()), !dbg !4981
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4982
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !4982
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4979, metadata !DIExpression()), !dbg !4983
  call void @llvm.va_start(i8* nonnull %5), !dbg !4984
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4985
  %7 = load i32, i32* %6, align 4, !dbg !4985
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4985
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #28, !dbg !4985
  call void @llvm.dbg.value(metadata i32 %9, metadata !4980, metadata !DIExpression()), !dbg !4981
  call void @llvm.va_end(i8* nonnull %5), !dbg !4986
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !4987
  ret i32 %9, !dbg !4988
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4989 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4996, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.value(metadata i8* %0, metadata !4993, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.value(metadata i32 %1, metadata !4994, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.value(metadata i8* %2, metadata !4995, metadata !DIExpression()), !dbg !5003
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5004
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #26, !dbg !5004
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4997, metadata !DIExpression()), !dbg !5005
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5006
  store i8* %0, i8** %7, align 4, !dbg !5006
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5006
  store i32 %1, i32* %8, align 4, !dbg !5006
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5006
  store i32 0, i32* %9, align 4, !dbg !5006
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #28, !dbg !5007
  %10 = load i32, i32* %9, align 4, !dbg !5008
  %11 = load i32, i32* %8, align 4, !dbg !5010
  %12 = icmp slt i32 %10, %11, !dbg !5011
  br i1 %12, label %13, label %15, !dbg !5012

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5013
  store i8 0, i8* %14, align 1, !dbg !5015
  br label %15, !dbg !5016

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #26, !dbg !5017
  ret i32 %10, !dbg !5018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #14 !dbg !5019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5024, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5025, metadata !DIExpression()), !dbg !5026
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5027
  %4 = load i8*, i8** %3, align 4, !dbg !5027
  %5 = icmp eq i8* %4, null, !dbg !5029
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5030
  br i1 %5, label %12, label %8, !dbg !5031

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5032
  %10 = load i32, i32* %9, align 4, !dbg !5032
  %11 = icmp slt i32 %7, %10, !dbg !5033
  br i1 %11, label %15, label %12, !dbg !5034

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5035
  %14 = add nsw i32 %7, 1, !dbg !5037
  store i32 %14, i32* %13, align 4, !dbg !5037
  br label %25, !dbg !5038

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5039
  %17 = icmp eq i32 %7, %16, !dbg !5041
  br i1 %17, label %18, label %21, !dbg !5042

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5043
  store i32 %19, i32* %6, align 4, !dbg !5043
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5045
  store i8 0, i8* %20, align 1, !dbg !5046
  br label %25, !dbg !5047

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5048
  %23 = add nsw i32 %7, 1, !dbg !5050
  store i32 %23, i32* %6, align 4, !dbg !5050
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5051
  store i8 %22, i8* %24, align 1, !dbg !5052
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5053
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !5054 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5059, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata i8* %1, metadata !5060, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata i8* %2, metadata !5061, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata i8* %3, metadata !5062, metadata !DIExpression()), !dbg !5063
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !5064
  %5 = tail call fastcc %struct.k_thread* @k_current_get.41() #29, !dbg !5065
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #28, !dbg !5066
  unreachable, !dbg !5067
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.41() unnamed_addr #6 !dbg !5068 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.42() #29, !dbg !5174
  ret %struct.k_thread* %1, !dbg !5175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5176 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5180, metadata !DIExpression()), !dbg !5181
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !5182, !srcloc !5184
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !5185
  ret void, !dbg !5186
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.42() unnamed_addr #6 !dbg !5187 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !5188, !srcloc !5190
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !5191
  ret %struct.k_thread* %1, !dbg !5192
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !5193 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5204, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.value(metadata i8* %1, metadata !5205, metadata !DIExpression()), !dbg !5208
  %3 = icmp eq i8* %1, null, !dbg !5209
  br i1 %3, label %16, label %4, !dbg !5211

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5212
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5212
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5206, metadata !DIExpression()), !dbg !5208
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #28, !dbg !5213, !range !5214
  call void @llvm.dbg.value(metadata i32 %7, metadata !5207, metadata !DIExpression()), !dbg !5208
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #28, !dbg !5215
  br i1 %8, label %10, label %9, !dbg !5218

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 176) #27, !dbg !5219
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.46, i32 0, i32 0), i8* noundef nonnull %1) #27, !dbg !5219
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 176) #27, !dbg !5219
  unreachable, !dbg !5219

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #28, !dbg !5221
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #28, !dbg !5221
  %13 = icmp eq i32 %12, %7, !dbg !5221
  br i1 %13, label %15, label %14, !dbg !5224

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.47, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 185) #27, !dbg !5225
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.48, i32 0, i32 0), i8* noundef nonnull %1) #27, !dbg !5225
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 185) #27, !dbg !5225
  unreachable, !dbg !5225

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #28, !dbg !5227
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #28, !dbg !5228
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !5229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #5 !dbg !5230 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5234, metadata !DIExpression()), !dbg !5238
  call void @llvm.dbg.value(metadata i8* %1, metadata !5235, metadata !DIExpression()), !dbg !5238
  call void @llvm.dbg.value(metadata i8* %1, metadata !5236, metadata !DIExpression()), !dbg !5238
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5239
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5237, metadata !DIExpression()), !dbg !5238
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !5240
  %5 = ptrtoint i8* %4 to i32, !dbg !5241
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !5241
  %7 = sub i32 %5, %6, !dbg !5241
  %8 = lshr i32 %7, 3, !dbg !5242
  ret i32 %8, !dbg !5243
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5244 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5248, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata i32 %1, metadata !5249, metadata !DIExpression()), !dbg !5250
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #28, !dbg !5251
  %4 = and i32 %3, 1, !dbg !5252
  %5 = icmp ne i32 %4, 0, !dbg !5251
  ret i1 %5, !dbg !5253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5254 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5258, metadata !DIExpression()), !dbg !5260
  call void @llvm.dbg.value(metadata i32 %1, metadata !5259, metadata !DIExpression()), !dbg !5260
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5261
  %4 = add i32 %3, %1, !dbg !5262
  ret i32 %4, !dbg !5263
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5264 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5266, metadata !DIExpression()), !dbg !5268
  call void @llvm.dbg.value(metadata i32 %1, metadata !5267, metadata !DIExpression()), !dbg !5268
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #28, !dbg !5269
  %4 = sub i32 %1, %3, !dbg !5270
  ret i32 %4, !dbg !5271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !5272 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5276, metadata !DIExpression()), !dbg !5281
  call void @llvm.dbg.value(metadata i32 %1, metadata !5277, metadata !DIExpression()), !dbg !5281
  call void @llvm.dbg.value(metadata i1 %2, metadata !5278, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5281
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5282
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5279, metadata !DIExpression()), !dbg !5281
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5280, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5281
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !5283
  %6 = bitcast i8* %5 to i16*, !dbg !5283
  %7 = load i16, i16* %6, align 2, !dbg !5283
  %8 = and i16 %7, -2, !dbg !5287
  %9 = zext i1 %2 to i16, !dbg !5287
  %10 = or i16 %8, %9, !dbg !5287
  store i16 %10, i16* %6, align 2, !dbg !5283
  ret void, !dbg !5288
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5289 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5293, metadata !DIExpression()), !dbg !5295
  call void @llvm.dbg.value(metadata i32 %1, metadata !5294, metadata !DIExpression()), !dbg !5295
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5296
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5298
  br i1 %4, label %7, label %5, !dbg !5299

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5300
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5302
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #28, !dbg !5303
  br label %7, !dbg !5304

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5305
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #28, !dbg !5307
  br i1 %9, label %13, label %10, !dbg !5308

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #28, !dbg !5309
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5311
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #28, !dbg !5312
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5313
  call void @llvm.dbg.value(metadata i32 %12, metadata !5294, metadata !DIExpression()), !dbg !5295
  br label %13, !dbg !5314

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5294, metadata !DIExpression()), !dbg !5295
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #28, !dbg !5315
  ret void, !dbg !5316
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5317 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5319, metadata !DIExpression()), !dbg !5324
  call void @llvm.dbg.value(metadata i32 %1, metadata !5320, metadata !DIExpression()), !dbg !5324
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5325, !range !5326
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5327
  call void @llvm.dbg.value(metadata i32 %4, metadata !5321, metadata !DIExpression()), !dbg !5328
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #28, !dbg !5329
  ret void, !dbg !5330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5331 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5335, metadata !DIExpression()), !dbg !5340
  call void @llvm.dbg.value(metadata i32 %1, metadata !5336, metadata !DIExpression()), !dbg !5340
  call void @llvm.dbg.value(metadata i32 %2, metadata !5337, metadata !DIExpression()), !dbg !5340
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5341
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #28, !dbg !5342
  %6 = add i32 %5, %4, !dbg !5343
  call void @llvm.dbg.value(metadata i32 %6, metadata !5338, metadata !DIExpression()), !dbg !5340
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #28, !dbg !5344
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #28, !dbg !5345
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #28, !dbg !5346
  ret void, !dbg !5347
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5348 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5350, metadata !DIExpression()), !dbg !5355
  call void @llvm.dbg.value(metadata i32 %1, metadata !5351, metadata !DIExpression()), !dbg !5355
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5356, !range !5326
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #28, !dbg !5357
  call void @llvm.dbg.value(metadata i32 %4, metadata !5352, metadata !DIExpression()), !dbg !5358
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #28, !dbg !5359
  ret void, !dbg !5360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5361 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5365, metadata !DIExpression()), !dbg !5367
  call void @llvm.dbg.value(metadata i32 %1, metadata !5366, metadata !DIExpression()), !dbg !5367
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #28, !dbg !5368
  %4 = lshr i32 %3, 1, !dbg !5369
  ret i32 %4, !dbg !5370
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !5371 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5375, metadata !DIExpression()), !dbg !5378
  call void @llvm.dbg.value(metadata i32 %1, metadata !5376, metadata !DIExpression()), !dbg !5378
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #28, !dbg !5379
  %4 = add i32 %1, 1, !dbg !5380
  %5 = sub i32 %4, %3, !dbg !5381
  call void @llvm.dbg.value(metadata i32 %5, metadata !5377, metadata !DIExpression()), !dbg !5378
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5382, !range !5383
  %7 = sub nsw i32 31, %6, !dbg !5384
  ret i32 %7, !dbg !5385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5386 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5390, metadata !DIExpression()), !dbg !5399
  call void @llvm.dbg.value(metadata i32 %1, metadata !5391, metadata !DIExpression()), !dbg !5399
  call void @llvm.dbg.value(metadata i32 %2, metadata !5392, metadata !DIExpression()), !dbg !5399
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5393, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5399
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5400
  %5 = load i32, i32* %4, align 4, !dbg !5400
  %6 = icmp eq i32 %5, 0, !dbg !5401
  br i1 %6, label %7, label %12, !dbg !5402

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5403
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5405
  %10 = load i32, i32* %9, align 4, !dbg !5406
  %11 = or i32 %10, %8, !dbg !5406
  store i32 %11, i32* %9, align 4, !dbg !5406
  store i32 %1, i32* %4, align 4, !dbg !5407
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #28, !dbg !5408
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #28, !dbg !5409
  br label %14, !dbg !5410

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5395, metadata !DIExpression()), !dbg !5411
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #28, !dbg !5412, !range !5413
  call void @llvm.dbg.value(metadata i32 %13, metadata !5398, metadata !DIExpression()), !dbg !5411
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #28, !dbg !5414
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #28, !dbg !5415
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #28, !dbg !5416
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #28, !dbg !5417
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5418
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5419 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5421, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 %1, metadata !5422, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.value(metadata i32 %2, metadata !5423, metadata !DIExpression()), !dbg !5424
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #28, !dbg !5425
  ret void, !dbg !5426
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5427 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5429, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i32 %1, metadata !5430, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i32 %2, metadata !5431, metadata !DIExpression()), !dbg !5432
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #28, !dbg !5433
  ret void, !dbg !5434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5435 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5437, metadata !DIExpression()), !dbg !5439
  call void @llvm.dbg.value(metadata i32 %1, metadata !5438, metadata !DIExpression()), !dbg !5439
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #28, !dbg !5440
  ret i32 %3, !dbg !5441
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !5442 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5446, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i32 %1, metadata !5447, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i32 %2, metadata !5448, metadata !DIExpression()), !dbg !5451
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5452
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5449, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5450, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5451
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5450, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5451
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5453
  call void @llvm.dbg.value(metadata i8* %5, metadata !5450, metadata !DIExpression()), !dbg !5451
  %6 = bitcast i8* %5 to i16*, !dbg !5454
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5457
  %8 = load i16, i16* %7, align 2, !dbg !5457
  %9 = zext i16 %8 to i32, !dbg !5457
  ret i32 %9, !dbg !5458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #5 !dbg !5459 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5463, metadata !DIExpression()), !dbg !5464
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5465
  ret %struct.chunk_unit_t* %2, !dbg !5466
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #12 !dbg !5467 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5471, metadata !DIExpression()), !dbg !5477
  call void @llvm.dbg.value(metadata i32 %1, metadata !5472, metadata !DIExpression()), !dbg !5477
  call void @llvm.dbg.value(metadata i32 %2, metadata !5473, metadata !DIExpression()), !dbg !5477
  call void @llvm.dbg.value(metadata i32 %3, metadata !5474, metadata !DIExpression()), !dbg !5477
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5478
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5475, metadata !DIExpression()), !dbg !5477
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5476, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5477
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5479
  call void @llvm.dbg.value(metadata i8* %6, metadata !5476, metadata !DIExpression()), !dbg !5477
  %7 = trunc i32 %3 to i16, !dbg !5480
  %8 = bitcast i8* %6 to i16*, !dbg !5483
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5484
  store i16 %7, i16* %9, align 2, !dbg !5485
  ret void, !dbg !5486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #5 !dbg !5487 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5491, metadata !DIExpression()), !dbg !5492
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #28, !dbg !5493
  ret i32 %2, !dbg !5494
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5495 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5499, metadata !DIExpression()), !dbg !5501
  call void @llvm.dbg.value(metadata i32 %1, metadata !5500, metadata !DIExpression()), !dbg !5501
  %3 = add i32 %1, 4, !dbg !5502
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #28, !dbg !5503
  ret i32 %4, !dbg !5504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #5 !dbg !5505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5509, metadata !DIExpression()), !dbg !5510
  %2 = add i32 %0, 7, !dbg !5511
  %3 = lshr i32 %2, 3, !dbg !5512
  ret i32 %3, !dbg !5513
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5514 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5518, metadata !DIExpression()), !dbg !5521
  call void @llvm.dbg.value(metadata i32 %1, metadata !5519, metadata !DIExpression()), !dbg !5521
  call void @llvm.dbg.value(metadata i32 %2, metadata !5520, metadata !DIExpression()), !dbg !5521
  %4 = shl i32 %2, 1, !dbg !5522
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #28, !dbg !5523
  ret void, !dbg !5524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5525 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5527, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.value(metadata i32 %1, metadata !5528, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.value(metadata i32 %2, metadata !5529, metadata !DIExpression()), !dbg !5530
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #28, !dbg !5531
  ret void, !dbg !5532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5533 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5535, metadata !DIExpression()), !dbg !5543
  call void @llvm.dbg.value(metadata i32 %1, metadata !5536, metadata !DIExpression()), !dbg !5543
  call void @llvm.dbg.value(metadata i32 %2, metadata !5537, metadata !DIExpression()), !dbg !5543
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5544
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !5538, metadata !DIExpression()), !dbg !5543
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5545
  %6 = icmp eq i32 %5, %1, !dbg !5546
  br i1 %6, label %7, label %14, !dbg !5547

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5548
  %9 = xor i32 %8, -1, !dbg !5550
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5551
  %11 = load i32, i32* %10, align 4, !dbg !5552
  %12 = and i32 %11, %9, !dbg !5552
  store i32 %12, i32* %10, align 4, !dbg !5552
  %13 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5553
  store i32 0, i32* %13, align 4, !dbg !5554
  br label %17, !dbg !5555

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5556
  call void @llvm.dbg.value(metadata i32 %15, metadata !5539, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.value(metadata i32 %5, metadata !5542, metadata !DIExpression()), !dbg !5557
  %16 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5558
  store i32 %5, i32* %16, align 4, !dbg !5559
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #28, !dbg !5560
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #28, !dbg !5561
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5563 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5565, metadata !DIExpression()), !dbg !5567
  call void @llvm.dbg.value(metadata i32 %1, metadata !5566, metadata !DIExpression()), !dbg !5567
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #28, !dbg !5568
  ret i32 %3, !dbg !5569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #13 !dbg !5570 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5574, metadata !DIExpression()), !dbg !5581
  call void @llvm.dbg.value(metadata i8* %1, metadata !5575, metadata !DIExpression()), !dbg !5581
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5582
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5582
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5576, metadata !DIExpression()), !dbg !5581
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #28, !dbg !5583
  call void @llvm.dbg.value(metadata i32 %5, metadata !5577, metadata !DIExpression()), !dbg !5581
  %6 = ptrtoint i8* %1 to i32, !dbg !5584
  call void @llvm.dbg.value(metadata i32 %6, metadata !5578, metadata !DIExpression()), !dbg !5581
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #28, !dbg !5585
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5585
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5586
  call void @llvm.dbg.value(metadata i32 %9, metadata !5579, metadata !DIExpression()), !dbg !5581
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #28, !dbg !5587
  %11 = shl i32 %10, 3, !dbg !5588
  call void @llvm.dbg.value(metadata i32 %11, metadata !5580, metadata !DIExpression()), !dbg !5581
  %12 = sub i32 %9, %6, !dbg !5589
  %13 = add i32 %12, %11, !dbg !5590
  ret i32 %13, !dbg !5591
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !5592 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5596, metadata !DIExpression()), !dbg !5602
  call void @llvm.dbg.value(metadata i32 %1, metadata !5597, metadata !DIExpression()), !dbg !5602
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5603
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5603
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5598, metadata !DIExpression()), !dbg !5602
  %5 = icmp eq i32 %1, 0, !dbg !5604
  br i1 %5, label %19, label %6, !dbg !5606

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #28, !dbg !5607
  br i1 %7, label %19, label %8, !dbg !5608

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #28, !dbg !5609, !range !5214
  call void @llvm.dbg.value(metadata i32 %9, metadata !5600, metadata !DIExpression()), !dbg !5602
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #28, !dbg !5610
  call void @llvm.dbg.value(metadata i32 %10, metadata !5601, metadata !DIExpression()), !dbg !5602
  %11 = icmp eq i32 %10, 0, !dbg !5611
  br i1 %11, label %19, label %12, !dbg !5613

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #28, !dbg !5614
  %14 = icmp ugt i32 %13, %9, !dbg !5616
  br i1 %14, label %15, label %17, !dbg !5617

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5618
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #28, !dbg !5620
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #28, !dbg !5621
  br label %17, !dbg !5622

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #28, !dbg !5623
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #28, !dbg !5624
  call void @llvm.dbg.value(metadata i8* %18, metadata !5599, metadata !DIExpression()), !dbg !5602
  br label %19, !dbg !5625

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5602
  ret i8* %20, !dbg !5626
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5627 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5631, metadata !DIExpression()), !dbg !5633
  call void @llvm.dbg.value(metadata i32 %1, metadata !5632, metadata !DIExpression()), !dbg !5633
  %3 = lshr i32 %1, 3, !dbg !5634
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5635
  %5 = load i32, i32* %4, align 4, !dbg !5635
  %6 = icmp uge i32 %3, %5, !dbg !5636
  ret i1 %6, !dbg !5637
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5638 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5642, metadata !DIExpression()), !dbg !5657
  call void @llvm.dbg.value(metadata i32 %1, metadata !5643, metadata !DIExpression()), !dbg !5657
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5658
  call void @llvm.dbg.value(metadata i32 %3, metadata !5644, metadata !DIExpression()), !dbg !5657
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5645, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5657
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5659
  %5 = load i32, i32* %4, align 4, !dbg !5659
  %6 = icmp eq i32 %5, 0, !dbg !5660
  br i1 %6, label %19, label %7, !dbg !5661

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5662
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5663
  call void @llvm.dbg.value(metadata i32 %9, metadata !5649, metadata !DIExpression()), !dbg !5663
  call void @llvm.dbg.value(metadata i32 %8, metadata !5650, metadata !DIExpression()), !dbg !5664
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #28, !dbg !5665
  %11 = icmp ult i32 %10, %1, !dbg !5667
  br i1 %11, label %13, label %12, !dbg !5668

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #28, !dbg !5669
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #28, !dbg !5671
  store i32 %14, i32* %4, align 4, !dbg !5672
  %15 = add nsw i32 %9, -1, !dbg !5673
  call void @llvm.dbg.value(metadata i32 %15, metadata !5649, metadata !DIExpression()), !dbg !5663
  %16 = icmp eq i32 %15, 0, !dbg !5673
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5674
  br i1 %18, label %19, label %7, !dbg !5674, !llvm.loop !5675

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5678
  %21 = load i32, i32* %20, align 4, !dbg !5678
  %22 = add nsw i32 %3, 1, !dbg !5679
  %23 = shl nsw i32 -1, %22, !dbg !5679
  %24 = and i32 %21, %23, !dbg !5680
  call void @llvm.dbg.value(metadata i32 %24, metadata !5652, metadata !DIExpression()), !dbg !5657
  %25 = icmp eq i32 %24, 0, !dbg !5681
  br i1 %25, label %30, label %26, !dbg !5682

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5683, !range !5383
  call void @llvm.dbg.value(metadata i32 %27, metadata !5653, metadata !DIExpression()), !dbg !5684
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5685
  %29 = load i32, i32* %28, align 4, !dbg !5685
  call void @llvm.dbg.value(metadata i32 %29, metadata !5656, metadata !DIExpression()), !dbg !5684
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #28, !dbg !5686
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5657
  ret i32 %31, !dbg !5687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5688 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5690, metadata !DIExpression()), !dbg !5696
  call void @llvm.dbg.value(metadata i32 %1, metadata !5691, metadata !DIExpression()), !dbg !5696
  call void @llvm.dbg.value(metadata i32 %2, metadata !5692, metadata !DIExpression()), !dbg !5696
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #28, !dbg !5697
  call void @llvm.dbg.value(metadata i32 %4, metadata !5693, metadata !DIExpression()), !dbg !5696
  %5 = sub i32 %2, %1, !dbg !5698
  call void @llvm.dbg.value(metadata i32 %5, metadata !5694, metadata !DIExpression()), !dbg !5696
  %6 = sub i32 %4, %5, !dbg !5699
  call void @llvm.dbg.value(metadata i32 %6, metadata !5695, metadata !DIExpression()), !dbg !5696
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #28, !dbg !5700
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #28, !dbg !5701
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #28, !dbg !5702
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #28, !dbg !5703
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #28, !dbg !5704
  ret void, !dbg !5705
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5706 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5710, metadata !DIExpression()), !dbg !5714
  call void @llvm.dbg.value(metadata i32 %1, metadata !5711, metadata !DIExpression()), !dbg !5714
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #28, !dbg !5715
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5712, metadata !DIExpression()), !dbg !5714
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5716
  call void @llvm.dbg.value(metadata i8* %4, metadata !5713, metadata !DIExpression()), !dbg !5714
  ret i8* %4, !dbg !5717
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5718 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5722, metadata !DIExpression()), !dbg !5734
  call void @llvm.dbg.value(metadata i32 %1, metadata !5723, metadata !DIExpression()), !dbg !5734
  call void @llvm.dbg.value(metadata i32 %2, metadata !5724, metadata !DIExpression()), !dbg !5734
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5735
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5735
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5725, metadata !DIExpression()), !dbg !5734
  %6 = sub i32 0, %1, !dbg !5736
  %7 = and i32 %6, %1, !dbg !5737
  call void @llvm.dbg.value(metadata i32 %7, metadata !5727, metadata !DIExpression()), !dbg !5734
  %8 = icmp eq i32 %7, %1, !dbg !5738
  br i1 %8, label %13, label %9, !dbg !5740

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5741
  call void @llvm.dbg.value(metadata i32 %10, metadata !5723, metadata !DIExpression()), !dbg !5734
  %11 = icmp ult i32 %7, 4, !dbg !5743
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5743
  br label %17, !dbg !5743

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5744
  br i1 %14, label %15, label %17, !dbg !5747

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #28, !dbg !5748
  br label %61, !dbg !5750

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5734
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5751
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5723, metadata !DIExpression()), !dbg !5734
  call void @llvm.dbg.value(metadata i32 %19, metadata !5726, metadata !DIExpression()), !dbg !5734
  call void @llvm.dbg.value(metadata i32 %18, metadata !5727, metadata !DIExpression()), !dbg !5734
  %21 = add i32 %20, -1, !dbg !5752
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !5752, !range !5383
  %23 = icmp ult i32 %22, 2, !dbg !5752
  br i1 %23, label %25, label %24, !dbg !5755

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 324) #27, !dbg !5756
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.50, i32 0, i32 0)) #27, !dbg !5756
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 324) #27, !dbg !5756
  unreachable, !dbg !5756

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !5758
  br i1 %26, label %61, label %27, !dbg !5760

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #28, !dbg !5761
  br i1 %28, label %61, label %29, !dbg !5762

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !5763
  %31 = add i32 %30, %20, !dbg !5764
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #28, !dbg !5765, !range !5214
  call void @llvm.dbg.value(metadata i32 %32, metadata !5728, metadata !DIExpression()), !dbg !5734
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #28, !dbg !5766
  call void @llvm.dbg.value(metadata i32 %33, metadata !5729, metadata !DIExpression()), !dbg !5734
  %34 = icmp eq i32 %33, 0, !dbg !5767
  br i1 %34, label %61, label %35, !dbg !5769

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #28, !dbg !5770
  call void @llvm.dbg.value(metadata i8* %36, metadata !5730, metadata !DIExpression()), !dbg !5734
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !5771
  %38 = ptrtoint i8* %37 to i32, !dbg !5771
  %39 = add i32 %21, %38, !dbg !5771
  %40 = sub i32 0, %20, !dbg !5771
  %41 = and i32 %39, %40, !dbg !5771
  %42 = inttoptr i32 %41 to i8*, !dbg !5772
  %43 = sub i32 0, %18, !dbg !5773
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !5773
  call void @llvm.dbg.value(metadata i8* %44, metadata !5730, metadata !DIExpression()), !dbg !5734
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !5774
  %46 = ptrtoint i8* %45 to i32, !dbg !5774
  %47 = add i32 %46, 7, !dbg !5774
  %48 = and i32 %47, -8, !dbg !5774
  call void @llvm.dbg.value(metadata i32 %48, metadata !5731, metadata !DIExpression()), !dbg !5734
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #28, !dbg !5775
  call void @llvm.dbg.value(metadata i32 %49, metadata !5732, metadata !DIExpression()), !dbg !5734
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #28, !dbg !5776
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !5777
  %52 = sub i32 %48, %51, !dbg !5777
  %53 = ashr exact i32 %52, 3, !dbg !5777
  call void @llvm.dbg.value(metadata i32 %53, metadata !5733, metadata !DIExpression()), !dbg !5734
  %54 = icmp ugt i32 %49, %33, !dbg !5778
  br i1 %54, label %55, label %56, !dbg !5780

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #28, !dbg !5781
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #28, !dbg !5783
  br label %56, !dbg !5784

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #28, !dbg !5785
  %58 = icmp ugt i32 %57, %53, !dbg !5787
  br i1 %58, label %59, label %60, !dbg !5788

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #28, !dbg !5789
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #28, !dbg !5791
  br label %60, !dbg !5792

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #28, !dbg !5793
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !5734
  ret i8* %62, !dbg !5794
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5795 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5799, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.value(metadata i8* %1, metadata !5800, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.value(metadata i32 %2, metadata !5801, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.value(metadata i32 %3, metadata !5802, metadata !DIExpression()), !dbg !5818
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5819
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5819
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5803, metadata !DIExpression()), !dbg !5818
  %7 = icmp eq i8* %1, null, !dbg !5820
  br i1 %7, label %8, label %10, !dbg !5822

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #28, !dbg !5823
  br label %63, !dbg !5825

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5826
  br i1 %11, label %12, label %13, !dbg !5828

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #28, !dbg !5829
  br label %63, !dbg !5831

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !5832
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !5832, !range !5383
  %16 = icmp ult i32 %15, 2, !dbg !5832
  br i1 %16, label %18, label %17, !dbg !5835

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 393) #27, !dbg !5836
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.50, i32 0, i32 0)) #27, !dbg !5836
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 393) #27, !dbg !5836
  unreachable, !dbg !5836

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #28, !dbg !5838
  br i1 %19, label %63, label %20, !dbg !5840

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #28, !dbg !5841, !range !5214
  call void @llvm.dbg.value(metadata i32 %21, metadata !5804, metadata !DIExpression()), !dbg !5818
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5842
  call void @llvm.dbg.value(metadata i32 %22, metadata !5805, metadata !DIExpression()), !dbg !5818
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5843
  %24 = ptrtoint i8* %1 to i32, !dbg !5844
  %25 = ptrtoint i8* %23 to i32, !dbg !5844
  %26 = sub i32 %24, %25, !dbg !5844
  call void @llvm.dbg.value(metadata i32 %26, metadata !5806, metadata !DIExpression()), !dbg !5818
  %27 = add i32 %26, %3, !dbg !5845
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #28, !dbg !5846
  call void @llvm.dbg.value(metadata i32 %28, metadata !5807, metadata !DIExpression()), !dbg !5818
  %29 = icmp eq i32 %2, 0, !dbg !5847
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !5848
  br i1 %32, label %33, label %53, !dbg !5848

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5849
  %35 = icmp eq i32 %28, %34, !dbg !5850
  br i1 %35, label %63, label %36, !dbg !5851

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !5852
  br i1 %37, label %38, label %40, !dbg !5853

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !5854
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #28, !dbg !5856
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #28, !dbg !5857
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #28, !dbg !5858
  br label %63, !dbg !5859

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5860
  br i1 %41, label %53, label %42, !dbg !5861

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5862
  %44 = add i32 %43, %34, !dbg !5863
  %45 = icmp ult i32 %44, %28, !dbg !5864
  br i1 %45, label %53, label %46, !dbg !5865

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !5866
  call void @llvm.dbg.value(metadata i32 %47, metadata !5808, metadata !DIExpression()), !dbg !5867
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5868
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #28, !dbg !5869
  %49 = icmp ult i32 %47, %48, !dbg !5871
  br i1 %49, label %50, label %52, !dbg !5872

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !5873
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #28, !dbg !5875
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #28, !dbg !5876
  br label %52, !dbg !5877

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #28, !dbg !5878
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #28, !dbg !5879
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #28, !dbg !5880
  call void @llvm.dbg.value(metadata i8* %54, metadata !5814, metadata !DIExpression()), !dbg !5818
  %55 = icmp eq i8* %54, null, !dbg !5881
  br i1 %55, label %63, label %56, !dbg !5882

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #28, !dbg !5883, !range !5326
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #28, !dbg !5884
  %59 = sub i32 %58, %26, !dbg !5885
  call void @llvm.dbg.value(metadata i32 %59, metadata !5815, metadata !DIExpression()), !dbg !5886
  %60 = icmp ult i32 %59, %3, !dbg !5887
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !5887
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #27, !dbg !5888
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #28, !dbg !5889
  br label %63, !dbg !5890

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !5818
  ret i8* %64, !dbg !5891
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5892 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5896, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.value(metadata i32 %1, metadata !5897, metadata !DIExpression()), !dbg !5898
  %3 = shl i32 %1, 3, !dbg !5899
  %4 = add i32 %3, -4, !dbg !5900
  ret i32 %4, !dbg !5901
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5902 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5906, metadata !DIExpression()), !dbg !5917
  call void @llvm.dbg.value(metadata i8* %1, metadata !5907, metadata !DIExpression()), !dbg !5917
  call void @llvm.dbg.value(metadata i32 %2, metadata !5908, metadata !DIExpression()), !dbg !5917
  %4 = icmp ult i32 %2, 262144, !dbg !5918
  br i1 %4, label %6, label %5, !dbg !5923

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.51, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 491) #27, !dbg !5924
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.52, i32 0, i32 0)) #27, !dbg !5924
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 491) #27, !dbg !5924
  unreachable, !dbg !5924

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !5926
  br i1 %7, label %9, label %8, !dbg !5929

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.53, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 498) #27, !dbg !5930
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #27, !dbg !5930
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 498) #27, !dbg !5930
  unreachable, !dbg !5930

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !5932
  call void @llvm.dbg.value(metadata i32 %10, metadata !5908, metadata !DIExpression()), !dbg !5917
  %11 = ptrtoint i8* %1 to i32, !dbg !5933
  %12 = add i32 %11, 7, !dbg !5933
  %13 = and i32 %12, -8, !dbg !5933
  call void @llvm.dbg.value(metadata i32 %13, metadata !5909, metadata !DIExpression()), !dbg !5917
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !5934
  %15 = ptrtoint i8* %14 to i32, !dbg !5934
  %16 = and i32 %15, -8, !dbg !5934
  call void @llvm.dbg.value(metadata i32 %16, metadata !5910, metadata !DIExpression()), !dbg !5917
  %17 = sub i32 %16, %13, !dbg !5935
  %18 = lshr exact i32 %17, 3, !dbg !5936
  call void @llvm.dbg.value(metadata i32 %18, metadata !5911, metadata !DIExpression()), !dbg !5917
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #28, !dbg !5937
  %20 = icmp ugt i32 %18, %19, !dbg !5937
  br i1 %20, label %22, label %21, !dbg !5940

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 507) #27, !dbg !5941
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #27, !dbg !5941
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 507) #27, !dbg !5941
  unreachable, !dbg !5941

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !5943
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !5912, metadata !DIExpression()), !dbg !5917
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5944
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !5945
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !5946
  store i32 %18, i32* %25, align 8, !dbg !5947
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !5948
  store i32 0, i32* %26, align 4, !dbg !5949
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #28, !dbg !5950
  call void @llvm.dbg.value(metadata i32 %27, metadata !5913, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5917
  %28 = shl i32 %27, 2, !dbg !5951
  %29 = add i32 %28, 20, !dbg !5952
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #28, !dbg !5953
  call void @llvm.dbg.value(metadata i32 %30, metadata !5914, metadata !DIExpression()), !dbg !5917
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #28, !dbg !5954
  %32 = add i32 %31, %30, !dbg !5954
  %33 = icmp ugt i32 %32, %18, !dbg !5954
  br i1 %33, label %36, label %34, !dbg !5957

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !5915, metadata !DIExpression()), !dbg !5958
  %35 = icmp slt i32 %27, 0, !dbg !5959
  br i1 %35, label %37, label %39, !dbg !5961

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.56, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 524) #27, !dbg !5962
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #27, !dbg !5962
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 524) #27, !dbg !5962
  unreachable, !dbg !5962

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #28, !dbg !5964
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #28, !dbg !5965
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #28, !dbg !5966
  %38 = sub i32 %18, %30, !dbg !5967
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #28, !dbg !5968
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #28, !dbg !5969
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #28, !dbg !5970
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #28, !dbg !5971
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #28, !dbg !5972
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #28, !dbg !5973
  ret void, !dbg !5974

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !5915, metadata !DIExpression()), !dbg !5958
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !5975
  store i32 0, i32* %41, align 4, !dbg !5977
  %42 = add nuw i32 %40, 1, !dbg !5978
  call void @llvm.dbg.value(metadata i32 %42, metadata !5915, metadata !DIExpression()), !dbg !5958
  %43 = icmp eq i32 %40, %27, !dbg !5959
  br i1 %43, label %37, label %39, !dbg !5961, !llvm.loop !5979
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5981 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5994, metadata !DIExpression()), !dbg !6120
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5991, metadata !DIExpression()), !dbg !6120
  call void @llvm.dbg.value(metadata i8* %1, metadata !5992, metadata !DIExpression()), !dbg !6120
  call void @llvm.dbg.value(metadata i8* %2, metadata !5993, metadata !DIExpression()), !dbg !6120
  call void @llvm.dbg.value(metadata i32 %4, metadata !5995, metadata !DIExpression()), !dbg !6120
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !6121
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #26, !dbg !6121
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5996, metadata !DIExpression()), !dbg !6122
  call void @llvm.dbg.value(metadata i32 0, metadata !6000, metadata !DIExpression()), !dbg !6120
  call void @llvm.dbg.value(metadata i1 undef, metadata !6002, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6120
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !6123

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !6123

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !6124
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5994, metadata !DIExpression()), !dbg !6120
  call void @llvm.dbg.value(metadata i8* %30, metadata !5993, metadata !DIExpression()), !dbg !6120
  call void @llvm.dbg.value(metadata i32 %29, metadata !6000, metadata !DIExpression()), !dbg !6120
  %31 = load i8, i8* %30, align 1, !dbg !6125
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !6123

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !6125
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !6126
  call void @llvm.dbg.value(metadata i8* %34, metadata !5993, metadata !DIExpression()), !dbg !6120
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !6126
  call void @llvm.dbg.value(metadata i32 %35, metadata !6004, metadata !DIExpression()), !dbg !6127
  %36 = icmp slt i32 %35, 0, !dbg !6128
  %37 = add i32 %29, 1, !dbg !6126
  call void @llvm.dbg.value(metadata i32 undef, metadata !6000, metadata !DIExpression()), !dbg !6120
  br i1 %36, label %365, label %28, !llvm.loop !6130

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #26, !dbg !6132
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !6009, metadata !DIExpression()), !dbg !6133
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !6133
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !6052, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !6055, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i8* %30, metadata !6058, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i32 -1, metadata !6059, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i32 -1, metadata !6060, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i8* null, metadata !6061, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i8* %14, metadata !6062, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i8 0, metadata !6063, metadata !DIExpression()), !dbg !6134
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #28, !dbg !6135
  call void @llvm.dbg.value(metadata i8* %39, metadata !5993, metadata !DIExpression()), !dbg !6120
  %40 = load i24, i24* %15, align 8, !dbg !6136
  %41 = and i24 %40, 256, !dbg !6136
  %42 = icmp eq i24 %41, 0, !dbg !6136
  br i1 %42, label %51, label %43, !dbg !6138

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !6139
  call void @llvm.dbg.value(metadata i8* %44, metadata !5994, metadata !DIExpression()), !dbg !6120
  %45 = bitcast i8* %27 to i32*, !dbg !6139
  %46 = load i32, i32* %45, align 4, !dbg !6139
  call void @llvm.dbg.value(metadata i32 %46, metadata !6059, metadata !DIExpression()), !dbg !6134
  %47 = icmp slt i32 %46, 0, !dbg !6141
  br i1 %47, label %48, label %56, !dbg !6143

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !6144
  store i24 %49, i24* %15, align 8, !dbg !6144
  %50 = sub nsw i32 0, %46, !dbg !6146
  call void @llvm.dbg.value(metadata i32 %50, metadata !6059, metadata !DIExpression()), !dbg !6134
  br label %56, !dbg !6147

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !6148
  %53 = icmp eq i24 %52, 0, !dbg !6148
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !6150
  br label %56, !dbg !6150

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !6151
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !6134
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5994, metadata !DIExpression()), !dbg !6120
  call void @llvm.dbg.value(metadata i32 %58, metadata !6059, metadata !DIExpression()), !dbg !6134
  %60 = and i24 %57, 1024, !dbg !6151
  %61 = icmp eq i24 %60, 0, !dbg !6151
  br i1 %61, label %69, label %62, !dbg !6152

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !6153
  call void @llvm.dbg.value(metadata i8* %63, metadata !5994, metadata !DIExpression()), !dbg !6120
  %64 = bitcast i8* %59 to i32*, !dbg !6153
  %65 = load i32, i32* %64, align 4, !dbg !6153
  call void @llvm.dbg.value(metadata i32 %65, metadata !6064, metadata !DIExpression()), !dbg !6154
  %66 = icmp slt i32 %65, 0, !dbg !6155
  br i1 %66, label %67, label %74, !dbg !6157

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !6158
  store i24 %68, i24* %15, align 8, !dbg !6158
  br label %74, !dbg !6160

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !6161
  %71 = icmp eq i24 %70, 0, !dbg !6161
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !6163
  br label %74, !dbg !6163

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !6164
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !6134
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !6134
  call void @llvm.dbg.value(metadata i8* %77, metadata !5994, metadata !DIExpression()), !dbg !6120
  call void @llvm.dbg.value(metadata i32 %76, metadata !6060, metadata !DIExpression()), !dbg !6134
  store i32 0, i32* %16, align 4, !dbg !6165
  store i32 0, i32* %17, align 8, !dbg !6166
  %78 = lshr i24 %75, 16, !dbg !6164
  call void @llvm.dbg.value(metadata i24 %78, metadata !6067, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6134
  %79 = lshr i24 %75, 11, !dbg !6167
  %80 = and i24 %79, 15, !dbg !6167
  %81 = zext i24 %80 to i32, !dbg !6167
  call void @llvm.dbg.value(metadata i32 %81, metadata !6068, metadata !DIExpression()), !dbg !6134
  %82 = trunc i24 %78 to i3, !dbg !6168
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !6168

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !6169

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6172
  call void @llvm.dbg.value(metadata i8* %85, metadata !5994, metadata !DIExpression()), !dbg !6120
  %86 = bitcast i8* %77 to i32*, !dbg !6172
  %87 = load i32, i32* %86, align 4, !dbg !6172
  %88 = sext i32 %87 to i64, !dbg !6172
  store i64 %88, i64* %20, align 8, !dbg !6174
  br label %115, !dbg !6175

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6176
  call void @llvm.dbg.value(metadata i8* %90, metadata !5994, metadata !DIExpression()), !dbg !6120
  %91 = bitcast i8* %77 to i32*, !dbg !6176
  %92 = load i32, i32* %91, align 4, !dbg !6176
  %93 = sext i32 %92 to i64, !dbg !6176
  store i64 %93, i64* %20, align 8, !dbg !6179
  br label %115, !dbg !6180

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !6181
  %96 = add i32 %95, 7, !dbg !6181
  %97 = and i32 %96, -8, !dbg !6181
  %98 = inttoptr i32 %97 to i8*, !dbg !6181
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !6181
  call void @llvm.dbg.value(metadata i8* %99, metadata !5994, metadata !DIExpression()), !dbg !6120
  %100 = inttoptr i32 %97 to i64*, !dbg !6181
  %101 = load i64, i64* %100, align 8, !dbg !6181
  store i64 %101, i64* %20, align 8, !dbg !6182
  br label %115, !dbg !6183

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !6184
  %104 = add i32 %103, 7, !dbg !6184
  %105 = and i32 %104, -8, !dbg !6184
  %106 = inttoptr i32 %105 to i8*, !dbg !6184
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !6184
  call void @llvm.dbg.value(metadata i8* %107, metadata !5994, metadata !DIExpression()), !dbg !6120
  %108 = inttoptr i32 %105 to i64*, !dbg !6184
  %109 = load i64, i64* %108, align 8, !dbg !6184
  store i64 %109, i64* %20, align 8, !dbg !6185
  br label %115, !dbg !6186

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6187
  call void @llvm.dbg.value(metadata i8* %111, metadata !5994, metadata !DIExpression()), !dbg !6120
  %112 = bitcast i8* %77 to i32*, !dbg !6187
  %113 = load i32, i32* %112, align 4, !dbg !6187
  %114 = sext i32 %113 to i64, !dbg !6188
  store i64 %114, i64* %20, align 8, !dbg !6189
  br label %115, !dbg !6190

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !6191
  call void @llvm.dbg.value(metadata i8* %117, metadata !5994, metadata !DIExpression()), !dbg !6120
  %118 = trunc i24 %79 to i4, !dbg !6192
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !6192

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !6193
  %121 = ashr exact i64 %120, 56, !dbg !6193
  store i64 %121, i64* %20, align 8, !dbg !6196
  br label %177, !dbg !6197

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !6198
  %124 = ashr exact i64 %123, 48, !dbg !6198
  store i64 %124, i64* %20, align 8, !dbg !6201
  br label %177, !dbg !6202

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !6203

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6206
  call void @llvm.dbg.value(metadata i8* %127, metadata !5994, metadata !DIExpression()), !dbg !6120
  %128 = bitcast i8* %77 to i32*, !dbg !6206
  %129 = load i32, i32* %128, align 4, !dbg !6206
  %130 = zext i32 %129 to i64, !dbg !6206
  store i64 %130, i64* %20, align 8, !dbg !6208
  br label %157, !dbg !6209

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6210
  call void @llvm.dbg.value(metadata i8* %132, metadata !5994, metadata !DIExpression()), !dbg !6120
  call void @llvm.dbg.value(metadata i8* %132, metadata !5994, metadata !DIExpression()), !dbg !6120
  %133 = bitcast i8* %77 to i32*, !dbg !6210
  %134 = load i32, i32* %133, align 4, !dbg !6210
  %135 = zext i32 %134 to i64, !dbg !6210
  store i64 %135, i64* %20, align 8, !dbg !6210
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !6212
  %138 = add i32 %137, 7, !dbg !6212
  %139 = and i32 %138, -8, !dbg !6212
  %140 = inttoptr i32 %139 to i8*, !dbg !6212
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !6212
  call void @llvm.dbg.value(metadata i8* %141, metadata !5994, metadata !DIExpression()), !dbg !6120
  %142 = inttoptr i32 %139 to i64*, !dbg !6212
  %143 = load i64, i64* %142, align 8, !dbg !6212
  store i64 %143, i64* %20, align 8, !dbg !6213
  br label %157, !dbg !6214

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !6215
  %146 = add i32 %145, 7, !dbg !6215
  %147 = and i32 %146, -8, !dbg !6215
  %148 = inttoptr i32 %147 to i8*, !dbg !6215
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !6215
  call void @llvm.dbg.value(metadata i8* %149, metadata !5994, metadata !DIExpression()), !dbg !6120
  %150 = inttoptr i32 %147 to i64*, !dbg !6215
  %151 = load i64, i64* %150, align 8, !dbg !6215
  store i64 %151, i64* %20, align 8, !dbg !6216
  br label %157, !dbg !6217

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6218
  call void @llvm.dbg.value(metadata i8* %153, metadata !5994, metadata !DIExpression()), !dbg !6120
  %154 = bitcast i8* %77 to i32*, !dbg !6218
  %155 = load i32, i32* %154, align 4, !dbg !6218
  %156 = zext i32 %155 to i64, !dbg !6219
  store i64 %156, i64* %20, align 8, !dbg !6220
  br label %157, !dbg !6221

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !6222
  call void @llvm.dbg.value(metadata i8* %159, metadata !5994, metadata !DIExpression()), !dbg !6120
  %160 = trunc i24 %79 to i4, !dbg !6223
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !6223

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !6224
  store i64 %162, i64* %20, align 8, !dbg !6227
  br label %177, !dbg !6228

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !6229
  store i64 %164, i64* %20, align 8, !dbg !6232
  br label %177, !dbg !6233

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !6234
  %167 = add i32 %166, 7, !dbg !6234
  %168 = and i32 %167, -8, !dbg !6234
  %169 = inttoptr i32 %168 to i8*, !dbg !6234
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !6234
  call void @llvm.dbg.value(metadata i8* %170, metadata !5994, metadata !DIExpression()), !dbg !6120
  call void @llvm.dbg.value(metadata i8* %170, metadata !5994, metadata !DIExpression()), !dbg !6120
  %171 = inttoptr i32 %168 to double*, !dbg !6234
  %172 = load double, double* %171, align 8, !dbg !6234
  store double %172, double* %19, align 8, !dbg !6234
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6238
  call void @llvm.dbg.value(metadata i8* %174, metadata !5994, metadata !DIExpression()), !dbg !6120
  %175 = bitcast i8* %77 to i8**, !dbg !6238
  %176 = load i8*, i8** %175, align 4, !dbg !6238
  store i8* %176, i8** %18, align 8, !dbg !6241
  br label %177, !dbg !6242

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !6134
  call void @llvm.dbg.value(metadata i8* %178, metadata !5994, metadata !DIExpression()), !dbg !6120
  %179 = and i24 %75, 3, !dbg !6243
  %180 = icmp eq i24 %179, 0, !dbg !6243
  br i1 %180, label %185, label %181, !dbg !6243

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #28, !dbg !6244
  call void @llvm.dbg.value(metadata i32 %182, metadata !6069, metadata !DIExpression()), !dbg !6245
  %183 = icmp slt i32 %182, 0, !dbg !6246
  %184 = add i32 %182, %29, !dbg !6244
  call void @llvm.dbg.value(metadata i32 undef, metadata !6000, metadata !DIExpression()), !dbg !6120
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !6248
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !6249

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !6250
  call void @llvm.dbg.value(metadata i32 %188, metadata !6073, metadata !DIExpression()), !dbg !6251
  %189 = icmp slt i32 %188, 0, !dbg !6252
  %190 = add i32 %29, 1, !dbg !6250
  call void @llvm.dbg.value(metadata i32 undef, metadata !6000, metadata !DIExpression()), !dbg !6120
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !6254
  call void @llvm.dbg.value(metadata i8* %192, metadata !6061, metadata !DIExpression()), !dbg !6134
  %193 = icmp sgt i32 %76, -1, !dbg !6255
  br i1 %193, label %194, label %196, !dbg !6257

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !6258
  call void @llvm.dbg.value(metadata i32 %195, metadata !6076, metadata !DIExpression()), !dbg !6260
  br label %241, !dbg !6261

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !6262
  call void @llvm.dbg.value(metadata i32 %197, metadata !6076, metadata !DIExpression()), !dbg !6260
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !6061, metadata !DIExpression()), !dbg !6134
  %199 = load i64, i64* %20, align 8, !dbg !6264
  %200 = trunc i64 %199 to i8, !dbg !6265
  store i8 %200, i8* %10, align 1, !dbg !6266
  call void @llvm.dbg.value(metadata i8* %23, metadata !6062, metadata !DIExpression()), !dbg !6134
  br label %245, !dbg !6267

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !6268
  %203 = icmp eq i24 %202, 0, !dbg !6268
  %204 = trunc i24 %75 to i8, !dbg !6270
  %205 = shl i8 %204, 1, !dbg !6270
  %206 = and i8 %205, 32, !dbg !6270
  %207 = select i1 %203, i8 %206, i8 43, !dbg !6270
  call void @llvm.dbg.value(metadata i8 %207, metadata !6063, metadata !DIExpression()), !dbg !6134
  %208 = load i64, i64* %20, align 8, !dbg !6271
  call void @llvm.dbg.value(metadata i64 %208, metadata !6001, metadata !DIExpression()), !dbg !6120
  %209 = icmp slt i64 %208, 0, !dbg !6272
  br i1 %209, label %210, label %212, !dbg !6274

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !6063, metadata !DIExpression()), !dbg !6134
  %211 = sub nsw i64 0, %208, !dbg !6275
  store i64 %211, i64* %20, align 8, !dbg !6277
  br label %212, !dbg !6278

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !6134
  call void @llvm.dbg.value(metadata i8 %213, metadata !6063, metadata !DIExpression()), !dbg !6134
  %214 = load i64, i64* %20, align 8, !dbg !6279
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #28, !dbg !6280
  call void @llvm.dbg.value(metadata i8* %215, metadata !6061, metadata !DIExpression()), !dbg !6134
  br label %216, !dbg !6281

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !6282
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !6283
  call void @llvm.dbg.value(metadata i8* %218, metadata !6061, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i8 %217, metadata !6063, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.label(metadata !6119), !dbg !6284
  %219 = icmp sgt i32 %76, -1, !dbg !6285
  br i1 %219, label %222, label %220, !dbg !6286

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !6287
  br label %245, !dbg !6286

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !6289
  %224 = sub i32 %22, %223, !dbg !6289
  call void @llvm.dbg.value(metadata i32 %224, metadata !6078, metadata !DIExpression()), !dbg !6290
  %225 = load i24, i24* %15, align 8, !dbg !6291
  %226 = and i24 %225, -65, !dbg !6291
  store i24 %226, i24* %15, align 8, !dbg !6291
  %227 = icmp ugt i32 %76, %224, !dbg !6292
  br i1 %227, label %228, label %245, !dbg !6294

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !6295
  store i32 %229, i32* %16, align 4, !dbg !6297
  br label %245, !dbg !6298

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !6299
  %232 = icmp eq i8* %231, null, !dbg !6301
  br i1 %232, label %245, label %233, !dbg !6302

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !6303
  %235 = zext i32 %234 to i64, !dbg !6303
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #28, !dbg !6305
  call void @llvm.dbg.value(metadata i8* %236, metadata !6061, metadata !DIExpression()), !dbg !6134
  %237 = load i24, i24* %15, align 8, !dbg !6306
  %238 = or i24 %237, 1048576, !dbg !6306
  store i24 %238, i24* %15, align 8, !dbg !6306
  store i8 120, i8* %21, align 1, !dbg !6307
  br label %216, !dbg !6308

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !6309
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #28, !dbg !6312
  br label %363, !dbg !6313

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !6314
  call void @llvm.dbg.value(metadata i32 %242, metadata !6076, metadata !DIExpression()), !dbg !6260
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !6315
  call void @llvm.dbg.value(metadata i32 -1, metadata !6060, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i32 %29, metadata !6000, metadata !DIExpression()), !dbg !6120
  call void @llvm.dbg.value(metadata i8* %192, metadata !6061, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i8* %243, metadata !6062, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i8 0, metadata !6063, metadata !DIExpression()), !dbg !6134
  %244 = icmp eq i8* %192, null, !dbg !6316
  br i1 %244, label %363, label %245, !dbg !6318, !llvm.loop !6130

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !6287
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !6081, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6134
  call void @llvm.dbg.value(metadata i32 0, metadata !6082, metadata !DIExpression()), !dbg !6134
  %250 = zext i8 %249 to i32, !dbg !6319
  %251 = icmp eq i8 %249, 0, !dbg !6321
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !6081, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6134
  call void @llvm.dbg.value(metadata i32 undef, metadata !6081, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !6081, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6134
  call void @llvm.dbg.value(metadata i32 undef, metadata !6081, metadata !DIExpression()), !dbg !6134
  %252 = icmp sgt i32 %58, 0, !dbg !6322
  br i1 %252, label %253, label %302, !dbg !6323

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !6287
  %255 = icmp eq i24 %254, 0, !dbg !6287
  %256 = ptrtoint i8* %248 to i32, !dbg !6324
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !6081, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6134
  %257 = ptrtoint i8* %247 to i32, !dbg !6324
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !6081, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6134
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !6081, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6134
  %258 = xor i1 %251, true, !dbg !6325
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6081, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6134
  %259 = sext i1 %258 to i32, !dbg !6325
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6081, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6134
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !6081, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6134
  %260 = lshr i24 %246, 19, !dbg !6326
  %261 = and i24 %260, 1, !dbg !6326
  %262 = select i1 %255, i24 %261, i24 2, !dbg !6326
  %263 = zext i24 %262 to i32, !dbg !6326
  %264 = add i32 %257, %259, !dbg !6326
  %265 = add i32 %256, %263, !dbg !6326
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !6081, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6134
  %266 = and i24 %246, 4194304, !dbg !6327
  %267 = icmp eq i24 %266, 0, !dbg !6327
  %268 = load i32, i32* %16, align 4, !dbg !6329
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !6081, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6134
  call void @llvm.dbg.value(metadata i32 undef, metadata !6081, metadata !DIExpression()), !dbg !6134
  %269 = load i32, i32* %17, align 8, !dbg !6330
  %270 = select i1 %267, i32 0, i32 %269, !dbg !6330
  call void @llvm.dbg.value(metadata i32 undef, metadata !6081, metadata !DIExpression()), !dbg !6134
  %271 = add i32 %264, %58, !dbg !6330
  %272 = add i32 %265, %268, !dbg !6330
  %273 = add i32 %272, %270, !dbg !6331
  %274 = sub i32 %271, %273, !dbg !6331
  call void @llvm.dbg.value(metadata i32 %274, metadata !6059, metadata !DIExpression()), !dbg !6134
  %275 = and i24 %246, 4, !dbg !6332
  %276 = icmp eq i24 %275, 0, !dbg !6332
  br i1 %276, label %277, label %302, !dbg !6333

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !6083, metadata !DIExpression()), !dbg !6334
  %278 = and i24 %246, 64, !dbg !6335
  %279 = icmp eq i24 %278, 0, !dbg !6335
  %280 = select i1 %279, i1 true, i1 %251, !dbg !6336
  %281 = select i1 %279, i8 %249, i8 0, !dbg !6336
  %282 = select i1 %279, i32 32, i32 48, !dbg !6336
  br i1 %280, label %287, label %283, !dbg !6336

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !6337
  call void @llvm.dbg.value(metadata i32 %284, metadata !6088, metadata !DIExpression()), !dbg !6338
  %285 = icmp slt i32 %284, 0, !dbg !6339
  %286 = add i32 %29, 1, !dbg !6337
  call void @llvm.dbg.value(metadata i32 undef, metadata !6000, metadata !DIExpression()), !dbg !6120
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !6134
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !6124
  call void @llvm.dbg.value(metadata i32 %290, metadata !6000, metadata !DIExpression()), !dbg !6120
  call void @llvm.dbg.value(metadata i8 undef, metadata !6083, metadata !DIExpression()), !dbg !6334
  call void @llvm.dbg.value(metadata i8 %288, metadata !6063, metadata !DIExpression()), !dbg !6134
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !6341
  %292 = add i32 %291, -1, !dbg !6341
  br label %293, !dbg !6341

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !6342
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !6124
  call void @llvm.dbg.value(metadata i32 %295, metadata !6000, metadata !DIExpression()), !dbg !6120
  call void @llvm.dbg.value(metadata i32 %294, metadata !6059, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i32 %294, metadata !6059, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6134
  %296 = icmp sgt i32 %294, 0, !dbg !6343
  br i1 %296, label %297, label %302, !dbg !6341

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !6344
  call void @llvm.dbg.value(metadata i32 %298, metadata !6059, metadata !DIExpression()), !dbg !6134
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !6345
  call void @llvm.dbg.value(metadata i32 %299, metadata !6094, metadata !DIExpression()), !dbg !6346
  %300 = icmp slt i32 %299, 0, !dbg !6347
  %301 = add i32 %295, 1, !dbg !6345
  call void @llvm.dbg.value(metadata i32 undef, metadata !6000, metadata !DIExpression()), !dbg !6120
  br i1 %300, label %361, label %293, !llvm.loop !6349

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !6134
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !6134
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !6124
  call void @llvm.dbg.value(metadata i32 %305, metadata !6000, metadata !DIExpression()), !dbg !6120
  call void @llvm.dbg.value(metadata i32 %304, metadata !6059, metadata !DIExpression()), !dbg !6134
  call void @llvm.dbg.value(metadata i8 %303, metadata !6063, metadata !DIExpression()), !dbg !6134
  %306 = icmp eq i8 %303, 0, !dbg !6351
  br i1 %306, label %312, label %307, !dbg !6352

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !6353
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !6354
  call void @llvm.dbg.value(metadata i32 %309, metadata !6097, metadata !DIExpression()), !dbg !6355
  %310 = icmp slt i32 %309, 0, !dbg !6356
  %311 = add i32 %305, 1, !dbg !6354
  call void @llvm.dbg.value(metadata i32 undef, metadata !6000, metadata !DIExpression()), !dbg !6120
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !6124
  call void @llvm.dbg.value(metadata i32 %313, metadata !6000, metadata !DIExpression()), !dbg !6120
  %314 = lshr i24 %246, 20, !dbg !6358
  %315 = lshr i24 %246, 19, !dbg !6359
  %316 = or i24 %314, %315, !dbg !6360
  %317 = and i24 %316, 1, !dbg !6360
  %318 = icmp eq i24 %317, 0, !dbg !6360
  br i1 %318, label %323, label %319, !dbg !6361

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !6362
  call void @llvm.dbg.value(metadata i32 %320, metadata !6101, metadata !DIExpression()), !dbg !6363
  %321 = icmp slt i32 %320, 0, !dbg !6364
  %322 = add i32 %313, 1, !dbg !6362
  call void @llvm.dbg.value(metadata i32 undef, metadata !6000, metadata !DIExpression()), !dbg !6120
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !6124
  call void @llvm.dbg.value(metadata i32 %324, metadata !6000, metadata !DIExpression()), !dbg !6120
  %325 = and i24 %246, 1048576, !dbg !6366
  %326 = icmp eq i24 %325, 0, !dbg !6366
  br i1 %326, label %333, label %327, !dbg !6367

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6368
  %329 = zext i8 %328 to i32, !dbg !6368
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !6368
  call void @llvm.dbg.value(metadata i32 %330, metadata !6107, metadata !DIExpression()), !dbg !6369
  %331 = icmp slt i32 %330, 0, !dbg !6370
  %332 = add i32 %324, 1, !dbg !6368
  call void @llvm.dbg.value(metadata i32 undef, metadata !6000, metadata !DIExpression()), !dbg !6120
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !6124
  call void @llvm.dbg.value(metadata i32 %334, metadata !6000, metadata !DIExpression()), !dbg !6120
  %335 = load i32, i32* %16, align 4, !dbg !6372
  call void @llvm.dbg.value(metadata i32 %335, metadata !6082, metadata !DIExpression()), !dbg !6134
  br label %336, !dbg !6373

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6374
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !6124
  call void @llvm.dbg.value(metadata i32 %338, metadata !6000, metadata !DIExpression()), !dbg !6120
  call void @llvm.dbg.value(metadata i32 %337, metadata !6082, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6134
  %339 = icmp sgt i32 %337, 0, !dbg !6375
  br i1 %339, label %340, label %345, !dbg !6373

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6376
  call void @llvm.dbg.value(metadata i32 %341, metadata !6082, metadata !DIExpression()), !dbg !6134
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !6377
  call void @llvm.dbg.value(metadata i32 %342, metadata !6111, metadata !DIExpression()), !dbg !6378
  %343 = icmp slt i32 %342, 0, !dbg !6379
  %344 = add i32 %338, 1, !dbg !6377
  call void @llvm.dbg.value(metadata i32 undef, metadata !6000, metadata !DIExpression()), !dbg !6120
  br i1 %343, label %361, label %336, !llvm.loop !6381

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #28, !dbg !6383
  call void @llvm.dbg.value(metadata i32 %346, metadata !6114, metadata !DIExpression()), !dbg !6384
  %347 = icmp slt i32 %346, 0, !dbg !6385
  call void @llvm.dbg.value(metadata i32 undef, metadata !6000, metadata !DIExpression()), !dbg !6120
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6383
  call void @llvm.dbg.value(metadata i32 %349, metadata !6000, metadata !DIExpression()), !dbg !6120
  call void @llvm.dbg.value(metadata i32 %304, metadata !6059, metadata !DIExpression()), !dbg !6134
  %350 = icmp sgt i32 %304, 0, !dbg !6387
  br i1 %350, label %351, label %363, !dbg !6388

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6388
  %353 = add i32 %352, %338, !dbg !6388
  br label %354, !dbg !6388

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !6000, metadata !DIExpression()), !dbg !6120
  call void @llvm.dbg.value(metadata i32 %355, metadata !6059, metadata !DIExpression()), !dbg !6134
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !6389
  call void @llvm.dbg.value(metadata i32 %356, metadata !6116, metadata !DIExpression()), !dbg !6390
  %357 = icmp slt i32 %356, 0, !dbg !6391
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6393
  call void @llvm.dbg.value(metadata i32 undef, metadata !6000, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6120
  call void @llvm.dbg.value(metadata i32 %359, metadata !6059, metadata !DIExpression()), !dbg !6134
  %360 = icmp sgt i32 %355, 1, !dbg !6387
  br i1 %360, label %354, label %363, !dbg !6388, !llvm.loop !6394

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !6000, metadata !DIExpression()), !dbg !6120
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #26, !dbg !6131
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !6124
  call void @llvm.dbg.value(metadata i32 %364, metadata !6000, metadata !DIExpression()), !dbg !6120
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #26, !dbg !6131
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !6120
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #26, !dbg !6396
  ret i32 %366, !dbg !6396
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #16

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6397 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6401, metadata !DIExpression()), !dbg !6403
  call void @llvm.dbg.value(metadata i8* %1, metadata !6402, metadata !DIExpression()), !dbg !6403
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6404
  store i24 0, i24* %3, align 4, !dbg !6404
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6404
  store i8 0, i8* %4, align 1, !dbg !6404
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6404
  store i32 0, i32* %5, align 4, !dbg !6404
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6404
  store i32 0, i32* %6, align 4, !dbg !6404
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6405
  call void @llvm.dbg.value(metadata i8* %7, metadata !6402, metadata !DIExpression()), !dbg !6403
  %8 = load i8, i8* %7, align 1, !dbg !6406
  %9 = icmp eq i8 %8, 37, !dbg !6408
  br i1 %9, label %10, label %12, !dbg !6409

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6410
  call void @llvm.dbg.value(metadata i8* %11, metadata !6402, metadata !DIExpression()), !dbg !6403
  store i8 37, i8* %4, align 1, !dbg !6412
  br label %18, !dbg !6413

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #28, !dbg !6414
  call void @llvm.dbg.value(metadata i8* %13, metadata !6402, metadata !DIExpression()), !dbg !6403
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #28, !dbg !6415
  call void @llvm.dbg.value(metadata i8* %14, metadata !6402, metadata !DIExpression()), !dbg !6403
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #28, !dbg !6416
  call void @llvm.dbg.value(metadata i8* %15, metadata !6402, metadata !DIExpression()), !dbg !6403
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #28, !dbg !6417
  call void @llvm.dbg.value(metadata i8* %16, metadata !6402, metadata !DIExpression()), !dbg !6403
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #28, !dbg !6418
  call void @llvm.dbg.value(metadata i8* %17, metadata !6402, metadata !DIExpression()), !dbg !6403
  br label %18, !dbg !6419

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6403
  ret i8* %19, !dbg !6420
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6421 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6425, metadata !DIExpression()), !dbg !6432
  call void @llvm.dbg.value(metadata i8* %1, metadata !6426, metadata !DIExpression()), !dbg !6432
  call void @llvm.dbg.value(metadata i8* %2, metadata !6427, metadata !DIExpression()), !dbg !6432
  call void @llvm.dbg.value(metadata i8* %3, metadata !6428, metadata !DIExpression()), !dbg !6432
  call void @llvm.dbg.value(metadata i32 0, metadata !6429, metadata !DIExpression()), !dbg !6432
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6433

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6434
  call void @llvm.dbg.value(metadata i32 %9, metadata !6429, metadata !DIExpression()), !dbg !6432
  call void @llvm.dbg.value(metadata i8* %8, metadata !6427, metadata !DIExpression()), !dbg !6432
  %10 = icmp ult i8* %8, %3, !dbg !6435
  br i1 %10, label %11, label %13, !dbg !6436

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6437
  br label %17, !dbg !6436

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6438

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6439
  %16 = icmp eq i8 %15, 0, !dbg !6438
  br i1 %16, label %24, label %17, !dbg !6433

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6437
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6440
  call void @llvm.dbg.value(metadata i8* %19, metadata !6427, metadata !DIExpression()), !dbg !6432
  %20 = zext i8 %18 to i32, !dbg !6441
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !6442
  call void @llvm.dbg.value(metadata i32 %21, metadata !6430, metadata !DIExpression()), !dbg !6443
  %22 = icmp slt i32 %21, 0, !dbg !6444
  %23 = add i32 %9, 1, !dbg !6446
  call void @llvm.dbg.value(metadata i32 undef, metadata !6429, metadata !DIExpression()), !dbg !6432
  br i1 %22, label %24, label %7, !llvm.loop !6447

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6432
  ret i32 %25, !dbg !6449
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #17 !dbg !6450 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6454, metadata !DIExpression()), !dbg !6464
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6455, metadata !DIExpression()), !dbg !6464
  call void @llvm.dbg.value(metadata i8* %2, metadata !6456, metadata !DIExpression()), !dbg !6464
  call void @llvm.dbg.value(metadata i8* %3, metadata !6457, metadata !DIExpression()), !dbg !6464
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6465
  %6 = load i8, i8* %5, align 1, !dbg !6465
  %7 = zext i8 %6 to i32, !dbg !6466
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #28, !dbg !6467
  %9 = icmp eq i32 %8, 0, !dbg !6467
  call void @llvm.dbg.value(metadata i1 %9, metadata !6458, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6464
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #28, !dbg !6468
  call void @llvm.dbg.value(metadata i32 %10, metadata !6459, metadata !DIExpression()), !dbg !6464
  %11 = ptrtoint i8* %3 to i32, !dbg !6469
  %12 = ptrtoint i8* %2 to i32, !dbg !6469
  %13 = sub i32 %11, %12, !dbg !6469
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6470
  call void @llvm.dbg.value(metadata i8* %14, metadata !6461, metadata !DIExpression()), !dbg !6464
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6471

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6464
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6454, metadata !DIExpression()), !dbg !6464
  call void @llvm.dbg.value(metadata i8* %18, metadata !6461, metadata !DIExpression()), !dbg !6464
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6472
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6473
  call void @llvm.dbg.value(metadata i32 %25, metadata !6462, metadata !DIExpression()), !dbg !6474
  %26 = icmp ult i32 %25, 10, !dbg !6475
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6476
  %28 = add i32 %27, %25, !dbg !6474
  %29 = trunc i32 %28 to i8, !dbg !6476
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6477
  call void @llvm.dbg.value(metadata i8* %30, metadata !6461, metadata !DIExpression()), !dbg !6464
  store i8 %29, i8* %30, align 1, !dbg !6478
  call void @llvm.dbg.value(metadata i64 %22, metadata !6454, metadata !DIExpression()), !dbg !6464
  %31 = icmp uge i64 %19, %15, !dbg !6479
  %32 = icmp ugt i8* %30, %2, !dbg !6480
  %33 = and i1 %31, %32, !dbg !6480
  br i1 %33, label %17, label %34, !dbg !6481, !llvm.loop !6482

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6484
  %36 = load i24, i24* %35, align 4, !dbg !6484
  %37 = and i24 %36, 32, !dbg !6484
  %38 = icmp eq i24 %37, 0, !dbg !6484
  br i1 %38, label %44, label %39, !dbg !6486

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6487

40:                                               ; preds = %39
  br label %41, !dbg !6489

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6493
  store i24 %43, i24* %35, align 4, !dbg !6493
  br label %44, !dbg !6494

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6494
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #14 !dbg !6495 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6501, metadata !DIExpression()), !dbg !6504
  call void @llvm.dbg.value(metadata i8* %1, metadata !6502, metadata !DIExpression()), !dbg !6504
  call void @llvm.dbg.value(metadata i32 %2, metadata !6503, metadata !DIExpression()), !dbg !6504
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6505
  %5 = load i24, i24* %4, align 4, !dbg !6505
  %6 = lshr i24 %5, 11, !dbg !6505
  %7 = and i24 %6, 15, !dbg !6505
  %8 = zext i24 %7 to i32, !dbg !6505
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6506

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6507
  store i32 %2, i32* %10, align 4, !dbg !6509
  br label %28, !dbg !6510

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6511
  store i8 %12, i8* %1, align 1, !dbg !6512
  br label %28, !dbg !6513

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6514
  %15 = bitcast i8* %1 to i16*, !dbg !6515
  store i16 %14, i16* %15, align 2, !dbg !6516
  br label %28, !dbg !6517

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6518
  store i32 %2, i32* %17, align 4, !dbg !6519
  br label %28, !dbg !6520

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6521
  %20 = bitcast i8* %1 to i64*, !dbg !6522
  store i64 %19, i64* %20, align 8, !dbg !6523
  br label %28, !dbg !6524

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6525
  %23 = bitcast i8* %1 to i64*, !dbg !6526
  store i64 %22, i64* %23, align 8, !dbg !6527
  br label %28, !dbg !6528

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6529
  store i32 %2, i32* %25, align 4, !dbg !6530
  br label %28, !dbg !6531

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6532
  store i32 %2, i32* %27, align 4, !dbg !6533
  br label %28, !dbg !6534

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6535
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #5 !dbg !6536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6539, metadata !DIExpression()), !dbg !6540
  %2 = add i32 %0, -65, !dbg !6541
  %3 = icmp ult i32 %2, 26, !dbg !6542
  %4 = zext i1 %3 to i32, !dbg !6542
  ret i32 %4, !dbg !6543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #5 !dbg !6544 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6548, metadata !DIExpression()), !dbg !6549
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6550

2:                                                ; preds = %1
  br label %4, !dbg !6551

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6553

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6554
  ret i32 %5, !dbg !6555
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #17 !dbg !6556 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6558, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata i8* %1, metadata !6559, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata i8 1, metadata !6560, metadata !DIExpression()), !dbg !6561
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6562

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6560, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata i8* %5, metadata !6559, metadata !DIExpression()), !dbg !6561
  %6 = load i8, i8* %5, align 1, !dbg !6563
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6565

7:                                                ; preds = %4
  br label %11, !dbg !6566

8:                                                ; preds = %4
  br label %11, !dbg !6568

9:                                                ; preds = %4
  br label %11, !dbg !6569

10:                                               ; preds = %4
  br label %11, !dbg !6570

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6571
  %14 = or i24 %13, %12, !dbg !6571
  store i24 %14, i24* %3, align 4, !dbg !6571
  call void @llvm.dbg.value(metadata i8 poison, metadata !6560, metadata !DIExpression()), !dbg !6561
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6559, metadata !DIExpression()), !dbg !6561
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6560, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata i8* %15, metadata !6559, metadata !DIExpression()), !dbg !6561
  %17 = load i24, i24* %3, align 4, !dbg !6572
  %18 = and i24 %17, 68, !dbg !6574
  %19 = icmp eq i24 %18, 68, !dbg !6574
  br i1 %19, label %20, label %22, !dbg !6574

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6575
  store i24 %21, i24* %3, align 4, !dbg !6575
  br label %22, !dbg !6577

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6578
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6579 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6581, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.value(metadata i8* %1, metadata !6582, metadata !DIExpression()), !dbg !6585
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6586
  %5 = load i24, i24* %4, align 4, !dbg !6587
  %6 = or i24 %5, 128, !dbg !6587
  store i24 %6, i24* %4, align 4, !dbg !6587
  call void @llvm.dbg.value(metadata i8* %1, metadata !6582, metadata !DIExpression()), !dbg !6585
  %7 = load i8, i8* %1, align 1, !dbg !6588
  %8 = icmp eq i8 %7, 42, !dbg !6590
  br i1 %8, label %9, label %12, !dbg !6591

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6592
  store i24 %10, i24* %4, align 4, !dbg !6592
  call void @llvm.dbg.value(metadata i8* %1, metadata !6582, metadata !DIExpression()), !dbg !6585
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6594
  call void @llvm.dbg.value(metadata i8* %11, metadata !6582, metadata !DIExpression()), !dbg !6585
  store i8* %11, i8** %3, align 4, !dbg !6594
  br label %29, !dbg !6595

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6583, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.value(metadata i8** %3, metadata !6582, metadata !DIExpression(DW_OP_deref)), !dbg !6585
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #28, !dbg !6596
  call void @llvm.dbg.value(metadata i32 %13, metadata !6584, metadata !DIExpression()), !dbg !6585
  %14 = load i8*, i8** %3, align 4, !dbg !6597
  call void @llvm.dbg.value(metadata i8* %14, metadata !6582, metadata !DIExpression()), !dbg !6585
  %15 = icmp eq i8* %14, %1, !dbg !6599
  br i1 %15, label %29, label %16, !dbg !6600

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6601
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6603
  store i32 %13, i32* %18, align 4, !dbg !6604
  %19 = lshr i32 %13, 31, !dbg !6605
  %20 = lshr i24 %17, 1, !dbg !6606
  %21 = and i24 %20, 1, !dbg !6606
  %22 = zext i24 %21 to i32, !dbg !6606
  %23 = or i32 %19, %22, !dbg !6606
  %24 = trunc i32 %23 to i24, !dbg !6606
  %25 = shl nuw nsw i24 %24, 1, !dbg !6606
  %26 = and i24 %17, -131, !dbg !6606
  %27 = or i24 %26, 128, !dbg !6606
  %28 = or i24 %25, %27, !dbg !6606
  store i24 %28, i24* %4, align 4, !dbg !6606
  br label %29, !dbg !6607

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6585
  ret i8* %30, !dbg !6608
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6609 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6611, metadata !DIExpression()), !dbg !6614
  call void @llvm.dbg.value(metadata i8* %1, metadata !6612, metadata !DIExpression()), !dbg !6614
  %4 = load i8, i8* %1, align 1, !dbg !6615
  %5 = icmp eq i8 %4, 46, !dbg !6616
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6617
  %7 = load i24, i24* %6, align 4, !dbg !6618
  %8 = select i1 %5, i24 512, i24 0, !dbg !6618
  %9 = and i24 %7, -513, !dbg !6618
  %10 = or i24 %9, %8, !dbg !6618
  store i24 %10, i24* %6, align 4, !dbg !6618
  br i1 %5, label %11, label %32, !dbg !6619

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6612, metadata !DIExpression()), !dbg !6614
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6620
  call void @llvm.dbg.value(metadata i8* %12, metadata !6612, metadata !DIExpression()), !dbg !6614
  store i8* %12, i8** %3, align 4, !dbg !6620
  %13 = load i8, i8* %12, align 1, !dbg !6621
  %14 = icmp eq i8 %13, 42, !dbg !6623
  br i1 %14, label %15, label %18, !dbg !6624

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6625
  store i24 %16, i24* %6, align 4, !dbg !6625
  call void @llvm.dbg.value(metadata i8* %12, metadata !6612, metadata !DIExpression()), !dbg !6614
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6627
  call void @llvm.dbg.value(metadata i8* %17, metadata !6612, metadata !DIExpression()), !dbg !6614
  store i8* %17, i8** %3, align 4, !dbg !6627
  br label %32, !dbg !6628

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6612, metadata !DIExpression(DW_OP_deref)), !dbg !6614
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #28, !dbg !6629
  call void @llvm.dbg.value(metadata i32 %19, metadata !6613, metadata !DIExpression()), !dbg !6614
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6630
  store i32 %19, i32* %20, align 4, !dbg !6631
  %21 = lshr i32 %19, 31, !dbg !6632
  %22 = load i24, i24* %6, align 4, !dbg !6633
  %23 = lshr i24 %22, 1, !dbg !6633
  %24 = and i24 %23, 1, !dbg !6633
  %25 = zext i24 %24 to i32, !dbg !6633
  %26 = or i32 %21, %25, !dbg !6633
  %27 = trunc i32 %26 to i24, !dbg !6633
  %28 = shl nuw nsw i24 %27, 1, !dbg !6633
  %29 = and i24 %22, -3, !dbg !6633
  %30 = or i24 %28, %29, !dbg !6633
  store i24 %30, i24* %6, align 4, !dbg !6633
  %31 = load i8*, i8** %3, align 4, !dbg !6634
  call void @llvm.dbg.value(metadata i8* %31, metadata !6612, metadata !DIExpression()), !dbg !6614
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6614
  ret i8* %33, !dbg !6635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !6636 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6638, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i8* %1, metadata !6639, metadata !DIExpression()), !dbg !6640
  %3 = load i8, i8* %1, align 1, !dbg !6641
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6642

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6643
  call void @llvm.dbg.value(metadata i8* %5, metadata !6639, metadata !DIExpression()), !dbg !6640
  %6 = load i8, i8* %5, align 1, !dbg !6646
  %7 = icmp eq i8 %6, 104, !dbg !6647
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6648
  %9 = load i24, i24* %8, align 4, !dbg !6648
  %10 = and i24 %9, -30721, !dbg !6648
  br i1 %7, label %11, label %14, !dbg !6649

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6650
  store i24 %12, i24* %8, align 4, !dbg !6650
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6652
  call void @llvm.dbg.value(metadata i8* %13, metadata !6639, metadata !DIExpression()), !dbg !6640
  br label %56, !dbg !6653

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6654
  store i24 %15, i24* %8, align 4, !dbg !6654
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6656
  call void @llvm.dbg.value(metadata i8* %17, metadata !6639, metadata !DIExpression()), !dbg !6640
  %18 = load i8, i8* %17, align 1, !dbg !6658
  %19 = icmp eq i8 %18, 108, !dbg !6659
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6660
  %21 = load i24, i24* %20, align 4, !dbg !6660
  %22 = and i24 %21, -30721, !dbg !6660
  br i1 %19, label %23, label %26, !dbg !6661

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6662
  store i24 %24, i24* %20, align 4, !dbg !6662
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6664
  call void @llvm.dbg.value(metadata i8* %25, metadata !6639, metadata !DIExpression()), !dbg !6640
  br label %56, !dbg !6665

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6666
  store i24 %27, i24* %20, align 4, !dbg !6666
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6668
  %30 = load i24, i24* %29, align 4, !dbg !6669
  %31 = and i24 %30, -30721, !dbg !6669
  %32 = or i24 %31, 10240, !dbg !6669
  store i24 %32, i24* %29, align 4, !dbg !6669
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6670
  call void @llvm.dbg.value(metadata i8* %33, metadata !6639, metadata !DIExpression()), !dbg !6640
  br label %56, !dbg !6671

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6672
  %36 = load i24, i24* %35, align 4, !dbg !6673
  %37 = and i24 %36, -30721, !dbg !6673
  %38 = or i24 %37, 12288, !dbg !6673
  store i24 %38, i24* %35, align 4, !dbg !6673
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6674
  call void @llvm.dbg.value(metadata i8* %39, metadata !6639, metadata !DIExpression()), !dbg !6640
  br label %56, !dbg !6675

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6676
  %42 = load i24, i24* %41, align 4, !dbg !6677
  %43 = and i24 %42, -30721, !dbg !6677
  %44 = or i24 %43, 14336, !dbg !6677
  store i24 %44, i24* %41, align 4, !dbg !6677
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6678
  call void @llvm.dbg.value(metadata i8* %45, metadata !6639, metadata !DIExpression()), !dbg !6640
  br label %56, !dbg !6679

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6680
  %48 = load i24, i24* %47, align 4, !dbg !6681
  %49 = and i24 %48, -30723, !dbg !6681
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6682
  call void @llvm.dbg.value(metadata i8* %50, metadata !6639, metadata !DIExpression()), !dbg !6640
  %51 = or i24 %49, 16386, !dbg !6683
  store i24 %51, i24* %47, align 4, !dbg !6683
  br label %56, !dbg !6684

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6685
  %54 = load i24, i24* %53, align 4, !dbg !6686
  %55 = and i24 %54, -30721, !dbg !6686
  store i24 %55, i24* %53, align 4, !dbg !6686
  br label %56, !dbg !6687

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6639, metadata !DIExpression()), !dbg !6640
  ret i8* %57, !dbg !6688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !6689 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6691, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i8* %1, metadata !6692, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i8 0, metadata !6693, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i8* %1, metadata !6692, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6696
  %3 = load i8, i8* %1, align 1, !dbg !6697
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6698
  store i8 %3, i8* %4, align 1, !dbg !6699
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6700

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6701

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6702
  %9 = load i24, i24* %8, align 4, !dbg !6702
  %10 = and i24 %9, -458753, !dbg !6702
  %11 = or i24 %10, %7, !dbg !6702
  call void @llvm.dbg.label(metadata !6694), !dbg !6703
  %12 = and i24 %9, 30720, !dbg !6704
  %13 = icmp eq i24 %12, 16384, !dbg !6704
  %14 = zext i1 %13 to i24, !dbg !6706
  %15 = or i24 %11, %14, !dbg !6706
  %16 = icmp eq i8 %3, 99, !dbg !6707
  br i1 %16, label %17, label %43, !dbg !6709

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6710
  %19 = icmp ne i24 %18, 0, !dbg !6710
  call void @llvm.dbg.value(metadata i1 %19, metadata !6693, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6696
  br label %43, !dbg !6712

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6713
  %22 = load i24, i24* %21, align 4, !dbg !6714
  %23 = and i24 %22, -458753, !dbg !6714
  %24 = or i24 %23, 262144, !dbg !6714
  call void @llvm.dbg.value(metadata i8 1, metadata !6693, metadata !DIExpression()), !dbg !6696
  br label %43, !dbg !6715

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6718
  %27 = load i24, i24* %26, align 4, !dbg !6719
  %28 = and i24 %27, -458753, !dbg !6719
  %29 = or i24 %28, 196608, !dbg !6719
  %30 = and i24 %27, 30720, !dbg !6720
  %31 = icmp eq i24 %30, 16384, !dbg !6720
  br label %43, !dbg !6722

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6723
  %34 = load i24, i24* %33, align 4, !dbg !6724
  %35 = and i24 %34, -458753, !dbg !6724
  %36 = or i24 %35, 196608, !dbg !6724
  %37 = and i24 %34, 30720, !dbg !6725
  %38 = icmp ne i24 %37, 0, !dbg !6725
  br label %43, !dbg !6727

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6728
  %41 = load i24, i24* %40, align 4, !dbg !6729
  %42 = or i24 %41, 1, !dbg !6729
  br label %43, !dbg !6730

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6731
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6732
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6733
  call void @llvm.dbg.value(metadata i8* %48, metadata !6692, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i8 poison, metadata !6693, metadata !DIExpression()), !dbg !6696
  %49 = lshr i24 %44, 1, !dbg !6731
  %50 = and i24 %49, 1, !dbg !6731
  %51 = zext i24 %50 to i32, !dbg !6731
  %52 = or i32 %51, %47, !dbg !6731
  %53 = trunc i32 %52 to i24, !dbg !6731
  %54 = shl nuw nsw i24 %53, 1, !dbg !6731
  %55 = and i24 %44, -3, !dbg !6731
  %56 = or i24 %54, %55, !dbg !6731
  store i24 %56, i24* %46, align 4, !dbg !6731
  ret i8* %48, !dbg !6734
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #17 !dbg !6735 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6739, metadata !DIExpression()), !dbg !6742
  %2 = load i8*, i8** %0, align 4, !dbg !6743
  call void @llvm.dbg.value(metadata i8* %2, metadata !6740, metadata !DIExpression()), !dbg !6742
  call void @llvm.dbg.value(metadata i32 0, metadata !6741, metadata !DIExpression()), !dbg !6742
  %3 = load i8, i8* %2, align 1, !dbg !6744
  %4 = zext i8 %3 to i32, !dbg !6745
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #28, !dbg !6746
  %6 = icmp eq i32 %5, 0, !dbg !6747
  br i1 %6, label %19, label %7, !dbg !6747

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6741, metadata !DIExpression()), !dbg !6742
  call void @llvm.dbg.value(metadata i8* %10, metadata !6740, metadata !DIExpression()), !dbg !6742
  %11 = mul i32 %9, 10, !dbg !6748
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6750
  call void @llvm.dbg.value(metadata i8* %12, metadata !6740, metadata !DIExpression()), !dbg !6742
  %13 = add i32 %11, -48, !dbg !6751
  %14 = add i32 %13, %8, !dbg !6752
  call void @llvm.dbg.value(metadata i32 %14, metadata !6741, metadata !DIExpression()), !dbg !6742
  %15 = load i8, i8* %12, align 1, !dbg !6744
  %16 = zext i8 %15 to i32, !dbg !6745
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #28, !dbg !6746
  %18 = icmp eq i32 %17, 0, !dbg !6747
  br i1 %18, label %19, label %7, !dbg !6747, !llvm.loop !6753

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6742
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6742
  store i8* %20, i8** %0, align 4, !dbg !6755
  ret i32 %21, !dbg !6756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #5 !dbg !6757 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6759, metadata !DIExpression()), !dbg !6760
  %2 = add i32 %0, -48, !dbg !6761
  %3 = icmp ult i32 %2, 10, !dbg !6762
  %4 = zext i1 %3 to i32, !dbg !6762
  ret i32 %4, !dbg !6763
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !6764 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6769, metadata !DIExpression()), !dbg !6771
  call void @llvm.dbg.value(metadata i32 %1, metadata !6770, metadata !DIExpression()), !dbg !6771
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #26, !dbg !6772, !srcloc !6774
  ret void, !dbg !6775
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6776 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6778, metadata !DIExpression()), !dbg !6786
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6787
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !6787
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6779, metadata !DIExpression()), !dbg !6788
  call void @llvm.va_start(i8* nonnull %3), !dbg !6789
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6790
  %5 = load i32, i32* %4, align 4, !dbg !6790
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6790
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !6790
  call void @llvm.va_end(i8* nonnull %3), !dbg !6791
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !6792
  ret void, !dbg !6792
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6793 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #26, !dbg !6795, !srcloc !6796
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #26, !dbg !6797, !srcloc !6798
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #26, !dbg !6799, !srcloc !6800
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #26, !dbg !6801, !srcloc !6802
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #26, !dbg !6803, !srcloc !6804
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,86\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #26, !dbg !6805, !srcloc !6806
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #26, !dbg !6807, !srcloc !6808
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #26, !dbg !6809, !srcloc !6810
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #26, !dbg !6811, !srcloc !6812
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #26, !dbg !6813, !srcloc !6814
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #26, !dbg !6815, !srcloc !6816
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #26, !dbg !6817, !srcloc !6818
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #26, !dbg !6819, !srcloc !6820
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #26, !dbg !6821, !srcloc !6822
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #26, !dbg !6823, !srcloc !6824
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #26, !dbg !6825, !srcloc !6826
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #26, !dbg !6827, !srcloc !6828
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #26, !dbg !6829, !srcloc !6830
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #26, !dbg !6831, !srcloc !6832
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #26, !dbg !6833, !srcloc !6834
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #26, !dbg !6835, !srcloc !6836
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #26, !dbg !6837, !srcloc !6838
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #26, !dbg !6839, !srcloc !6840
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #26, !dbg !6841, !srcloc !6842
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #26, !dbg !6843, !srcloc !6844
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #26, !dbg !6845, !srcloc !6846
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #26, !dbg !6847, !srcloc !6848
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #26, !dbg !6849, !srcloc !6850
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #26, !dbg !6851, !srcloc !6852
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #26, !dbg !6853, !srcloc !6854
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #26, !dbg !6855, !srcloc !6856
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #26, !dbg !6857, !srcloc !6858
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #26, !dbg !6859, !srcloc !6860
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #26, !dbg !6861, !srcloc !6862
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #26, !dbg !6863, !srcloc !6864
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #26, !dbg !6865, !srcloc !6866
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #26, !dbg !6867, !srcloc !6868
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #26, !dbg !6869, !srcloc !6870
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #26, !dbg !6871, !srcloc !6872
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #26, !dbg !6873, !srcloc !6874
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #26, !dbg !6875, !srcloc !6876
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #26, !dbg !6877, !srcloc !6878
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #26, !dbg !6879, !srcloc !6880
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #26, !dbg !6881, !srcloc !6882
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #26, !dbg !6883, !srcloc !6884
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #26, !dbg !6885, !srcloc !6886
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #26, !dbg !6887, !srcloc !6888
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #26, !dbg !6889, !srcloc !6890
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #26, !dbg !6891, !srcloc !6892
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #26, !dbg !6893, !srcloc !6894
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #26, !dbg !6895, !srcloc !6896
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #26, !dbg !6897, !srcloc !6898
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #26, !dbg !6899, !srcloc !6900
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #26, !dbg !6901, !srcloc !6902
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #26, !dbg !6903, !srcloc !6904
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #26, !dbg !6905, !srcloc !6906
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #26, !dbg !6907, !srcloc !6908
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #26, !dbg !6909, !srcloc !6910
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #26, !dbg !6911, !srcloc !6912
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #26, !dbg !6913, !srcloc !6914
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #26, !dbg !6915, !srcloc !6916
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #26, !dbg !6917, !srcloc !6918
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #26, !dbg !6919, !srcloc !6920
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #26, !dbg !6921, !srcloc !6922
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #26, !dbg !6923, !srcloc !6924
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #26, !dbg !6925, !srcloc !6926
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #26, !dbg !6927, !srcloc !6928
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #26, !dbg !6929, !srcloc !6930
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #26, !dbg !6931, !srcloc !6932
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #26, !dbg !6933, !srcloc !6934
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #26, !dbg !6935, !srcloc !6936
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #26, !dbg !6937, !srcloc !6938
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #26, !dbg !6939, !srcloc !6940
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #26, !dbg !6941, !srcloc !6942
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #26, !dbg !6943, !srcloc !6944
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #26, !dbg !6945, !srcloc !6946
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #26, !dbg !6947, !srcloc !6948
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #26, !dbg !6949, !srcloc !6950
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #26, !dbg !6951, !srcloc !6952
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #26, !dbg !6953, !srcloc !6954
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #26, !dbg !6955, !srcloc !6956
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #26, !dbg !6957, !srcloc !6958
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #26, !dbg !6959, !srcloc !6960
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #26, !dbg !6961, !srcloc !6962
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_NEONKEY\0A\09.equ\09CONFIG_BOARD_96B_NEONKEY,1\0A\09.type\09CONFIG_BOARD_96B_NEONKEY,%object", ""() #26, !dbg !6963, !srcloc !6964
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #26, !dbg !6965, !srcloc !6966
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #26, !dbg !6967, !srcloc !6968
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #26, !dbg !6969, !srcloc !6970
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #26, !dbg !6971, !srcloc !6972
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #26, !dbg !6973, !srcloc !6974
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F411XE\0A\09.equ\09CONFIG_SOC_STM32F411XE,1\0A\09.type\09CONFIG_SOC_STM32F411XE,%object", ""() #26, !dbg !6975, !srcloc !6976
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #26, !dbg !6977, !srcloc !6978
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #26, !dbg !6979, !srcloc !6980
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #26, !dbg !6981, !srcloc !6982
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #26, !dbg !6983, !srcloc !6984
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #26, !dbg !6985, !srcloc !6986
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #26, !dbg !6987, !srcloc !6988
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #26, !dbg !6989, !srcloc !6990
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #26, !dbg !6991, !srcloc !6992
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #26, !dbg !6993, !srcloc !6994
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #26, !dbg !6995, !srcloc !6996
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #26, !dbg !6997, !srcloc !6998
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #26, !dbg !6999, !srcloc !7000
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #26, !dbg !7001, !srcloc !7002
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #26, !dbg !7003, !srcloc !7004
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #26, !dbg !7005, !srcloc !7006
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #26, !dbg !7007, !srcloc !7008
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #26, !dbg !7009, !srcloc !7010
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #26, !dbg !7011, !srcloc !7012
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #26, !dbg !7013, !srcloc !7014
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #26, !dbg !7015, !srcloc !7016
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #26, !dbg !7017, !srcloc !7018
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #26, !dbg !7019, !srcloc !7020
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #26, !dbg !7021, !srcloc !7022
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #26, !dbg !7023, !srcloc !7024
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #26, !dbg !7025, !srcloc !7026
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #26, !dbg !7027, !srcloc !7028
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #26, !dbg !7029, !srcloc !7030
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #26, !dbg !7031, !srcloc !7032
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #26, !dbg !7033, !srcloc !7034
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #26, !dbg !7035, !srcloc !7036
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #26, !dbg !7037, !srcloc !7038
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #26, !dbg !7039, !srcloc !7040
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #26, !dbg !7041, !srcloc !7042
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #26, !dbg !7043, !srcloc !7044
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #26, !dbg !7045, !srcloc !7046
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #26, !dbg !7047, !srcloc !7048
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #26, !dbg !7049, !srcloc !7050
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #26, !dbg !7051, !srcloc !7052
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #26, !dbg !7053, !srcloc !7054
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #26, !dbg !7055, !srcloc !7056
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #26, !dbg !7057, !srcloc !7058
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #26, !dbg !7059, !srcloc !7060
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #26, !dbg !7061, !srcloc !7062
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #26, !dbg !7063, !srcloc !7064
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #26, !dbg !7065, !srcloc !7066
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #26, !dbg !7067, !srcloc !7068
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #26, !dbg !7069, !srcloc !7070
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #26, !dbg !7071, !srcloc !7072
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #26, !dbg !7073, !srcloc !7074
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #26, !dbg !7075, !srcloc !7076
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #26, !dbg !7077, !srcloc !7078
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #26, !dbg !7079, !srcloc !7080
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #26, !dbg !7081, !srcloc !7082
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #26, !dbg !7083, !srcloc !7084
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #26, !dbg !7085, !srcloc !7086
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #26, !dbg !7087, !srcloc !7088
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !7089, !srcloc !7090
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #26, !dbg !7091, !srcloc !7092
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #26, !dbg !7093, !srcloc !7094
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #26, !dbg !7095, !srcloc !7096
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #26, !dbg !7097, !srcloc !7098
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #26, !dbg !7099, !srcloc !7100
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #26, !dbg !7101, !srcloc !7102
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #26, !dbg !7103, !srcloc !7104
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #26, !dbg !7105, !srcloc !7106
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #26, !dbg !7107, !srcloc !7108
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #26, !dbg !7109, !srcloc !7110
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #26, !dbg !7111, !srcloc !7112
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #26, !dbg !7113, !srcloc !7114
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #26, !dbg !7115, !srcloc !7116
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #26, !dbg !7117, !srcloc !7118
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #26, !dbg !7119, !srcloc !7120
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #26, !dbg !7121, !srcloc !7122
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #26, !dbg !7123, !srcloc !7124
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #26, !dbg !7125, !srcloc !7126
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #26, !dbg !7127, !srcloc !7128
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #26, !dbg !7129, !srcloc !7130
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,1\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #26, !dbg !7131, !srcloc !7132
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #26, !dbg !7133, !srcloc !7134
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #26, !dbg !7135, !srcloc !7136
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #26, !dbg !7137, !srcloc !7138
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #26, !dbg !7139, !srcloc !7140
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #26, !dbg !7141, !srcloc !7142
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #26, !dbg !7143, !srcloc !7144
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #26, !dbg !7145, !srcloc !7146
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #26, !dbg !7147, !srcloc !7148
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #26, !dbg !7149, !srcloc !7150
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #26, !dbg !7151, !srcloc !7152
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #26, !dbg !7153, !srcloc !7154
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #26, !dbg !7155, !srcloc !7156
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #26, !dbg !7157, !srcloc !7158
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #26, !dbg !7159, !srcloc !7160
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #26, !dbg !7161, !srcloc !7162
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #26, !dbg !7163, !srcloc !7164
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #26, !dbg !7165, !srcloc !7166
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #26, !dbg !7167, !srcloc !7168
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #26, !dbg !7169, !srcloc !7170
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #26, !dbg !7171, !srcloc !7172
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #26, !dbg !7173, !srcloc !7174
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #26, !dbg !7175, !srcloc !7176
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #26, !dbg !7177, !srcloc !7178
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #26, !dbg !7179, !srcloc !7180
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #26, !dbg !7181, !srcloc !7182
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #26, !dbg !7183, !srcloc !7184
  tail call void asm sideeffect ".globl\09CONFIG_STACK_POINTER_RANDOM\0A\09.equ\09CONFIG_STACK_POINTER_RANDOM,0\0A\09.type\09CONFIG_STACK_POINTER_RANDOM,%object", ""() #26, !dbg !7185, !srcloc !7186
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #26, !dbg !7187, !srcloc !7188
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #26, !dbg !7189, !srcloc !7190
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !7191, !srcloc !7192
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #26, !dbg !7193, !srcloc !7194
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #26, !dbg !7195, !srcloc !7196
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #26, !dbg !7197, !srcloc !7198
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #26, !dbg !7199, !srcloc !7200
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #26, !dbg !7201, !srcloc !7202
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #26, !dbg !7203, !srcloc !7204
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #26, !dbg !7205, !srcloc !7206
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #26, !dbg !7207, !srcloc !7208
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #26, !dbg !7209, !srcloc !7210
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #26, !dbg !7211, !srcloc !7212
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #26, !dbg !7213, !srcloc !7214
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #26, !dbg !7215, !srcloc !7216
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #26, !dbg !7217, !srcloc !7218
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #26, !dbg !7219, !srcloc !7220
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #26, !dbg !7221, !srcloc !7222
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #26, !dbg !7223, !srcloc !7224
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #26, !dbg !7225, !srcloc !7226
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #26, !dbg !7227, !srcloc !7228
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #26, !dbg !7229, !srcloc !7230
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #26, !dbg !7231, !srcloc !7232
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #26, !dbg !7233, !srcloc !7234
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #26, !dbg !7235, !srcloc !7236
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #26, !dbg !7237, !srcloc !7238
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #26, !dbg !7239, !srcloc !7240
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #26, !dbg !7241, !srcloc !7242
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #26, !dbg !7243, !srcloc !7244
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #26, !dbg !7245, !srcloc !7246
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #26, !dbg !7247, !srcloc !7248
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #26, !dbg !7249, !srcloc !7250
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #26, !dbg !7251, !srcloc !7252
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #26, !dbg !7253, !srcloc !7254
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #26, !dbg !7255, !srcloc !7256
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #26, !dbg !7257, !srcloc !7258
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #26, !dbg !7259, !srcloc !7260
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #26, !dbg !7261, !srcloc !7262
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #26, !dbg !7263, !srcloc !7264
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #26, !dbg !7265, !srcloc !7266
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #26, !dbg !7267, !srcloc !7268
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #26, !dbg !7269, !srcloc !7270
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #26, !dbg !7271, !srcloc !7272
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #26, !dbg !7273, !srcloc !7274
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #26, !dbg !7275, !srcloc !7276
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #26, !dbg !7277, !srcloc !7278
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #26, !dbg !7279, !srcloc !7280
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #26, !dbg !7281, !srcloc !7282
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #26, !dbg !7283, !srcloc !7284
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #26, !dbg !7285, !srcloc !7286
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #26, !dbg !7287, !srcloc !7288
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #26, !dbg !7289, !srcloc !7290
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #26, !dbg !7291, !srcloc !7292
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #26, !dbg !7293, !srcloc !7294
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #26, !dbg !7295, !srcloc !7296
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #26, !dbg !7297, !srcloc !7298
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #26, !dbg !7299, !srcloc !7300
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #26, !dbg !7301, !srcloc !7302
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #26, !dbg !7303, !srcloc !7304
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #26, !dbg !7305, !srcloc !7306
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #26, !dbg !7307, !srcloc !7308
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #26, !dbg !7309, !srcloc !7310
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #26, !dbg !7311, !srcloc !7312
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #26, !dbg !7313, !srcloc !7314
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #26, !dbg !7315, !srcloc !7316
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #26, !dbg !7317, !srcloc !7318
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #26, !dbg !7319, !srcloc !7320
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #26, !dbg !7321, !srcloc !7322
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #26, !dbg !7323, !srcloc !7324
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #26, !dbg !7325, !srcloc !7326
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #26, !dbg !7327, !srcloc !7328
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #26, !dbg !7329, !srcloc !7330
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #26, !dbg !7331, !srcloc !7332
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #26, !dbg !7333, !srcloc !7334
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #26, !dbg !7335, !srcloc !7336
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #26, !dbg !7337, !srcloc !7338
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #26, !dbg !7339, !srcloc !7340
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #26, !dbg !7341, !srcloc !7342
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #26, !dbg !7343, !srcloc !7344
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #26, !dbg !7345, !srcloc !7346
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #26, !dbg !7347, !srcloc !7348
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #26, !dbg !7349, !srcloc !7350
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #26, !dbg !7351, !srcloc !7352
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #26, !dbg !7353, !srcloc !7354
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #26, !dbg !7355, !srcloc !7356
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #26, !dbg !7357, !srcloc !7358
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #26, !dbg !7359, !srcloc !7360
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #26, !dbg !7361, !srcloc !7362
  tail call void asm sideeffect ".globl\09CONFIG_TEST_RANDOM_GENERATOR\0A\09.equ\09CONFIG_TEST_RANDOM_GENERATOR,1\0A\09.type\09CONFIG_TEST_RANDOM_GENERATOR,%object", ""() #26, !dbg !7363, !srcloc !7364
  tail call void asm sideeffect ".globl\09CONFIG_TIMER_RANDOM_GENERATOR\0A\09.equ\09CONFIG_TIMER_RANDOM_GENERATOR,1\0A\09.type\09CONFIG_TIMER_RANDOM_GENERATOR,%object", ""() #26, !dbg !7365, !srcloc !7366
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #26, !dbg !7367, !srcloc !7368
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #26, !dbg !7369, !srcloc !7370
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #26, !dbg !7371, !srcloc !7372
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #26, !dbg !7373, !srcloc !7374
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #26, !dbg !7375, !srcloc !7376
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #26, !dbg !7377, !srcloc !7378
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #26, !dbg !7379, !srcloc !7380
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #26, !dbg !7381, !srcloc !7382
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #26, !dbg !7383, !srcloc !7384
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #26, !dbg !7385, !srcloc !7386
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #26, !dbg !7387, !srcloc !7388
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #26, !dbg !7389, !srcloc !7390
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #26, !dbg !7391, !srcloc !7392
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #26, !dbg !7393, !srcloc !7394
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #26, !dbg !7395, !srcloc !7396
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #26, !dbg !7397, !srcloc !7398
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #26, !dbg !7399, !srcloc !7400
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #26, !dbg !7401, !srcloc !7402
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #26, !dbg !7403, !srcloc !7404
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #26, !dbg !7405, !srcloc !7406
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #26, !dbg !7407, !srcloc !7408
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #26, !dbg !7409, !srcloc !7410
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #26, !dbg !7411, !srcloc !7412
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #26, !dbg !7413, !srcloc !7414
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #26, !dbg !7415, !srcloc !7416
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #26, !dbg !7417, !srcloc !7418
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #26, !dbg !7419, !srcloc !7420
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #26, !dbg !7421, !srcloc !7422
  ret void, !dbg !7423
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7424 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7426, metadata !DIExpression()), !dbg !7428
  tail call fastcc void @LL_FLASH_EnableInstCache() #28, !dbg !7429
  tail call fastcc void @LL_FLASH_EnableDataCache() #28, !dbg !7430
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !7431, !srcloc !7440
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !7431
  call void @llvm.dbg.value(metadata i32 %3, metadata !7437, metadata !DIExpression()) #26, !dbg !7441
  call void @llvm.dbg.value(metadata i32 undef, metadata !7438, metadata !DIExpression()) #26, !dbg !7441
  call void @llvm.dbg.value(metadata i32 %3, metadata !7427, metadata !DIExpression()), !dbg !7428
  call void @llvm.dbg.value(metadata i32 %3, metadata !7442, metadata !DIExpression()) #26, !dbg !7447
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !7449, !srcloc !7450
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !7451
  ret i32 0, !dbg !7452
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #18 !dbg !7453 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7455
  %2 = or i32 %1, 512, !dbg !7455
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7455
  ret void, !dbg !7456
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #18 !dbg !7457 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7458
  %2 = or i32 %1, 1024, !dbg !7458
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !7458
  ret void, !dbg !7459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #5 !dbg !7460 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7462, metadata !DIExpression()), !dbg !7463
  ret i32 0, !dbg !7464
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7465 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7468, metadata !DIExpression()), !dbg !7476
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7477
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !7477
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7469, metadata !DIExpression()), !dbg !7478
  call void @llvm.va_start(i8* nonnull %3), !dbg !7479
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7480
  %5 = load i32, i32* %4, align 4, !dbg !7480
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7480
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !7480
  call void @llvm.va_end(i8* nonnull %3), !dbg !7481
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !7482
  ret void, !dbg !7482
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7483 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7488, metadata !DIExpression()), !dbg !7489
  call void @llvm.dbg.value(metadata i8* %0, metadata !7487, metadata !DIExpression()), !dbg !7489
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #27, !dbg !7490
  ret void, !dbg !7491
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7492 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7496, metadata !DIExpression()), !dbg !7500
  call void @llvm.dbg.value(metadata i8* %1, metadata !7497, metadata !DIExpression()), !dbg !7500
  call void @llvm.dbg.value(metadata i32 %2, metadata !7498, metadata !DIExpression()), !dbg !7500
  call void @llvm.dbg.value(metadata i8* %1, metadata !7499, metadata !DIExpression()), !dbg !7500
  %4 = icmp eq i32 %2, 0, !dbg !7501
  br i1 %4, label %14, label %5, !dbg !7502

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.68(i32 noundef %0) #28, !dbg !7500
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7502

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7499, metadata !DIExpression()), !dbg !7500
  call void @llvm.dbg.value(metadata i32 %10, metadata !7498, metadata !DIExpression()), !dbg !7500
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i32 0, i32 0), i32 noundef %7) #27, !dbg !7503
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #28, !dbg !7505
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7506
  call void @llvm.dbg.value(metadata i32 %11, metadata !7498, metadata !DIExpression()), !dbg !7500
  call void @llvm.dbg.value(metadata i8* %12, metadata !7499, metadata !DIExpression()), !dbg !7500
  br i1 %13, label %14, label %8, !dbg !7506, !llvm.loop !7507

14:                                               ; preds = %8, %3
  ret void, !dbg !7509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.68(i32 noundef %0) unnamed_addr #5 !dbg !7510 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7512, metadata !DIExpression()), !dbg !7513
  %2 = add i32 %0, -1, !dbg !7514
  %3 = icmp ult i32 %2, 4, !dbg !7514
  %4 = shl i32 %2, 3, !dbg !7514
  %5 = lshr i32 1145657157, %4, !dbg !7514
  %6 = trunc i32 %5 to i8, !dbg !7514
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7514
  ret i8 %7, !dbg !7515
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7516 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7520, metadata !DIExpression()), !dbg !7531
  call void @llvm.dbg.value(metadata i32 %1, metadata !7521, metadata !DIExpression()), !dbg !7531
  call void @llvm.dbg.value(metadata i32 0, metadata !7522, metadata !DIExpression()), !dbg !7532
  br label %4, !dbg !7533

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.70, i32 0, i32 0)) #27, !dbg !7534
  call void @llvm.dbg.value(metadata i32 0, metadata !7524, metadata !DIExpression()), !dbg !7535
  br label %16, !dbg !7536

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7522, metadata !DIExpression()), !dbg !7532
  %6 = icmp ult i32 %5, %1, !dbg !7537
  br i1 %6, label %7, label %11, !dbg !7541

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7542
  %9 = load i8, i8* %8, align 1, !dbg !7542
  %10 = zext i8 %9 to i32, !dbg !7544
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.71, i32 0, i32 0), i32 noundef %10) #27, !dbg !7545
  br label %12, !dbg !7546

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.72, i32 0, i32 0)) #27, !dbg !7547
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7549
  call void @llvm.dbg.value(metadata i32 %13, metadata !7522, metadata !DIExpression()), !dbg !7532
  %14 = icmp eq i32 %13, 8, !dbg !7550
  br i1 %14, label %3, label %4, !dbg !7533, !llvm.loop !7551

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.73, i32 0, i32 0)) #27, !dbg !7553
  ret void, !dbg !7554

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7524, metadata !DIExpression()), !dbg !7535
  %18 = icmp ult i32 %17, %1, !dbg !7555
  br i1 %18, label %19, label %26, !dbg !7556

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7557
  %21 = load i8, i8* %20, align 1, !dbg !7557
  call void @llvm.dbg.value(metadata i8 %21, metadata !7526, metadata !DIExpression()), !dbg !7558
  %22 = zext i8 %21 to i32, !dbg !7559
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #28, !dbg !7560
  %24 = icmp eq i32 %23, 0, !dbg !7561
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7560
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.74, i32 0, i32 0), i32 noundef %25) #27, !dbg !7562
  br label %27, !dbg !7563

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.75, i32 0, i32 0)) #27, !dbg !7564
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7566
  call void @llvm.dbg.value(metadata i32 %28, metadata !7524, metadata !DIExpression()), !dbg !7535
  %29 = icmp eq i32 %28, 8, !dbg !7567
  br i1 %29, label %15, label %16, !dbg !7536, !llvm.loop !7568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #5 !dbg !7570 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7572, metadata !DIExpression()), !dbg !7573
  %2 = add i32 %0, -32, !dbg !7574
  %3 = icmp ult i32 %2, 95, !dbg !7574
  %4 = zext i1 %3 to i32, !dbg !7574
  ret i32 %4, !dbg !7575
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7576 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7625, metadata !DIExpression()), !dbg !7627
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7626, metadata !DIExpression()), !dbg !7627
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7628
  br i1 %3, label %5, label %4, !dbg !7630

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #28, !dbg !7631
  br label %5, !dbg !7633

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !7634
  ret void, !dbg !7635
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7636 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7640, metadata !DIExpression()), !dbg !7641
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7642
  %3 = load i32, i32* %2, align 4, !dbg !7642
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7642
  %5 = load i32, i32* %4, align 4, !dbg !7642
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7642
  %7 = load i32, i32* %6, align 4, !dbg !7642
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.76, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #27, !dbg !7642
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7647
  %9 = load i32, i32* %8, align 4, !dbg !7647
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7647
  %11 = load i32, i32* %10, align 4, !dbg !7647
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7647
  %13 = load i32, i32* %12, align 4, !dbg !7647
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.77, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #27, !dbg !7647
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7652
  %15 = load i32, i32* %14, align 4, !dbg !7652
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #27, !dbg !7652
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7657
  %17 = load i32, i32* %16, align 4, !dbg !7657
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.79, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !7657
  ret void, !dbg !7662
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7663 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7680, metadata !DIExpression()), !dbg !7683
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7681, metadata !DIExpression()), !dbg !7683
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7684
  %4 = load i32, i32* %3, align 4, !dbg !7684
  call void @llvm.dbg.value(metadata i32 %4, metadata !7682, metadata !DIExpression()), !dbg !7683
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #28, !dbg !7685
  ret void, !dbg !7686
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !7687 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7691, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.value(metadata i8* %0, metadata !7692, metadata !DIExpression()), !dbg !7694
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7695
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #26, !dbg !7695
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7693, metadata !DIExpression()), !dbg !7696
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7696
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7697
  %5 = bitcast i8* %4 to i32*, !dbg !7697
  %6 = load i32, i32* %5, align 4, !dbg !7697
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7698
  store i32 %6, i32* %7, align 4, !dbg !7699
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #28, !dbg !7700
  unreachable, !dbg !7701
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7702 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7705, metadata !DIExpression()), !dbg !7706
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #28, !dbg !7707
  ret void, !dbg !7708
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7709 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7713, metadata !DIExpression()), !dbg !7714
  %2 = icmp sgt i32 %0, -1, !dbg !7715
  br i1 %2, label %3, label %8, !dbg !7717

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !7718, !srcloc !7720
  %4 = and i32 %0, 31, !dbg !7721
  %5 = shl nuw i32 1, %4, !dbg !7722
  %6 = lshr i32 %0, 5, !dbg !7723
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7724
  store volatile i32 %5, i32* %7, align 4, !dbg !7725
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !7726, !srcloc !7727
  br label %8, !dbg !7728

8:                                                ; preds = %3, %1
  ret void, !dbg !7729
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7732, metadata !DIExpression()), !dbg !7733
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #28, !dbg !7734
  ret void, !dbg !7735
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7736 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7738, metadata !DIExpression()), !dbg !7739
  %2 = icmp sgt i32 %0, -1, !dbg !7740
  br i1 %2, label %3, label %8, !dbg !7742

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7743
  %5 = shl nuw i32 1, %4, !dbg !7745
  %6 = lshr i32 %0, 5, !dbg !7746
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7747
  store volatile i32 %5, i32* %7, align 4, !dbg !7748
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !7749, !srcloc !7753
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7754, !srcloc !7757
  br label %8, !dbg !7758

8:                                                ; preds = %3, %1
  ret void, !dbg !7759
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #7 !dbg !7760 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7764, metadata !DIExpression()), !dbg !7765
  %2 = lshr i32 %0, 5, !dbg !7766
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7767
  %4 = load volatile i32, i32* %3, align 4, !dbg !7767
  %5 = and i32 %0, 31, !dbg !7768
  %6 = shl nuw i32 1, %5, !dbg !7768
  %7 = and i32 %4, %6, !dbg !7769
  ret i32 %7, !dbg !7770
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7775, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata i32 %1, metadata !7776, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata i32 %2, metadata !7777, metadata !DIExpression()), !dbg !7778
  %4 = add i32 %1, 1, !dbg !7779
  call void @llvm.dbg.value(metadata i32 %4, metadata !7776, metadata !DIExpression()), !dbg !7778
  %5 = icmp ult i32 %4, 16, !dbg !7782
  br i1 %5, label %7, label %6, !dbg !7785

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.80, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.81, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.82, i32 0, i32 0), i32 noundef 94) #27, !dbg !7786
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.83, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #27, !dbg !7786
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.82, i32 0, i32 0), i32 noundef 94) #27, !dbg !7786
  unreachable, !dbg !7786

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #28, !dbg !7788
  ret void, !dbg !7789
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !7790 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7794, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.value(metadata i32 %1, metadata !7795, metadata !DIExpression()), !dbg !7796
  %3 = trunc i32 %1 to i8, !dbg !7797
  %4 = shl i8 %3, 4, !dbg !7797
  %5 = and i32 %0, 15, !dbg !7799
  %6 = add nsw i32 %5, -4, !dbg !7799
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7799
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7799
  %9 = icmp slt i32 %0, 0, !dbg !7799
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7799
  store volatile i8 %4, i8* %10, align 1, !dbg !7797
  ret void, !dbg !7800
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7801 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7803, metadata !DIExpression()), !dbg !7804
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !7805
  ret void, !dbg !7806
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7807 {
  tail call void @z_SysNmiOnReset() #27, !dbg !7809
  tail call void @z_arm_int_exit() #27, !dbg !7810
  ret void, !dbg !7811
}

; Function Attrs: optsize
declare !dbg !7812 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7813 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !7815 {
  tail call fastcc void @relocate_vector_table() #28, !dbg !7817
  tail call fastcc void @z_arm_floating_point_init() #28, !dbg !7818
  tail call void @z_bss_zero() #27, !dbg !7819
  tail call void @z_data_copy() #27, !dbg !7820
  tail call void @z_arm_interrupt_init() #27, !dbg !7821
  tail call void @z_cstart() #30, !dbg !7822
  unreachable, !dbg !7822
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7823 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7824
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !7825, !srcloc !7828
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7829, !srcloc !7832
  ret void, !dbg !7833
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7834 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7835
  %2 = and i32 %1, -15728641, !dbg !7835
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7835
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #26, !dbg !7836, !srcloc !7841
  call void @llvm.dbg.value(metadata i32 %3, metadata !7839, metadata !DIExpression()) #26, !dbg !7842
  %4 = and i32 %3, -5, !dbg !7843
  call void @llvm.dbg.value(metadata i32 %4, metadata !7844, metadata !DIExpression()) #26, !dbg !7849
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #26, !dbg !7851, !srcloc !7852
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !7853, !srcloc !7832
  ret void, !dbg !7855
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7856 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7859, metadata !DIExpression()), !dbg !7860
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7861
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7862
  store i32 %0, i32* %3, align 4, !dbg !7863
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7864
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7865
  store i32 %4, i32* %5, align 4, !dbg !7866
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7867
  %7 = or i32 %6, 268435456, !dbg !7867
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7867
  call void @llvm.dbg.value(metadata i32 0, metadata !7868, metadata !DIExpression()) #26, !dbg !7871
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #26, !dbg !7873, !srcloc !7874
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7875
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7876
  %10 = load i32, i32* %9, align 4, !dbg !7876
  ret i32 %10, !dbg !7877
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #12 !dbg !7878 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7990, metadata !DIExpression()), !dbg !7998
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7991, metadata !DIExpression()), !dbg !7998
  call void @llvm.dbg.value(metadata i8* %2, metadata !7992, metadata !DIExpression()), !dbg !7998
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7993, metadata !DIExpression()), !dbg !7998
  call void @llvm.dbg.value(metadata i8* %4, metadata !7994, metadata !DIExpression()), !dbg !7998
  call void @llvm.dbg.value(metadata i8* %5, metadata !7995, metadata !DIExpression()), !dbg !7998
  call void @llvm.dbg.value(metadata i8* %6, metadata !7996, metadata !DIExpression()), !dbg !7998
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7999
  call void @llvm.dbg.value(metadata i8* %8, metadata !7997, metadata !DIExpression()), !dbg !7998
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !8000
  %10 = bitcast i8* %9 to i32*, !dbg !8000
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !8001
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !8002
  %12 = bitcast i8* %8 to i32*, !dbg !8003
  store i32 %11, i32* %12, align 4, !dbg !8004
  %13 = ptrtoint i8* %4 to i32, !dbg !8005
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !8006
  %15 = bitcast i8* %14 to i32*, !dbg !8006
  store i32 %13, i32* %15, align 4, !dbg !8007
  %16 = ptrtoint i8* %5 to i32, !dbg !8008
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !8009
  %18 = bitcast i8* %17 to i32*, !dbg !8009
  store i32 %16, i32* %18, align 4, !dbg !8010
  %19 = ptrtoint i8* %6 to i32, !dbg !8011
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !8012
  %21 = bitcast i8* %20 to i32*, !dbg !8012
  store i32 %19, i32* %21, align 4, !dbg !8013
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8014
  %23 = bitcast i8* %22 to i32*, !dbg !8014
  store i32 16777216, i32* %23, align 4, !dbg !8015
  %24 = ptrtoint i8* %8 to i32, !dbg !8016
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !8017
  store i32 %24, i32* %25, align 8, !dbg !8018
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !8019
  store i32 0, i32* %26, align 4, !dbg !8020
  ret void, !dbg !8021
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #13 !dbg !8022 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8026, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.value(metadata i32 %1, metadata !8027, metadata !DIExpression()), !dbg !8032
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8033
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !8028, metadata !DIExpression()), !dbg !8032
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !8034
  br i1 %4, label %19, label %5, !dbg !8036

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !8031, metadata !DIExpression()), !dbg !8032
  %6 = icmp eq i32 %0, -22, !dbg !8037
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !8037
  %8 = load i32, i32* %7, align 4, !dbg !8037
  br i1 %6, label %16, label %9, !dbg !8039

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !8037
  %11 = icmp ule i32 %10, %0, !dbg !8037
  %12 = icmp ugt i32 %8, %0, !dbg !8037
  %13 = and i1 %12, %11, !dbg !8037
  %14 = icmp ugt i32 %8, %1, !dbg !8037
  %15 = and i1 %14, %13, !dbg !8037
  br i1 %15, label %18, label %19, !dbg !8037

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !8037
  br i1 %17, label %18, label %19, !dbg !8039

18:                                               ; preds = %9, %16
  br label %19, !dbg !8040

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !8032
  ret i32 %20, !dbg !8042
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !8043 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8047, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata i8* %1, metadata !8048, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8049, metadata !DIExpression()), !dbg !8050
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8051
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !8052
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #26, !dbg !8053, !srcloc !8054
  unreachable, !dbg !8055
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8056 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8074, metadata !DIExpression()), !dbg !8084
  call void @llvm.dbg.value(metadata i32 %1, metadata !8075, metadata !DIExpression()), !dbg !8084
  call void @llvm.dbg.value(metadata i32 %2, metadata !8076, metadata !DIExpression()), !dbg !8084
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8077, metadata !DIExpression()), !dbg !8084
  call void @llvm.dbg.value(metadata i32 0, metadata !8078, metadata !DIExpression()), !dbg !8084
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8085
  call void @llvm.dbg.value(metadata i32 %8, metadata !8079, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !8084
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #26, !dbg !8086
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #26, !dbg !8086
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !8087
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #26, !dbg !8087
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8083, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata i32 0, metadata !8089, metadata !DIExpression()) #26, !dbg !8092
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #26, !dbg !8094, !srcloc !8095
  call void @llvm.dbg.value(metadata i8* %6, metadata !8081, metadata !DIExpression(DW_OP_deref)), !dbg !8084
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #28, !dbg !8096
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !8082, metadata !DIExpression()), !dbg !8084
  %11 = icmp eq %struct.__esf* %10, null, !dbg !8097
  br i1 %11, label %12, label %13, !dbg !8100

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.87, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 1057) #27, !dbg !8101
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.89, i32 0, i32 0)) #27, !dbg !8101
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 1057) #27, !dbg !8101
  unreachable, !dbg !8101

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !8103
  call void @llvm.dbg.value(metadata i32 %14, metadata !8079, metadata !DIExpression()), !dbg !8084
  call void @llvm.dbg.value(metadata i8* %5, metadata !8080, metadata !DIExpression(DW_OP_deref)), !dbg !8084
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #28, !dbg !8104
  call void @llvm.dbg.value(metadata i32 %15, metadata !8078, metadata !DIExpression()), !dbg !8084
  %16 = load i8, i8* %5, align 1, !dbg !8105, !range !8107
  call void @llvm.dbg.value(metadata i8 %16, metadata !8080, metadata !DIExpression()), !dbg !8084
  %17 = icmp eq i8 %16, 0, !dbg !8105
  br i1 %17, label %18, label %35, !dbg !8108

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !8109
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #27, !dbg !8110
  %21 = load i8, i8* %6, align 1, !dbg !8111, !range !8107
  call void @llvm.dbg.value(metadata i8 %21, metadata !8081, metadata !DIExpression()), !dbg !8084
  %22 = icmp eq i8 %21, 0, !dbg !8111
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8113
  %24 = load i32, i32* %23, align 4, !dbg !8113
  br i1 %22, label %30, label %25, !dbg !8114

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !8115
  %27 = icmp eq i32 %26, 0, !dbg !8118
  br i1 %27, label %28, label %34, !dbg !8119

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !8120
  br label %32, !dbg !8122

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !8123
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !8113
  br label %34, !dbg !8125

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #27, !dbg !8125
  br label %35, !dbg !8126

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #26, !dbg !8126
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #26, !dbg !8126
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #26, !dbg !8126
  ret void, !dbg !8126
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8132, metadata !DIExpression()), !dbg !8138
  call void @llvm.dbg.value(metadata i32 %1, metadata !8133, metadata !DIExpression()), !dbg !8138
  call void @llvm.dbg.value(metadata i32 %2, metadata !8134, metadata !DIExpression()), !dbg !8138
  call void @llvm.dbg.value(metadata i8* %3, metadata !8135, metadata !DIExpression()), !dbg !8138
  call void @llvm.dbg.value(metadata i8 0, metadata !8136, metadata !DIExpression()), !dbg !8138
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8137, metadata !DIExpression()), !dbg !8138
  store i8 0, i8* %3, align 1, !dbg !8139
  %5 = icmp ugt i32 %2, -16777217, !dbg !8140
  br i1 %5, label %6, label %17, !dbg !8142

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8143
  %8 = icmp eq i32 %7, 8, !dbg !8143
  br i1 %8, label %9, label %10, !dbg !8143

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.101, i32 0, i32 0), i32 noundef 69) #27, !dbg !8145
  br label %17, !dbg !8151

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8152
  %12 = icmp eq i32 %11, 0, !dbg !8152
  br i1 %12, label %13, label %14, !dbg !8153

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8137, metadata !DIExpression()), !dbg !8138
  store i8 1, i8* %3, align 1, !dbg !8156
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8138
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8137, metadata !DIExpression()), !dbg !8138
  br label %17, !dbg !8159

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8138
  ret %struct.__esf* %18, !dbg !8160
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8161 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8165, metadata !DIExpression()), !dbg !8169
  call void @llvm.dbg.value(metadata i32 %1, metadata !8166, metadata !DIExpression()), !dbg !8169
  call void @llvm.dbg.value(metadata i8* %2, metadata !8167, metadata !DIExpression()), !dbg !8169
  call void @llvm.dbg.value(metadata i32 0, metadata !8168, metadata !DIExpression()), !dbg !8169
  store i8 0, i8* %2, align 1, !dbg !8170
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !8171

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #28, !dbg !8172
  call void @llvm.dbg.value(metadata i32 %5, metadata !8168, metadata !DIExpression()), !dbg !8169
  br label %12, !dbg !8174

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #28, !dbg !8175
  call void @llvm.dbg.value(metadata i32 %7, metadata !8168, metadata !DIExpression()), !dbg !8169
  br label %12, !dbg !8176

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #28, !dbg !8177
  call void @llvm.dbg.value(metadata i32 0, metadata !8168, metadata !DIExpression()), !dbg !8169
  br label %12, !dbg !8178

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #28, !dbg !8179
  call void @llvm.dbg.value(metadata i32 0, metadata !8168, metadata !DIExpression()), !dbg !8169
  br label %12, !dbg !8180

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #28, !dbg !8181
  br label %12, !dbg !8182

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #28, !dbg !8183
  br label %12, !dbg !8184

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !8169
  call void @llvm.dbg.value(metadata i32 %13, metadata !8168, metadata !DIExpression()), !dbg !8169
  ret i32 %13, !dbg !8185
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8186 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8190, metadata !DIExpression()), !dbg !8193
  call void @llvm.dbg.value(metadata i8* %1, metadata !8191, metadata !DIExpression()), !dbg !8193
  call void @llvm.dbg.value(metadata i32 0, metadata !8192, metadata !DIExpression()), !dbg !8193
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.93, i32 0, i32 0), i32 noundef 69) #27, !dbg !8194
  store i8 0, i8* %1, align 1, !dbg !8199
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8200
  %4 = and i32 %3, 2, !dbg !8202
  %5 = icmp eq i32 %4, 0, !dbg !8203
  br i1 %5, label %7, label %6, !dbg !8204

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.94, i32 0, i32 0), i32 noundef 69) #27, !dbg !8205
  br label %38, !dbg !8211

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8212
  %9 = icmp sgt i32 %8, -1, !dbg !8214
  br i1 %9, label %11, label %10, !dbg !8215

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.95, i32 0, i32 0), i32 noundef 69) #27, !dbg !8216
  br label %38, !dbg !8222

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8223
  %13 = and i32 %12, 1073741824, !dbg !8225
  %14 = icmp eq i32 %13, 0, !dbg !8226
  br i1 %14, label %37, label %15, !dbg !8227

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.96, i32 0, i32 0), i32 noundef 69) #27, !dbg !8228
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #28, !dbg !8234
  br i1 %16, label %17, label %21, !dbg !8236

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8237
  %19 = load i32, i32* %18, align 4, !dbg !8237
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.97, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #27, !dbg !8237
  %20 = load i32, i32* %18, align 4, !dbg !8243
  call void @llvm.dbg.value(metadata i32 %20, metadata !8192, metadata !DIExpression()), !dbg !8193
  br label %38, !dbg !8244

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8245
  %23 = and i32 %22, 255, !dbg !8247
  %24 = icmp eq i32 %23, 0, !dbg !8248
  br i1 %24, label %27, label %25, !dbg !8249

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #28, !dbg !8250
  call void @llvm.dbg.value(metadata i32 %26, metadata !8192, metadata !DIExpression()), !dbg !8193
  br label %38, !dbg !8252

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8253
  %29 = and i32 %28, 65280, !dbg !8255
  %30 = icmp eq i32 %29, 0, !dbg !8256
  br i1 %30, label %32, label %31, !dbg !8257

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #28, !dbg !8258
  call void @llvm.dbg.value(metadata i32 0, metadata !8192, metadata !DIExpression()), !dbg !8193
  br label %38, !dbg !8260

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8261
  %34 = icmp ult i32 %33, 65536, !dbg !8263
  br i1 %34, label %36, label %35, !dbg !8264

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #28, !dbg !8265
  call void @llvm.dbg.value(metadata i32 0, metadata !8192, metadata !DIExpression()), !dbg !8193
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.98, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 755) #27, !dbg !8267
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.99, i32 0, i32 0)) #27, !dbg !8267
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 755) #27, !dbg !8267
  unreachable, !dbg !8267

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.98, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 760) #27, !dbg !8272
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.100, i32 0, i32 0)) #27, !dbg !8272
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 760) #27, !dbg !8272
  unreachable, !dbg !8272

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !8193
  call void @llvm.dbg.value(metadata i32 %39, metadata !8192, metadata !DIExpression()), !dbg !8193
  ret i32 %39, !dbg !8277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !8278 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8280, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.value(metadata i32 %1, metadata !8281, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.value(metadata i8* %2, metadata !8282, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.value(metadata i32 0, metadata !8283, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.value(metadata i32 -22, metadata !8284, metadata !DIExpression()), !dbg !8293
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.91, i32 0, i32 0), i32 noundef 69) #27, !dbg !8294
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8299
  %5 = and i32 %4, 16, !dbg !8301
  %6 = icmp eq i32 %5, 0, !dbg !8302
  br i1 %6, label %8, label %7, !dbg !8303

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14.92, i32 0, i32 0), i32 noundef 69) #27, !dbg !8304
  br label %8, !dbg !8310

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8311
  %10 = and i32 %9, 8, !dbg !8313
  %11 = icmp eq i32 %10, 0, !dbg !8314
  br i1 %11, label %13, label %12, !dbg !8315

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #27, !dbg !8316
  br label %13, !dbg !8322

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8323
  %15 = and i32 %14, 2, !dbg !8324
  %16 = icmp eq i32 %15, 0, !dbg !8325
  br i1 %16, label %27, label %17, !dbg !8326

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #27, !dbg !8327
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8332
  call void @llvm.dbg.value(metadata i32 %18, metadata !8285, metadata !DIExpression()), !dbg !8333
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8334
  %20 = and i32 %19, 128, !dbg !8336
  %21 = icmp eq i32 %20, 0, !dbg !8337
  br i1 %21, label %27, label %22, !dbg !8338

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !8284, metadata !DIExpression()), !dbg !8293
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #27, !dbg !8339
  %23 = icmp eq i32 %1, 0, !dbg !8345
  br i1 %23, label %27, label %24, !dbg !8347

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8348
  %26 = and i32 %25, -129, !dbg !8348
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8348
  br label %27, !dbg !8350

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !8293
  call void @llvm.dbg.value(metadata i32 %28, metadata !8284, metadata !DIExpression()), !dbg !8293
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8351
  %30 = and i32 %29, 1, !dbg !8353
  %31 = icmp eq i32 %30, 0, !dbg !8354
  br i1 %31, label %33, label %32, !dbg !8355

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #27, !dbg !8356
  br label %33, !dbg !8362

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8363
  %35 = and i32 %34, 32, !dbg !8365
  %36 = icmp eq i32 %35, 0, !dbg !8366
  br i1 %36, label %38, label %37, !dbg !8367

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #27, !dbg !8368
  br label %38, !dbg !8374

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8375
  %40 = and i32 %39, 16, !dbg !8376
  %41 = icmp eq i32 %40, 0, !dbg !8376
  br i1 %41, label %42, label %46, !dbg !8377

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8378
  %44 = and i32 %43, 2, !dbg !8379
  %45 = icmp eq i32 %44, 0, !dbg !8379
  br i1 %45, label %60, label %46, !dbg !8380

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8381
  %48 = and i32 %47, 2048, !dbg !8382
  %49 = icmp eq i32 %48, 0, !dbg !8382
  br i1 %49, label %60, label %50, !dbg !8383

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !8384
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #27, !dbg !8385
  call void @llvm.dbg.value(metadata i32 %52, metadata !8288, metadata !DIExpression()), !dbg !8386
  %53 = icmp eq i32 %52, 0, !dbg !8387
  br i1 %53, label %55, label %54, !dbg !8389

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !8390, metadata !DIExpression()) #26, !dbg !8393
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #26, !dbg !8396, !srcloc !8397
  call void @llvm.dbg.value(metadata i32 2, metadata !8283, metadata !DIExpression()), !dbg !8293
  br label %60, !dbg !8398

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8399
  %57 = and i32 %56, 16, !dbg !8399
  %58 = icmp eq i32 %57, 0, !dbg !8399
  br i1 %58, label %60, label %59, !dbg !8403

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 343) #27, !dbg !8404
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #27, !dbg !8404
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.88, i32 0, i32 0), i32 noundef 343) #27, !dbg !8404
  unreachable, !dbg !8404

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !8293
  call void @llvm.dbg.value(metadata i32 %61, metadata !8283, metadata !DIExpression()), !dbg !8293
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8406
  %63 = and i32 %62, 32, !dbg !8408
  %64 = icmp eq i32 %63, 0, !dbg !8409
  br i1 %64, label %68, label %65, !dbg !8410

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8411
  %67 = and i32 %66, -8193, !dbg !8411
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8411
  br label %68, !dbg !8413

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8414
  %70 = or i32 %69, 255, !dbg !8414
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8414
  store i8 0, i8* %2, align 1, !dbg !8415
  ret i32 %61, !dbg !8416
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8417 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8421, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.value(metadata i32 %0, metadata !8422, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.value(metadata i8* %1, metadata !8423, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.value(metadata i32 0, metadata !8424, metadata !DIExpression()), !dbg !8428
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #27, !dbg !8429
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8434
  %4 = and i32 %3, 4096, !dbg !8436
  %5 = icmp eq i32 %4, 0, !dbg !8436
  br i1 %5, label %7, label %6, !dbg !8437

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #27, !dbg !8438
  br label %7, !dbg !8444

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8445
  %9 = and i32 %8, 2048, !dbg !8447
  %10 = icmp eq i32 %9, 0, !dbg !8447
  br i1 %10, label %12, label %11, !dbg !8448

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #27, !dbg !8449
  br label %12, !dbg !8455

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8456
  %14 = and i32 %13, 512, !dbg !8457
  %15 = icmp eq i32 %14, 0, !dbg !8457
  br i1 %15, label %26, label %16, !dbg !8458

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #27, !dbg !8459
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8464
  call void @llvm.dbg.value(metadata i32 %17, metadata !8425, metadata !DIExpression()), !dbg !8465
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8466
  %19 = and i32 %18, 32768, !dbg !8468
  %20 = icmp eq i32 %19, 0, !dbg !8469
  br i1 %20, label %26, label %21, !dbg !8470

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25.90, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !8471
  %22 = icmp eq i32 %0, 0, !dbg !8477
  br i1 %22, label %26, label %23, !dbg !8479

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8480
  %25 = and i32 %24, -32769, !dbg !8480
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8480
  br label %26, !dbg !8482

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8483
  %28 = and i32 %27, 1024, !dbg !8485
  %29 = icmp eq i32 %28, 0, !dbg !8485
  br i1 %29, label %31, label %30, !dbg !8486

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #27, !dbg !8487
  br label %31, !dbg !8493

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8494
  %33 = and i32 %32, 256, !dbg !8496
  %34 = icmp eq i32 %33, 0, !dbg !8497
  br i1 %34, label %35, label %39, !dbg !8498

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8499
  %37 = and i32 %36, 8192, !dbg !8501
  %38 = icmp eq i32 %37, 0, !dbg !8501
  br i1 %38, label %41, label %39, !dbg !8502

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #27, !dbg !8503
  br label %41, !dbg !8504

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8504
  %43 = or i32 %42, 65280, !dbg !8504
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8504
  store i8 0, i8* %1, align 1, !dbg !8505
  ret void, !dbg !8506
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8507 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8513, metadata !DIExpression()), !dbg !8515
  call void @llvm.dbg.value(metadata i32 0, metadata !8514, metadata !DIExpression()), !dbg !8515
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #27, !dbg !8516
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8521
  %2 = and i32 %1, 33554432, !dbg !8523
  %3 = icmp eq i32 %2, 0, !dbg !8524
  br i1 %3, label %5, label %4, !dbg !8525

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #27, !dbg !8526
  br label %5, !dbg !8532

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8533
  %7 = and i32 %6, 16777216, !dbg !8535
  %8 = icmp eq i32 %7, 0, !dbg !8536
  br i1 %8, label %10, label %9, !dbg !8537

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #27, !dbg !8538
  br label %10, !dbg !8544

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8545
  %12 = and i32 %11, 524288, !dbg !8547
  %13 = icmp eq i32 %12, 0, !dbg !8548
  br i1 %13, label %15, label %14, !dbg !8549

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #27, !dbg !8550
  br label %15, !dbg !8556

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8557
  %17 = and i32 %16, 262144, !dbg !8559
  %18 = icmp eq i32 %17, 0, !dbg !8560
  br i1 %18, label %20, label %19, !dbg !8561

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #27, !dbg !8562
  br label %20, !dbg !8568

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8569
  %22 = and i32 %21, 131072, !dbg !8571
  %23 = icmp eq i32 %22, 0, !dbg !8572
  br i1 %23, label %25, label %24, !dbg !8573

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #27, !dbg !8574
  br label %25, !dbg !8580

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8581
  %27 = and i32 %26, 65536, !dbg !8583
  %28 = icmp eq i32 %27, 0, !dbg !8584
  br i1 %28, label %30, label %29, !dbg !8585

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #27, !dbg !8586
  br label %30, !dbg !8592

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8593
  %32 = or i32 %31, -65536, !dbg !8593
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8593
  ret void, !dbg !8594
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8595 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8599, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata i8* %0, metadata !8600, metadata !DIExpression()), !dbg !8601
  store i8 0, i8* %0, align 1, !dbg !8602
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #27, !dbg !8603
  ret void, !dbg !8608
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8609 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8613, metadata !DIExpression()), !dbg !8615
  call void @llvm.dbg.value(metadata i32 %0, metadata !8614, metadata !DIExpression()), !dbg !8615
  %2 = icmp slt i32 %0, 16, !dbg !8616
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !8616
  %4 = add nsw i32 %0, -16, !dbg !8616
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #27, !dbg !8616
  ret void, !dbg !8621
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8622 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8626, metadata !DIExpression()), !dbg !8629
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8630
  %3 = load i32, i32* %2, align 4, !dbg !8630
  %4 = inttoptr i32 %3 to i16*, !dbg !8631
  call void @llvm.dbg.value(metadata i16* %4, metadata !8627, metadata !DIExpression()), !dbg !8629
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8632
  %6 = or i32 %5, 256, !dbg !8632
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8632
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8633, !srcloc !8636
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8637, !srcloc !8640
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8641
  %8 = load i16, i16* %7, align 2, !dbg !8642
  call void @llvm.dbg.value(metadata i16 %8, metadata !8628, metadata !DIExpression()), !dbg !8629
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8643
  %10 = and i32 %9, -257, !dbg !8643
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8643
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8644, !srcloc !8636
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8646, !srcloc !8640
  %11 = icmp eq i16 %8, -8446, !dbg !8648
  ret i1 %11, !dbg !8650
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #18 !dbg !8651 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8652
  %2 = or i32 %1, 16, !dbg !8652
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8652
  ret void, !dbg !8653
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #18 !dbg !8654 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8657, metadata !DIExpression()), !dbg !8658
  br label %1, !dbg !8659

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8657, metadata !DIExpression()), !dbg !8658
  tail call fastcc void @__NVIC_SetPriority.104(i32 noundef %2) #28, !dbg !8661
  %3 = add nuw nsw i32 %2, 1, !dbg !8664
  call void @llvm.dbg.value(metadata i32 %3, metadata !8657, metadata !DIExpression()), !dbg !8658
  %4 = icmp eq i32 %3, 86, !dbg !8665
  br i1 %4, label %5, label %1, !dbg !8659, !llvm.loop !8666

5:                                                ; preds = %1
  ret void, !dbg !8668
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.104(i32 noundef %0) unnamed_addr #18 !dbg !8669 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8671, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata i32 1, metadata !8672, metadata !DIExpression()), !dbg !8673
  %2 = and i32 %0, 15, !dbg !8674
  %3 = add nsw i32 %2, -4, !dbg !8674
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8674
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8674
  %6 = icmp slt i32 %0, 0, !dbg !8674
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8674
  store volatile i8 16, i8* %7, align 1, !dbg !8675
  ret void, !dbg !8677
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8678 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8786, metadata !DIExpression()), !dbg !8787
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8788
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8790
  br i1 %3, label %4, label %12, !dbg !8791

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !8792, !srcloc !8804
  call void @llvm.dbg.value(metadata i32 %5, metadata !8795, metadata !DIExpression()) #26, !dbg !8805
  %6 = icmp eq i32 %5, 0, !dbg !8806
  br i1 %6, label %12, label %7, !dbg !8807

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8808
  %9 = or i32 %8, 268435456, !dbg !8808
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8808
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8810
  %11 = and i32 %10, -32769, !dbg !8810
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8810
  br label %12, !dbg !8811

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !8812
  ret void, !dbg !8813
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8814 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !8815
  ret void, !dbg !8816
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !538 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !645, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i8 0, metadata !646, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 64, metadata !648, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.value(metadata i32 undef, metadata !647, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !8817
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8818
  %3 = load i32, i32* %2, align 4, !dbg !8818
  call void @llvm.dbg.value(metadata i32 %3, metadata !647, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !8817
  %4 = add i32 %3, -64, !dbg !8820
  call void @llvm.dbg.value(metadata i32 %4, metadata !647, metadata !DIExpression()), !dbg !8817
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8821
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8822
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8823
  call void @llvm.dbg.value(metadata i8 1, metadata !646, metadata !DIExpression()), !dbg !8817
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !8824
  ret void, !dbg !8825
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8826 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8827
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #26, !dbg !8828, !srcloc !8831
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #26, !dbg !8832, !srcloc !8835
  ret void, !dbg !8836
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8837 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #26, !dbg !8838, !srcloc !8841
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8842
  ret void, !dbg !8843
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8844 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8859, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.value(metadata i8 %1, metadata !8860, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.value(metadata i32 %2, metadata !8861, metadata !DIExpression()), !dbg !8863
  call void @llvm.dbg.value(metadata i32 %3, metadata !8862, metadata !DIExpression()), !dbg !8863
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #28, !dbg !8864
  %6 = icmp eq i32 %5, -22, !dbg !8866
  br i1 %6, label %7, label %9, !dbg !8867

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 283) #27, !dbg !8868
  %8 = zext i8 %1 to i32, !dbg !8868
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.116, i32 0, i32 0), i32 noundef %8) #27, !dbg !8868
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 283) #27, !dbg !8868
  unreachable, !dbg !8868

9:                                                ; preds = %4
  ret void, !dbg !8873
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8874 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8879, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i8 %1, metadata !8880, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i32 undef, metadata !8881, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i32 undef, metadata !8882, metadata !DIExpression()), !dbg !8884
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8885
  call void @llvm.dbg.value(metadata i8 %3, metadata !8883, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8884
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #28, !dbg !8886
  call void @llvm.dbg.value(metadata i32 %4, metadata !8883, metadata !DIExpression()), !dbg !8884
  %5 = trunc i32 %4 to i8, !dbg !8887
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8888
  ret i32 %4, !dbg !8889
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8890 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8894, metadata !DIExpression()), !dbg !8900
  call void @llvm.dbg.value(metadata i8 %1, metadata !8895, metadata !DIExpression()), !dbg !8900
  call void @llvm.dbg.value(metadata i8 %2, metadata !8896, metadata !DIExpression()), !dbg !8900
  call void @llvm.dbg.value(metadata i1 %3, metadata !8897, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8900
  %5 = zext i8 %2 to i32, !dbg !8901
  call void @llvm.dbg.value(metadata i32 %5, metadata !8899, metadata !DIExpression()), !dbg !8900
  call void @llvm.dbg.value(metadata i32 0, metadata !8898, metadata !DIExpression()), !dbg !8900
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8899, metadata !DIExpression()), !dbg !8900
  call void @llvm.dbg.value(metadata i32 0, metadata !8898, metadata !DIExpression()), !dbg !8900
  %7 = icmp eq i8 %1, 0, !dbg !8902
  br i1 %7, label %30, label %8, !dbg !8905

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8899, metadata !DIExpression()), !dbg !8900
  call void @llvm.dbg.value(metadata i32 %10, metadata !8898, metadata !DIExpression()), !dbg !8900
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8906
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8909
  %13 = load i32, i32* %12, align 4, !dbg !8909
  %14 = icmp eq i32 %13, 0, !dbg !8910
  br i1 %14, label %26, label %15, !dbg !8911

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8912

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #28, !dbg !8914
  %18 = icmp eq i32 %17, 0, !dbg !8914
  br i1 %18, label %19, label %20, !dbg !8915

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.117, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #27, !dbg !8916
  br label %30, !dbg !8922

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8923
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #28, !dbg !8924
  call void @llvm.dbg.value(metadata i32 %22, metadata !8899, metadata !DIExpression()), !dbg !8900
  %23 = icmp eq i32 %22, -22, !dbg !8925
  br i1 %23, label %30, label %24, !dbg !8927

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8928
  call void @llvm.dbg.value(metadata i32 %25, metadata !8899, metadata !DIExpression()), !dbg !8900
  br label %26, !dbg !8929

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8900
  call void @llvm.dbg.value(metadata i32 %27, metadata !8899, metadata !DIExpression()), !dbg !8900
  %28 = add nuw nsw i32 %10, 1, !dbg !8930
  call void @llvm.dbg.value(metadata i32 %28, metadata !8898, metadata !DIExpression()), !dbg !8900
  %29 = icmp eq i32 %28, %6, !dbg !8902
  br i1 %29, label %30, label %8, !dbg !8905, !llvm.loop !8931

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8900
  ret i32 %31, !dbg !8933
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #19 !dbg !8934 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8938, metadata !DIExpression()), !dbg !8940
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8941
  %3 = load i32, i32* %2, align 4, !dbg !8941
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8942, !range !5383
  %5 = icmp ult i32 %4, 2, !dbg !8942
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8943
  br i1 %7, label %8, label %15, !dbg !8943

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8944
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8945
  %11 = load i32, i32* %10, align 4, !dbg !8945
  %12 = and i32 %11, %9, !dbg !8946
  %13 = icmp eq i32 %12, 0, !dbg !8947
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8939, metadata !DIExpression()), !dbg !8940
  ret i32 %16, !dbg !8948
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8949 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8953, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8954, metadata !DIExpression()), !dbg !8956
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !8957
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #26, !dbg !8957
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !8955, metadata !DIExpression()), !dbg !8958
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !8959
  %6 = load i32, i32* %5, align 4, !dbg !8959
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !8960
  store i32 %6, i32* %7, align 4, !dbg !8961
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !8962
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !8963
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !8964
  %11 = load i32, i32* %10, align 4, !dbg !8964
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #28, !dbg !8965
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #28, !dbg !8966
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #26, !dbg !8967
  ret i32 %12, !dbg !8968
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #15 !dbg !8969 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !8976, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !8977, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.value(metadata i32 undef, metadata !8978, metadata !DIExpression()), !dbg !8980
  call void @llvm.dbg.value(metadata i32 %2, metadata !8979, metadata !DIExpression()), !dbg !8980
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !8981
  %5 = load i32, i32* %4, align 4, !dbg !8981
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #28, !dbg !8982
  %7 = or i32 %6, %5, !dbg !8983
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !8984
  store i32 %7, i32* %8, align 4, !dbg !8985
  ret void, !dbg !8986
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8987 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8991, metadata !DIExpression()), !dbg !8993
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !8992, metadata !DIExpression()), !dbg !8993
  %3 = zext i8 %0 to i32, !dbg !8994
  %4 = icmp ugt i8 %0, 7, !dbg !8996
  br i1 %4, label %5, label %6, !dbg !8997

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.118, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #27, !dbg !8998
  br label %7, !dbg !9004

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #28, !dbg !9005
  br label %7, !dbg !9006

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !8993
  ret i32 %8, !dbg !9007
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #18 !dbg !9008 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9012, metadata !DIExpression()), !dbg !9014
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9013, metadata !DIExpression()), !dbg !9014
  tail call fastcc void @set_region_number(i32 noundef %0) #28, !dbg !9015
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !9016
  %4 = load i32, i32* %3, align 4, !dbg !9016
  %5 = and i32 %4, -32, !dbg !9017
  %6 = or i32 %5, %0, !dbg !9018
  %7 = or i32 %6, 16, !dbg !9018
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !9019
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !9020
  %9 = load i32, i32* %8, align 4, !dbg !9020
  %10 = or i32 %9, 1, !dbg !9021
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9022
  ret void, !dbg !9023
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #18 !dbg !9024 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9027, metadata !DIExpression()), !dbg !9028
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9029
  ret void, !dbg !9030
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #6 !dbg !9031 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9035, metadata !DIExpression()), !dbg !9036
  %2 = icmp ult i32 %0, 33, !dbg !9037
  br i1 %2, label %11, label %3, !dbg !9039

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !9040
  br i1 %4, label %11, label %5, !dbg !9042

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !9043
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !9044, !range !5383
  %8 = mul nsw i32 %7, -2, !dbg !9045
  %9 = add nsw i32 %8, 62, !dbg !9045
  %10 = and i32 %9, 62, !dbg !9046
  br label %11, !dbg !9047

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !9036
  ret i32 %12, !dbg !9048
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !9049 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9053, metadata !DIExpression()), !dbg !9055
  call void @llvm.dbg.value(metadata i8 %1, metadata !9054, metadata !DIExpression()), !dbg !9055
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #28, !dbg !9056
  %4 = icmp eq i32 %3, -22, !dbg !9058
  br i1 %4, label %5, label %7, !dbg !9059

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 314) #27, !dbg !9060
  %6 = zext i8 %1 to i32, !dbg !9060
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.121, i32 0, i32 0), i32 noundef %6) #27, !dbg !9060
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 314) #27, !dbg !9060
  unreachable, !dbg !9060

7:                                                ; preds = %2
  ret void, !dbg !9065
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9066 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9070, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.value(metadata i8 %1, metadata !9071, metadata !DIExpression()), !dbg !9077
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9078
  call void @llvm.dbg.value(metadata i8 %3, metadata !9072, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9077
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #28, !dbg !9079
  call void @llvm.dbg.value(metadata i32 %4, metadata !9072, metadata !DIExpression()), !dbg !9077
  %5 = icmp ne i32 %4, -22, !dbg !9080
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !9081
  call void @llvm.dbg.value(metadata i32 %4, metadata !9073, metadata !DIExpression()), !dbg !9082
  br i1 %7, label %8, label %12, !dbg !9081

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9073, metadata !DIExpression()), !dbg !9082
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #28, !dbg !9083
  %10 = add i32 %9, 1, !dbg !9086
  call void @llvm.dbg.value(metadata i32 %10, metadata !9073, metadata !DIExpression()), !dbg !9082
  %11 = icmp eq i32 %10, 8, !dbg !9087
  br i1 %11, label %12, label %8, !dbg !9088, !llvm.loop !9089

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !9091
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #18 !dbg !9092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9095, metadata !DIExpression()), !dbg !9096
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9097
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9098
  ret void, !dbg !9099
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !9100 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !9105
  %2 = icmp ugt i32 %1, 8, !dbg !9107
  br i1 %2, label %3, label %4, !dbg !9108

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 341) #27, !dbg !9109
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.122, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #27, !dbg !9109
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 341) #27, !dbg !9109
  unreachable, !dbg !9109

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #28, !dbg !9114
  call void @llvm.dbg.value(metadata i32 0, metadata !9104, metadata !DIExpression()), !dbg !9115
  %5 = icmp eq i32 %1, 0, !dbg !9116
  br i1 %5, label %13, label %6, !dbg !9119

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !9119

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9104, metadata !DIExpression()), !dbg !9115
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !9120
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #28, !dbg !9122
  %11 = add nuw i32 %9, 1, !dbg !9123
  call void @llvm.dbg.value(metadata i32 %11, metadata !9104, metadata !DIExpression()), !dbg !9115
  %12 = icmp eq i32 %11, %1, !dbg !9116
  br i1 %12, label %13, label %8, !dbg !9119, !llvm.loop !9124

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !9126
  store i8 %14, i8* @static_regions_num, align 1, !dbg !9127
  tail call void @arm_core_mpu_enable() #28, !dbg !9128
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !9129
  %16 = and i32 %15, 65280, !dbg !9129
  %17 = icmp eq i32 %16, 2048, !dbg !9129
  br i1 %17, label %19, label %18, !dbg !9132

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 435) #27, !dbg !9133
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.124, i32 0, i32 0)) #27, !dbg !9133
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.115, i32 0, i32 0), i32 noundef 435) #27, !dbg !9133
  unreachable, !dbg !9133

19:                                               ; preds = %13
  ret i32 0, !dbg !9135
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !9136 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9143, metadata !DIExpression()), !dbg !9146
  call void @llvm.dbg.value(metadata i8* %1, metadata !9144, metadata !DIExpression()), !dbg !9146
  call void @llvm.dbg.value(metadata i8* %0, metadata !9145, metadata !DIExpression()), !dbg !9146
  %3 = load i8, i8* %1, align 1, !dbg !9147
  %4 = icmp eq i8 %3, 0, !dbg !9148
  br i1 %4, label %13, label %5, !dbg !9149

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !9143, metadata !DIExpression()), !dbg !9146
  call void @llvm.dbg.value(metadata i8* %8, metadata !9144, metadata !DIExpression()), !dbg !9146
  store i8 %6, i8* %7, align 1, !dbg !9150
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9152
  call void @llvm.dbg.value(metadata i8* %9, metadata !9143, metadata !DIExpression()), !dbg !9146
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9153
  call void @llvm.dbg.value(metadata i8* %10, metadata !9144, metadata !DIExpression()), !dbg !9146
  %11 = load i8, i8* %10, align 1, !dbg !9147
  %12 = icmp eq i8 %11, 0, !dbg !9148
  br i1 %12, label %13, label %5, !dbg !9149, !llvm.loop !9154

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !9156
  ret i8* %0, !dbg !9157
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9158 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9162, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.value(metadata i8* %1, metadata !9163, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.value(metadata i32 %2, metadata !9164, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.value(metadata i8* %0, metadata !9165, metadata !DIExpression()), !dbg !9166
  %4 = icmp eq i32 %2, 0, !dbg !9167
  br i1 %4, label %22, label %5, !dbg !9168

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9162, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.value(metadata i32 %7, metadata !9164, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.value(metadata i8* %8, metadata !9163, metadata !DIExpression()), !dbg !9166
  %9 = load i8, i8* %8, align 1, !dbg !9169
  %10 = icmp eq i8 %9, 0, !dbg !9170
  br i1 %10, label %16, label %11, !dbg !9171

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !9172
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9174
  call void @llvm.dbg.value(metadata i8* %12, metadata !9163, metadata !DIExpression()), !dbg !9166
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9175
  call void @llvm.dbg.value(metadata i8* %13, metadata !9162, metadata !DIExpression()), !dbg !9166
  %14 = add i32 %7, -1, !dbg !9176
  call void @llvm.dbg.value(metadata i32 %14, metadata !9164, metadata !DIExpression()), !dbg !9166
  %15 = icmp eq i32 %14, 0, !dbg !9167
  br i1 %15, label %22, label %5, !dbg !9168, !llvm.loop !9177

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !9162, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.value(metadata i32 %18, metadata !9164, metadata !DIExpression()), !dbg !9166
  store i8 0, i8* %17, align 1, !dbg !9179
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9181
  call void @llvm.dbg.value(metadata i8* %19, metadata !9162, metadata !DIExpression()), !dbg !9166
  %20 = add i32 %18, -1, !dbg !9182
  call void @llvm.dbg.value(metadata i32 %20, metadata !9164, metadata !DIExpression()), !dbg !9166
  %21 = icmp eq i32 %20, 0, !dbg !9183
  br i1 %21, label %22, label %16, !dbg !9184, !llvm.loop !9185

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !9187
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !9188 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9192, metadata !DIExpression()), !dbg !9195
  call void @llvm.dbg.value(metadata i32 %1, metadata !9193, metadata !DIExpression()), !dbg !9195
  call void @llvm.dbg.value(metadata i32 %1, metadata !9194, metadata !DIExpression()), !dbg !9195
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9196

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !9192, metadata !DIExpression()), !dbg !9195
  %6 = load i8, i8* %5, align 1, !dbg !9197
  %7 = icmp eq i8 %6, %3, !dbg !9198
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !9199
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9200
  call void @llvm.dbg.value(metadata i8* %10, metadata !9192, metadata !DIExpression()), !dbg !9195
  br i1 %9, label %11, label %4, !dbg !9199, !llvm.loop !9202

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !9204
  ret i8* %12, !dbg !9205
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !9206 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9208, metadata !DIExpression()), !dbg !9211
  call void @llvm.dbg.value(metadata i32 %1, metadata !9209, metadata !DIExpression()), !dbg !9211
  call void @llvm.dbg.value(metadata i8* null, metadata !9210, metadata !DIExpression()), !dbg !9211
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9212

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !9211
  call void @llvm.dbg.value(metadata i8* %6, metadata !9210, metadata !DIExpression()), !dbg !9211
  call void @llvm.dbg.value(metadata i8* %5, metadata !9208, metadata !DIExpression()), !dbg !9211
  %7 = load i8, i8* %5, align 1, !dbg !9213
  %8 = icmp eq i8 %7, %3, !dbg !9216
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !9217
  call void @llvm.dbg.value(metadata i8* %9, metadata !9210, metadata !DIExpression()), !dbg !9211
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9218
  call void @llvm.dbg.value(metadata i8* %10, metadata !9208, metadata !DIExpression()), !dbg !9211
  %11 = icmp eq i8 %7, 0, !dbg !9219
  br i1 %11, label %12, label %4, !dbg !9219, !llvm.loop !9220

12:                                               ; preds = %4
  ret i8* %9, !dbg !9222
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !9223 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9227, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata i32 0, metadata !9228, metadata !DIExpression()), !dbg !9229
  %2 = load i8, i8* %0, align 1, !dbg !9230
  %3 = icmp eq i8 %2, 0, !dbg !9231
  br i1 %3, label %11, label %4, !dbg !9232

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9228, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata i8* %6, metadata !9227, metadata !DIExpression()), !dbg !9229
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9233
  call void @llvm.dbg.value(metadata i8* %7, metadata !9227, metadata !DIExpression()), !dbg !9229
  %8 = add i32 %5, 1, !dbg !9235
  call void @llvm.dbg.value(metadata i32 %8, metadata !9228, metadata !DIExpression()), !dbg !9229
  %9 = load i8, i8* %7, align 1, !dbg !9230
  %10 = icmp eq i8 %9, 0, !dbg !9231
  br i1 %10, label %11, label %4, !dbg !9232, !llvm.loop !9236

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !9229
  ret i32 %12, !dbg !9238
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !9239 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9243, metadata !DIExpression()), !dbg !9246
  call void @llvm.dbg.value(metadata i32 %1, metadata !9244, metadata !DIExpression()), !dbg !9246
  call void @llvm.dbg.value(metadata i32 0, metadata !9245, metadata !DIExpression()), !dbg !9246
  %3 = load i8, i8* %0, align 1, !dbg !9247
  %4 = icmp ne i8 %3, 0, !dbg !9248
  %5 = icmp ne i32 %1, 0, !dbg !9249
  %6 = and i1 %4, %5, !dbg !9249
  br i1 %6, label %7, label %16, !dbg !9250

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9245, metadata !DIExpression()), !dbg !9246
  call void @llvm.dbg.value(metadata i8* %9, metadata !9243, metadata !DIExpression()), !dbg !9246
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9251
  call void @llvm.dbg.value(metadata i8* %10, metadata !9243, metadata !DIExpression()), !dbg !9246
  %11 = add nuw i32 %8, 1, !dbg !9253
  call void @llvm.dbg.value(metadata i32 %11, metadata !9245, metadata !DIExpression()), !dbg !9246
  %12 = load i8, i8* %10, align 1, !dbg !9247
  %13 = icmp ne i8 %12, 0, !dbg !9248
  %14 = icmp ult i32 %11, %1, !dbg !9249
  %15 = select i1 %13, i1 %14, i1 false, !dbg !9249
  br i1 %15, label %7, label %16, !dbg !9250, !llvm.loop !9254

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !9246
  ret i32 %17, !dbg !9256
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !9257 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9261, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.value(metadata i8* %1, metadata !9262, metadata !DIExpression()), !dbg !9263
  %3 = load i8, i8* %0, align 1, !dbg !9264
  %4 = load i8, i8* %1, align 1, !dbg !9265
  %5 = icmp ne i8 %3, %4, !dbg !9266
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !9267
  br i1 %7, label %18, label %8, !dbg !9267

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !9262, metadata !DIExpression()), !dbg !9263
  call void @llvm.dbg.value(metadata i8* %10, metadata !9261, metadata !DIExpression()), !dbg !9263
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9268
  call void @llvm.dbg.value(metadata i8* %11, metadata !9261, metadata !DIExpression()), !dbg !9263
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9270
  call void @llvm.dbg.value(metadata i8* %12, metadata !9262, metadata !DIExpression()), !dbg !9263
  %13 = load i8, i8* %11, align 1, !dbg !9264
  %14 = load i8, i8* %12, align 1, !dbg !9265
  %15 = icmp ne i8 %13, %14, !dbg !9266
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !9267
  br i1 %17, label %18, label %8, !dbg !9267, !llvm.loop !9271

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !9264
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !9265
  %21 = zext i8 %19 to i32, !dbg !9274
  %22 = zext i8 %20 to i32, !dbg !9275
  %23 = sub nsw i32 %21, %22, !dbg !9276
  ret i32 %23, !dbg !9277
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !9278 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9282, metadata !DIExpression()), !dbg !9285
  call void @llvm.dbg.value(metadata i8* %1, metadata !9283, metadata !DIExpression()), !dbg !9285
  call void @llvm.dbg.value(metadata i32 %2, metadata !9284, metadata !DIExpression()), !dbg !9285
  %4 = icmp eq i32 %2, 0, !dbg !9286
  br i1 %4, label %23, label %5, !dbg !9286

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9284, metadata !DIExpression()), !dbg !9285
  call void @llvm.dbg.value(metadata i8* %7, metadata !9283, metadata !DIExpression()), !dbg !9285
  call void @llvm.dbg.value(metadata i8* %8, metadata !9282, metadata !DIExpression()), !dbg !9285
  %9 = load i8, i8* %8, align 1, !dbg !9287
  %10 = load i8, i8* %7, align 1, !dbg !9288
  %11 = icmp ne i8 %9, %10, !dbg !9289
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !9290
  br i1 %13, label %19, label %14, !dbg !9290

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9291
  call void @llvm.dbg.value(metadata i8* %15, metadata !9282, metadata !DIExpression()), !dbg !9285
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9293
  call void @llvm.dbg.value(metadata i8* %16, metadata !9283, metadata !DIExpression()), !dbg !9285
  %17 = add i32 %6, -1, !dbg !9294
  call void @llvm.dbg.value(metadata i32 %17, metadata !9284, metadata !DIExpression()), !dbg !9285
  %18 = icmp eq i32 %17, 0, !dbg !9286
  br i1 %18, label %23, label %5, !dbg !9286, !llvm.loop !9295

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !9298
  %21 = zext i8 %10 to i32, !dbg !9299
  %22 = sub nsw i32 %20, %21, !dbg !9300
  br label %23, !dbg !9301

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !9301
  ret i32 %24, !dbg !9302
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #17 !dbg !9303 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9307, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i8* %1, metadata !9308, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i8** %2, metadata !9309, metadata !DIExpression()), !dbg !9312
  %4 = icmp eq i8* %0, null, !dbg !9313
  br i1 %4, label %5, label %7, !dbg !9313

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !9314
  br label %7, !dbg !9313

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !9313
  call void @llvm.dbg.value(metadata i8* %8, metadata !9310, metadata !DIExpression()), !dbg !9312
  %9 = load i8, i8* %8, align 1, !dbg !9315
  %10 = icmp eq i8 %9, 0, !dbg !9315
  br i1 %10, label %33, label %11, !dbg !9316

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9310, metadata !DIExpression()), !dbg !9312
  %14 = zext i8 %12 to i32, !dbg !9315
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #28, !dbg !9317
  %16 = icmp eq i8* %15, null, !dbg !9316
  br i1 %16, label %21, label %17, !dbg !9318

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9319
  call void @llvm.dbg.value(metadata i8* %18, metadata !9310, metadata !DIExpression()), !dbg !9312
  %19 = load i8, i8* %18, align 1, !dbg !9315
  %20 = icmp eq i8 %19, 0, !dbg !9315
  br i1 %20, label %33, label %11, !dbg !9316, !llvm.loop !9321

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !9311, metadata !DIExpression()), !dbg !9312
  %24 = zext i8 %22 to i32, !dbg !9323
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #28, !dbg !9324
  %26 = icmp eq i8* %25, null, !dbg !9325
  br i1 %26, label %27, label %31, !dbg !9326

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9327
  call void @llvm.dbg.value(metadata i8* %28, metadata !9311, metadata !DIExpression()), !dbg !9312
  %29 = load i8, i8* %28, align 1, !dbg !9323
  %30 = icmp eq i8 %29, 0, !dbg !9323
  br i1 %30, label %33, label %21, !dbg !9329, !llvm.loop !9330

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9332
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9335
  br label %33, !dbg !9336

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !9312
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !9312
  store i8* %34, i8** %2, align 4, !dbg !9312
  ret i8* %35, !dbg !9337
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !9338 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9340, metadata !DIExpression()), !dbg !9342
  call void @llvm.dbg.value(metadata i8* %1, metadata !9341, metadata !DIExpression()), !dbg !9342
  %3 = tail call i32 @strlen(i8* noundef %0) #28, !dbg !9343
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9344
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #28, !dbg !9345
  ret i8* %0, !dbg !9346
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9347 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9349, metadata !DIExpression()), !dbg !9354
  call void @llvm.dbg.value(metadata i8* %1, metadata !9350, metadata !DIExpression()), !dbg !9354
  call void @llvm.dbg.value(metadata i32 %2, metadata !9351, metadata !DIExpression()), !dbg !9354
  call void @llvm.dbg.value(metadata i8* %0, metadata !9352, metadata !DIExpression()), !dbg !9354
  %4 = tail call i32 @strlen(i8* noundef %0) #28, !dbg !9355
  call void @llvm.dbg.value(metadata i32 %4, metadata !9353, metadata !DIExpression()), !dbg !9354
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9356
  call void @llvm.dbg.value(metadata i8* %5, metadata !9349, metadata !DIExpression()), !dbg !9354
  call void @llvm.dbg.value(metadata i8* %1, metadata !9350, metadata !DIExpression()), !dbg !9354
  call void @llvm.dbg.value(metadata i32 %2, metadata !9351, metadata !DIExpression()), !dbg !9354
  call void @llvm.dbg.value(metadata i32 %2, metadata !9351, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9354
  %6 = icmp eq i32 %2, 0, !dbg !9357
  br i1 %6, label %18, label %7, !dbg !9358

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !9359
  call void @llvm.dbg.value(metadata i8* %9, metadata !9349, metadata !DIExpression()), !dbg !9354
  call void @llvm.dbg.value(metadata i8* %10, metadata !9350, metadata !DIExpression()), !dbg !9354
  %12 = load i8, i8* %10, align 1, !dbg !9360
  %13 = icmp eq i8 %12, 0, !dbg !9361
  br i1 %13, label %18, label %14, !dbg !9362

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9363
  call void @llvm.dbg.value(metadata i8* %15, metadata !9350, metadata !DIExpression()), !dbg !9354
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9365
  call void @llvm.dbg.value(metadata i8* %16, metadata !9349, metadata !DIExpression()), !dbg !9354
  store i8 %12, i8* %9, align 1, !dbg !9366
  call void @llvm.dbg.value(metadata i32 %11, metadata !9351, metadata !DIExpression()), !dbg !9354
  call void @llvm.dbg.value(metadata i32 %11, metadata !9351, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9354
  %17 = icmp eq i32 %11, 0, !dbg !9357
  br i1 %17, label %18, label %7, !dbg !9358, !llvm.loop !9367

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9354
  store i8 0, i8* %19, align 1, !dbg !9369
  ret i8* %0, !dbg !9370
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !9371 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9375, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i8* %1, metadata !9376, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i32 %2, metadata !9377, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i8* %0, metadata !9378, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i8* %1, metadata !9379, metadata !DIExpression()), !dbg !9380
  %4 = icmp eq i32 %2, 0, !dbg !9381
  br i1 %4, label %31, label %5, !dbg !9383

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9379, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i8* %0, metadata !9378, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i32 %2, metadata !9377, metadata !DIExpression()), !dbg !9380
  %6 = add i32 %2, -1, !dbg !9384
  call void @llvm.dbg.value(metadata i32 %6, metadata !9377, metadata !DIExpression()), !dbg !9380
  %7 = icmp eq i32 %6, 0, !dbg !9385
  br i1 %7, label %23, label %8, !dbg !9386

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9387
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9387
  br label %11, !dbg !9387

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9379, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i8* %14, metadata !9378, metadata !DIExpression()), !dbg !9380
  %15 = load i8, i8* %14, align 1, !dbg !9388
  %16 = load i8, i8* %13, align 1, !dbg !9389
  %17 = icmp eq i8 %15, %16, !dbg !9390
  br i1 %17, label %18, label %23, !dbg !9387

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9391
  call void @llvm.dbg.value(metadata i8* %19, metadata !9378, metadata !DIExpression()), !dbg !9380
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9393
  call void @llvm.dbg.value(metadata i8* %20, metadata !9379, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i32 %12, metadata !9377, metadata !DIExpression()), !dbg !9380
  %21 = add i32 %12, -1, !dbg !9384
  call void @llvm.dbg.value(metadata i32 %21, metadata !9377, metadata !DIExpression()), !dbg !9380
  %22 = icmp eq i32 %21, 0, !dbg !9385
  br i1 %22, label %23, label %11, !dbg !9386, !llvm.loop !9394

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9380
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9380
  %26 = load i8, i8* %24, align 1, !dbg !9396
  %27 = zext i8 %26 to i32, !dbg !9396
  %28 = load i8, i8* %25, align 1, !dbg !9397
  %29 = zext i8 %28 to i32, !dbg !9397
  %30 = sub nsw i32 %27, %29, !dbg !9398
  br label %31, !dbg !9399

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9380
  ret i32 %32, !dbg !9400
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9401 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9405, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i8* %1, metadata !9406, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i32 %2, metadata !9407, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i8* %0, metadata !9408, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i8* %1, metadata !9409, metadata !DIExpression()), !dbg !9410
  %4 = ptrtoint i8* %0 to i32, !dbg !9411
  %5 = ptrtoint i8* %1 to i32, !dbg !9411
  %6 = sub i32 %4, %5, !dbg !9411
  %7 = icmp ult i32 %6, %2, !dbg !9413
  br i1 %7, label %10, label %8, !dbg !9414

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9409, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i8* %0, metadata !9408, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i32 %2, metadata !9407, metadata !DIExpression()), !dbg !9410
  %9 = icmp eq i32 %2, 0, !dbg !9415
  br i1 %9, label %26, label %17, !dbg !9417

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9407, metadata !DIExpression()), !dbg !9410
  %12 = add i32 %11, -1, !dbg !9418
  call void @llvm.dbg.value(metadata i32 %12, metadata !9407, metadata !DIExpression()), !dbg !9410
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9421
  %14 = load i8, i8* %13, align 1, !dbg !9421
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9422
  store i8 %14, i8* %15, align 1, !dbg !9423
  %16 = icmp eq i32 %12, 0, !dbg !9424
  br i1 %16, label %26, label %10, !dbg !9425, !llvm.loop !9426

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9409, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i8* %19, metadata !9408, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata i32 %20, metadata !9407, metadata !DIExpression()), !dbg !9410
  %21 = load i8, i8* %18, align 1, !dbg !9428
  store i8 %21, i8* %19, align 1, !dbg !9430
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9431
  call void @llvm.dbg.value(metadata i8* %22, metadata !9408, metadata !DIExpression()), !dbg !9410
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9432
  call void @llvm.dbg.value(metadata i8* %23, metadata !9409, metadata !DIExpression()), !dbg !9410
  %24 = add i32 %20, -1, !dbg !9433
  call void @llvm.dbg.value(metadata i32 %24, metadata !9407, metadata !DIExpression()), !dbg !9410
  %25 = icmp eq i32 %24, 0, !dbg !9415
  br i1 %25, label %26, label %17, !dbg !9417, !llvm.loop !9434

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9436
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !9437 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9443, metadata !DIExpression()), !dbg !9448
  call void @llvm.dbg.value(metadata i8* %1, metadata !9444, metadata !DIExpression()), !dbg !9448
  call void @llvm.dbg.value(metadata i32 %2, metadata !9445, metadata !DIExpression()), !dbg !9448
  call void @llvm.dbg.value(metadata i8* %0, metadata !9446, metadata !DIExpression()), !dbg !9448
  call void @llvm.dbg.value(metadata i8* %1, metadata !9447, metadata !DIExpression()), !dbg !9448
  %4 = icmp eq i32 %2, 0, !dbg !9449
  br i1 %4, label %14, label %5, !dbg !9450

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9447, metadata !DIExpression()), !dbg !9448
  call void @llvm.dbg.value(metadata i8* %7, metadata !9446, metadata !DIExpression()), !dbg !9448
  call void @llvm.dbg.value(metadata i32 %8, metadata !9445, metadata !DIExpression()), !dbg !9448
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9451
  call void @llvm.dbg.value(metadata i8* %9, metadata !9447, metadata !DIExpression()), !dbg !9448
  %10 = load i8, i8* %6, align 1, !dbg !9453
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9454
  call void @llvm.dbg.value(metadata i8* %11, metadata !9446, metadata !DIExpression()), !dbg !9448
  store i8 %10, i8* %7, align 1, !dbg !9455
  %12 = add i32 %8, -1, !dbg !9456
  call void @llvm.dbg.value(metadata i32 %12, metadata !9445, metadata !DIExpression()), !dbg !9448
  %13 = icmp eq i32 %12, 0, !dbg !9449
  br i1 %13, label %14, label %5, !dbg !9450, !llvm.loop !9457

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9459
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !9460 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9464, metadata !DIExpression()), !dbg !9469
  call void @llvm.dbg.value(metadata i32 %1, metadata !9465, metadata !DIExpression()), !dbg !9469
  call void @llvm.dbg.value(metadata i32 %2, metadata !9466, metadata !DIExpression()), !dbg !9469
  call void @llvm.dbg.value(metadata i8* %0, metadata !9467, metadata !DIExpression()), !dbg !9469
  %4 = trunc i32 %1 to i8, !dbg !9470
  call void @llvm.dbg.value(metadata i8 %4, metadata !9468, metadata !DIExpression()), !dbg !9469
  call void @llvm.dbg.value(metadata i32 %2, metadata !9466, metadata !DIExpression()), !dbg !9469
  call void @llvm.dbg.value(metadata i8* %0, metadata !9467, metadata !DIExpression()), !dbg !9469
  %5 = icmp eq i32 %2, 0, !dbg !9471
  br i1 %5, label %12, label %6, !dbg !9472

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9466, metadata !DIExpression()), !dbg !9469
  call void @llvm.dbg.value(metadata i8* %8, metadata !9467, metadata !DIExpression()), !dbg !9469
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9473
  call void @llvm.dbg.value(metadata i8* %9, metadata !9467, metadata !DIExpression()), !dbg !9469
  store i8 %4, i8* %8, align 1, !dbg !9475
  %10 = add i32 %7, -1, !dbg !9476
  call void @llvm.dbg.value(metadata i32 %10, metadata !9466, metadata !DIExpression()), !dbg !9469
  %11 = icmp eq i32 %10, 0, !dbg !9471
  br i1 %11, label %12, label %6, !dbg !9472, !llvm.loop !9477

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9479
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !9480 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9484, metadata !DIExpression()), !dbg !9490
  call void @llvm.dbg.value(metadata i32 %1, metadata !9485, metadata !DIExpression()), !dbg !9490
  call void @llvm.dbg.value(metadata i32 %2, metadata !9486, metadata !DIExpression()), !dbg !9490
  %4 = icmp eq i32 %2, 0, !dbg !9491
  br i1 %4, label %17, label %5, !dbg !9492

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9493

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9494
  call void @llvm.dbg.value(metadata i8* %9, metadata !9487, metadata !DIExpression()), !dbg !9494
  call void @llvm.dbg.value(metadata i32 %8, metadata !9486, metadata !DIExpression()), !dbg !9490
  call void @llvm.dbg.value(metadata i8* %9, metadata !9487, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9494
  %10 = load i8, i8* %9, align 1, !dbg !9495
  %11 = icmp eq i8 %10, %6, !dbg !9498
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9499
  call void @llvm.dbg.value(metadata i8* %12, metadata !9487, metadata !DIExpression()), !dbg !9494
  call void @llvm.dbg.value(metadata i32 %13, metadata !9486, metadata !DIExpression()), !dbg !9490
  br i1 %15, label %16, label %7, !dbg !9499, !llvm.loop !9500

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9502

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9490
  ret i8* %19, !dbg !9503
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #12 !dbg !9504 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9506, metadata !DIExpression()), !dbg !9507
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9508
  ret void, !dbg !9509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #5 !dbg !9510 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9512, metadata !DIExpression()), !dbg !9513
  ret i32 -1, !dbg !9514
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9515 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9519, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.value(metadata i32* %1, metadata !9520, metadata !DIExpression()), !dbg !9521
  %3 = ptrtoint i32* %1 to i32, !dbg !9522
  %4 = and i32 %3, -2, !dbg !9522
  %5 = icmp eq i32 %4, 2, !dbg !9522
  br i1 %5, label %6, label %9, !dbg !9522

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9523
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !9523
  br label %9, !dbg !9524

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9524
  ret i32 %10, !dbg !9525
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9528, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata i32* %1, metadata !9529, metadata !DIExpression()), !dbg !9530
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #28, !dbg !9531
  ret i32 %3, !dbg !9532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9536, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata i32* %1, metadata !9537, metadata !DIExpression()), !dbg !9538
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9539, !srcloc !9541
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #28, !dbg !9542
  ret i32 %3, !dbg !9543
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9544 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9549, metadata !DIExpression()), !dbg !9553
  call void @llvm.dbg.value(metadata i32* %1, metadata !9550, metadata !DIExpression()), !dbg !9553
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9554
  call void @llvm.dbg.value(metadata i32 %3, metadata !9551, metadata !DIExpression()), !dbg !9553
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #28, !dbg !9555
  call void @llvm.dbg.value(metadata i32 %4, metadata !9552, metadata !DIExpression()), !dbg !9553
  %5 = icmp ne i32 %3, %4, !dbg !9556
  %6 = sext i1 %5 to i32, !dbg !9557
  ret i32 %6, !dbg !9558
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9559 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9563, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.value(metadata i32 %1, metadata !9564, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.value(metadata i32 %2, metadata !9565, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.value(metadata i32* %3, metadata !9566, metadata !DIExpression()), !dbg !9567
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #28, !dbg !9568
  ret i32 %5, !dbg !9569
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9570 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9572, metadata !DIExpression()), !dbg !9576
  call void @llvm.dbg.value(metadata i32 %1, metadata !9573, metadata !DIExpression()), !dbg !9576
  call void @llvm.dbg.value(metadata i32 %2, metadata !9574, metadata !DIExpression()), !dbg !9576
  call void @llvm.dbg.value(metadata i32* %3, metadata !9575, metadata !DIExpression()), !dbg !9576
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !9577, !srcloc !9579
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #28, !dbg !9580
  ret i32 %5, !dbg !9581
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9582 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9584, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i32 %1, metadata !9585, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i32 %2, metadata !9586, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i32* %3, metadata !9587, metadata !DIExpression()), !dbg !9592
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9593
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9595
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9595
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9595
  br i1 %11, label %33, label %12, !dbg !9595

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9592
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9592
  call void @llvm.dbg.value(metadata i8* %14, metadata !9590, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i32 %13, metadata !9588, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i32 %1, metadata !9589, metadata !DIExpression()), !dbg !9592
  br label %15, !dbg !9596

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9598
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9592
  call void @llvm.dbg.value(metadata i8* %17, metadata !9590, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i32 %16, metadata !9589, metadata !DIExpression()), !dbg !9592
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9599
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9602
  call void @llvm.dbg.value(metadata i8* %19, metadata !9590, metadata !DIExpression()), !dbg !9592
  %20 = load i8, i8* %17, align 1, !dbg !9603
  %21 = zext i8 %20 to i32, !dbg !9604
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !9599
  %23 = icmp eq i32 %22, -1, !dbg !9605
  br i1 %23, label %30, label %24, !dbg !9606

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9607
  call void @llvm.dbg.value(metadata i32 %25, metadata !9589, metadata !DIExpression()), !dbg !9592
  %26 = icmp eq i32 %25, 0, !dbg !9608
  br i1 %26, label %27, label %15, !dbg !9609, !llvm.loop !9610

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9612
  call void @llvm.dbg.value(metadata i32 %28, metadata !9588, metadata !DIExpression()), !dbg !9592
  %29 = icmp eq i32 %28, 0, !dbg !9613
  br i1 %29, label %30, label %12, !dbg !9614, !llvm.loop !9615

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9592
  call void @llvm.dbg.value(metadata i32 %31, metadata !9588, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.label(metadata !9591), !dbg !9618
  %32 = sub i32 %2, %31, !dbg !9619
  br label %33, !dbg !9620

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9592
  ret i32 %34, !dbg !9621
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9622 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9626, metadata !DIExpression()), !dbg !9627
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #28, !dbg !9628
  %3 = icmp eq i32 %2, -1, !dbg !9630
  br i1 %3, label %8, label %4, !dbg !9631

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #28, !dbg !9632
  %6 = icmp eq i32 %5, -1, !dbg !9633
  %7 = sext i1 %6 to i32, !dbg !9632
  br label %8, !dbg !9634

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9627
  ret i32 %9, !dbg !9635
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9636 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9638, metadata !DIExpression()), !dbg !9639
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #28, !dbg !9640
  ret void, !dbg !9641
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9642 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9646, metadata !DIExpression()), !dbg !9652
  call void @llvm.dbg.value(metadata i32 %1, metadata !9647, metadata !DIExpression()), !dbg !9652
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9648, metadata !DIExpression()), !dbg !9652
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9653
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9653
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9653
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9649, metadata !DIExpression()), !dbg !9652
  call void @llvm.dbg.value(metadata i32 %0, metadata !9651, metadata !DIExpression()), !dbg !9652
  %7 = icmp slt i32 %0, %1, !dbg !9654
  br i1 %7, label %8, label %22, !dbg !9657

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9651, metadata !DIExpression()), !dbg !9652
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #28, !dbg !9658
  %11 = icmp eq i32 %10, 0, !dbg !9658
  br i1 %11, label %19, label %12, !dbg !9661

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #28, !dbg !9662
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9664
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9664
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9666
  br i1 %15, label %19, label %16, !dbg !9667

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9668
  %18 = load i8*, i8** %17, align 4, !dbg !9668
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !9669
  br label %19, !dbg !9670

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9671
  call void @llvm.dbg.value(metadata i32 %20, metadata !9651, metadata !DIExpression()), !dbg !9652
  %21 = icmp eq i32 %20, %1, !dbg !9654
  br i1 %21, label %22, label %8, !dbg !9657, !llvm.loop !9672

22:                                               ; preds = %19, %3
  ret void, !dbg !9674
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #7 !dbg !9675 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9677, metadata !DIExpression()), !dbg !9678
  %2 = shl nuw i32 1, %0, !dbg !9679
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #28, !dbg !9682
  ret i32 %3, !dbg !9683
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #18 !dbg !9684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9688, metadata !DIExpression()), !dbg !9689
  %2 = shl nuw i32 1, %0, !dbg !9690
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #28, !dbg !9693
  ret void, !dbg !9694
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9695 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9698, metadata !DIExpression()), !dbg !9699
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9700
  ret void, !dbg !9701
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #7 !dbg !9702 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9704, metadata !DIExpression()), !dbg !9705
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9706
  %3 = and i32 %2, %0, !dbg !9706
  %4 = icmp eq i32 %3, %0, !dbg !9707
  %5 = zext i1 %4 to i32, !dbg !9707
  ret i32 %5, !dbg !9708
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9709 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9711, metadata !DIExpression()), !dbg !9712
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #28, !dbg !9713
  ret void, !dbg !9714
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9715 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9717, metadata !DIExpression()), !dbg !9718
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #28, !dbg !9719
  ret void, !dbg !9720
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9721 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9723, metadata !DIExpression()), !dbg !9724
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #28, !dbg !9725
  ret void, !dbg !9726
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9727 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9729, metadata !DIExpression()), !dbg !9730
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #28, !dbg !9731
  ret void, !dbg !9732
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9733 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9735, metadata !DIExpression()), !dbg !9736
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #28, !dbg !9737
  ret void, !dbg !9738
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9739 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9741, metadata !DIExpression()), !dbg !9742
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #28, !dbg !9743
  ret void, !dbg !9744
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9745 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9747, metadata !DIExpression()), !dbg !9748
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #28, !dbg !9749
  ret void, !dbg !9750
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9751 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9753, metadata !DIExpression()), !dbg !9754
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #28, !dbg !9755
  ret void, !dbg !9756
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9757 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9759, metadata !DIExpression()), !dbg !9760
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #28, !dbg !9761
  ret void, !dbg !9762
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9763 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9765, metadata !DIExpression()), !dbg !9766
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #28, !dbg !9767
  ret void, !dbg !9768
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9769 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9771, metadata !DIExpression()), !dbg !9772
  tail call fastcc void @__stm32_exti_connect_irqs() #28, !dbg !9773
  ret i32 0, !dbg !9774
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !879 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !883, metadata !DIExpression()), !dbg !9775
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !9776
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !9778
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !9780
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !9782
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !9784
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !9786
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !9788
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !9790
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !9792
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !9794
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !9796
  ret void, !dbg !9798
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9799 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9801, metadata !DIExpression()), !dbg !9803
  call void @llvm.dbg.value(metadata i32 0, metadata !9802, metadata !DIExpression()), !dbg !9803
  call void @llvm.dbg.value(metadata i32 undef, metadata !9802, metadata !DIExpression()), !dbg !9803
  %2 = lshr i32 6684671, %0, !dbg !9804
  %3 = and i32 %2, 1, !dbg !9804
  %4 = or i32 %3, %0, !dbg !9806
  %5 = icmp eq i32 %4, 0, !dbg !9806
  br i1 %5, label %6, label %7, !dbg !9806

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 123) #27, !dbg !9807
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.139, i32 0, i32 0), i32 noundef 123) #27, !dbg !9807
  unreachable, !dbg !9807

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9812
  %9 = load i32, i32* %8, align 4, !dbg !9812
  call void @llvm.dbg.value(metadata i32 %9, metadata !9802, metadata !DIExpression()), !dbg !9803
  %10 = shl nuw i32 1, %0, !dbg !9813
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #28, !dbg !9814
  tail call void @arch_irq_enable(i32 noundef %9) #27, !dbg !9815
  ret void, !dbg !9816
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9817 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9819, metadata !DIExpression()), !dbg !9820
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9821
  %3 = or i32 %2, %0, !dbg !9821
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9821
  ret void, !dbg !9822
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #18 !dbg !9823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9825, metadata !DIExpression()), !dbg !9826
  %2 = icmp slt i32 %0, 32, !dbg !9827
  br i1 %2, label %3, label %5, !dbg !9829

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9830
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #28, !dbg !9832
  br label %5, !dbg !9833

5:                                                ; preds = %1, %3
  ret void, !dbg !9834
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9837, metadata !DIExpression()), !dbg !9838
  %2 = xor i32 %0, -1, !dbg !9839
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9839
  %4 = and i32 %3, %2, !dbg !9839
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9839
  ret void, !dbg !9840
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #18 !dbg !9841 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9845, metadata !DIExpression()), !dbg !9847
  call void @llvm.dbg.value(metadata i32 %1, metadata !9846, metadata !DIExpression()), !dbg !9847
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9848

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9849
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #28, !dbg !9851
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #28, !dbg !9852
  br label %11, !dbg !9853

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9854
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #28, !dbg !9855
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #28, !dbg !9856
  br label %11, !dbg !9857

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9858
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #28, !dbg !9859
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #28, !dbg !9860
  br label %11, !dbg !9861

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9862
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #28, !dbg !9863
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #28, !dbg !9864
  br label %11, !dbg !9865

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9866
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9867 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9869, metadata !DIExpression()), !dbg !9870
  %2 = xor i32 %0, -1, !dbg !9871
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9871
  %4 = and i32 %3, %2, !dbg !9871
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9871
  ret void, !dbg !9872
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9873 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9875, metadata !DIExpression()), !dbg !9876
  %2 = xor i32 %0, -1, !dbg !9877
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9877
  %4 = and i32 %3, %2, !dbg !9877
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9877
  ret void, !dbg !9878
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9879 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9881, metadata !DIExpression()), !dbg !9882
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9883
  %3 = or i32 %2, %0, !dbg !9883
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9883
  ret void, !dbg !9884
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #18 !dbg !9885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9887, metadata !DIExpression()), !dbg !9888
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9889
  %3 = or i32 %2, %0, !dbg !9889
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9889
  ret void, !dbg !9890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #14 !dbg !9891 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9895, metadata !DIExpression()), !dbg !9901
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9896, metadata !DIExpression()), !dbg !9901
  call void @llvm.dbg.value(metadata i8* %2, metadata !9897, metadata !DIExpression()), !dbg !9901
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !9898, metadata !DIExpression()), !dbg !9901
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9900, metadata !DIExpression()), !dbg !9901
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9902
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9902
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9904
  br i1 %6, label %7, label %9, !dbg !9905

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9906
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9907
  store i8* %2, i8** %8, align 4, !dbg !9908
  br label %9, !dbg !9909

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9901
  ret i32 %10, !dbg !9910
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #12 !dbg !9911 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9913, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_39, metadata !9914, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9915, metadata !DIExpression()), !dbg !9916
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9917
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9918
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9919
  store i8* null, i8** %3, align 4, !dbg !9920
  ret void, !dbg !9921
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #18 !dbg !9922 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9924, metadata !DIExpression()), !dbg !9929
  call void @llvm.dbg.value(metadata i8* %1, metadata !9925, metadata !DIExpression()), !dbg !9929
  call void @llvm.dbg.value(metadata i8* %1, metadata !9926, metadata !DIExpression()), !dbg !9929
  %3 = bitcast i8* %1 to i32*, !dbg !9930
  %4 = load i32, i32* %3, align 4, !dbg !9930
  %5 = add i32 %4, -169, !dbg !9930
  %6 = icmp ult i32 %5, -121, !dbg !9930
  br i1 %6, label %15, label %7, !dbg !9932

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9933
  %9 = inttoptr i32 %8 to i32*, !dbg !9934
  call void @llvm.dbg.value(metadata i32* %9, metadata !9927, metadata !DIExpression()), !dbg !9929
  %10 = load volatile i32, i32* %9, align 4, !dbg !9935
  call void @llvm.dbg.value(metadata i32 %10, metadata !9928, metadata !DIExpression()), !dbg !9929
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9936
  %12 = bitcast i8* %11 to i32*, !dbg !9936
  %13 = load i32, i32* %12, align 4, !dbg !9936
  %14 = or i32 %13, %10, !dbg !9937
  call void @llvm.dbg.value(metadata i32 %14, metadata !9928, metadata !DIExpression()), !dbg !9929
  store volatile i32 %14, i32* %9, align 4, !dbg !9938
  br label %15, !dbg !9939

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9929
  ret i32 %16, !dbg !9940
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #18 !dbg !9941 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9943, metadata !DIExpression()), !dbg !9948
  call void @llvm.dbg.value(metadata i8* %1, metadata !9944, metadata !DIExpression()), !dbg !9948
  call void @llvm.dbg.value(metadata i8* %1, metadata !9945, metadata !DIExpression()), !dbg !9948
  %3 = bitcast i8* %1 to i32*, !dbg !9949
  %4 = load i32, i32* %3, align 4, !dbg !9949
  %5 = add i32 %4, -169, !dbg !9949
  %6 = icmp ult i32 %5, -121, !dbg !9949
  br i1 %6, label %16, label %7, !dbg !9951

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9952
  %9 = inttoptr i32 %8 to i32*, !dbg !9953
  call void @llvm.dbg.value(metadata i32* %9, metadata !9946, metadata !DIExpression()), !dbg !9948
  %10 = load volatile i32, i32* %9, align 4, !dbg !9954
  call void @llvm.dbg.value(metadata i32 %10, metadata !9947, metadata !DIExpression()), !dbg !9948
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9955
  %12 = bitcast i8* %11 to i32*, !dbg !9955
  %13 = load i32, i32* %12, align 4, !dbg !9955
  %14 = xor i32 %13, -1, !dbg !9956
  %15 = and i32 %10, %14, !dbg !9957
  call void @llvm.dbg.value(metadata i32 %15, metadata !9947, metadata !DIExpression()), !dbg !9948
  store volatile i32 %15, i32* %9, align 4, !dbg !9958
  br label %16, !dbg !9959

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9948
  ret i32 %17, !dbg !9960
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9961 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9963, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata i8* %1, metadata !9964, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata i32* %2, metadata !9965, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata i8* %1, metadata !9966, metadata !DIExpression()), !dbg !9971
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9972
  call void @llvm.dbg.value(metadata i32 %4, metadata !9967, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata i32 undef, metadata !9968, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata i32 undef, metadata !9969, metadata !DIExpression()), !dbg !9971
  call void @llvm.dbg.value(metadata i32 %4, metadata !9970, metadata !DIExpression()), !dbg !9971
  %5 = bitcast i8* %1 to i32*, !dbg !9973
  %6 = load i32, i32* %5, align 4, !dbg !9973
  switch i32 %6, label %18 [
    i32 48, label %16
    i32 52, label %16
    i32 56, label %16
    i32 64, label %7
    i32 68, label %9
    i32 168, label %16
    i32 6, label %16
    i32 1, label %11
    i32 4, label %14
    i32 5, label %15
  ], !dbg !9974

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #28, !dbg !9975
  call void @llvm.dbg.value(metadata i32 %8, metadata !9968, metadata !DIExpression()), !dbg !9971
  br label %16, !dbg !9976

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #28, !dbg !9978
  call void @llvm.dbg.value(metadata i32 %10, metadata !9969, metadata !DIExpression()), !dbg !9971
  br label %16, !dbg !9979

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #27, !dbg !9980
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12) #28, !dbg !9981
  br label %16, !dbg !9982

14:                                               ; preds = %3
  br label %16, !dbg !9983

15:                                               ; preds = %3
  br label %16, !dbg !9984

16:                                               ; preds = %3, %3, %3, %3, %3, %15, %14, %11, %9, %7
  %17 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ 0, %14 ], [ 32000, %15 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %17, i32* %2, align 4, !dbg !9985
  br label %18, !dbg !9986

18:                                               ; preds = %16, %3
  %19 = phi i32 [ -134, %3 ], [ 0, %16 ], !dbg !9971
  ret i32 %19, !dbg !9986
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #18 !dbg !9987 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9989, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.value(metadata i8* %1, metadata !9990, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.value(metadata i8* %2, metadata !9991, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.value(metadata i8* %1, metadata !9992, metadata !DIExpression()), !dbg !9997
  %4 = bitcast i8* %1 to i32*, !dbg !9998
  %5 = load i32, i32* %4, align 4, !dbg !9998
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #28, !dbg !9999
  call void @llvm.dbg.value(metadata i32 %6, metadata !9996, metadata !DIExpression()), !dbg !9997
  %7 = icmp slt i32 %6, 0, !dbg !10000
  br i1 %7, label %22, label %8, !dbg !10002

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9992, metadata !DIExpression()), !dbg !9997
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10003
  %10 = bitcast i8* %9 to i32*, !dbg !10003
  %11 = load i32, i32* %10, align 4, !dbg !10003
  %12 = lshr i32 %11, 16, !dbg !10003
  %13 = and i32 %12, 7, !dbg !10003
  %14 = lshr i32 %11, 8, !dbg !10004
  %15 = and i32 %14, 31, !dbg !10004
  %16 = shl i32 %13, %15, !dbg !10005
  call void @llvm.dbg.value(metadata i32 %16, metadata !9995, metadata !DIExpression()), !dbg !9997
  %17 = and i32 %11, 255, !dbg !10006
  %18 = or i32 %17, 1073887232, !dbg !10007
  %19 = inttoptr i32 %18 to i32*, !dbg !10008
  call void @llvm.dbg.value(metadata i32* %19, metadata !9993, metadata !DIExpression()), !dbg !9997
  %20 = load volatile i32, i32* %19, align 4, !dbg !10009
  call void @llvm.dbg.value(metadata i32 %20, metadata !9994, metadata !DIExpression()), !dbg !9997
  %21 = or i32 %16, %20, !dbg !10010
  call void @llvm.dbg.value(metadata i32 %21, metadata !9994, metadata !DIExpression()), !dbg !9997
  store volatile i32 %21, i32* %19, align 4, !dbg !10011
  br label %22, !dbg !10012

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9997
  ret i32 %23, !dbg !10013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #5 !dbg !10014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10018, metadata !DIExpression()), !dbg !10020
  call void @llvm.dbg.value(metadata i32 0, metadata !10019, metadata !DIExpression()), !dbg !10020
  %2 = add i32 %0, -1, !dbg !10021
  %3 = icmp ult i32 %2, 6, !dbg !10021
  br i1 %3, label %4, label %7, !dbg !10021

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10021
  %6 = load i32, i32* %5, align 4, !dbg !10021
  call void @llvm.dbg.value(metadata i32 %6, metadata !10019, metadata !DIExpression()), !dbg !10020
  br label %7, !dbg !10022

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10020
  ret i32 %8, !dbg !10023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !10024 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10028, metadata !DIExpression()), !dbg !10030
  call void @llvm.dbg.value(metadata i32 %1, metadata !10029, metadata !DIExpression()), !dbg !10030
  %3 = udiv i32 %0, %1, !dbg !10031
  ret i32 %3, !dbg !10032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0) unnamed_addr #5 !dbg !10033 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10037, metadata !DIExpression()), !dbg !10041
  call void @llvm.dbg.value(metadata i32 16, metadata !10038, metadata !DIExpression()), !dbg !10041
  call void @llvm.dbg.value(metadata i32 336, metadata !10039, metadata !DIExpression()), !dbg !10041
  call void @llvm.dbg.value(metadata i32 4, metadata !10040, metadata !DIExpression()), !dbg !10041
  %2 = mul i32 %0, 336, !dbg !10042
  %3 = lshr i32 %2, 6, !dbg !10043
  ret i32 %3, !dbg !10044
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10045 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10047, metadata !DIExpression()), !dbg !10050
  tail call void @config_enable_default_clocks() #27, !dbg !10051
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !10052
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #28, !dbg !10052
  %4 = lshr i32 %3, 4, !dbg !10052
  %5 = and i32 %4, 15, !dbg !10052
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10052
  %7 = load i8, i8* %6, align 1, !dbg !10052
  %8 = zext i8 %7 to i32, !dbg !10052
  %9 = lshr i32 %2, %8, !dbg !10052
  call void @llvm.dbg.value(metadata i32 %9, metadata !10048, metadata !DIExpression()), !dbg !10050
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !10049, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10050
  %10 = icmp ult i32 %9, 84000000, !dbg !10053
  br i1 %10, label %11, label %13, !dbg !10055

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !10056
  br label %13, !dbg !10058

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #28, !dbg !10059
  tail call fastcc void @set_up_plls() #28, !dbg !10060
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #28, !dbg !10061
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #28, !dbg !10064
  br label %14, !dbg !10065

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #28, !dbg !10066
  %16 = icmp eq i32 %15, 8, !dbg !10067
  br i1 %16, label %17, label %14, !dbg !10065, !llvm.loop !10068

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !10070
  br i1 %18, label %19, label %21, !dbg !10072

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !10073
  br label %21, !dbg !10075

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !10076
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #28, !dbg !10077
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #28, !dbg !10078
  ret i32 0, !dbg !10079
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #7 !dbg !10080 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10082
  %2 = and i32 %1, 240, !dbg !10082
  ret i32 %2, !dbg !10083
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #18 !dbg !10084 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #28, !dbg !10085
  %2 = icmp eq i32 %1, 1, !dbg !10089
  br i1 %2, label %7, label %3, !dbg !10090

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #28, !dbg !10091
  br label %4, !dbg !10093

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #28, !dbg !10094
  %6 = icmp eq i32 %5, 1, !dbg !10095
  br i1 %6, label %7, label %4, !dbg !10093, !llvm.loop !10096

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #28, !dbg !10098
  br label %8, !dbg !10101

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #28, !dbg !10102
  %10 = icmp eq i32 %9, 1, !dbg !10103
  br i1 %10, label %11, label %8, !dbg !10101, !llvm.loop !10104

11:                                               ; preds = %8
  ret void, !dbg !10106
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10107 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #28, !dbg !10108
  %2 = icmp eq i32 %1, 8, !dbg !10110
  br i1 %2, label %3, label %4, !dbg !10111

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #28, !dbg !10112
  tail call fastcc void @stm32_clock_switch_to_hsi() #28, !dbg !10114
  br label %4, !dbg !10115

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #28, !dbg !10116
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10117
  %6 = and i32 %5, -196609, !dbg !10117
  %7 = or i32 %6, 65536, !dbg !10117
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10117
  tail call void @config_pll_sysclock() #27, !dbg !10118
  tail call fastcc void @LL_RCC_PLL_Enable() #28, !dbg !10119
  br label %8, !dbg !10120

8:                                                ; preds = %8, %4
  %9 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #28, !dbg !10121
  %10 = icmp eq i32 %9, 1, !dbg !10122
  br i1 %10, label %11, label %8, !dbg !10120, !llvm.loop !10123

11:                                               ; preds = %8
  ret void, !dbg !10125
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #18 !dbg !10126 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10128, metadata !DIExpression()), !dbg !10129
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10130
  %2 = and i32 %1, -241, !dbg !10130
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10130
  ret void, !dbg !10131
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #18 !dbg !10132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10134, metadata !DIExpression()), !dbg !10135
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10136
  %3 = and i32 %2, -4, !dbg !10136
  %4 = or i32 %3, %0, !dbg !10136
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10136
  ret void, !dbg !10137
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #7 !dbg !10138 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10139
  %2 = and i32 %1, 12, !dbg !10139
  ret i32 %2, !dbg !10140
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #18 !dbg !10141 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !10143, metadata !DIExpression()), !dbg !10144
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10145
  %2 = and i32 %1, -7169, !dbg !10145
  %3 = or i32 %2, 4096, !dbg !10145
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10145
  ret void, !dbg !10146
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #18 !dbg !10147 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10149, metadata !DIExpression()), !dbg !10150
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10151
  %2 = and i32 %1, -57345, !dbg !10151
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10151
  ret void, !dbg !10152
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #18 !dbg !10153 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #28, !dbg !10154
  %2 = icmp eq i32 %1, 1, !dbg !10156
  br i1 %2, label %7, label %3, !dbg !10157

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #28, !dbg !10158
  br label %4, !dbg !10160

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #28, !dbg !10161
  %6 = icmp eq i32 %5, 1, !dbg !10162
  br i1 %6, label %7, label %4, !dbg !10160, !llvm.loop !10163

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #28, !dbg !10165
  br label %8, !dbg !10166

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #28, !dbg !10167
  %10 = icmp eq i32 %9, 0, !dbg !10168
  br i1 %10, label %11, label %8, !dbg !10166, !llvm.loop !10169

11:                                               ; preds = %8
  ret void, !dbg !10171
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #18 !dbg !10172 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10173
  %2 = and i32 %1, -16777217, !dbg !10173
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10173
  ret void, !dbg !10174
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #18 !dbg !10175 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10176
  %2 = or i32 %1, 16777216, !dbg !10176
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10176
  ret void, !dbg !10177
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #7 !dbg !10178 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10179
  %2 = lshr i32 %1, 25, !dbg !10180
  %3 = and i32 %2, 1, !dbg !10180
  ret i32 %3, !dbg !10181
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #7 !dbg !10182 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10183
  %2 = lshr i32 %1, 1, !dbg !10184
  %3 = and i32 %2, 1, !dbg !10184
  ret i32 %3, !dbg !10185
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #18 !dbg !10186 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10187
  %2 = or i32 %1, 1, !dbg !10187
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10187
  ret void, !dbg !10188
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #18 !dbg !10189 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10190
  %2 = or i32 %1, 1, !dbg !10190
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10190
  ret void, !dbg !10191
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #7 !dbg !10192 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10193
  %2 = lshr i32 %1, 1, !dbg !10194
  %3 = and i32 %2, 1, !dbg !10194
  ret i32 %3, !dbg !10195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #5 !dbg !10196 {
  ret i32 16000000, !dbg !10198
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #18 !dbg !10201 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #28, !dbg !10202
  ret void, !dbg !10203
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #18 !dbg !10204 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10208, metadata !DIExpression()), !dbg !10212
  call void @llvm.dbg.value(metadata i32 16, metadata !10209, metadata !DIExpression()), !dbg !10212
  call void @llvm.dbg.value(metadata i32 336, metadata !10210, metadata !DIExpression()), !dbg !10212
  call void @llvm.dbg.value(metadata i32 65536, metadata !10211, metadata !DIExpression()), !dbg !10212
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10213
  %2 = and i32 %1, -4227072, !dbg !10213
  %3 = or i32 %2, 21520, !dbg !10213
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10213
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10214
  %5 = and i32 %4, -196609, !dbg !10214
  %6 = or i32 %5, 65536, !dbg !10214
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10214
  ret void, !dbg !10215
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #21 !dbg !10216 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #28, !dbg !10217
  ret void, !dbg !10218
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #21 !dbg !10219 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10222, metadata !DIExpression()), !dbg !10224
  %2 = bitcast i32* %1 to i8*, !dbg !10225
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10225
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10223, metadata !DIExpression()), !dbg !10226
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10227
  %4 = or i32 %3, 268435456, !dbg !10227
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10227
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10228
  %6 = and i32 %5, 268435456, !dbg !10228
  store volatile i32 %6, i32* %1, align 4, !dbg !10229
  %7 = load volatile i32, i32* %1, align 4, !dbg !10230
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10231
  ret void, !dbg !10231
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10232 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10234, metadata !DIExpression()), !dbg !10235
  %2 = tail call fastcc zeroext i1 @device_is_ready() #28, !dbg !10236
  br i1 %2, label %3, label %4, !dbg !10238

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #28, !dbg !10239
  br label %4, !dbg !10240

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10235
  ret i32 %5, !dbg !10241
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10242 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10247, metadata !DIExpression()), !dbg !10248
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !10249, !srcloc !10251
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #28, !dbg !10252
  ret i1 %1, !dbg !10253
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10254 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10255
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10256
  ret void, !dbg !10257
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10258 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10260, metadata !DIExpression()), !dbg !10261
  %2 = icmp eq i32 %0, 10, !dbg !10262
  br i1 %2, label %3, label %4, !dbg !10264

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #28, !dbg !10265
  br label %4, !dbg !10267

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10268
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #28, !dbg !10269
  ret i32 %0, !dbg !10270
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10271 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10274, metadata !DIExpression()), !dbg !10276
  call void @llvm.dbg.value(metadata i8 %0, metadata !10275, metadata !DIExpression()), !dbg !10276
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !10277, !srcloc !10279
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #28, !dbg !10280
  ret void, !dbg !10281
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10282 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10284, metadata !DIExpression()), !dbg !10287
  call void @llvm.dbg.value(metadata i8 %0, metadata !10285, metadata !DIExpression()), !dbg !10287
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_45, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10288
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10286, metadata !DIExpression()), !dbg !10287
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10289
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10289
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_45, i8 noundef zeroext %0) #27, !dbg !10290
  ret void, !dbg !10291
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10292 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_45, metadata !10294, metadata !DIExpression()), !dbg !10295
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_45) #27, !dbg !10296
  ret i1 %1, !dbg !10297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #5 !dbg !10298 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10347, metadata !DIExpression()), !dbg !10350
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10348, metadata !DIExpression()), !dbg !10350
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10349, metadata !DIExpression()), !dbg !10350
  ret void, !dbg !10351
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10352 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10354, metadata !DIExpression()), !dbg !10359
  call void @llvm.dbg.value(metadata i8 %1, metadata !10355, metadata !DIExpression()), !dbg !10359
  call void @llvm.dbg.value(metadata i32 %2, metadata !10356, metadata !DIExpression()), !dbg !10359
  %5 = bitcast i32* %4 to i8*, !dbg !10360
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !10360
  call void @llvm.dbg.value(metadata i32* %4, metadata !10358, metadata !DIExpression(DW_OP_deref)), !dbg !10359
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #28, !dbg !10361
  call void @llvm.dbg.value(metadata i32 %6, metadata !10357, metadata !DIExpression()), !dbg !10359
  %7 = icmp eq i32 %6, 0, !dbg !10362
  br i1 %7, label %8, label %31, !dbg !10364

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10357, metadata !DIExpression()), !dbg !10359
  %9 = and i32 %2, 131072, !dbg !10365
  %10 = icmp eq i32 %9, 0, !dbg !10367
  br i1 %10, label %28, label %11, !dbg !10368

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10369
  %13 = icmp eq i32 %12, 0, !dbg !10372
  br i1 %13, label %18, label %14, !dbg !10373

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10374
  %16 = shl nuw i32 1, %15, !dbg !10374
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #28, !dbg !10376
  br label %25, !dbg !10377

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10378
  %20 = icmp eq i32 %19, 0, !dbg !10380
  %21 = zext i8 %1 to i32, !dbg !10359
  br i1 %20, label %25, label %22, !dbg !10381

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10382
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #28, !dbg !10384
  br label %25, !dbg !10385

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10386
  %27 = load i32, i32* %4, align 4, !dbg !10387
  call void @llvm.dbg.value(metadata i32 %30, metadata !10358, metadata !DIExpression()), !dbg !10359
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #28, !dbg !10388
  br label %31, !dbg !10389

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10386
  %30 = load i32, i32* %4, align 4, !dbg !10387
  call void @llvm.dbg.value(metadata i32 %30, metadata !10358, metadata !DIExpression()), !dbg !10359
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #28, !dbg !10388
  call void @llvm.dbg.value(metadata i32 0, metadata !10357, metadata !DIExpression()), !dbg !10359
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !10390
  ret i32 %6, !dbg !10390
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #7 !dbg !10391 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10395, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.value(metadata i32* %1, metadata !10396, metadata !DIExpression()), !dbg !10400
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10401
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10401
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10401
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10397, metadata !DIExpression()), !dbg !10400
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10402
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10402
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10402
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10399, metadata !DIExpression()), !dbg !10400
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #28, !dbg !10403
  store i32 %9, i32* %1, align 4, !dbg !10404
  ret i32 0, !dbg !10405
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #18 !dbg !10406 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10408, metadata !DIExpression()), !dbg !10414
  call void @llvm.dbg.value(metadata i32 %1, metadata !10409, metadata !DIExpression()), !dbg !10414
  call void @llvm.dbg.value(metadata i32 %2, metadata !10410, metadata !DIExpression()), !dbg !10414
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10415
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10415
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10415
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10411, metadata !DIExpression()), !dbg !10414
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10416
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10416
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10416
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10412, metadata !DIExpression()), !dbg !10414
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #28, !dbg !10417
  call void @llvm.dbg.value(metadata i32 %10, metadata !10413, metadata !DIExpression()), !dbg !10414
  %11 = xor i32 %1, -1, !dbg !10418
  %12 = and i32 %10, %11, !dbg !10419
  %13 = and i32 %2, %1, !dbg !10420
  %14 = or i32 %12, %13, !dbg !10421
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #28, !dbg !10422
  ret i32 0, !dbg !10423
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #18 !dbg !10424 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10426, metadata !DIExpression()), !dbg !10430
  call void @llvm.dbg.value(metadata i32 %1, metadata !10427, metadata !DIExpression()), !dbg !10430
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10431
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10431
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10431
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10428, metadata !DIExpression()), !dbg !10430
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10432
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10432
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10432
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10429, metadata !DIExpression()), !dbg !10430
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10433
  store volatile i32 %1, i32* %9, align 4, !dbg !10433
  ret i32 0, !dbg !10434
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #18 !dbg !10435 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10437, metadata !DIExpression()), !dbg !10441
  call void @llvm.dbg.value(metadata i32 %1, metadata !10438, metadata !DIExpression()), !dbg !10441
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10442
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10442
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10442
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10439, metadata !DIExpression()), !dbg !10441
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10443
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10443
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10443
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10440, metadata !DIExpression()), !dbg !10441
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #28, !dbg !10444
  ret i32 0, !dbg !10445
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #18 !dbg !10446 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10448, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.value(metadata i32 %1, metadata !10449, metadata !DIExpression()), !dbg !10452
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10453
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10453
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10453
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10450, metadata !DIExpression()), !dbg !10452
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10454
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10454
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10454
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10451, metadata !DIExpression()), !dbg !10452
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10455
  %10 = load volatile i32, i32* %9, align 4, !dbg !10455
  %11 = xor i32 %10, %1, !dbg !10455
  store volatile i32 %11, i32* %9, align 4, !dbg !10455
  ret i32 0, !dbg !10456
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10457 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10459, metadata !DIExpression()), !dbg !10469
  call void @llvm.dbg.value(metadata i8 %1, metadata !10460, metadata !DIExpression()), !dbg !10469
  call void @llvm.dbg.value(metadata i32 %2, metadata !10461, metadata !DIExpression()), !dbg !10469
  call void @llvm.dbg.value(metadata i32 %3, metadata !10462, metadata !DIExpression()), !dbg !10469
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10470
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10470
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10470
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10463, metadata !DIExpression()), !dbg !10469
  call void @llvm.dbg.value(metadata i8* undef, metadata !10464, metadata !DIExpression()), !dbg !10469
  call void @llvm.dbg.value(metadata i32 0, metadata !10466, metadata !DIExpression()), !dbg !10469
  call void @llvm.dbg.value(metadata i32 0, metadata !10467, metadata !DIExpression()), !dbg !10469
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10471

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10472
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #28, !dbg !10476
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10477
  %12 = load i32, i32* %11, align 4, !dbg !10477
  %13 = icmp eq i32 %10, %12, !dbg !10478
  br i1 %13, label %14, label %29, !dbg !10479

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !10480
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !10482
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !10483
  br label %29, !dbg !10484

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10485
  %17 = load i8*, i8** %16, align 4, !dbg !10485
  call void @llvm.dbg.value(metadata i8* %17, metadata !10464, metadata !DIExpression()), !dbg !10469
  %18 = zext i8 %1 to i32, !dbg !10486
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !10488
  %20 = icmp eq i32 %19, 0, !dbg !10489
  br i1 %20, label %21, label %29, !dbg !10490

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10491
  %23 = load i32, i32* %22, align 4, !dbg !10491
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #28, !dbg !10492
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10493

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10466, metadata !DIExpression()), !dbg !10469
  br label %27, !dbg !10494

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10466, metadata !DIExpression()), !dbg !10469
  br label %27, !dbg !10496

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10466, metadata !DIExpression()), !dbg !10469
  br label %27, !dbg !10497

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10469
  call void @llvm.dbg.value(metadata i32 %28, metadata !10466, metadata !DIExpression()), !dbg !10469
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !10498
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !10499
  br label %29, !dbg !10499

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10469
  call void @llvm.dbg.value(metadata i32 %30, metadata !10467, metadata !DIExpression()), !dbg !10469
  call void @llvm.dbg.label(metadata !10468), !dbg !10500
  ret i32 %30, !dbg !10501
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !10502 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10504, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10505, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata i1 %2, metadata !10506, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10508
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10509
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10509
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10509
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10507, metadata !DIExpression()), !dbg !10508
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10510
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #28, !dbg !10511
  ret i32 %8, !dbg !10512
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !10513 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10519, metadata !DIExpression()), !dbg !10522
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10520, metadata !DIExpression()), !dbg !10522
  call void @llvm.dbg.value(metadata i1 %2, metadata !10521, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10522
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !10523
  br i1 %4, label %5, label %6, !dbg !10526

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 42) #27, !dbg !10527
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.153, i32 0, i32 0)) #27, !dbg !10527
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 42) #27, !dbg !10527
  unreachable, !dbg !10527

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !10529
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !10529
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !10529
  br i1 %9, label %10, label %11, !dbg !10532

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 43) #27, !dbg !10533
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.155, i32 0, i32 0)) #27, !dbg !10533
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 43) #27, !dbg !10533
  unreachable, !dbg !10533

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #28, !dbg !10535
  br i1 %12, label %18, label %13, !dbg !10537

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10538
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #28, !dbg !10541
  %16 = or i1 %15, %2, !dbg !10542
  %17 = select i1 %16, i32 0, i32 -22, !dbg !10542
  br i1 %2, label %19, label %21, !dbg !10542

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !10543

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10544
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #28, !dbg !10547
  br label %21, !dbg !10548

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !10522
  ret i32 %22, !dbg !10549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10550 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10554, metadata !DIExpression()), !dbg !10555
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10556
  %3 = icmp eq %struct._snode* %2, null, !dbg !10556
  ret i1 %3, !dbg !10556
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #17 !dbg !10557 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10561, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10562, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10563, metadata !DIExpression()), !dbg !10565
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10566
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10564, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10563, metadata !DIExpression()), !dbg !10565
  %4 = icmp eq %struct._snode* %3, null, !dbg !10568
  br i1 %4, label %15, label %5, !dbg !10566

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10564, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10563, metadata !DIExpression()), !dbg !10565
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10570
  br i1 %6, label %9, label %11, !dbg !10573

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10564, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10563, metadata !DIExpression()), !dbg !10565
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10570
  br i1 %8, label %9, label %11, !dbg !10573, !llvm.loop !10574

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #28, !dbg !10575
  br label %15, !dbg !10575

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10564, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10563, metadata !DIExpression()), !dbg !10565
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #28, !dbg !10568
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10564, metadata !DIExpression()), !dbg !10565
  %14 = icmp eq %struct._snode* %13, null, !dbg !10568
  br i1 %14, label %15, label %7, !dbg !10566, !llvm.loop !10574

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10577
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !10578 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10582, metadata !DIExpression()), !dbg !10584
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10583, metadata !DIExpression()), !dbg !10584
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10585
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #28, !dbg !10585
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #28, !dbg !10585
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #28, !dbg !10586
  %5 = icmp eq %struct._snode* %4, null, !dbg !10586
  br i1 %5, label %6, label %8, !dbg !10585

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10588
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #28, !dbg !10588
  br label %8, !dbg !10588

8:                                                ; preds = %6, %2
  ret void, !dbg !10585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10590 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10594, metadata !DIExpression()), !dbg !10595
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10596
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10596
  ret %struct._snode* %3, !dbg !10597
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !10598 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10602, metadata !DIExpression()), !dbg !10604
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10603, metadata !DIExpression()), !dbg !10604
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10605
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10606
  ret void, !dbg !10607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !10608 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10610, metadata !DIExpression()), !dbg !10612
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10611, metadata !DIExpression()), !dbg !10612
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10613
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10614
  ret void, !dbg !10615
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10616 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10618, metadata !DIExpression()), !dbg !10619
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10620
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10620
  ret %struct._snode* %3, !dbg !10621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !10622 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10624, metadata !DIExpression()), !dbg !10626
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10625, metadata !DIExpression()), !dbg !10626
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10627
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10628
  ret void, !dbg !10629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #14 !dbg !10630 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10634, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10635, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10636, metadata !DIExpression()), !dbg !10637
  %4 = icmp eq %struct._snode* %1, null, !dbg !10638
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #28, !dbg !10640
  br i1 %4, label %6, label %11, !dbg !10641

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #28, !dbg !10642
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #28, !dbg !10644
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10644
  br i1 %8, label %9, label %15, !dbg !10642

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10646
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #28, !dbg !10646
  br label %15, !dbg !10646

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #28, !dbg !10648
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #28, !dbg !10650
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10650
  br i1 %13, label %14, label %15, !dbg !10648

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #28, !dbg !10652
  br label %15, !dbg !10652

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #28, !dbg !10641
  ret void, !dbg !10641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #13 !dbg !10654 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10658, metadata !DIExpression()), !dbg !10659
  %2 = icmp eq %struct._snode* %0, null, !dbg !10660
  br i1 %2, label %5, label %3, !dbg !10660

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #28, !dbg !10660
  br label %5, !dbg !10660

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10660
  ret %struct._snode* %6, !dbg !10660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10661 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10663, metadata !DIExpression()), !dbg !10664
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #28, !dbg !10665
  ret %struct._snode* %2, !dbg !10665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !10666 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10668, metadata !DIExpression()), !dbg !10669
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10670
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10670
  ret %struct._snode* %3, !dbg !10671
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10672 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10674, metadata !DIExpression()), !dbg !10677
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #28, !dbg !10678, !range !10679
  call void @llvm.dbg.value(metadata i32 %2, metadata !10675, metadata !DIExpression()), !dbg !10677
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #28, !dbg !10680
  call void @llvm.dbg.value(metadata i32 %3, metadata !10676, metadata !DIExpression()), !dbg !10677
  ret i32 %3, !dbg !10681
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10684, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.value(metadata i8* %1, metadata !10685, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.value(metadata i8* %1, metadata !10686, metadata !DIExpression()), !dbg !10687
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10688
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10688
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10689
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10689
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10689
  %8 = shl nuw i32 1, %0, !dbg !10690
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #28, !dbg !10691
  ret void, !dbg !10692
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10693 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10697, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata i32 %1, metadata !10698, metadata !DIExpression()), !dbg !10703
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10699, metadata !DIExpression()), !dbg !10703
  %4 = bitcast i64* %3 to i8*, !dbg !10704
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #26, !dbg !10704
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10701, metadata !DIExpression()), !dbg !10703
  store i64 70368744177732, i64* %3, align 8, !dbg !10705
  call void @llvm.dbg.value(metadata i64* %3, metadata !10701, metadata !DIExpression(DW_OP_deref)), !dbg !10703
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #28, !dbg !10706
  call void @llvm.dbg.value(metadata i32 %5, metadata !10702, metadata !DIExpression()), !dbg !10703
  %6 = icmp eq i32 %5, 0, !dbg !10707
  br i1 %6, label %7, label %8, !dbg !10709

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #28, !dbg !10710
  br label %8, !dbg !10711

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #26, !dbg !10712
  ret void, !dbg !10712
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10713 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10715, metadata !DIExpression()), !dbg !10718
  call void @llvm.dbg.value(metadata i8* %0, metadata !10716, metadata !DIExpression()), !dbg !10718
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10719
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10717, metadata !DIExpression()), !dbg !10718
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10720
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10720
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #27, !dbg !10721
  ret i32 %5, !dbg !10722
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10723 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10725, metadata !DIExpression()), !dbg !10728
  call void @llvm.dbg.value(metadata i32 %1, metadata !10726, metadata !DIExpression()), !dbg !10728
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #28, !dbg !10729
  call void @llvm.dbg.value(metadata i32 %3, metadata !10727, metadata !DIExpression()), !dbg !10728
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #28, !dbg !10730
  ret void, !dbg !10731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #5 !dbg !10732 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10736, metadata !DIExpression()), !dbg !10737
  %2 = sdiv i32 %0, 4, !dbg !10738
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10739
  %6 = add nsw i32 %5, 16, !dbg !10740
  %7 = shl i32 15, %6, !dbg !10741
  %8 = or i32 %7, %2, !dbg !10742
  ret i32 %8, !dbg !10743
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10744 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10748, metadata !DIExpression()), !dbg !10750
  call void @llvm.dbg.value(metadata i32 %1, metadata !10749, metadata !DIExpression()), !dbg !10750
  %3 = and i32 %1, 255, !dbg !10751
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10751
  %5 = load volatile i32, i32* %4, align 4, !dbg !10751
  %6 = lshr i32 %1, 16, !dbg !10751
  %7 = xor i32 %6, -1, !dbg !10751
  %8 = and i32 %5, %7, !dbg !10751
  call void @llvm.dbg.value(metadata i32 %6, metadata !10752, metadata !DIExpression()) #26, !dbg !10756
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #31, !dbg !10758, !srcloc !10759
  call void @llvm.dbg.value(metadata i32 %9, metadata !10755, metadata !DIExpression()) #26, !dbg !10756
  call void @llvm.dbg.value(metadata i32 %9, metadata !10760, metadata !DIExpression()) #26, !dbg !10765
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #26, !dbg !10767, !range !5383
  %11 = shl i32 %0, %10, !dbg !10751
  %12 = or i32 %11, %8, !dbg !10751
  store volatile i32 %12, i32* %4, align 4, !dbg !10751
  ret void, !dbg !10768
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10769 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10773, metadata !DIExpression()), !dbg !10778
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10774, metadata !DIExpression()), !dbg !10778
  call void @llvm.dbg.value(metadata i32 %2, metadata !10775, metadata !DIExpression()), !dbg !10778
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #28, !dbg !10779
  %5 = icmp eq %struct._snode* %4, null, !dbg !10779
  br i1 %5, label %24, label %6, !dbg !10779

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #28, !dbg !10781
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10777, metadata !DIExpression()), !dbg !10778
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10776, metadata !DIExpression()), !dbg !10778
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10782
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10782
  %12 = load i32, i32* %11, align 4, !dbg !10782
  %13 = and i32 %12, %2, !dbg !10786
  %14 = icmp eq i32 %13, 0, !dbg !10786
  br i1 %14, label %22, label %15, !dbg !10787

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10788
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10788
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10788
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10788
  br i1 %19, label %20, label %21, !dbg !10792

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 77) #27, !dbg !10793
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.155, i32 0, i32 0)) #27, !dbg !10793
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.152, i32 0, i32 0), i32 noundef 77) #27, !dbg !10793
  unreachable, !dbg !10793

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #27, !dbg !10795
  br label %22, !dbg !10796

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10776, metadata !DIExpression()), !dbg !10778
  %23 = icmp eq %struct._snode* %8, null, !dbg !10797
  br i1 %23, label %24, label %6, !dbg !10797

24:                                               ; preds = %22, %3
  ret void, !dbg !10798
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10799 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10801, metadata !DIExpression()), !dbg !10802
  %2 = and i32 %0, 255, !dbg !10803
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10803
  %4 = load volatile i32, i32* %3, align 4, !dbg !10803
  %5 = lshr i32 %0, 16, !dbg !10803
  %6 = and i32 %4, %5, !dbg !10803
  call void @llvm.dbg.value(metadata i32 %5, metadata !10752, metadata !DIExpression()) #26, !dbg !10804
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #31, !dbg !10806, !srcloc !10759
  call void @llvm.dbg.value(metadata i32 %7, metadata !10755, metadata !DIExpression()) #26, !dbg !10804
  call void @llvm.dbg.value(metadata i32 %7, metadata !10760, metadata !DIExpression()) #26, !dbg !10807
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #26, !dbg !10809, !range !5383
  %9 = lshr i32 %6, %8, !dbg !10810
  ret i32 %9, !dbg !10811
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !10812 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10817, metadata !DIExpression()), !dbg !10819
  call void @llvm.dbg.value(metadata i32 %1, metadata !10818, metadata !DIExpression()), !dbg !10819
  %3 = shl i32 %1, 16, !dbg !10820
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10820
  store volatile i32 %3, i32* %4, align 4, !dbg !10820
  ret void, !dbg !10821
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #7 !dbg !10822 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10826, metadata !DIExpression()), !dbg !10827
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10828
  %3 = load volatile i32, i32* %2, align 4, !dbg !10828
  ret i32 %3, !dbg !10829
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !10830 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10832, metadata !DIExpression()), !dbg !10834
  call void @llvm.dbg.value(metadata i32 %1, metadata !10833, metadata !DIExpression()), !dbg !10834
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10835
  store volatile i32 %1, i32* %3, align 4, !dbg !10835
  ret void, !dbg !10836
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #7 !dbg !10837 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10839, metadata !DIExpression()), !dbg !10840
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10841
  %3 = load volatile i32, i32* %2, align 4, !dbg !10841
  ret i32 %3, !dbg !10842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #14 !dbg !10843 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10847, metadata !DIExpression()), !dbg !10849
  call void @llvm.dbg.value(metadata i32* %1, metadata !10848, metadata !DIExpression()), !dbg !10849
  %3 = and i32 %0, 131072, !dbg !10850
  %4 = icmp eq i32 %3, 0, !dbg !10852
  br i1 %4, label %22, label %5, !dbg !10853

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10854
  %6 = and i32 %0, 2, !dbg !10856
  %7 = icmp eq i32 %6, 0, !dbg !10858
  br i1 %7, label %11, label %8, !dbg !10859

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10860
  %10 = icmp eq i32 %9, 0, !dbg !10860
  br i1 %10, label %33, label %11, !dbg !10863

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10864
  store i32 %12, i32* %1, align 4, !dbg !10864
  %13 = and i32 %0, 16, !dbg !10865
  %14 = icmp eq i32 %13, 0, !dbg !10867
  br i1 %14, label %17, label %15, !dbg !10868

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10869
  br label %31, !dbg !10871

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10872
  %19 = icmp eq i32 %18, 0, !dbg !10874
  br i1 %19, label %33, label %20, !dbg !10875

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10876
  br label %31, !dbg !10878

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10879
  %24 = icmp eq i32 %23, 0, !dbg !10881
  br i1 %24, label %31, label %25, !dbg !10882

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10883
  %27 = icmp eq i32 %26, 0, !dbg !10886
  br i1 %27, label %28, label %31, !dbg !10887

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10888
  br label %33, !dbg !10889

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10849
  ret i32 %34, !dbg !10889
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10890 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10894, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i32 %1, metadata !10895, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i32 %2, metadata !10896, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i32 %3, metadata !10897, metadata !DIExpression()), !dbg !10905
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10906
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10906
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10906
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10898, metadata !DIExpression()), !dbg !10905
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10907
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10907
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10907
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10899, metadata !DIExpression()), !dbg !10905
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #28, !dbg !10908
  call void @llvm.dbg.value(metadata i32 %11, metadata !10900, metadata !DIExpression()), !dbg !10905
  %12 = and i32 %2, 48, !dbg !10909
  call void @llvm.dbg.value(metadata i32 %12, metadata !10901, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.value(metadata i32 %2, metadata !10902, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10905
  call void @llvm.dbg.value(metadata i32 %2, metadata !10903, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10905
  call void @llvm.dbg.value(metadata i32 %2, metadata !10904, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10905
  %13 = lshr i32 %2, 6, !dbg !10910
  %14 = and i32 %13, 1, !dbg !10910
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #28, !dbg !10911
  %15 = lshr i32 %2, 7, !dbg !10912
  %16 = and i32 %15, 3, !dbg !10912
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #28, !dbg !10913
  %17 = lshr i32 %2, 9, !dbg !10914
  %18 = and i32 %17, 3, !dbg !10914
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #28, !dbg !10915
  %19 = icmp eq i32 %12, 32, !dbg !10916
  br i1 %19, label %20, label %24, !dbg !10918

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10919
  br i1 %21, label %22, label %23, !dbg !10922

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #28, !dbg !10923
  br label %24, !dbg !10925

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #28, !dbg !10926
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10928
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #28, !dbg !10929
  ret void, !dbg !10930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #5 !dbg !10931 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10933, metadata !DIExpression()), !dbg !10935
  %2 = shl nuw i32 1, %0, !dbg !10936
  call void @llvm.dbg.value(metadata i32 %2, metadata !10934, metadata !DIExpression()), !dbg !10935
  ret i32 %2, !dbg !10937
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #18 !dbg !10938 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10942, metadata !DIExpression()), !dbg !10945
  call void @llvm.dbg.value(metadata i32 %1, metadata !10943, metadata !DIExpression()), !dbg !10945
  call void @llvm.dbg.value(metadata i32 %2, metadata !10944, metadata !DIExpression()), !dbg !10945
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10946
  %5 = load volatile i32, i32* %4, align 4, !dbg !10946
  %6 = xor i32 %1, -1, !dbg !10946
  %7 = and i32 %5, %6, !dbg !10946
  %8 = mul i32 %2, %1, !dbg !10946
  %9 = or i32 %7, %8, !dbg !10946
  store volatile i32 %9, i32* %4, align 4, !dbg !10946
  ret void, !dbg !10947
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10948 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10950, metadata !DIExpression()), !dbg !10953
  call void @llvm.dbg.value(metadata i32 %1, metadata !10951, metadata !DIExpression()), !dbg !10953
  call void @llvm.dbg.value(metadata i32 %2, metadata !10952, metadata !DIExpression()), !dbg !10953
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10954
  %5 = load volatile i32, i32* %4, align 4, !dbg !10954
  call void @llvm.dbg.value(metadata i32 %1, metadata !10752, metadata !DIExpression()) #26, !dbg !10955
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !10957, !srcloc !10759
  call void @llvm.dbg.value(metadata i32 %6, metadata !10755, metadata !DIExpression()) #26, !dbg !10955
  call void @llvm.dbg.value(metadata i32 %6, metadata !10760, metadata !DIExpression()) #26, !dbg !10958
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !10960, !range !5383
  %8 = shl nuw nsw i32 %7, 1, !dbg !10954
  %9 = shl i32 3, %8, !dbg !10954
  %10 = xor i32 %9, -1, !dbg !10954
  %11 = and i32 %5, %10, !dbg !10954
  call void @llvm.dbg.value(metadata i32 %1, metadata !10752, metadata !DIExpression()) #26, !dbg !10961
  call void @llvm.dbg.value(metadata i32 %6, metadata !10755, metadata !DIExpression()) #26, !dbg !10961
  call void @llvm.dbg.value(metadata i32 %6, metadata !10760, metadata !DIExpression()) #26, !dbg !10963
  %12 = shl i32 %2, %8, !dbg !10954
  %13 = or i32 %11, %12, !dbg !10954
  store volatile i32 %13, i32* %4, align 4, !dbg !10954
  ret void, !dbg !10965
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10966 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10968, metadata !DIExpression()), !dbg !10971
  call void @llvm.dbg.value(metadata i32 %1, metadata !10969, metadata !DIExpression()), !dbg !10971
  call void @llvm.dbg.value(metadata i32 %2, metadata !10970, metadata !DIExpression()), !dbg !10971
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10972
  %5 = load volatile i32, i32* %4, align 4, !dbg !10972
  call void @llvm.dbg.value(metadata i32 %1, metadata !10752, metadata !DIExpression()) #26, !dbg !10973
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !10975, !srcloc !10759
  call void @llvm.dbg.value(metadata i32 %6, metadata !10755, metadata !DIExpression()) #26, !dbg !10973
  call void @llvm.dbg.value(metadata i32 %6, metadata !10760, metadata !DIExpression()) #26, !dbg !10976
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !10978, !range !5383
  %8 = shl nuw nsw i32 %7, 1, !dbg !10972
  %9 = shl i32 3, %8, !dbg !10972
  %10 = xor i32 %9, -1, !dbg !10972
  %11 = and i32 %5, %10, !dbg !10972
  call void @llvm.dbg.value(metadata i32 %1, metadata !10752, metadata !DIExpression()) #26, !dbg !10979
  call void @llvm.dbg.value(metadata i32 %6, metadata !10755, metadata !DIExpression()) #26, !dbg !10979
  call void @llvm.dbg.value(metadata i32 %6, metadata !10760, metadata !DIExpression()) #26, !dbg !10981
  %12 = shl i32 %2, %8, !dbg !10972
  %13 = or i32 %11, %12, !dbg !10972
  store volatile i32 %13, i32* %4, align 4, !dbg !10972
  ret void, !dbg !10983
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10984 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10986, metadata !DIExpression()), !dbg !10989
  call void @llvm.dbg.value(metadata i32 %1, metadata !10987, metadata !DIExpression()), !dbg !10989
  call void @llvm.dbg.value(metadata i32 %2, metadata !10988, metadata !DIExpression()), !dbg !10989
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10990
  %5 = load volatile i32, i32* %4, align 4, !dbg !10990
  call void @llvm.dbg.value(metadata i32 %1, metadata !10752, metadata !DIExpression()) #26, !dbg !10991
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !10993, !srcloc !10759
  call void @llvm.dbg.value(metadata i32 %6, metadata !10755, metadata !DIExpression()) #26, !dbg !10991
  call void @llvm.dbg.value(metadata i32 %6, metadata !10760, metadata !DIExpression()) #26, !dbg !10994
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !10996, !range !5383
  %8 = shl nuw nsw i32 %7, 2, !dbg !10990
  %9 = shl i32 15, %8, !dbg !10990
  %10 = xor i32 %9, -1, !dbg !10990
  %11 = and i32 %5, %10, !dbg !10990
  call void @llvm.dbg.value(metadata i32 %1, metadata !10752, metadata !DIExpression()) #26, !dbg !10997
  call void @llvm.dbg.value(metadata i32 %6, metadata !10755, metadata !DIExpression()) #26, !dbg !10997
  call void @llvm.dbg.value(metadata i32 %6, metadata !10760, metadata !DIExpression()) #26, !dbg !10999
  %12 = shl i32 %2, %8, !dbg !10990
  %13 = or i32 %11, %12, !dbg !10990
  store volatile i32 %13, i32* %4, align 4, !dbg !10990
  ret void, !dbg !11001
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11002 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11004, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.value(metadata i32 %1, metadata !11005, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.value(metadata i32 %2, metadata !11006, metadata !DIExpression()), !dbg !11007
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !11008
  %5 = load volatile i32, i32* %4, align 4, !dbg !11008
  %6 = lshr i32 %1, 8, !dbg !11008
  call void @llvm.dbg.value(metadata i32 %6, metadata !10752, metadata !DIExpression()) #26, !dbg !11009
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #31, !dbg !11011, !srcloc !10759
  call void @llvm.dbg.value(metadata i32 %7, metadata !10755, metadata !DIExpression()) #26, !dbg !11009
  call void @llvm.dbg.value(metadata i32 %7, metadata !10760, metadata !DIExpression()) #26, !dbg !11012
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #26, !dbg !11014, !range !5383
  %9 = shl nuw nsw i32 %8, 2, !dbg !11008
  %10 = shl i32 15, %9, !dbg !11008
  %11 = xor i32 %10, -1, !dbg !11008
  %12 = and i32 %5, %11, !dbg !11008
  call void @llvm.dbg.value(metadata i32 %6, metadata !10752, metadata !DIExpression()) #26, !dbg !11015
  call void @llvm.dbg.value(metadata i32 %7, metadata !10755, metadata !DIExpression()) #26, !dbg !11015
  call void @llvm.dbg.value(metadata i32 %7, metadata !10760, metadata !DIExpression()) #26, !dbg !11017
  %13 = shl i32 %2, %9, !dbg !11008
  %14 = or i32 %12, %13, !dbg !11008
  store volatile i32 %14, i32* %4, align 4, !dbg !11008
  ret void, !dbg !11019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11020 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11022, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.value(metadata i32 %1, metadata !11023, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.value(metadata i32 %2, metadata !11024, metadata !DIExpression()), !dbg !11025
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !11026
  %5 = load volatile i32, i32* %4, align 4, !dbg !11026
  call void @llvm.dbg.value(metadata i32 %1, metadata !10752, metadata !DIExpression()) #26, !dbg !11027
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #31, !dbg !11029, !srcloc !10759
  call void @llvm.dbg.value(metadata i32 %6, metadata !10755, metadata !DIExpression()) #26, !dbg !11027
  call void @llvm.dbg.value(metadata i32 %6, metadata !10760, metadata !DIExpression()) #26, !dbg !11030
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #26, !dbg !11032, !range !5383
  %8 = shl nuw nsw i32 %7, 1, !dbg !11026
  %9 = shl i32 3, %8, !dbg !11026
  %10 = xor i32 %9, -1, !dbg !11026
  %11 = and i32 %5, %10, !dbg !11026
  call void @llvm.dbg.value(metadata i32 %1, metadata !10752, metadata !DIExpression()) #26, !dbg !11033
  call void @llvm.dbg.value(metadata i32 %6, metadata !10755, metadata !DIExpression()) #26, !dbg !11033
  call void @llvm.dbg.value(metadata i32 %6, metadata !10760, metadata !DIExpression()) #26, !dbg !11035
  %12 = shl i32 %2, %8, !dbg !11026
  %13 = or i32 %11, %12, !dbg !11026
  store volatile i32 %13, i32* %4, align 4, !dbg !11026
  ret void, !dbg !11037
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !11038 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11040, metadata !DIExpression()), !dbg !11043
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11044
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !11044
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !11044
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !11041, metadata !DIExpression()), !dbg !11043
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !11045
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !11046
  %6 = tail call fastcc zeroext i1 @device_is_ready.165() #28, !dbg !11047
  br i1 %6, label %7, label %11, !dbg !11049

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #28, !dbg !11050
  call void @llvm.dbg.value(metadata i32 %8, metadata !11042, metadata !DIExpression()), !dbg !11043
  %9 = icmp slt i32 %8, 0, !dbg !11051
  %10 = select i1 %9, i32 %8, i32 0, !dbg !11053
  br label %11, !dbg !11053

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !11043
  ret i32 %12, !dbg !11054
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.165() unnamed_addr #1 !dbg !11055 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11059, metadata !DIExpression()), !dbg !11060
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !11061, !srcloc !11063
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.166() #28, !dbg !11064
  ret i1 %1, !dbg !11065
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !11066 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11070, metadata !DIExpression()), !dbg !11075
  call void @llvm.dbg.value(metadata i8 1, metadata !11071, metadata !DIExpression()), !dbg !11075
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11076
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !11076
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !11076
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11072, metadata !DIExpression()), !dbg !11075
  call void @llvm.dbg.value(metadata i32 0, metadata !11073, metadata !DIExpression()), !dbg !11075
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11074, metadata !DIExpression()), !dbg !11075
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !11077
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !11080
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #28, !dbg !11081
  call void @llvm.dbg.value(metadata i32 %7, metadata !11073, metadata !DIExpression()), !dbg !11075
  ret i32 %7, !dbg !11082
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.166() unnamed_addr #1 !dbg !11083 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11085, metadata !DIExpression()), !dbg !11086
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #27, !dbg !11087
  ret i1 %1, !dbg !11088
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11089 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11093, metadata !DIExpression()), !dbg !11101
  call void @llvm.dbg.value(metadata i32 %1, metadata !11094, metadata !DIExpression()), !dbg !11101
  call void @llvm.dbg.value(metadata i32 %2, metadata !11095, metadata !DIExpression()), !dbg !11101
  call void @llvm.dbg.value(metadata i32 %3, metadata !11096, metadata !DIExpression()), !dbg !11101
  call void @llvm.dbg.value(metadata i32 0, metadata !11097, metadata !DIExpression()), !dbg !11101
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #28, !dbg !11102
  %5 = icmp eq i32 %3, 17, !dbg !11103
  br i1 %5, label %6, label %14, !dbg !11104

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11105
  call void @llvm.dbg.value(metadata i32 %7, metadata !11098, metadata !DIExpression()), !dbg !11106
  %8 = icmp eq i32 %7, 0, !dbg !11107
  %9 = shl nuw i32 1, %1, !dbg !11109
  br i1 %8, label %12, label %10, !dbg !11110

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #28, !dbg !11111
  br label %14, !dbg !11113

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #28, !dbg !11114
  br label %14, !dbg !11117

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11118
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #21 !dbg !11119 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11121, metadata !DIExpression()), !dbg !11125
  call void @llvm.dbg.value(metadata i8* %1, metadata !11122, metadata !DIExpression()), !dbg !11125
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11126
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11126
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11126
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11123, metadata !DIExpression()), !dbg !11125
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11127
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11127
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #28, !dbg !11129
  %9 = icmp eq i32 %8, 0, !dbg !11129
  br i1 %9, label %12, label %10, !dbg !11130

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11131
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #28, !dbg !11133
  br label %12, !dbg !11134

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11135
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #28, !dbg !11137
  %15 = icmp eq i32 %14, 0, !dbg !11137
  br i1 %15, label %19, label %16, !dbg !11138

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11139
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #28, !dbg !11140
  store i8 %18, i8* %1, align 1, !dbg !11141
  br label %19, !dbg !11142

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11125
  ret i32 %20, !dbg !11143
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11144 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11146, metadata !DIExpression()), !dbg !11150
  call void @llvm.dbg.value(metadata i8 %1, metadata !11147, metadata !DIExpression()), !dbg !11150
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11151
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11151
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11151
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11148, metadata !DIExpression()), !dbg !11150
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11152

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11153
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #28, !dbg !11156
  %10 = icmp eq i32 %9, 0, !dbg !11156
  br i1 %10, label %18, label %11, !dbg !11157

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !11158, !srcloc !11165
  call void @llvm.dbg.value(metadata i32 undef, metadata !11161, metadata !DIExpression()) #26, !dbg !11166
  call void @llvm.dbg.value(metadata i32 undef, metadata !11162, metadata !DIExpression()) #26, !dbg !11166
  call void @llvm.dbg.value(metadata i32 undef, metadata !11149, metadata !DIExpression()), !dbg !11150
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11167
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #28, !dbg !11169
  %15 = icmp eq i32 %14, 0, !dbg !11169
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11158
  br i1 %15, label %17, label %19, !dbg !11170

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11161, metadata !DIExpression()) #26, !dbg !11166
  call void @llvm.dbg.value(metadata i32 %16, metadata !11149, metadata !DIExpression()), !dbg !11150
  call void @llvm.dbg.value(metadata i32 undef, metadata !11171, metadata !DIExpression()) #26, !dbg !11174
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !11176, !srcloc !11177
  br label %18, !dbg !11178

18:                                               ; preds = %17, %7
  br label %7, !dbg !11153, !llvm.loop !11179

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11158
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11181
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #28, !dbg !11182
  call void @llvm.dbg.value(metadata i32 %20, metadata !11171, metadata !DIExpression()) #26, !dbg !11183
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #26, !dbg !11185, !srcloc !11177
  ret void, !dbg !11186
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #21 !dbg !11187 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11189, metadata !DIExpression()), !dbg !11192
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11193
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11193
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11193
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11190, metadata !DIExpression()), !dbg !11192
  call void @llvm.dbg.value(metadata i32 0, metadata !11191, metadata !DIExpression()), !dbg !11192
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11194
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11194
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #28, !dbg !11196
  %8 = icmp ne i32 %7, 0, !dbg !11196
  %9 = zext i1 %8 to i32, !dbg !11197
  call void @llvm.dbg.value(metadata i32 %9, metadata !11191, metadata !DIExpression()), !dbg !11192
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11198
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #28, !dbg !11200
  %12 = icmp eq i32 %11, 0, !dbg !11200
  %13 = or i32 %9, 2, !dbg !11201
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11201
  call void @llvm.dbg.value(metadata i32 %14, metadata !11191, metadata !DIExpression()), !dbg !11192
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11202
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #28, !dbg !11204
  %17 = icmp eq i32 %16, 0, !dbg !11204
  %18 = or i32 %14, 4, !dbg !11205
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11205
  call void @llvm.dbg.value(metadata i32 %19, metadata !11191, metadata !DIExpression()), !dbg !11192
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11206
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #28, !dbg !11208
  %22 = icmp eq i32 %21, 0, !dbg !11208
  %23 = or i32 %19, 8, !dbg !11209
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11209
  call void @llvm.dbg.value(metadata i32 %24, metadata !11191, metadata !DIExpression()), !dbg !11192
  %25 = and i32 %24, 8, !dbg !11210
  %26 = icmp eq i32 %25, 0, !dbg !11210
  br i1 %26, label %29, label %27, !dbg !11212

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11213
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #28, !dbg !11215
  br label %29, !dbg !11216

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11217
  %31 = icmp eq i32 %30, 0, !dbg !11217
  br i1 %31, label %34, label %32, !dbg !11219

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11220
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #28, !dbg !11222
  br label %34, !dbg !11223

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11224
  %36 = icmp eq i32 %35, 0, !dbg !11224
  br i1 %36, label %39, label %37, !dbg !11226

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11227
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #28, !dbg !11229
  br label %39, !dbg !11230

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11231
  %41 = icmp eq i32 %40, 0, !dbg !11231
  br i1 %41, label %44, label %42, !dbg !11233

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11234
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #28, !dbg !11236
  br label %44, !dbg !11237

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11238
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #28, !dbg !11239
  ret i32 %24, !dbg !11240
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11241 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11243, metadata !DIExpression()), !dbg !11252
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11244, metadata !DIExpression()), !dbg !11252
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11253
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11253
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11253
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11245, metadata !DIExpression()), !dbg !11252
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11254
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11254
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11254
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11246, metadata !DIExpression()), !dbg !11252
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11255
  %10 = load i8, i8* %9, align 4, !dbg !11255
  %11 = zext i8 %10 to i32, !dbg !11256
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #28, !dbg !11257
  call void @llvm.dbg.value(metadata i32 %12, metadata !11248, metadata !DIExpression()), !dbg !11252
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11258
  %14 = load i8, i8* %13, align 1, !dbg !11258
  %15 = zext i8 %14 to i32, !dbg !11259
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #28, !dbg !11260
  call void @llvm.dbg.value(metadata i32 %16, metadata !11249, metadata !DIExpression()), !dbg !11252
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11261
  %18 = load i8, i8* %17, align 2, !dbg !11261
  %19 = zext i8 %18 to i32, !dbg !11262
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #28, !dbg !11263
  call void @llvm.dbg.value(metadata i32 %20, metadata !11250, metadata !DIExpression()), !dbg !11252
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11264
  %22 = load i8, i8* %21, align 1, !dbg !11264
  %23 = zext i8 %22 to i32, !dbg !11265
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #28, !dbg !11266
  call void @llvm.dbg.value(metadata i32 %24, metadata !11251, metadata !DIExpression()), !dbg !11252
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11267

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11269
  br i1 %26, label %69, label %27, !dbg !11271

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11272

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11273
  br i1 %29, label %65, label %30, !dbg !11273

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11275
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11252
  br i1 %31, label %38, label %34, !dbg !11277

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11278
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073812480, label %36
  ], !dbg !11278

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11281
  br i1 %37, label %38, label %69, !dbg !11282

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11283
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #28, !dbg !11284
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #28, !dbg !11285
  %41 = icmp eq i32 %12, %40, !dbg !11287
  br i1 %41, label %43, label %42, !dbg !11288

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #28, !dbg !11289
  br label %43, !dbg !11291

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #28, !dbg !11292
  %45 = icmp eq i32 %16, %44, !dbg !11294
  br i1 %45, label %47, label %46, !dbg !11295

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #28, !dbg !11296
  br label %47, !dbg !11298

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #28, !dbg !11299
  %49 = icmp eq i32 %20, %48, !dbg !11301
  br i1 %49, label %51, label %50, !dbg !11302

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #28, !dbg !11303
  br label %51, !dbg !11305

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #28, !dbg !11306
  %53 = icmp eq i32 %24, %52, !dbg !11308
  br i1 %53, label %55, label %54, !dbg !11309

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #28, !dbg !11310
  br label %55, !dbg !11312

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11313
  %57 = load i32, i32* %56, align 4, !dbg !11313
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11315
  %59 = load i32, i32* %58, align 4, !dbg !11315
  %60 = icmp eq i32 %57, %59, !dbg !11316
  br i1 %60, label %63, label %61, !dbg !11317

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #28, !dbg !11318
  %62 = load i32, i32* %56, align 4, !dbg !11320
  store i32 %62, i32* %58, align 4, !dbg !11321
  br label %63, !dbg !11322

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11323
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #28, !dbg !11324
  br label %69, !dbg !11325

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11273
  %67 = and i8 %66, 1, !dbg !11273
  %68 = icmp eq i8 %67, 0, !dbg !11273
  br i1 %68, label %30, label %69, !dbg !11273

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11252
  ret i32 %70, !dbg !11326
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #22 !dbg !11327 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11329, metadata !DIExpression()), !dbg !11332
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11330, metadata !DIExpression()), !dbg !11332
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11333
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11333
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11333
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11331, metadata !DIExpression()), !dbg !11332
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11334
  %7 = load i32, i32* %6, align 4, !dbg !11334
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11335
  store i32 %7, i32* %8, align 4, !dbg !11336
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #28, !dbg !11337, !range !11338
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #28, !dbg !11339
  %11 = trunc i32 %10 to i8, !dbg !11339
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11340
  store i8 %11, i8* %12, align 4, !dbg !11341
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #28, !dbg !11342, !range !11343
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #28, !dbg !11344
  %15 = trunc i32 %14 to i8, !dbg !11344
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11345
  store i8 %15, i8* %16, align 1, !dbg !11346
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #28, !dbg !11347
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #28, !dbg !11348, !range !11338
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #28, !dbg !11349
  %20 = trunc i32 %19 to i8, !dbg !11349
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11350
  store i8 %20, i8* %21, align 2, !dbg !11351
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #28, !dbg !11352, !range !11353
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #28, !dbg !11354
  %24 = trunc i32 %23 to i8, !dbg !11354
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11355
  store i8 %24, i8* %25, align 1, !dbg !11356
  ret i32 0, !dbg !11357
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11358 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11362, metadata !DIExpression()), !dbg !11364
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11365
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11365
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11365
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11363, metadata !DIExpression()), !dbg !11364
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11366
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11366
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #28, !dbg !11367
  ret i32 %7, !dbg !11368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #5 !dbg !11369 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11373, metadata !DIExpression()), !dbg !11374
  %2 = icmp eq i32 %0, 1024, !dbg !11375
  %3 = select i1 %2, i32 2, i32 0, !dbg !11375
  %4 = icmp eq i32 %0, 1536, !dbg !11375
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11375
  ret i32 %5, !dbg !11376
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11377 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11379, metadata !DIExpression()), !dbg !11381
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11382
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11382
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11382
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11380, metadata !DIExpression()), !dbg !11381
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11383
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11383
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #28, !dbg !11384
  ret i32 %7, !dbg !11385
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #6 !dbg !11386 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11390, metadata !DIExpression()), !dbg !11391
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11392
  %3 = icmp ult i32 %2, 4, !dbg !11392
  br i1 %3, label %4, label %7, !dbg !11392

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11392
  %6 = load i32, i32* %5, align 4, !dbg !11392
  br label %7, !dbg !11392

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11393
  ret i32 %8, !dbg !11395
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11396 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11398, metadata !DIExpression()), !dbg !11400
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11401
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11401
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11401
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11399, metadata !DIExpression()), !dbg !11400
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11402
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11402
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #28, !dbg !11403
  ret i32 %7, !dbg !11404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11405 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11409, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.value(metadata i32 %1, metadata !11410, metadata !DIExpression()), !dbg !11411
  %3 = icmp eq i32 %0, 4096, !dbg !11412
  %4 = icmp eq i32 %1, 0, !dbg !11412
  %5 = select i1 %4, i32 4, i32 3, !dbg !11412
  %6 = select i1 %4, i32 3, i32 2, !dbg !11412
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11412
  ret i32 %7, !dbg !11413
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !11414 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11416, metadata !DIExpression()), !dbg !11418
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11419
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11419
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11419
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11417, metadata !DIExpression()), !dbg !11418
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11420
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11420
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #28, !dbg !11421
  ret i32 %7, !dbg !11422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11427, metadata !DIExpression()), !dbg !11428
  %2 = icmp eq i32 %0, 768, !dbg !11429
  %3 = zext i1 %2 to i32, !dbg !11428
  ret i32 %3, !dbg !11431
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11432 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11437, metadata !DIExpression()), !dbg !11438
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11439
  %3 = load volatile i32, i32* %2, align 4, !dbg !11439
  %4 = and i32 %3, 768, !dbg !11439
  ret i32 %4, !dbg !11440
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11441 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11443, metadata !DIExpression()), !dbg !11444
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11445
  %3 = load volatile i32, i32* %2, align 4, !dbg !11445
  %4 = and i32 %3, 4096, !dbg !11445
  ret i32 %4, !dbg !11446
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11447 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11449, metadata !DIExpression()), !dbg !11450
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11451
  %3 = load volatile i32, i32* %2, align 4, !dbg !11451
  %4 = and i32 %3, 12288, !dbg !11451
  ret i32 %4, !dbg !11452
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11453 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11455, metadata !DIExpression()), !dbg !11456
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11457
  %3 = load volatile i32, i32* %2, align 4, !dbg !11457
  %4 = and i32 %3, 1536, !dbg !11457
  ret i32 %4, !dbg !11458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #5 !dbg !11459 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11463, metadata !DIExpression()), !dbg !11464
  %2 = icmp eq i32 %0, 2, !dbg !11465
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11465
  %4 = icmp eq i32 %0, 1, !dbg !11465
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11465
  ret i32 %5, !dbg !11466
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #5 !dbg !11467 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11471, metadata !DIExpression()), !dbg !11472
  %2 = icmp ult i32 %0, 3, !dbg !11473
  br i1 %2, label %3, label %6, !dbg !11473

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11473
  %5 = load i32, i32* %4, align 4, !dbg !11473
  br label %6, !dbg !11473

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11474
  ret i32 %7, !dbg !11476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !11477 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11481, metadata !DIExpression()), !dbg !11483
  call void @llvm.dbg.value(metadata i32 %1, metadata !11482, metadata !DIExpression()), !dbg !11483
  %3 = icmp eq i32 %0, 4, !dbg !11484
  %4 = icmp eq i32 %1, 0, !dbg !11484
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11484
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11484
  ret i32 %6, !dbg !11485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #5 !dbg !11486 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11490, metadata !DIExpression()), !dbg !11491
  %2 = icmp eq i32 %0, 1, !dbg !11492
  %3 = select i1 %2, i32 768, i32 0, !dbg !11491
  ret i32 %3, !dbg !11494
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11495 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11499, metadata !DIExpression()), !dbg !11500
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11501
  %3 = load volatile i32, i32* %2, align 4, !dbg !11501
  %4 = and i32 %3, -8193, !dbg !11501
  store volatile i32 %4, i32* %2, align 4, !dbg !11501
  ret void, !dbg !11502
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #18 !dbg !11503 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11507, metadata !DIExpression()), !dbg !11510
  call void @llvm.dbg.value(metadata i32 %1, metadata !11508, metadata !DIExpression()), !dbg !11510
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11511
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11511
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11511
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11509, metadata !DIExpression()), !dbg !11510
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11512
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11512
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11513
  ret void, !dbg !11514
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #18 !dbg !11515 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11517, metadata !DIExpression()), !dbg !11520
  call void @llvm.dbg.value(metadata i32 %1, metadata !11518, metadata !DIExpression()), !dbg !11520
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11521
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11521
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11521
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11519, metadata !DIExpression()), !dbg !11520
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11522
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11522
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11523
  ret void, !dbg !11524
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #18 !dbg !11525 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11527, metadata !DIExpression()), !dbg !11530
  call void @llvm.dbg.value(metadata i32 %1, metadata !11528, metadata !DIExpression()), !dbg !11530
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11531
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11531
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11531
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11529, metadata !DIExpression()), !dbg !11530
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11532
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11532
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11533
  ret void, !dbg !11534
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #18 !dbg !11535 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11537, metadata !DIExpression()), !dbg !11540
  call void @llvm.dbg.value(metadata i32 %1, metadata !11538, metadata !DIExpression()), !dbg !11540
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11541
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11541
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11541
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11539, metadata !DIExpression()), !dbg !11540
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11542
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11542
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #28, !dbg !11543
  ret void, !dbg !11544
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11545 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11547, metadata !DIExpression()), !dbg !11552
  call void @llvm.dbg.value(metadata i32 %1, metadata !11548, metadata !DIExpression()), !dbg !11552
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11553
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11553
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11553
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11549, metadata !DIExpression()), !dbg !11552
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11554
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11554
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11554
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11550, metadata !DIExpression()), !dbg !11552
  %10 = bitcast i32* %3 to i8*, !dbg !11555
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #26, !dbg !11555
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11556
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11556
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11560
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11560
  %15 = load i8*, i8** %14, align 4, !dbg !11560
  call void @llvm.dbg.value(metadata i32* %3, metadata !11551, metadata !DIExpression(DW_OP_deref)), !dbg !11552
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #28, !dbg !11561
  %17 = icmp slt i32 %16, 0, !dbg !11562
  br i1 %17, label %18, label %21, !dbg !11563

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.171(i32 noundef 1) #28, !dbg !11564
  %20 = zext i8 %19 to i32, !dbg !11564
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.172, i32 0, i32 0), i32 noundef %20) #27, !dbg !11564
  br label %31, !dbg !11570

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11571
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11571
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #28, !dbg !11572
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11573
  %25 = load i32, i32* %3, align 4, !dbg !11574
  call void @llvm.dbg.value(metadata i32 %25, metadata !11551, metadata !DIExpression()), !dbg !11552
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #28, !dbg !11575
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11576
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !11576
  %28 = load volatile i32, i32* %27, align 4, !dbg !11576
  %29 = icmp ugt i32 %28, 16, !dbg !11576
  br i1 %29, label %31, label %30, !dbg !11579

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.174, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.175, i32 0, i32 0), i32 noundef 190) #27, !dbg !11580
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.176, i32 0, i32 0)) #27, !dbg !11580
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.175, i32 0, i32 0), i32 noundef 190) #27, !dbg !11580
  unreachable, !dbg !11580

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #26, !dbg !11582
  ret void, !dbg !11582
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11583 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11585, metadata !DIExpression()), !dbg !11586
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11587
  %3 = load volatile i32, i32* %2, align 4, !dbg !11587
  %4 = or i32 %3, 8192, !dbg !11587
  store volatile i32 %4, i32* %2, align 4, !dbg !11587
  ret void, !dbg !11588
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11589 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11591, metadata !DIExpression()), !dbg !11595
  call void @llvm.dbg.value(metadata i8* %1, metadata !11592, metadata !DIExpression()), !dbg !11595
  call void @llvm.dbg.value(metadata i32* %2, metadata !11593, metadata !DIExpression()), !dbg !11595
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11596
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11596
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11596
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11594, metadata !DIExpression()), !dbg !11595
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11597
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11597
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11599
  br i1 %9, label %12, label %10, !dbg !11600

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !11601
  br label %12, !dbg !11602

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11595
  ret i32 %13, !dbg !11603
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.171(i32 noundef %0) unnamed_addr #5 !dbg !11604 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11606, metadata !DIExpression()), !dbg !11607
  %2 = icmp eq i32 %0, 2, !dbg !11608
  %3 = select i1 %2, i8 87, i8 63, !dbg !11608
  %4 = icmp eq i32 %0, 1, !dbg !11608
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11608
  ret i8 %5, !dbg !11609
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11610 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11614, metadata !DIExpression()), !dbg !11616
  call void @llvm.dbg.value(metadata i32 0, metadata !11615, metadata !DIExpression()), !dbg !11616
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11617
  %3 = load volatile i32, i32* %2, align 4, !dbg !11617
  %4 = and i32 %3, -32769, !dbg !11617
  store volatile i32 %4, i32* %2, align 4, !dbg !11617
  ret void, !dbg !11618
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #18 !dbg !11619 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11623, metadata !DIExpression()), !dbg !11627
  call void @llvm.dbg.value(metadata i32 %1, metadata !11624, metadata !DIExpression()), !dbg !11627
  call void @llvm.dbg.value(metadata i32 0, metadata !11625, metadata !DIExpression()), !dbg !11627
  call void @llvm.dbg.value(metadata i32 %2, metadata !11626, metadata !DIExpression()), !dbg !11627
  %4 = zext i32 %1 to i64, !dbg !11628
  %5 = mul nuw nsw i64 %4, 25, !dbg !11628
  %6 = zext i32 %2 to i64, !dbg !11628
  %7 = shl nuw nsw i64 %6, 2, !dbg !11628
  %8 = udiv i64 %5, %7, !dbg !11628
  %9 = trunc i64 %8 to i32, !dbg !11628
  %10 = udiv i32 %9, 100, !dbg !11628
  %11 = shl nuw nsw i32 %10, 4, !dbg !11628
  %12 = mul i32 %10, -100, !dbg !11628
  %13 = add i32 %12, %9, !dbg !11628
  %14 = shl i32 %13, 4, !dbg !11628
  %15 = add i32 %14, 50, !dbg !11628
  %16 = udiv i32 %15, 100, !dbg !11628
  %17 = and i32 %16, 240, !dbg !11628
  %18 = add nuw nsw i32 %17, %11, !dbg !11628
  %19 = and i32 %16, 15, !dbg !11628
  %20 = and i32 %18, 65520, !dbg !11631
  %21 = or i32 %20, %19, !dbg !11631
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11632
  store volatile i32 %21, i32* %22, align 4, !dbg !11633
  ret void, !dbg !11634
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !11635 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11637, metadata !DIExpression()), !dbg !11639
  call void @llvm.dbg.value(metadata i32 %1, metadata !11638, metadata !DIExpression()), !dbg !11639
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11640
  %4 = load volatile i32, i32* %3, align 4, !dbg !11640
  %5 = and i32 %4, -769, !dbg !11640
  %6 = or i32 %5, %1, !dbg !11640
  store volatile i32 %6, i32* %3, align 4, !dbg !11640
  ret void, !dbg !11641
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !11642 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11644, metadata !DIExpression()), !dbg !11646
  call void @llvm.dbg.value(metadata i32 %1, metadata !11645, metadata !DIExpression()), !dbg !11646
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11647
  %4 = load volatile i32, i32* %3, align 4, !dbg !11647
  %5 = and i32 %4, -4097, !dbg !11647
  %6 = or i32 %5, %1, !dbg !11647
  store volatile i32 %6, i32* %3, align 4, !dbg !11647
  ret void, !dbg !11648
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !11649 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11651, metadata !DIExpression()), !dbg !11653
  call void @llvm.dbg.value(metadata i32 %1, metadata !11652, metadata !DIExpression()), !dbg !11653
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11654
  %4 = load volatile i32, i32* %3, align 4, !dbg !11654
  %5 = and i32 %4, -12289, !dbg !11654
  %6 = or i32 %5, %1, !dbg !11654
  store volatile i32 %6, i32* %3, align 4, !dbg !11654
  ret void, !dbg !11655
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !11656 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11658, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.value(metadata i32 %1, metadata !11659, metadata !DIExpression()), !dbg !11660
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11661
  %4 = load volatile i32, i32* %3, align 4, !dbg !11661
  %5 = and i32 %4, -1537, !dbg !11661
  %6 = or i32 %5, %1, !dbg !11661
  store volatile i32 %6, i32* %3, align 4, !dbg !11661
  ret void, !dbg !11662
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11663 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11665, metadata !DIExpression()), !dbg !11666
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11667
  %3 = load volatile i32, i32* %2, align 4, !dbg !11667
  %4 = lshr i32 %3, 3, !dbg !11668
  %5 = and i32 %4, 1, !dbg !11668
  ret i32 %5, !dbg !11669
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11670 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11672, metadata !DIExpression()), !dbg !11673
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11674
  %3 = load volatile i32, i32* %2, align 4, !dbg !11674
  %4 = and i32 %3, 1, !dbg !11674
  ret i32 %4, !dbg !11675
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11676 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11678, metadata !DIExpression()), !dbg !11679
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11680
  %3 = load volatile i32, i32* %2, align 4, !dbg !11680
  %4 = lshr i32 %3, 1, !dbg !11681
  %5 = and i32 %4, 1, !dbg !11681
  ret i32 %5, !dbg !11682
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11683 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11685, metadata !DIExpression()), !dbg !11686
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11687
  %3 = load volatile i32, i32* %2, align 4, !dbg !11687
  %4 = lshr i32 %3, 8, !dbg !11688
  %5 = and i32 %4, 1, !dbg !11688
  ret i32 %5, !dbg !11689
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11690 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11692, metadata !DIExpression()), !dbg !11693
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11694
  store volatile i32 -257, i32* %2, align 4, !dbg !11694
  ret void, !dbg !11695
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11696 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11698, metadata !DIExpression()), !dbg !11700
  %3 = bitcast i32* %2 to i8*, !dbg !11701
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11701
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11699, metadata !DIExpression()), !dbg !11702
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11703
  %5 = load volatile i32, i32* %4, align 4, !dbg !11703
  store volatile i32 %5, i32* %2, align 4, !dbg !11704
  %6 = load volatile i32, i32* %2, align 4, !dbg !11705
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11706
  %8 = load volatile i32, i32* %7, align 4, !dbg !11706
  store volatile i32 %8, i32* %2, align 4, !dbg !11707
  %9 = load volatile i32, i32* %2, align 4, !dbg !11708
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11709
  ret void, !dbg !11709
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11710 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11712, metadata !DIExpression()), !dbg !11714
  %3 = bitcast i32* %2 to i8*, !dbg !11715
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11715
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11713, metadata !DIExpression()), !dbg !11716
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11717
  %5 = load volatile i32, i32* %4, align 4, !dbg !11717
  store volatile i32 %5, i32* %2, align 4, !dbg !11718
  %6 = load volatile i32, i32* %2, align 4, !dbg !11719
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11720
  %8 = load volatile i32, i32* %7, align 4, !dbg !11720
  store volatile i32 %8, i32* %2, align 4, !dbg !11721
  %9 = load volatile i32, i32* %2, align 4, !dbg !11722
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11723
  ret void, !dbg !11723
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11724 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11726, metadata !DIExpression()), !dbg !11728
  %3 = bitcast i32* %2 to i8*, !dbg !11729
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11729
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11727, metadata !DIExpression()), !dbg !11730
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11731
  %5 = load volatile i32, i32* %4, align 4, !dbg !11731
  store volatile i32 %5, i32* %2, align 4, !dbg !11732
  %6 = load volatile i32, i32* %2, align 4, !dbg !11733
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11734
  %8 = load volatile i32, i32* %7, align 4, !dbg !11734
  store volatile i32 %8, i32* %2, align 4, !dbg !11735
  %9 = load volatile i32, i32* %2, align 4, !dbg !11736
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11737
  ret void, !dbg !11737
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !11738 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11740, metadata !DIExpression()), !dbg !11742
  %3 = bitcast i32* %2 to i8*, !dbg !11743
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11743
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11741, metadata !DIExpression()), !dbg !11744
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11745
  %5 = load volatile i32, i32* %4, align 4, !dbg !11745
  store volatile i32 %5, i32* %2, align 4, !dbg !11746
  %6 = load volatile i32, i32* %2, align 4, !dbg !11747
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11748
  %8 = load volatile i32, i32* %7, align 4, !dbg !11748
  store volatile i32 %8, i32* %2, align 4, !dbg !11749
  %9 = load volatile i32, i32* %2, align 4, !dbg !11750
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11751
  ret void, !dbg !11751
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11752 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11754, metadata !DIExpression()), !dbg !11755
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11756
  %3 = load volatile i32, i32* %2, align 4, !dbg !11756
  %4 = lshr i32 %3, 7, !dbg !11757
  %5 = and i32 %4, 1, !dbg !11757
  ret i32 %5, !dbg !11758
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #18 !dbg !11759 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11763, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.value(metadata i8 %1, metadata !11764, metadata !DIExpression()), !dbg !11765
  %3 = zext i8 %1 to i32, !dbg !11766
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11767
  store volatile i32 %3, i32* %4, align 4, !dbg !11768
  ret void, !dbg !11769
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11770 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11772, metadata !DIExpression()), !dbg !11773
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11774
  %3 = load volatile i32, i32* %2, align 4, !dbg !11774
  %4 = lshr i32 %3, 5, !dbg !11775
  %5 = and i32 %4, 1, !dbg !11775
  ret i32 %5, !dbg !11776
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #7 !dbg !11777 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11781, metadata !DIExpression()), !dbg !11782
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11783
  %3 = load volatile i32, i32* %2, align 4, !dbg !11783
  %4 = trunc i32 %3 to i8, !dbg !11784
  ret i8 %4, !dbg !11785
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11786 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11788, metadata !DIExpression()), !dbg !11794
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11795
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11795
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11795
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11789, metadata !DIExpression()), !dbg !11794
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11796
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11796
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11796
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11790, metadata !DIExpression()), !dbg !11794
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #28, !dbg !11797
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11798
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11798
  %10 = tail call fastcc zeroext i1 @device_is_ready.178(%struct.device* noundef %9) #28, !dbg !11800
  br i1 %10, label %14, label %11, !dbg !11801

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.171(i32 noundef 1) #28, !dbg !11802
  %13 = zext i8 %12 to i32, !dbg !11802
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.179, i32 0, i32 0), i32 noundef %13) #27, !dbg !11802
  br label %62, !dbg !11808

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11809
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11810
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11810
  %18 = load i8*, i8** %17, align 4, !dbg !11810
  %19 = tail call fastcc i32 @clock_control_on.180(%struct.device* noundef %15, i8* noundef %18) #28, !dbg !11811
  call void @llvm.dbg.value(metadata i32 %19, metadata !11793, metadata !DIExpression()), !dbg !11794
  %20 = icmp eq i32 %19, 0, !dbg !11812
  br i1 %20, label %24, label %21, !dbg !11814

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.171(i32 noundef 1) #28, !dbg !11815
  %23 = zext i8 %22 to i32, !dbg !11815
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.181, i32 0, i32 0), i32 noundef %23) #27, !dbg !11815
  br label %62, !dbg !11821

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11822
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11822
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #28, !dbg !11823
  call void @llvm.dbg.value(metadata i32 %27, metadata !11793, metadata !DIExpression()), !dbg !11794
  %28 = icmp slt i32 %27, 0, !dbg !11824
  br i1 %28, label %62, label %29, !dbg !11826

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11827
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11827
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #28, !dbg !11828
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11829
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #28, !dbg !11830
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11831
  %34 = load i32, i32* %33, align 4, !dbg !11831
  %35 = icmp ult i32 %34, 3, !dbg !11833
  br i1 %35, label %39, label %36, !dbg !11833

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.171(i32 noundef 2) #28, !dbg !11834
  %38 = zext i8 %37 to i32, !dbg !11834
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.182, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #27, !dbg !11834
  call void @llvm.dbg.value(metadata i32 0, metadata !11791, metadata !DIExpression()), !dbg !11794
  call void @llvm.dbg.value(metadata i32 0, metadata !11792, metadata !DIExpression()), !dbg !11794
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11833
  %41 = load i32, i32* %40, align 4, !dbg !11833
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !11833
  %43 = load i32, i32* %42, align 4, !dbg !11833
  br label %44, !dbg !11833

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11843
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11843
  call void @llvm.dbg.value(metadata i32 %46, metadata !11792, metadata !DIExpression()), !dbg !11794
  call void @llvm.dbg.value(metadata i32 %45, metadata !11791, metadata !DIExpression()), !dbg !11794
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11844
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #28, !dbg !11845
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11846
  %49 = load i8, i8* %48, align 4, !dbg !11846, !range !8107
  %50 = icmp eq i8 %49, 0, !dbg !11846
  br i1 %50, label %52, label %51, !dbg !11848

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #28, !dbg !11849
  br label %52, !dbg !11851

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11852
  %54 = load i32, i32* %53, align 4, !dbg !11852
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #28, !dbg !11853
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11854
  %56 = load i8, i8* %55, align 4, !dbg !11854, !range !8107
  %57 = icmp eq i8 %56, 0, !dbg !11854
  br i1 %57, label %60, label %58, !dbg !11856

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11857
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #28, !dbg !11859
  br label %60, !dbg !11860

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11861
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #28, !dbg !11862
  br label %62, !dbg !11863

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11794
  ret i32 %63, !dbg !11864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #14 !dbg !11865 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11869, metadata !DIExpression()), !dbg !11873
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11874
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11874
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11874
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11870, metadata !DIExpression()), !dbg !11873
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11871, metadata !DIExpression()), !dbg !11873
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11875
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11876
  ret void, !dbg !11877
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.178(%struct.device* noundef %0) unnamed_addr #1 !dbg !11878 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11882, metadata !DIExpression()), !dbg !11883
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !11884, !srcloc !11886
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.183(%struct.device* noundef %0) #28, !dbg !11887
  ret i1 %2, !dbg !11888
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.180(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11889 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11891, metadata !DIExpression()), !dbg !11894
  call void @llvm.dbg.value(metadata i8* %1, metadata !11892, metadata !DIExpression()), !dbg !11894
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11895
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11895
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11895
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11893, metadata !DIExpression()), !dbg !11894
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11896
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11896
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !11897
  ret i32 %8, !dbg !11898
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11899 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11903, metadata !DIExpression()), !dbg !11907
  call void @llvm.dbg.value(metadata i8 0, metadata !11904, metadata !DIExpression()), !dbg !11907
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11908
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #26, !dbg !11908
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11906, metadata !DIExpression(DW_OP_deref)), !dbg !11907
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !11909
  call void @llvm.dbg.value(metadata i32 %4, metadata !11905, metadata !DIExpression()), !dbg !11907
  %5 = icmp slt i32 %4, 0, !dbg !11910
  br i1 %5, label %9, label %6, !dbg !11912

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11913
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11906, metadata !DIExpression()), !dbg !11907
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #28, !dbg !11914
  br label %9, !dbg !11915

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11907
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #26, !dbg !11916
  ret i32 %10, !dbg !11916
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11917 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11919, metadata !DIExpression()), !dbg !11923
  call void @llvm.dbg.value(metadata i32 12, metadata !11920, metadata !DIExpression()), !dbg !11923
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11924

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11925, metadata !DIExpression()) #26, !dbg !11931
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #26, !dbg !11934, !srcloc !11935
  call void @llvm.dbg.value(metadata i32 %4, metadata !11930, metadata !DIExpression()) #26, !dbg !11931
  %5 = or i32 %4, 12, !dbg !11936
  call void @llvm.dbg.value(metadata i32 %5, metadata !11921, metadata !DIExpression()), !dbg !11937
  call void @llvm.dbg.value(metadata i32 %5, metadata !11938, metadata !DIExpression()) #26, !dbg !11945
  call void @llvm.dbg.value(metadata i32* %2, metadata !11943, metadata !DIExpression()) #26, !dbg !11945
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #26, !dbg !11947, !srcloc !11948
  call void @llvm.dbg.value(metadata i32 %6, metadata !11944, metadata !DIExpression()) #26, !dbg !11945
  %7 = icmp eq i32 %6, 0, !dbg !11924
  br i1 %7, label %8, label %3, !dbg !11936, !llvm.loop !11949

8:                                                ; preds = %3
  ret void, !dbg !11950
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #18 !dbg !11951 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11953, metadata !DIExpression()), !dbg !11957
  call void @llvm.dbg.value(metadata i32 %1, metadata !11954, metadata !DIExpression()), !dbg !11957
  call void @llvm.dbg.value(metadata i32 %2, metadata !11955, metadata !DIExpression()), !dbg !11957
  call void @llvm.dbg.value(metadata i32 0, metadata !11956, metadata !DIExpression()), !dbg !11957
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11958
  %5 = load volatile i32, i32* %4, align 4, !dbg !11958
  %6 = and i32 %5, -5633, !dbg !11958
  %7 = or i32 %2, %1, !dbg !11958
  %8 = or i32 %7, %6, !dbg !11958
  store volatile i32 %8, i32* %4, align 4, !dbg !11958
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11959
  %10 = load volatile i32, i32* %9, align 4, !dbg !11959
  %11 = and i32 %10, -12289, !dbg !11959
  store volatile i32 %11, i32* %9, align 4, !dbg !11959
  ret void, !dbg !11960
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !11961 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11963, metadata !DIExpression()), !dbg !11964
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11965
  %3 = load volatile i32, i32* %2, align 4, !dbg !11965
  %4 = or i32 %3, 8, !dbg !11965
  store volatile i32 %4, i32* %2, align 4, !dbg !11965
  ret void, !dbg !11966
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11967 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11971, metadata !DIExpression()), !dbg !11974
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11972, metadata !DIExpression()), !dbg !11974
  call void @llvm.dbg.value(metadata i32 0, metadata !11973, metadata !DIExpression()), !dbg !11974
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11975
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11975
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11976
  %5 = load i8, i8* %4, align 4, !dbg !11976
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !11977
  ret i32 %6, !dbg !11978
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.183(%struct.device* noundef %0) unnamed_addr #1 !dbg !11979 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11981, metadata !DIExpression()), !dbg !11982
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !11983
  ret i1 %2, !dbg !11984
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #18 !dbg !11985 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11987, metadata !DIExpression()), !dbg !11988
  tail call fastcc void @__NVIC_SetPriority.185() #28, !dbg !11989
  store i32 8399, i32* @last_load, align 4, !dbg !11990
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11991
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11992
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11993
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11994
  %3 = or i32 %2, 7, !dbg !11994
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11994
  ret i32 0, !dbg !11995
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.185() unnamed_addr #18 !dbg !11996 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11998, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.value(metadata i32 1, metadata !11999, metadata !DIExpression()), !dbg !12000
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12001
  ret void, !dbg !12004
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12005 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12007, metadata !DIExpression()), !dbg !12009
  %2 = tail call fastcc i32 @elapsed() #28, !dbg !12010
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12011
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12012
  %5 = add i32 %4, %3, !dbg !12012
  store i32 %5, i32* @cycle_count, align 4, !dbg !12012
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12013
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12014
  %7 = sub i32 %5, %6, !dbg !12017
  %8 = udiv i32 %7, 8400, !dbg !12018
  call void @llvm.dbg.value(metadata i32 %8, metadata !12008, metadata !DIExpression()), !dbg !12009
  %9 = mul nuw i32 %8, 8400, !dbg !12019
  %10 = add i32 %9, %6, !dbg !12020
  store i32 %10, i32* @announced_cycles, align 4, !dbg !12020
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !12021
  tail call void @z_arm_int_exit() #27, !dbg !12022
  ret void, !dbg !12023
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #18 !dbg !12024 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12029
  call void @llvm.dbg.value(metadata i32 %1, metadata !12026, metadata !DIExpression()), !dbg !12030
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12031
  call void @llvm.dbg.value(metadata i32 %2, metadata !12027, metadata !DIExpression()), !dbg !12030
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12032
  call void @llvm.dbg.value(metadata i32 %3, metadata !12028, metadata !DIExpression()), !dbg !12030
  %4 = and i32 %2, 65536, !dbg !12033
  %5 = icmp ne i32 %4, 0, !dbg !12033
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12035
  %8 = load i32, i32* @last_load, align 4, !dbg !12030
  br i1 %7, label %9, label %13, !dbg !12035

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12036
  %11 = add i32 %10, %8, !dbg !12036
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !12036
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12038
  br label %13, !dbg !12039

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !12040
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12041
  %16 = add i32 %14, %15, !dbg !12042
  ret i32 %16, !dbg !12043
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12048, metadata !DIExpression()), !dbg !12061
  call void @llvm.dbg.value(metadata i1 %1, metadata !12049, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12061
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12062
  br i1 %4, label %5, label %8, !dbg !12062

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12064
  %7 = and i32 %6, -2, !dbg !12064
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12064
  store i32 -16777216, i32* @last_load, align 4, !dbg !12066
  br label %60, !dbg !12067

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12068
  call void @llvm.dbg.value(metadata i32 %9, metadata !12053, metadata !DIExpression()), !dbg !12061
  br i1 %3, label %18, label %10, !dbg !12069

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12069
  call void @llvm.dbg.value(metadata i32 undef, metadata !12048, metadata !DIExpression()), !dbg !12061
  %12 = icmp slt i32 %11, 1, !dbg !12070
  br i1 %12, label %18, label %13, !dbg !12070

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !12070
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !12070
  %16 = mul nuw nsw i32 %15, 8400, !dbg !12070
  %17 = add nuw nsw i32 %16, 8399, !dbg !12070
  br label %18, !dbg !12070

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12048, metadata !DIExpression()), !dbg !12061
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12071, metadata !DIExpression()) #26, !dbg !12078
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12080, !srcloc !12086
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #26, !dbg !12087
  call void @llvm.dbg.value(metadata i32 undef, metadata !12084, metadata !DIExpression()) #26, !dbg !12087
  call void @llvm.dbg.value(metadata i32 undef, metadata !12077, metadata !DIExpression()) #26, !dbg !12078
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12088
  br i1 %21, label %23, label %22, !dbg !12091

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 148) #27, !dbg !12092
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.189, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12092
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 148) #27, !dbg !12092
  unreachable, !dbg !12092

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !12080
  call void @llvm.dbg.value(metadata i32 %24, metadata !12083, metadata !DIExpression()) #26, !dbg !12087
  call void @llvm.dbg.value(metadata i32 %24, metadata !12077, metadata !DIExpression()) #26, !dbg !12078
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12094
  call void @llvm.dbg.value(metadata i32 %24, metadata !12054, metadata !DIExpression()), !dbg !12061
  %25 = tail call fastcc i32 @elapsed() #28, !dbg !12095
  call void @llvm.dbg.value(metadata i32 %25, metadata !12059, metadata !DIExpression()), !dbg !12061
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12096
  call void @llvm.dbg.value(metadata i32 %26, metadata !12051, metadata !DIExpression()), !dbg !12061
  %27 = load i32, i32* @cycle_count, align 4, !dbg !12097
  %28 = add i32 %27, %25, !dbg !12097
  store i32 %28, i32* @cycle_count, align 4, !dbg !12097
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12098
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !12099
  %30 = sub i32 %28, %29, !dbg !12100
  call void @llvm.dbg.value(metadata i32 %30, metadata !12060, metadata !DIExpression()), !dbg !12061
  %31 = icmp slt i32 %30, 0, !dbg !12101
  br i1 %31, label %41, label %32, !dbg !12103

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !12050, metadata !DIExpression()), !dbg !12061
  call void @llvm.dbg.value(metadata i32 undef, metadata !12050, metadata !DIExpression()), !dbg !12061
  %33 = add nuw i32 %19, %30, !dbg !12104
  %34 = urem i32 %33, 8400, !dbg !12106
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !12050, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12061
  %35 = sub nuw nsw i32 %19, %34, !dbg !12107
  call void @llvm.dbg.value(metadata i32 %35, metadata !12050, metadata !DIExpression()), !dbg !12061
  %36 = icmp ugt i32 %35, 1024, !dbg !12108
  br i1 %36, label %37, label %39, !dbg !12108

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !12050, metadata !DIExpression()), !dbg !12061
  %38 = icmp ugt i32 %35, 16766400, !dbg !12109
  br i1 %38, label %41, label %39, !dbg !12111

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !12112
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12113
  call void @llvm.dbg.value(metadata i32 %43, metadata !12052, metadata !DIExpression()), !dbg !12061
  %44 = add nsw i32 %42, -1, !dbg !12114
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12115
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12116
  %45 = icmp ult i32 %26, %43, !dbg !12117
  br i1 %45, label %46, label %51, !dbg !12119

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !12120
  %48 = add i32 %26, %9, !dbg !12122
  %49 = sub i32 %48, %43, !dbg !12123
  %50 = add i32 %49, %47, !dbg !12120
  br label %55, !dbg !12124

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !12125
  %53 = load i32, i32* @cycle_count, align 4, !dbg !12127
  %54 = add i32 %52, %53, !dbg !12127
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !12128
  store i32 %56, i32* @cycle_count, align 4, !dbg !12128
  call void @llvm.dbg.value(metadata i32 undef, metadata !12129, metadata !DIExpression()) #26, !dbg !12135
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12134, metadata !DIExpression()) #26, !dbg !12135
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12137
  br i1 %57, label %59, label %58, !dbg !12140

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.190, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 194) #27, !dbg !12141
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.191, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12141
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 194) #27, !dbg !12141
  unreachable, !dbg !12141

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !12129, metadata !DIExpression()) #26, !dbg !12135
  call void @llvm.dbg.value(metadata i32 %24, metadata !12143, metadata !DIExpression()) #26, !dbg !12146
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #26, !dbg !12148, !srcloc !12149
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !12150
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12151 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12071, metadata !DIExpression()) #26, !dbg !12155
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12157, !srcloc !12086
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #26, !dbg !12159
  call void @llvm.dbg.value(metadata i32 undef, metadata !12084, metadata !DIExpression()) #26, !dbg !12159
  call void @llvm.dbg.value(metadata i32 undef, metadata !12077, metadata !DIExpression()) #26, !dbg !12155
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12160
  br i1 %2, label %4, label %3, !dbg !12161

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 148) #27, !dbg !12162
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.189, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12162
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 148) #27, !dbg !12162
  unreachable, !dbg !12162

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #26, !dbg !12159
  call void @llvm.dbg.value(metadata i32 undef, metadata !12077, metadata !DIExpression()) #26, !dbg !12155
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12163
  call void @llvm.dbg.value(metadata i32 undef, metadata !12153, metadata !DIExpression()), !dbg !12164
  %5 = tail call fastcc i32 @elapsed() #28, !dbg !12165
  %6 = load i32, i32* @cycle_count, align 4, !dbg !12166
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !12167
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !12154, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12164
  call void @llvm.dbg.value(metadata i32 undef, metadata !12129, metadata !DIExpression()) #26, !dbg !12168
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12134, metadata !DIExpression()) #26, !dbg !12168
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12170
  br i1 %8, label %10, label %9, !dbg !12171

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.190, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 194) #27, !dbg !12172
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.191, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12172
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 194) #27, !dbg !12172
  unreachable, !dbg !12172

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !12173
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !12154, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12164
  %12 = sub i32 %11, %7, !dbg !12174
  call void @llvm.dbg.value(metadata i32 %12, metadata !12154, metadata !DIExpression()), !dbg !12164
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !12157
  call void @llvm.dbg.value(metadata i32 %13, metadata !12083, metadata !DIExpression()) #26, !dbg !12159
  call void @llvm.dbg.value(metadata i32 %13, metadata !12077, metadata !DIExpression()) #26, !dbg !12155
  call void @llvm.dbg.value(metadata i32 %13, metadata !12153, metadata !DIExpression()), !dbg !12164
  call void @llvm.dbg.value(metadata i32 undef, metadata !12129, metadata !DIExpression()) #26, !dbg !12168
  call void @llvm.dbg.value(metadata i32 undef, metadata !12143, metadata !DIExpression()) #26, !dbg !12175
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #26, !dbg !12177, !srcloc !12149
  %14 = udiv i32 %12, 8400, !dbg !12178
  ret i32 %14, !dbg !12179
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12180 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12071, metadata !DIExpression()) #26, !dbg !12184
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !12186, !srcloc !12086
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #26, !dbg !12188
  call void @llvm.dbg.value(metadata i32 undef, metadata !12084, metadata !DIExpression()) #26, !dbg !12188
  call void @llvm.dbg.value(metadata i32 undef, metadata !12077, metadata !DIExpression()) #26, !dbg !12184
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12189
  br i1 %2, label %4, label %3, !dbg !12190

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 148) #27, !dbg !12191
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.189, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12191
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 148) #27, !dbg !12191
  unreachable, !dbg !12191

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12083, metadata !DIExpression()) #26, !dbg !12188
  call void @llvm.dbg.value(metadata i32 undef, metadata !12077, metadata !DIExpression()) #26, !dbg !12184
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12192
  call void @llvm.dbg.value(metadata i32 undef, metadata !12182, metadata !DIExpression()), !dbg !12193
  %5 = tail call fastcc i32 @elapsed() #28, !dbg !12194
  %6 = load i32, i32* @cycle_count, align 4, !dbg !12195
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !12183, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !12193
  call void @llvm.dbg.value(metadata i32 undef, metadata !12129, metadata !DIExpression()) #26, !dbg !12196
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12134, metadata !DIExpression()) #26, !dbg !12196
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12198
  br i1 %7, label %9, label %8, !dbg !12199

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.190, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 194) #27, !dbg !12200
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.191, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #27, !dbg !12200
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 194) #27, !dbg !12200
  unreachable, !dbg !12200

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !12201
  call void @llvm.dbg.value(metadata i32 %10, metadata !12183, metadata !DIExpression()), !dbg !12193
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !12186
  call void @llvm.dbg.value(metadata i32 %11, metadata !12083, metadata !DIExpression()) #26, !dbg !12188
  call void @llvm.dbg.value(metadata i32 %11, metadata !12077, metadata !DIExpression()) #26, !dbg !12184
  call void @llvm.dbg.value(metadata i32 %11, metadata !12182, metadata !DIExpression()), !dbg !12193
  call void @llvm.dbg.value(metadata i32 undef, metadata !12129, metadata !DIExpression()) #26, !dbg !12196
  call void @llvm.dbg.value(metadata i32 undef, metadata !12143, metadata !DIExpression()) #26, !dbg !12202
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #26, !dbg !12204, !srcloc !12149
  ret i32 %10, !dbg !12205
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #18 !dbg !12206 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12207
  %2 = icmp eq i32 %1, -16777216, !dbg !12209
  br i1 %2, label %3, label %6, !dbg !12210

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12211
  %5 = or i32 %4, 1, !dbg !12211
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12211
  br label %6, !dbg !12213

6:                                                ; preds = %3, %0
  ret void, !dbg !12214
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #18 !dbg !12215 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12216
  %2 = and i32 %1, -2, !dbg !12216
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12216
  ret void, !dbg !12217
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #17 !dbg !12218 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12244, metadata !DIExpression()), !dbg !12247
  call void @llvm.dbg.value(metadata i8 %1, metadata !12245, metadata !DIExpression()), !dbg !12247
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12246, metadata !DIExpression()), !dbg !12247
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12248
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12248
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12247
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12249
  %8 = load i8, i8* %6, align 4, !dbg !12250
  %9 = zext i8 %8 to i32, !dbg !12251
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12251
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12252
  br i1 %11, label %18, label %24, !dbg !12253

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12247
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12249
  %14 = load i8, i8* %6, align 4, !dbg !12250
  %15 = zext i8 %14 to i32, !dbg !12251
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12251
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12252
  br i1 %17, label %18, label %24, !dbg !12253, !llvm.loop !12254

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12256
  %21 = load i8, i8* %20, align 1, !dbg !12256
  %22 = icmp eq i8 %21, %1, !dbg !12259
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12260
  br i1 %22, label %24, label %12, !dbg !12261

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12247
  ret i32 %25, !dbg !12262
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12263 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12274, metadata !DIExpression()), !dbg !12290
  call void @llvm.dbg.value(metadata i8 %1, metadata !12275, metadata !DIExpression()), !dbg !12290
  call void @llvm.dbg.value(metadata i32 %2, metadata !12276, metadata !DIExpression()), !dbg !12290
  call void @llvm.dbg.value(metadata i32 0, metadata !12279, metadata !DIExpression()), !dbg !12290
  call void @llvm.dbg.value(metadata i32 0, metadata !12280, metadata !DIExpression()), !dbg !12290
  call void @llvm.dbg.value(metadata i8 0, metadata !12281, metadata !DIExpression()), !dbg !12291
  %4 = icmp eq i8 %1, 0, !dbg !12292
  br i1 %4, label %35, label %5, !dbg !12293

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12292
  br label %9, !dbg !12293

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12281, metadata !DIExpression()), !dbg !12291
  call void @llvm.dbg.value(metadata i32 %29, metadata !12279, metadata !DIExpression()), !dbg !12290
  %8 = icmp eq i32 %34, %6, !dbg !12292
  br i1 %8, label %35, label %9, !dbg !12293, !llvm.loop !12294

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12281, metadata !DIExpression()), !dbg !12291
  call void @llvm.dbg.value(metadata i32 %11, metadata !12279, metadata !DIExpression()), !dbg !12290
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12296
  %13 = load i32, i32* %12, align 4, !dbg !12296
  call void @llvm.dbg.value(metadata i32 %13, metadata !12278, metadata !DIExpression()), !dbg !12290
  %14 = and i32 %13, 31, !dbg !12297
  %15 = icmp ult i32 %14, 16, !dbg !12298
  br i1 %15, label %16, label %20, !dbg !12299

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12300
  %18 = load i32, i32* %17, align 4, !dbg !12300
  %19 = or i32 %18, 32, !dbg !12302
  call void @llvm.dbg.value(metadata i32 %19, metadata !12279, metadata !DIExpression()), !dbg !12290
  br label %28, !dbg !12303

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12304

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12305
  %23 = load i32, i32* %22, align 4, !dbg !12305
  call void @llvm.dbg.value(metadata i32 %23, metadata !12283, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12306
  %24 = lshr i32 %23, 7, !dbg !12307
  %25 = and i32 %24, 16, !dbg !12307
  %26 = or i32 %25, %23, !dbg !12307
  call void @llvm.dbg.value(metadata i32 %26, metadata !12279, metadata !DIExpression()), !dbg !12290
  br label %28, !dbg !12308

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !12290
  call void @llvm.dbg.value(metadata i32 %29, metadata !12279, metadata !DIExpression()), !dbg !12290
  %30 = lshr i32 %13, 5, !dbg !12309
  %31 = and i32 %30, 255, !dbg !12309
  call void @llvm.dbg.value(metadata i32 %31, metadata !12277, metadata !DIExpression()), !dbg !12290
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #28, !dbg !12310
  call void @llvm.dbg.value(metadata i32 %32, metadata !12280, metadata !DIExpression()), !dbg !12290
  %33 = icmp slt i32 %32, 0, !dbg !12311
  %34 = add nuw nsw i32 %10, 1, !dbg !12313
  call void @llvm.dbg.value(metadata i32 %34, metadata !12281, metadata !DIExpression()), !dbg !12291
  br i1 %33, label %35, label %7, !dbg !12314

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12315
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12316 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12320, metadata !DIExpression()), !dbg !12324
  call void @llvm.dbg.value(metadata i32 %1, metadata !12321, metadata !DIExpression()), !dbg !12324
  call void @llvm.dbg.value(metadata i32 %2, metadata !12322, metadata !DIExpression()), !dbg !12324
  %4 = icmp ugt i32 %0, 175, !dbg !12325
  br i1 %4, label %16, label %5, !dbg !12327

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12328
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12329
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12329
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12323, metadata !DIExpression()), !dbg !12324
  %9 = add nsw i32 %6, -8, !dbg !12330
  %10 = icmp ult i32 %9, 3, !dbg !12330
  br i1 %10, label %16, label %11, !dbg !12332

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.198(%struct.device* noundef %8) #28, !dbg !12333
  br i1 %12, label %13, label %16, !dbg !12334

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !12335
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !12336
  br label %16, !dbg !12337

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !12324
  ret i32 %17, !dbg !12338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.198(%struct.device* noundef %0) unnamed_addr #1 !dbg !12339 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12343, metadata !DIExpression()), !dbg !12344
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !12345, !srcloc !12347
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.199(%struct.device* noundef %0) #28, !dbg !12348
  ret i1 %2, !dbg !12349
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.199(%struct.device* noundef %0) unnamed_addr #1 !dbg !12350 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12352, metadata !DIExpression()), !dbg !12353
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12354
  ret i1 %2, !dbg !12355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !12356 {
  ret void, !dbg !12357
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #7 !dbg !12358 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12360, metadata !DIExpression()), !dbg !12365
  call void @llvm.dbg.value(metadata i32 0, metadata !12361, metadata !DIExpression()), !dbg !12365
  call void @llvm.dbg.value(metadata i32 2, metadata !12362, metadata !DIExpression()), !dbg !12365
  call void @llvm.dbg.value(metadata i32 0, metadata !12363, metadata !DIExpression()), !dbg !12365
  call void @llvm.dbg.value(metadata i32 2, metadata !12364, metadata !DIExpression()), !dbg !12365
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12366
  %2 = and i32 %1, 12, !dbg !12367
  call void @llvm.dbg.value(metadata i32 %2, metadata !12360, metadata !DIExpression()), !dbg !12365
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12368

3:                                                ; preds = %0
  br label %21, !dbg !12369

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12371
  call void @llvm.dbg.value(metadata i32 %5, metadata !12363, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12365
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12372
  %7 = and i32 %6, 63, !dbg !12373
  call void @llvm.dbg.value(metadata i32 %7, metadata !12364, metadata !DIExpression()), !dbg !12365
  %8 = and i32 %5, 4194304, !dbg !12374
  %9 = icmp eq i32 %8, 0, !dbg !12374
  %10 = select i1 %9, i32 16000000, i32 8000000
  %11 = udiv i32 %10, %7, !dbg !12376
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12376
  %13 = lshr i32 %12, 6, !dbg !12376
  %14 = and i32 %13, 511, !dbg !12376
  %15 = mul i32 %14, %11, !dbg !12376
  call void @llvm.dbg.value(metadata i32 %15, metadata !12361, metadata !DIExpression()), !dbg !12365
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12377
  %17 = lshr i32 %16, 15, !dbg !12378
  %18 = and i32 %17, 6, !dbg !12378
  %19 = add nuw nsw i32 %18, 2, !dbg !12378
  call void @llvm.dbg.value(metadata i32 %19, metadata !12362, metadata !DIExpression()), !dbg !12365
  %20 = udiv i32 %15, %19, !dbg !12379
  br label %21, !dbg !12380

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 8000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !12381
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12382
  %24 = lshr i32 %23, 4, !dbg !12383
  %25 = and i32 %24, 15, !dbg !12383
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !12384
  %27 = load i8, i8* %26, align 1, !dbg !12384
  %28 = zext i8 %27 to i32, !dbg !12384
  call void @llvm.dbg.value(metadata i32 %28, metadata !12360, metadata !DIExpression()), !dbg !12365
  %29 = lshr i32 %22, %28, !dbg !12385
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !12385
  ret void, !dbg !12386
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12387 {
  ret i32 0, !dbg !12392
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12393 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12419, metadata !DIExpression()), !dbg !12430
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12431
  br i1 %3, label %311, label %4, !dbg !12433

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12434
  %6 = load i32, i32* %5, align 4, !dbg !12434
  %7 = and i32 %6, 1, !dbg !12436
  %8 = icmp eq i32 %7, 0, !dbg !12437
  br i1 %8, label %66, label %9, !dbg !12438

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12439
  %11 = and i32 %10, 12, !dbg !12439
  %12 = icmp eq i32 %11, 4, !dbg !12442
  br i1 %12, label %21, label %13, !dbg !12443

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12444
  %15 = and i32 %14, 12, !dbg !12444
  %16 = icmp eq i32 %15, 8, !dbg !12445
  br i1 %16, label %17, label %29, !dbg !12446

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12447
  %19 = and i32 %18, 4194304, !dbg !12448
  %20 = icmp eq i32 %19, 0, !dbg !12449
  br i1 %20, label %29, label %21, !dbg !12450

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12451
  %23 = and i32 %22, 131072, !dbg !12451
  %24 = icmp eq i32 %23, 0, !dbg !12451
  br i1 %24, label %66, label %25, !dbg !12454

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12455
  %27 = load i32, i32* %26, align 4, !dbg !12455
  %28 = icmp eq i32 %27, 0, !dbg !12456
  br i1 %28, label %311, label %66, !dbg !12457

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12458
  %31 = load i32, i32* %30, align 4, !dbg !12458
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12462

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12463
  %34 = or i32 %33, 65536, !dbg !12463
  br label %45, !dbg !12463

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12465
  %37 = or i32 %36, 262144, !dbg !12465
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12465
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12465
  %39 = or i32 %38, 65536, !dbg !12465
  br label %45, !dbg !12465

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12468
  %42 = and i32 %41, -65537, !dbg !12468
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12468
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12468
  %44 = and i32 %43, -262145, !dbg !12468
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12470
  %47 = load i32, i32* %30, align 4, !dbg !12471
  %48 = icmp eq i32 %47, 0, !dbg !12473
  %49 = tail call i32 @HAL_GetTick() #27, !dbg !12474
  call void @llvm.dbg.value(metadata i32 %49, metadata !12420, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 %49, metadata !12420, metadata !DIExpression()), !dbg !12430
  br i1 %48, label %58, label %50, !dbg !12475

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12476
  %52 = and i32 %51, 131072, !dbg !12478
  %53 = icmp eq i32 %52, 0, !dbg !12478
  br i1 %53, label %54, label %66, !dbg !12479

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #27, !dbg !12480
  %56 = sub i32 %55, %49, !dbg !12483
  %57 = icmp ugt i32 %56, 100, !dbg !12484
  br i1 %57, label %311, label %50, !dbg !12485, !llvm.loop !12486

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12488
  %60 = and i32 %59, 131072, !dbg !12488
  %61 = icmp eq i32 %60, 0, !dbg !12488
  br i1 %61, label %66, label %62, !dbg !12490

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !12491
  %64 = sub i32 %63, %49, !dbg !12494
  %65 = icmp ugt i32 %64, 100, !dbg !12495
  br i1 %65, label %311, label %58, !dbg !12496, !llvm.loop !12497

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12499
  %68 = and i32 %67, 2, !dbg !12501
  %69 = icmp eq i32 %68, 0, !dbg !12502
  br i1 %69, label %121, label %70, !dbg !12503

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12504
  %72 = and i32 %71, 12, !dbg !12504
  %73 = icmp eq i32 %72, 0, !dbg !12507
  br i1 %73, label %82, label %74, !dbg !12508

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12509
  %76 = and i32 %75, 12, !dbg !12509
  %77 = icmp eq i32 %76, 8, !dbg !12510
  br i1 %77, label %78, label %90, !dbg !12511

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12512
  %80 = and i32 %79, 4194304, !dbg !12513
  %81 = icmp eq i32 %80, 0, !dbg !12514
  br i1 %81, label %82, label %90, !dbg !12515

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12516
  %84 = and i32 %83, 2, !dbg !12516
  %85 = icmp eq i32 %84, 0, !dbg !12516
  br i1 %85, label %114, label %86, !dbg !12519

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12520
  %88 = load i32, i32* %87, align 4, !dbg !12520
  %89 = icmp eq i32 %88, 1, !dbg !12521
  br i1 %89, label %114, label %311, !dbg !12522

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12523
  %92 = load i32, i32* %91, align 4, !dbg !12523
  %93 = icmp eq i32 %92, 0, !dbg !12526
  br i1 %93, label %104, label %94, !dbg !12527

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12528
  %95 = tail call i32 @HAL_GetTick() #27, !dbg !12530
  call void @llvm.dbg.value(metadata i32 %95, metadata !12420, metadata !DIExpression()), !dbg !12430
  br label %96, !dbg !12531

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12532
  %98 = and i32 %97, 2, !dbg !12533
  %99 = icmp eq i32 %98, 0, !dbg !12533
  br i1 %99, label %100, label %114, !dbg !12531

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #27, !dbg !12534
  %102 = sub i32 %101, %95, !dbg !12537
  %103 = icmp ugt i32 %102, 2, !dbg !12538
  br i1 %103, label %311, label %96, !dbg !12539, !llvm.loop !12540

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12542
  %105 = tail call i32 @HAL_GetTick() #27, !dbg !12544
  call void @llvm.dbg.value(metadata i32 %105, metadata !12420, metadata !DIExpression()), !dbg !12430
  br label %106, !dbg !12545

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12546
  %108 = and i32 %107, 2, !dbg !12546
  %109 = icmp eq i32 %108, 0, !dbg !12546
  br i1 %109, label %121, label %110, !dbg !12545

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !12547
  %112 = sub i32 %111, %105, !dbg !12550
  %113 = icmp ugt i32 %112, 2, !dbg !12551
  br i1 %113, label %311, label %106, !dbg !12552, !llvm.loop !12553

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12555
  %116 = and i32 %115, -249, !dbg !12555
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12555
  %118 = load i32, i32* %117, align 4, !dbg !12555
  %119 = shl i32 %118, 3, !dbg !12555
  %120 = or i32 %119, %116, !dbg !12555
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12555
  br label %121, !dbg !12556

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12556
  %123 = and i32 %122, 8, !dbg !12558
  %124 = icmp eq i32 %123, 0, !dbg !12559
  br i1 %124, label %149, label %125, !dbg !12560

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12561
  %127 = load i32, i32* %126, align 4, !dbg !12561
  %128 = icmp eq i32 %127, 0, !dbg !12564
  br i1 %128, label %139, label %129, !dbg !12565

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12566
  %130 = tail call i32 @HAL_GetTick() #27, !dbg !12568
  call void @llvm.dbg.value(metadata i32 %130, metadata !12420, metadata !DIExpression()), !dbg !12430
  br label %131, !dbg !12569

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12570
  %133 = and i32 %132, 2, !dbg !12571
  %134 = icmp eq i32 %133, 0, !dbg !12571
  br i1 %134, label %135, label %149, !dbg !12569

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #27, !dbg !12572
  %137 = sub i32 %136, %130, !dbg !12575
  %138 = icmp ugt i32 %137, 2, !dbg !12576
  br i1 %138, label %311, label %131, !dbg !12577, !llvm.loop !12578

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12580
  %140 = tail call i32 @HAL_GetTick() #27, !dbg !12582
  call void @llvm.dbg.value(metadata i32 %140, metadata !12420, metadata !DIExpression()), !dbg !12430
  br label %141, !dbg !12583

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12584
  %143 = and i32 %142, 2, !dbg !12584
  %144 = icmp eq i32 %143, 0, !dbg !12584
  br i1 %144, label %149, label %145, !dbg !12583

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !12585
  %147 = sub i32 %146, %140, !dbg !12588
  %148 = icmp ugt i32 %147, 2, !dbg !12589
  br i1 %148, label %311, label %141, !dbg !12590, !llvm.loop !12591

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12593
  %151 = and i32 %150, 4, !dbg !12594
  %152 = icmp eq i32 %151, 0, !dbg !12595
  br i1 %152, label %221, label %153, !dbg !12596

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12422, metadata !DIExpression()), !dbg !12597
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12598
  %155 = and i32 %154, 268435456, !dbg !12598
  %156 = icmp eq i32 %155, 0, !dbg !12598
  br i1 %156, label %157, label %164, !dbg !12599

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12600
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12600
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12426, metadata !DIExpression()), !dbg !12600
  store volatile i32 0, i32* %2, align 4, !dbg !12600
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12600
  %160 = or i32 %159, 268435456, !dbg !12600
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12600
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12600
  %162 = and i32 %161, 268435456, !dbg !12600
  store volatile i32 %162, i32* %2, align 4, !dbg !12600
  %163 = load volatile i32, i32* %2, align 4, !dbg !12600
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12601
  call void @llvm.dbg.value(metadata i32 1, metadata !12422, metadata !DIExpression()), !dbg !12597
  br label %164, !dbg !12602

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12422, metadata !DIExpression()), !dbg !12597
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12603
  %166 = and i32 %165, 256, !dbg !12603
  %167 = icmp eq i32 %166, 0, !dbg !12603
  br i1 %167, label %168, label %180, !dbg !12605

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12606
  %170 = or i32 %169, 256, !dbg !12606
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12606
  %171 = tail call i32 @HAL_GetTick() #27, !dbg !12608
  call void @llvm.dbg.value(metadata i32 %171, metadata !12420, metadata !DIExpression()), !dbg !12430
  br label %172, !dbg !12609

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12610
  %174 = and i32 %173, 256, !dbg !12610
  %175 = icmp eq i32 %174, 0, !dbg !12610
  br i1 %175, label %176, label %180, !dbg !12609

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #27, !dbg !12611
  %178 = sub i32 %177, %171, !dbg !12614
  %179 = icmp ugt i32 %178, 2, !dbg !12615
  br i1 %179, label %311, label %172, !dbg !12616, !llvm.loop !12617

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12619
  %182 = load i32, i32* %181, align 4, !dbg !12619
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12622

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12623
  %185 = or i32 %184, 1, !dbg !12623
  br label %196, !dbg !12623

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12625
  %188 = or i32 %187, 4, !dbg !12625
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12625
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12625
  %190 = or i32 %189, 1, !dbg !12625
  br label %196, !dbg !12625

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12628
  %193 = and i32 %192, -2, !dbg !12628
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12628
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12628
  %195 = and i32 %194, -5, !dbg !12628
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12630
  %198 = load i32, i32* %181, align 4, !dbg !12631
  %199 = icmp eq i32 %198, 0, !dbg !12633
  %200 = tail call i32 @HAL_GetTick() #27, !dbg !12634
  call void @llvm.dbg.value(metadata i32 %200, metadata !12420, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 %200, metadata !12420, metadata !DIExpression()), !dbg !12430
  br i1 %199, label %209, label %201, !dbg !12635

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12636
  %203 = and i32 %202, 2, !dbg !12638
  %204 = icmp eq i32 %203, 0, !dbg !12638
  br i1 %204, label %205, label %217, !dbg !12639

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !12640
  %207 = sub i32 %206, %200, !dbg !12643
  %208 = icmp ugt i32 %207, 5000, !dbg !12644
  br i1 %208, label %311, label %201, !dbg !12645, !llvm.loop !12646

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12648
  %211 = and i32 %210, 2, !dbg !12648
  %212 = icmp eq i32 %211, 0, !dbg !12648
  br i1 %212, label %217, label %213, !dbg !12650

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #27, !dbg !12651
  %215 = sub i32 %214, %200, !dbg !12654
  %216 = icmp ugt i32 %215, 5000, !dbg !12655
  br i1 %216, label %311, label %209, !dbg !12656, !llvm.loop !12657

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12659

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12660
  %220 = and i32 %219, -268435457, !dbg !12660
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12660
  br label %221, !dbg !12663

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12664
  %223 = load i32, i32* %222, align 4, !dbg !12664
  %224 = icmp eq i32 %223, 0, !dbg !12666
  br i1 %224, label %310, label %225, !dbg !12667

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12668
  %227 = and i32 %226, 12, !dbg !12668
  %228 = icmp eq i32 %227, 8, !dbg !12671
  br i1 %228, label %277, label %229, !dbg !12672

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12673
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12676
  %231 = tail call i32 @HAL_GetTick() #27, !dbg !12676
  call void @llvm.dbg.value(metadata i32 %231, metadata !12420, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.value(metadata i32 %231, metadata !12420, metadata !DIExpression()), !dbg !12430
  br i1 %230, label %232, label %269, !dbg !12677

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12678
  %234 = and i32 %233, 33554432, !dbg !12678
  %235 = icmp eq i32 %234, 0, !dbg !12678
  br i1 %235, label %240, label %236, !dbg !12680

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #27, !dbg !12681
  %238 = sub i32 %237, %231, !dbg !12684
  %239 = icmp ugt i32 %238, 2, !dbg !12685
  br i1 %239, label %311, label %232, !dbg !12686, !llvm.loop !12687

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12689
  %242 = load i32, i32* %241, align 4, !dbg !12689
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12689
  %244 = load i32, i32* %243, align 4, !dbg !12689
  %245 = or i32 %244, %242, !dbg !12689
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12689
  %247 = load i32, i32* %246, align 4, !dbg !12689
  %248 = shl i32 %247, 6, !dbg !12689
  %249 = or i32 %245, %248, !dbg !12689
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12689
  %251 = load i32, i32* %250, align 4, !dbg !12689
  %252 = shl i32 %251, 15, !dbg !12689
  %253 = add i32 %252, -65536, !dbg !12689
  %254 = and i32 %253, -65536, !dbg !12689
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12689
  %256 = load i32, i32* %255, align 4, !dbg !12689
  %257 = shl i32 %256, 24, !dbg !12689
  %258 = or i32 %249, %257, !dbg !12689
  %259 = or i32 %258, %254, !dbg !12689
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12689
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12690
  %260 = tail call i32 @HAL_GetTick() #27, !dbg !12691
  call void @llvm.dbg.value(metadata i32 %260, metadata !12420, metadata !DIExpression()), !dbg !12430
  br label %261, !dbg !12692

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12693
  %263 = and i32 %262, 33554432, !dbg !12694
  %264 = icmp eq i32 %263, 0, !dbg !12694
  br i1 %264, label %265, label %310, !dbg !12692

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #27, !dbg !12695
  %267 = sub i32 %266, %260, !dbg !12698
  %268 = icmp ugt i32 %267, 2, !dbg !12699
  br i1 %268, label %311, label %261, !dbg !12700, !llvm.loop !12701

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12703
  %271 = and i32 %270, 33554432, !dbg !12703
  %272 = icmp eq i32 %271, 0, !dbg !12703
  br i1 %272, label %310, label %273, !dbg !12705

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #27, !dbg !12706
  %275 = sub i32 %274, %231, !dbg !12709
  %276 = icmp ugt i32 %275, 2, !dbg !12710
  br i1 %276, label %311, label %269, !dbg !12711, !llvm.loop !12712

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12714
  br i1 %278, label %311, label %279, !dbg !12717

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12718
  call void @llvm.dbg.value(metadata i32 %280, metadata !12421, metadata !DIExpression()), !dbg !12430
  %281 = and i32 %280, 4194304, !dbg !12720
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12722
  %283 = load i32, i32* %282, align 4, !dbg !12722
  %284 = icmp eq i32 %281, %283, !dbg !12723
  br i1 %284, label %285, label %311, !dbg !12724

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12725
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12726
  %288 = load i32, i32* %287, align 4, !dbg !12726
  %289 = icmp eq i32 %286, %288, !dbg !12727
  br i1 %289, label %290, label %311, !dbg !12728

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12729
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12730
  %293 = load i32, i32* %292, align 4, !dbg !12730
  %294 = shl i32 %293, 6, !dbg !12731
  %295 = icmp eq i32 %291, %294, !dbg !12732
  br i1 %295, label %296, label %311, !dbg !12733

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12734
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12735
  %299 = load i32, i32* %298, align 4, !dbg !12735
  %300 = shl i32 %299, 15, !dbg !12736
  %301 = add i32 %300, -65536, !dbg !12736
  %302 = and i32 %301, -65536, !dbg !12736
  %303 = icmp eq i32 %297, %302, !dbg !12737
  br i1 %303, label %304, label %311, !dbg !12738

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12739
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12740
  %307 = load i32, i32* %306, align 4, !dbg !12740
  %308 = shl i32 %307, 24, !dbg !12741
  %309 = icmp eq i32 %305, %308, !dbg !12742
  br i1 %309, label %310, label %311, !dbg !12743

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12744

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12430
  ret i32 %312, !dbg !12745
}

; Function Attrs: optsize
declare !dbg !12746 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.msg* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12748 {
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !12761, metadata !DIExpression()), !dbg !12764
  call void @llvm.dbg.value(metadata i32 %1, metadata !12762, metadata !DIExpression()), !dbg !12764
  %3 = icmp eq %struct.msg* %0, null, !dbg !12765
  br i1 %3, label %115, label %4, !dbg !12767

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12768
  %6 = and i32 %5, 7, !dbg !12768
  %7 = icmp ult i32 %6, %1, !dbg !12770
  br i1 %7, label %8, label %13, !dbg !12771

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12772
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12772
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12774
  %11 = and i32 %10, 7, !dbg !12774
  %12 = icmp eq i32 %11, %1, !dbg !12776
  br i1 %12, label %13, label %115, !dbg !12777

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 0, !dbg !12778
  %15 = load i32, i32* %14, align 4, !dbg !12778
  %16 = and i32 %15, 2, !dbg !12780
  %17 = icmp eq i32 %16, 0, !dbg !12781
  br i1 %17, label %39, label %18, !dbg !12782

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12783
  %20 = icmp eq i32 %19, 0, !dbg !12786
  br i1 %20, label %25, label %21, !dbg !12787

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12788
  %23 = or i32 %22, 7168, !dbg !12788
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12788
  %24 = load i32, i32* %14, align 4, !dbg !12790
  br label %25, !dbg !12792

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12790
  %27 = and i32 %26, 8, !dbg !12793
  %28 = icmp eq i32 %27, 0, !dbg !12794
  br i1 %28, label %32, label %29, !dbg !12795

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12796
  %31 = or i32 %30, 57344, !dbg !12796
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12796
  br label %32, !dbg !12798

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12799
  %34 = and i32 %33, -241, !dbg !12799
  %35 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 2, !dbg !12799
  %36 = load i32, i32* %35, align 4, !dbg !12799
  %37 = or i32 %34, %36, !dbg !12799
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12799
  %38 = load i32, i32* %14, align 4, !dbg !12800
  br label %39, !dbg !12802

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12800
  %41 = and i32 %40, 1, !dbg !12803
  %42 = icmp eq i32 %41, 0, !dbg !12804
  br i1 %42, label %73, label %43, !dbg !12805

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 1, !dbg !12806
  %45 = load i32, i32* %44, align 4, !dbg !12806
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12809

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12810
  %48 = and i32 %47, 131072, !dbg !12813
  %49 = icmp eq i32 %48, 0, !dbg !12813
  br i1 %49, label %115, label %58, !dbg !12814

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12815
  %52 = and i32 %51, 33554432, !dbg !12819
  %53 = icmp eq i32 %52, 0, !dbg !12819
  br i1 %53, label %115, label %58, !dbg !12820

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12821
  %56 = and i32 %55, 2, !dbg !12824
  %57 = icmp eq i32 %56, 0, !dbg !12824
  br i1 %57, label %115, label %58, !dbg !12825

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12826
  %60 = and i32 %59, -4, !dbg !12826
  %61 = or i32 %60, %45, !dbg !12826
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12826
  %62 = tail call i32 @HAL_GetTick() #27, !dbg !12827
  call void @llvm.dbg.value(metadata i32 %62, metadata !12763, metadata !DIExpression()), !dbg !12764
  br label %63, !dbg !12828

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12829
  %65 = and i32 %64, 12, !dbg !12829
  %66 = load i32, i32* %44, align 4, !dbg !12830
  %67 = shl i32 %66, 2, !dbg !12831
  %68 = icmp eq i32 %65, %67, !dbg !12832
  br i1 %68, label %73, label %69, !dbg !12828

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #27, !dbg !12833
  %71 = sub i32 %70, %62, !dbg !12836
  %72 = icmp ugt i32 %71, 5000, !dbg !12837
  br i1 %72, label %115, label %63, !dbg !12838, !llvm.loop !12839

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12841
  %75 = and i32 %74, 7, !dbg !12841
  %76 = icmp ugt i32 %75, %1, !dbg !12843
  br i1 %76, label %77, label %82, !dbg !12844

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12845
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12845
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12847
  %80 = and i32 %79, 7, !dbg !12847
  %81 = icmp eq i32 %80, %1, !dbg !12849
  br i1 %81, label %82, label %115, !dbg !12850

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12851
  %84 = and i32 %83, 4, !dbg !12853
  %85 = icmp eq i32 %84, 0, !dbg !12854
  br i1 %85, label %93, label %86, !dbg !12855

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12856
  %88 = and i32 %87, -7169, !dbg !12856
  %89 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 3, !dbg !12856
  %90 = load i32, i32* %89, align 4, !dbg !12856
  %91 = or i32 %88, %90, !dbg !12856
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12856
  %92 = load i32, i32* %14, align 4, !dbg !12858
  br label %93, !dbg !12860

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12858
  %95 = and i32 %94, 8, !dbg !12861
  %96 = icmp eq i32 %95, 0, !dbg !12862
  br i1 %96, label %104, label %97, !dbg !12863

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12864
  %99 = and i32 %98, -57345, !dbg !12864
  %100 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 4, !dbg !12864
  %101 = load i32, i32* %100, align 4, !dbg !12864
  %102 = shl i32 %101, 3, !dbg !12864
  %103 = or i32 %102, %99, !dbg !12864
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12864
  br label %104, !dbg !12866

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #28, !dbg !12867
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12868
  %107 = lshr i32 %106, 4, !dbg !12869
  %108 = and i32 %107, 15, !dbg !12869
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12870
  %110 = load i8, i8* %109, align 1, !dbg !12870
  %111 = zext i8 %110 to i32, !dbg !12870
  %112 = lshr i32 %105, %111, !dbg !12871
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12872
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12873
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #27, !dbg !12874
  br label %115, !dbg !12875

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12764
  ret i32 %116, !dbg !12876
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12877 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12879, metadata !DIExpression()), !dbg !12883
  call void @llvm.dbg.value(metadata i32 0, metadata !12880, metadata !DIExpression()), !dbg !12883
  call void @llvm.dbg.value(metadata i32 0, metadata !12881, metadata !DIExpression()), !dbg !12883
  call void @llvm.dbg.value(metadata i32 0, metadata !12882, metadata !DIExpression()), !dbg !12883
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12884
  %2 = and i32 %1, 12, !dbg !12885
  switch i32 %2, label %29 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12886

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !12882, metadata !DIExpression()), !dbg !12883
  br label %29, !dbg !12887

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12890
  %6 = and i32 %5, 63, !dbg !12892
  call void @llvm.dbg.value(metadata i32 %6, metadata !12879, metadata !DIExpression()), !dbg !12883
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12893
  %8 = and i32 %7, 4194304, !dbg !12893
  %9 = icmp eq i32 %8, 0, !dbg !12895
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12896
  %11 = lshr i32 %10, 6, !dbg !12896
  %12 = and i32 %11, 511, !dbg !12896
  br i1 %9, label %16, label %13, !dbg !12897

13:                                               ; preds = %4
  %14 = mul nuw i32 %12, 8000000, !dbg !12898
  %15 = udiv i32 %14, %6, !dbg !12900
  call void @llvm.dbg.value(metadata i32 %15, metadata !12880, metadata !DIExpression()), !dbg !12883
  br label %22, !dbg !12901

16:                                               ; preds = %4
  %17 = zext i32 %12 to i64, !dbg !12902
  %18 = mul nuw nsw i64 %17, 16000000, !dbg !12904
  %19 = zext i32 %6 to i64, !dbg !12905
  %20 = udiv i64 %18, %19, !dbg !12906
  %21 = trunc i64 %20 to i32, !dbg !12907
  call void @llvm.dbg.value(metadata i32 %21, metadata !12880, metadata !DIExpression()), !dbg !12883
  br label %22

22:                                               ; preds = %16, %13
  %23 = phi i32 [ %15, %13 ], [ %21, %16 ], !dbg !12896
  call void @llvm.dbg.value(metadata i32 %23, metadata !12880, metadata !DIExpression()), !dbg !12883
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12908
  %25 = lshr i32 %24, 15, !dbg !12909
  %26 = and i32 %25, 6, !dbg !12909
  %27 = add nuw nsw i32 %26, 2, !dbg !12909
  call void @llvm.dbg.value(metadata i32 %27, metadata !12881, metadata !DIExpression()), !dbg !12883
  %28 = udiv i32 %23, %27, !dbg !12910
  call void @llvm.dbg.value(metadata i32 %28, metadata !12882, metadata !DIExpression()), !dbg !12883
  br label %29, !dbg !12911

29:                                               ; preds = %0, %22, %3
  %30 = phi i32 [ %28, %22 ], [ 8000000, %3 ], [ 16000000, %0 ], !dbg !12912
  call void @llvm.dbg.value(metadata i32 %30, metadata !12882, metadata !DIExpression()), !dbg !12883
  ret i32 %30, !dbg !12913
}

; Function Attrs: optsize
declare !dbg !12914 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12917 {
  %4 = alloca %struct.msg, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12921, metadata !DIExpression()), !dbg !12941
  call void @llvm.dbg.value(metadata i32 %1, metadata !12922, metadata !DIExpression()), !dbg !12941
  call void @llvm.dbg.value(metadata i32 %2, metadata !12923, metadata !DIExpression()), !dbg !12941
  %7 = bitcast %struct.msg* %4 to i8*, !dbg !12942
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #26, !dbg !12942
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !12924, metadata !DIExpression()), !dbg !12943
  %8 = icmp eq i32 %0, 0, !dbg !12944
  br i1 %8, label %9, label %23, !dbg !12945

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12946
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12946
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12934, metadata !DIExpression()), !dbg !12946
  store volatile i32 0, i32* %5, align 4, !dbg !12946
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12946
  %12 = or i32 %11, 1, !dbg !12946
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12946
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12946
  %14 = and i32 %13, 1, !dbg !12946
  store volatile i32 %14, i32* %5, align 4, !dbg !12946
  %15 = load volatile i32, i32* %5, align 4, !dbg !12946
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12947
  %16 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0, !dbg !12948
  store i32 256, i32* %16, align 4, !dbg !12949
  %17 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1, !dbg !12950
  store i32 2, i32* %17, align 4, !dbg !12951
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 3, !dbg !12952
  store i32 3, i32* %18, align 4, !dbg !12953
  %19 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 2, !dbg !12954
  store i32 0, i32* %19, align 4, !dbg !12955
  %20 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4, !dbg !12956
  store i32 0, i32* %20, align 4, !dbg !12957
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.msg* noundef nonnull %4) #27, !dbg !12958
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12959
  %22 = and i32 %21, -123731969, !dbg !12959
  br label %38, !dbg !12960

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !12961
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !12961
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12938, metadata !DIExpression()), !dbg !12961
  store volatile i32 0, i32* %6, align 4, !dbg !12961
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12961
  %26 = or i32 %25, 4, !dbg !12961
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12961
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12961
  %28 = and i32 %27, 4, !dbg !12961
  store volatile i32 %28, i32* %6, align 4, !dbg !12961
  %29 = load volatile i32, i32* %6, align 4, !dbg !12961
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !12962
  %30 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0, !dbg !12963
  store i32 512, i32* %30, align 4, !dbg !12964
  %31 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1, !dbg !12965
  store i32 2, i32* %31, align 4, !dbg !12966
  %32 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 3, !dbg !12967
  store i32 3, i32* %32, align 4, !dbg !12968
  %33 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 2, !dbg !12969
  store i32 0, i32* %33, align 4, !dbg !12970
  %34 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4, !dbg !12971
  store i32 0, i32* %34, align 4, !dbg !12972
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.msg* noundef nonnull %4) #27, !dbg !12973
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12974
  %36 = and i32 %35, 134217727, !dbg !12974
  %37 = shl i32 %2, 3, !dbg !12974
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !12975
  %42 = or i32 %41, %40, !dbg !12975
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12975
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #26, !dbg !12976
  ret void, !dbg !12976
}

; Function Attrs: optsize
declare !dbg !12977 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.msg* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #18 !dbg !12981 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12982
  ret void, !dbg !12983
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #18 !dbg !12984 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12985
  ret void, !dbg !12986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #13 !dbg !12987 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12988
  ret i32 %1, !dbg !12989
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #7 !dbg !12990 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #28, !dbg !12991
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12992
  %3 = lshr i32 %2, 10, !dbg !12993
  %4 = and i32 %3, 7, !dbg !12993
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12994
  %6 = load i8, i8* %5, align 1, !dbg !12994
  %7 = zext i8 %6 to i32, !dbg !12994
  %8 = lshr i32 %1, %7, !dbg !12995
  ret i32 %8, !dbg !12996
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #7 !dbg !12997 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #28, !dbg !12998
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12999
  %3 = lshr i32 %2, 13, !dbg !13000
  %4 = and i32 %3, 7, !dbg !13000
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13001
  %6 = load i8, i8* %5, align 1, !dbg !13001
  %7 = zext i8 %6 to i32, !dbg !13001
  %8 = lshr i32 %1, %7, !dbg !13002
  ret i32 %8, !dbg !13003
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !13004 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13008, metadata !DIExpression()), !dbg !13009
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13010
  store i32 15, i32* %2, align 4, !dbg !13011
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13012
  %4 = and i32 %3, 262144, !dbg !13014
  %5 = icmp eq i32 %4, 0, !dbg !13015
  br i1 %5, label %8, label %6, !dbg !13016

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13017
  store i32 327680, i32* %7, align 4, !dbg !13019
  br label %15, !dbg !13020

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13021
  %10 = and i32 %9, 65536, !dbg !13023
  %11 = icmp eq i32 %10, 0, !dbg !13024
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13025
  br i1 %11, label %14, label %13, !dbg !13026

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !13027
  br label %15, !dbg !13029

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13030
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13032
  %17 = and i32 %16, 1, !dbg !13034
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13035
  store i32 %17, i32* %18, align 4, !dbg !13037
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13038
  %20 = lshr i32 %19, 3, !dbg !13039
  %21 = and i32 %20, 31, !dbg !13039
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13040
  store i32 %21, i32* %22, align 4, !dbg !13041
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13042
  %24 = and i32 %23, 4, !dbg !13044
  %25 = icmp eq i32 %24, 0, !dbg !13045
  br i1 %25, label %28, label %26, !dbg !13046

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13047
  store i32 5, i32* %27, align 4, !dbg !13049
  br label %35, !dbg !13050

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13051
  %30 = and i32 %29, 1, !dbg !13053
  %31 = icmp eq i32 %30, 0, !dbg !13054
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13055
  br i1 %31, label %34, label %33, !dbg !13056

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !13057
  br label %35, !dbg !13059

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !13060
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13062
  %37 = and i32 %36, 1, !dbg !13064
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13065
  store i32 %37, i32* %38, align 4, !dbg !13067
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13068
  %40 = and i32 %39, 16777216, !dbg !13070
  %41 = icmp eq i32 %40, 0, !dbg !13071
  %42 = select i1 %41, i32 1, i32 2, !dbg !13072
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13073
  store i32 %42, i32* %43, align 4, !dbg !13075
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13076
  %45 = and i32 %44, 4194304, !dbg !13077
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13078
  store i32 %45, i32* %46, align 4, !dbg !13079
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13080
  %48 = and i32 %47, 63, !dbg !13081
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13082
  store i32 %48, i32* %49, align 4, !dbg !13083
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13084
  %51 = lshr i32 %50, 6, !dbg !13085
  %52 = and i32 %51, 511, !dbg !13085
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13086
  store i32 %52, i32* %53, align 4, !dbg !13087
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13088
  %55 = shl i32 %54, 1, !dbg !13089
  %56 = and i32 %55, 393216, !dbg !13089
  %57 = add nuw nsw i32 %56, 131072, !dbg !13089
  %58 = lshr exact i32 %57, 16, !dbg !13090
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13091
  store i32 %58, i32* %59, align 4, !dbg !13092
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13093
  %61 = lshr i32 %60, 24, !dbg !13094
  %62 = and i32 %61, 15, !dbg !13094
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13095
  store i32 %62, i32* %63, align 4, !dbg !13096
  ret void, !dbg !13097
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.msg* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !13098 {
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !13102, metadata !DIExpression()), !dbg !13104
  call void @llvm.dbg.value(metadata i32* %1, metadata !13103, metadata !DIExpression()), !dbg !13104
  %3 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 0, !dbg !13105
  store i32 15, i32* %3, align 4, !dbg !13106
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13107
  %5 = and i32 %4, 3, !dbg !13108
  %6 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 1, !dbg !13109
  store i32 %5, i32* %6, align 4, !dbg !13110
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13111
  %8 = and i32 %7, 240, !dbg !13112
  %9 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 2, !dbg !13113
  store i32 %8, i32* %9, align 4, !dbg !13114
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13115
  %11 = and i32 %10, 7168, !dbg !13116
  %12 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 3, !dbg !13117
  store i32 %11, i32* %12, align 4, !dbg !13118
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13119
  %14 = lshr i32 %13, 3, !dbg !13120
  %15 = and i32 %14, 7168, !dbg !13120
  %16 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 4, !dbg !13121
  store i32 %15, i32* %16, align 4, !dbg !13122
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13123
  %18 = and i32 %17, 7, !dbg !13124
  store i32 %18, i32* %1, align 4, !dbg !13125
  ret void, !dbg !13126
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !13127 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13128
  %2 = and i32 %1, 128, !dbg !13128
  %3 = icmp eq i32 %2, 0, !dbg !13128
  br i1 %3, label %5, label %4, !dbg !13130

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #28, !dbg !13131
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !13133
  br label %5, !dbg !13134

5:                                                ; preds = %4, %0
  ret void, !dbg !13135
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !13136 {
  ret void, !dbg !13137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #18 !dbg !13138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13141, metadata !DIExpression()), !dbg !13142
  tail call fastcc void @LL_InitTick(i32 noundef %0) #28, !dbg !13143
  ret void, !dbg !13144
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #18 !dbg !13145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13148, metadata !DIExpression()), !dbg !13150
  call void @llvm.dbg.value(metadata i32 1000, metadata !13149, metadata !DIExpression()), !dbg !13150
  %2 = udiv i32 %0, 1000, !dbg !13151
  %3 = add nsw i32 %2, -1, !dbg !13152
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13153
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13154
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13155
  ret void, !dbg !13156
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #21 !dbg !13157 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13159, metadata !DIExpression()), !dbg !13161
  %3 = bitcast i32* %2 to i8*, !dbg !13162
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13162
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13160, metadata !DIExpression()), !dbg !13163
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13164
  store volatile i32 %4, i32* %2, align 4, !dbg !13163
  %5 = load volatile i32, i32* %2, align 4, !dbg !13165
  %6 = icmp eq i32 %0, -1, !dbg !13166
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13159, metadata !DIExpression()), !dbg !13161
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13161
  call void @llvm.dbg.value(metadata i32 %8, metadata !13159, metadata !DIExpression()), !dbg !13161
  br label %9, !dbg !13168

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13159, metadata !DIExpression()), !dbg !13161
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13169
  call void @llvm.dbg.value(metadata i32 undef, metadata !13159, metadata !DIExpression()), !dbg !13161
  %12 = shl i32 %11, 15, !dbg !13161
  %13 = ashr i32 %12, 31, !dbg !13161
  %14 = add i32 %13, %10, !dbg !13161
  call void @llvm.dbg.value(metadata i32 %14, metadata !13159, metadata !DIExpression()), !dbg !13161
  %15 = icmp eq i32 %14, 0, !dbg !13168
  br i1 %15, label %16, label %9, !dbg !13168

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13172
  ret void, !dbg !13172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #12 !dbg !13173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13175, metadata !DIExpression()), !dbg !13176
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13177
  ret void, !dbg !13178
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #18 !dbg !13179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13184, metadata !DIExpression()), !dbg !13189
  call void @llvm.dbg.value(metadata i32 0, metadata !13187, metadata !DIExpression()), !dbg !13189
  call void @llvm.dbg.value(metadata i32 0, metadata !13188, metadata !DIExpression()), !dbg !13189
  %2 = icmp eq i32 %0, 0, !dbg !13190
  br i1 %2, label %50, label %3, !dbg !13192

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #28, !dbg !13193
  %5 = icmp eq i32 %4, 49152, !dbg !13196
  br i1 %5, label %6, label %15, !dbg !13197

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13187, metadata !DIExpression()), !dbg !13189
  %7 = add i32 %0, -64000001, !dbg !13198
  %8 = icmp ult i32 %7, 26000000, !dbg !13198
  br i1 %8, label %15, label %9, !dbg !13198

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !13201
  %11 = select i1 %10, i32 0, i32 3, !dbg !13203
  call void @llvm.dbg.value(metadata i32 %11, metadata !13187, metadata !DIExpression()), !dbg !13189
  %12 = add i32 %0, -30000001, !dbg !13204
  %13 = icmp ult i32 %12, 60000000, !dbg !13204
  %14 = select i1 %13, i32 1, i32 %11, !dbg !13204
  call void @llvm.dbg.value(metadata i32 %14, metadata !13187, metadata !DIExpression()), !dbg !13189
  br label %15, !dbg !13204

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !13189
  call void @llvm.dbg.value(metadata i32 %16, metadata !13187, metadata !DIExpression()), !dbg !13189
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #28, !dbg !13207
  %18 = icmp eq i32 %17, 32768, !dbg !13209
  br i1 %18, label %19, label %27, !dbg !13210

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !13211
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !13214
  br i1 %22, label %27, label %23, !dbg !13214

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !13215
  %25 = and i1 %24, %21, !dbg !13218
  %26 = select i1 %25, i32 1, i32 %16, !dbg !13218
  call void @llvm.dbg.value(metadata i32 %26, metadata !13187, metadata !DIExpression()), !dbg !13189
  br label %27, !dbg !13218

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !13219
  call void @llvm.dbg.value(metadata i32 %28, metadata !13187, metadata !DIExpression()), !dbg !13189
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #28, !dbg !13220
  %30 = icmp eq i32 %29, 16384, !dbg !13222
  br i1 %30, label %31, label %39, !dbg !13223

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !13224
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !13227
  br i1 %34, label %39, label %35, !dbg !13227

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !13228
  %37 = select i1 %36, i1 %33, i1 false, !dbg !13231
  %38 = select i1 %37, i32 1, i32 %28, !dbg !13231
  call void @llvm.dbg.value(metadata i32 %38, metadata !13187, metadata !DIExpression()), !dbg !13189
  br label %39, !dbg !13231

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !13219
  call void @llvm.dbg.value(metadata i32 %40, metadata !13187, metadata !DIExpression()), !dbg !13189
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #28, !dbg !13232
  call void @llvm.dbg.value(metadata i32 2, metadata !13185, metadata !DIExpression()), !dbg !13189
  br label %41, !dbg !13233

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !13219
  call void @llvm.dbg.value(metadata i32 %42, metadata !13185, metadata !DIExpression()), !dbg !13189
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #28, !dbg !13234
  call void @llvm.dbg.value(metadata i32 %43, metadata !13186, metadata !DIExpression()), !dbg !13189
  %44 = add nsw i32 %42, -1, !dbg !13236
  call void @llvm.dbg.value(metadata i32 %44, metadata !13185, metadata !DIExpression()), !dbg !13189
  %45 = icmp ne i32 %43, %40, !dbg !13237
  %46 = icmp ne i32 %44, 0, !dbg !13238
  %47 = select i1 %45, i1 %46, i1 false, !dbg !13238
  br i1 %47, label %41, label %48, !dbg !13239, !llvm.loop !13240

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !13242
  call void @llvm.dbg.value(metadata i32 %51, metadata !13188, metadata !DIExpression()), !dbg !13189
  ret i32 %51, !dbg !13243
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #7 !dbg !13244 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13246
  %2 = and i32 %1, 49152, !dbg !13246
  ret i32 %2, !dbg !13247
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #18 !dbg !13248 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13250, metadata !DIExpression()), !dbg !13251
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13252
  %3 = and i32 %2, -8, !dbg !13252
  %4 = or i32 %3, %0, !dbg !13252
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13252
  ret void, !dbg !13253
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #7 !dbg !13254 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13255
  %2 = and i32 %1, 7, !dbg !13255
  ret i32 %2, !dbg !13256
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !13257 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !13275, metadata !DIExpression()), !dbg !13279
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13276, metadata !DIExpression()), !dbg !13279
  call void @llvm.dbg.value(metadata i32 0, metadata !13277, metadata !DIExpression()), !dbg !13279
  call void @llvm.dbg.value(metadata i32 0, metadata !13278, metadata !DIExpression()), !dbg !13279
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #28, !dbg !13280
  %4 = icmp eq i32 %3, 0, !dbg !13282
  br i1 %4, label %5, label %21, !dbg !13283

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #28, !dbg !13284
  call void @llvm.dbg.value(metadata i32 %6, metadata !13278, metadata !DIExpression()), !dbg !13279
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.208() #28, !dbg !13286
  %8 = icmp eq i32 %7, 1, !dbg !13288
  br i1 %8, label %13, label %9, !dbg !13289

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.209() #28, !dbg !13290
  br label %10, !dbg !13292

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.208() #28, !dbg !13293
  %12 = icmp eq i32 %11, 1, !dbg !13294
  br i1 %12, label %13, label %10, !dbg !13292, !llvm.loop !13295

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !13297
  %15 = load i32, i32* %14, align 4, !dbg !13297
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !13298
  %17 = load i32, i32* %16, align 4, !dbg !13298
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !13299
  %19 = load i32, i32* %18, align 4, !dbg !13299
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.210(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #28, !dbg !13300
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #28, !dbg !13301
  call void @llvm.dbg.value(metadata i32 %20, metadata !13277, metadata !DIExpression()), !dbg !13279
  br label %21, !dbg !13302

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !13303
  call void @llvm.dbg.value(metadata i32 %22, metadata !13277, metadata !DIExpression()), !dbg !13279
  ret i32 %22, !dbg !13304
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #7 !dbg !13305 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13309, metadata !DIExpression()), !dbg !13310
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.212() #28, !dbg !13311
  %2 = icmp ne i32 %1, 0, !dbg !13313
  call void @llvm.dbg.value(metadata i1 %2, metadata !13309, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13310
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #28, !dbg !13314
  %4 = icmp ne i32 %3, 0, !dbg !13316
  %5 = select i1 %4, i1 true, i1 %2, !dbg !13317
  %6 = zext i1 %5 to i32, !dbg !13317
  call void @llvm.dbg.value(metadata i32 %6, metadata !13309, metadata !DIExpression()), !dbg !13310
  ret i32 %6, !dbg !13318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #13 !dbg !13319 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13323, metadata !DIExpression()), !dbg !13326
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13324, metadata !DIExpression()), !dbg !13326
  call void @llvm.dbg.value(metadata i32 0, metadata !13325, metadata !DIExpression()), !dbg !13326
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13327
  %4 = load i32, i32* %3, align 4, !dbg !13327
  %5 = and i32 %4, 63, !dbg !13328
  %6 = udiv i32 %0, %5, !dbg !13329
  call void @llvm.dbg.value(metadata i32 %6, metadata !13325, metadata !DIExpression()), !dbg !13326
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13330
  %8 = load i32, i32* %7, align 4, !dbg !13330
  %9 = and i32 %8, 511, !dbg !13331
  %10 = mul i32 %9, %6, !dbg !13332
  call void @llvm.dbg.value(metadata i32 %10, metadata !13325, metadata !DIExpression()), !dbg !13326
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13333
  %12 = load i32, i32* %11, align 4, !dbg !13333
  %13 = lshr i32 %12, 15, !dbg !13334
  %14 = and i32 %13, 131070, !dbg !13334
  %15 = add nuw nsw i32 %14, 2, !dbg !13334
  %16 = udiv i32 %10, %15, !dbg !13335
  call void @llvm.dbg.value(metadata i32 %16, metadata !13325, metadata !DIExpression()), !dbg !13326
  ret i32 %16, !dbg !13336
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.208() unnamed_addr #7 !dbg !13337 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13338
  %2 = lshr i32 %1, 1, !dbg !13339
  %3 = and i32 %2, 1, !dbg !13339
  ret i32 %3, !dbg !13340
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.209() unnamed_addr #18 !dbg !13341 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13342
  %2 = or i32 %1, 1, !dbg !13342
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13342
  ret void, !dbg !13343
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.210(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #18 !dbg !13344 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13346, metadata !DIExpression()), !dbg !13350
  call void @llvm.dbg.value(metadata i32 %1, metadata !13347, metadata !DIExpression()), !dbg !13350
  call void @llvm.dbg.value(metadata i32 %2, metadata !13348, metadata !DIExpression()), !dbg !13350
  call void @llvm.dbg.value(metadata i32 %3, metadata !13349, metadata !DIExpression()), !dbg !13350
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13351
  %6 = and i32 %5, -4227072, !dbg !13351
  %7 = or i32 %1, %0, !dbg !13351
  %8 = shl i32 %2, 6, !dbg !13351
  %9 = or i32 %7, %8, !dbg !13351
  %10 = or i32 %9, %6, !dbg !13351
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13351
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13352
  %12 = and i32 %11, -196609, !dbg !13352
  %13 = or i32 %12, %3, !dbg !13352
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13352
  ret void, !dbg !13353
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #18 !dbg !13354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13358, metadata !DIExpression()), !dbg !13362
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13359, metadata !DIExpression()), !dbg !13362
  call void @llvm.dbg.value(metadata i32 0, metadata !13360, metadata !DIExpression()), !dbg !13362
  call void @llvm.dbg.value(metadata i32 0, metadata !13361, metadata !DIExpression()), !dbg !13362
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13363
  %4 = load i32, i32* %3, align 4, !dbg !13363
  %5 = lshr i32 %4, 4, !dbg !13363
  %6 = and i32 %5, 15, !dbg !13363
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !13363
  %8 = load i8, i8* %7, align 1, !dbg !13363
  %9 = zext i8 %8 to i32, !dbg !13363
  %10 = lshr i32 %0, %9, !dbg !13363
  call void @llvm.dbg.value(metadata i32 %10, metadata !13361, metadata !DIExpression()), !dbg !13362
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !13364
  %12 = icmp ult i32 %11, %10, !dbg !13366
  br i1 %12, label %13, label %16, !dbg !13367

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #28, !dbg !13368
  call void @llvm.dbg.value(metadata i32 %14, metadata !13360, metadata !DIExpression()), !dbg !13362
  %15 = icmp eq i32 %14, 0, !dbg !13370
  br i1 %15, label %16, label %30, !dbg !13372

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.211() #28, !dbg !13373
  br label %17, !dbg !13375

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.212() #28, !dbg !13376
  %19 = icmp eq i32 %18, 1, !dbg !13377
  br i1 %19, label %20, label %17, !dbg !13375, !llvm.loop !13378

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13380
  tail call fastcc void @LL_RCC_SetAHBPrescaler.213(i32 noundef %21) #28, !dbg !13381
  tail call fastcc void @LL_RCC_SetSysClkSource.214() #28, !dbg !13382
  br label %22, !dbg !13383

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.215() #28, !dbg !13384
  %24 = icmp eq i32 %23, 8, !dbg !13385
  br i1 %24, label %25, label %22, !dbg !13383, !llvm.loop !13386

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13388
  %27 = load i32, i32* %26, align 4, !dbg !13388
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.216(i32 noundef %27) #28, !dbg !13389
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13390
  %29 = load i32, i32* %28, align 4, !dbg !13390
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.217(i32 noundef %29) #28, !dbg !13391
  br label %30, !dbg !13392

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13393
  %33 = icmp ugt i32 %32, %10, !dbg !13395
  br i1 %33, label %34, label %36, !dbg !13396

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #28, !dbg !13397
  call void @llvm.dbg.value(metadata i32 %35, metadata !13360, metadata !DIExpression()), !dbg !13362
  br label %36, !dbg !13399

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !13362
  call void @llvm.dbg.value(metadata i32 %37, metadata !13360, metadata !DIExpression()), !dbg !13362
  %38 = icmp eq i32 %37, 0, !dbg !13400
  br i1 %38, label %39, label %40, !dbg !13402

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #28, !dbg !13403
  br label %40, !dbg !13405

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13406
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.211() unnamed_addr #18 !dbg !13407 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13408
  %2 = or i32 %1, 16777216, !dbg !13408
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13408
  ret void, !dbg !13409
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.212() unnamed_addr #7 !dbg !13410 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13411
  %2 = lshr i32 %1, 25, !dbg !13412
  %3 = and i32 %2, 1, !dbg !13412
  ret i32 %3, !dbg !13413
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.213(i32 noundef %0) unnamed_addr #18 !dbg !13414 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13416, metadata !DIExpression()), !dbg !13417
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13418
  %3 = and i32 %2, -241, !dbg !13418
  %4 = or i32 %3, %0, !dbg !13418
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13418
  ret void, !dbg !13419
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.214() unnamed_addr #18 !dbg !13420 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13422, metadata !DIExpression()), !dbg !13423
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13424
  %2 = and i32 %1, -4, !dbg !13424
  %3 = or i32 %2, 2, !dbg !13424
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13424
  ret void, !dbg !13425
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.215() unnamed_addr #7 !dbg !13426 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13427
  %2 = and i32 %1, 12, !dbg !13427
  ret i32 %2, !dbg !13428
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.216(i32 noundef %0) unnamed_addr #18 !dbg !13429 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13431, metadata !DIExpression()), !dbg !13432
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13433
  %3 = and i32 %2, -7169, !dbg !13433
  %4 = or i32 %3, %0, !dbg !13433
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13433
  ret void, !dbg !13434
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.217(i32 noundef %0) unnamed_addr #18 !dbg !13435 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13437, metadata !DIExpression()), !dbg !13438
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13439
  %3 = and i32 %2, -57345, !dbg !13439
  %4 = or i32 %3, %0, !dbg !13439
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13439
  ret void, !dbg !13440
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #7 !dbg !13441 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13442
  %2 = lshr i32 %1, 27, !dbg !13443
  %3 = and i32 %2, 1, !dbg !13443
  ret i32 %3, !dbg !13444
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #18 !dbg !13445 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13449, metadata !DIExpression()), !dbg !13455
  call void @llvm.dbg.value(metadata i32 %1, metadata !13450, metadata !DIExpression()), !dbg !13455
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !13451, metadata !DIExpression()), !dbg !13455
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !13452, metadata !DIExpression()), !dbg !13455
  call void @llvm.dbg.value(metadata i32 0, metadata !13453, metadata !DIExpression()), !dbg !13455
  call void @llvm.dbg.value(metadata i32 0, metadata !13454, metadata !DIExpression()), !dbg !13455
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #28, !dbg !13456
  %6 = icmp eq i32 %5, 0, !dbg !13458
  br i1 %6, label %7, label %27, !dbg !13459

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #28, !dbg !13460
  call void @llvm.dbg.value(metadata i32 %8, metadata !13454, metadata !DIExpression()), !dbg !13455
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #28, !dbg !13462
  %10 = icmp eq i32 %9, 1, !dbg !13464
  br i1 %10, label %19, label %11, !dbg !13465

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13466
  br i1 %12, label %13, label %14, !dbg !13469

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #28, !dbg !13470
  br label %15, !dbg !13472

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #28, !dbg !13473
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #28, !dbg !13475
  br label %16, !dbg !13476

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #28, !dbg !13477
  %18 = icmp eq i32 %17, 1, !dbg !13478
  br i1 %18, label %19, label %16, !dbg !13476, !llvm.loop !13479

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !13481
  %21 = load i32, i32* %20, align 4, !dbg !13481
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !13482
  %23 = load i32, i32* %22, align 4, !dbg !13482
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !13483
  %25 = load i32, i32* %24, align 4, !dbg !13483
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.210(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #28, !dbg !13484
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #28, !dbg !13485
  call void @llvm.dbg.value(metadata i32 %26, metadata !13453, metadata !DIExpression()), !dbg !13455
  br label %27, !dbg !13486

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13487
  call void @llvm.dbg.value(metadata i32 %28, metadata !13453, metadata !DIExpression()), !dbg !13455
  ret i32 %28, !dbg !13488
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #7 !dbg !13489 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13490
  %2 = lshr i32 %1, 17, !dbg !13491
  %3 = and i32 %2, 1, !dbg !13491
  ret i32 %3, !dbg !13492
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #18 !dbg !13493 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13494
  %2 = or i32 %1, 262144, !dbg !13494
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13494
  ret void, !dbg !13495
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #18 !dbg !13496 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13497
  %2 = and i32 %1, -262145, !dbg !13497
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13497
  ret void, !dbg !13498
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #18 !dbg !13499 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13500
  %2 = or i32 %1, 65536, !dbg !13500
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13500
  ret void, !dbg !13501
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #23 !dbg !13502 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13505, metadata !DIExpression()), !dbg !13521
  call void @llvm.dbg.value(metadata i32 undef, metadata !13505, metadata !DIExpression()), !dbg !13521
  call void @llvm.dbg.value(metadata i32 undef, metadata !13505, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13521
  ret void, !dbg !13522
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13523 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13527, metadata !DIExpression()), !dbg !13529
  %2 = icmp eq i8* %0, null, !dbg !13530
  br i1 %2, label %29, label %3, !dbg !13532

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13533
  %5 = icmp eq i8 %4, 0, !dbg !13534
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13535
  br i1 %6, label %29, label %8, !dbg !13535

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13528, metadata !DIExpression()), !dbg !13529
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13536

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13528, metadata !DIExpression()), !dbg !13529
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #28, !dbg !13538
  br i1 %10, label %11, label %15, !dbg !13543

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13544
  %13 = load i8*, i8** %12, align 4, !dbg !13544
  %14 = icmp eq i8* %13, %0, !dbg !13545
  br i1 %14, label %29, label %15, !dbg !13546

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13547
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13528, metadata !DIExpression()), !dbg !13529
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13548
  br i1 %17, label %7, label %8, !dbg !13549, !llvm.loop !13550

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13528, metadata !DIExpression()), !dbg !13529
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #28, !dbg !13552
  br i1 %20, label %21, label %26, !dbg !13556

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13557
  %23 = load i8*, i8** %22, align 4, !dbg !13557
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !13558
  %25 = icmp eq i32 %24, 0, !dbg !13559
  br i1 %25, label %29, label %26, !dbg !13560

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13561
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13528, metadata !DIExpression()), !dbg !13529
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13562
  br i1 %28, label %29, label %18, !dbg !13536, !llvm.loop !13563

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13529
  ret %struct.device* %30, !dbg !13565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #13 !dbg !13566 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13570, metadata !DIExpression()), !dbg !13571
  %2 = icmp eq %struct.device* %0, null, !dbg !13572
  br i1 %2, label %14, label %3, !dbg !13574

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13575
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13575
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13576
  %7 = load i8, i8* %6, align 1, !dbg !13576
  %8 = and i8 %7, 1, !dbg !13576
  %9 = icmp eq i8 %8, 0, !dbg !13576
  br i1 %9, label %14, label %10, !dbg !13577

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13578
  %12 = load i8, i8* %11, align 1, !dbg !13578
  %13 = icmp eq i8 %12, 0, !dbg !13579
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13571
  ret i1 %15, !dbg !13580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #12 !dbg !13581 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13586, metadata !DIExpression()), !dbg !13587
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13588
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13589
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13590 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13598, metadata !DIExpression()), !dbg !13603
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13599, metadata !DIExpression()), !dbg !13603
  call void @llvm.dbg.value(metadata i8* %2, metadata !13600, metadata !DIExpression()), !dbg !13603
  %5 = bitcast i32* %4 to i8*, !dbg !13604
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13604
  call void @llvm.dbg.value(metadata i32 0, metadata !13601, metadata !DIExpression()), !dbg !13603
  store i32 0, i32* %4, align 4, !dbg !13605
  call void @llvm.dbg.value(metadata i32* %4, metadata !13601, metadata !DIExpression(DW_OP_deref)), !dbg !13603
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #28, !dbg !13606
  call void @llvm.dbg.value(metadata i16* %6, metadata !13602, metadata !DIExpression()), !dbg !13603
  %7 = load i32, i32* %4, align 4, !dbg !13607
  call void @llvm.dbg.value(metadata i32 %7, metadata !13601, metadata !DIExpression()), !dbg !13603
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #28, !dbg !13608
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13609
  ret i32 %8, !dbg !13610
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #17 !dbg !13611 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13615, metadata !DIExpression()), !dbg !13621
  call void @llvm.dbg.value(metadata i32* %1, metadata !13616, metadata !DIExpression()), !dbg !13621
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13622
  %4 = load i16*, i16** %3, align 4, !dbg !13622
  call void @llvm.dbg.value(metadata i16* %4, metadata !13617, metadata !DIExpression()), !dbg !13621
  %5 = icmp eq i16* %4, null, !dbg !13623
  br i1 %5, label %14, label %6, !dbg !13624

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13625
  call void @llvm.dbg.value(metadata i32 %7, metadata !13618, metadata !DIExpression()), !dbg !13625
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13626
  %9 = load i16, i16* %8, align 2, !dbg !13626
  %10 = add i16 %9, -32767, !dbg !13627
  %11 = icmp ult i16 %10, 2, !dbg !13627
  %12 = add i32 %7, 1, !dbg !13628
  call void @llvm.dbg.value(metadata i32 %12, metadata !13618, metadata !DIExpression()), !dbg !13625
  br i1 %11, label %13, label %6, !dbg !13627, !llvm.loop !13630

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13633
  br label %14, !dbg !13634

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13635
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13636 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13640, metadata !DIExpression()), !dbg !13651
  call void @llvm.dbg.value(metadata i32 %1, metadata !13641, metadata !DIExpression()), !dbg !13651
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13642, metadata !DIExpression()), !dbg !13651
  call void @llvm.dbg.value(metadata i8* %3, metadata !13643, metadata !DIExpression()), !dbg !13651
  call void @llvm.dbg.value(metadata i32 0, metadata !13644, metadata !DIExpression()), !dbg !13652
  %5 = icmp eq i32 %1, 0, !dbg !13653
  br i1 %5, label %16, label %8, !dbg !13654

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13644, metadata !DIExpression()), !dbg !13652
  %7 = icmp eq i32 %15, %1, !dbg !13653
  br i1 %7, label %16, label %8, !dbg !13654, !llvm.loop !13655

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13644, metadata !DIExpression()), !dbg !13652
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13657
  %11 = load i16, i16* %10, align 2, !dbg !13657
  call void @llvm.dbg.value(metadata i16 %11, metadata !13646, metadata !DIExpression()), !dbg !13658
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #28, !dbg !13659
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13649, metadata !DIExpression()), !dbg !13658
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !13660
  call void @llvm.dbg.value(metadata i32 %13, metadata !13650, metadata !DIExpression()), !dbg !13658
  %14 = icmp slt i32 %13, 0, !dbg !13661
  %15 = add nuw i32 %9, 1, !dbg !13663
  call void @llvm.dbg.value(metadata i32 %15, metadata !13644, metadata !DIExpression()), !dbg !13652
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13664
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #5 !dbg !13665 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13669, metadata !DIExpression()), !dbg !13672
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13670, metadata !DIExpression()), !dbg !13672
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13671, metadata !DIExpression()), !dbg !13672
  %2 = sext i16 %0 to i32, !dbg !13673
  %3 = icmp slt i16 %0, 1, !dbg !13675
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13676
  %6 = add nsw i32 %2, -1, !dbg !13676
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13676
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13676
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13670, metadata !DIExpression()), !dbg !13672
  ret %struct.device* %8, !dbg !13677
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13678 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13680, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13681, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.value(metadata i8* %2, metadata !13682, metadata !DIExpression()), !dbg !13685
  %5 = bitcast i32* %4 to i8*, !dbg !13686
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13686
  call void @llvm.dbg.value(metadata i32 0, metadata !13683, metadata !DIExpression()), !dbg !13685
  store i32 0, i32* %4, align 4, !dbg !13687
  call void @llvm.dbg.value(metadata i32* %4, metadata !13683, metadata !DIExpression(DW_OP_deref)), !dbg !13685
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #28, !dbg !13688
  call void @llvm.dbg.value(metadata i16* %6, metadata !13684, metadata !DIExpression()), !dbg !13685
  %7 = load i32, i32* %4, align 4, !dbg !13689
  call void @llvm.dbg.value(metadata i32 %7, metadata !13683, metadata !DIExpression()), !dbg !13685
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #28, !dbg !13690
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !13691
  ret i32 %8, !dbg !13692
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #17 !dbg !13693 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13695, metadata !DIExpression()), !dbg !13700
  call void @llvm.dbg.value(metadata i32* %1, metadata !13696, metadata !DIExpression()), !dbg !13700
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13701
  %4 = load i16*, i16** %3, align 4, !dbg !13701
  call void @llvm.dbg.value(metadata i16* %4, metadata !13697, metadata !DIExpression()), !dbg !13700
  call void @llvm.dbg.value(metadata i32 0, metadata !13698, metadata !DIExpression()), !dbg !13700
  call void @llvm.dbg.value(metadata i32 0, metadata !13699, metadata !DIExpression()), !dbg !13700
  %5 = icmp eq i16* %4, null, !dbg !13702
  br i1 %5, label %22, label %6, !dbg !13704

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13698, metadata !DIExpression()), !dbg !13700
  call void @llvm.dbg.value(metadata i16* %8, metadata !13697, metadata !DIExpression()), !dbg !13700
  %9 = load i16, i16* %8, align 2, !dbg !13705
  %10 = icmp eq i16 %9, -32768, !dbg !13709
  call void @llvm.dbg.value(metadata i32 undef, metadata !13698, metadata !DIExpression()), !dbg !13700
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13710
  call void @llvm.dbg.value(metadata i16* %11, metadata !13697, metadata !DIExpression()), !dbg !13700
  %12 = zext i1 %10 to i32, !dbg !13711
  %13 = add i32 %7, %12, !dbg !13711
  call void @llvm.dbg.value(metadata i32 %13, metadata !13698, metadata !DIExpression()), !dbg !13700
  %14 = icmp eq i32 %13, 2, !dbg !13712
  br i1 %14, label %15, label %6, !dbg !13713

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13700
  call void @llvm.dbg.value(metadata i32 %16, metadata !13699, metadata !DIExpression()), !dbg !13700
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13714
  %18 = load i16, i16* %17, align 2, !dbg !13714
  %19 = icmp eq i16 %18, 32767, !dbg !13715
  %20 = add i32 %16, 1, !dbg !13716
  call void @llvm.dbg.value(metadata i32 %20, metadata !13699, metadata !DIExpression()), !dbg !13700
  br i1 %19, label %21, label %15, !dbg !13718, !llvm.loop !13719

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13721
  br label %22, !dbg !13722

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13723
  call void @llvm.dbg.value(metadata i16* %23, metadata !13697, metadata !DIExpression()), !dbg !13700
  ret i16* %23, !dbg !13724
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #13 !dbg !13725 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13728
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !13729
  ret i32* %2, !dbg !13730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #5 !dbg !13731 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13881, metadata !DIExpression()), !dbg !13884
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13882, metadata !DIExpression()), !dbg !13884
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13883, metadata !DIExpression()), !dbg !13884
  ret void, !dbg !13885
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13886 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13890, metadata !DIExpression()), !dbg !13892
  call void @llvm.dbg.value(metadata i32 %1, metadata !13891, metadata !DIExpression()), !dbg !13892
  ret void, !dbg !13893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !13894 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13898, metadata !DIExpression()), !dbg !13900
  call void @llvm.dbg.value(metadata i32 %1, metadata !13899, metadata !DIExpression()), !dbg !13900
  ret void, !dbg !13901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13906, metadata !DIExpression()), !dbg !13908
  call void @llvm.dbg.value(metadata i8* %1, metadata !13907, metadata !DIExpression()), !dbg !13908
  ret i32 -134, !dbg !13909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !13910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13914, metadata !DIExpression()), !dbg !13916
  call void @llvm.dbg.value(metadata i8* %1, metadata !13915, metadata !DIExpression()), !dbg !13916
  ret i32 -134, !dbg !13917
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13918 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13921, metadata !DIExpression()), !dbg !13922
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !13923, !srcloc !13929
  call void @llvm.dbg.value(metadata i32 undef, metadata !13926, metadata !DIExpression()) #26, !dbg !13930
  call void @llvm.dbg.value(metadata i32 undef, metadata !13927, metadata !DIExpression()) #26, !dbg !13930
  br label %3, !dbg !13931

3:                                                ; preds = %3, %1
  br label %3, !dbg !13932, !llvm.loop !13935
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13938 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13942, metadata !DIExpression()), !dbg !13944
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13943, metadata !DIExpression()), !dbg !13944
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.222, i32 0, i32 0), i32 noundef 69) #27, !dbg !13945
  tail call void @arch_system_halt(i32 noundef %0) #32, !dbg !13950
  unreachable, !dbg !13950
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !13951 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13953, metadata !DIExpression()), !dbg !13954
  tail call void @arch_system_halt(i32 noundef %0) #32, !dbg !13955
  unreachable, !dbg !13955
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13956 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13958, metadata !DIExpression()), !dbg !13962
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13959, metadata !DIExpression()), !dbg !13962
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !13963, !srcloc !13929
  call void @llvm.dbg.value(metadata i32 undef, metadata !13926, metadata !DIExpression()) #26, !dbg !13965
  call void @llvm.dbg.value(metadata i32 undef, metadata !13927, metadata !DIExpression()) #26, !dbg !13965
  call void @llvm.dbg.value(metadata i32 undef, metadata !13960, metadata !DIExpression()), !dbg !13962
  %4 = tail call fastcc %struct.k_thread* @k_current_get.225() #29, !dbg !13966
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13961, metadata !DIExpression()), !dbg !13962
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #28, !dbg !13967
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.226, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #27, !dbg !13967
  %6 = icmp eq %struct.__esf* %1, null, !dbg !13972
  br i1 %6, label %13, label %7, !dbg !13974

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13975, metadata !DIExpression()), !dbg !13980
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13982
  %9 = load i32, i32* %8, align 4, !dbg !13982
  %10 = and i32 %9, 511, !dbg !13983
  %11 = icmp eq i32 %10, 0, !dbg !13984
  br i1 %11, label %13, label %12, !dbg !13985

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.227, i32 0, i32 0), i32 noundef 69) #27, !dbg !13986
  br label %13, !dbg !13992

13:                                               ; preds = %12, %7, %2
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #28, !dbg !13993
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.228, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #27, !dbg !13993
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #28, !dbg !13998
  %15 = icmp eq i32 %0, 4, !dbg !13999
  br i1 %15, label %16, label %17, !dbg !14004

16:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.231, i32 0, i32 0), i32 noundef 148) #27, !dbg !14005
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7.232, i32 0, i32 0)) #27, !dbg !14005
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.231, i32 0, i32 0), i32 noundef 148) #27, !dbg !14005
  unreachable, !dbg !14005

17:                                               ; preds = %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !13963
  call void @llvm.dbg.value(metadata i32 %18, metadata !13926, metadata !DIExpression()) #26, !dbg !13965
  call void @llvm.dbg.value(metadata i32 %18, metadata !13960, metadata !DIExpression()), !dbg !13962
  call void @llvm.dbg.value(metadata i32 undef, metadata !14007, metadata !DIExpression()) #26, !dbg !14010
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #26, !dbg !14012, !srcloc !14013
  tail call fastcc void @k_thread_abort.233(%struct.k_thread* noundef %4) #28, !dbg !14014
  ret void, !dbg !14017
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.225() unnamed_addr #6 !dbg !14018 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.241() #29, !dbg !14022
  ret %struct.k_thread* %1, !dbg !14023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #5 !dbg !14024 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14028, metadata !DIExpression()), !dbg !14029
  %2 = icmp ult i32 %0, 5, !dbg !14030
  br i1 %2, label %3, label %6, !dbg !14030

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14030
  %5 = load i8*, i8** %4, align 4, !dbg !14030
  br label %6, !dbg !14030

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.235, i32 0, i32 0), %1 ], !dbg !14031
  ret i8* %7, !dbg !14033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14034 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14038, metadata !DIExpression()), !dbg !14040
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14041
  br i1 %2, label %9, label %3, !dbg !14042

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #27, !dbg !14043
  call void @llvm.dbg.value(metadata i8* %4, metadata !14039, metadata !DIExpression()), !dbg !14040
  %5 = icmp eq i8* %4, null, !dbg !14044
  br i1 %5, label %9, label %6, !dbg !14046

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14047
  %8 = icmp eq i8 %7, 0, !dbg !14048
  br i1 %8, label %9, label %10, !dbg !14049

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.234, i32 0, i32 0), metadata !14039, metadata !DIExpression()), !dbg !14040
  br label %10, !dbg !14050

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.234, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14040
  call void @llvm.dbg.value(metadata i8* %11, metadata !14039, metadata !DIExpression()), !dbg !14040
  ret i8* %11, !dbg !14052
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.233(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14053 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14057, metadata !DIExpression()), !dbg !14058
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14059, !srcloc !14061
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !14062
  ret void, !dbg !14063
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.241() unnamed_addr #6 !dbg !14064 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14065, !srcloc !14067
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !14068
  ret %struct.k_thread* %1, !dbg !14069
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14070 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14074, metadata !DIExpression()), !dbg !14077
  call void @llvm.dbg.value(metadata i32 %1, metadata !14075, metadata !DIExpression()), !dbg !14077
  call void @llvm.dbg.value(metadata i32 %2, metadata !14076, metadata !DIExpression()), !dbg !14077
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !14078
  ret void, !dbg !14079
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14080 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14084, metadata !DIExpression()), !dbg !14087
  call void @llvm.dbg.value(metadata i8* %1, metadata !14085, metadata !DIExpression()), !dbg !14087
  call void @llvm.dbg.value(metadata i32 %2, metadata !14086, metadata !DIExpression()), !dbg !14087
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !14088
  ret void, !dbg !14089
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14090 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #28, !dbg !14091
  ret void, !dbg !14092
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14095, metadata !DIExpression()), !dbg !14096
  tail call fastcc void @init_idle_thread(i32 noundef %0) #28, !dbg !14097
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14098
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14099
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14100
  %4 = trunc i32 %0 to i8, !dbg !14101
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 6, !dbg !14102
  store i8 %4, i8* %5, align 4, !dbg !14103
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14104
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #28, !dbg !14105
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14106
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14107
  store i8* %8, i8** %9, align 4, !dbg !14108
  ret void, !dbg !14109
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14110 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14112, metadata !DIExpression()), !dbg !14118
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14119
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14113, metadata !DIExpression()), !dbg !14118
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14120
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14114, metadata !DIExpression()), !dbg !14118
  call void @llvm.dbg.value(metadata i8* null, metadata !14117, metadata !DIExpression()), !dbg !14118
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14121
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14122
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !14123
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #28, !dbg !14124
  ret void, !dbg !14125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14126 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14130, metadata !DIExpression()), !dbg !14131
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14132
  ret i8* %2, !dbg !14133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !14134 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14139, metadata !DIExpression()), !dbg !14140
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14141
  %3 = load i8, i8* %2, align 1, !dbg !14142
  %4 = and i8 %3, -5, !dbg !14142
  store i8 %4, i8* %2, align 1, !dbg !14142
  ret void, !dbg !14143
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_early_boot_rand_get(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14144 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14146, metadata !DIExpression()), !dbg !14148
  call void @llvm.dbg.value(metadata i32 %1, metadata !14147, metadata !DIExpression()), !dbg !14148
  tail call fastcc void @sys_rand_get(i8* noundef %0, i32 noundef %1) #28, !dbg !14149
  ret void, !dbg !14150
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @sys_rand_get(i8* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !14151 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14156, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata i32 %1, metadata !14157, metadata !DIExpression()), !dbg !14158
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14159, !srcloc !14161
  tail call void @z_impl_sys_rand_get(i8* noundef %0, i32 noundef %1) #27, !dbg !14162
  ret void, !dbg !14163
}

; Function Attrs: optsize
declare !dbg !14164 dso_local void @z_impl_sys_rand_get(i8* noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !14165 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #28, !dbg !14168
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !14169
  %3 = ptrtoint i8* %2 to i32, !dbg !14178
  %4 = add i32 %3, 2048, !dbg !14179
  call void @llvm.dbg.value(metadata i32 %4, metadata !14173, metadata !DIExpression()) #26, !dbg !14180
  call void @llvm.dbg.value(metadata i32 %4, metadata !14181, metadata !DIExpression()) #26, !dbg !14184
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #26, !dbg !14186, !srcloc !14187
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14188
  %6 = or i32 %5, 512, !dbg !14188
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14188
  tail call fastcc void @__NVIC_SetPriority.250(i32 noundef -2, i32 noundef 255) #27, !dbg !14189
  tail call fastcc void @__NVIC_SetPriority.250(i32 noundef -5, i32 noundef 0) #27, !dbg !14192
  tail call fastcc void @__NVIC_SetPriority.250(i32 noundef -12, i32 noundef 0) #27, !dbg !14193
  tail call fastcc void @__NVIC_SetPriority.250(i32 noundef -11, i32 noundef 0) #27, !dbg !14194
  tail call fastcc void @__NVIC_SetPriority.250(i32 noundef -10, i32 noundef 0) #27, !dbg !14195
  tail call fastcc void @__NVIC_SetPriority.250(i32 noundef -4, i32 noundef 0) #27, !dbg !14196
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14197
  %8 = or i32 %7, 458752, !dbg !14197
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14197
  tail call void @z_arm_fault_init() #27, !dbg !14198
  tail call void @z_arm_cpu_idle_init() #27, !dbg !14199
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14200
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14203
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !14204
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !14205
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14206
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #26, !dbg !14206
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14167, metadata !DIExpression()), !dbg !14207
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #28, !dbg !14208
  call void @z_device_state_init() #27, !dbg !14209
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #28, !dbg !14210
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #28, !dbg !14211
  %11 = call fastcc i8* @prepare_multithreading() #28, !dbg !14212
  call fastcc void @switch_to_main_thread(i8* noundef %11) #32, !dbg !14213
  unreachable, !dbg !14213
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2174 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2178, metadata !DIExpression()), !dbg !14214
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14215
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14215
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2179, metadata !DIExpression()), !dbg !14214
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2179, metadata !DIExpression()), !dbg !14214
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14216
  br i1 %7, label %8, label %35, !dbg !14217

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2179, metadata !DIExpression()), !dbg !14214
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14218
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14218
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2189, metadata !DIExpression()), !dbg !14219
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14220
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14220
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !14221
  call void @llvm.dbg.value(metadata i32 %14, metadata !2193, metadata !DIExpression()), !dbg !14219
  %15 = icmp eq %struct.device* %11, null, !dbg !14222
  br i1 %15, label %32, label %16, !dbg !14224

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14225
  br i1 %17, label %26, label %18, !dbg !14228

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14229
  call void @llvm.dbg.value(metadata i32 %19, metadata !2193, metadata !DIExpression()), !dbg !14219
  %20 = icmp ult i32 %19, 255, !dbg !14231
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14231
  call void @llvm.dbg.value(metadata i32 %21, metadata !2193, metadata !DIExpression()), !dbg !14219
  %22 = trunc i32 %21 to i8, !dbg !14232
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14233
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14233
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14234
  store i8 %22, i8* %25, align 1, !dbg !14235
  br label %26, !dbg !14236

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14237
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14237
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14238
  %30 = load i8, i8* %29, align 1, !dbg !14239
  %31 = or i8 %30, 1, !dbg !14239
  store i8 %31, i8* %29, align 1, !dbg !14239
  br label %32, !dbg !14240

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14241
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2179, metadata !DIExpression()), !dbg !14214
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14216
  br i1 %34, label %8, label %35, !dbg !14217, !llvm.loop !14242

35:                                               ; preds = %32, %1
  ret void, !dbg !14244
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.250(i32 noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !14245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14247, metadata !DIExpression()), !dbg !14249
  call void @llvm.dbg.value(metadata i32 %1, metadata !14248, metadata !DIExpression()), !dbg !14249
  %3 = trunc i32 %1 to i8, !dbg !14250
  %4 = shl i8 %3, 4, !dbg !14250
  %5 = and i32 %0, 15, !dbg !14253
  %6 = add nsw i32 %5, -4, !dbg !14254
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14255
  store volatile i8 %4, i8* %7, align 1, !dbg !14256
  ret void, !dbg !14257
}

; Function Attrs: optsize
declare !dbg !14258 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #12 !dbg !14259 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14262, metadata !DIExpression()), !dbg !14263
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14264
  store i8 1, i8* %2, align 1, !dbg !14265
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14266
  store i8 1, i8* %3, align 4, !dbg !14267
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14268
  store i32 0, i32* %4, align 4, !dbg !14269
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14270
  store i32 0, i32* %5, align 4, !dbg !14271
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14272
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !14273
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14274
  ret void, !dbg !14275
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14276 {
  tail call void @z_sched_init() #27, !dbg !14281
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14282
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.251, i32 0, i32 0)) #27, !dbg !14283
  call void @llvm.dbg.value(metadata i8* %1, metadata !14280, metadata !DIExpression()), !dbg !14284
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #28, !dbg !14285
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !14286
  tail call void @z_init_cpu(i32 noundef 0) #28, !dbg !14287
  ret i8* %1, !dbg !14288
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !14289 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14293, metadata !DIExpression()), !dbg !14294
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !14295
  unreachable, !dbg !14296
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !14297 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14299, metadata !DIExpression()), !dbg !14302
  call void @llvm.dbg.value(metadata i8* %1, metadata !14300, metadata !DIExpression()), !dbg !14302
  call void @llvm.dbg.value(metadata i8* %2, metadata !14301, metadata !DIExpression()), !dbg !14302
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !14303
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #28, !dbg !14304
  tail call void @boot_banner() #27, !dbg !14305
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #28, !dbg !14306
  tail call void @z_init_static_threads() #27, !dbg !14307
  tail call void @main() #27, !dbg !14308
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14309
  %5 = and i8 %4, -2, !dbg !14309
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !14309
  ret void, !dbg !14310
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14311 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14321, metadata !DIExpression()), !dbg !14323
  call void @llvm.dbg.value(metadata i8* %1, metadata !14322, metadata !DIExpression()), !dbg !14323
  ret void, !dbg !14324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !14325 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !14327, metadata !DIExpression()), !dbg !14329
  call void @llvm.dbg.value(metadata i8* %1, metadata !14328, metadata !DIExpression()), !dbg !14329
  ret void, !dbg !14330
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !14331 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !14332, !srcloc !14339
  call void @llvm.dbg.value(metadata i32 %1, metadata !14335, metadata !DIExpression()) #26, !dbg !14340
  %2 = icmp ne i32 %1, 0, !dbg !14341
  ret i1 %2, !dbg !14342
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #14 !dbg !14343 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14344
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14345
  %3 = load i8, i8* %2, align 4, !dbg !14346
  %4 = or i8 %3, 1, !dbg !14346
  store i8 %4, i8* %2, align 4, !dbg !14346
  ret void, !dbg !14347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #14 !dbg !14348 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14349
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14350
  %3 = load i8, i8* %2, align 4, !dbg !14351
  %4 = and i8 %3, -2, !dbg !14351
  store i8 %4, i8* %2, align 4, !dbg !14351
  ret void, !dbg !14352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #13 !dbg !14353 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14354
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !14355
  %3 = load i8, i8* %2, align 4, !dbg !14355
  %4 = and i8 %3, 1, !dbg !14356
  %5 = icmp ne i8 %4, 0, !dbg !14357
  ret i1 %5, !dbg !14358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !14359 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14363, metadata !DIExpression()), !dbg !14365
  call void @llvm.dbg.value(metadata i8* %1, metadata !14364, metadata !DIExpression()), !dbg !14365
  ret i32 -88, !dbg !14366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14367 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14371, metadata !DIExpression()), !dbg !14372
  ret i8* null, !dbg !14373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #5 !dbg !14374 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14378, metadata !DIExpression()), !dbg !14381
  call void @llvm.dbg.value(metadata i8* %1, metadata !14379, metadata !DIExpression()), !dbg !14381
  call void @llvm.dbg.value(metadata i32 %2, metadata !14380, metadata !DIExpression()), !dbg !14381
  ret i32 -88, !dbg !14382
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2204 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2320, metadata !DIExpression()), !dbg !14383
  call void @llvm.dbg.value(metadata i8* %1, metadata !2321, metadata !DIExpression()), !dbg !14383
  call void @llvm.dbg.value(metadata i32 %2, metadata !2322, metadata !DIExpression()), !dbg !14383
  call void @llvm.dbg.value(metadata i32 0, metadata !2323, metadata !DIExpression()), !dbg !14383
  call void @llvm.dbg.value(metadata i8 undef, metadata !2325, metadata !DIExpression()), !dbg !14383
  %4 = icmp eq i8* %1, null, !dbg !14384
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14386
  br i1 %6, label %46, label %7, !dbg !14386

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14387
  %9 = load i8, i8* %8, align 1, !dbg !14387
  call void @llvm.dbg.value(metadata i8 %9, metadata !2325, metadata !DIExpression()), !dbg !14383
  %10 = add i32 %2, -1, !dbg !14388
  call void @llvm.dbg.value(metadata i32 %10, metadata !2322, metadata !DIExpression()), !dbg !14383
  call void @llvm.dbg.value(metadata i8 0, metadata !2326, metadata !DIExpression()), !dbg !14389
  call void @llvm.dbg.value(metadata i8 %9, metadata !2325, metadata !DIExpression()), !dbg !14383
  call void @llvm.dbg.value(metadata i32 0, metadata !2323, metadata !DIExpression()), !dbg !14383
  %11 = icmp eq i8 %9, 0, !dbg !14390
  br i1 %11, label %12, label %15, !dbg !14392

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14393
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14394
  store i8 0, i8* %14, align 1, !dbg !14395
  br label %46, !dbg !14396

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2326, metadata !DIExpression()), !dbg !14389
  call void @llvm.dbg.value(metadata i8 %17, metadata !2325, metadata !DIExpression()), !dbg !14383
  call void @llvm.dbg.value(metadata i32 %18, metadata !2323, metadata !DIExpression()), !dbg !14383
  %19 = zext i8 %17 to i32, !dbg !14397
  %20 = zext i8 %16 to i32, !dbg !14398
  %21 = shl nuw i32 1, %20, !dbg !14398
  call void @llvm.dbg.value(metadata i32 %21, metadata !2324, metadata !DIExpression()), !dbg !14383
  %22 = and i32 %21, %19, !dbg !14400
  %23 = icmp eq i32 %22, 0, !dbg !14402
  br i1 %23, label %42, label %24, !dbg !14403

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14404
  %26 = sub i32 %10, %18, !dbg !14405
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14406
  %28 = load i8*, i8** %27, align 4, !dbg !14406
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14407
  %30 = load i32, i32* %29, align 4, !dbg !14407
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #28, !dbg !14408
  %32 = add i32 %31, %18, !dbg !14409
  call void @llvm.dbg.value(metadata i32 %32, metadata !2323, metadata !DIExpression()), !dbg !14383
  %33 = trunc i32 %21 to i8, !dbg !14410
  %34 = xor i8 %33, -1, !dbg !14410
  %35 = and i8 %17, %34, !dbg !14410
  call void @llvm.dbg.value(metadata i8 %35, metadata !2325, metadata !DIExpression()), !dbg !14383
  %36 = icmp eq i8 %35, 0, !dbg !14411
  br i1 %36, label %12, label %37, !dbg !14413

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14414
  %39 = sub i32 %10, %32, !dbg !14416
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.254, i32 0, i32 0), i32 noundef 1) #28, !dbg !14417
  %41 = add i32 %40, %32, !dbg !14418
  call void @llvm.dbg.value(metadata i32 %41, metadata !2323, metadata !DIExpression()), !dbg !14383
  br label %42, !dbg !14419

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14383
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14383
  call void @llvm.dbg.value(metadata i8 %44, metadata !2325, metadata !DIExpression()), !dbg !14383
  call void @llvm.dbg.value(metadata i32 %43, metadata !2323, metadata !DIExpression()), !dbg !14383
  %45 = add i8 %16, 1, !dbg !14420
  call void @llvm.dbg.value(metadata i8 %45, metadata !2326, metadata !DIExpression()), !dbg !14389
  br label %15, !dbg !14392

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.255, i32 0, i32 0), %3 ], !dbg !14383
  ret i8* %47, !dbg !14421
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14422 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14426, metadata !DIExpression()), !dbg !14431
  call void @llvm.dbg.value(metadata i32 %1, metadata !14427, metadata !DIExpression()), !dbg !14431
  call void @llvm.dbg.value(metadata i8* %2, metadata !14428, metadata !DIExpression()), !dbg !14431
  call void @llvm.dbg.value(metadata i32 %3, metadata !14429, metadata !DIExpression()), !dbg !14431
  %5 = icmp ult i32 %1, %3, !dbg !14432
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14432
  call void @llvm.dbg.value(metadata i32 %6, metadata !14430, metadata !DIExpression()), !dbg !14431
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !14433
  ret i32 %6, !dbg !14434
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14435 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14439, metadata !DIExpression()), !dbg !14440
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !14441
  ret void, !dbg !14442
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !14443 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14452, metadata !DIExpression()), !dbg !14463
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14453, metadata !DIExpression()), !dbg !14463
  call void @llvm.dbg.value(metadata i32 %2, metadata !14454, metadata !DIExpression()), !dbg !14463
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14455, metadata !DIExpression()), !dbg !14463
  call void @llvm.dbg.value(metadata i8* %4, metadata !14456, metadata !DIExpression()), !dbg !14463
  call void @llvm.dbg.value(metadata i8* %5, metadata !14457, metadata !DIExpression()), !dbg !14463
  call void @llvm.dbg.value(metadata i8* %6, metadata !14458, metadata !DIExpression()), !dbg !14463
  call void @llvm.dbg.value(metadata i32 %7, metadata !14459, metadata !DIExpression()), !dbg !14463
  call void @llvm.dbg.value(metadata i32 %8, metadata !14460, metadata !DIExpression()), !dbg !14463
  call void @llvm.dbg.value(metadata i8* undef, metadata !14461, metadata !DIExpression()), !dbg !14463
  %11 = icmp eq i32 %7, 15, !dbg !14464
  br i1 %11, label %12, label %15, !dbg !14464

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !14464
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #28, !dbg !14464
  br i1 %14, label %19, label %18, !dbg !14464

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !14464
  %17 = icmp ult i32 %16, 31, !dbg !14464
  br i1 %17, label %19, label %18, !dbg !14464

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.267, i32 0, i32 0), i32 noundef 536) #27, !dbg !14468
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.268, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #27, !dbg !14468
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.267, i32 0, i32 0), i32 noundef 536) #27, !dbg !14468
  unreachable, !dbg !14468

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14470
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #28, !dbg !14471
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14472
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #28, !dbg !14473
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #28, !dbg !14474
  call void @llvm.dbg.value(metadata i8* %22, metadata !14462, metadata !DIExpression()), !dbg !14463
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !14475
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14476
  store i8* null, i8** %23, align 4, !dbg !14477
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14478
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !14478
  br i1 %25, label %29, label %26, !dbg !14480

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 6, !dbg !14481
  %28 = load %struct.k_heap*, %struct.k_heap** %27, align 8, !dbg !14481
  br label %29, !dbg !14482

29:                                               ; preds = %19, %26
  %30 = phi %struct.k_heap* [ %28, %26 ], [ null, %19 ], !dbg !14463
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !14483
  store %struct.k_heap* %30, %struct.k_heap** %31, align 8, !dbg !14485
  ret i8* %22, !dbg !14486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #5 !dbg !14487 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14491, metadata !DIExpression()), !dbg !14492
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !14493
  ret i1 %2, !dbg !14494
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #12 !dbg !14495 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14500, metadata !DIExpression()), !dbg !14501
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14502
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #28, !dbg !14503
  ret void, !dbg !14504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #12 !dbg !14505 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14510, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i32 %1, metadata !14511, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i32 %2, metadata !14512, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata i32 %3, metadata !14513, metadata !DIExpression()), !dbg !14514
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14515
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14516
  %6 = trunc i32 %3 to i8, !dbg !14517
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14518
  store i8 %6, i8* %7, align 4, !dbg !14519
  %8 = trunc i32 %2 to i8, !dbg !14520
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14521
  store i8 %8, i8* %9, align 1, !dbg !14522
  %10 = trunc i32 %1 to i8, !dbg !14523
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14524
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14524
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14524
  store i8 %10, i8* %13, align 2, !dbg !14525
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14526
  store i8 0, i8* %14, align 1, !dbg !14527
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #28, !dbg !14528
  ret void, !dbg !14529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !14530 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14534, metadata !DIExpression()), !dbg !14542
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14535, metadata !DIExpression()), !dbg !14542
  call void @llvm.dbg.value(metadata i32 %2, metadata !14536, metadata !DIExpression()), !dbg !14542
  call void @llvm.dbg.value(metadata i32 0, metadata !14541, metadata !DIExpression()), !dbg !14542
  %4 = add i32 %2, 7, !dbg !14543
  %5 = and i32 %4, -8, !dbg !14543
  %6 = add i32 %5, 64, !dbg !14543
  call void @llvm.dbg.value(metadata i32 %6, metadata !14537, metadata !DIExpression()), !dbg !14542
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.269(%struct.z_thread_stack_element* noundef %1) #28, !dbg !14545
  call void @llvm.dbg.value(metadata i8* %7, metadata !14540, metadata !DIExpression()), !dbg !14542
  call void @llvm.dbg.value(metadata i32 %5, metadata !14538, metadata !DIExpression()), !dbg !14542
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14546
  call void @llvm.dbg.value(metadata i8* %8, metadata !14539, metadata !DIExpression()), !dbg !14542
  call void @llvm.dbg.value(metadata i32 0, metadata !14541, metadata !DIExpression()), !dbg !14542
  %9 = ptrtoint i8* %7 to i32, !dbg !14547
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14548
  store i32 %9, i32* %10, align 4, !dbg !14549
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14550
  store i32 %5, i32* %11, align 4, !dbg !14551
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !14552
  store i32 0, i32* %12, align 4, !dbg !14553
  call void @llvm.dbg.value(metadata i8* %8, metadata !14539, metadata !DIExpression()), !dbg !14542
  ret i8* %8, !dbg !14554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.269(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !14555 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14559, metadata !DIExpression()), !dbg !14560
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14561
  ret i8* %2, !dbg !14562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !14563 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14568, metadata !DIExpression()), !dbg !14569
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14570
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #28, !dbg !14571
  ret void, !dbg !14572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !14573 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14575, metadata !DIExpression()), !dbg !14576
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14577
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #28, !dbg !14578
  ret void, !dbg !14579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !14580 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14584, metadata !DIExpression()), !dbg !14585
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14586
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14587
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14588
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14589
  ret void, !dbg !14590
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !14591 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14596, metadata !DIExpression()), !dbg !14597
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14598
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14599
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14600
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14601
  ret void, !dbg !14602
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14603 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14620, metadata !DIExpression()), !dbg !14621
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14611, metadata !DIExpression()), !dbg !14621
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14612, metadata !DIExpression()), !dbg !14621
  call void @llvm.dbg.value(metadata i32 %2, metadata !14613, metadata !DIExpression()), !dbg !14621
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14614, metadata !DIExpression()), !dbg !14621
  call void @llvm.dbg.value(metadata i8* %4, metadata !14615, metadata !DIExpression()), !dbg !14621
  call void @llvm.dbg.value(metadata i8* %5, metadata !14616, metadata !DIExpression()), !dbg !14621
  call void @llvm.dbg.value(metadata i8* %6, metadata !14617, metadata !DIExpression()), !dbg !14621
  call void @llvm.dbg.value(metadata i32 %7, metadata !14618, metadata !DIExpression()), !dbg !14621
  call void @llvm.dbg.value(metadata i32 %8, metadata !14619, metadata !DIExpression()), !dbg !14621
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !14622, !srcloc !14339
  call void @llvm.dbg.value(metadata i32 %11, metadata !14335, metadata !DIExpression()) #26, !dbg !14627
  %12 = icmp eq i32 %11, 0, !dbg !14628
  br i1 %12, label %14, label %13, !dbg !14629

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.267, i32 0, i32 0), i32 noundef 647) #27, !dbg !14630
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.273, i32 0, i32 0)) #27, !dbg !14630
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.267, i32 0, i32 0), i32 noundef 647) #27, !dbg !14630
  unreachable, !dbg !14630

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !14620, metadata !DIExpression()), !dbg !14621
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #28, !dbg !14632
  %17 = icmp eq i64 %15, -1, !dbg !14633
  br i1 %17, label %19, label %18, !dbg !14635

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #28, !dbg !14636
  br label %19, !dbg !14638

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !14639
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14640 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14645, metadata !DIExpression()), !dbg !14646
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14644, metadata !DIExpression()), !dbg !14646
  %4 = icmp eq i64 %3, 0, !dbg !14647
  br i1 %4, label %5, label %6, !dbg !14649

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #28, !dbg !14650
  br label %7, !dbg !14652

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #28, !dbg !14653
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14655
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14656 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14660, metadata !DIExpression()), !dbg !14661
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !14662, !srcloc !14664
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #28, !dbg !14665
  ret void, !dbg !14666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14667 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14670, metadata !DIExpression()), !dbg !14671
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14669, metadata !DIExpression()), !dbg !14671
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14672
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !14673
  ret void, !dbg !14674
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14675 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14677, metadata !DIExpression()), !dbg !14696
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14697

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.267, i32 0, i32 0), i32 noundef 750) #27, !dbg !14701
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.277, i32 0, i32 0)) #27, !dbg !14701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.267, i32 0, i32 0), i32 noundef 750) #27, !dbg !14701
  unreachable, !dbg !14701

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %29, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14677, metadata !DIExpression()), !dbg !14696
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14704
  br i1 %4, label %6, label %5, !dbg !14705

5:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !14706
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14694, metadata !DIExpression()), !dbg !14707
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %31, label %32, !dbg !14708

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14712
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14712
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14714
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14714
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14715
  %12 = load i32, i32* %11, align 4, !dbg !14715
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14716
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14716
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14717
  %16 = load i8*, i8** %15, align 4, !dbg !14717
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14718
  %18 = load i8*, i8** %17, align 4, !dbg !14718
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14719
  %20 = load i8*, i8** %19, align 4, !dbg !14719
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14720
  %22 = load i32, i32* %21, align 4, !dbg !14720
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14721
  %24 = load i32, i32* %23, align 4, !dbg !14721
  %25 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* undef) #28, !dbg !14722
  %26 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14723
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %26, i32 0, i32 2, !dbg !14724
  %28 = bitcast i8** %27 to %struct._static_thread_data**, !dbg !14725
  store %struct._static_thread_data* %3, %struct._static_thread_data** %28, align 4, !dbg !14725
  %29 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14726
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %29, metadata !14677, metadata !DIExpression()), !dbg !14696
  %30 = icmp ugt %struct._static_thread_data* %29, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14727
  br i1 %30, label %1, label %2, !dbg !14697, !llvm.loop !14728

31:                                               ; preds = %48, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.267, i32 0, i32 0), i32 noundef 781) #27, !dbg !14730
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.277, i32 0, i32 0)) #27, !dbg !14730
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.267, i32 0, i32 0), i32 noundef 781) #27, !dbg !14730
  unreachable, !dbg !14730

32:                                               ; preds = %5, %48
  %33 = phi %struct._static_thread_data* [ %49, %48 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !14694, metadata !DIExpression()), !dbg !14707
  %34 = icmp ult %struct._static_thread_data* %33, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14733
  br i1 %34, label %36, label %35, !dbg !14734

35:                                               ; preds = %32
  tail call void @k_sched_unlock() #27, !dbg !14735
  ret void, !dbg !14736

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !14737
  %38 = load i32, i32* %37, align 4, !dbg !14737
  %39 = icmp eq i32 %38, -1, !dbg !14740
  br i1 %39, label %48, label %40, !dbg !14741

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !14742
  %42 = load %struct.k_thread*, %struct.k_thread** %41, align 4, !dbg !14742
  %43 = icmp sgt i32 %38, 0, !dbg !14744
  %44 = select i1 %43, i32 %38, i32 0, !dbg !14744
  %45 = zext i32 %44 to i64, !dbg !14744
  %46 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %45) #28, !dbg !14744
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !14745
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %42, [1 x i64] %47) #28, !dbg !14745
  br label %48, !dbg !14746

48:                                               ; preds = %36, %40
  %49 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !14747
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %49, metadata !14694, metadata !DIExpression()), !dbg !14707
  %50 = icmp ugt %struct._static_thread_data* %49, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14748
  br i1 %50, label %31, label %32, !dbg !14708, !llvm.loop !14749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !14751 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14756, metadata !DIExpression()), !dbg !14757
  call void @llvm.dbg.value(metadata i64 %0, metadata !14758, metadata !DIExpression()), !dbg !14775
  call void @llvm.dbg.value(metadata i32 1000, metadata !14763, metadata !DIExpression()), !dbg !14775
  call void @llvm.dbg.value(metadata i32 10000, metadata !14764, metadata !DIExpression()), !dbg !14775
  call void @llvm.dbg.value(metadata i8 1, metadata !14765, metadata !DIExpression()), !dbg !14775
  call void @llvm.dbg.value(metadata i8 0, metadata !14766, metadata !DIExpression()), !dbg !14775
  call void @llvm.dbg.value(metadata i8 1, metadata !14767, metadata !DIExpression()), !dbg !14775
  call void @llvm.dbg.value(metadata i8 0, metadata !14768, metadata !DIExpression()), !dbg !14775
  call void @llvm.dbg.value(metadata i8 1, metadata !14769, metadata !DIExpression()), !dbg !14775
  call void @llvm.dbg.value(metadata i8 0, metadata !14770, metadata !DIExpression()), !dbg !14775
  call void @llvm.dbg.value(metadata i64 0, metadata !14771, metadata !DIExpression()), !dbg !14775
  call void @llvm.dbg.value(metadata i64 0, metadata !14771, metadata !DIExpression()), !dbg !14775
  %2 = mul i64 %0, 10, !dbg !14777
  ret i64 %2, !dbg !14783
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !14784 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14786, metadata !DIExpression()), !dbg !14790
  call void @llvm.dbg.value(metadata i8* %1, metadata !14787, metadata !DIExpression()), !dbg !14790
  call void @llvm.dbg.value(metadata i8* %2, metadata !14788, metadata !DIExpression()), !dbg !14790
  call void @llvm.dbg.value(metadata i8* %3, metadata !14789, metadata !DIExpression()), !dbg !14790
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14791
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14792
  %7 = load i8, i8* %6, align 4, !dbg !14793
  %8 = or i8 %7, 4, !dbg !14793
  store i8 %8, i8* %6, align 4, !dbg !14793
  tail call void @z_thread_essential_clear() #28, !dbg !14794
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #30, !dbg !14795
  unreachable, !dbg !14795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #13 !dbg !14796 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14801, metadata !DIExpression()), !dbg !14803
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14804
  %3 = load i32, i32* %2, align 4, !dbg !14804
  call void @llvm.dbg.value(metadata i32 %3, metadata !14802, metadata !DIExpression()), !dbg !14803
  %4 = icmp eq i32 %3, 0, !dbg !14805
  br i1 %4, label %10, label %5, !dbg !14807

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14808
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !14811
  %8 = zext i8 %7 to i32, !dbg !14812
  %9 = icmp eq i32 %6, %8, !dbg !14813
  br i1 %9, label %11, label %10, !dbg !14814

10:                                               ; preds = %5, %1
  br label %11, !dbg !14815

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14803
  ret i1 %12, !dbg !14816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #14 !dbg !14817 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14819, metadata !DIExpression()), !dbg !14820
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14821
  %3 = load i32, i32* %2, align 4, !dbg !14821
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !14823
  %5 = zext i8 %4 to i32, !dbg !14824
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14825
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14826
  %8 = or i32 %7, %5, !dbg !14827
  %9 = icmp eq i32 %3, %8, !dbg !14828
  br i1 %9, label %10, label %11, !dbg !14829

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14830
  br label %11, !dbg !14831

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #14 !dbg !14833 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14837, metadata !DIExpression()), !dbg !14838
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !14839
  %3 = zext i8 %2 to i32, !dbg !14840
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14841
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !14842
  %6 = or i32 %5, %3, !dbg !14843
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14844
  store i32 %6, i32* %7, align 4, !dbg !14845
  ret void, !dbg !14846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !14847 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14851, metadata !DIExpression()), !dbg !14852
  ret i32 -134, !dbg !14853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #5 !dbg !14854 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14858, metadata !DIExpression()), !dbg !14860
  call void @llvm.dbg.value(metadata i32 %1, metadata !14859, metadata !DIExpression()), !dbg !14860
  ret i32 -134, !dbg !14861
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #5 !dbg !14862 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14869, metadata !DIExpression()), !dbg !14871
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !14870, metadata !DIExpression()), !dbg !14871
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14872
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !14874
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14871
  ret i32 %6, !dbg !14875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #5 !dbg !14876 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !14880, metadata !DIExpression()), !dbg !14881
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !14882
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14881
  ret i32 %3, !dbg !14884
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14885 {
  tail call void @sys_clock_idle_exit() #27, !dbg !14887
  ret void, !dbg !14888
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !14889 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14891, metadata !DIExpression()), !dbg !14894
  call void @llvm.dbg.value(metadata i8* %1, metadata !14892, metadata !DIExpression()), !dbg !14894
  call void @llvm.dbg.value(metadata i8* %2, metadata !14893, metadata !DIExpression()), !dbg !14894
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14895
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14895
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14895
  %7 = load i8, i8* %6, align 2, !dbg !14895
  %8 = icmp sgt i8 %7, -1, !dbg !14895
  br i1 %8, label %10, label %9, !dbg !14898

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 39) #27, !dbg !14899
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.288, i32 0, i32 0), i32 noundef 39) #27, !dbg !14899
  unreachable, !dbg !14899

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !14901, !srcloc !14908
  call void @llvm.dbg.value(metadata i32 undef, metadata !14904, metadata !DIExpression()) #26, !dbg !14909
  call void @llvm.dbg.value(metadata i32 undef, metadata !14905, metadata !DIExpression()) #26, !dbg !14909
  tail call fastcc void @k_cpu_idle() #28, !dbg !14910
  br label %10, !dbg !14911, !llvm.loop !14912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14914 {
  tail call void @arch_cpu_idle() #27, !dbg !14915
  ret void, !dbg !14916
}

; Function Attrs: optsize
declare !dbg !14917 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #12 !dbg !14918 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14936, metadata !DIExpression()), !dbg !14940
  call void @llvm.dbg.value(metadata i8* %1, metadata !14937, metadata !DIExpression()), !dbg !14940
  call void @llvm.dbg.value(metadata i32 %2, metadata !14938, metadata !DIExpression()), !dbg !14940
  call void @llvm.dbg.value(metadata i32 %3, metadata !14939, metadata !DIExpression()), !dbg !14940
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14941
  store i32 %2, i32* %5, align 4, !dbg !14942
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14943
  store i32 %3, i32* %6, align 4, !dbg !14944
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14945
  store i8* %1, i8** %7, align 4, !dbg !14946
  %8 = mul i32 %3, %2, !dbg !14947
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !14948
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14949
  store i8* %9, i8** %10, align 4, !dbg !14950
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14951
  store i8* %1, i8** %11, align 4, !dbg !14952
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14953
  store i8* %1, i8** %12, align 4, !dbg !14954
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14955
  store i32 0, i32* %13, align 4, !dbg !14956
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !14957
  store i8 0, i8* %14, align 4, !dbg !14958
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14959
  tail call fastcc void @z_waitq_init.291(%union.anon* noundef %15) #28, !dbg !14960
  %16 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, i32 0, !dbg !14961
  store i32 0, i32* %16, align 4, !dbg !14961
  ret void, !dbg !14962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.291(%union.anon* noundef %0) unnamed_addr #12 !dbg !14963 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14967, metadata !DIExpression()), !dbg !14968
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14969
  tail call fastcc void @sys_dlist_init.292(%struct._dnode* noundef %2) #28, !dbg !14970
  ret void, !dbg !14971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.292(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !14972 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14977, metadata !DIExpression()), !dbg !14978
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14979
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14980
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14981
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14982
  ret void, !dbg !14983
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14984 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14988, metadata !DIExpression()), !dbg !14994
  call void @llvm.dbg.value(metadata i32 %1, metadata !14989, metadata !DIExpression()), !dbg !14994
  call void @llvm.dbg.value(metadata i32 %2, metadata !14990, metadata !DIExpression()), !dbg !14994
  %5 = bitcast i32* %4 to i8*, !dbg !14995
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #26, !dbg !14995
  call void @llvm.dbg.value(metadata i32* %4, metadata !14993, metadata !DIExpression(DW_OP_deref)), !dbg !14994
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #28, !dbg !14996
  br i1 %6, label %13, label %7, !dbg !14998

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !14999
  call void @llvm.dbg.value(metadata i32 %8, metadata !14993, metadata !DIExpression()), !dbg !14994
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #28, !dbg !15001
  call void @llvm.dbg.value(metadata i8* %9, metadata !14991, metadata !DIExpression()), !dbg !14994
  %10 = icmp eq i8* %9, null, !dbg !15002
  br i1 %10, label %13, label %11, !dbg !15004

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #28, !dbg !15005
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15007
  store i8 1, i8* %12, align 4, !dbg !15008
  call void @llvm.dbg.value(metadata i32 0, metadata !14992, metadata !DIExpression()), !dbg !14994
  br label %13, !dbg !15009

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !15010
  call void @llvm.dbg.value(metadata i32 %14, metadata !14992, metadata !DIExpression()), !dbg !14994
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #26, !dbg !15011
  ret i32 %14, !dbg !15012
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #24 !dbg !15013 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15018, metadata !DIExpression()), !dbg !15021
  call void @llvm.dbg.value(metadata i32 %1, metadata !15019, metadata !DIExpression()), !dbg !15021
  call void @llvm.dbg.value(metadata i32* %2, metadata !15020, metadata !DIExpression()), !dbg !15021
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !15022
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !15022
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !15022
  store i32 %6, i32* %2, align 4, !dbg !15022
  ret i1 %5, !dbg !15023
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !15024 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15028, metadata !DIExpression()), !dbg !15029
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #27, !dbg !15030
  ret i8* %2, !dbg !15031
}

; Function Attrs: optsize
declare !dbg !15032 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15035 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15039, metadata !DIExpression()), !dbg !15040
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15041
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %2) #28, !dbg !15041
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !15041
  br i1 %4, label %5, label %15, !dbg !15043

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15044
  %7 = load i8, i8* %6, align 4, !dbg !15044
  %8 = and i8 %7, 1, !dbg !15046
  %9 = icmp eq i8 %8, 0, !dbg !15047
  br i1 %9, label %15, label %10, !dbg !15048

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15049
  %12 = load i8*, i8** %11, align 4, !dbg !15049
  tail call void @k_free(i8* noundef %12) #27, !dbg !15051
  %13 = load i8, i8* %6, align 4, !dbg !15052
  %14 = and i8 %13, -2, !dbg !15052
  store i8 %14, i8* %6, align 4, !dbg !15052
  br label %15, !dbg !15053

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !15040
  ret i32 %16, !dbg !15054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #13 !dbg !15055 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15059, metadata !DIExpression()), !dbg !15060
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15061
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #28, !dbg !15062
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15063
  ret %struct.k_thread* %4, !dbg !15064
}

; Function Attrs: optsize
declare !dbg !15065 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #13 !dbg !15066 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15070, metadata !DIExpression()), !dbg !15071
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #28, !dbg !15072
  br i1 %2, label %6, label %3, !dbg !15072

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15073
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15073
  br label %6, !dbg !15072

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15072
  ret %struct._dnode* %7, !dbg !15074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !15075 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15079, metadata !DIExpression()), !dbg !15080
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15081
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15081
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15082
  ret i1 %4, !dbg !15083
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15084 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15094, metadata !DIExpression()), !dbg !15102
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15092, metadata !DIExpression()), !dbg !15102
  call void @llvm.dbg.value(metadata i8* %1, metadata !15093, metadata !DIExpression()), !dbg !15102
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !15103, !srcloc !15112
  call void @llvm.dbg.value(metadata i32 %5, metadata !15106, metadata !DIExpression()) #26, !dbg !15113
  %6 = icmp eq i32 %5, 0, !dbg !15114
  %7 = icmp eq i64 %4, 0, !dbg !15115
  %8 = select i1 %6, i1 true, i1 %7, !dbg !15115
  br i1 %8, label %10, label %9, !dbg !15115

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.297, i32 0, i32 0), i32 noundef 118) #27, !dbg !15116
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.298, i32 0, i32 0)) #27, !dbg !15116
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.297, i32 0, i32 0), i32 noundef 118) #27, !dbg !15116
  unreachable, !dbg !15116

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15118
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15119, metadata !DIExpression()) #26, !dbg !15126
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15128, !srcloc !15134
  call void @llvm.dbg.value(metadata i32 undef, metadata !15131, metadata !DIExpression()) #26, !dbg !15135
  call void @llvm.dbg.value(metadata i32 undef, metadata !15132, metadata !DIExpression()) #26, !dbg !15135
  call void @llvm.dbg.value(metadata i32 undef, metadata !15125, metadata !DIExpression()) #26, !dbg !15126
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15136
  br i1 %13, label %15, label %14, !dbg !15139

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #27, !dbg !15140
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15140
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #27, !dbg !15140
  unreachable, !dbg !15140

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !15128
  call void @llvm.dbg.value(metadata i32 %16, metadata !15131, metadata !DIExpression()) #26, !dbg !15135
  call void @llvm.dbg.value(metadata i32 %16, metadata !15125, metadata !DIExpression()) #26, !dbg !15126
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15142
  call void @llvm.dbg.value(metadata i32 %16, metadata !15096, metadata !DIExpression()), !dbg !15102
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15143
  %18 = load i32, i32* %17, align 4, !dbg !15143
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15145
  %20 = load i32, i32* %19, align 4, !dbg !15145
  %21 = icmp ult i32 %18, %20, !dbg !15146
  br i1 %21, label %22, label %52, !dbg !15147

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15148
  %24 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %23) #27, !dbg !15150
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !15095, metadata !DIExpression()), !dbg !15102
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !15151
  br i1 %25, label %34, label %26, !dbg !15153

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 0, i32 6, !dbg !15154
  %28 = load i8*, i8** %27, align 4, !dbg !15154
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15156
  %30 = load i32, i32* %29, align 4, !dbg !15156
  %31 = tail call i8* @memcpy(i8* noundef %28, i8* noundef %1, i32 noundef %30) #27, !dbg !15157
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !15158, metadata !DIExpression()), !dbg !15164
  call void @llvm.dbg.value(metadata i32 0, metadata !15163, metadata !DIExpression()), !dbg !15164
  %32 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 7, i32 1, !dbg !15166
  store i32 0, i32* %32, align 4, !dbg !15167
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %24) #27, !dbg !15168
  %33 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15169
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %33) #27, !dbg !15169
  br label %64, !dbg !15170

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15171
  %36 = load i8*, i8** %35, align 4, !dbg !15171
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15173
  %38 = load i32, i32* %37, align 4, !dbg !15173
  %39 = tail call i8* @memcpy(i8* noundef %36, i8* noundef %1, i32 noundef %38) #27, !dbg !15174
  %40 = load i32, i32* %37, align 4, !dbg !15175
  %41 = load i8*, i8** %35, align 4, !dbg !15176
  %42 = getelementptr inbounds i8, i8* %41, i32 %40, !dbg !15176
  store i8* %42, i8** %35, align 4, !dbg !15176
  %43 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15177
  %44 = load i8*, i8** %43, align 4, !dbg !15177
  %45 = icmp eq i8* %42, %44, !dbg !15179
  br i1 %45, label %46, label %49, !dbg !15180

46:                                               ; preds = %34
  %47 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15181
  %48 = load i8*, i8** %47, align 4, !dbg !15181
  store i8* %48, i8** %35, align 4, !dbg !15183
  br label %49, !dbg !15184

49:                                               ; preds = %46, %34
  %50 = load i32, i32* %17, align 4, !dbg !15185
  %51 = add i32 %50, 1, !dbg !15185
  store i32 %51, i32* %17, align 4, !dbg !15185
  call void @llvm.dbg.value(metadata i32 0, metadata !15101, metadata !DIExpression()), !dbg !15102
  br label %59, !dbg !15186

52:                                               ; preds = %15
  br i1 %7, label %59, label %53, !dbg !15187

53:                                               ; preds = %52
  %54 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15188
  %55 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %54, i32 0, i32 0, i32 6, !dbg !15191
  store i8* %1, i8** %55, align 4, !dbg !15192
  %56 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15193
  %57 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15194
  %58 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %57, %union.anon* noundef %56, [1 x i64] %2) #27, !dbg !15194
  call void @llvm.dbg.value(metadata i32 %58, metadata !15101, metadata !DIExpression()), !dbg !15102
  br label %64, !dbg !15195

59:                                               ; preds = %52, %49
  %60 = phi i32 [ 0, %49 ], [ -35, %52 ], !dbg !15196
  call void @llvm.dbg.value(metadata i32 %60, metadata !15101, metadata !DIExpression()), !dbg !15102
  call void @llvm.dbg.value(metadata i32 undef, metadata !15197, metadata !DIExpression()) #26, !dbg !15203
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15202, metadata !DIExpression()) #26, !dbg !15203
  %61 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15205
  br i1 %61, label %63, label %62, !dbg !15208

62:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #27, !dbg !15209
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.303, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15209
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #27, !dbg !15209
  unreachable, !dbg !15209

63:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !15197, metadata !DIExpression()) #26, !dbg !15203
  call void @llvm.dbg.value(metadata i32 %16, metadata !15211, metadata !DIExpression()) #26, !dbg !15214
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !15216, !srcloc !15217
  br label %64, !dbg !15218

64:                                               ; preds = %63, %53, %26
  %65 = phi i32 [ 0, %26 ], [ %60, %63 ], [ %58, %53 ], !dbg !15102
  ret i32 %65, !dbg !15219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #14 !dbg !15220 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15230, metadata !DIExpression()), !dbg !15232
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !15231, metadata !DIExpression()), !dbg !15232
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15233
  %4 = load i32, i32* %3, align 4, !dbg !15233
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !15234
  store i32 %4, i32* %5, align 4, !dbg !15235
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15236
  %7 = load i32, i32* %6, align 4, !dbg !15236
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !15237
  store i32 %7, i32* %8, align 4, !dbg !15238
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15239
  %10 = load i32, i32* %9, align 4, !dbg !15239
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !15240
  store i32 %10, i32* %11, align 4, !dbg !15241
  ret void, !dbg !15242
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15243 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15249, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15247, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata i8* %1, metadata !15248, metadata !DIExpression()), !dbg !15253
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !15254, !srcloc !15112
  call void @llvm.dbg.value(metadata i32 %5, metadata !15106, metadata !DIExpression()) #26, !dbg !15259
  %6 = icmp eq i32 %5, 0, !dbg !15260
  %7 = icmp eq i64 %4, 0, !dbg !15261
  %8 = select i1 %6, i1 true, i1 %7, !dbg !15261
  br i1 %8, label %10, label %9, !dbg !15261

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.297, i32 0, i32 0), i32 noundef 208) #27, !dbg !15262
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.298, i32 0, i32 0)) #27, !dbg !15262
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.297, i32 0, i32 0), i32 noundef 208) #27, !dbg !15262
  unreachable, !dbg !15262

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15264
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15119, metadata !DIExpression()) #26, !dbg !15265
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15267, !srcloc !15134
  call void @llvm.dbg.value(metadata i32 undef, metadata !15131, metadata !DIExpression()) #26, !dbg !15269
  call void @llvm.dbg.value(metadata i32 undef, metadata !15132, metadata !DIExpression()) #26, !dbg !15269
  call void @llvm.dbg.value(metadata i32 undef, metadata !15125, metadata !DIExpression()) #26, !dbg !15265
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15270
  br i1 %13, label %15, label %14, !dbg !15271

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #27, !dbg !15272
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15272
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #27, !dbg !15272
  unreachable, !dbg !15272

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !15267
  call void @llvm.dbg.value(metadata i32 %16, metadata !15131, metadata !DIExpression()) #26, !dbg !15269
  call void @llvm.dbg.value(metadata i32 %16, metadata !15125, metadata !DIExpression()) #26, !dbg !15265
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15273
  call void @llvm.dbg.value(metadata i32 %16, metadata !15250, metadata !DIExpression()), !dbg !15253
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15274
  %18 = load i32, i32* %17, align 4, !dbg !15274
  %19 = icmp eq i32 %18, 0, !dbg !15276
  br i1 %19, label %61, label %20, !dbg !15277

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15278
  %22 = load i8*, i8** %21, align 4, !dbg !15278
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15280
  %24 = load i32, i32* %23, align 4, !dbg !15280
  %25 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %22, i32 noundef %24) #27, !dbg !15281
  %26 = load i32, i32* %23, align 4, !dbg !15282
  %27 = load i8*, i8** %21, align 4, !dbg !15283
  %28 = getelementptr inbounds i8, i8* %27, i32 %26, !dbg !15283
  store i8* %28, i8** %21, align 4, !dbg !15283
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15284
  %30 = load i8*, i8** %29, align 4, !dbg !15284
  %31 = icmp eq i8* %28, %30, !dbg !15286
  br i1 %31, label %32, label %35, !dbg !15287

32:                                               ; preds = %20
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15288
  %34 = load i8*, i8** %33, align 4, !dbg !15288
  store i8* %34, i8** %21, align 4, !dbg !15290
  br label %35, !dbg !15291

35:                                               ; preds = %32, %20
  %36 = load i32, i32* %17, align 4, !dbg !15292
  %37 = add i32 %36, -1, !dbg !15292
  store i32 %37, i32* %17, align 4, !dbg !15292
  %38 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15293
  %39 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %38) #27, !dbg !15294
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !15251, metadata !DIExpression()), !dbg !15253
  %40 = icmp eq %struct.k_thread* %39, null, !dbg !15295
  br i1 %40, label %68, label %41, !dbg !15297

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15298
  %43 = load i8*, i8** %42, align 4, !dbg !15298
  %44 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 0, i32 6, !dbg !15300
  %45 = load i8*, i8** %44, align 4, !dbg !15300
  %46 = load i32, i32* %23, align 4, !dbg !15301
  %47 = tail call i8* @memcpy(i8* noundef %43, i8* noundef %45, i32 noundef %46) #27, !dbg !15302
  %48 = load i32, i32* %23, align 4, !dbg !15303
  %49 = load i8*, i8** %42, align 4, !dbg !15304
  %50 = getelementptr inbounds i8, i8* %49, i32 %48, !dbg !15304
  store i8* %50, i8** %42, align 4, !dbg !15304
  %51 = load i8*, i8** %29, align 4, !dbg !15305
  %52 = icmp eq i8* %50, %51, !dbg !15307
  br i1 %52, label %53, label %56, !dbg !15308

53:                                               ; preds = %41
  %54 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15309
  %55 = load i8*, i8** %54, align 4, !dbg !15309
  store i8* %55, i8** %42, align 4, !dbg !15311
  br label %56, !dbg !15312

56:                                               ; preds = %53, %41
  %57 = load i32, i32* %17, align 4, !dbg !15313
  %58 = add i32 %57, 1, !dbg !15313
  store i32 %58, i32* %17, align 4, !dbg !15313
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !15158, metadata !DIExpression()), !dbg !15314
  call void @llvm.dbg.value(metadata i32 0, metadata !15163, metadata !DIExpression()), !dbg !15314
  %59 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 7, i32 1, !dbg !15316
  store i32 0, i32* %59, align 4, !dbg !15317
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %39) #27, !dbg !15318
  %60 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15319
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %60) #27, !dbg !15319
  br label %73, !dbg !15320

61:                                               ; preds = %15
  br i1 %7, label %68, label %62, !dbg !15321

62:                                               ; preds = %61
  %63 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15322
  %64 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %63, i32 0, i32 0, i32 6, !dbg !15325
  store i8* %1, i8** %64, align 4, !dbg !15326
  %65 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15327
  %66 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15328
  %67 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %66, %union.anon* noundef %65, [1 x i64] %2) #27, !dbg !15328
  call void @llvm.dbg.value(metadata i32 %67, metadata !15252, metadata !DIExpression()), !dbg !15253
  br label %73, !dbg !15329

68:                                               ; preds = %61, %35
  %69 = phi i32 [ 0, %35 ], [ -35, %61 ], !dbg !15330
  call void @llvm.dbg.value(metadata i32 %69, metadata !15252, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata i32 undef, metadata !15197, metadata !DIExpression()) #26, !dbg !15331
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15202, metadata !DIExpression()) #26, !dbg !15331
  %70 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #27, !dbg !15333
  br i1 %70, label %72, label %71, !dbg !15334

71:                                               ; preds = %68
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #27, !dbg !15335
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.303, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #27, !dbg !15335
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #27, !dbg !15335
  unreachable, !dbg !15335

72:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i32 %16, metadata !15197, metadata !DIExpression()) #26, !dbg !15331
  call void @llvm.dbg.value(metadata i32 %16, metadata !15211, metadata !DIExpression()) #26, !dbg !15336
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !15338, !srcloc !15217
  br label %73, !dbg !15339

73:                                               ; preds = %72, %62, %56
  %74 = phi i32 [ 0, %56 ], [ %69, %72 ], [ %67, %62 ], !dbg !15253
  ret i32 %74, !dbg !15340
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !15341 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15345, metadata !DIExpression()), !dbg !15349
  call void @llvm.dbg.value(metadata i8* %1, metadata !15346, metadata !DIExpression()), !dbg !15349
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15350
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !15119, metadata !DIExpression()) #26, !dbg !15351
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15353, !srcloc !15134
  call void @llvm.dbg.value(metadata i32 undef, metadata !15131, metadata !DIExpression()) #26, !dbg !15355
  call void @llvm.dbg.value(metadata i32 undef, metadata !15132, metadata !DIExpression()) #26, !dbg !15355
  call void @llvm.dbg.value(metadata i32 undef, metadata !15125, metadata !DIExpression()) #26, !dbg !15351
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !15356
  br i1 %5, label %7, label %6, !dbg !15357

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #27, !dbg !15358
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !15358
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #27, !dbg !15358
  unreachable, !dbg !15358

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15131, metadata !DIExpression()) #26, !dbg !15355
  call void @llvm.dbg.value(metadata i32 undef, metadata !15125, metadata !DIExpression()) #26, !dbg !15351
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !15359
  call void @llvm.dbg.value(metadata i32 undef, metadata !15347, metadata !DIExpression()), !dbg !15349
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15360
  %9 = load i32, i32* %8, align 4, !dbg !15360
  %10 = icmp eq i32 %9, 0, !dbg !15362
  br i1 %10, label %17, label %11, !dbg !15363

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15364
  %13 = load i8*, i8** %12, align 4, !dbg !15364
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15366
  %15 = load i32, i32* %14, align 4, !dbg !15366
  %16 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %13, i32 noundef %15) #27, !dbg !15367
  call void @llvm.dbg.value(metadata i32 0, metadata !15348, metadata !DIExpression()), !dbg !15349
  br label %17, !dbg !15368

17:                                               ; preds = %7, %11
  %18 = phi i32 [ 0, %11 ], [ -35, %7 ], !dbg !15369
  call void @llvm.dbg.value(metadata i32 %18, metadata !15348, metadata !DIExpression()), !dbg !15349
  call void @llvm.dbg.value(metadata i32 undef, metadata !15197, metadata !DIExpression()) #26, !dbg !15370
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !15202, metadata !DIExpression()) #26, !dbg !15370
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !15372
  br i1 %19, label %21, label %20, !dbg !15373

20:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #27, !dbg !15374
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.303, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !15374
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 194) #27, !dbg !15374
  unreachable, !dbg !15374

21:                                               ; preds = %17
  %22 = extractvalue { i32, i32 } %4, 0, !dbg !15353
  call void @llvm.dbg.value(metadata i32 %22, metadata !15131, metadata !DIExpression()) #26, !dbg !15355
  call void @llvm.dbg.value(metadata i32 %22, metadata !15125, metadata !DIExpression()) #26, !dbg !15351
  call void @llvm.dbg.value(metadata i32 %22, metadata !15347, metadata !DIExpression()), !dbg !15349
  call void @llvm.dbg.value(metadata i32 undef, metadata !15197, metadata !DIExpression()) #26, !dbg !15370
  call void @llvm.dbg.value(metadata i32 undef, metadata !15211, metadata !DIExpression()) #26, !dbg !15375
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #26, !dbg !15377, !srcloc !15217
  ret i32 %18, !dbg !15378
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15379 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15383, metadata !DIExpression()), !dbg !15386
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15387
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %2, metadata !15119, metadata !DIExpression()) #26, !dbg !15388
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15390, !srcloc !15134
  call void @llvm.dbg.value(metadata i32 undef, metadata !15131, metadata !DIExpression()) #26, !dbg !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15132, metadata !DIExpression()) #26, !dbg !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15125, metadata !DIExpression()) #26, !dbg !15388
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %2) #27, !dbg !15393
  br i1 %4, label %6, label %5, !dbg !15394

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #27, !dbg !15395
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.301, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %2) #27, !dbg !15395
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.300, i32 0, i32 0), i32 noundef 148) #27, !dbg !15395
  unreachable, !dbg !15395

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15131, metadata !DIExpression()) #26, !dbg !15392
  call void @llvm.dbg.value(metadata i32 undef, metadata !15125, metadata !DIExpression()) #26, !dbg !15388
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %2) #27, !dbg !15396
  call void @llvm.dbg.value(metadata i32 undef, metadata !15384, metadata !DIExpression()), !dbg !15386
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %7) #27, !dbg !15397
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15385, metadata !DIExpression()), !dbg !15386
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15398
  br i1 %9, label %15, label %10, !dbg !15399

10:                                               ; preds = %6, %10
  %11 = phi %struct.k_thread* [ %13, %10 ], [ %8, %6 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15158, metadata !DIExpression()), !dbg !15400
  call void @llvm.dbg.value(metadata i32 -35, metadata !15163, metadata !DIExpression()), !dbg !15400
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 7, i32 1, !dbg !15403
  store i32 -35, i32* %12, align 4, !dbg !15404
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %11) #27, !dbg !15405
  %13 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %7) #27, !dbg !15397
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15385, metadata !DIExpression()), !dbg !15386
  %14 = icmp eq %struct.k_thread* %13, null, !dbg !15398
  br i1 %14, label %15, label %10, !dbg !15399, !llvm.loop !15406

15:                                               ; preds = %10, %6
  %16 = extractvalue { i32, i32 } %3, 0, !dbg !15390
  call void @llvm.dbg.value(metadata i32 %16, metadata !15131, metadata !DIExpression()) #26, !dbg !15392
  call void @llvm.dbg.value(metadata i32 %16, metadata !15125, metadata !DIExpression()) #26, !dbg !15388
  call void @llvm.dbg.value(metadata i32 %16, metadata !15384, metadata !DIExpression()), !dbg !15386
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15408
  store i32 0, i32* %17, align 4, !dbg !15409
  %18 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15410
  %19 = load i8*, i8** %18, align 4, !dbg !15410
  %20 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15411
  store i8* %19, i8** %20, align 4, !dbg !15412
  %21 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15413
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %2, [1 x i32] %21) #27, !dbg !15413
  ret void, !dbg !15414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !15415 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15430, metadata !DIExpression()), !dbg !15433
  call void @llvm.dbg.value(metadata i32 %1, metadata !15431, metadata !DIExpression()), !dbg !15433
  call void @llvm.dbg.value(metadata i32 %2, metadata !15432, metadata !DIExpression()), !dbg !15433
  %4 = icmp eq i32 %2, 0, !dbg !15434
  %5 = icmp ugt i32 %1, %2, !dbg !15434
  %6 = or i1 %4, %5, !dbg !15434
  br i1 %6, label %11, label %7, !dbg !15434

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15436
  store i32 %1, i32* %8, align 4, !dbg !15437
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !15438
  store i32 %2, i32* %9, align 4, !dbg !15439
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15440
  tail call fastcc void @z_waitq_init.306(%union.anon* noundef %10) #28, !dbg !15441
  br label %11, !dbg !15442

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !15433
  ret i32 %12, !dbg !15443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.306(%union.anon* noundef %0) unnamed_addr #12 !dbg !15444 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15449, metadata !DIExpression()), !dbg !15450
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15451
  tail call fastcc void @sys_dlist_init.307(%struct._dnode* noundef %2) #28, !dbg !15452
  ret void, !dbg !15453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.307(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !15454 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15459, metadata !DIExpression()), !dbg !15460
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15461
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15462
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15463
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15464
  ret void, !dbg !15465
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !15466 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15470, metadata !DIExpression()), !dbg !15556
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.308, metadata !15557, metadata !DIExpression()) #26, !dbg !15564
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15566, !srcloc !15572
  call void @llvm.dbg.value(metadata i32 undef, metadata !15569, metadata !DIExpression()) #26, !dbg !15573
  call void @llvm.dbg.value(metadata i32 undef, metadata !15570, metadata !DIExpression()) #26, !dbg !15573
  call void @llvm.dbg.value(metadata i32 undef, metadata !15563, metadata !DIExpression()) #26, !dbg !15564
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.308) #27, !dbg !15574
  br i1 %3, label %5, label %4, !dbg !15577

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.311, i32 0, i32 0), i32 noundef 148) #27, !dbg !15578
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.308) #27, !dbg !15578
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.311, i32 0, i32 0), i32 noundef 148) #27, !dbg !15578
  unreachable, !dbg !15578

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15569, metadata !DIExpression()) #26, !dbg !15573
  call void @llvm.dbg.value(metadata i32 undef, metadata !15563, metadata !DIExpression()) #26, !dbg !15564
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.308) #27, !dbg !15580
  call void @llvm.dbg.value(metadata i32 undef, metadata !15471, metadata !DIExpression()), !dbg !15556
  %6 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15581
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #27, !dbg !15582
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15476, metadata !DIExpression()), !dbg !15556
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15583
  br i1 %8, label %11, label %9, !dbg !15585

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15586, metadata !DIExpression()), !dbg !15592
  call void @llvm.dbg.value(metadata i32 0, metadata !15591, metadata !DIExpression()), !dbg !15592
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !15595
  store i32 0, i32* %10, align 4, !dbg !15596
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #27, !dbg !15597
  br label %19, !dbg !15598

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15599
  %13 = load i32, i32* %12, align 4, !dbg !15599
  %14 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !15601
  %15 = load i32, i32* %14, align 4, !dbg !15601
  %16 = icmp ne i32 %13, %15, !dbg !15602
  %17 = zext i1 %16 to i32, !dbg !15603
  %18 = add i32 %13, %17, !dbg !15604
  store i32 %18, i32* %12, align 4, !dbg !15604
  br label %19

19:                                               ; preds = %11, %9
  %20 = extractvalue { i32, i32 } %2, 0, !dbg !15566
  call void @llvm.dbg.value(metadata i32 %20, metadata !15569, metadata !DIExpression()) #26, !dbg !15573
  call void @llvm.dbg.value(metadata i32 %20, metadata !15563, metadata !DIExpression()) #26, !dbg !15564
  call void @llvm.dbg.value(metadata i32 %20, metadata !15471, metadata !DIExpression()), !dbg !15556
  %21 = insertvalue [1 x i32] poison, i32 %20, 0, !dbg !15605
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.308, [1 x i32] %21) #27, !dbg !15605
  ret void, !dbg !15606
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15607 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15616, metadata !DIExpression()), !dbg !15620
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15615, metadata !DIExpression()), !dbg !15620
  call void @llvm.dbg.value(metadata i32 0, metadata !15617, metadata !DIExpression()), !dbg !15620
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !15621, !srcloc !15630
  call void @llvm.dbg.value(metadata i32 %4, metadata !15624, metadata !DIExpression()) #26, !dbg !15631
  %5 = icmp eq i32 %4, 0, !dbg !15632
  %6 = icmp eq i64 %3, 0, !dbg !15633
  %7 = select i1 %5, i1 true, i1 %6, !dbg !15633
  br i1 %7, label %9, label %8, !dbg !15633

8:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.316, i32 0, i32 0), i32 noundef 122) #27, !dbg !15634
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.317, i32 0, i32 0)) #27, !dbg !15634
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.316, i32 0, i32 0), i32 noundef 122) #27, !dbg !15634
  unreachable, !dbg !15634

9:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.308, metadata !15557, metadata !DIExpression()) #26, !dbg !15636
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15638, !srcloc !15572
  call void @llvm.dbg.value(metadata i32 undef, metadata !15569, metadata !DIExpression()) #26, !dbg !15640
  call void @llvm.dbg.value(metadata i32 undef, metadata !15570, metadata !DIExpression()) #26, !dbg !15640
  call void @llvm.dbg.value(metadata i32 undef, metadata !15563, metadata !DIExpression()) #26, !dbg !15636
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.308) #27, !dbg !15641
  br i1 %11, label %13, label %12, !dbg !15642

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.311, i32 0, i32 0), i32 noundef 148) #27, !dbg !15643
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.308) #27, !dbg !15643
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.311, i32 0, i32 0), i32 noundef 148) #27, !dbg !15643
  unreachable, !dbg !15643

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %10, 0, !dbg !15638
  call void @llvm.dbg.value(metadata i32 %14, metadata !15569, metadata !DIExpression()) #26, !dbg !15640
  call void @llvm.dbg.value(metadata i32 %14, metadata !15563, metadata !DIExpression()) #26, !dbg !15636
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.308) #27, !dbg !15644
  call void @llvm.dbg.value(metadata i32 %14, metadata !15618, metadata !DIExpression()), !dbg !15620
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15645
  %16 = load i32, i32* %15, align 4, !dbg !15645
  %17 = icmp eq i32 %16, 0, !dbg !15645
  br i1 %17, label %23, label %18, !dbg !15647, !prof !15648

18:                                               ; preds = %13
  %19 = add i32 %16, -1, !dbg !15649
  store i32 %19, i32* %15, align 4, !dbg !15649
  call void @llvm.dbg.value(metadata i32 undef, metadata !15651, metadata !DIExpression()) #26, !dbg !15657
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.308, metadata !15656, metadata !DIExpression()) #26, !dbg !15657
  %20 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.308) #27, !dbg !15659
  br i1 %20, label %22, label %21, !dbg !15662

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.318, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.311, i32 0, i32 0), i32 noundef 194) #27, !dbg !15663
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.319, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.308) #27, !dbg !15663
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.311, i32 0, i32 0), i32 noundef 194) #27, !dbg !15663
  unreachable, !dbg !15663

22:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %14, metadata !15651, metadata !DIExpression()) #26, !dbg !15657
  call void @llvm.dbg.value(metadata i32 %14, metadata !15665, metadata !DIExpression()) #26, !dbg !15668
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !15670, !srcloc !15671
  call void @llvm.dbg.value(metadata i32 0, metadata !15617, metadata !DIExpression()), !dbg !15620
  br label %32, !dbg !15672

23:                                               ; preds = %13
  br i1 %6, label %24, label %28, !dbg !15673

24:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !15651, metadata !DIExpression()) #26, !dbg !15674
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.308, metadata !15656, metadata !DIExpression()) #26, !dbg !15674
  %25 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.308) #27, !dbg !15678
  br i1 %25, label %27, label %26, !dbg !15679

26:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.318, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.311, i32 0, i32 0), i32 noundef 194) #27, !dbg !15680
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.319, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.308) #27, !dbg !15680
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.311, i32 0, i32 0), i32 noundef 194) #27, !dbg !15680
  unreachable, !dbg !15680

27:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 %14, metadata !15651, metadata !DIExpression()) #26, !dbg !15674
  call void @llvm.dbg.value(metadata i32 %14, metadata !15665, metadata !DIExpression()) #26, !dbg !15681
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !15683, !srcloc !15671
  call void @llvm.dbg.value(metadata i32 -16, metadata !15617, metadata !DIExpression()), !dbg !15620
  br label %32, !dbg !15684

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !15685
  %30 = insertvalue [1 x i32] poison, i32 %14, 0, !dbg !15686
  %31 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.308, [1 x i32] %30, %union.anon* noundef %29, [1 x i64] %1) #27, !dbg !15686
  call void @llvm.dbg.value(metadata i32 %31, metadata !15617, metadata !DIExpression()), !dbg !15620
  br label %32, !dbg !15687

32:                                               ; preds = %22, %27, %28
  %33 = phi i32 [ 0, %22 ], [ -16, %27 ], [ %31, %28 ], !dbg !15620
  call void @llvm.dbg.value(metadata i32 %33, metadata !15617, metadata !DIExpression()), !dbg !15620
  call void @llvm.dbg.label(metadata !15619), !dbg !15688
  ret i32 %33, !dbg !15689
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !15690 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !15692, metadata !DIExpression()), !dbg !15695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.308, metadata !15557, metadata !DIExpression()) #26, !dbg !15696
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15698, !srcloc !15572
  call void @llvm.dbg.value(metadata i32 undef, metadata !15569, metadata !DIExpression()) #26, !dbg !15700
  call void @llvm.dbg.value(metadata i32 undef, metadata !15570, metadata !DIExpression()) #26, !dbg !15700
  call void @llvm.dbg.value(metadata i32 undef, metadata !15563, metadata !DIExpression()) #26, !dbg !15696
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.308) #27, !dbg !15701
  br i1 %3, label %5, label %4, !dbg !15702

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.311, i32 0, i32 0), i32 noundef 148) #27, !dbg !15703
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.308) #27, !dbg !15703
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.311, i32 0, i32 0), i32 noundef 148) #27, !dbg !15703
  unreachable, !dbg !15703

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15569, metadata !DIExpression()) #26, !dbg !15700
  call void @llvm.dbg.value(metadata i32 undef, metadata !15563, metadata !DIExpression()) #26, !dbg !15696
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.308) #27, !dbg !15704
  call void @llvm.dbg.value(metadata i32 undef, metadata !15694, metadata !DIExpression()), !dbg !15695
  %6 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #27, !dbg !15705
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15693, metadata !DIExpression()), !dbg !15695
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15707
  br i1 %8, label %14, label %9, !dbg !15709

9:                                                ; preds = %5, %9
  %10 = phi %struct.k_thread* [ %12, %9 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !15586, metadata !DIExpression()), !dbg !15710
  call void @llvm.dbg.value(metadata i32 -11, metadata !15591, metadata !DIExpression()), !dbg !15710
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %10, i32 0, i32 7, i32 1, !dbg !15712
  store i32 -11, i32* %11, align 4, !dbg !15713
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %10) #27, !dbg !15714
  %12 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #27, !dbg !15705
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !15693, metadata !DIExpression()), !dbg !15695
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !15707
  br i1 %13, label %14, label %9, !dbg !15709, !llvm.loop !15715

14:                                               ; preds = %9, %5
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15698
  call void @llvm.dbg.value(metadata i32 %15, metadata !15569, metadata !DIExpression()) #26, !dbg !15700
  call void @llvm.dbg.value(metadata i32 %15, metadata !15563, metadata !DIExpression()) #26, !dbg !15696
  call void @llvm.dbg.value(metadata i32 %15, metadata !15694, metadata !DIExpression()), !dbg !15695
  %16 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !15718
  store i32 0, i32* %16, align 4, !dbg !15719
  %17 = insertvalue [1 x i32] poison, i32 %15, 0, !dbg !15720
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.308, [1 x i32] %17) #27, !dbg !15720
  ret void, !dbg !15721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !15722 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15726, metadata !DIExpression()), !dbg !15730
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15727, metadata !DIExpression()), !dbg !15730
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15731
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15731
  %5 = load i8, i8* %4, align 2, !dbg !15731
  call void @llvm.dbg.value(metadata i8 %5, metadata !15728, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15730
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15732
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15732
  %8 = load i8, i8* %7, align 2, !dbg !15732
  call void @llvm.dbg.value(metadata i8 %8, metadata !15729, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15730
  %9 = icmp eq i8 %8, %5, !dbg !15733
  %10 = sext i8 %5 to i32, !dbg !15735
  %11 = sext i8 %8 to i32, !dbg !15735
  %12 = sub nsw i32 %11, %10, !dbg !15735
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15735
  ret i32 %13, !dbg !15736
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15737 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15741, metadata !DIExpression()), !dbg !15742
  %2 = tail call fastcc i32 @slice_time() #28, !dbg !15743
  %3 = icmp eq i32 %2, 0, !dbg !15745
  br i1 %3, label %8, label %4, !dbg !15746

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !15747
  %6 = add i32 %5, %2, !dbg !15749
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15750
  %7 = tail call fastcc i32 @slice_time() #28, !dbg !15751
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !15752
  br label %8, !dbg !15753

8:                                                ; preds = %4, %1
  ret void, !dbg !15754
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #13 !dbg !15755 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15759, metadata !DIExpression()), !dbg !15761
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15762
  call void @llvm.dbg.value(metadata i32 %1, metadata !15760, metadata !DIExpression()), !dbg !15761
  ret i32 %1, !dbg !15763
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15764 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15768, metadata !DIExpression()), !dbg !15777
  call void @llvm.dbg.value(metadata i32 %1, metadata !15769, metadata !DIExpression()), !dbg !15777
  call void @llvm.dbg.value(metadata i32 0, metadata !15770, metadata !DIExpression()), !dbg !15778
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !15786
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15788, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !15795
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !15795
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !15786
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15796
  br i1 %4, label %6, label %5, !dbg !15799

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !15800
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15800
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !15800
  unreachable, !dbg !15800

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !15795
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !15786
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15802
  call void @llvm.dbg.value(metadata i32 undef, metadata !15776, metadata !DIExpression()), !dbg !15778
  call void @llvm.dbg.value(metadata i32 undef, metadata !15770, metadata !DIExpression()), !dbg !15778
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15803
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #28, !dbg !15806
  %8 = icmp sgt i32 %0, 0, !dbg !15807
  %9 = icmp sgt i32 %7, 2, !dbg !15809
  %10 = select i1 %9, i32 %7, i32 2, !dbg !15809
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !15809
  store i32 %11, i32* @slice_ticks, align 4, !dbg !15810
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15811
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !15812
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !15819
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !15819
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15821
  br i1 %12, label %14, label %13, !dbg !15824

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !15825
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15825
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !15825
  unreachable, !dbg !15825

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !15788
  call void @llvm.dbg.value(metadata i32 %15, metadata !15791, metadata !DIExpression()) #26, !dbg !15795
  call void @llvm.dbg.value(metadata i32 %15, metadata !15785, metadata !DIExpression()) #26, !dbg !15786
  call void @llvm.dbg.value(metadata i32 %15, metadata !15776, metadata !DIExpression()), !dbg !15778
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !15819
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #26, !dbg !15830
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #26, !dbg !15832, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 1, metadata !15770, metadata !DIExpression()), !dbg !15778
  call void @llvm.dbg.value(metadata i32 undef, metadata !15770, metadata !DIExpression()), !dbg !15778
  ret void, !dbg !15834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #5 !dbg !15835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15837, metadata !DIExpression()), !dbg !15838
  call void @llvm.dbg.value(metadata i32 %0, metadata !15839, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15854
  call void @llvm.dbg.value(metadata i32 1000, metadata !15842, metadata !DIExpression()), !dbg !15854
  call void @llvm.dbg.value(metadata i32 10000, metadata !15843, metadata !DIExpression()), !dbg !15854
  call void @llvm.dbg.value(metadata i8 1, metadata !15844, metadata !DIExpression()), !dbg !15854
  call void @llvm.dbg.value(metadata i1 true, metadata !15845, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15854
  call void @llvm.dbg.value(metadata i1 true, metadata !15846, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15854
  call void @llvm.dbg.value(metadata i8 0, metadata !15847, metadata !DIExpression()), !dbg !15854
  call void @llvm.dbg.value(metadata i1 true, metadata !15848, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15854
  call void @llvm.dbg.value(metadata i1 false, metadata !15849, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15854
  call void @llvm.dbg.value(metadata i64 0, metadata !15850, metadata !DIExpression()), !dbg !15854
  call void @llvm.dbg.value(metadata i64 0, metadata !15850, metadata !DIExpression()), !dbg !15854
  %2 = mul i32 %0, 10, !dbg !15856
  ret i32 %2, !dbg !15862
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15863 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15865, metadata !DIExpression()), !dbg !15867
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !15868
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !15870, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !15872
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !15872
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !15868
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15873
  br i1 %3, label %5, label %4, !dbg !15874

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !15875
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15875
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !15875
  unreachable, !dbg !15875

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15870
  call void @llvm.dbg.value(metadata i32 %6, metadata !15791, metadata !DIExpression()) #26, !dbg !15872
  call void @llvm.dbg.value(metadata i32 %6, metadata !15785, metadata !DIExpression()) #26, !dbg !15868
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15876
  call void @llvm.dbg.value(metadata i32 %6, metadata !15866, metadata !DIExpression()), !dbg !15867
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15877
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15879
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !15880
  br i1 %9, label %10, label %14, !dbg !15881

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !15882
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !15884
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !15884
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15886
  br i1 %11, label %13, label %12, !dbg !15887

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !15888
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15888
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !15888
  unreachable, !dbg !15888

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !15813, metadata !DIExpression()) #26, !dbg !15884
  call void @llvm.dbg.value(metadata i32 %6, metadata !15827, metadata !DIExpression()) #26, !dbg !15889
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !15891, !srcloc !15833
  br label %33, !dbg !15892

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15893
  %15 = tail call fastcc i32 @slice_time() #28, !dbg !15894
  %16 = icmp eq i32 %15, 0, !dbg !15894
  br i1 %16, label %27, label %17, !dbg !15896

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #28, !dbg !15897
  br i1 %18, label %19, label %27, !dbg !15898

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15899
  %21 = icmp sgt i32 %20, %0, !dbg !15902
  br i1 %21, label %25, label %22, !dbg !15903

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15904
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #28, !dbg !15904
  call void @llvm.dbg.value(metadata i32 %24, metadata !15866, metadata !DIExpression()), !dbg !15867
  br label %28, !dbg !15906

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !15907
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15907
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15909
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !15867
  call void @llvm.dbg.value(metadata i32 %29, metadata !15866, metadata !DIExpression()), !dbg !15867
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !15911
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !15911
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15913
  br i1 %30, label %32, label %31, !dbg !15914

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !15915
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !15915
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !15915
  unreachable, !dbg !15915

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !15813, metadata !DIExpression()) #26, !dbg !15911
  call void @llvm.dbg.value(metadata i32 %29, metadata !15827, metadata !DIExpression()) #26, !dbg !15916
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #26, !dbg !15918, !srcloc !15833
  br label %33, !dbg !15919

33:                                               ; preds = %32, %13
  ret void, !dbg !15919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #13 !dbg !15920 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15924, metadata !DIExpression()), !dbg !15926
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #28, !dbg !15927
  %3 = icmp eq i32 %2, 0, !dbg !15927
  br i1 %3, label %16, label %4, !dbg !15928

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #28, !dbg !15929
  br i1 %5, label %16, label %6, !dbg !15930

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15931
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15931
  %9 = load i8, i8* %8, align 2, !dbg !15931
  %10 = sext i8 %9 to i32, !dbg !15932
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15933
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #28, !dbg !15934
  br i1 %12, label %16, label %13, !dbg !15935

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #28, !dbg !15936
  %15 = xor i1 %14, true, !dbg !15937
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15926
  call void @llvm.dbg.value(metadata i1 %17, metadata !15925, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15926
  ret i1 %17, !dbg !15938
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15939 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15943, metadata !DIExpression()), !dbg !15945
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15946
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15944, metadata !DIExpression()), !dbg !15945
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #28, !dbg !15947
  br i1 %3, label %5, label %4, !dbg !15949

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #28, !dbg !15950
  br label %5, !dbg !15952

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15943, metadata !DIExpression()), !dbg !15945
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !15953
  ret i32 %6, !dbg !15954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !15955 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15957, metadata !DIExpression()), !dbg !15959
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15960
  %3 = load i8, i8* %2, align 1, !dbg !15960
  call void @llvm.dbg.value(metadata i8 %3, metadata !15958, metadata !DIExpression()), !dbg !15959
  %4 = and i8 %3, 31, !dbg !15961
  %5 = icmp ne i8 %4, 0, !dbg !15962
  ret i1 %5, !dbg !15963
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15964 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15966, metadata !DIExpression()), !dbg !15967
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !15968
  br i1 %2, label %3, label %7, !dbg !15970

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15971, metadata !DIExpression()) #26, !dbg !15974
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15977
  %5 = load i8, i8* %4, align 1, !dbg !15978
  %6 = and i8 %5, 127, !dbg !15978
  store i8 %6, i8* %4, align 1, !dbg !15978
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15979, metadata !DIExpression()) #26, !dbg !15982
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15986
  br label %7, !dbg !15987

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15988, metadata !DIExpression()) #26, !dbg !15991
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15993
  %9 = load i8, i8* %8, align 1, !dbg !15994
  %10 = or i8 %9, -128, !dbg !15994
  store i8 %10, i8* %8, align 1, !dbg !15994
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15995, metadata !DIExpression()) #26, !dbg !15998
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16002, metadata !DIExpression()) #26, !dbg !16010
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16008, metadata !DIExpression()) #26, !dbg !16010
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !16012
  br i1 %11, label %12, label %13, !dbg !16015

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 186) #27, !dbg !16016
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 186) #27, !dbg !16016
  unreachable, !dbg !16016

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.328(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16018
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !16009, metadata !DIExpression()) #26, !dbg !16010
  %15 = icmp eq %struct._dnode* %14, null, !dbg !16020
  br i1 %15, label %26, label %16, !dbg !16018

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !16009, metadata !DIExpression()) #26, !dbg !16010
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !16022
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !16009, metadata !DIExpression()) #26, !dbg !16010
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #27, !dbg !16023
  %20 = icmp sgt i32 %19, 0, !dbg !16026
  br i1 %20, label %21, label %23, !dbg !16027

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16028
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #27, !dbg !16030
  br label %28, !dbg !16031

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #27, !dbg !16020
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16009, metadata !DIExpression()) #26, !dbg !16010
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16020
  br i1 %25, label %26, label %16, !dbg !16018, !llvm.loop !16032

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16034
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #27, !dbg !16035
  br label %28, !dbg !16036

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16037
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !16038
  %31 = zext i1 %30 to i32, !dbg !16038
  tail call fastcc void @update_cache(i32 noundef %31) #28, !dbg !16039
  ret void, !dbg !16040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16041 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16043, metadata !DIExpression()), !dbg !16044
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #28, !dbg !16045
  ret i1 %2, !dbg !16046
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16047 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !16049, metadata !DIExpression()), !dbg !16051
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16050, metadata !DIExpression()), !dbg !16051
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #28, !dbg !16052
  br i1 %3, label %4, label %5, !dbg !16055

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1139) #27, !dbg !16056
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1139) #27, !dbg !16056
  unreachable, !dbg !16056

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !16058
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #28, !dbg !16059
  ret void, !dbg !16060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #5 !dbg !16061 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16063, metadata !DIExpression()), !dbg !16064
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16065
  ret i1 %2, !dbg !16066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.328(%struct._dnode* noundef %0) unnamed_addr #13 !dbg !16067 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16071, metadata !DIExpression()), !dbg !16072
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.331(%struct._dnode* noundef %0) #28, !dbg !16073
  br i1 %2, label %6, label %3, !dbg !16073

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16074
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16074
  br label %6, !dbg !16073

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16073
  ret %struct._dnode* %7, !dbg !16075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !16076 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16080, metadata !DIExpression()), !dbg !16084
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16081, metadata !DIExpression()), !dbg !16084
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16085
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16085
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16082, metadata !DIExpression()), !dbg !16084
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16086
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16087
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16088
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16089
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16090
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16091
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16092
  ret void, !dbg !16093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #13 !dbg !16094 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16098, metadata !DIExpression()), !dbg !16100
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16099, metadata !DIExpression()), !dbg !16100
  %3 = icmp eq %struct._dnode* %1, null, !dbg !16101
  br i1 %3, label %6, label %4, !dbg !16102

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #28, !dbg !16103
  br label %6, !dbg !16102

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !16102
  ret %struct._dnode* %7, !dbg !16104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !16105 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16109, metadata !DIExpression()), !dbg !16112
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16110, metadata !DIExpression()), !dbg !16112
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16113
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16113
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16111, metadata !DIExpression()), !dbg !16112
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16114
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16115
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16116
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !16117
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16118
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16119
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16120
  ret void, !dbg !16121
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !16122 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16124, metadata !DIExpression()), !dbg !16126
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16127
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16134, metadata !DIExpression()) #26, !dbg !16137
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16138
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16135, metadata !DIExpression()) #26, !dbg !16137
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !16139
  br i1 %4, label %13, label %5, !dbg !16141

5:                                                ; preds = %1
  %6 = icmp eq %struct.k_thread* %2, null, !dbg !16142
  br i1 %6, label %10, label %7, !dbg !16143

7:                                                ; preds = %5
  %8 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef nonnull %2) #27, !dbg !16144
  %9 = icmp eq i32 %8, 0, !dbg !16144
  br i1 %9, label %10, label %13, !dbg !16145

10:                                               ; preds = %7, %5
  %11 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %3) #27, !dbg !16146
  br i1 %11, label %12, label %13, !dbg !16149

12:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16150
  br label %13

13:                                               ; preds = %1, %7, %10, %12
  %14 = phi %struct.k_thread* [ %2, %12 ], [ %2, %7 ], [ %2, %1 ], [ %3, %10 ], !dbg !16137
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16134, metadata !DIExpression()) #26, !dbg !16137
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !16152
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !16153
  %17 = select i1 %15, %struct.k_thread* %16, %struct.k_thread* %14, !dbg !16153
  call void @llvm.dbg.value(metadata %struct.k_thread* %17, metadata !16125, metadata !DIExpression()), !dbg !16126
  call void @llvm.dbg.value(metadata %struct.k_thread* %17, metadata !16154, metadata !DIExpression()) #26, !dbg !16160
  call void @llvm.dbg.value(metadata i32 %0, metadata !16159, metadata !DIExpression()) #26, !dbg !16160
  %18 = icmp eq i32 %0, 0, !dbg !16163
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16165
  br i1 %18, label %20, label %33, !dbg !16166

20:                                               ; preds = %13
  %21 = icmp eq %struct.k_thread* %19, null, !dbg !16167
  br i1 %21, label %22, label %23, !dbg !16170

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 137) #27, !dbg !16171
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.330, i32 0, i32 0)) #27, !dbg !16171
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 137) #27, !dbg !16171
  unreachable, !dbg !16171

23:                                               ; preds = %20
  %24 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %19) #27, !dbg !16173
  br i1 %24, label %33, label %25, !dbg !16175

25:                                               ; preds = %23
  %26 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %17) #27, !dbg !16176
  br i1 %26, label %33, label %27, !dbg !16178

27:                                               ; preds = %25
  %28 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %19) #27, !dbg !16179
  %29 = icmp eq i32 %28, 0, !dbg !16179
  br i1 %29, label %30, label %33, !dbg !16181

30:                                               ; preds = %27
  %31 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %17) #27, !dbg !16182
  %32 = icmp eq i32 %31, 0, !dbg !16182
  br i1 %32, label %37, label %33, !dbg !16183

33:                                               ; preds = %13, %27, %25, %23, %30
  %34 = icmp eq %struct.k_thread* %17, %19, !dbg !16184
  br i1 %34, label %36, label %35, !dbg !16187

35:                                               ; preds = %33
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #28, !dbg !16188
  br label %36, !dbg !16190

36:                                               ; preds = %35, %33
  tail call fastcc void @update_metairq_preempt(%struct.k_thread* noundef %17) #28, !dbg !16191
  br label %37, !dbg !16192

37:                                               ; preds = %30, %36
  %38 = phi %struct.k_thread* [ %17, %36 ], [ %19, %30 ], !dbg !16165
  store %struct.k_thread* %38, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16165
  ret void, !dbg !16193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #13 !dbg !16194 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16198, metadata !DIExpression()), !dbg !16201
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16199, metadata !DIExpression()), !dbg !16201
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.328(%struct._dnode* noundef %0) #28, !dbg !16202
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16200, metadata !DIExpression()), !dbg !16201
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16199, metadata !DIExpression()), !dbg !16201
  ret %struct.k_thread* %3, !dbg !16203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_metairq(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16204 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16206, metadata !DIExpression()), !dbg !16207
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16208
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16208
  %4 = load i8, i8* %3, align 2, !dbg !16208
  %5 = icmp slt i8 %4, -15, !dbg !16209
  %6 = zext i1 %5 to i32, !dbg !16209
  ret i32 %6, !dbg !16210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16211 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16213, metadata !DIExpression()), !dbg !16214
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16215
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #28, !dbg !16216
  %4 = xor i1 %3, true, !dbg !16217
  ret i1 %4, !dbg !16218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16219 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16221, metadata !DIExpression()), !dbg !16222
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !16223
  %3 = load i16, i16* %2, align 2, !dbg !16223
  %4 = icmp ult i16 %3, 128, !dbg !16224
  %5 = zext i1 %4 to i32, !dbg !16224
  ret i32 %5, !dbg !16225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @update_metairq_preempt(%struct.k_thread* noundef %0) unnamed_addr #14 !dbg !16226 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16228, metadata !DIExpression()), !dbg !16229
  %2 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %0) #28, !dbg !16230
  %3 = icmp eq i32 %2, 0, !dbg !16230
  br i1 %3, label %11, label %4, !dbg !16232

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16233
  %6 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %5) #28, !dbg !16234
  %7 = icmp eq i32 %6, 0, !dbg !16234
  br i1 %7, label %8, label %15, !dbg !16235

8:                                                ; preds = %4
  %9 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %5) #28, !dbg !16236
  %10 = icmp eq i32 %9, 0, !dbg !16236
  br i1 %10, label %13, label %15, !dbg !16237

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #28, !dbg !16238
  br i1 %12, label %15, label %13, !dbg !16240

13:                                               ; preds = %11, %8
  %14 = phi %struct.k_thread* [ %5, %8 ], [ null, %11 ]
  store %struct.k_thread* %14, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16241
  br label %15, !dbg !16242

15:                                               ; preds = %13, %4, %8, %11
  ret void, !dbg !16242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16243 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16249, metadata !DIExpression()), !dbg !16250
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16251
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #28, !dbg !16252
  %4 = xor i1 %3, true, !dbg !16253
  ret i1 %4, !dbg !16254
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16255 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16261, metadata !DIExpression()), !dbg !16262
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16263
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16263
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16264
  ret i1 %4, !dbg !16265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #13 !dbg !16266 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16268, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16269, metadata !DIExpression()), !dbg !16270
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16271
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16271
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !16272
  br i1 %5, label %9, label %6, !dbg !16273

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16274
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !16274
  br label %9, !dbg !16273

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !16273
  ret %struct._dnode* %10, !dbg !16275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.331(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !16276 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16280, metadata !DIExpression()), !dbg !16281
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16282
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16282
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16283
  ret i1 %4, !dbg !16284
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #14 !dbg !16285 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16289, metadata !DIExpression()), !dbg !16292
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16293
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16293
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16290, metadata !DIExpression()), !dbg !16292
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16294
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16294
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16291, metadata !DIExpression()), !dbg !16292
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16295
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16296
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16297
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16298
  tail call fastcc void @sys_dnode_init.332(%struct._dnode* noundef %0) #28, !dbg !16299
  ret void, !dbg !16300
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.332(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !16301 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16303, metadata !DIExpression()), !dbg !16304
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16305
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16306
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16307
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16308
  ret void, !dbg !16309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !16310 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16314, metadata !DIExpression()), !dbg !16316
  call void @llvm.dbg.value(metadata i32 %1, metadata !16315, metadata !DIExpression()), !dbg !16316
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16317
  %4 = load i8, i8* %3, align 1, !dbg !16317
  %5 = zext i8 %4 to i32, !dbg !16318
  %6 = and i32 %5, %1, !dbg !16319
  %7 = icmp ne i32 %6, 0, !dbg !16320
  ret i1 %7, !dbg !16321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16326, metadata !DIExpression()), !dbg !16328
  call void @llvm.dbg.value(metadata i32 %1, metadata !16327, metadata !DIExpression()), !dbg !16328
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #28, !dbg !16329
  ret i1 %3, !dbg !16330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !16331 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16333, metadata !DIExpression()), !dbg !16335
  call void @llvm.dbg.value(metadata i32 %1, metadata !16334, metadata !DIExpression()), !dbg !16335
  %3 = icmp slt i32 %0, %1, !dbg !16336
  ret i1 %3, !dbg !16337
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16338 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16340, metadata !DIExpression()), !dbg !16344
  call void @llvm.dbg.value(metadata i32 0, metadata !16341, metadata !DIExpression()), !dbg !16345
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !16346
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16348, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !16350
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !16350
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !16346
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16351
  br i1 %3, label %5, label %4, !dbg !16352

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !16353
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16353
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !16353
  unreachable, !dbg !16353

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !16350
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !16346
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16354
  call void @llvm.dbg.value(metadata i32 undef, metadata !16343, metadata !DIExpression()), !dbg !16345
  call void @llvm.dbg.value(metadata i32 undef, metadata !16341, metadata !DIExpression()), !dbg !16345
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #28, !dbg !16355
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !16360
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !16360
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16362
  br i1 %6, label %8, label %7, !dbg !16363

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !16364
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16364
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !16364
  unreachable, !dbg !16364

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16348
  call void @llvm.dbg.value(metadata i32 %9, metadata !15791, metadata !DIExpression()) #26, !dbg !16350
  call void @llvm.dbg.value(metadata i32 %9, metadata !15785, metadata !DIExpression()) #26, !dbg !16346
  call void @llvm.dbg.value(metadata i32 %9, metadata !16343, metadata !DIExpression()), !dbg !16345
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !16360
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #26, !dbg !16365
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !16367, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 1, metadata !16341, metadata !DIExpression()), !dbg !16345
  call void @llvm.dbg.value(metadata i32 undef, metadata !16341, metadata !DIExpression()), !dbg !16345
  ret void, !dbg !16368
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16369 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16371, metadata !DIExpression()), !dbg !16372
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !16373
  br i1 %2, label %27, label %3, !dbg !16375

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #28, !dbg !16376
  br i1 %4, label %5, label %27, !dbg !16377

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15988, metadata !DIExpression()) #26, !dbg !16378
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16381
  %7 = load i8, i8* %6, align 1, !dbg !16382
  %8 = or i8 %7, -128, !dbg !16382
  store i8 %8, i8* %6, align 1, !dbg !16382
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15995, metadata !DIExpression()) #26, !dbg !16383
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16002, metadata !DIExpression()) #26, !dbg !16385
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16008, metadata !DIExpression()) #26, !dbg !16385
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !16387
  br i1 %9, label %10, label %11, !dbg !16388

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 186) #27, !dbg !16389
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 186) #27, !dbg !16389
  unreachable, !dbg !16389

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.328(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16390
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !16009, metadata !DIExpression()) #26, !dbg !16385
  %13 = icmp eq %struct._dnode* %12, null, !dbg !16391
  br i1 %13, label %24, label %14, !dbg !16390

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !16009, metadata !DIExpression()) #26, !dbg !16385
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !16392
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !16009, metadata !DIExpression()) #26, !dbg !16385
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #27, !dbg !16393
  %18 = icmp sgt i32 %17, 0, !dbg !16394
  br i1 %18, label %19, label %21, !dbg !16395

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16396
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #27, !dbg !16397
  br label %26, !dbg !16398

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #27, !dbg !16391
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !16009, metadata !DIExpression()) #26, !dbg !16385
  %23 = icmp eq %struct._dnode* %22, null, !dbg !16391
  br i1 %23, label %24, label %14, !dbg !16390, !llvm.loop !16399

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16401
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #27, !dbg !16402
  br label %26, !dbg !16403

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #28, !dbg !16404
  br label %27, !dbg !16405

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !16406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16407 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16409, metadata !DIExpression()), !dbg !16410
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #28, !dbg !16411
  br i1 %2, label %6, label %3, !dbg !16412

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #28, !dbg !16413
  %5 = xor i1 %4, true, !dbg !16412
  br label %6, !dbg !16412

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !16414
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16415 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16417, metadata !DIExpression()), !dbg !16421
  call void @llvm.dbg.value(metadata i32 0, metadata !16418, metadata !DIExpression()), !dbg !16422
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !16423
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16425, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !16427
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !16427
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !16423
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16428
  br i1 %3, label %5, label %4, !dbg !16429

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !16430
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16430
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !16430
  unreachable, !dbg !16430

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !16427
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !16423
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16431
  call void @llvm.dbg.value(metadata i32 undef, metadata !16420, metadata !DIExpression()), !dbg !16422
  call void @llvm.dbg.value(metadata i32 undef, metadata !16418, metadata !DIExpression()), !dbg !16422
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #28, !dbg !16432
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !16435
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !16435
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16437
  br i1 %6, label %8, label %7, !dbg !16438

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !16439
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16439
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !16439
  unreachable, !dbg !16439

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16425
  call void @llvm.dbg.value(metadata i32 %9, metadata !15791, metadata !DIExpression()) #26, !dbg !16427
  call void @llvm.dbg.value(metadata i32 %9, metadata !15785, metadata !DIExpression()) #26, !dbg !16423
  call void @llvm.dbg.value(metadata i32 %9, metadata !16420, metadata !DIExpression()), !dbg !16422
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !16435
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #26, !dbg !16440
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !16442, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 1, metadata !16418, metadata !DIExpression()), !dbg !16422
  call void @llvm.dbg.value(metadata i32 undef, metadata !16418, metadata !DIExpression()), !dbg !16422
  ret void, !dbg !16443
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16444 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16446, metadata !DIExpression()), !dbg !16448
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !16449
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16451, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !16453
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !16453
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !16449
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16454
  br i1 %3, label %5, label %4, !dbg !16455

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !16456
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16456
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !16456
  unreachable, !dbg !16456

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16451
  call void @llvm.dbg.value(metadata i32 %6, metadata !15791, metadata !DIExpression()) #26, !dbg !16453
  call void @llvm.dbg.value(metadata i32 %6, metadata !15785, metadata !DIExpression()) #26, !dbg !16449
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16457
  call void @llvm.dbg.value(metadata i32 %6, metadata !16447, metadata !DIExpression()), !dbg !16448
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #28, !dbg !16458
  br i1 %7, label %8, label %12, !dbg !16460

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !16461
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !16461
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16464
  br i1 %9, label %11, label %10, !dbg !16465

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !16466
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16466
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !16466
  unreachable, !dbg !16466

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !15813, metadata !DIExpression()) #26, !dbg !16461
  call void @llvm.dbg.value(metadata i32 %6, metadata !15827, metadata !DIExpression()) #26, !dbg !16467
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !16469, !srcloc !15833
  br label %14, !dbg !16470

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.337(%struct.k_thread* noundef %0) #28, !dbg !16471
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #28, !dbg !16472
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16473
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #28, !dbg !16473
  br label %14, !dbg !16474

14:                                               ; preds = %12, %11
  ret void, !dbg !16474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16475 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16477, metadata !DIExpression()), !dbg !16478
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16479
  %3 = load i8, i8* %2, align 1, !dbg !16479
  %4 = and i8 %3, 4, !dbg !16480
  %5 = icmp eq i8 %4, 0, !dbg !16481
  ret i1 %5, !dbg !16482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.337(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16483 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16485, metadata !DIExpression()), !dbg !16486
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16487
  %3 = load i8, i8* %2, align 1, !dbg !16488
  %4 = and i8 %3, -5, !dbg !16488
  store i8 %4, i8* %2, align 1, !dbg !16488
  ret void, !dbg !16489
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16490 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16493, metadata !DIExpression()), !dbg !16494
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16492, metadata !DIExpression()), !dbg !16494
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #28, !dbg !16495
  br i1 %4, label %5, label %12, !dbg !16497

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #28, !dbg !16498
  br i1 %6, label %7, label %12, !dbg !16499

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16500, metadata !DIExpression()) #26, !dbg !16506
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16505, metadata !DIExpression()) #26, !dbg !16506
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16509, metadata !DIExpression()) #26, !dbg !16514
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #27, !dbg !16516
  br i1 %8, label %10, label %9, !dbg !16519

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 225) #27, !dbg !16520
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef %0) #27, !dbg !16520
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 225) #27, !dbg !16520
  unreachable, !dbg !16520

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !16500, metadata !DIExpression()) #26, !dbg !16506
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !16522
  br label %16, !dbg !16523

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !16524
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15818, metadata !DIExpression()) #26, !dbg !16524
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #27, !dbg !16527
  br i1 %13, label %15, label %14, !dbg !16528

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !16529
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef %0) #27, !dbg !16529
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !16529
  unreachable, !dbg !16529

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !15813, metadata !DIExpression()) #26, !dbg !16524
  call void @llvm.dbg.value(metadata i32 %3, metadata !15827, metadata !DIExpression()) #26, !dbg !16530
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #26, !dbg !16532, !srcloc !15833
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !16533
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16534 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16538, metadata !DIExpression()), !dbg !16539
  call void @llvm.dbg.value(metadata i32 %0, metadata !16540, metadata !DIExpression()), !dbg !16545
  %2 = icmp eq i32 %0, 0, !dbg !16547
  br i1 %2, label %3, label %6, !dbg !16548

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !16549, !srcloc !16556
  call void @llvm.dbg.value(metadata i32 %4, metadata !16552, metadata !DIExpression()) #26, !dbg !16557
  %5 = icmp eq i32 %4, 0, !dbg !16558
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16539
  ret i1 %7, !dbg !16559
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #13 !dbg !16560 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16563
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16562, metadata !DIExpression()), !dbg !16564
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16565
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16566
  ret i1 %3, !dbg !16567
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16568 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16570, metadata !DIExpression()), !dbg !16572
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !16573
  call void @llvm.dbg.value(metadata i32 %2, metadata !16571, metadata !DIExpression()), !dbg !16572
  ret i32 %2, !dbg !16574
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16575 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16577, metadata !DIExpression()), !dbg !16581
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #28, !dbg !16582
  call void @llvm.dbg.value(metadata i32 0, metadata !16578, metadata !DIExpression()), !dbg !16583
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !16584
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16586, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !16588
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !16588
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !16584
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16589
  br i1 %4, label %6, label %5, !dbg !16590

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !16591
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16591
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !16591
  unreachable, !dbg !16591

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16586
  call void @llvm.dbg.value(metadata i32 %7, metadata !15791, metadata !DIExpression()) #26, !dbg !16588
  call void @llvm.dbg.value(metadata i32 %7, metadata !15785, metadata !DIExpression()) #26, !dbg !16584
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16592
  call void @llvm.dbg.value(metadata i32 %7, metadata !16580, metadata !DIExpression()), !dbg !16583
  call void @llvm.dbg.value(metadata i32 undef, metadata !16578, metadata !DIExpression()), !dbg !16583
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !16593
  br i1 %8, label %9, label %13, !dbg !16597

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15971, metadata !DIExpression()) #26, !dbg !16598
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16601
  %11 = load i8, i8* %10, align 1, !dbg !16602
  %12 = and i8 %11, 127, !dbg !16602
  store i8 %12, i8* %10, align 1, !dbg !16602
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15979, metadata !DIExpression()) #26, !dbg !16603
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16605
  br label %13, !dbg !16606

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #28, !dbg !16607
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16608
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16609
  %16 = zext i1 %15 to i32, !dbg !16609
  tail call fastcc void @update_cache(i32 noundef %16) #28, !dbg !16610
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !16611
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !16611
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16613
  br i1 %17, label %19, label %18, !dbg !16614

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !16615
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16615
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !16615
  unreachable, !dbg !16615

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !15813, metadata !DIExpression()) #26, !dbg !16611
  call void @llvm.dbg.value(metadata i32 %7, metadata !15827, metadata !DIExpression()) #26, !dbg !16616
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #26, !dbg !16618, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 1, metadata !16578, metadata !DIExpression()), !dbg !16583
  call void @llvm.dbg.value(metadata i32 undef, metadata !16578, metadata !DIExpression()), !dbg !16583
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16619
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !16621
  br i1 %21, label %22, label %23, !dbg !16622

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !16623
  br label %23, !dbg !16625

23:                                               ; preds = %22, %19
  ret void, !dbg !16626
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16627 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16629, metadata !DIExpression()), !dbg !16630
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16631
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16632
  ret i32 %3, !dbg !16633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16634 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16636, metadata !DIExpression()), !dbg !16637
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16638
  %3 = load i8, i8* %2, align 1, !dbg !16639
  %4 = or i8 %3, 16, !dbg !16639
  store i8 %4, i8* %2, align 1, !dbg !16639
  ret void, !dbg !16640
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16641 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16642, !srcloc !15794
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16642
  call void @llvm.dbg.value(metadata i32 %2, metadata !15791, metadata !DIExpression()) #26, !dbg !16644
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !16644
  tail call void @z_reschedule_irqlock(i32 noundef %2) #28, !dbg !16645
  ret void, !dbg !16646
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16647 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16649, metadata !DIExpression()), !dbg !16650
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #28, !dbg !16651
  br i1 %2, label %3, label %5, !dbg !16653

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #28, !dbg !16654
  br label %6, !dbg !16656

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15827, metadata !DIExpression()) #26, !dbg !16657
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #26, !dbg !16660, !srcloc !15833
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16661
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16662 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16664, metadata !DIExpression()), !dbg !16666
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !16667
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16669, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !16671
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !16671
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !16667
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16672
  br i1 %3, label %5, label %4, !dbg !16673

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !16674
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16674
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !16674
  unreachable, !dbg !16674

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16669
  call void @llvm.dbg.value(metadata i32 %6, metadata !15791, metadata !DIExpression()) #26, !dbg !16671
  call void @llvm.dbg.value(metadata i32 %6, metadata !15785, metadata !DIExpression()) #26, !dbg !16667
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16675
  call void @llvm.dbg.value(metadata i32 %6, metadata !16665, metadata !DIExpression()), !dbg !16666
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #28, !dbg !16676
  br i1 %7, label %12, label %8, !dbg !16678

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !16679
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !16679
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16682
  br i1 %9, label %11, label %10, !dbg !16683

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !16684
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16684
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !16684
  unreachable, !dbg !16684

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !15813, metadata !DIExpression()) #26, !dbg !16679
  call void @llvm.dbg.value(metadata i32 %6, metadata !15827, metadata !DIExpression()) #26, !dbg !16685
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !16687, !srcloc !15833
  br label %14, !dbg !16688

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #28, !dbg !16689
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #28, !dbg !16690
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16691
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #28, !dbg !16691
  br label %14, !dbg !16692

14:                                               ; preds = %12, %11
  ret void, !dbg !16692
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16693 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16695, metadata !DIExpression()), !dbg !16696
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16697
  %3 = load i8, i8* %2, align 1, !dbg !16697
  %4 = and i8 %3, 16, !dbg !16698
  %5 = icmp ne i8 %4, 0, !dbg !16699
  ret i1 %5, !dbg !16700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16701 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16703, metadata !DIExpression()), !dbg !16704
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16705
  %3 = load i8, i8* %2, align 1, !dbg !16706
  %4 = and i8 %3, -17, !dbg !16706
  store i8 %4, i8* %2, align 1, !dbg !16706
  ret void, !dbg !16707
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16708 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16718, metadata !DIExpression()), !dbg !16722
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16716, metadata !DIExpression()), !dbg !16722
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16717, metadata !DIExpression()), !dbg !16722
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16723
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !16723
  br i1 %5, label %9, label %6, !dbg !16723

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #28, !dbg !16723
  br i1 %7, label %9, label %8, !dbg !16726

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.340, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 773) #27, !dbg !16727
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 773) #27, !dbg !16727
  unreachable, !dbg !16727

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !16719, metadata !DIExpression()), !dbg !16729
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !16730
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16732, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !16734
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !16734
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !16730
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16735
  br i1 %11, label %13, label %12, !dbg !16736

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !16737
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16737
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !16737
  unreachable, !dbg !16737

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !16734
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !16730
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16738
  call void @llvm.dbg.value(metadata i32 undef, metadata !16721, metadata !DIExpression()), !dbg !16729
  call void @llvm.dbg.value(metadata i32 undef, metadata !16719, metadata !DIExpression()), !dbg !16729
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #28, !dbg !16739
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !16742
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !16742
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16744
  br i1 %14, label %16, label %15, !dbg !16745

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !16746
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16746
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !16746
  unreachable, !dbg !16746

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !16732
  call void @llvm.dbg.value(metadata i32 %17, metadata !15791, metadata !DIExpression()) #26, !dbg !16734
  call void @llvm.dbg.value(metadata i32 %17, metadata !15785, metadata !DIExpression()) #26, !dbg !16730
  call void @llvm.dbg.value(metadata i32 %17, metadata !16721, metadata !DIExpression()), !dbg !16729
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !16742
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #26, !dbg !16747
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #26, !dbg !16749, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 1, metadata !16719, metadata !DIExpression()), !dbg !16729
  call void @llvm.dbg.value(metadata i32 undef, metadata !16719, metadata !DIExpression()), !dbg !16729
  ret void, !dbg !16750
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16751 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16753, metadata !DIExpression()), !dbg !16754
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16755
  %3 = load i8, i8* %2, align 1, !dbg !16755
  %4 = and i8 %3, 1, !dbg !16756
  %5 = icmp ne i8 %4, 0, !dbg !16757
  ret i1 %5, !dbg !16758
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16759 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16763, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16761, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16762, metadata !DIExpression()), !dbg !16764
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #28, !dbg !16765
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #28, !dbg !16766
  ret void, !dbg !16767
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !16768 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16772, metadata !DIExpression()), !dbg !16774
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16773, metadata !DIExpression()), !dbg !16774
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #28, !dbg !16775
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #28, !dbg !16776
  %3 = icmp eq %union.anon* %1, null, !dbg !16777
  br i1 %3, label %24, label %4, !dbg !16779

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16780
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !16782
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !16783
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !16002, metadata !DIExpression()) #26, !dbg !16784
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16008, metadata !DIExpression()) #26, !dbg !16784
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !16786
  br i1 %7, label %8, label %9, !dbg !16787

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 186) #27, !dbg !16788
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 186) #27, !dbg !16788
  unreachable, !dbg !16788

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.328(%struct._dnode* noundef nonnull %6) #27, !dbg !16789
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !16009, metadata !DIExpression()) #26, !dbg !16784
  %11 = icmp eq %struct._dnode* %10, null, !dbg !16790
  br i1 %11, label %22, label %12, !dbg !16789

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !16009, metadata !DIExpression()) #26, !dbg !16784
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !16791
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16009, metadata !DIExpression()) #26, !dbg !16784
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #27, !dbg !16792
  %16 = icmp sgt i32 %15, 0, !dbg !16793
  br i1 %16, label %17, label %19, !dbg !16794

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16795
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !16796
  br label %24, !dbg !16797

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #27, !dbg !16790
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16009, metadata !DIExpression()) #26, !dbg !16784
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16790
  br i1 %21, label %22, label %12, !dbg !16789, !llvm.loop !16798

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16800
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #27, !dbg !16801
  br label %24, !dbg !16802

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !16803
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16804 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16809, metadata !DIExpression()), !dbg !16810
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16808, metadata !DIExpression()), !dbg !16810
  %4 = icmp eq i64 %3, -1, !dbg !16811
  br i1 %4, label %6, label %5, !dbg !16813

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.341(%struct.k_thread* noundef %0, [1 x i64] %1) #28, !dbg !16814
  br label %6, !dbg !16816

6:                                                ; preds = %5, %2
  ret void, !dbg !16817
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.341(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16818 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16821, metadata !DIExpression()), !dbg !16822
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16820, metadata !DIExpression()), !dbg !16822
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16823
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !16824
  ret void, !dbg !16825
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16826 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16828, metadata !DIExpression()), !dbg !16836
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16837
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16837
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16829, metadata !DIExpression()), !dbg !16836
  call void @llvm.dbg.value(metadata i32 0, metadata !16830, metadata !DIExpression()), !dbg !16838
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !16839
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16841, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !16843
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !16843
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !16839
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16844
  br i1 %5, label %7, label %6, !dbg !16845

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !16846
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16846
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !16846
  unreachable, !dbg !16846

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !16843
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !16839
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16847
  call void @llvm.dbg.value(metadata i32 undef, metadata !16832, metadata !DIExpression()), !dbg !16838
  call void @llvm.dbg.value(metadata i32 undef, metadata !16830, metadata !DIExpression()), !dbg !16838
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16848
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !16849
  %10 = load i8, i8* %9, align 1, !dbg !16849
  %11 = and i8 %10, 40, !dbg !16850
  %12 = icmp eq i8 %11, 0, !dbg !16850
  call void @llvm.dbg.value(metadata i1 %12, metadata !16833, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16851
  br i1 %12, label %13, label %20, !dbg !16852

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16853
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !16853
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !16853
  %17 = icmp eq %union.anon* %16, null, !dbg !16857
  br i1 %17, label %19, label %18, !dbg !16858

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #28, !dbg !16859
  br label %19, !dbg !16861

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.337(%struct.k_thread* noundef nonnull %3) #28, !dbg !16862
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #28, !dbg !16863
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #28, !dbg !16864
  br label %20, !dbg !16865

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !16866
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !16866
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16868
  br i1 %21, label %23, label %22, !dbg !16869

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !16870
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16870
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !16870
  unreachable, !dbg !16870

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !16841
  call void @llvm.dbg.value(metadata i32 %24, metadata !15791, metadata !DIExpression()) #26, !dbg !16843
  call void @llvm.dbg.value(metadata i32 %24, metadata !15785, metadata !DIExpression()) #26, !dbg !16839
  call void @llvm.dbg.value(metadata i32 %24, metadata !16832, metadata !DIExpression()), !dbg !16838
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !16866
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #26, !dbg !16871
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #26, !dbg !16873, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 1, metadata !16830, metadata !DIExpression()), !dbg !16838
  call void @llvm.dbg.value(metadata i32 undef, metadata !16830, metadata !DIExpression()), !dbg !16838
  ret void, !dbg !16874
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16875 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16877, metadata !DIExpression()), !dbg !16878
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #28, !dbg !16879
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #28, !dbg !16880
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #28, !dbg !16881
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16882
  store %union.anon* null, %union.anon** %3, align 8, !dbg !16883
  ret void, !dbg !16884
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !16885 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16889, metadata !DIExpression()), !dbg !16890
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16891
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !16891
  %4 = icmp eq %union.anon* %3, null, !dbg !16891
  br i1 %4, label %5, label %6, !dbg !16894

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 726) #27, !dbg !16895
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 726) #27, !dbg !16895
  unreachable, !dbg !16895

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !16897
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16898 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16900, metadata !DIExpression()), !dbg !16901
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16902
  %3 = load i8, i8* %2, align 1, !dbg !16903
  %4 = and i8 %3, -3, !dbg !16903
  store i8 %4, i8* %2, align 1, !dbg !16903
  ret void, !dbg !16904
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16905 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16907, metadata !DIExpression()), !dbg !16908
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #28, !dbg !16909
  br i1 %2, label %3, label %7, !dbg !16911

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15971, metadata !DIExpression()) #26, !dbg !16912
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16915
  %5 = load i8, i8* %4, align 1, !dbg !16916
  %6 = and i8 %5, 127, !dbg !16916
  store i8 %6, i8* %4, align 1, !dbg !16916
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15979, metadata !DIExpression()) #26, !dbg !16917
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16919
  br label %7, !dbg !16920

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16921
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16922
  %10 = zext i1 %9 to i32, !dbg !16922
  tail call fastcc void @update_cache(i32 noundef %10) #28, !dbg !16923
  ret void, !dbg !16924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !16925 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16927, metadata !DIExpression()), !dbg !16928
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16929
  %3 = load i8, i8* %2, align 1, !dbg !16930
  %4 = or i8 %3, 2, !dbg !16930
  store i8 %4, i8* %2, align 1, !dbg !16930
  ret void, !dbg !16931
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #25 !dbg !16932 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16934, metadata !DIExpression()), !dbg !16938
  call void @llvm.dbg.value(metadata i32 0, metadata !16935, metadata !DIExpression()), !dbg !16939
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !16940
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16942, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !16944
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !16944
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !16940
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16945
  br i1 %3, label %5, label %4, !dbg !16946

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !16947
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16947
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !16947
  unreachable, !dbg !16947

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !16944
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !16940
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16948
  call void @llvm.dbg.value(metadata i32 undef, metadata !16937, metadata !DIExpression()), !dbg !16939
  call void @llvm.dbg.value(metadata i32 undef, metadata !16935, metadata !DIExpression()), !dbg !16939
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #28, !dbg !16949
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !16952
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !16952
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16954
  br i1 %6, label %8, label %7, !dbg !16955

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !16956
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16956
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !16956
  unreachable, !dbg !16956

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16942
  call void @llvm.dbg.value(metadata i32 %9, metadata !15791, metadata !DIExpression()) #26, !dbg !16944
  call void @llvm.dbg.value(metadata i32 %9, metadata !15785, metadata !DIExpression()) #26, !dbg !16940
  call void @llvm.dbg.value(metadata i32 %9, metadata !16937, metadata !DIExpression()), !dbg !16939
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !16952
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #26, !dbg !16957
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !16959, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 1, metadata !16935, metadata !DIExpression()), !dbg !16939
  call void @llvm.dbg.value(metadata i32 undef, metadata !16935, metadata !DIExpression()), !dbg !16939
  ret void, !dbg !16960
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16961 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16967, metadata !DIExpression()), !dbg !16972
  call void @llvm.dbg.value(metadata i32 %0, metadata !16965, metadata !DIExpression()), !dbg !16972
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16966, metadata !DIExpression()), !dbg !16972
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16973
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #28, !dbg !16974
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16975
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16976
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #28, !dbg !16977
  call void @llvm.dbg.value(metadata i32 %6, metadata !16968, metadata !DIExpression()), !dbg !16972
  call void @llvm.dbg.value(metadata i32 0, metadata !16969, metadata !DIExpression()), !dbg !16978
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !16979
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !16981, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !16983
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !16983
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !16979
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16984
  br i1 %8, label %10, label %9, !dbg !16985

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !16986
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16986
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !16986
  unreachable, !dbg !16986

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !16983
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !16979
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !16987
  call void @llvm.dbg.value(metadata i32 undef, metadata !16971, metadata !DIExpression()), !dbg !16978
  call void @llvm.dbg.value(metadata i32 undef, metadata !16969, metadata !DIExpression()), !dbg !16978
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16988
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16992
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !16993
  br i1 %13, label %14, label %15, !dbg !16994

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16995
  br label %15, !dbg !16997

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !16998
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !16998
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17000
  br i1 %16, label %18, label %17, !dbg !17001

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !17002
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17002
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !17002
  unreachable, !dbg !17002

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !16981
  call void @llvm.dbg.value(metadata i32 %19, metadata !15791, metadata !DIExpression()) #26, !dbg !16983
  call void @llvm.dbg.value(metadata i32 %19, metadata !15785, metadata !DIExpression()) #26, !dbg !16979
  call void @llvm.dbg.value(metadata i32 %19, metadata !16971, metadata !DIExpression()), !dbg !16978
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !16998
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #26, !dbg !17003
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #26, !dbg !17005, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 1, metadata !16969, metadata !DIExpression()), !dbg !16978
  call void @llvm.dbg.value(metadata i32 undef, metadata !16969, metadata !DIExpression()), !dbg !16978
  ret i32 %6, !dbg !17006
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17007 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17012, metadata !DIExpression()), !dbg !17015
  call void @llvm.dbg.value(metadata i64 undef, metadata !17014, metadata !DIExpression()), !dbg !17015
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17011, metadata !DIExpression()), !dbg !17015
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !17013, metadata !DIExpression()), !dbg !17015
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17016
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17017
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !17018
  br i1 %6, label %7, label %8, !dbg !17021

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 846) #27, !dbg !17022
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 846) #27, !dbg !17022
  unreachable, !dbg !17022

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !17024
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17026, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !17028
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !17028
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !17024
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17029
  br i1 %10, label %12, label %11, !dbg !17030

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !17031
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17031
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !17031
  unreachable, !dbg !17031

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !17028
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !17024
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17032
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17033
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #28, !dbg !17034
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16509, metadata !DIExpression()) #26, !dbg !17035
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #27, !dbg !17037
  br i1 %14, label %16, label %15, !dbg !17038

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 225) #27, !dbg !17039
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef %0) #27, !dbg !17039
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 225) #27, !dbg !17039
  unreachable, !dbg !17039

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !16500, metadata !DIExpression()) #26, !dbg !17040
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16505, metadata !DIExpression()) #26, !dbg !17040
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16509, metadata !DIExpression()) #26, !dbg !17042
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17044
  br i1 %17, label %19, label %18, !dbg !17045

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 225) #27, !dbg !17046
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17046
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 225) #27, !dbg !17046
  unreachable, !dbg !17046

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !16500, metadata !DIExpression()) #26, !dbg !17040
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #27, !dbg !17047
  ret i32 %21, !dbg !17048
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17049 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17053, metadata !DIExpression()), !dbg !17058
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17054, metadata !DIExpression()), !dbg !17058
  call void @llvm.dbg.value(metadata i32 0, metadata !17055, metadata !DIExpression()), !dbg !17059
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !17060
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17062, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !17064
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !17064
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !17060
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17065
  br i1 %3, label %5, label %4, !dbg !17066

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !17067
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17067
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !17067
  unreachable, !dbg !17067

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !17064
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !17060
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17068
  call void @llvm.dbg.value(metadata i32 undef, metadata !17057, metadata !DIExpression()), !dbg !17059
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17054, metadata !DIExpression()), !dbg !17058
  call void @llvm.dbg.value(metadata i32 undef, metadata !17055, metadata !DIExpression()), !dbg !17059
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #28, !dbg !17069
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17054, metadata !DIExpression()), !dbg !17058
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17072
  br i1 %8, label %10, label %9, !dbg !17074

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #28, !dbg !17075
  br label %10, !dbg !17077

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !17078
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !17078
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17080
  br i1 %11, label %13, label %12, !dbg !17081

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !17082
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17082
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !17082
  unreachable, !dbg !17082

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17062
  call void @llvm.dbg.value(metadata i32 %14, metadata !15791, metadata !DIExpression()) #26, !dbg !17064
  call void @llvm.dbg.value(metadata i32 %14, metadata !15785, metadata !DIExpression()) #26, !dbg !17060
  call void @llvm.dbg.value(metadata i32 %14, metadata !17057, metadata !DIExpression()), !dbg !17059
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !17078
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #26, !dbg !17083
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !17085, !srcloc !15833
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17054, metadata !DIExpression()), !dbg !17058
  call void @llvm.dbg.value(metadata i32 undef, metadata !17055, metadata !DIExpression()), !dbg !17059
  ret %struct.k_thread* %7, !dbg !17086
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17087 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17089, metadata !DIExpression()), !dbg !17094
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17090, metadata !DIExpression()), !dbg !17094
  call void @llvm.dbg.value(metadata i32 0, metadata !17091, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !17096
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17098, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !17100
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !17100
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !17096
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17101
  br i1 %3, label %5, label %4, !dbg !17102

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !17103
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17103
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !17103
  unreachable, !dbg !17103

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !17100
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !17096
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17104
  call void @llvm.dbg.value(metadata i32 undef, metadata !17093, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17090, metadata !DIExpression()), !dbg !17094
  call void @llvm.dbg.value(metadata i32 undef, metadata !17091, metadata !DIExpression()), !dbg !17095
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #28, !dbg !17105
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17090, metadata !DIExpression()), !dbg !17094
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17108
  br i1 %8, label %11, label %9, !dbg !17110

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #28, !dbg !17111
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #28, !dbg !17113
  br label %11, !dbg !17114

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !17115
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !17115
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17117
  br i1 %12, label %14, label %13, !dbg !17118

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !17119
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17119
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !17119
  unreachable, !dbg !17119

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !17098
  call void @llvm.dbg.value(metadata i32 %15, metadata !15791, metadata !DIExpression()) #26, !dbg !17100
  call void @llvm.dbg.value(metadata i32 %15, metadata !15785, metadata !DIExpression()) #26, !dbg !17096
  call void @llvm.dbg.value(metadata i32 %15, metadata !17093, metadata !DIExpression()), !dbg !17095
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !17115
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #26, !dbg !17120
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #26, !dbg !17122, !srcloc !15833
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17090, metadata !DIExpression()), !dbg !17094
  call void @llvm.dbg.value(metadata i32 undef, metadata !17091, metadata !DIExpression()), !dbg !17095
  ret %struct.k_thread* %7, !dbg !17123
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17124 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17126, metadata !DIExpression()), !dbg !17127
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16934, metadata !DIExpression()) #26, !dbg !17128
  call void @llvm.dbg.value(metadata i32 0, metadata !16935, metadata !DIExpression()) #26, !dbg !17130
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !17131
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17133, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !17135
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !17135
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !17131
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17136
  br i1 %3, label %5, label %4, !dbg !17137

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !17138
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17138
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !17138
  unreachable, !dbg !17138

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !17135
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !17131
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17139
  call void @llvm.dbg.value(metadata i32 undef, metadata !16937, metadata !DIExpression()) #26, !dbg !17130
  call void @llvm.dbg.value(metadata i32 undef, metadata !16935, metadata !DIExpression()) #26, !dbg !17130
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !17140
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !17141
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !17141
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17143
  br i1 %6, label %8, label %7, !dbg !17144

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !17145
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17145
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !17145
  unreachable, !dbg !17145

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17133
  call void @llvm.dbg.value(metadata i32 %9, metadata !15791, metadata !DIExpression()) #26, !dbg !17135
  call void @llvm.dbg.value(metadata i32 %9, metadata !15785, metadata !DIExpression()) #26, !dbg !17131
  call void @llvm.dbg.value(metadata i32 %9, metadata !16937, metadata !DIExpression()) #26, !dbg !17130
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !17141
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #26, !dbg !17146
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !17148, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 1, metadata !16935, metadata !DIExpression()) #26, !dbg !17130
  call void @llvm.dbg.value(metadata i32 undef, metadata !16935, metadata !DIExpression()) #26, !dbg !17130
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #28, !dbg !17149
  ret void, !dbg !17150
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17151 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17153, metadata !DIExpression()), !dbg !17159
  call void @llvm.dbg.value(metadata i32 %1, metadata !17154, metadata !DIExpression()), !dbg !17159
  call void @llvm.dbg.value(metadata i8 0, metadata !17155, metadata !DIExpression()), !dbg !17159
  call void @llvm.dbg.value(metadata i32 0, metadata !17156, metadata !DIExpression()), !dbg !17160
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !17161
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17163, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !17165
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !17165
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !17161
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17166
  br i1 %4, label %6, label %5, !dbg !17167

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !17168
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17168
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !17168
  unreachable, !dbg !17168

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !17165
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !17161
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17169
  call void @llvm.dbg.value(metadata i32 undef, metadata !17158, metadata !DIExpression()), !dbg !17160
  call void @llvm.dbg.value(metadata i8 poison, metadata !17155, metadata !DIExpression()), !dbg !17159
  call void @llvm.dbg.value(metadata i32 undef, metadata !17156, metadata !DIExpression()), !dbg !17160
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #28, !dbg !17170
  call void @llvm.dbg.value(metadata i1 %9, metadata !17155, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17159
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !17173

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15971, metadata !DIExpression()) #26, !dbg !17174
  %14 = load i8, i8* %7, align 1, !dbg !17180
  %15 = and i8 %14, 127, !dbg !17180
  store i8 %15, i8* %7, align 1, !dbg !17180
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15979, metadata !DIExpression()) #26, !dbg !17181
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !17183
  store i8 %12, i8* %11, align 2, !dbg !17184
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15988, metadata !DIExpression()) #26, !dbg !17185
  %16 = load i8, i8* %7, align 1, !dbg !17187
  %17 = or i8 %16, -128, !dbg !17187
  store i8 %17, i8* %7, align 1, !dbg !17187
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15995, metadata !DIExpression()) #26, !dbg !17188
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16002, metadata !DIExpression()) #26, !dbg !17190
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16008, metadata !DIExpression()) #26, !dbg !17190
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #27, !dbg !17192
  br i1 %18, label %19, label %20, !dbg !17193

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 186) #27, !dbg !17194
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 186) #27, !dbg !17194
  unreachable, !dbg !17194

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.328(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17195
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !16009, metadata !DIExpression()) #26, !dbg !17190
  %22 = icmp eq %struct._dnode* %21, null, !dbg !17196
  br i1 %22, label %32, label %23, !dbg !17195

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16009, metadata !DIExpression()) #26, !dbg !17190
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !17197
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !16009, metadata !DIExpression()) #26, !dbg !17190
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #27, !dbg !17198
  %27 = icmp sgt i32 %26, 0, !dbg !17199
  br i1 %27, label %28, label %29, !dbg !17200

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #27, !dbg !17201
  br label %33, !dbg !17202

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #27, !dbg !17196
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !16009, metadata !DIExpression()) #26, !dbg !17190
  %31 = icmp eq %struct._dnode* %30, null, !dbg !17196
  br i1 %31, label %32, label %23, !dbg !17195, !llvm.loop !17203

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #27, !dbg !17205
  br label %33, !dbg !17206

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #28, !dbg !17207
  br label %35, !dbg !17208

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !17209
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !17211
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !17211
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17213
  br i1 %36, label %38, label %37, !dbg !17214

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !17215
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17215
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !17215
  unreachable, !dbg !17215

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !17163
  call void @llvm.dbg.value(metadata i32 %39, metadata !15791, metadata !DIExpression()) #26, !dbg !17165
  call void @llvm.dbg.value(metadata i32 %39, metadata !15785, metadata !DIExpression()) #26, !dbg !17161
  call void @llvm.dbg.value(metadata i32 %39, metadata !17158, metadata !DIExpression()), !dbg !17160
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !17211
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #26, !dbg !17216
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #26, !dbg !17218, !srcloc !15833
  call void @llvm.dbg.value(metadata i8 poison, metadata !17155, metadata !DIExpression()), !dbg !17159
  call void @llvm.dbg.value(metadata i32 undef, metadata !17156, metadata !DIExpression()), !dbg !17160
  ret i1 %9, !dbg !17219
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17220 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17224, metadata !DIExpression()), !dbg !17227
  call void @llvm.dbg.value(metadata i32 %1, metadata !17225, metadata !DIExpression()), !dbg !17227
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #28, !dbg !17228
  call void @llvm.dbg.value(metadata i1 %3, metadata !17226, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17227
  br i1 %3, label %4, label %12, !dbg !17229

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17231
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17232
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17232
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17232
  %9 = load i8, i8* %8, align 1, !dbg !17232
  %10 = icmp eq i8 %9, 0, !dbg !17233
  br i1 %10, label %11, label %12, !dbg !17234

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !17235
  br label %12, !dbg !17237

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !17238
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !17239 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17241, metadata !DIExpression()), !dbg !17244
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !17245
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17247, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !17249
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !17249
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !17245
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17250
  br i1 %2, label %4, label %3, !dbg !17251

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !17252
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17252
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !17252
  unreachable, !dbg !17252

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !17249
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !17245
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17253
  call void @llvm.dbg.value(metadata i32 undef, metadata !17243, metadata !DIExpression()), !dbg !17244
  call void @llvm.dbg.value(metadata i32 undef, metadata !17241, metadata !DIExpression()), !dbg !17244
  tail call fastcc void @z_sched_lock() #28, !dbg !17254
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !17257
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !17257
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17259
  br i1 %5, label %7, label %6, !dbg !17260

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !17261
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17261
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !17261
  unreachable, !dbg !17261

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !17247
  call void @llvm.dbg.value(metadata i32 %8, metadata !15791, metadata !DIExpression()) #26, !dbg !17249
  call void @llvm.dbg.value(metadata i32 %8, metadata !15785, metadata !DIExpression()) #26, !dbg !17245
  call void @llvm.dbg.value(metadata i32 %8, metadata !17243, metadata !DIExpression()), !dbg !17244
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !17257
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #26, !dbg !17262
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #26, !dbg !17264, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 1, metadata !17241, metadata !DIExpression()), !dbg !17244
  call void @llvm.dbg.value(metadata i32 undef, metadata !17241, metadata !DIExpression()), !dbg !17244
  ret void, !dbg !17265
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !17266 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17267, !srcloc !16556
  call void @llvm.dbg.value(metadata i32 %1, metadata !16552, metadata !DIExpression()) #26, !dbg !17272
  %2 = icmp eq i32 %1, 0, !dbg !17273
  br i1 %2, label %4, label %3, !dbg !17274

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.353, i32 0, i32 0), i32 noundef 253) #27, !dbg !17275
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.330, i32 0, i32 0)) #27, !dbg !17275
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.353, i32 0, i32 0), i32 noundef 253) #27, !dbg !17275
  unreachable, !dbg !17275

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17277
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17277
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17277
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17277
  %9 = load i8, i8* %8, align 1, !dbg !17277
  %10 = icmp eq i8 %9, 1, !dbg !17277
  br i1 %10, label %11, label %12, !dbg !17280

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.353, i32 0, i32 0), i32 noundef 254) #27, !dbg !17281
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.330, i32 0, i32 0)) #27, !dbg !17281
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.353, i32 0, i32 0), i32 noundef 254) #27, !dbg !17281
  unreachable, !dbg !17281

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !17283
  store i8 %13, i8* %8, align 1, !dbg !17283
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17284, !srcloc !17286
  ret void, !dbg !17287
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !17288 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17290, metadata !DIExpression()), !dbg !17293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !17294
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17296, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !17298
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !17298
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !17294
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17299
  br i1 %2, label %4, label %3, !dbg !17300

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !17301
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17301
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !17301
  unreachable, !dbg !17301

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !17298
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !17294
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17302
  call void @llvm.dbg.value(metadata i32 undef, metadata !17292, metadata !DIExpression()), !dbg !17293
  call void @llvm.dbg.value(metadata i32 undef, metadata !17290, metadata !DIExpression()), !dbg !17293
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17303
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17303
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17303
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17303
  %9 = load i8, i8* %8, align 1, !dbg !17303
  %10 = icmp eq i8 %9, 0, !dbg !17303
  br i1 %10, label %11, label %12, !dbg !17308

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.357, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 999) #27, !dbg !17309
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.330, i32 0, i32 0)) #27, !dbg !17309
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 999) #27, !dbg !17309
  unreachable, !dbg !17309

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17311, !srcloc !16556
  call void @llvm.dbg.value(metadata i32 %13, metadata !16552, metadata !DIExpression()) #26, !dbg !17316
  %14 = icmp eq i32 %13, 0, !dbg !17317
  br i1 %14, label %16, label %15, !dbg !17318

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1000) #27, !dbg !17319
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.330, i32 0, i32 0)) #27, !dbg !17319
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1000) #27, !dbg !17319
  unreachable, !dbg !17319

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17321
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !17322
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !17322
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !17322
  %21 = load i8, i8* %20, align 1, !dbg !17323
  %22 = add i8 %21, 1, !dbg !17323
  store i8 %22, i8* %20, align 1, !dbg !17323
  tail call fastcc void @update_cache(i32 noundef 0) #28, !dbg !17324
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !17325
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !17325
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17327
  br i1 %23, label %25, label %24, !dbg !17328

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !17329
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17329
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !17329
  unreachable, !dbg !17329

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !17296
  call void @llvm.dbg.value(metadata i32 %26, metadata !15791, metadata !DIExpression()) #26, !dbg !17298
  call void @llvm.dbg.value(metadata i32 %26, metadata !15785, metadata !DIExpression()) #26, !dbg !17294
  call void @llvm.dbg.value(metadata i32 %26, metadata !17292, metadata !DIExpression()), !dbg !17293
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !17325
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #26, !dbg !17330
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #26, !dbg !17332, !srcloc !15833
  call void @llvm.dbg.value(metadata i32 1, metadata !17290, metadata !DIExpression()), !dbg !17293
  call void @llvm.dbg.value(metadata i32 undef, metadata !17290, metadata !DIExpression()), !dbg !17293
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !17333
  ret void, !dbg !17334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #13 !dbg !17335 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17336
  ret %struct.k_thread* %1, !dbg !17337
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !17338 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !17342, metadata !DIExpression()), !dbg !17347
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !17343, metadata !DIExpression()), !dbg !17347
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !17348
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17344, metadata !DIExpression()), !dbg !17347
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !17349
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17345, metadata !DIExpression()), !dbg !17347
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #28, !dbg !17350
  call void @llvm.dbg.value(metadata i32 %5, metadata !17346, metadata !DIExpression()), !dbg !17347
  %6 = icmp sgt i32 %5, 0, !dbg !17351
  br i1 %6, label %17, label %7, !dbg !17353

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !17354
  br i1 %8, label %17, label %9, !dbg !17356

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !17357
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !17357
  %12 = load i32, i32* %11, align 8, !dbg !17357
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !17359
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !17359
  %15 = load i32, i32* %14, align 8, !dbg !17359
  %16 = icmp ult i32 %12, %15, !dbg !17360
  br label %17, !dbg !17361

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !17362
  ret i1 %18, !dbg !17363
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17364 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17381, metadata !DIExpression()), !dbg !17396
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17382, metadata !DIExpression()), !dbg !17396
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #28, !dbg !17397
  br i1 %4, label %5, label %6, !dbg !17400

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1179) #27, !dbg !17401
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1179) #27, !dbg !17401
  unreachable, !dbg !17401

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17403
  %8 = load i32, i32* %7, align 4, !dbg !17404
  %9 = add nsw i32 %8, 1, !dbg !17404
  store i32 %9, i32* %7, align 4, !dbg !17404
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !17405
  store i32 %8, i32* %10, align 8, !dbg !17406
  %11 = load i32, i32* %7, align 4, !dbg !17407
  %12 = icmp eq i32 %11, 0, !dbg !17408
  br i1 %12, label %13, label %35, !dbg !17409

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !17410
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #26, !dbg !17410
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !17384, metadata !DIExpression()), !dbg !17410
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17410
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !17410
  %17 = load i32, i32* %16, align 4, !dbg !17410
  %18 = shl i32 %17, 2, !dbg !17410
  %19 = alloca i8, i32 %18, align 8, !dbg !17410
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !17410
  store i8* %19, i8** %20, align 4, !dbg !17410
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !17410
  %22 = alloca i8, i32 %17, align 8, !dbg !17410
  store i8* %22, i8** %21, align 4, !dbg !17410
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !17410
  store i32 -1, i32* %23, align 4, !dbg !17410
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17411
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !17393, metadata !DIExpression()), !dbg !17412
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !17383, metadata !DIExpression()), !dbg !17396
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !17413
  br i1 %25, label %26, label %27, !dbg !17410

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #26, !dbg !17413
  br label %35, !dbg !17414

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !17383, metadata !DIExpression()), !dbg !17396
  %29 = load i32, i32* %7, align 4, !dbg !17415
  %30 = add nsw i32 %29, 1, !dbg !17415
  store i32 %30, i32* %7, align 4, !dbg !17415
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !17417
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !17417
  store i32 %29, i32* %32, align 8, !dbg !17418
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17411
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !17393, metadata !DIExpression()), !dbg !17412
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !17383, metadata !DIExpression()), !dbg !17396
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !17413
  br i1 %34, label %26, label %27, !dbg !17410, !llvm.loop !17419

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17421
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17422
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #27, !dbg !17423
  ret void, !dbg !17424
}

; Function Attrs: optsize
declare !dbg !17425 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !17430 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17433 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17435, metadata !DIExpression()), !dbg !17437
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17436, metadata !DIExpression()), !dbg !17437
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #28, !dbg !17438
  br i1 %3, label %4, label %5, !dbg !17441

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1200) #27, !dbg !17442
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1200) #27, !dbg !17442
  unreachable, !dbg !17442

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17444
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17445
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #27, !dbg !17446
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !17447
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !17447
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !17449
  br i1 %10, label %11, label %13, !dbg !17450

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17451
  store i32 0, i32* %12, align 4, !dbg !17453
  br label %13, !dbg !17454

13:                                               ; preds = %11, %5
  ret void, !dbg !17455
}

; Function Attrs: optsize
declare !dbg !17456 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !17457 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17461, metadata !DIExpression()), !dbg !17464
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17462, metadata !DIExpression()), !dbg !17464
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17465
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #28, !dbg !17466
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !17463, metadata !DIExpression()), !dbg !17464
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17462, metadata !DIExpression()), !dbg !17464
  ret %struct.k_thread* %4, !dbg !17467
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !17468 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !17472, metadata !DIExpression()), !dbg !17473
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !17474
  ret %struct.rbnode* %2, !dbg !17475
}

; Function Attrs: optsize
declare !dbg !17476 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #19 !dbg !17479 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !17491, metadata !DIExpression()), !dbg !17495
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !17496
  %3 = load i32, i32* %2, align 4, !dbg !17496
  %4 = icmp eq i32 %3, 0, !dbg !17498
  br i1 %4, label %10, label %5, !dbg !17499

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17492, metadata !DIExpression()), !dbg !17495
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !17500, !range !5383
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !17501
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !17493, metadata !DIExpression()), !dbg !17495
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.328(%struct._dnode* noundef %7) #28, !dbg !17502
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !17494, metadata !DIExpression()), !dbg !17495
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17492, metadata !DIExpression()), !dbg !17495
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !17495
  ret %struct.k_thread* %11, !dbg !17503
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17504 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17508, metadata !DIExpression()), !dbg !17511
  call void @llvm.dbg.value(metadata i32 0, metadata !17509, metadata !DIExpression()), !dbg !17511
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.358(%union.anon* noundef %0) #28, !dbg !17512
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17510, metadata !DIExpression()), !dbg !17511
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17513
  br i1 %3, label %8, label %4, !dbg !17514

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #28, !dbg !17515
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #28, !dbg !17517
  call void @llvm.dbg.value(metadata i32 1, metadata !17509, metadata !DIExpression()), !dbg !17511
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.358(%union.anon* noundef %0) #28, !dbg !17512
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17510, metadata !DIExpression()), !dbg !17511
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17513
  br i1 %7, label %8, label %4, !dbg !17514, !llvm.loop !17518

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !17511
  ret i32 %9, !dbg !17520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.358(%union.anon* noundef readonly %0) unnamed_addr #13 !dbg !17521 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17523, metadata !DIExpression()), !dbg !17524
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17525
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.328(%struct._dnode* noundef %2) #28, !dbg !17526
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17527
  ret %struct.k_thread* %4, !dbg !17528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #12 !dbg !17529 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !17538, metadata !DIExpression()), !dbg !17539
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !17540
  tail call fastcc void @sys_dlist_init.359(%struct._dnode* noundef nonnull %2) #28, !dbg !17541
  ret void, !dbg !17542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.359(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !17543 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17547, metadata !DIExpression()), !dbg !17548
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17549
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17550
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17551
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17552
  ret void, !dbg !17553
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !17554 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #28, !dbg !17555
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #28, !dbg !17556
  ret void, !dbg !17557
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #13 !dbg !17558 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17563, metadata !DIExpression()), !dbg !17564
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17565
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !17565
  %4 = load i8, i8* %3, align 2, !dbg !17565
  %5 = sext i8 %4 to i32, !dbg !17566
  ret i32 %5, !dbg !17567
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17568 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17572, metadata !DIExpression()), !dbg !17575
  call void @llvm.dbg.value(metadata i32 %1, metadata !17573, metadata !DIExpression()), !dbg !17575
  %3 = add i32 %1, 16, !dbg !17576
  %4 = icmp ult i32 %3, 31, !dbg !17576
  br i1 %4, label %6, label %5, !dbg !17576

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.364, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1331) #27, !dbg !17580
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.365, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #27, !dbg !17580
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1331) #27, !dbg !17580
  unreachable, !dbg !17580

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17582, !srcloc !16556
  call void @llvm.dbg.value(metadata i32 %7, metadata !16552, metadata !DIExpression()) #26, !dbg !17587
  %8 = icmp eq i32 %7, 0, !dbg !17588
  br i1 %8, label %10, label %9, !dbg !17589

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1332) #27, !dbg !17590
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.330, i32 0, i32 0)) #27, !dbg !17590
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1332) #27, !dbg !17590
  unreachable, !dbg !17590

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17574, metadata !DIExpression()), !dbg !17575
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #28, !dbg !17592
  ret void, !dbg !17593
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !17594 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #28, !dbg !17595
  br i1 %1, label %8, label %2, !dbg !17596

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !17597
  br i1 %3, label %8, label %4, !dbg !17598

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17599
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #28, !dbg !17600
  %7 = xor i1 %6, true, !dbg !17598
  br label %8, !dbg !17598

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !17601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #13 !dbg !17602 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !17603, !range !8107
  %2 = icmp eq i8 %1, 0, !dbg !17603
  ret i1 %2, !dbg !17604
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !17605 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17608, !srcloc !16556
  call void @llvm.dbg.value(metadata i32 %1, metadata !16552, metadata !DIExpression()) #26, !dbg !17613
  %2 = icmp eq i32 %1, 0, !dbg !17614
  br i1 %2, label %4, label %3, !dbg !17615

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1392) #27, !dbg !17616
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.330, i32 0, i32 0)) #27, !dbg !17616
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1392) #27, !dbg !17616
  unreachable, !dbg !17616

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !17618
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17620, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !17622
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !17622
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !17618
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17623
  br i1 %6, label %8, label %7, !dbg !17624

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !17625
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17625
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !17625
  unreachable, !dbg !17625

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !17622
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !17618
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17626
  call void @llvm.dbg.value(metadata i32 undef, metadata !17607, metadata !DIExpression()), !dbg !17627
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17628
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15971, metadata !DIExpression()) #26, !dbg !17631
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !17633
  %11 = load i8, i8* %10, align 1, !dbg !17634
  %12 = and i8 %11, 127, !dbg !17634
  store i8 %12, i8* %10, align 1, !dbg !17634
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15979, metadata !DIExpression()) #26, !dbg !17635
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #27, !dbg !17637
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17638
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15988, metadata !DIExpression()) #26, !dbg !17639
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !17641
  %15 = load i8, i8* %14, align 1, !dbg !17642
  %16 = or i8 %15, -128, !dbg !17642
  store i8 %16, i8* %14, align 1, !dbg !17642
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15995, metadata !DIExpression()) #26, !dbg !17643
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16002, metadata !DIExpression()) #26, !dbg !17645
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16008, metadata !DIExpression()) #26, !dbg !17645
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #27, !dbg !17647
  br i1 %17, label %18, label %19, !dbg !17648

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 186) #27, !dbg !17649
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 186) #27, !dbg !17649
  unreachable, !dbg !17649

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.328(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17650
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16009, metadata !DIExpression()) #26, !dbg !17645
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17651
  br i1 %21, label %32, label %22, !dbg !17650

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !16009, metadata !DIExpression()) #26, !dbg !17645
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !17652
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !16009, metadata !DIExpression()) #26, !dbg !17645
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #27, !dbg !17653
  %26 = icmp sgt i32 %25, 0, !dbg !17654
  br i1 %26, label %27, label %29, !dbg !17655

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !17656
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #27, !dbg !17657
  br label %34, !dbg !17658

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #27, !dbg !17651
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !16009, metadata !DIExpression()) #26, !dbg !17645
  %31 = icmp eq %struct._dnode* %30, null, !dbg !17651
  br i1 %31, label %32, label %22, !dbg !17650, !llvm.loop !17659

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !17661
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #27, !dbg !17662
  br label %34, !dbg !17663

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #28, !dbg !17664
  call void @llvm.dbg.value(metadata i32 undef, metadata !16500, metadata !DIExpression()) #26, !dbg !17665
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16505, metadata !DIExpression()) #26, !dbg !17665
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16509, metadata !DIExpression()) #26, !dbg !17667
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17669
  br i1 %35, label %37, label %36, !dbg !17670

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 225) #27, !dbg !17671
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17671
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 225) #27, !dbg !17671
  unreachable, !dbg !17671

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !17620
  call void @llvm.dbg.value(metadata i32 %38, metadata !15791, metadata !DIExpression()) #26, !dbg !17622
  call void @llvm.dbg.value(metadata i32 %38, metadata !15785, metadata !DIExpression()) #26, !dbg !17618
  call void @llvm.dbg.value(metadata i32 %38, metadata !17607, metadata !DIExpression()), !dbg !17627
  call void @llvm.dbg.value(metadata i32 undef, metadata !16500, metadata !DIExpression()) #26, !dbg !17665
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #27, !dbg !17672
  ret void, !dbg !17673
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !17674 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17678, metadata !DIExpression()), !dbg !17681
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17682, !srcloc !16556
  call void @llvm.dbg.value(metadata i32 %3, metadata !16552, metadata !DIExpression()) #26, !dbg !17687
  %4 = icmp eq i32 %3, 0, !dbg !17688
  br i1 %4, label %6, label %5, !dbg !17689

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1463) #27, !dbg !17690
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.330, i32 0, i32 0)) #27, !dbg !17690
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1463) #27, !dbg !17690
  unreachable, !dbg !17690

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !17692
  br i1 %7, label %8, label %10, !dbg !17694

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17695
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #28, !dbg !17697
  br label %15, !dbg !17698

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !17679, metadata !DIExpression()), !dbg !17681
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #28, !dbg !17699
  %12 = sext i32 %11 to i64, !dbg !17699
  call void @llvm.dbg.value(metadata i64 %12, metadata !17679, metadata !DIExpression()), !dbg !17681
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #28, !dbg !17700
  %14 = trunc i64 %13 to i32, !dbg !17700
  call void @llvm.dbg.value(metadata i32 %14, metadata !17680, metadata !DIExpression()), !dbg !17681
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !17681
  ret i32 %16, !dbg !17701
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17702 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17706, metadata !DIExpression()), !dbg !17707
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17708, !srcloc !17710
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #28, !dbg !17711
  ret void, !dbg !17712
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17713 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17717, metadata !DIExpression()), !dbg !17721
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17722, !srcloc !16556
  call void @llvm.dbg.value(metadata i32 %2, metadata !16552, metadata !DIExpression()) #26, !dbg !17727
  %3 = icmp eq i32 %2, 0, !dbg !17728
  br i1 %3, label %5, label %4, !dbg !17729

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1420) #27, !dbg !17730
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.330, i32 0, i32 0)) #27, !dbg !17730
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1420) #27, !dbg !17730
  unreachable, !dbg !17730

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !17732
  br i1 %6, label %7, label %8, !dbg !17734

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #28, !dbg !17735
  br label %43, !dbg !17737

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !17719, metadata !DIExpression()), !dbg !17721
  %9 = icmp sgt i64 %0, -3, !dbg !17738
  br i1 %9, label %10, label %14, !dbg !17740

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17741
  %12 = trunc i64 %0 to i32, !dbg !17743
  %13 = add i32 %11, %12, !dbg !17743
  call void @llvm.dbg.value(metadata i32 %13, metadata !17718, metadata !DIExpression()), !dbg !17721
  br label %17, !dbg !17744

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !17745
  %16 = sub i32 -2, %15, !dbg !17745
  call void @llvm.dbg.value(metadata i32 %16, metadata !17718, metadata !DIExpression()), !dbg !17721
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !17747
  call void @llvm.dbg.value(metadata i32 %18, metadata !17718, metadata !DIExpression()), !dbg !17721
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !17748
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17750, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !17752
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !17752
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !17748
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17753
  br i1 %20, label %22, label %21, !dbg !17754

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !17755
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17755
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !17755
  unreachable, !dbg !17755

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !17752
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !17748
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17756
  call void @llvm.dbg.value(metadata i32 undef, metadata !17720, metadata !DIExpression()), !dbg !17721
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17757
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !17758
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #28, !dbg !17759
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17760
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17761
  tail call fastcc void @z_add_thread_timeout.341(%struct.k_thread* noundef %24, [1 x i64] %25) #28, !dbg !17761
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17762
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #28, !dbg !17763
  call void @llvm.dbg.value(metadata i32 undef, metadata !16500, metadata !DIExpression()) #26, !dbg !17764
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16505, metadata !DIExpression()) #26, !dbg !17764
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16509, metadata !DIExpression()) #26, !dbg !17766
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17768
  br i1 %27, label %29, label %28, !dbg !17769

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 225) #27, !dbg !17770
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17770
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 225) #27, !dbg !17770
  unreachable, !dbg !17770

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !17750
  call void @llvm.dbg.value(metadata i32 %30, metadata !15791, metadata !DIExpression()) #26, !dbg !17752
  call void @llvm.dbg.value(metadata i32 %30, metadata !15785, metadata !DIExpression()) #26, !dbg !17748
  call void @llvm.dbg.value(metadata i32 %30, metadata !17720, metadata !DIExpression()), !dbg !17721
  call void @llvm.dbg.value(metadata i32 undef, metadata !16500, metadata !DIExpression()) #26, !dbg !17764
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #27, !dbg !17771
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17772
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #28, !dbg !17772
  br i1 %33, label %34, label %35, !dbg !17775

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.368, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1448) #27, !dbg !17776
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.330, i32 0, i32 0)) #27, !dbg !17776
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1448) #27, !dbg !17776
  unreachable, !dbg !17776

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !17778
  %37 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17779
  %38 = zext i32 %37 to i64, !dbg !17779
  %39 = sub nsw i64 %36, %38, !dbg !17780
  call void @llvm.dbg.value(metadata i64 %39, metadata !17717, metadata !DIExpression()), !dbg !17721
  %40 = icmp sgt i64 %39, 0, !dbg !17781
  %41 = select i1 %40, i64 %39, i64 0, !dbg !17781
  %42 = trunc i64 %41 to i32, !dbg !17781
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !17721
  ret i32 %44, !dbg !17782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17783 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17785, metadata !DIExpression()), !dbg !17786
  call void @llvm.dbg.value(metadata i64 %0, metadata !15839, metadata !DIExpression()), !dbg !17787
  call void @llvm.dbg.value(metadata i32 10000, metadata !15842, metadata !DIExpression()), !dbg !17787
  call void @llvm.dbg.value(metadata i32 1000, metadata !15843, metadata !DIExpression()), !dbg !17787
  call void @llvm.dbg.value(metadata i8 1, metadata !15844, metadata !DIExpression()), !dbg !17787
  call void @llvm.dbg.value(metadata i1 false, metadata !15845, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17787
  call void @llvm.dbg.value(metadata i1 false, metadata !15846, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17787
  call void @llvm.dbg.value(metadata i8 0, metadata !15847, metadata !DIExpression()), !dbg !17787
  call void @llvm.dbg.value(metadata i1 false, metadata !15848, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17787
  call void @llvm.dbg.value(metadata i1 true, metadata !15849, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17787
  call void @llvm.dbg.value(metadata i64 0, metadata !15850, metadata !DIExpression()), !dbg !17787
  call void @llvm.dbg.value(metadata i64 0, metadata !15850, metadata !DIExpression()), !dbg !17787
  call void @llvm.dbg.value(metadata i64 %0, metadata !15839, metadata !DIExpression()), !dbg !17787
  %2 = udiv i64 %0, 10, !dbg !17789
  ret i64 %2, !dbg !17793
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17794 {
  tail call void asm sideeffect "", "~{memory}"() #26, !dbg !17795, !srcloc !17797
  tail call void @z_impl_k_yield() #28, !dbg !17798
  ret void, !dbg !17799
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17800 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17804, metadata !DIExpression()), !dbg !17806
  %2 = sext i32 %0 to i64, !dbg !17807
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #28, !dbg !17808
  call void @llvm.dbg.value(metadata i64 %3, metadata !17805, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17806
  %4 = shl i64 %3, 32, !dbg !17809
  %5 = ashr exact i64 %4, 32, !dbg !17809
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #28, !dbg !17810
  call void @llvm.dbg.value(metadata i32 %6, metadata !17805, metadata !DIExpression()), !dbg !17806
  %7 = sext i32 %6 to i64, !dbg !17811
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #28, !dbg !17812
  %9 = trunc i64 %8 to i32, !dbg !17812
  ret i32 %9, !dbg !17813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !17814 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17816, metadata !DIExpression()), !dbg !17817
  call void @llvm.dbg.value(metadata i64 %0, metadata !15839, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15842, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.value(metadata i32 10000, metadata !15843, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.value(metadata i8 1, metadata !15844, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.value(metadata i1 false, metadata !15845, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17818
  call void @llvm.dbg.value(metadata i1 true, metadata !15846, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17818
  call void @llvm.dbg.value(metadata i8 0, metadata !15847, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.value(metadata i1 false, metadata !15848, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17818
  call void @llvm.dbg.value(metadata i1 true, metadata !15849, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17818
  call void @llvm.dbg.value(metadata i64 0, metadata !15850, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.value(metadata i64 0, metadata !15850, metadata !DIExpression()), !dbg !17818
  %2 = add i64 %0, 99, !dbg !17820
  call void @llvm.dbg.value(metadata i64 %2, metadata !15839, metadata !DIExpression()), !dbg !17818
  %3 = udiv i64 %2, 100, !dbg !17821
  ret i64 %3, !dbg !17822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #5 !dbg !17823 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17825, metadata !DIExpression()), !dbg !17826
  call void @llvm.dbg.value(metadata i64 %0, metadata !15839, metadata !DIExpression()), !dbg !17827
  call void @llvm.dbg.value(metadata i32 10000, metadata !15842, metadata !DIExpression()), !dbg !17827
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15843, metadata !DIExpression()), !dbg !17827
  call void @llvm.dbg.value(metadata i8 1, metadata !15844, metadata !DIExpression()), !dbg !17827
  call void @llvm.dbg.value(metadata i1 false, metadata !15845, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17827
  call void @llvm.dbg.value(metadata i1 false, metadata !15846, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17827
  call void @llvm.dbg.value(metadata i8 0, metadata !15847, metadata !DIExpression()), !dbg !17827
  call void @llvm.dbg.value(metadata i1 true, metadata !15848, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17827
  call void @llvm.dbg.value(metadata i1 false, metadata !15849, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17827
  call void @llvm.dbg.value(metadata i64 0, metadata !15850, metadata !DIExpression()), !dbg !17827
  call void @llvm.dbg.value(metadata i64 0, metadata !15850, metadata !DIExpression()), !dbg !17827
  %2 = mul i64 %0, 100, !dbg !17829
  ret i64 %2, !dbg !17831
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17832 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17834, metadata !DIExpression()), !dbg !17835
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #28, !dbg !17836
  br i1 %2, label %14, label %3, !dbg !17838

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #28, !dbg !17839
  %5 = icmp slt i32 %4, 0, !dbg !17841
  br i1 %5, label %6, label %10, !dbg !17842

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17843
  %8 = load i8, i8* %7, align 1, !dbg !17843
  %9 = icmp eq i8 %8, 16, !dbg !17846
  br i1 %9, label %10, label %14, !dbg !17847

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #28, !dbg !17848
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #28, !dbg !17849
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17850, !srcloc !16556
  call void @llvm.dbg.value(metadata i32 %11, metadata !16552, metadata !DIExpression()) #26, !dbg !17854
  %12 = icmp eq i32 %11, 0, !dbg !17855
  br i1 %12, label %13, label %14, !dbg !17856

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #28, !dbg !17857
  br label %14, !dbg !17859

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !17861 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17863, metadata !DIExpression()), !dbg !17864
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17865
  %3 = load i8, i8* %2, align 1, !dbg !17865
  %4 = and i8 %3, 2, !dbg !17866
  %5 = icmp ne i8 %4, 0, !dbg !17867
  ret i1 %5, !dbg !17868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #13 !dbg !17869 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17874
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17873, metadata !DIExpression()), !dbg !17875
  ret %struct.k_thread* %1, !dbg !17876
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17877 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17878, !srcloc !16556
  call void @llvm.dbg.value(metadata i32 %1, metadata !16552, metadata !DIExpression()) #26, !dbg !17881
  %2 = icmp eq i32 %1, 0, !dbg !17882
  br i1 %2, label %3, label %8, !dbg !17883

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17884
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #28, !dbg !17885
  %6 = icmp ne i32 %5, 0, !dbg !17883
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17886
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17887 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17889, metadata !DIExpression()), !dbg !17891
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !17892
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !17894, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !17896
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !17896
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !17892
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17897
  br i1 %3, label %5, label %4, !dbg !17898

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !17899
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17899
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !17899
  unreachable, !dbg !17899

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17894
  call void @llvm.dbg.value(metadata i32 %6, metadata !15791, metadata !DIExpression()) #26, !dbg !17896
  call void @llvm.dbg.value(metadata i32 %6, metadata !15785, metadata !DIExpression()) #26, !dbg !17892
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17900
  call void @llvm.dbg.value(metadata i32 %6, metadata !17890, metadata !DIExpression()), !dbg !17891
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17901
  %8 = load i8, i8* %7, align 4, !dbg !17901
  %9 = and i8 %8, 1, !dbg !17903
  %10 = icmp eq i8 %9, 0, !dbg !17904
  br i1 %10, label %15, label %11, !dbg !17905

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !17906
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !17906
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17909
  br i1 %12, label %14, label %13, !dbg !17910

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !17911
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17911
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !17911
  unreachable, !dbg !17911

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !15813, metadata !DIExpression()) #26, !dbg !17906
  call void @llvm.dbg.value(metadata i32 %6, metadata !15827, metadata !DIExpression()) #26, !dbg !17912
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !17914, !srcloc !15833
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.373, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1731) #27, !dbg !17915
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.374, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #27, !dbg !17915
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1731) #27, !dbg !17915
  unreachable, !dbg !17915

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17919
  %17 = load i8, i8* %16, align 1, !dbg !17919
  %18 = and i8 %17, 8, !dbg !17921
  %19 = icmp eq i8 %18, 0, !dbg !17922
  br i1 %19, label %24, label %20, !dbg !17923

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !17924
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !17924
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17927
  br i1 %21, label %23, label %22, !dbg !17928

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !17929
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17929
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !17929
  unreachable, !dbg !17929

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !15813, metadata !DIExpression()) #26, !dbg !17924
  call void @llvm.dbg.value(metadata i32 %6, metadata !15827, metadata !DIExpression()) #26, !dbg !17930
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !17932, !srcloc !15833
  br label %39, !dbg !17933

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #28, !dbg !17934
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17935
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !17937
  br i1 %26, label %27, label %35, !dbg !17938

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !17939, !srcloc !16556
  call void @llvm.dbg.value(metadata i32 %28, metadata !16552, metadata !DIExpression()) #26, !dbg !17942
  %29 = icmp eq i32 %28, 0, !dbg !17943
  br i1 %29, label %30, label %35, !dbg !17944

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !16500, metadata !DIExpression()) #26, !dbg !17945
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16505, metadata !DIExpression()) #26, !dbg !17945
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16509, metadata !DIExpression()) #26, !dbg !17948
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17950
  br i1 %31, label %33, label %32, !dbg !17951

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 225) #27, !dbg !17952
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17952
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 225) #27, !dbg !17952
  unreachable, !dbg !17952

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !16500, metadata !DIExpression()) #26, !dbg !17945
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #27, !dbg !17953
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.373, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1778) #27, !dbg !17954
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.375, i32 0, i32 0)) #27, !dbg !17954
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1778) #27, !dbg !17954
  unreachable, !dbg !17954

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !17958
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !17958
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17960
  br i1 %36, label %38, label %37, !dbg !17961

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !17962
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !17962
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !17962
  unreachable, !dbg !17962

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !15813, metadata !DIExpression()) #26, !dbg !17958
  call void @llvm.dbg.value(metadata i32 %6, metadata !15827, metadata !DIExpression()) #26, !dbg !17963
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #26, !dbg !17965, !srcloc !15833
  br label %39, !dbg !17966

39:                                               ; preds = %38, %23
  ret void, !dbg !17966
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17967 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17969, metadata !DIExpression()), !dbg !17970
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17971
  %3 = load i8, i8* %2, align 1, !dbg !17971
  %4 = and i8 %3, 8, !dbg !17973
  %5 = icmp eq i8 %4, 0, !dbg !17974
  br i1 %5, label %6, label %20, !dbg !17975

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17976
  %8 = or i8 %7, 8, !dbg !17976
  store i8 %8, i8* %2, align 1, !dbg !17976
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #28, !dbg !17978
  br i1 %9, label %10, label %12, !dbg !17980

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15971, metadata !DIExpression()) #26, !dbg !17981
  %11 = and i8 %8, 95, !dbg !17984
  store i8 %11, i8* %2, align 1, !dbg !17984
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15979, metadata !DIExpression()) #26, !dbg !17985
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !17987
  br label %12, !dbg !17988

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17989
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !17989
  %15 = icmp eq %union.anon* %14, null, !dbg !17991
  br i1 %15, label %17, label %16, !dbg !17992

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #28, !dbg !17993
  br label %17, !dbg !17995

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #28, !dbg !17996
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17997
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #28, !dbg !17998
  tail call fastcc void @update_cache(i32 noundef 1) #28, !dbg !17999
  br label %20, !dbg !18000

20:                                               ; preds = %17, %1
  ret void, !dbg !18001
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !18002 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18006, metadata !DIExpression()), !dbg !18008
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.358(%union.anon* noundef %0) #28, !dbg !18009
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !18007, metadata !DIExpression()), !dbg !18008
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !18010
  br i1 %3, label %10, label %4, !dbg !18011

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #28, !dbg !18012
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #28, !dbg !18014
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !18015, metadata !DIExpression()), !dbg !18021
  call void @llvm.dbg.value(metadata i32 0, metadata !18020, metadata !DIExpression()), !dbg !18021
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !18023
  store i32 0, i32* %7, align 4, !dbg !18024
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #28, !dbg !18025
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.358(%union.anon* noundef %0) #28, !dbg !18009
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !18007, metadata !DIExpression()), !dbg !18008
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !18010
  br i1 %9, label %10, label %4, !dbg !18011, !llvm.loop !18026

10:                                               ; preds = %4, %1
  ret void, !dbg !18028
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !18029 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18034, metadata !DIExpression()), !dbg !18037
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18033, metadata !DIExpression()), !dbg !18037
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !18038
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18040, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !18042
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !18042
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !18038
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18043
  br i1 %4, label %6, label %5, !dbg !18044

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !18045
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18045
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !18045
  unreachable, !dbg !18045

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !18040
  call void @llvm.dbg.value(metadata i32 %7, metadata !15791, metadata !DIExpression()) #26, !dbg !18042
  call void @llvm.dbg.value(metadata i32 %7, metadata !15785, metadata !DIExpression()) #26, !dbg !18038
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18046
  call void @llvm.dbg.value(metadata i32 %7, metadata !18035, metadata !DIExpression()), !dbg !18037
  call void @llvm.dbg.value(metadata i32 0, metadata !18036, metadata !DIExpression()), !dbg !18037
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18047
  %9 = load i8, i8* %8, align 1, !dbg !18047
  %10 = and i8 %9, 8, !dbg !18049
  %11 = icmp eq i8 %10, 0, !dbg !18050
  br i1 %11, label %12, label %35, !dbg !18051

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !18034, metadata !DIExpression()), !dbg !18037
  %14 = icmp eq i64 %13, 0, !dbg !18052
  br i1 %14, label %35, label %15, !dbg !18054

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18055
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !18057
  br i1 %17, label %35, label %18, !dbg !18058

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18059
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !18059
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !18060
  %22 = icmp eq %union.anon* %20, %21, !dbg !18061
  br i1 %22, label %35, label %23, !dbg !18062

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !18063, !srcloc !16556
  call void @llvm.dbg.value(metadata i32 %24, metadata !16552, metadata !DIExpression()) #26, !dbg !18069
  %25 = icmp eq i32 %24, 0, !dbg !18070
  br i1 %25, label %27, label %26, !dbg !18071

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1809) #27, !dbg !18072
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.376, i32 0, i32 0)) #27, !dbg !18072
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.327, i32 0, i32 0), i32 noundef 1809) #27, !dbg !18072
  unreachable, !dbg !18072

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18074
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18075
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #28, !dbg !18076
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18077
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #28, !dbg !18078
  call void @llvm.dbg.value(metadata i32 undef, metadata !16500, metadata !DIExpression()) #26, !dbg !18079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16505, metadata !DIExpression()) #26, !dbg !18079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16509, metadata !DIExpression()) #26, !dbg !18081
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18083
  br i1 %31, label %33, label %32, !dbg !18084

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 225) #27, !dbg !18085
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18085
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 225) #27, !dbg !18085
  unreachable, !dbg !18085

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !16500, metadata !DIExpression()) #26, !dbg !18079
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #27, !dbg !18086
  call void @llvm.dbg.value(metadata i32 %34, metadata !18036, metadata !DIExpression()), !dbg !18037
  br label %40, !dbg !18087

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !18088
  call void @llvm.dbg.value(metadata i32 %36, metadata !18036, metadata !DIExpression()), !dbg !18037
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !18089
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !18089
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18091
  br i1 %37, label %39, label %38, !dbg !18092

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !18093
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18093
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !18093
  unreachable, !dbg !18093

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !15813, metadata !DIExpression()) #26, !dbg !18089
  call void @llvm.dbg.value(metadata i32 %7, metadata !15827, metadata !DIExpression()) #26, !dbg !18094
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #26, !dbg !18096, !srcloc !15833
  br label %40, !dbg !18097

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !18037
  ret i32 %41, !dbg !18098
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !18099 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18103, metadata !DIExpression()), !dbg !18111
  call void @llvm.dbg.value(metadata i32 %1, metadata !18104, metadata !DIExpression()), !dbg !18111
  call void @llvm.dbg.value(metadata i8* %2, metadata !18105, metadata !DIExpression()), !dbg !18111
  call void @llvm.dbg.value(metadata i8 0, metadata !18107, metadata !DIExpression()), !dbg !18111
  call void @llvm.dbg.value(metadata i32 0, metadata !18108, metadata !DIExpression()), !dbg !18112
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15779, metadata !DIExpression()) #26, !dbg !18113
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18115, !srcloc !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !18117
  call void @llvm.dbg.value(metadata i32 undef, metadata !15792, metadata !DIExpression()) #26, !dbg !18117
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !18113
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18118
  br i1 %5, label %7, label %6, !dbg !18119

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.321, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !18120
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.323, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18120
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 148) #27, !dbg !18120
  unreachable, !dbg !18120

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()) #26, !dbg !18117
  call void @llvm.dbg.value(metadata i32 undef, metadata !15785, metadata !DIExpression()) #26, !dbg !18113
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18121
  call void @llvm.dbg.value(metadata i32 undef, metadata !18110, metadata !DIExpression()), !dbg !18112
  call void @llvm.dbg.value(metadata i8 poison, metadata !18107, metadata !DIExpression()), !dbg !18111
  call void @llvm.dbg.value(metadata i32 undef, metadata !18108, metadata !DIExpression()), !dbg !18112
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #28, !dbg !18122
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18106, metadata !DIExpression()), !dbg !18111
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !18125
  br i1 %10, label %15, label %11, !dbg !18127

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18128, metadata !DIExpression()), !dbg !18135
  call void @llvm.dbg.value(metadata i32 %1, metadata !18133, metadata !DIExpression()), !dbg !18135
  call void @llvm.dbg.value(metadata i8* %2, metadata !18134, metadata !DIExpression()), !dbg !18135
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18015, metadata !DIExpression()), !dbg !18138
  call void @llvm.dbg.value(metadata i32 %1, metadata !18020, metadata !DIExpression()), !dbg !18138
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 7, i32 1, !dbg !18140
  store i32 %1, i32* %12, align 4, !dbg !18141
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18142
  store i8* %2, i8** %13, align 4, !dbg !18143
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #28, !dbg !18144
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #28, !dbg !18145
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #28, !dbg !18146
  call void @llvm.dbg.value(metadata i8 1, metadata !18107, metadata !DIExpression()), !dbg !18111
  br label %15, !dbg !18147

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !18107, metadata !DIExpression()), !dbg !18111
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !18148
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15818, metadata !DIExpression()) #26, !dbg !18148
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18150
  br i1 %16, label %18, label %17, !dbg !18151

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !18152
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.325, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #27, !dbg !18152
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.322, i32 0, i32 0), i32 noundef 194) #27, !dbg !18152
  unreachable, !dbg !18152

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !18111
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !18115
  call void @llvm.dbg.value(metadata i32 %20, metadata !15791, metadata !DIExpression()) #26, !dbg !18117
  call void @llvm.dbg.value(metadata i32 %20, metadata !15785, metadata !DIExpression()) #26, !dbg !18113
  call void @llvm.dbg.value(metadata i32 %20, metadata !18110, metadata !DIExpression()), !dbg !18112
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()) #26, !dbg !18148
  call void @llvm.dbg.value(metadata i32 undef, metadata !15827, metadata !DIExpression()) #26, !dbg !18153
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #26, !dbg !18155, !srcloc !15833
  call void @llvm.dbg.value(metadata i8 poison, metadata !18107, metadata !DIExpression()), !dbg !18111
  call void @llvm.dbg.value(metadata i32 undef, metadata !18108, metadata !DIExpression()), !dbg !18112
  ret i1 %19, !dbg !18156
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !18157 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !18163, metadata !DIExpression()), !dbg !18168
  call void @llvm.dbg.value(metadata i64 undef, metadata !18165, metadata !DIExpression()), !dbg !18168
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18162, metadata !DIExpression()), !dbg !18168
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !18164, metadata !DIExpression()), !dbg !18168
  call void @llvm.dbg.value(metadata i8** %4, metadata !18166, metadata !DIExpression()), !dbg !18168
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #28, !dbg !18169
  call void @llvm.dbg.value(metadata i32 %6, metadata !18167, metadata !DIExpression()), !dbg !18168
  %7 = icmp eq i8** %4, null, !dbg !18170
  br i1 %7, label %12, label %8, !dbg !18172

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18173
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18175
  %11 = load i8*, i8** %10, align 4, !dbg !18175
  store i8* %11, i8** %4, align 4, !dbg !18176
  br label %12, !dbg !18177

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !18178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !18179 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !18181
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !18182
  ret void, !dbg !18183
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18184 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !18194, metadata !DIExpression()), !dbg !18211
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18192, metadata !DIExpression()), !dbg !18211
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !18193, metadata !DIExpression()), !dbg !18211
  %5 = icmp eq i64 %4, -1, !dbg !18212
  br i1 %5, label %63, label %6, !dbg !18214

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18215
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.381(%struct._dnode* noundef %7) #28, !dbg !18215
  br i1 %8, label %9, label %10, !dbg !18218

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.383, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.384, i32 0, i32 0), i32 noundef 99) #27, !dbg !18219
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.385, i32 0, i32 0)) #27, !dbg !18219
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.384, i32 0, i32 0), i32 noundef 99) #27, !dbg !18219
  unreachable, !dbg !18219

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !18221
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !18222
  call void @llvm.dbg.value(metadata i32 0, metadata !18195, metadata !DIExpression()), !dbg !18223
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18224, metadata !DIExpression()) #26, !dbg !18231
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18233, !srcloc !18239
  call void @llvm.dbg.value(metadata i32 undef, metadata !18236, metadata !DIExpression()) #26, !dbg !18240
  call void @llvm.dbg.value(metadata i32 undef, metadata !18237, metadata !DIExpression()) #26, !dbg !18240
  call void @llvm.dbg.value(metadata i32 undef, metadata !18230, metadata !DIExpression()) #26, !dbg !18231
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18241
  br i1 %13, label %15, label %14, !dbg !18244

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 148) #27, !dbg !18245
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.388, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18245
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 148) #27, !dbg !18245
  unreachable, !dbg !18245

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !18233
  call void @llvm.dbg.value(metadata i32 %16, metadata !18236, metadata !DIExpression()) #26, !dbg !18240
  call void @llvm.dbg.value(metadata i32 %16, metadata !18230, metadata !DIExpression()) #26, !dbg !18231
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18247
  call void @llvm.dbg.value(metadata i32 %16, metadata !18201, metadata !DIExpression()), !dbg !18223
  call void @llvm.dbg.value(metadata i32 undef, metadata !18195, metadata !DIExpression()), !dbg !18223
  %17 = icmp slt i64 %4, -1, !dbg !18248
  br i1 %17, label %18, label %24, !dbg !18249

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !18250
  %20 = add i64 %4, %19, !dbg !18251
  %21 = sub i64 -2, %20, !dbg !18251
  call void @llvm.dbg.value(metadata i64 %21, metadata !18205, metadata !DIExpression()), !dbg !18252
  %22 = icmp sgt i64 %21, 1, !dbg !18253
  %23 = select i1 %22, i64 %21, i64 1, !dbg !18253
  br label %29, !dbg !18254

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !18255
  %26 = tail call fastcc i32 @elapsed.389() #28, !dbg !18257
  %27 = sext i32 %26 to i64, !dbg !18257
  %28 = add nsw i64 %25, %27, !dbg !18258
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !18259
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18260
  store i64 %30, i64* %31, align 8, !dbg !18261
  %32 = tail call fastcc %struct._timeout* @first() #28, !dbg !18262
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !18202, metadata !DIExpression()), !dbg !18264
  %33 = icmp eq %struct._timeout* %32, null, !dbg !18265
  br i1 %33, label %48, label %34, !dbg !18265

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !18266
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !18202, metadata !DIExpression()), !dbg !18264
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !18270
  %38 = load i64, i64* %37, align 8, !dbg !18270
  %39 = icmp slt i64 %35, %38, !dbg !18271
  br i1 %39, label %40, label %44, !dbg !18272

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !18270
  %42 = sub nsw i64 %38, %35, !dbg !18273
  store i64 %42, i64* %41, align 8, !dbg !18273
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !18275
  tail call fastcc void @sys_dlist_insert.390(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #28, !dbg !18276
  br label %49, !dbg !18277

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !18278
  store i64 %45, i64* %31, align 8, !dbg !18278
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #28, !dbg !18279
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !18202, metadata !DIExpression()), !dbg !18264
  %47 = icmp eq %struct._timeout* %46, null, !dbg !18265
  br i1 %47, label %48, label %34, !dbg !18265, !llvm.loop !18280

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.391(%struct._dnode* noundef nonnull %7) #28, !dbg !18282
  br label %49, !dbg !18285

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #28, !dbg !18286
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !18287
  br i1 %51, label %52, label %59, !dbg !18288

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #28, !dbg !18289
  call void @llvm.dbg.value(metadata i32 %53, metadata !18208, metadata !DIExpression()), !dbg !18290
  %54 = icmp ne i32 %53, 0, !dbg !18291
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !18293
  br i1 %57, label %59, label %58, !dbg !18293

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #27, !dbg !18294
  br label %59, !dbg !18296

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()) #26, !dbg !18303
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18302, metadata !DIExpression()) #26, !dbg !18303
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18305
  br i1 %60, label %62, label %61, !dbg !18308

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 194) #27, !dbg !18309
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18309
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 194) #27, !dbg !18309
  unreachable, !dbg !18309

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !18297, metadata !DIExpression()) #26, !dbg !18303
  call void @llvm.dbg.value(metadata i32 %16, metadata !18311, metadata !DIExpression()) #26, !dbg !18314
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #26, !dbg !18316, !srcloc !18317
  call void @llvm.dbg.value(metadata i32 undef, metadata !18195, metadata !DIExpression()), !dbg !18223
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !18318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.381(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !18319 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18325, metadata !DIExpression()), !dbg !18326
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18327
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18327
  %4 = icmp ne %struct._dnode* %3, null, !dbg !18328
  ret i1 %4, !dbg !18329
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.389() unnamed_addr #1 !dbg !18330 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !18333
  %2 = icmp eq i32 %1, 0, !dbg !18334
  br i1 %2, label %3, label %5, !dbg !18333

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !18335
  br label %5, !dbg !18333

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !18333
  ret i32 %6, !dbg !18336
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #13 !dbg !18337 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.396() #28, !dbg !18343
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18341, metadata !DIExpression()), !dbg !18344
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !18345
  ret %struct._timeout* %2, !dbg !18346
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.390(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !18347 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18351, metadata !DIExpression()), !dbg !18355
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !18352, metadata !DIExpression()), !dbg !18355
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18356
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !18356
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !18353, metadata !DIExpression()), !dbg !18355
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !18357
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !18358
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !18359
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !18360
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !18361
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !18362
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !18363
  ret void, !dbg !18364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #13 !dbg !18365 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18369, metadata !DIExpression()), !dbg !18371
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18372
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.394(%struct._dnode* noundef %2) #28, !dbg !18373
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18370, metadata !DIExpression()), !dbg !18371
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !18374
  ret %struct._timeout* %4, !dbg !18375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.391(%struct._dnode* noundef %0) unnamed_addr #14 !dbg !18376 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18381, metadata !DIExpression()), !dbg !18384
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18382, metadata !DIExpression()), !dbg !18384
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18385
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !18383, metadata !DIExpression()), !dbg !18384
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18386
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !18387
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18388
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !18389
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !18390
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !18391
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18392
  ret void, !dbg !18393
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !18394 {
  %1 = tail call fastcc %struct._timeout* @first() #28, !dbg !18399
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !18396, metadata !DIExpression()), !dbg !18400
  %2 = tail call fastcc i32 @elapsed.389() #28, !dbg !18401
  call void @llvm.dbg.value(metadata i32 %2, metadata !18397, metadata !DIExpression()), !dbg !18400
  %3 = icmp eq %struct._timeout* %1, null, !dbg !18402
  br i1 %3, label %14, label %4, !dbg !18404

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !18405
  %6 = load i64, i64* %5, align 8, !dbg !18405
  %7 = sext i32 %2 to i64, !dbg !18406
  %8 = sub nsw i64 %6, %7, !dbg !18407
  %9 = icmp sgt i64 %8, 2147483647, !dbg !18408
  br i1 %9, label %14, label %10, !dbg !18409

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !18410
  %12 = select i1 %11, i64 %8, i64 0, !dbg !18410
  %13 = trunc i64 %12 to i32, !dbg !18410
  call void @llvm.dbg.value(metadata i32 %13, metadata !18398, metadata !DIExpression()), !dbg !18400
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !18412
  call void @llvm.dbg.value(metadata i32 %15, metadata !18398, metadata !DIExpression()), !dbg !18400
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !18413
  %17 = icmp ne i32 %16, 0, !dbg !18415
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !18416
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !18416
  call void @llvm.dbg.value(metadata i32 %20, metadata !18398, metadata !DIExpression()), !dbg !18400
  ret i32 %20, !dbg !18417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.394(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !18418 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18422, metadata !DIExpression()), !dbg !18424
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18423, metadata !DIExpression()), !dbg !18424
  %2 = icmp eq %struct._dnode* %0, null, !dbg !18425
  br i1 %2, label %5, label %3, !dbg !18426

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.395(%struct._dnode* noundef nonnull %0) #28, !dbg !18427
  br label %5, !dbg !18426

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !18426
  ret %struct._dnode* %6, !dbg !18428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.395(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !18429 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18431, metadata !DIExpression()), !dbg !18433
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18432, metadata !DIExpression()), !dbg !18433
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !18434
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !18435
  br i1 %3, label %7, label %4, !dbg !18436

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18437
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !18437
  br label %7, !dbg !18436

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !18436
  ret %struct._dnode* %8, !dbg !18438
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.396() unnamed_addr #13 !dbg !18439 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18443, metadata !DIExpression()), !dbg !18444
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.397() #28, !dbg !18445
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !18445
  ret %struct._dnode* %3, !dbg !18446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.397() unnamed_addr #13 !dbg !18447 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !18451, metadata !DIExpression()), !dbg !18452
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !18453
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !18454
  ret i1 %2, !dbg !18455
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18456 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18460, metadata !DIExpression()), !dbg !18465
  call void @llvm.dbg.value(metadata i32 -22, metadata !18461, metadata !DIExpression()), !dbg !18465
  call void @llvm.dbg.value(metadata i32 0, metadata !18462, metadata !DIExpression()), !dbg !18466
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18224, metadata !DIExpression()) #26, !dbg !18467
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18469, !srcloc !18239
  call void @llvm.dbg.value(metadata i32 undef, metadata !18236, metadata !DIExpression()) #26, !dbg !18471
  call void @llvm.dbg.value(metadata i32 undef, metadata !18237, metadata !DIExpression()) #26, !dbg !18471
  call void @llvm.dbg.value(metadata i32 undef, metadata !18230, metadata !DIExpression()) #26, !dbg !18467
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18472
  br i1 %3, label %5, label %4, !dbg !18473

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 148) #27, !dbg !18474
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.388, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18474
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 148) #27, !dbg !18474
  unreachable, !dbg !18474

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18236, metadata !DIExpression()) #26, !dbg !18471
  call void @llvm.dbg.value(metadata i32 undef, metadata !18230, metadata !DIExpression()) #26, !dbg !18467
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18475
  call void @llvm.dbg.value(metadata i32 undef, metadata !18464, metadata !DIExpression()), !dbg !18466
  call void @llvm.dbg.value(metadata i32 -22, metadata !18461, metadata !DIExpression()), !dbg !18465
  call void @llvm.dbg.value(metadata i32 undef, metadata !18462, metadata !DIExpression()), !dbg !18466
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !18461, metadata !DIExpression()), !dbg !18465
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.381(%struct._dnode* noundef %6) #28, !dbg !18476
  br i1 %7, label %8, label %9, !dbg !18480

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #28, !dbg !18481
  call void @llvm.dbg.value(metadata i32 0, metadata !18461, metadata !DIExpression()), !dbg !18465
  br label %9, !dbg !18483

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !18465
  call void @llvm.dbg.value(metadata i32 %10, metadata !18461, metadata !DIExpression()), !dbg !18465
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()) #26, !dbg !18484
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18302, metadata !DIExpression()) #26, !dbg !18484
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18486
  br i1 %11, label %13, label %12, !dbg !18487

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 194) #27, !dbg !18488
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18488
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 194) #27, !dbg !18488
  unreachable, !dbg !18488

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !18469
  call void @llvm.dbg.value(metadata i32 %14, metadata !18236, metadata !DIExpression()) #26, !dbg !18471
  call void @llvm.dbg.value(metadata i32 %14, metadata !18230, metadata !DIExpression()) #26, !dbg !18467
  call void @llvm.dbg.value(metadata i32 %14, metadata !18464, metadata !DIExpression()), !dbg !18466
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()) #26, !dbg !18484
  call void @llvm.dbg.value(metadata i32 undef, metadata !18311, metadata !DIExpression()) #26, !dbg !18489
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #26, !dbg !18491, !srcloc !18317
  call void @llvm.dbg.value(metadata i32 %10, metadata !18461, metadata !DIExpression()), !dbg !18465
  call void @llvm.dbg.value(metadata i32 undef, metadata !18462, metadata !DIExpression()), !dbg !18466
  ret i32 %10, !dbg !18492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #14 !dbg !18493 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18495, metadata !DIExpression()), !dbg !18496
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #28, !dbg !18497
  %3 = icmp eq %struct._timeout* %2, null, !dbg !18499
  br i1 %3, label %10, label %4, !dbg !18500

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18501
  %6 = load i64, i64* %5, align 8, !dbg !18501
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !18503
  %8 = load i64, i64* %7, align 8, !dbg !18504
  %9 = add nsw i64 %8, %6, !dbg !18504
  store i64 %9, i64* %7, align 8, !dbg !18504
  br label %10, !dbg !18505

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18506
  tail call fastcc void @sys_dlist_remove.400(%struct._dnode* noundef %11) #28, !dbg !18507
  ret void, !dbg !18508
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.400(%struct._dnode* nocapture noundef %0) unnamed_addr #14 !dbg !18509 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18513, metadata !DIExpression()), !dbg !18516
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18517
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18517
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18514, metadata !DIExpression()), !dbg !18516
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18518
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !18518
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !18515, metadata !DIExpression()), !dbg !18516
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !18519
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !18520
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !18521
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !18522
  tail call fastcc void @sys_dnode_init.401(%struct._dnode* noundef %0) #28, !dbg !18523
  ret void, !dbg !18524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.401(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !18525 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18527, metadata !DIExpression()), !dbg !18528
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18529
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !18530
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18531
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !18532
  ret void, !dbg !18533
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18534 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18540, metadata !DIExpression()), !dbg !18545
  call void @llvm.dbg.value(metadata i64 0, metadata !18541, metadata !DIExpression()), !dbg !18545
  call void @llvm.dbg.value(metadata i32 0, metadata !18542, metadata !DIExpression()), !dbg !18546
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18224, metadata !DIExpression()) #26, !dbg !18547
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18549, !srcloc !18239
  call void @llvm.dbg.value(metadata i32 undef, metadata !18236, metadata !DIExpression()) #26, !dbg !18551
  call void @llvm.dbg.value(metadata i32 undef, metadata !18237, metadata !DIExpression()) #26, !dbg !18551
  call void @llvm.dbg.value(metadata i32 undef, metadata !18230, metadata !DIExpression()) #26, !dbg !18547
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18552
  br i1 %3, label %5, label %4, !dbg !18553

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 148) #27, !dbg !18554
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.388, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18554
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 148) #27, !dbg !18554
  unreachable, !dbg !18554

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18236, metadata !DIExpression()) #26, !dbg !18551
  call void @llvm.dbg.value(metadata i32 undef, metadata !18230, metadata !DIExpression()) #26, !dbg !18547
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18555
  call void @llvm.dbg.value(metadata i32 undef, metadata !18544, metadata !DIExpression()), !dbg !18546
  call void @llvm.dbg.value(metadata i64 0, metadata !18541, metadata !DIExpression()), !dbg !18545
  call void @llvm.dbg.value(metadata i32 undef, metadata !18542, metadata !DIExpression()), !dbg !18546
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #28, !dbg !18556
  call void @llvm.dbg.value(metadata i64 %6, metadata !18541, metadata !DIExpression()), !dbg !18545
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()) #26, !dbg !18559
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18302, metadata !DIExpression()) #26, !dbg !18559
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18561
  br i1 %7, label %9, label %8, !dbg !18562

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 194) #27, !dbg !18563
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18563
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 194) #27, !dbg !18563
  unreachable, !dbg !18563

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !18549
  call void @llvm.dbg.value(metadata i32 %10, metadata !18236, metadata !DIExpression()) #26, !dbg !18551
  call void @llvm.dbg.value(metadata i32 %10, metadata !18230, metadata !DIExpression()) #26, !dbg !18547
  call void @llvm.dbg.value(metadata i32 %10, metadata !18544, metadata !DIExpression()), !dbg !18546
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()) #26, !dbg !18559
  call void @llvm.dbg.value(metadata i32 undef, metadata !18311, metadata !DIExpression()) #26, !dbg !18564
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #26, !dbg !18566, !srcloc !18317
  call void @llvm.dbg.value(metadata i64 %6, metadata !18541, metadata !DIExpression()), !dbg !18545
  call void @llvm.dbg.value(metadata i32 undef, metadata !18542, metadata !DIExpression()), !dbg !18546
  ret i64 %6, !dbg !18567
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !18568 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18570, metadata !DIExpression()), !dbg !18574
  call void @llvm.dbg.value(metadata i64 0, metadata !18571, metadata !DIExpression()), !dbg !18574
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.402(%struct._timeout* noundef %0) #28, !dbg !18575
  br i1 %2, label %21, label %3, !dbg !18577

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #28, !dbg !18578
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !18572, metadata !DIExpression()), !dbg !18579
  call void @llvm.dbg.value(metadata i64 0, metadata !18571, metadata !DIExpression()), !dbg !18574
  %5 = icmp eq %struct._timeout* %4, null, !dbg !18580
  br i1 %5, label %16, label %6, !dbg !18582

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !18572, metadata !DIExpression()), !dbg !18579
  call void @llvm.dbg.value(metadata i64 %8, metadata !18571, metadata !DIExpression()), !dbg !18574
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !18583
  %10 = load i64, i64* %9, align 8, !dbg !18583
  %11 = add nsw i64 %10, %8, !dbg !18585
  call void @llvm.dbg.value(metadata i64 %11, metadata !18571, metadata !DIExpression()), !dbg !18574
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !18586
  br i1 %12, label %16, label %13, !dbg !18588

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #28, !dbg !18589
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !18572, metadata !DIExpression()), !dbg !18579
  call void @llvm.dbg.value(metadata i64 %11, metadata !18571, metadata !DIExpression()), !dbg !18574
  %15 = icmp eq %struct._timeout* %14, null, !dbg !18580
  br i1 %15, label %16, label %6, !dbg !18582, !llvm.loop !18590

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !18574
  call void @llvm.dbg.value(metadata i64 %17, metadata !18571, metadata !DIExpression()), !dbg !18574
  %18 = tail call fastcc i32 @elapsed.389() #28, !dbg !18592
  %19 = sext i32 %18 to i64, !dbg !18592
  %20 = sub nsw i64 %17, %19, !dbg !18593
  br label %21, !dbg !18594

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !18574
  ret i64 %22, !dbg !18595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.402(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #13 !dbg !18596 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18600, metadata !DIExpression()), !dbg !18601
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18602
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.381(%struct._dnode* noundef %2) #28, !dbg !18603
  %4 = xor i1 %3, true, !dbg !18604
  ret i1 %4, !dbg !18605
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18606 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18608, metadata !DIExpression()), !dbg !18613
  call void @llvm.dbg.value(metadata i64 0, metadata !18609, metadata !DIExpression()), !dbg !18613
  call void @llvm.dbg.value(metadata i32 0, metadata !18610, metadata !DIExpression()), !dbg !18614
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18224, metadata !DIExpression()) #26, !dbg !18615
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18617, !srcloc !18239
  call void @llvm.dbg.value(metadata i32 undef, metadata !18236, metadata !DIExpression()) #26, !dbg !18619
  call void @llvm.dbg.value(metadata i32 undef, metadata !18237, metadata !DIExpression()) #26, !dbg !18619
  call void @llvm.dbg.value(metadata i32 undef, metadata !18230, metadata !DIExpression()) #26, !dbg !18615
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18620
  br i1 %3, label %5, label %4, !dbg !18621

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 148) #27, !dbg !18622
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.388, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18622
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 148) #27, !dbg !18622
  unreachable, !dbg !18622

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18236, metadata !DIExpression()) #26, !dbg !18619
  call void @llvm.dbg.value(metadata i32 undef, metadata !18230, metadata !DIExpression()) #26, !dbg !18615
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18623
  call void @llvm.dbg.value(metadata i32 undef, metadata !18612, metadata !DIExpression()), !dbg !18614
  call void @llvm.dbg.value(metadata i64 0, metadata !18609, metadata !DIExpression()), !dbg !18613
  call void @llvm.dbg.value(metadata i32 undef, metadata !18610, metadata !DIExpression()), !dbg !18614
  %6 = load i64, i64* @curr_tick, align 8, !dbg !18624
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #28, !dbg !18627
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !18609, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18613
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()) #26, !dbg !18628
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18302, metadata !DIExpression()) #26, !dbg !18628
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18630
  br i1 %8, label %10, label %9, !dbg !18631

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 194) #27, !dbg !18632
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18632
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 194) #27, !dbg !18632
  unreachable, !dbg !18632

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !18617
  call void @llvm.dbg.value(metadata i32 %11, metadata !18236, metadata !DIExpression()) #26, !dbg !18619
  call void @llvm.dbg.value(metadata i32 %11, metadata !18230, metadata !DIExpression()) #26, !dbg !18615
  call void @llvm.dbg.value(metadata i32 %11, metadata !18612, metadata !DIExpression()), !dbg !18614
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !18609, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18613
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()) #26, !dbg !18628
  call void @llvm.dbg.value(metadata i32 undef, metadata !18311, metadata !DIExpression()) #26, !dbg !18633
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #26, !dbg !18635, !srcloc !18317
  call void @llvm.dbg.value(metadata i32 undef, metadata !18610, metadata !DIExpression()), !dbg !18614
  %12 = add i64 %7, %6, !dbg !18636
  ret i64 %12, !dbg !18637
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !18638 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !18640, metadata !DIExpression()), !dbg !18644
  call void @llvm.dbg.value(metadata i32 0, metadata !18641, metadata !DIExpression()), !dbg !18645
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18224, metadata !DIExpression()) #26, !dbg !18646
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18648, !srcloc !18239
  call void @llvm.dbg.value(metadata i32 undef, metadata !18236, metadata !DIExpression()) #26, !dbg !18650
  call void @llvm.dbg.value(metadata i32 undef, metadata !18237, metadata !DIExpression()) #26, !dbg !18650
  call void @llvm.dbg.value(metadata i32 undef, metadata !18230, metadata !DIExpression()) #26, !dbg !18646
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18651
  br i1 %2, label %4, label %3, !dbg !18652

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 148) #27, !dbg !18653
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.388, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18653
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 148) #27, !dbg !18653
  unreachable, !dbg !18653

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !18236, metadata !DIExpression()) #26, !dbg !18650
  call void @llvm.dbg.value(metadata i32 undef, metadata !18230, metadata !DIExpression()) #26, !dbg !18646
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18654
  call void @llvm.dbg.value(metadata i32 undef, metadata !18643, metadata !DIExpression()), !dbg !18645
  call void @llvm.dbg.value(metadata i32 -1, metadata !18640, metadata !DIExpression()), !dbg !18644
  call void @llvm.dbg.value(metadata i32 undef, metadata !18641, metadata !DIExpression()), !dbg !18645
  %5 = tail call fastcc i32 @next_timeout() #28, !dbg !18655
  call void @llvm.dbg.value(metadata i32 %5, metadata !18640, metadata !DIExpression()), !dbg !18644
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()) #26, !dbg !18658
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18302, metadata !DIExpression()) #26, !dbg !18658
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18660
  br i1 %6, label %8, label %7, !dbg !18661

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 194) #27, !dbg !18662
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18662
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 194) #27, !dbg !18662
  unreachable, !dbg !18662

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !18648
  call void @llvm.dbg.value(metadata i32 %9, metadata !18236, metadata !DIExpression()) #26, !dbg !18650
  call void @llvm.dbg.value(metadata i32 %9, metadata !18230, metadata !DIExpression()) #26, !dbg !18646
  call void @llvm.dbg.value(metadata i32 %9, metadata !18643, metadata !DIExpression()), !dbg !18645
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()) #26, !dbg !18658
  call void @llvm.dbg.value(metadata i32 undef, metadata !18311, metadata !DIExpression()) #26, !dbg !18663
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #26, !dbg !18665, !srcloc !18317
  call void @llvm.dbg.value(metadata i32 %5, metadata !18640, metadata !DIExpression()), !dbg !18644
  call void @llvm.dbg.value(metadata i32 undef, metadata !18641, metadata !DIExpression()), !dbg !18645
  ret i32 %5, !dbg !18666
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !18667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18669, metadata !DIExpression()), !dbg !18679
  call void @llvm.dbg.value(metadata i1 %1, metadata !18670, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18679
  call void @llvm.dbg.value(metadata i32 0, metadata !18671, metadata !DIExpression()), !dbg !18680
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18224, metadata !DIExpression()) #26, !dbg !18681
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18683, !srcloc !18239
  call void @llvm.dbg.value(metadata i32 undef, metadata !18236, metadata !DIExpression()) #26, !dbg !18685
  call void @llvm.dbg.value(metadata i32 undef, metadata !18237, metadata !DIExpression()) #26, !dbg !18685
  call void @llvm.dbg.value(metadata i32 undef, metadata !18230, metadata !DIExpression()) #26, !dbg !18681
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18686
  br i1 %4, label %6, label %5, !dbg !18687

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 148) #27, !dbg !18688
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.388, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18688
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 148) #27, !dbg !18688
  unreachable, !dbg !18688

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !18236, metadata !DIExpression()) #26, !dbg !18685
  call void @llvm.dbg.value(metadata i32 undef, metadata !18230, metadata !DIExpression()) #26, !dbg !18681
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18689
  call void @llvm.dbg.value(metadata i32 undef, metadata !18673, metadata !DIExpression()), !dbg !18680
  call void @llvm.dbg.value(metadata i32 undef, metadata !18671, metadata !DIExpression()), !dbg !18680
  %7 = tail call fastcc i32 @next_timeout() #28, !dbg !18690
  call void @llvm.dbg.value(metadata i32 %7, metadata !18674, metadata !DIExpression()), !dbg !18691
  call void @llvm.dbg.value(metadata i1 undef, metadata !18677, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18691
  %8 = icmp slt i32 %7, 2, !dbg !18692
  call void @llvm.dbg.value(metadata i1 %8, metadata !18678, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18691
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !18693
  call void @llvm.dbg.value(metadata i1 %9, metadata !18677, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18691
  br i1 %10, label %14, label %11, !dbg !18693

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !18695
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !18695
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #27, !dbg !18697
  br label %14, !dbg !18698

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()) #26, !dbg !18699
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18302, metadata !DIExpression()) #26, !dbg !18699
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18701
  br i1 %15, label %17, label %16, !dbg !18702

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 194) #27, !dbg !18703
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18703
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 194) #27, !dbg !18703
  unreachable, !dbg !18703

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !18683
  call void @llvm.dbg.value(metadata i32 %18, metadata !18236, metadata !DIExpression()) #26, !dbg !18685
  call void @llvm.dbg.value(metadata i32 %18, metadata !18230, metadata !DIExpression()) #26, !dbg !18681
  call void @llvm.dbg.value(metadata i32 %18, metadata !18673, metadata !DIExpression()), !dbg !18680
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()) #26, !dbg !18699
  call void @llvm.dbg.value(metadata i32 undef, metadata !18311, metadata !DIExpression()) #26, !dbg !18704
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #26, !dbg !18706, !srcloc !18317
  call void @llvm.dbg.value(metadata i32 1, metadata !18671, metadata !DIExpression()), !dbg !18680
  call void @llvm.dbg.value(metadata i32 undef, metadata !18671, metadata !DIExpression()), !dbg !18680
  ret void, !dbg !18707
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !18708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18712, metadata !DIExpression()), !dbg !18717
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !18718
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18224, metadata !DIExpression()) #26, !dbg !18719
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18721, !srcloc !18239
  call void @llvm.dbg.value(metadata i32 undef, metadata !18236, metadata !DIExpression()) #26, !dbg !18723
  call void @llvm.dbg.value(metadata i32 undef, metadata !18237, metadata !DIExpression()) #26, !dbg !18723
  call void @llvm.dbg.value(metadata i32 undef, metadata !18230, metadata !DIExpression()) #26, !dbg !18719
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18724
  br i1 %3, label %5, label %4, !dbg !18725

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 148) #27, !dbg !18726
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.388, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18726
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 148) #27, !dbg !18726
  unreachable, !dbg !18726

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18236, metadata !DIExpression()) #26, !dbg !18723
  call void @llvm.dbg.value(metadata i32 undef, metadata !18230, metadata !DIExpression()) #26, !dbg !18719
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18727
  call void @llvm.dbg.value(metadata i32 undef, metadata !18713, metadata !DIExpression()), !dbg !18717
  store i32 %0, i32* @announce_remaining, align 4, !dbg !18717
  call void @llvm.dbg.value(metadata i32 undef, metadata !18713, metadata !DIExpression()), !dbg !18717
  %6 = tail call fastcc %struct._timeout* @first() #28, !dbg !18728
  %7 = icmp eq %struct._timeout* %6, null, !dbg !18729
  br i1 %7, label %37, label %8, !dbg !18730

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !18717
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !18731
  %14 = load i64, i64* %13, align 8, !dbg !18731
  %15 = sext i32 %11 to i64, !dbg !18732
  %16 = icmp sgt i64 %14, %15, !dbg !18733
  br i1 %16, label %35, label %17, !dbg !18734

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !18714, metadata !DIExpression()), !dbg !18735
  %18 = trunc i64 %14 to i32, !dbg !18736
  call void @llvm.dbg.value(metadata i32 %18, metadata !18716, metadata !DIExpression()), !dbg !18735
  %19 = sext i32 %18 to i64, !dbg !18737
  %20 = load i64, i64* @curr_tick, align 8, !dbg !18738
  %21 = add i64 %20, %19, !dbg !18738
  store i64 %21, i64* @curr_tick, align 8, !dbg !18738
  store i64 0, i64* %13, align 8, !dbg !18739
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #28, !dbg !18740
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()) #26, !dbg !18741
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18302, metadata !DIExpression()) #26, !dbg !18741
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18743
  br i1 %22, label %24, label %23, !dbg !18744

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 194) #27, !dbg !18745
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18745
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 194) #27, !dbg !18745
  unreachable, !dbg !18745

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !18297, metadata !DIExpression()) #26, !dbg !18741
  call void @llvm.dbg.value(metadata i32 %12, metadata !18311, metadata !DIExpression()) #26, !dbg !18746
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #26, !dbg !18748, !srcloc !18317
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !18749
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !18749
  tail call void %26(%struct._timeout* noundef nonnull %9) #27, !dbg !18750
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18224, metadata !DIExpression()) #26, !dbg !18751
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18753, !srcloc !18239
  call void @llvm.dbg.value(metadata i32 undef, metadata !18236, metadata !DIExpression()) #26, !dbg !18755
  call void @llvm.dbg.value(metadata i32 undef, metadata !18237, metadata !DIExpression()) #26, !dbg !18755
  call void @llvm.dbg.value(metadata i32 undef, metadata !18230, metadata !DIExpression()) #26, !dbg !18751
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18756
  br i1 %28, label %30, label %29, !dbg !18757

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 148) #27, !dbg !18758
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.388, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18758
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 148) #27, !dbg !18758
  unreachable, !dbg !18758

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !18236, metadata !DIExpression()) #26, !dbg !18755
  call void @llvm.dbg.value(metadata i32 undef, metadata !18230, metadata !DIExpression()) #26, !dbg !18751
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18759
  call void @llvm.dbg.value(metadata i32 undef, metadata !18713, metadata !DIExpression()), !dbg !18717
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !18760
  %32 = sub nsw i32 %31, %18, !dbg !18760
  store i32 %32, i32* @announce_remaining, align 4, !dbg !18717
  call void @llvm.dbg.value(metadata i32 undef, metadata !18713, metadata !DIExpression()), !dbg !18717
  %33 = tail call fastcc %struct._timeout* @first() #28, !dbg !18728
  %34 = icmp eq %struct._timeout* %33, null, !dbg !18729
  br i1 %34, label %37, label %8, !dbg !18730, !llvm.loop !18761

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !18763
  store i64 %36, i64* %13, align 8, !dbg !18763
  br label %41, !dbg !18766

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !18717
  %40 = sext i32 %39 to i64, !dbg !18767
  br label %41, !dbg !18767

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !18767
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !18768
  %45 = add i64 %44, %42, !dbg !18768
  store i64 %45, i64* @curr_tick, align 8, !dbg !18768
  store i32 0, i32* @announce_remaining, align 4, !dbg !18769
  %46 = tail call fastcc i32 @next_timeout() #28, !dbg !18770
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #27, !dbg !18771
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()) #26, !dbg !18772
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18302, metadata !DIExpression()) #26, !dbg !18772
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18774
  br i1 %47, label %49, label %48, !dbg !18775

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 194) #27, !dbg !18776
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18776
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 194) #27, !dbg !18776
  unreachable, !dbg !18776

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !18717
  call void @llvm.dbg.value(metadata i32 %50, metadata !18297, metadata !DIExpression()) #26, !dbg !18772
  call void @llvm.dbg.value(metadata i32 %50, metadata !18311, metadata !DIExpression()) #26, !dbg !18777
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #26, !dbg !18779, !srcloc !18317
  ret void, !dbg !18780
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !18781 {
  call void @llvm.dbg.value(metadata i64 0, metadata !18785, metadata !DIExpression()), !dbg !18789
  call void @llvm.dbg.value(metadata i32 0, metadata !18786, metadata !DIExpression()), !dbg !18790
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18224, metadata !DIExpression()) #26, !dbg !18791
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18793, !srcloc !18239
  call void @llvm.dbg.value(metadata i32 undef, metadata !18236, metadata !DIExpression()) #26, !dbg !18795
  call void @llvm.dbg.value(metadata i32 undef, metadata !18237, metadata !DIExpression()) #26, !dbg !18795
  call void @llvm.dbg.value(metadata i32 undef, metadata !18230, metadata !DIExpression()) #26, !dbg !18791
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18796
  br i1 %2, label %4, label %3, !dbg !18797

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 148) #27, !dbg !18798
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.388, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18798
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 148) #27, !dbg !18798
  unreachable, !dbg !18798

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !18236, metadata !DIExpression()) #26, !dbg !18795
  call void @llvm.dbg.value(metadata i32 undef, metadata !18230, metadata !DIExpression()) #26, !dbg !18791
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18799
  call void @llvm.dbg.value(metadata i32 undef, metadata !18788, metadata !DIExpression()), !dbg !18790
  call void @llvm.dbg.value(metadata i64 0, metadata !18785, metadata !DIExpression()), !dbg !18789
  call void @llvm.dbg.value(metadata i32 undef, metadata !18786, metadata !DIExpression()), !dbg !18790
  %5 = load i64, i64* @curr_tick, align 8, !dbg !18800
  %6 = tail call fastcc i32 @elapsed.389() #28, !dbg !18803
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !18785, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !18789
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()) #26, !dbg !18804
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18302, metadata !DIExpression()) #26, !dbg !18804
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18806
  br i1 %7, label %9, label %8, !dbg !18807

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.382, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.392, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 194) #27, !dbg !18808
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.393, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #27, !dbg !18808
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.387, i32 0, i32 0), i32 noundef 194) #27, !dbg !18808
  unreachable, !dbg !18808

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !18793
  call void @llvm.dbg.value(metadata i32 %10, metadata !18236, metadata !DIExpression()) #26, !dbg !18795
  call void @llvm.dbg.value(metadata i32 %10, metadata !18230, metadata !DIExpression()) #26, !dbg !18791
  call void @llvm.dbg.value(metadata i32 %10, metadata !18788, metadata !DIExpression()), !dbg !18790
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !18785, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !18789
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !18785, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18789
  call void @llvm.dbg.value(metadata i32 undef, metadata !18297, metadata !DIExpression()) #26, !dbg !18804
  call void @llvm.dbg.value(metadata i32 undef, metadata !18311, metadata !DIExpression()) #26, !dbg !18809
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #26, !dbg !18811, !srcloc !18317
  call void @llvm.dbg.value(metadata i32 undef, metadata !18786, metadata !DIExpression()), !dbg !18790
  %11 = sext i32 %6 to i64, !dbg !18803
  %12 = add i64 %5, %11, !dbg !18812
  ret i64 %12, !dbg !18813
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !18814 {
  %1 = tail call i64 @sys_clock_tick_get() #28, !dbg !18815
  %2 = trunc i64 %1 to i32, !dbg !18816
  ret i32 %2, !dbg !18817
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !18818 {
  %1 = tail call i64 @sys_clock_tick_get() #28, !dbg !18819
  ret i64 %1, !dbg !18820
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !18821 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18823, metadata !DIExpression()), !dbg !18830
  %2 = icmp eq i32 %0, 0, !dbg !18831
  br i1 %2, label %10, label %3, !dbg !18833

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.409() #28, !dbg !18834
  call void @llvm.dbg.value(metadata i32 %4, metadata !18824, metadata !DIExpression()), !dbg !18830
  %5 = mul i32 %0, 84, !dbg !18835
  call void @llvm.dbg.value(metadata i32 %5, metadata !18825, metadata !DIExpression()), !dbg !18830
  br label %6, !dbg !18836

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.409() #28, !dbg !18837
  call void @llvm.dbg.value(metadata i32 %7, metadata !18826, metadata !DIExpression()), !dbg !18838
  %8 = sub i32 %7, %4, !dbg !18839
  %9 = icmp ult i32 %8, %5, !dbg !18841
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !18842
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.409() unnamed_addr #1 !dbg !18843 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.410() #28, !dbg !18844
  ret i32 %1, !dbg !18845
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.410() unnamed_addr #1 !dbg !18846 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !18847
  ret i32 %1, !dbg !18848
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18849 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18853, metadata !DIExpression()), !dbg !18855
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18856

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #28, !dbg !18857
  br label %14, !dbg !18861

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18854, metadata !DIExpression()), !dbg !18855
  %6 = icmp slt i64 %2, -1, !dbg !18862
  br i1 %6, label %7, label %9, !dbg !18865

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18866
  br label %14, !dbg !18867

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #28, !dbg !18869
  %11 = icmp ugt i64 %2, 1, !dbg !18870
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18870
  %13 = add nsw i64 %10, %12, !dbg !18871
  br label %14, !dbg !18872

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18873
  ret i64 %15, !dbg !18874
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18875 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.413, i32 0, i32 0)) #27, !dbg !18877
  ret void, !dbg !18878
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !18879 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !18881, metadata !DIExpression()), !dbg !18903
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !18882, metadata !DIExpression()), !dbg !18904
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !18905

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.415, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.416, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.417, i32 0, i32 0), i32 noundef 24) #27, !dbg !18909
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.418, i32 0, i32 0)) #27, !dbg !18909
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.417, i32 0, i32 0), i32 noundef 24) #27, !dbg !18909
  unreachable, !dbg !18909

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !18882, metadata !DIExpression()), !dbg !18904
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18912
  br i1 %5, label %7, label %6, !dbg !18913

6:                                                ; preds = %3
  ret i32 0, !dbg !18914

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !18915
  %9 = load i8*, i8** %8, align 4, !dbg !18915
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !18918
  %11 = load i32, i32* %10, align 4, !dbg !18918
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #28, !dbg !18919
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !18920
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !18882, metadata !DIExpression()), !dbg !18904
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !18921
  br i1 %13, label %2, label %3, !dbg !18905, !llvm.loop !18922
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !18924 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18928, metadata !DIExpression()), !dbg !18931
  call void @llvm.dbg.value(metadata i8* %1, metadata !18929, metadata !DIExpression()), !dbg !18931
  call void @llvm.dbg.value(metadata i32 %2, metadata !18930, metadata !DIExpression()), !dbg !18931
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !18932
  tail call fastcc void @z_waitq_init.419(%union.anon* noundef nonnull %4) #28, !dbg !18933
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !18934
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !18935
  ret void, !dbg !18936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.419(%union.anon* noundef %0) unnamed_addr #12 !dbg !18937 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !18942, metadata !DIExpression()), !dbg !18943
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !18944
  tail call fastcc void @sys_dlist_init.420(%struct._dnode* noundef %2) #28, !dbg !18945
  ret void, !dbg !18946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.420(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !18947 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18952, metadata !DIExpression()), !dbg !18953
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18954
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18955
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18956
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18957
  ret void, !dbg !18958
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !18959 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !18970, metadata !DIExpression()), !dbg !18980
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !18967, metadata !DIExpression()), !dbg !18980
  call void @llvm.dbg.value(metadata i32 %1, metadata !18968, metadata !DIExpression()), !dbg !18980
  call void @llvm.dbg.value(metadata i32 %2, metadata !18969, metadata !DIExpression()), !dbg !18980
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !18981
  call void @llvm.dbg.value(metadata i64 %6, metadata !18972, metadata !DIExpression()), !dbg !18980
  call void @llvm.dbg.value(metadata i8* null, metadata !18973, metadata !DIExpression()), !dbg !18980
  %7 = icmp eq i64 %5, -1, !dbg !18982
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !18982
  call void @llvm.dbg.value(metadata i64 %8, metadata !18972, metadata !DIExpression()), !dbg !18980
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !18983
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !18984, metadata !DIExpression()) #26, !dbg !18991
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !18993, !srcloc !18999
  call void @llvm.dbg.value(metadata i32 undef, metadata !18996, metadata !DIExpression()) #26, !dbg !19000
  call void @llvm.dbg.value(metadata i32 undef, metadata !18997, metadata !DIExpression()) #26, !dbg !19000
  call void @llvm.dbg.value(metadata i32 undef, metadata !18990, metadata !DIExpression()) #26, !dbg !18991
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19001
  br i1 %11, label %13, label %12, !dbg !19004

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.415, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.421, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.422, i32 0, i32 0), i32 noundef 148) #27, !dbg !19005
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.423, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #27, !dbg !19005
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.422, i32 0, i32 0), i32 noundef 148) #27, !dbg !19005
  unreachable, !dbg !19005

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !18996, metadata !DIExpression()) #26, !dbg !19000
  call void @llvm.dbg.value(metadata i32 undef, metadata !18990, metadata !DIExpression()) #26, !dbg !18991
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19007
  call void @llvm.dbg.value(metadata i32 undef, metadata !18974, metadata !DIExpression()), !dbg !18980
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #26, !dbg !19008, !srcloc !19017
  call void @llvm.dbg.value(metadata i32 %14, metadata !19011, metadata !DIExpression()) #26, !dbg !19018
  %15 = icmp eq i32 %14, 0, !dbg !19019
  %16 = icmp eq i64 %5, 0, !dbg !19020
  %17 = select i1 %15, i1 true, i1 %16, !dbg !19020
  br i1 %17, label %18, label %25, !dbg !19020

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !18973, metadata !DIExpression()), !dbg !18980
  call void @llvm.dbg.value(metadata i8 0, metadata !18979, metadata !DIExpression()), !dbg !18980
  call void @llvm.dbg.value(metadata i32 undef, metadata !18974, metadata !DIExpression()), !dbg !18980
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #27, !dbg !19021
  call void @llvm.dbg.value(metadata i8* %20, metadata !18973, metadata !DIExpression()), !dbg !18980
  %21 = tail call i64 @sys_clock_tick_get() #27, !dbg !19023
  call void @llvm.dbg.value(metadata i64 %21, metadata !18971, metadata !DIExpression()), !dbg !18980
  %22 = icmp eq i8* %20, null, !dbg !19024
  br i1 %22, label %23, label %43, !dbg !19026

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !18974, metadata !DIExpression()), !dbg !18980
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !19026

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.415, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.417, i32 0, i32 0), i32 noundef 76) #27, !dbg !19027
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.425, i32 0, i32 0)) #27, !dbg !19027
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.417, i32 0, i32 0), i32 noundef 76) #27, !dbg !19027
  unreachable, !dbg !19027

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !18979, metadata !DIExpression()), !dbg !18980
  %29 = sub nsw i64 %8, %27, !dbg !19029
  %30 = icmp slt i64 %29, 1, !dbg !19030
  br i1 %30, label %43, label %31, !dbg !19031

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !18980
  call void @llvm.dbg.value(metadata i8 undef, metadata !18979, metadata !DIExpression()), !dbg !18980
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !19032
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !19032
  %35 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %33, %union.anon* noundef nonnull %24, [1 x i64] %34) #27, !dbg !19032
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !18984, metadata !DIExpression()) #26, !dbg !19033
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19035, !srcloc !18999
  call void @llvm.dbg.value(metadata i32 undef, metadata !18996, metadata !DIExpression()) #26, !dbg !19037
  call void @llvm.dbg.value(metadata i32 undef, metadata !18997, metadata !DIExpression()) #26, !dbg !19037
  call void @llvm.dbg.value(metadata i32 undef, metadata !18990, metadata !DIExpression()) #26, !dbg !19033
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19038
  br i1 %37, label %39, label %38, !dbg !19039

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.415, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.421, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.422, i32 0, i32 0), i32 noundef 148) #27, !dbg !19040
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.423, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #27, !dbg !19040
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.422, i32 0, i32 0), i32 noundef 148) #27, !dbg !19040
  unreachable, !dbg !19040

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !18979, metadata !DIExpression()), !dbg !18980
  call void @llvm.dbg.value(metadata i32 undef, metadata !18996, metadata !DIExpression()) #26, !dbg !19037
  call void @llvm.dbg.value(metadata i32 undef, metadata !18990, metadata !DIExpression()) #26, !dbg !19033
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19041
  call void @llvm.dbg.value(metadata i32 undef, metadata !18974, metadata !DIExpression()), !dbg !18980
  call void @llvm.dbg.value(metadata i8* null, metadata !18973, metadata !DIExpression()), !dbg !18980
  call void @llvm.dbg.value(metadata i32 undef, metadata !18974, metadata !DIExpression()), !dbg !18980
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #27, !dbg !19021
  call void @llvm.dbg.value(metadata i8* %40, metadata !18973, metadata !DIExpression()), !dbg !18980
  %41 = tail call i64 @sys_clock_tick_get() #27, !dbg !19023
  call void @llvm.dbg.value(metadata i64 %41, metadata !18971, metadata !DIExpression()), !dbg !18980
  %42 = icmp eq i8* %40, null, !dbg !19024
  br i1 %42, label %26, label %43, !dbg !19026, !llvm.loop !19042

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !19021
  call void @llvm.dbg.value(metadata i8* %45, metadata !18973, metadata !DIExpression()), !dbg !18980
  call void @llvm.dbg.value(metadata i32 undef, metadata !19045, metadata !DIExpression()) #26, !dbg !19051
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19050, metadata !DIExpression()) #26, !dbg !19051
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %9) #27, !dbg !19053
  br i1 %46, label %48, label %47, !dbg !19056

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.415, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.426, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.422, i32 0, i32 0), i32 noundef 194) #27, !dbg !19057
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.427, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #27, !dbg !19057
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.422, i32 0, i32 0), i32 noundef 194) #27, !dbg !19057
  unreachable, !dbg !19057

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !18980
  call void @llvm.dbg.value(metadata i32 %49, metadata !19045, metadata !DIExpression()) #26, !dbg !19051
  call void @llvm.dbg.value(metadata i32 %49, metadata !19059, metadata !DIExpression()) #26, !dbg !19062
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #26, !dbg !19064, !srcloc !19065
  ret i8* %45, !dbg !19066
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !19067 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !19073, metadata !DIExpression()), !dbg !19075
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19071, metadata !DIExpression()), !dbg !19075
  call void @llvm.dbg.value(metadata i32 %1, metadata !19072, metadata !DIExpression()), !dbg !19075
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #28, !dbg !19076
  call void @llvm.dbg.value(metadata i8* %4, metadata !19074, metadata !DIExpression()), !dbg !19075
  ret i8* %4, !dbg !19077
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !19078 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19082, metadata !DIExpression()), !dbg !19085
  call void @llvm.dbg.value(metadata i8* %1, metadata !19083, metadata !DIExpression()), !dbg !19085
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !19086
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !18984, metadata !DIExpression()) #26, !dbg !19087
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #26, !dbg !19089, !srcloc !18999
  call void @llvm.dbg.value(metadata i32 undef, metadata !18996, metadata !DIExpression()) #26, !dbg !19091
  call void @llvm.dbg.value(metadata i32 undef, metadata !18997, metadata !DIExpression()) #26, !dbg !19091
  call void @llvm.dbg.value(metadata i32 undef, metadata !18990, metadata !DIExpression()) #26, !dbg !19087
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !19092
  br i1 %5, label %7, label %6, !dbg !19093

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.415, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.421, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.422, i32 0, i32 0), i32 noundef 148) #27, !dbg !19094
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.423, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !19094
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.422, i32 0, i32 0), i32 noundef 148) #27, !dbg !19094
  unreachable, !dbg !19094

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !19089
  call void @llvm.dbg.value(metadata i32 %8, metadata !18996, metadata !DIExpression()) #26, !dbg !19091
  call void @llvm.dbg.value(metadata i32 %8, metadata !18990, metadata !DIExpression()) #26, !dbg !19087
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !19095
  call void @llvm.dbg.value(metadata i32 %8, metadata !19084, metadata !DIExpression()), !dbg !19085
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !19096
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #27, !dbg !19097
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !19098
  %11 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %10) #27, !dbg !19100
  %12 = icmp eq i32 %11, 0, !dbg !19101
  br i1 %12, label %15, label %13, !dbg !19102

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !19103
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %14) #27, !dbg !19103
  br label %19, !dbg !19105

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !19045, metadata !DIExpression()) #26, !dbg !19106
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !19050, metadata !DIExpression()) #26, !dbg !19106
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #27, !dbg !19109
  br i1 %16, label %18, label %17, !dbg !19110

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.415, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.426, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.422, i32 0, i32 0), i32 noundef 194) #27, !dbg !19111
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.427, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #27, !dbg !19111
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.422, i32 0, i32 0), i32 noundef 194) #27, !dbg !19111
  unreachable, !dbg !19111

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !19045, metadata !DIExpression()) #26, !dbg !19106
  call void @llvm.dbg.value(metadata i32 %8, metadata !19059, metadata !DIExpression()) #26, !dbg !19112
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #26, !dbg !19114, !srcloc !19065
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !19115
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nofree noinline nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { nofree nosync nounwind willreturn }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { argmemonly nofree nounwind willreturn writeonly }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #26 = { nounwind }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin optsize "no-builtins" }
attributes #29 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #30 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #31 = { nounwind readnone }
attributes #32 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!915, !2, !2545, !27, !354, !420, !442, !2547, !2549, !2582, !2616, !2618, !452, !503, !2620, !2623, !2634, !2680, !2682, !2710, !2738, !2781, !2852, !2897, !532, !674, !2925, !710, !720, !745, !947, !2930, !1085, !1151, !1454, !1678, !2969, !1791, !1881, !2971, !3057, !3122, !1931, !3125, !1938, !2311, !3143, !3145, !2331, !2356, !3251, !2473, !3254, !2514}
!llvm.ident = !{!3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256, !3256}
!llvm.module.flags = !{!3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 98, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5504, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 86)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2752, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !120, line: 10, type: !346, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !117, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/metairq_dispatch/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !104, !105, !106, !107, !111, !113, !114, !116}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!103 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!105 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!106 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !108, line: 46, baseType: !109)
!108 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !110)
!110 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !112, line: 214, baseType: !32)
!112 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !115)
!115 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !105)
!117 = !{!25, !118, !271, !275, !282, !315, !320, !324, !326}
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(name: "_k_thread_data_metairq_thread", scope: !27, file: !120, line: 28, type: !121, isLocal: false, isDefinition: true, align: 32)
!120 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !122, line: 620, size: 384, elements: !123)
!122 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!123 = !{!124, !244, !252, !253, !258, !259, !260, !261, !262, !263, !264, !268}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !121, file: !122, line: 621, baseType: !125, size: 32)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !{!129, !198, !211, !212, !213, !214, !220, !239}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !126, file: !127, line: 247, baseType: !130, size: 384)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !131)
!131 = !{!132, !160, !168, !171, !172, !185, !186, !187}
!132 = !DIDerivedType(tag: DW_TAG_member, scope: !130, file: !127, line: 60, baseType: !133, size: 64)
!133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !130, file: !127, line: 60, size: 64, elements: !134)
!134 = !{!135, !151}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !133, file: !127, line: 61, baseType: !136, size: 64)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !139)
!139 = !{!140, !146}
!140 = !DIDerivedType(tag: DW_TAG_member, scope: !138, file: !137, line: 38, baseType: !141, size: 32)
!141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !138, file: !137, line: 38, size: 32, elements: !142)
!142 = !{!143, !145}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !141, file: !137, line: 39, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !141, file: !137, line: 40, baseType: !144, size: 32)
!146 = !DIDerivedType(tag: DW_TAG_member, scope: !138, file: !137, line: 42, baseType: !147, size: 32, offset: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !138, file: !137, line: 42, size: 32, elements: !148)
!148 = !{!149, !150}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !147, file: !137, line: 43, baseType: !144, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !147, file: !137, line: 44, baseType: !144, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !133, file: !127, line: 62, baseType: !152, size: 64)
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !154)
!153 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!154 = !{!155}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !152, file: !153, line: 50, baseType: !156, size: 64)
!156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 64, elements: !158)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!158 = !{!159}
!159 = !DISubrange(count: 2)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !130, file: !127, line: 68, baseType: !161, size: 32, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !164)
!163 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!164 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !165)
!165 = !{!166}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !164, file: !163, line: 232, baseType: !167, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !138)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !130, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !170)
!170 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !130, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!172 = !DIDerivedType(tag: DW_TAG_member, scope: !130, file: !127, line: 90, baseType: !173, size: 16, offset: 112)
!173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !130, file: !127, line: 90, size: 16, elements: !174)
!174 = !{!175, !182}
!175 = !DIDerivedType(tag: DW_TAG_member, scope: !173, file: !127, line: 91, baseType: !176, size: 16)
!176 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !173, file: !127, line: 91, size: 16, elements: !177)
!177 = !{!178, !181}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !176, file: !127, line: 96, baseType: !179, size: 8)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !180)
!180 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !176, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !173, file: !127, line: 100, baseType: !183, size: 16)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !184)
!184 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !130, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !130, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !130, file: !127, line: 131, baseType: !188, size: 192, offset: 192)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !189)
!189 = !{!190, !191, !197}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !188, file: !163, line: 245, baseType: !136, size: 64)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !188, file: !163, line: 246, baseType: !192, size: 32, offset: 64)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !193)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = !DISubroutineType(types: !195)
!195 = !{null, !196}
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !188, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !126, file: !127, line: 250, baseType: !199, size: 288, offset: 384)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !201)
!200 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !{!202, !203, !204, !205, !206, !207, !208, !209, !210}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !199, file: !200, line: 26, baseType: !113, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !199, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !199, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !199, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !199, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !199, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !199, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !199, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !199, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !126, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !126, file: !127, line: 256, baseType: !162, size: 64, offset: 704)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !126, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !126, file: !127, line: 300, baseType: !215, size: 96, offset: 800)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !216)
!216 = !{!217, !218, !219}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !215, file: !127, line: 153, baseType: !22, size: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !215, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !215, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !126, file: !127, line: 325, baseType: !221, size: 32, offset: 896)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !223)
!223 = !{!224, !233, !234}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !222, file: !122, line: 5074, baseType: !225, size: 96)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !227)
!226 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!227 = !{!228, !231, !232}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !225, file: !226, line: 57, baseType: !229, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 32)
!230 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !226, line: 57, flags: DIFlagFwdDecl)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !225, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !225, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !222, file: !122, line: 5075, baseType: !162, size: 64, offset: 96)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !222, file: !122, line: 5076, baseType: !235, size: 32, offset: 160)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !237)
!236 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!237 = !{!238}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !235, file: !236, line: 52, baseType: !22, size: 32)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !126, file: !127, line: 343, baseType: !240, size: 64, offset: 928)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !241)
!241 = !{!242, !243}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !240, file: !200, line: 63, baseType: !113, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !240, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !121, file: !122, line: 622, baseType: !245, size: 32, offset: 32)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !250)
!249 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!250 = !{!251}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !248, file: !249, line: 48, baseType: !103, size: 8)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !121, file: !122, line: 623, baseType: !32, size: 32, offset: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !121, file: !122, line: 624, baseType: !254, size: 32, offset: 96)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !247, line: 46, baseType: !255)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!256 = !DISubroutineType(types: !257)
!257 = !{null, !104, !104, !104}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !121, file: !122, line: 625, baseType: !104, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !121, file: !122, line: 626, baseType: !104, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !121, file: !122, line: 627, baseType: !104, size: 32, offset: 192)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !121, file: !122, line: 628, baseType: !105, size: 32, offset: 224)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !121, file: !122, line: 629, baseType: !113, size: 32, offset: 256)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !121, file: !122, line: 630, baseType: !116, size: 32, offset: 288)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !121, file: !122, line: 631, baseType: !265, size: 32, offset: 320)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 32)
!266 = !DISubroutineType(types: !267)
!267 = !{null}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !121, file: !122, line: 632, baseType: !269, size: 32, offset: 352)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!271 = !DIGlobalVariableExpression(var: !272, expr: !DIExpression())
!272 = distinct !DIGlobalVariable(name: "metairq_thread", scope: !27, file: !120, line: 28, type: !273, isLocal: false, isDefinition: true)
!273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !274)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !125)
!275 = !DIGlobalVariableExpression(var: !276, expr: !DIExpression())
!276 = distinct !DIGlobalVariable(name: "report_cookie", scope: !27, file: !120, line: 46, type: !277, isLocal: false, isDefinition: true, align: 32)
!277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !122, line: 2909, size: 128, elements: !278)
!278 = !{!279, !280, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !277, file: !122, line: 2910, baseType: !162, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !277, file: !122, line: 2911, baseType: !32, size: 32, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !277, file: !122, line: 2912, baseType: !32, size: 32, offset: 96)
!282 = !DIGlobalVariableExpression(var: !283, expr: !DIExpression())
!283 = distinct !DIGlobalVariable(name: "threads", scope: !27, file: !120, line: 22, type: !284, isLocal: true, isDefinition: true)
!284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 15872, elements: !313)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_rec", file: !120, line: 18, size: 3968, elements: !286)
!286 = !{!287, !288, !301}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !285, file: !120, line: 19, baseType: !126, size: 1024)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "msgq", scope: !285, file: !120, line: 20, baseType: !289, size: 352, offset: 1024)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !290)
!290 = !{!291, !292, !293, !294, !295, !296, !297, !298, !299, !300}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !289, file: !122, line: 4206, baseType: !162, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !289, file: !122, line: 4208, baseType: !235, size: 32, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !289, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !289, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !289, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !289, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !289, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !289, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !289, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !289, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "msgq_buf", scope: !285, file: !120, line: 21, baseType: !302, size: 2560, offset: 1376)
!302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 2560, elements: !311)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msg", file: !304, line: 44, size: 160, elements: !305)
!304 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/msgdev.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = !{!306, !307, !308, !309, !310}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !303, file: !304, line: 46, baseType: !113, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !303, file: !304, line: 49, baseType: !113, size: 32, offset: 32)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !303, file: !304, line: 52, baseType: !113, size: 32, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "proc_cyc", scope: !303, file: !304, line: 55, baseType: !113, size: 32, offset: 96)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_latency", scope: !303, file: !304, line: 58, baseType: !113, size: 32, offset: 128)
!311 = !{!312}
!312 = !DISubrange(count: 16)
!313 = !{!314}
!314 = !DISubrange(count: 4)
!315 = !DIGlobalVariableExpression(var: !316, expr: !DIExpression())
!316 = distinct !DIGlobalVariable(name: "thread_stacks", scope: !27, file: !120, line: 24, type: !317, isLocal: false, isDefinition: true, align: 512)
!317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 67584, elements: !318)
!318 = !{!314, !319}
!319 = !DISubrange(count: 2112)
!320 = !DIGlobalVariableExpression(var: !321, expr: !DIExpression())
!321 = distinct !DIGlobalVariable(name: "_k_thread_stack_metairq_thread", scope: !27, file: !120, line: 28, type: !322, isLocal: false, isDefinition: true, align: 512)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 16896, elements: !323)
!323 = !{!319}
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "_k_thread_obj_metairq_thread", scope: !27, file: !120, line: 28, type: !126, isLocal: false, isDefinition: true)
!326 = !DIGlobalVariableExpression(var: !327, expr: !DIExpression())
!327 = distinct !DIGlobalVariable(name: "stats", scope: !27, file: !120, line: 41, type: !328, isLocal: false, isDefinition: true)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !120, line: 34, size: 4000, elements: !329)
!329 = !{!330, !333, !337}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "num_mirq", scope: !328, file: !120, line: 35, baseType: !331, size: 32)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !332, line: 22, baseType: !106)
!332 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!333 = !DIDerivedType(tag: DW_TAG_member, name: "mirq_latencies", scope: !328, file: !120, line: 36, baseType: !334, size: 1280, offset: 32)
!334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1280, elements: !335)
!335 = !{!336}
!336 = !DISubrange(count: 40)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !328, file: !120, line: 40, baseType: !338, size: 2688, offset: 1312)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 2688, elements: !313)
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !328, file: !120, line: 37, size: 672, elements: !340)
!340 = !{!341, !342}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "nevt", scope: !339, file: !120, line: 38, baseType: !113, size: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "latencies", scope: !339, file: !120, line: 39, baseType: !343, size: 640, offset: 32)
!343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 640, elements: !344)
!344 = !{!345}
!345 = !DISubrange(count: 20)
!346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !349)
!348 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!349 = !{!350, !351}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !347, file: !348, line: 17, baseType: !269, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !347, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!352 = !DIGlobalVariableExpression(var: !353, expr: !DIExpression())
!353 = distinct !DIGlobalVariable(name: "hw_msgs", scope: !354, file: !360, line: 27, type: !398, isLocal: false, isDefinition: true, align: 32)
!354 = distinct !DICompileUnit(language: DW_LANG_C99, file: !355, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !356, globals: !357, splitDebugInlining: false, nameTableKind: None)
!355 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/metairq_dispatch/src/msgdev.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!356 = !{!107, !104, !105, !113, !114}
!357 = !{!352, !358, !385, !387, !389, !392}
!358 = !DIGlobalVariableExpression(var: !359, expr: !DIExpression())
!359 = distinct !DIGlobalVariable(name: "timeout", scope: !354, file: !360, line: 17, type: !361, isLocal: true, isDefinition: true)
!360 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/msgdev.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !362)
!362 = !{!363, !378, !384}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !361, file: !163, line: 245, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !365)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !366)
!366 = !{!367, !373}
!367 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !137, line: 38, baseType: !368, size: 32)
!368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !137, line: 38, size: 32, elements: !369)
!369 = !{!370, !372}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !368, file: !137, line: 39, baseType: !371, size: 32)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !368, file: !137, line: 40, baseType: !371, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, scope: !365, file: !137, line: 42, baseType: !374, size: 32, offset: 32)
!374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !365, file: !137, line: 42, size: 32, elements: !375)
!375 = !{!376, !377}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !374, file: !137, line: 43, baseType: !371, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !374, file: !137, line: 44, baseType: !371, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !361, file: !163, line: 246, baseType: !379, size: 32, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !380)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 32)
!381 = !DISubroutineType(types: !382)
!382 = !{null, !383}
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !361, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "max_duty_cyc", scope: !354, file: !360, line: 23, type: !113, isLocal: false, isDefinition: true)
!387 = !DIGlobalVariableExpression(var: !388, expr: !DIExpression())
!388 = distinct !DIGlobalVariable(name: "msg_seq", scope: !354, file: !360, line: 25, type: !113, isLocal: false, isDefinition: true)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "_k_fifo_buf_hw_msgs", scope: !354, file: !360, line: 27, type: !391, isLocal: true, isDefinition: true, align: 32)
!391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 320, elements: !335)
!392 = !DIGlobalVariableExpression(var: !393, expr: !DIExpression())
!393 = distinct !DIGlobalVariable(name: "state", scope: !394, file: !360, line: 38, type: !114, isLocal: true, isDefinition: true)
!394 = distinct !DISubprogram(name: "rand32", scope: !360, file: !360, line: 36, type: !395, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!395 = !DISubroutineType(types: !396)
!396 = !{!113}
!397 = !{}
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !399)
!399 = !{!400, !406, !410, !411, !412, !413, !414, !415, !416, !417}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !398, file: !122, line: 4206, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !403)
!403 = !{!404}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !402, file: !163, line: 232, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !365)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !398, file: !122, line: 4208, baseType: !407, size: 32, offset: 64)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !408)
!408 = !{!409}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !407, file: !236, line: 52, baseType: !22, size: 32)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !398, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !398, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !398, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !398, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !398, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !398, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !398, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !398, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!418 = !DIGlobalVariableExpression(var: !419, expr: !DIExpression())
!419 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !420, file: !434, line: 18, type: !435, isLocal: false, isDefinition: true)
!420 = distinct !DICompileUnit(language: DW_LANG_C99, file: !421, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !422, globals: !433, splitDebugInlining: false, nameTableKind: None)
!421 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!422 = !{!22, !104, !24, !423, !425, !427, !111, !105, !428, !429, !430, !431, !102, !432, !183, !269}
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 32)
!424 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 32)
!426 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 32)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!433 = !{!418}
!434 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !436)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !437)
!437 = !{!438, !439}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !436, file: !348, line: 17, baseType: !269, size: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !436, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!440 = !DIGlobalVariableExpression(var: !441, expr: !DIExpression())
!441 = distinct !DIGlobalVariable(name: "_char_out", scope: !442, file: !446, line: 54, type: !447, isLocal: false, isDefinition: true)
!442 = distinct !DICompileUnit(language: DW_LANG_C99, file: !443, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, globals: !445, splitDebugInlining: false, nameTableKind: None)
!443 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!444 = !{!104, !105}
!445 = !{!440}
!446 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!448 = !DISubroutineType(types: !449)
!449 = !{!105, !105}
!450 = !DIGlobalVariableExpression(var: !451, expr: !DIExpression())
!451 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !452, file: !469, line: 56, type: !470, isLocal: true, isDefinition: true, align: 32)
!452 = distinct !DICompileUnit(language: DW_LANG_C99, file: !453, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !454, globals: !468, splitDebugInlining: false, nameTableKind: None)
!453 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!454 = !{!455}
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !457, line: 259, baseType: !458)
!457 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f411xe.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 250, size: 224, elements: !459)
!459 = !{!460, !462, !463, !464, !465, !466, !467}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !458, file: !457, line: 252, baseType: !461, size: 32)
!461 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !113)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !458, file: !457, line: 253, baseType: !461, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !458, file: !457, line: 254, baseType: !461, size: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !458, file: !457, line: 255, baseType: !461, size: 32, offset: 96)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !458, file: !457, line: 256, baseType: !461, size: 32, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !458, file: !457, line: 257, baseType: !461, size: 32, offset: 160)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !458, file: !457, line: 258, baseType: !461, size: 32, offset: 192)
!468 = !{!450}
!469 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !473)
!472 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!473 = !{!474, !500}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !471, file: !472, line: 60, baseType: !475, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 32)
!476 = !DISubroutineType(types: !477)
!477 = !{!105, !478}
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !480)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !482)
!481 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!482 = !{!483, !484, !485, !486, !493, !494}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !480, file: !481, line: 380, baseType: !269, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !480, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !480, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !480, file: !481, line: 386, baseType: !487, size: 32, offset: 96)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 32)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !489)
!489 = !{!490, !491}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !488, file: !481, line: 359, baseType: !169, size: 8)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !488, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!492 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !480, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !480, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 32)
!496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !497)
!497 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !481, line: 43, baseType: !498)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !499)
!499 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !471, file: !472, line: 65, baseType: !478, size: 32, offset: 32)
!501 = !DIGlobalVariableExpression(var: !502, expr: !DIExpression())
!502 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !503, file: !506, line: 71, type: !507, isLocal: true, isDefinition: true, align: 32)
!503 = distinct !DICompileUnit(language: DW_LANG_C99, file: !504, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !505, splitDebugInlining: false, nameTableKind: None)
!504 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!505 = !{!501}
!506 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !508)
!508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !509)
!509 = !{!510, !529}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !508, file: !472, line: 60, baseType: !511, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!512 = !DISubroutineType(types: !513)
!513 = !{!105, !514}
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 32)
!515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !516)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !517)
!517 = !{!518, !519, !520, !521, !527, !528}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !516, file: !481, line: 380, baseType: !269, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !516, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !516, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !516, file: !481, line: 386, baseType: !522, size: 32, offset: 96)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 32)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !524)
!524 = !{!525, !526}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !523, file: !481, line: 359, baseType: !169, size: 8)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !523, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !516, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !516, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !508, file: !472, line: 65, baseType: !514, size: 32, offset: 32)
!530 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression())
!531 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !532, file: !539, line: 17, type: !667, isLocal: false, isDefinition: true)
!532 = distinct !DICompileUnit(language: DW_LANG_C99, file: !533, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !534, globals: !535, splitDebugInlining: false, nameTableKind: None)
!533 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!534 = !{!111, !105, !113, !104}
!535 = !{!530, !536, !663}
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !538, file: !539, line: 198, type: !649, isLocal: true, isDefinition: true)
!538 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !539, file: !539, line: 175, type: !540, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !644)
!539 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!540 = !DISubroutineType(types: !541)
!541 = !{null, !542}
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 32)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !544)
!544 = !{!545, !603, !615, !616, !617, !618, !624, !639}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !543, file: !127, line: 247, baseType: !546, size: 384)
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !547)
!547 = !{!548, !572, !579, !580, !581, !590, !591, !592}
!548 = !DIDerivedType(tag: DW_TAG_member, scope: !546, file: !127, line: 60, baseType: !549, size: 64)
!549 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !546, file: !127, line: 60, size: 64, elements: !550)
!550 = !{!551, !566}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !549, file: !127, line: 61, baseType: !552, size: 64)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !553)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !554)
!554 = !{!555, !561}
!555 = !DIDerivedType(tag: DW_TAG_member, scope: !553, file: !137, line: 38, baseType: !556, size: 32)
!556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !553, file: !137, line: 38, size: 32, elements: !557)
!557 = !{!558, !560}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !556, file: !137, line: 39, baseType: !559, size: 32)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 32)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !556, file: !137, line: 40, baseType: !559, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, scope: !553, file: !137, line: 42, baseType: !562, size: 32, offset: 32)
!562 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !553, file: !137, line: 42, size: 32, elements: !563)
!563 = !{!564, !565}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !562, file: !137, line: 43, baseType: !559, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !562, file: !137, line: 44, baseType: !559, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !549, file: !127, line: 62, baseType: !567, size: 64)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !568)
!568 = !{!569}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !567, file: !153, line: 50, baseType: !570, size: 64)
!570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, size: 64, elements: !158)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !546, file: !127, line: 68, baseType: !573, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 32)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !575)
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !576)
!576 = !{!577}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !575, file: !163, line: 232, baseType: !578, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !553)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !546, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !546, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!581 = !DIDerivedType(tag: DW_TAG_member, scope: !546, file: !127, line: 90, baseType: !582, size: 16, offset: 112)
!582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !546, file: !127, line: 90, size: 16, elements: !583)
!583 = !{!584, !589}
!584 = !DIDerivedType(tag: DW_TAG_member, scope: !582, file: !127, line: 91, baseType: !585, size: 16)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !582, file: !127, line: 91, size: 16, elements: !586)
!586 = !{!587, !588}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !585, file: !127, line: 96, baseType: !179, size: 8)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !585, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !582, file: !127, line: 100, baseType: !183, size: 16)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !546, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !546, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !546, file: !127, line: 131, baseType: !593, size: 192, offset: 192)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !594)
!594 = !{!595, !596, !602}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !593, file: !163, line: 245, baseType: !552, size: 64)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !593, file: !163, line: 246, baseType: !597, size: 32, offset: 64)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !598)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 32)
!599 = !DISubroutineType(types: !600)
!600 = !{null, !601}
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !593, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !543, file: !127, line: 250, baseType: !604, size: 288, offset: 384)
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611, !612, !613, !614}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !604, file: !200, line: 26, baseType: !113, size: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !604, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !604, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !604, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !604, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !604, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !604, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !604, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !604, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !543, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !543, file: !127, line: 256, baseType: !574, size: 64, offset: 704)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !543, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !543, file: !127, line: 300, baseType: !619, size: 96, offset: 800)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !620)
!620 = !{!621, !622, !623}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !619, file: !127, line: 153, baseType: !22, size: 32)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !619, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !619, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !543, file: !127, line: 325, baseType: !625, size: 32, offset: 896)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 32)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !627)
!627 = !{!628, !634, !635}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !626, file: !122, line: 5074, baseType: !629, size: 96)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !630)
!630 = !{!631, !632, !633}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !629, file: !226, line: 57, baseType: !229, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !629, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !629, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !626, file: !122, line: 5075, baseType: !574, size: 64, offset: 96)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !626, file: !122, line: 5076, baseType: !636, size: 32, offset: 160)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !637)
!637 = !{!638}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !636, file: !236, line: 52, baseType: !22, size: 32)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !543, file: !127, line: 343, baseType: !640, size: 64, offset: 928)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !641)
!641 = !{!642, !643}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !640, file: !200, line: 63, baseType: !113, size: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !640, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!644 = !{!645, !646, !647, !648}
!645 = !DILocalVariable(name: "thread", arg: 1, scope: !538, file: !539, line: 175, type: !542)
!646 = !DILocalVariable(name: "region_num", scope: !538, file: !539, line: 200, type: !169)
!647 = !DILocalVariable(name: "guard_start", scope: !538, file: !539, line: 265, type: !22)
!648 = !DILocalVariable(name: "guard_size", scope: !538, file: !539, line: 266, type: !111)
!649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !650, size: 96, elements: !661)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !651, line: 52, size: 96, elements: !652)
!651 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!652 = !{!653, !654, !655}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !650, file: !651, line: 53, baseType: !22, size: 32)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !650, file: !651, line: 54, baseType: !111, size: 32, offset: 32)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !650, file: !651, line: 55, baseType: !656, size: 32, offset: 64)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !657, line: 151, baseType: !658)
!657 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !657, line: 149, size: 32, elements: !659)
!659 = !{!660}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !658, file: !657, line: 150, baseType: !113, size: 32)
!661 = !{!662}
!662 = !DISubrange(count: 1)
!663 = !DIGlobalVariableExpression(var: !664, expr: !DIExpression())
!664 = distinct !DIGlobalVariable(name: "static_regions", scope: !532, file: !539, line: 62, type: !665, isLocal: true, isDefinition: true)
!665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !666, size: 96, elements: !661)
!666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !650)
!667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !668)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !669)
!669 = !{!670, !671}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !668, file: !348, line: 17, baseType: !269, size: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !668, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!672 = !DIGlobalVariableExpression(var: !673, expr: !DIExpression())
!673 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !674, file: !707, line: 39, type: !169, isLocal: true, isDefinition: true)
!674 = distinct !DICompileUnit(language: DW_LANG_C99, file: !675, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !676, globals: !706, splitDebugInlining: false, nameTableKind: None)
!675 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!676 = !{!677, !104, !105, !694, !169}
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !679, line: 1226, baseType: !680)
!679 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 1213, size: 352, elements: !681)
!681 = !{!682, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !680, file: !679, line: 1215, baseType: !683, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !461)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !680, file: !679, line: 1216, baseType: !461, size: 32, offset: 32)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !680, file: !679, line: 1217, baseType: !461, size: 32, offset: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !680, file: !679, line: 1218, baseType: !461, size: 32, offset: 96)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !680, file: !679, line: 1219, baseType: !461, size: 32, offset: 128)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !680, file: !679, line: 1220, baseType: !461, size: 32, offset: 160)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !680, file: !679, line: 1221, baseType: !461, size: 32, offset: 192)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !680, file: !679, line: 1222, baseType: !461, size: 32, offset: 224)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !680, file: !679, line: 1223, baseType: !461, size: 32, offset: 256)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !680, file: !679, line: 1224, baseType: !461, size: 32, offset: 288)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !680, file: !679, line: 1225, baseType: !461, size: 32, offset: 320)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 32)
!695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !696)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !697, line: 27, size: 96, elements: !698)
!697 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!698 = !{!699, !700, !701}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !696, file: !697, line: 29, baseType: !113, size: 32)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !696, file: !697, line: 31, baseType: !269, size: 32, offset: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !696, file: !697, line: 37, baseType: !702, size: 32, offset: 64)
!702 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !657, line: 146, baseType: !703)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !657, line: 141, size: 32, elements: !704)
!704 = !{!705}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !703, file: !657, line: 143, baseType: !113, size: 32)
!706 = !{!672}
!707 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!708 = !DIGlobalVariableExpression(var: !709, expr: !DIExpression())
!709 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !710, file: !717, line: 21, type: !447, isLocal: true, isDefinition: true)
!710 = distinct !DICompileUnit(language: DW_LANG_C99, file: !711, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !712, globals: !716, splitDebugInlining: false, nameTableKind: None)
!711 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!712 = !{!713, !105, !104}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 32)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !715, line: 22, baseType: !105)
!715 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!716 = !{!708}
!717 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!718 = !DIGlobalVariableExpression(var: !719, expr: !DIExpression())
!719 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !720, file: !725, line: 13, type: !742, isLocal: true, isDefinition: true)
!720 = distinct !DICompileUnit(language: DW_LANG_C99, file: !721, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !722, splitDebugInlining: false, nameTableKind: None)
!721 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!722 = !{!723, !718}
!723 = !DIGlobalVariableExpression(var: !724, expr: !DIExpression())
!724 = distinct !DIGlobalVariable(name: "mpu_config", scope: !720, file: !725, line: 37, type: !726, isLocal: false, isDefinition: true)
!725 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !727)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !697, line: 41, size: 64, elements: !728)
!728 = !{!729, !730}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !727, file: !697, line: 43, baseType: !113, size: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !727, file: !697, line: 45, baseType: !731, size: 32, offset: 32)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 32)
!732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !733)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !697, line: 27, size: 96, elements: !734)
!734 = !{!735, !736, !737}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !733, file: !697, line: 29, baseType: !113, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !733, file: !697, line: 31, baseType: !269, size: 32, offset: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !733, file: !697, line: 37, baseType: !738, size: 32, offset: 64)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !657, line: 146, baseType: !739)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !657, line: 141, size: 32, elements: !740)
!740 = !{!741}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !739, file: !657, line: 143, baseType: !113, size: 32)
!742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !732, size: 192, elements: !158)
!743 = !DIGlobalVariableExpression(var: !744, expr: !DIExpression())
!744 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !745, file: !829, line: 72, type: !910, isLocal: true, isDefinition: true)
!745 = distinct !DICompileUnit(language: DW_LANG_C99, file: !746, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !747, retainedTypes: !815, globals: !826, splitDebugInlining: false, nameTableKind: None)
!746 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!747 = !{!30, !748}
!748 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !457, line: 65, baseType: !105, size: 32, elements: !749)
!749 = !{!750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814}
!750 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!751 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!752 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!753 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!754 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!755 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!756 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!757 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!758 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!759 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!760 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!761 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!762 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!763 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!764 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!765 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!766 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!767 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!768 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!769 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!770 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!771 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!772 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!773 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!774 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!775 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!776 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!777 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!778 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!779 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!780 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!781 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!782 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!783 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!784 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!785 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!786 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!787 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!788 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!789 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!790 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!791 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!792 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!793 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!794 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!795 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!796 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!797 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!798 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!799 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!800 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!801 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!802 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!803 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!804 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!805 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!806 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!807 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!808 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!809 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!810 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!811 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!812 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!813 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!814 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!815 = !{!111, !105, !104, !816}
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !457, line: 244, baseType: !818)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 236, size: 192, elements: !819)
!819 = !{!820, !821, !822, !823, !824, !825}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !818, file: !457, line: 238, baseType: !461, size: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !818, file: !457, line: 239, baseType: !461, size: 32, offset: 32)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !818, file: !457, line: 240, baseType: !461, size: 32, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !818, file: !457, line: 241, baseType: !461, size: 32, offset: 96)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !818, file: !457, line: 242, baseType: !461, size: 32, offset: 128)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !818, file: !457, line: 243, baseType: !461, size: 32, offset: 160)
!826 = !{!827, !831, !847, !858, !875, !743, !877, !890, !892, !894, !896, !898, !900, !902, !904, !906, !908}
!827 = !DIGlobalVariableExpression(var: !828, expr: !DIExpression())
!828 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !745, file: !829, line: 424, type: !830, isLocal: false, isDefinition: true, align: 16)
!829 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 64, elements: !313)
!831 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression())
!832 = distinct !DIGlobalVariable(name: "__device_dts_ord_39", scope: !745, file: !829, line: 424, type: !833, isLocal: false, isDefinition: true, align: 32)
!833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !834)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !835)
!835 = !{!836, !837, !838, !839, !845, !846}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !834, file: !481, line: 380, baseType: !269, size: 32)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !834, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !834, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !834, file: !481, line: 386, baseType: !840, size: 32, offset: 96)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !842)
!842 = !{!843, !844}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !841, file: !481, line: 359, baseType: !169, size: 8)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !841, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !834, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !834, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!847 = !DIGlobalVariableExpression(var: !848, expr: !DIExpression())
!848 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_39", scope: !745, file: !829, line: 424, type: !849, isLocal: true, isDefinition: true, align: 32)
!849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !850)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !851)
!851 = !{!852, !857}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !850, file: !472, line: 60, baseType: !853, size: 32)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 32)
!854 = !DISubroutineType(types: !855)
!855 = !{!105, !856}
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 32)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !850, file: !472, line: 65, baseType: !856, size: 32, offset: 32)
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "exti_data", scope: !745, file: !829, line: 423, type: !860, isLocal: true, isDefinition: true)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !829, line: 107, size: 1472, elements: !861)
!861 = !{!862}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !860, file: !829, line: 109, baseType: !863, size: 1472)
!863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !864, size: 1472, elements: !873)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !829, line: 101, size: 64, elements: !865)
!865 = !{!866, !872}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !864, file: !829, line: 102, baseType: !867, size: 32)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !868, line: 63, baseType: !869)
!868 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 32)
!870 = !DISubroutineType(types: !871)
!871 = !{null, !105, !104}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !864, file: !829, line: 103, baseType: !104, size: 32, offset: 32)
!873 = !{!874}
!874 = !DISubrange(count: 23)
!875 = !DIGlobalVariableExpression(var: !876, expr: !DIExpression())
!876 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_39", scope: !745, file: !829, line: 424, type: !841, isLocal: true, isDefinition: true, align: 8)
!877 = !DIGlobalVariableExpression(var: !878, expr: !DIExpression())
!878 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !879, file: !829, line: 493, type: !884, isLocal: true, isDefinition: true, align: 32)
!879 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !829, file: !829, line: 460, type: !880, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !882)
!880 = !DISubroutineType(types: !881)
!881 = !{null, !856}
!882 = !{!883}
!883 = !DILocalVariable(name: "dev", arg: 1, scope: !879, file: !829, line: 460, type: !856)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !885)
!885 = !{!886, !887, !888, !889}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !884, file: !10, line: 55, baseType: !116, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !884, file: !10, line: 57, baseType: !116, size: 32, offset: 32)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !884, file: !10, line: 59, baseType: !104, size: 32, offset: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !884, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !879, file: !829, line: 497, type: !884, isLocal: true, isDefinition: true, align: 32)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !879, file: !829, line: 507, type: !884, isLocal: true, isDefinition: true, align: 32)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !879, file: !829, line: 512, type: !884, isLocal: true, isDefinition: true, align: 32)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !879, file: !829, line: 516, type: !884, isLocal: true, isDefinition: true, align: 32)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !879, file: !829, line: 523, type: !884, isLocal: true, isDefinition: true, align: 32)
!900 = !DIGlobalVariableExpression(var: !901, expr: !DIExpression())
!901 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !879, file: !829, line: 527, type: !884, isLocal: true, isDefinition: true, align: 32)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !879, file: !829, line: 581, type: !884, isLocal: true, isDefinition: true, align: 32)
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !879, file: !829, line: 586, type: !884, isLocal: true, isDefinition: true, align: 32)
!906 = !DIGlobalVariableExpression(var: !907, expr: !DIExpression())
!907 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !879, file: !829, line: 591, type: !884, isLocal: true, isDefinition: true, align: 32)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !879, file: !829, line: 595, type: !884, isLocal: true, isDefinition: true, align: 32)
!910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !911, size: 736, elements: !873)
!911 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !912)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !457, line: 134, baseType: !748)
!913 = !DIGlobalVariableExpression(var: !914, expr: !DIExpression())
!914 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_39", scope: !915, file: !920, line: 22, type: !942, isLocal: false, isDefinition: true, align: 16)
!915 = distinct !DICompileUnit(language: DW_LANG_C99, file: !916, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !917, splitDebugInlining: false, nameTableKind: None)
!916 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!917 = !{!918, !913, !924, !926, !928, !930, !932, !934, !936, !938, !940}
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !915, file: !920, line: 17, type: !921, isLocal: false, isDefinition: true, align: 16)
!920 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 192, elements: !922)
!922 = !{!923}
!923 = !DISubrange(count: 12)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !915, file: !920, line: 29, type: !830, isLocal: false, isDefinition: true, align: 16)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !915, file: !920, line: 36, type: !830, isLocal: false, isDefinition: true, align: 16)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !915, file: !920, line: 43, type: !830, isLocal: false, isDefinition: true, align: 16)
!930 = !DIGlobalVariableExpression(var: !931, expr: !DIExpression())
!931 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !915, file: !920, line: 50, type: !830, isLocal: false, isDefinition: true, align: 16)
!932 = !DIGlobalVariableExpression(var: !933, expr: !DIExpression())
!933 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !915, file: !920, line: 57, type: !830, isLocal: false, isDefinition: true, align: 16)
!934 = !DIGlobalVariableExpression(var: !935, expr: !DIExpression())
!935 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !915, file: !920, line: 64, type: !830, isLocal: false, isDefinition: true, align: 16)
!936 = !DIGlobalVariableExpression(var: !937, expr: !DIExpression())
!937 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !915, file: !920, line: 71, type: !830, isLocal: false, isDefinition: true, align: 16)
!938 = !DIGlobalVariableExpression(var: !939, expr: !DIExpression())
!939 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !915, file: !920, line: 78, type: !830, isLocal: false, isDefinition: true, align: 16)
!940 = !DIGlobalVariableExpression(var: !941, expr: !DIExpression())
!941 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !915, file: !920, line: 85, type: !830, isLocal: false, isDefinition: true, align: 16)
!942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 48, elements: !943)
!943 = !{!944}
!944 = !DISubrange(count: 3)
!945 = !DIGlobalVariableExpression(var: !946, expr: !DIExpression())
!946 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !947, file: !1011, line: 398, type: !1044, isLocal: true, isDefinition: true)
!947 = distinct !DICompileUnit(language: DW_LANG_C99, file: !948, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !949, retainedTypes: !962, globals: !1008, splitDebugInlining: false, nameTableKind: None)
!948 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!949 = !{!950, !30, !955}
!950 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !951, line: 197, baseType: !32, size: 32, elements: !952)
!951 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!952 = !{!953, !954}
!953 = !DIEnumerator(name: "SUCCESS", value: 0)
!954 = !DIEnumerator(name: "ERROR", value: 1)
!955 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !956, line: 44, baseType: !32, size: 32, elements: !957)
!956 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!957 = !{!958, !959, !960, !961}
!958 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!959 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!960 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!961 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!962 = !{!104, !105, !113, !963, !1001, !1007}
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 370, baseType: !965)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 336, size: 1152, elements: !966)
!966 = !{!967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !1000}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !965, file: !457, line: 338, baseType: !461, size: 32)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !965, file: !457, line: 339, baseType: !461, size: 32, offset: 32)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !965, file: !457, line: 340, baseType: !461, size: 32, offset: 64)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !965, file: !457, line: 341, baseType: !461, size: 32, offset: 96)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !965, file: !457, line: 342, baseType: !461, size: 32, offset: 128)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !965, file: !457, line: 343, baseType: !461, size: 32, offset: 160)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !965, file: !457, line: 344, baseType: !461, size: 32, offset: 192)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !965, file: !457, line: 345, baseType: !113, size: 32, offset: 224)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !965, file: !457, line: 346, baseType: !461, size: 32, offset: 256)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !965, file: !457, line: 347, baseType: !461, size: 32, offset: 288)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !965, file: !457, line: 348, baseType: !978, size: 64, offset: 320)
!978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 64, elements: !158)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !965, file: !457, line: 349, baseType: !461, size: 32, offset: 384)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !965, file: !457, line: 350, baseType: !461, size: 32, offset: 416)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !965, file: !457, line: 351, baseType: !461, size: 32, offset: 448)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !965, file: !457, line: 352, baseType: !113, size: 32, offset: 480)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !965, file: !457, line: 353, baseType: !461, size: 32, offset: 512)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !965, file: !457, line: 354, baseType: !461, size: 32, offset: 544)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !965, file: !457, line: 355, baseType: !978, size: 64, offset: 576)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !965, file: !457, line: 356, baseType: !461, size: 32, offset: 640)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !965, file: !457, line: 357, baseType: !461, size: 32, offset: 672)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !965, file: !457, line: 358, baseType: !461, size: 32, offset: 704)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !965, file: !457, line: 359, baseType: !113, size: 32, offset: 736)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !965, file: !457, line: 360, baseType: !461, size: 32, offset: 768)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !965, file: !457, line: 361, baseType: !461, size: 32, offset: 800)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !965, file: !457, line: 362, baseType: !978, size: 64, offset: 832)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !965, file: !457, line: 363, baseType: !461, size: 32, offset: 896)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !965, file: !457, line: 364, baseType: !461, size: 32, offset: 928)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !965, file: !457, line: 365, baseType: !978, size: 64, offset: 960)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !965, file: !457, line: 366, baseType: !461, size: 32, offset: 1024)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !965, file: !457, line: 367, baseType: !461, size: 32, offset: 1056)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !965, file: !457, line: 368, baseType: !999, size: 32, offset: 1088)
!999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 32, elements: !661)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !965, file: !457, line: 369, baseType: !461, size: 32, offset: 1120)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 32)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1003, line: 343, size: 64, elements: !1004)
!1003 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1004 = !{!1005, !1006}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1002, file: !1003, line: 344, baseType: !113, size: 32)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1002, file: !1003, line: 345, baseType: !113, size: 32, offset: 32)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!1008 = !{!1009, !1015, !1031, !1042, !945}
!1009 = !DIGlobalVariableExpression(var: !1010, expr: !DIExpression())
!1010 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !947, file: !1011, line: 752, type: !1012, isLocal: false, isDefinition: true, align: 16)
!1011 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 704, elements: !1013)
!1013 = !{!1014}
!1014 = !DISubrange(count: 44)
!1015 = !DIGlobalVariableExpression(var: !1016, expr: !DIExpression())
!1016 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !947, file: !1011, line: 752, type: !1017, isLocal: false, isDefinition: true, align: 32)
!1017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1018)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1019)
!1019 = !{!1020, !1021, !1022, !1023, !1029, !1030}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1018, file: !481, line: 380, baseType: !269, size: 32)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1018, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1018, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1018, file: !481, line: 386, baseType: !1024, size: 32, offset: 96)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 32)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1026)
!1026 = !{!1027, !1028}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1025, file: !481, line: 359, baseType: !169, size: 8)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1025, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1018, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1018, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1031 = !DIGlobalVariableExpression(var: !1032, expr: !DIExpression())
!1032 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !947, file: !1011, line: 752, type: !1033, isLocal: true, isDefinition: true, align: 32)
!1033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1034)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1035)
!1035 = !{!1036, !1041}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1034, file: !472, line: 60, baseType: !1037, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!105, !1040}
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1034, file: !472, line: 65, baseType: !1040, size: 32, offset: 32)
!1042 = !DIGlobalVariableExpression(var: !1043, expr: !DIExpression())
!1043 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !947, file: !1011, line: 752, type: !1025, isLocal: true, isDefinition: true, align: 8)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !956, line: 100, size: 224, elements: !1045)
!1045 = !{!1046, !1052, !1053, !1062, !1067, !1072, !1078}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1044, file: !956, line: 101, baseType: !1047, size: 32)
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !956, line: 76, baseType: !1048)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!105, !1040, !1051}
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !956, line: 56, baseType: !104)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1044, file: !956, line: 102, baseType: !1047, size: 32, offset: 32)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1044, file: !956, line: 103, baseType: !1054, size: 32, offset: 64)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !956, line: 83, baseType: !1055)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 32)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!105, !1040, !1051, !1058, !104}
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !956, line: 72, baseType: !1059)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 32)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{null, !1040, !1051, !104}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1044, file: !956, line: 104, baseType: !1063, size: 32, offset: 96)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !956, line: 79, baseType: !1064)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!105, !1040, !1051, !1007}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1044, file: !956, line: 105, baseType: !1068, size: 32, offset: 128)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !956, line: 88, baseType: !1069)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!955, !1040, !1051}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1044, file: !956, line: 106, baseType: !1073, size: 32, offset: 160)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !956, line: 92, baseType: !1074)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 32)
!1075 = !DISubroutineType(types: !1076)
!1076 = !{!105, !1040, !1051, !1077}
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !956, line: 64, baseType: !104)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1044, file: !956, line: 107, baseType: !1079, size: 32, offset: 192)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !956, line: 96, baseType: !1080)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 32)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{!105, !1040, !1051, !104}
!1083 = !DIGlobalVariableExpression(var: !1084, expr: !DIExpression())
!1084 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1085, file: !1142, line: 603, type: !1144, isLocal: true, isDefinition: true, align: 32)
!1085 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1086, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1087, globals: !1139, splitDebugInlining: false, nameTableKind: None)
!1086 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!1087 = !{!104, !105, !1088}
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 32)
!1089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1090)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1091, line: 336, size: 160, elements: !1092)
!1091 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1092 = !{!1093, !1113, !1117, !1121, !1134}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1090, file: !1091, line: 365, baseType: !1094, size: 32)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!105, !1097, !1112}
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1099)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1100)
!1100 = !{!1101, !1102, !1103, !1104, !1110, !1111}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1099, file: !481, line: 380, baseType: !269, size: 32)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1099, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1099, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1099, file: !481, line: 386, baseType: !1105, size: 32, offset: 96)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 32)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1107)
!1107 = !{!1108, !1109}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1106, file: !481, line: 359, baseType: !169, size: 8)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1106, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1099, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1099, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1090, file: !1091, line: 366, baseType: !1114, size: 32, offset: 32)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{null, !1097, !170}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1090, file: !1091, line: 374, baseType: !1118, size: 32, offset: 64)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!105, !1097}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1090, file: !1091, line: 377, baseType: !1122, size: 32, offset: 96)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 32)
!1123 = !DISubroutineType(types: !1124)
!1124 = !{!105, !1097, !1125}
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1127)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1091, line: 122, size: 64, elements: !1128)
!1128 = !{!1129, !1130, !1131, !1132, !1133}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1127, file: !1091, line: 123, baseType: !113, size: 32)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1127, file: !1091, line: 124, baseType: !169, size: 8, offset: 32)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1127, file: !1091, line: 125, baseType: !169, size: 8, offset: 40)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1127, file: !1091, line: 126, baseType: !169, size: 8, offset: 48)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1127, file: !1091, line: 127, baseType: !169, size: 8, offset: 56)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1090, file: !1091, line: 379, baseType: !1135, size: 32, offset: 128)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!105, !1097, !1138}
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 32)
!1139 = !{!1083, !1140}
!1140 = !DIGlobalVariableExpression(var: !1141, expr: !DIExpression())
!1141 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1085, file: !1142, line: 38, type: !1143, isLocal: true, isDefinition: true)
!1142 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1097)
!1144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1145)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1146)
!1146 = !{!1147, !1148}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1145, file: !472, line: 60, baseType: !1118, size: 32)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1145, file: !472, line: 65, baseType: !1097, size: 32, offset: 32)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1151, file: !1320, line: 762, type: !1429, isLocal: true, isDefinition: true)
!1151 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1152, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1153, retainedTypes: !1171, globals: !1317, splitDebugInlining: false, nameTableKind: None)
!1152 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!1153 = !{!30, !1154, !1160, !1165, !955}
!1154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1155, line: 506, baseType: !32, size: 32, elements: !1156)
!1155 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1156 = !{!1157, !1158, !1159}
!1157 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1158 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1159 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1155, line: 512, baseType: !32, size: 32, elements: !1161)
!1161 = !{!1162, !1163, !1164}
!1162 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1163 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1164 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !868, line: 43, baseType: !32, size: 32, elements: !1166)
!1166 = !{!1167, !1168, !1169, !1170}
!1167 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1168 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1169 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1170 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1171 = !{!104, !105, !1172, !1242, !1247, !1207, !1160, !1154, !1252, !1253, !113, !1267, !1222, !102, !1277, !1278}
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 32)
!1173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1174)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1155, line: 523, size: 288, elements: !1175)
!1175 = !{!1176, !1197, !1203, !1208, !1212, !1213, !1214, !1218, !1238}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1174, file: !1155, line: 524, baseType: !1177, size: 32)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 32)
!1178 = !DISubroutineType(types: !1179)
!1179 = !{!105, !1180, !1195, !1196}
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 32)
!1181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1182)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1183)
!1183 = !{!1184, !1185, !1186, !1187, !1193, !1194}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1182, file: !481, line: 380, baseType: !269, size: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1182, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1182, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1182, file: !481, line: 386, baseType: !1188, size: 32, offset: 96)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1190)
!1190 = !{!1191, !1192}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1189, file: !481, line: 359, baseType: !169, size: 8)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1189, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1182, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1182, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1195 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1155, line: 237, baseType: !169)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1155, line: 257, baseType: !113)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1174, file: !1155, line: 530, baseType: !1198, size: 32, offset: 32)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 32)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!105, !1180, !1201}
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1155, line: 229, baseType: !113)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1174, file: !1155, line: 532, baseType: !1204, size: 32, offset: 64)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 32)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!105, !1180, !1207, !1202}
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1155, line: 216, baseType: !113)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1174, file: !1155, line: 535, baseType: !1209, size: 32, offset: 96)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!105, !1180, !1207}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1174, file: !1155, line: 537, baseType: !1209, size: 32, offset: 128)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1174, file: !1155, line: 539, baseType: !1209, size: 32, offset: 160)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1174, file: !1155, line: 541, baseType: !1215, size: 32, offset: 192)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 32)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{!105, !1180, !1195, !1154, !1160}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1174, file: !1155, line: 544, baseType: !1219, size: 32, offset: 224)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 32)
!1220 = !DISubroutineType(types: !1221)
!1221 = !{!105, !1180, !1222, !492}
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1155, line: 478, size: 96, elements: !1224)
!1224 = !{!1225, !1232, !1237}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1223, file: !1155, line: 482, baseType: !1226, size: 32)
!1226 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1227, line: 33, baseType: !1228)
!1227 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1227, line: 29, size: 32, elements: !1229)
!1229 = !{!1230}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1228, file: !1227, line: 30, baseType: !1231, size: 32)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1223, file: !1155, line: 485, baseType: !1233, size: 32, offset: 32)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1155, line: 464, baseType: !1234)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{null, !1180, !1222, !1207}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1223, file: !1155, line: 493, baseType: !1207, size: 32, offset: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1174, file: !1155, line: 547, baseType: !1239, size: 32, offset: 256)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 32)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!113, !1180}
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 32)
!1243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1244)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1155, line: 428, size: 32, elements: !1245)
!1245 = !{!1246}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1244, file: !1155, line: 434, baseType: !1207, size: 32)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1249)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1155, line: 441, size: 32, elements: !1250)
!1250 = !{!1251}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1249, file: !1155, line: 447, baseType: !1207, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 32)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !457, line: 276, baseType: !1255)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 265, size: 320, elements: !1256)
!1256 = !{!1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1255, file: !457, line: 267, baseType: !461, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1255, file: !457, line: 268, baseType: !461, size: 32, offset: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1255, file: !457, line: 269, baseType: !461, size: 32, offset: 64)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1255, file: !457, line: 270, baseType: !461, size: 32, offset: 96)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1255, file: !457, line: 271, baseType: !461, size: 32, offset: 128)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1255, file: !457, line: 272, baseType: !461, size: 32, offset: 160)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1255, file: !457, line: 273, baseType: !461, size: 32, offset: 192)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1255, file: !457, line: 274, baseType: !461, size: 32, offset: 224)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1255, file: !457, line: 275, baseType: !1266, size: 64, offset: 256)
!1266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, size: 64, elements: !158)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !457, line: 289, baseType: !1269)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 282, size: 288, elements: !1270)
!1270 = !{!1271, !1272, !1273, !1275, !1276}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1269, file: !457, line: 284, baseType: !461, size: 32)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1269, file: !457, line: 285, baseType: !461, size: 32, offset: 32)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1269, file: !457, line: 286, baseType: !1274, size: 128, offset: 64)
!1274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, size: 128, elements: !313)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1269, file: !457, line: 287, baseType: !978, size: 64, offset: 192)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1269, file: !457, line: 288, baseType: !461, size: 32, offset: 256)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 32)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 32)
!1279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1280)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !956, line: 100, size: 224, elements: !1281)
!1281 = !{!1282, !1287, !1288, !1297, !1302, !1307, !1312}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1280, file: !956, line: 101, baseType: !1283, size: 32)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !956, line: 76, baseType: !1284)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 32)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{!105, !1180, !1051}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1280, file: !956, line: 102, baseType: !1283, size: 32, offset: 32)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1280, file: !956, line: 103, baseType: !1289, size: 32, offset: 64)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !956, line: 83, baseType: !1290)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 32)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{!105, !1180, !1051, !1293, !104}
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !956, line: 72, baseType: !1294)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 32)
!1295 = !DISubroutineType(types: !1296)
!1296 = !{null, !1180, !1051, !104}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1280, file: !956, line: 104, baseType: !1298, size: 32, offset: 96)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !956, line: 79, baseType: !1299)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 32)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!105, !1180, !1051, !1007}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1280, file: !956, line: 105, baseType: !1303, size: 32, offset: 128)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !956, line: 88, baseType: !1304)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 32)
!1305 = !DISubroutineType(types: !1306)
!1306 = !{!955, !1180, !1051}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1280, file: !956, line: 106, baseType: !1308, size: 32, offset: 160)
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !956, line: 92, baseType: !1309)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 32)
!1310 = !DISubroutineType(types: !1311)
!1311 = !{!105, !1180, !1051, !1077}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1280, file: !956, line: 107, baseType: !1313, size: 32, offset: 192)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !956, line: 96, baseType: !1314)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 32)
!1315 = !DISubroutineType(types: !1316)
!1316 = !{!105, !1180, !1051, !104}
!1317 = !{!1318, !1324, !1326, !1336, !1341, !1343, !1345, !1347, !1349, !1351, !1353, !1355, !1357, !1359, !1361, !1363, !1365, !1367, !1369, !1371, !1373, !1375, !1377, !1379, !1381, !1395, !1397, !1399, !1401, !1403, !1405, !1407, !1409, !1411, !1413, !1415, !1417, !1419, !1421, !1423, !1149, !1425, !1427, !1440, !1442, !1444, !1446, !1448, !1450}
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_67", scope: !1151, file: !1320, line: 762, type: !1321, isLocal: false, isDefinition: true, align: 16)
!1320 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 80, elements: !1322)
!1322 = !{!1323}
!1323 = !DISubrange(count: 5)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "__device_dts_ord_67", scope: !1151, file: !1320, line: 762, type: !1181, isLocal: false, isDefinition: true, align: 32)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_67", scope: !1151, file: !1320, line: 762, type: !1328, isLocal: true, isDefinition: true, align: 32)
!1328 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1329)
!1329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1330)
!1330 = !{!1331, !1335}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1329, file: !472, line: 60, baseType: !1332, size: 32)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 32)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{!105, !1180}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1329, file: !472, line: 65, baseType: !1180, size: 32, offset: 32)
!1336 = !DIGlobalVariableExpression(var: !1337, expr: !DIExpression())
!1337 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1151, file: !1320, line: 766, type: !1338, isLocal: false, isDefinition: true, align: 16)
!1338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 160, elements: !1339)
!1339 = !{!1340}
!1340 = !DISubrange(count: 10)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1151, file: !1320, line: 766, type: !1181, isLocal: false, isDefinition: true, align: 32)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1151, file: !1320, line: 766, type: !1328, isLocal: true, isDefinition: true, align: 32)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_68", scope: !1151, file: !1320, line: 770, type: !1321, isLocal: false, isDefinition: true, align: 16)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "__device_dts_ord_68", scope: !1151, file: !1320, line: 770, type: !1181, isLocal: false, isDefinition: true, align: 32)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_68", scope: !1151, file: !1320, line: 770, type: !1328, isLocal: true, isDefinition: true, align: 32)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_69", scope: !1151, file: !1320, line: 774, type: !1321, isLocal: false, isDefinition: true, align: 16)
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "__device_dts_ord_69", scope: !1151, file: !1320, line: 774, type: !1181, isLocal: false, isDefinition: true, align: 32)
!1355 = !DIGlobalVariableExpression(var: !1356, expr: !DIExpression())
!1356 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_69", scope: !1151, file: !1320, line: 774, type: !1328, isLocal: true, isDefinition: true, align: 32)
!1357 = !DIGlobalVariableExpression(var: !1358, expr: !DIExpression())
!1358 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_70", scope: !1151, file: !1320, line: 778, type: !1321, isLocal: false, isDefinition: true, align: 16)
!1359 = !DIGlobalVariableExpression(var: !1360, expr: !DIExpression())
!1360 = distinct !DIGlobalVariable(name: "__device_dts_ord_70", scope: !1151, file: !1320, line: 778, type: !1181, isLocal: false, isDefinition: true, align: 32)
!1361 = !DIGlobalVariableExpression(var: !1362, expr: !DIExpression())
!1362 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_70", scope: !1151, file: !1320, line: 778, type: !1328, isLocal: true, isDefinition: true, align: 32)
!1363 = !DIGlobalVariableExpression(var: !1364, expr: !DIExpression())
!1364 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_71", scope: !1151, file: !1320, line: 782, type: !1321, isLocal: false, isDefinition: true, align: 16)
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "__device_dts_ord_71", scope: !1151, file: !1320, line: 782, type: !1181, isLocal: false, isDefinition: true, align: 32)
!1367 = !DIGlobalVariableExpression(var: !1368, expr: !DIExpression())
!1368 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_71", scope: !1151, file: !1320, line: 782, type: !1328, isLocal: true, isDefinition: true, align: 32)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_72", scope: !1151, file: !1320, line: 786, type: !1321, isLocal: false, isDefinition: true, align: 16)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__device_dts_ord_72", scope: !1151, file: !1320, line: 786, type: !1181, isLocal: false, isDefinition: true, align: 32)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_72", scope: !1151, file: !1320, line: 786, type: !1328, isLocal: true, isDefinition: true, align: 32)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_73", scope: !1151, file: !1320, line: 790, type: !1321, isLocal: false, isDefinition: true, align: 16)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "__device_dts_ord_73", scope: !1151, file: !1320, line: 790, type: !1181, isLocal: false, isDefinition: true, align: 32)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_73", scope: !1151, file: !1320, line: 790, type: !1328, isLocal: true, isDefinition: true, align: 32)
!1381 = !DIGlobalVariableExpression(var: !1382, expr: !DIExpression())
!1382 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1151, file: !1320, line: 762, type: !1383, isLocal: true, isDefinition: true)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1384, line: 237, size: 128, elements: !1385)
!1384 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1385 = !{!1386, !1387, !1388}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1383, file: !1384, line: 239, baseType: !1249, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1383, file: !1384, line: 241, baseType: !1180, size: 32, offset: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1383, file: !1384, line: 243, baseType: !1389, size: 64, offset: 64)
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1227, line: 40, baseType: !1390)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1227, line: 35, size: 64, elements: !1391)
!1391 = !{!1392, !1394}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1390, file: !1227, line: 36, baseType: !1393, size: 32)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1390, file: !1227, line: 37, baseType: !1393, size: 32, offset: 32)
!1395 = !DIGlobalVariableExpression(var: !1396, expr: !DIExpression())
!1396 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_67", scope: !1151, file: !1320, line: 762, type: !1189, isLocal: true, isDefinition: true, align: 8)
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1151, file: !1320, line: 766, type: !1383, isLocal: true, isDefinition: true)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1151, file: !1320, line: 766, type: !1189, isLocal: true, isDefinition: true, align: 8)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1151, file: !1320, line: 770, type: !1383, isLocal: true, isDefinition: true)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_68", scope: !1151, file: !1320, line: 770, type: !1189, isLocal: true, isDefinition: true, align: 8)
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1151, file: !1320, line: 774, type: !1383, isLocal: true, isDefinition: true)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_69", scope: !1151, file: !1320, line: 774, type: !1189, isLocal: true, isDefinition: true, align: 8)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1151, file: !1320, line: 778, type: !1383, isLocal: true, isDefinition: true)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_70", scope: !1151, file: !1320, line: 778, type: !1189, isLocal: true, isDefinition: true, align: 8)
!1413 = !DIGlobalVariableExpression(var: !1414, expr: !DIExpression())
!1414 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1151, file: !1320, line: 782, type: !1383, isLocal: true, isDefinition: true)
!1415 = !DIGlobalVariableExpression(var: !1416, expr: !DIExpression())
!1416 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_71", scope: !1151, file: !1320, line: 782, type: !1189, isLocal: true, isDefinition: true, align: 8)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1151, file: !1320, line: 786, type: !1383, isLocal: true, isDefinition: true)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_72", scope: !1151, file: !1320, line: 786, type: !1189, isLocal: true, isDefinition: true, align: 8)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1151, file: !1320, line: 790, type: !1383, isLocal: true, isDefinition: true)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_73", scope: !1151, file: !1320, line: 790, type: !1189, isLocal: true, isDefinition: true, align: 8)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1151, file: !1320, line: 656, type: !1173, isLocal: true, isDefinition: true)
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1151, file: !1320, line: 766, type: !1429, isLocal: true, isDefinition: true)
!1429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1430)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1384, line: 224, size: 160, elements: !1431)
!1431 = !{!1432, !1433, !1434, !1435}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1430, file: !1384, line: 226, baseType: !1244, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1430, file: !1384, line: 228, baseType: !1007, size: 32, offset: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1430, file: !1384, line: 230, baseType: !105, size: 32, offset: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1430, file: !1384, line: 231, baseType: !1436, size: 64, offset: 96)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1003, line: 343, size: 64, elements: !1437)
!1437 = !{!1438, !1439}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1436, file: !1003, line: 344, baseType: !113, size: 32)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1436, file: !1003, line: 345, baseType: !113, size: 32, offset: 32)
!1440 = !DIGlobalVariableExpression(var: !1441, expr: !DIExpression())
!1441 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1151, file: !1320, line: 770, type: !1429, isLocal: true, isDefinition: true)
!1442 = !DIGlobalVariableExpression(var: !1443, expr: !DIExpression())
!1443 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1151, file: !1320, line: 774, type: !1429, isLocal: true, isDefinition: true)
!1444 = !DIGlobalVariableExpression(var: !1445, expr: !DIExpression())
!1445 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1151, file: !1320, line: 778, type: !1429, isLocal: true, isDefinition: true)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1151, file: !1320, line: 782, type: !1429, isLocal: true, isDefinition: true)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1151, file: !1320, line: 786, type: !1429, isLocal: true, isDefinition: true)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1151, file: !1320, line: 790, type: !1429, isLocal: true, isDefinition: true)
!1452 = !DIGlobalVariableExpression(var: !1453, expr: !DIExpression())
!1453 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1454, file: !1593, line: 44, type: !1671, isLocal: false, isDefinition: true)
!1454 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1455, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1456, retainedTypes: !1489, globals: !1590, splitDebugInlining: false, nameTableKind: None)
!1455 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!1456 = !{!30, !1457, !1464, !1471, !1478, !1484, !955}
!1457 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1091, line: 47, baseType: !32, size: 32, elements: !1458)
!1458 = !{!1459, !1460, !1461, !1462, !1463}
!1459 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1460 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1461 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1462 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1463 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1464 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1091, line: 75, baseType: !32, size: 32, elements: !1465)
!1465 = !{!1466, !1467, !1468, !1469, !1470}
!1466 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1467 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1468 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1469 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1470 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1471 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1091, line: 92, baseType: !32, size: 32, elements: !1472)
!1472 = !{!1473, !1474, !1475, !1476, !1477}
!1473 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1474 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1475 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1476 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1477 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1478 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1091, line: 84, baseType: !32, size: 32, elements: !1479)
!1479 = !{!1480, !1481, !1482, !1483}
!1480 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1481 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1482 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1483 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1484 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1091, line: 107, baseType: !32, size: 32, elements: !1485)
!1485 = !{!1486, !1487, !1488}
!1486 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1487 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1488 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1489 = !{!104, !105, !1490, !170, !169, !1539, !113, !1051, !1550, !183, !114, !1589}
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 32)
!1491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1492)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1091, line: 336, size: 160, elements: !1493)
!1493 = !{!1494, !1513, !1517, !1521, !1534}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1492, file: !1091, line: 365, baseType: !1495, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{!105, !1498, !1112}
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1500)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1501)
!1501 = !{!1502, !1503, !1504, !1505, !1511, !1512}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1500, file: !481, line: 380, baseType: !269, size: 32)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1500, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1500, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1500, file: !481, line: 386, baseType: !1506, size: 32, offset: 96)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 32)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1508)
!1508 = !{!1509, !1510}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1507, file: !481, line: 359, baseType: !169, size: 8)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1507, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1500, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1500, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1492, file: !1091, line: 366, baseType: !1514, size: 32, offset: 32)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 32)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{null, !1498, !170}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1492, file: !1091, line: 374, baseType: !1518, size: 32, offset: 64)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!105, !1498}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1492, file: !1091, line: 377, baseType: !1522, size: 32, offset: 96)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 32)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{!105, !1498, !1525}
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1527)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1091, line: 122, size: 64, elements: !1528)
!1528 = !{!1529, !1530, !1531, !1532, !1533}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1527, file: !1091, line: 123, baseType: !113, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1527, file: !1091, line: 124, baseType: !169, size: 8, offset: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1527, file: !1091, line: 125, baseType: !169, size: 8, offset: 40)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1527, file: !1091, line: 126, baseType: !169, size: 8, offset: 48)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1527, file: !1091, line: 127, baseType: !169, size: 8, offset: 56)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1492, file: !1091, line: 379, baseType: !1535, size: 32, offset: 128)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 32)
!1536 = !DISubroutineType(types: !1537)
!1537 = !{!105, !1498, !1538}
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 32)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !457, line: 508, baseType: !1541)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 499, size: 224, elements: !1542)
!1542 = !{!1543, !1544, !1545, !1546, !1547, !1548, !1549}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1541, file: !457, line: 501, baseType: !461, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1541, file: !457, line: 502, baseType: !461, size: 32, offset: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1541, file: !457, line: 503, baseType: !461, size: 32, offset: 64)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1541, file: !457, line: 504, baseType: !461, size: 32, offset: 96)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1541, file: !457, line: 505, baseType: !461, size: 32, offset: 128)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1541, file: !457, line: 506, baseType: !461, size: 32, offset: 160)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1541, file: !457, line: 507, baseType: !461, size: 32, offset: 192)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1552)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !956, line: 100, size: 224, elements: !1553)
!1553 = !{!1554, !1559, !1560, !1569, !1574, !1579, !1584}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1552, file: !956, line: 101, baseType: !1555, size: 32)
!1555 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !956, line: 76, baseType: !1556)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 32)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{!105, !1498, !1051}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1552, file: !956, line: 102, baseType: !1555, size: 32, offset: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1552, file: !956, line: 103, baseType: !1561, size: 32, offset: 64)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !956, line: 83, baseType: !1562)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 32)
!1563 = !DISubroutineType(types: !1564)
!1564 = !{!105, !1498, !1051, !1565, !104}
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !956, line: 72, baseType: !1566)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 32)
!1567 = !DISubroutineType(types: !1568)
!1568 = !{null, !1498, !1051, !104}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1552, file: !956, line: 104, baseType: !1570, size: 32, offset: 96)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !956, line: 79, baseType: !1571)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!105, !1498, !1051, !1007}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1552, file: !956, line: 105, baseType: !1575, size: 32, offset: 128)
!1575 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !956, line: 88, baseType: !1576)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 32)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{!955, !1498, !1051}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1552, file: !956, line: 106, baseType: !1580, size: 32, offset: 160)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !956, line: 92, baseType: !1581)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 32)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{!105, !1498, !1051, !1077}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1552, file: !956, line: 107, baseType: !1585, size: 32, offset: 192)
!1585 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !956, line: 96, baseType: !1586)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 32)
!1587 = !DISubroutineType(types: !1588)
!1588 = !{!105, !1498, !1051, !104}
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 32)
!1590 = !{!1452, !1591, !1597, !1599, !1606, !1608, !1652, !1655, !1657, !1660, !1663, !1665}
!1591 = !DIGlobalVariableExpression(var: !1592, expr: !DIExpression())
!1592 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1454, file: !1593, line: 1914, type: !1594, isLocal: false, isDefinition: true, align: 16)
!1593 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !496, size: 128, elements: !1595)
!1595 = !{!1596}
!1596 = !DISubrange(count: 8)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1454, file: !1593, line: 1914, type: !1499, isLocal: false, isDefinition: true, align: 32)
!1599 = !DIGlobalVariableExpression(var: !1600, expr: !DIExpression())
!1600 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1454, file: !1593, line: 1914, type: !1601, isLocal: true, isDefinition: true, align: 32)
!1601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1602)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1603)
!1603 = !{!1604, !1605}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1602, file: !472, line: 60, baseType: !1518, size: 32)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1602, file: !472, line: 65, baseType: !1498, size: 32, offset: 32)
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1454, file: !1593, line: 1914, type: !1507, isLocal: true, isDefinition: true, align: 8)
!1608 = !DIGlobalVariableExpression(var: !1609, expr: !DIExpression())
!1609 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1454, file: !1593, line: 1914, type: !1610, isLocal: true, isDefinition: true)
!1610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1611)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1612, line: 22, size: 224, elements: !1613)
!1612 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1613 = !{!1614, !1615, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1611, file: !1612, line: 24, baseType: !1539, size: 32)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1611, file: !1612, line: 26, baseType: !1616, size: 32, offset: 32)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 32)
!1617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1618)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1003, line: 343, size: 64, elements: !1619)
!1619 = !{!1620, !1621}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1618, file: !1003, line: 344, baseType: !113, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1618, file: !1003, line: 345, baseType: !113, size: 32, offset: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1611, file: !1612, line: 28, baseType: !111, size: 32, offset: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1611, file: !1612, line: 30, baseType: !492, size: 8, offset: 96)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1611, file: !1612, line: 32, baseType: !105, size: 32, offset: 128)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1611, file: !1612, line: 34, baseType: !492, size: 8, offset: 160)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1611, file: !1612, line: 36, baseType: !492, size: 8, offset: 168)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1611, file: !1612, line: 38, baseType: !492, size: 8, offset: 176)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1611, file: !1612, line: 40, baseType: !492, size: 8, offset: 184)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1611, file: !1612, line: 41, baseType: !1630, size: 32, offset: 192)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 32)
!1631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1632)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1633, line: 60, size: 64, elements: !1634)
!1633 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1634 = !{!1635, !1651}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1632, file: !1633, line: 69, baseType: !1636, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1638)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1633, line: 50, size: 64, elements: !1639)
!1639 = !{!1640, !1649, !1650}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1638, file: !1633, line: 52, baseType: !1641, size: 32)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1643)
!1643 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1644, line: 37, baseType: !1645)
!1644 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1644, line: 32, size: 64, elements: !1646)
!1646 = !{!1647, !1648}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1645, file: !1644, line: 34, baseType: !113, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1645, file: !1644, line: 36, baseType: !113, size: 32, offset: 32)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1638, file: !1633, line: 54, baseType: !169, size: 8, offset: 32)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1638, file: !1633, line: 56, baseType: !169, size: 8, offset: 40)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1632, file: !1633, line: 71, baseType: !169, size: 8, offset: 32)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1454, file: !1593, line: 1914, type: !1654, isLocal: true, isDefinition: true)
!1654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1617, size: 64, elements: !661)
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1454, file: !1593, line: 1914, type: !1631, isLocal: true, isDefinition: true)
!1657 = !DIGlobalVariableExpression(var: !1658, expr: !DIExpression())
!1658 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1454, file: !1593, line: 1914, type: !1659, isLocal: true, isDefinition: true)
!1659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1637, size: 64, elements: !661)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1454, file: !1593, line: 1914, type: !1662, isLocal: true, isDefinition: true)
!1662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1642, size: 128, elements: !158)
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1454, file: !1593, line: 1539, type: !1491, isLocal: true, isDefinition: true)
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1454, file: !1593, line: 1914, type: !1667, isLocal: true, isDefinition: true)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1612, line: 74, size: 64, elements: !1668)
!1668 = !{!1669, !1670}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1667, file: !1612, line: 76, baseType: !113, size: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1667, file: !1612, line: 78, baseType: !1498, size: 32, offset: 32)
!1671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1672)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !1673)
!1673 = !{!1674, !1675}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1672, file: !348, line: 17, baseType: !269, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1672, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1678, file: !1754, line: 65, type: !461, isLocal: true, isDefinition: true)
!1678 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1679, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1680, retainedTypes: !1681, globals: !1751, splitDebugInlining: false, nameTableKind: None)
!1679 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!1680 = !{!748}
!1681 = !{!107, !1682, !116, !169, !113, !1690, !1721}
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !679, line: 770, baseType: !1684)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 764, size: 128, elements: !1685)
!1685 = !{!1686, !1687, !1688, !1689}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1684, file: !679, line: 766, baseType: !461, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1684, file: !679, line: 767, baseType: !461, size: 32, offset: 32)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1684, file: !679, line: 768, baseType: !461, size: 32, offset: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1684, file: !679, line: 769, baseType: !683, size: 32, offset: 96)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 32)
!1691 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !679, line: 426, baseType: !1692)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 411, size: 28704, elements: !1693)
!1693 = !{!1694, !1696, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1711, !1716, !1720}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1692, file: !679, line: 413, baseType: !1695, size: 256)
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, size: 256, elements: !1595)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1692, file: !679, line: 414, baseType: !1697, size: 768, offset: 256)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 768, elements: !1698)
!1698 = !{!1699}
!1699 = !DISubrange(count: 24)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1692, file: !679, line: 415, baseType: !1695, size: 256, offset: 1024)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1692, file: !679, line: 416, baseType: !1697, size: 768, offset: 1280)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1692, file: !679, line: 417, baseType: !1695, size: 256, offset: 2048)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1692, file: !679, line: 418, baseType: !1697, size: 768, offset: 2304)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1692, file: !679, line: 419, baseType: !1695, size: 256, offset: 3072)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1692, file: !679, line: 420, baseType: !1697, size: 768, offset: 3328)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1692, file: !679, line: 421, baseType: !1695, size: 256, offset: 4096)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1692, file: !679, line: 422, baseType: !1708, size: 1792, offset: 4352)
!1708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1792, elements: !1709)
!1709 = !{!1710}
!1710 = !DISubrange(count: 56)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1692, file: !679, line: 423, baseType: !1712, size: 1920, offset: 6144)
!1712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1713, size: 1920, elements: !1714)
!1713 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !169)
!1714 = !{!1715}
!1715 = !DISubrange(count: 240)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1692, file: !679, line: 424, baseType: !1717, size: 20608, offset: 8064)
!1717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 20608, elements: !1718)
!1718 = !{!1719}
!1719 = !DISubrange(count: 644)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1692, file: !679, line: 425, baseType: !461, size: 32, offset: 28672)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !1723)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !1724)
!1724 = !{!1725, !1726, !1727, !1728, !1729, !1730, !1731, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1742, !1743, !1744, !1746, !1748, !1750}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1723, file: !679, line: 447, baseType: !683, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1723, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1723, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1723, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1723, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1723, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1723, file: !679, line: 453, baseType: !1732, size: 96, offset: 192)
!1732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1713, size: 96, elements: !922)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1723, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1723, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1723, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1723, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1723, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1723, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1723, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1723, file: !679, line: 461, baseType: !1741, size: 64, offset: 512)
!1741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 64, elements: !158)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1723, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1723, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1723, file: !679, line: 464, baseType: !1745, size: 128, offset: 640)
!1745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 128, elements: !313)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1723, file: !679, line: 465, baseType: !1747, size: 160, offset: 768)
!1747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 160, elements: !1322)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1723, file: !679, line: 466, baseType: !1749, size: 160, offset: 928)
!1749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 160, elements: !1322)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1723, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!1751 = !{!1752, !1778, !1783, !1785, !1787, !1676}
!1752 = !DIGlobalVariableExpression(var: !1753, expr: !DIExpression())
!1753 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1678, file: !1754, line: 285, type: !1755, isLocal: true, isDefinition: true, align: 32)
!1754 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1756)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !1757)
!1757 = !{!1758, !1777}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1756, file: !472, line: 60, baseType: !1759, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 32)
!1760 = !DISubroutineType(types: !1761)
!1761 = !{!105, !1762}
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 32)
!1763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1764)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1765)
!1765 = !{!1766, !1767, !1768, !1769, !1775, !1776}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1764, file: !481, line: 380, baseType: !269, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1764, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1764, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1764, file: !481, line: 386, baseType: !1770, size: 32, offset: 96)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1772)
!1772 = !{!1773, !1774}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1771, file: !481, line: 359, baseType: !169, size: 8)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1771, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1764, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1764, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1756, file: !472, line: 65, baseType: !1762, size: 32, offset: 32)
!1778 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression())
!1779 = distinct !DIGlobalVariable(name: "lock", scope: !1678, file: !1754, line: 34, type: !1780, isLocal: true, isDefinition: true)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !1781)
!1781 = !{!1782}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1780, file: !236, line: 52, baseType: !22, size: 32)
!1783 = !DIGlobalVariableExpression(var: !1784, expr: !DIExpression())
!1784 = distinct !DIGlobalVariable(name: "last_load", scope: !1678, file: !1754, line: 36, type: !113, isLocal: true, isDefinition: true)
!1785 = !DIGlobalVariableExpression(var: !1786, expr: !DIExpression())
!1786 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1678, file: !1754, line: 48, type: !113, isLocal: true, isDefinition: true)
!1787 = !DIGlobalVariableExpression(var: !1788, expr: !DIExpression())
!1788 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1678, file: !1754, line: 54, type: !113, isLocal: true, isDefinition: true)
!1789 = !DIGlobalVariableExpression(var: !1790, expr: !DIExpression())
!1790 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1791, file: !1873, line: 22, type: !1875, isLocal: true, isDefinition: true)
!1791 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1792, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1793, retainedTypes: !1794, globals: !1870, splitDebugInlining: false, nameTableKind: None)
!1792 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!1793 = !{!1154, !1160}
!1794 = !{!1795, !1859, !1864, !1207, !1160, !1154, !1869, !104}
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 32)
!1796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1797)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1155, line: 523, size: 288, elements: !1798)
!1798 = !{!1799, !1818, !1822, !1826, !1830, !1831, !1832, !1836, !1855}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1797, file: !1155, line: 524, baseType: !1800, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 32)
!1801 = !DISubroutineType(types: !1802)
!1802 = !{!105, !1803, !1195, !1196}
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 32)
!1804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1805)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1806)
!1806 = !{!1807, !1808, !1809, !1810, !1816, !1817}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1805, file: !481, line: 380, baseType: !269, size: 32)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1805, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1805, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1805, file: !481, line: 386, baseType: !1811, size: 32, offset: 96)
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 32)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1813)
!1813 = !{!1814, !1815}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1812, file: !481, line: 359, baseType: !169, size: 8)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1812, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1805, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1805, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1797, file: !1155, line: 530, baseType: !1819, size: 32, offset: 32)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 32)
!1820 = !DISubroutineType(types: !1821)
!1821 = !{!105, !1803, !1201}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1797, file: !1155, line: 532, baseType: !1823, size: 32, offset: 64)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!105, !1803, !1207, !1202}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1797, file: !1155, line: 535, baseType: !1827, size: 32, offset: 96)
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 32)
!1828 = !DISubroutineType(types: !1829)
!1829 = !{!105, !1803, !1207}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1797, file: !1155, line: 537, baseType: !1827, size: 32, offset: 128)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1797, file: !1155, line: 539, baseType: !1827, size: 32, offset: 160)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1797, file: !1155, line: 541, baseType: !1833, size: 32, offset: 192)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 32)
!1834 = !DISubroutineType(types: !1835)
!1835 = !{!105, !1803, !1195, !1154, !1160}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1797, file: !1155, line: 544, baseType: !1837, size: 32, offset: 224)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 32)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{!105, !1803, !1840, !492}
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 32)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1155, line: 478, size: 96, elements: !1842)
!1842 = !{!1843, !1849, !1854}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1841, file: !1155, line: 482, baseType: !1844, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1227, line: 33, baseType: !1845)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1227, line: 29, size: 32, elements: !1846)
!1846 = !{!1847}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1845, file: !1227, line: 30, baseType: !1848, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1841, file: !1155, line: 485, baseType: !1850, size: 32, offset: 32)
!1850 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1155, line: 464, baseType: !1851)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 32)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{null, !1803, !1840, !1207}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1841, file: !1155, line: 493, baseType: !1207, size: 32, offset: 64)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1797, file: !1155, line: 547, baseType: !1856, size: 32, offset: 256)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{!113, !1803}
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1861)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1155, line: 428, size: 32, elements: !1862)
!1862 = !{!1863}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1861, file: !1155, line: 434, baseType: !1207, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1866)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1155, line: 441, size: 32, elements: !1867)
!1867 = !{!1868}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1866, file: !1155, line: 447, baseType: !1207, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 32)
!1870 = !{!1871, !1789}
!1871 = !DIGlobalVariableExpression(var: !1872, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1872 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1791, file: !1873, line: 37, type: !1874, isLocal: true, isDefinition: true)
!1873 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!1875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1876, size: 352, elements: !1877)
!1876 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1803)
!1877 = !{!1878}
!1878 = !DISubrange(count: 11)
!1879 = !DIGlobalVariableExpression(var: !1880, expr: !DIExpression())
!1880 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1881, file: !1923, line: 139, type: !1928, isLocal: false, isDefinition: true)
!1881 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1882, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1883, globals: !1920, splitDebugInlining: false, nameTableKind: None)
!1882 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!1883 = !{!1884}
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 370, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 336, size: 1152, elements: !1887)
!1887 = !{!1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1886, file: !457, line: 338, baseType: !461, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1886, file: !457, line: 339, baseType: !461, size: 32, offset: 32)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1886, file: !457, line: 340, baseType: !461, size: 32, offset: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1886, file: !457, line: 341, baseType: !461, size: 32, offset: 96)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1886, file: !457, line: 342, baseType: !461, size: 32, offset: 128)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1886, file: !457, line: 343, baseType: !461, size: 32, offset: 160)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1886, file: !457, line: 344, baseType: !461, size: 32, offset: 192)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1886, file: !457, line: 345, baseType: !113, size: 32, offset: 224)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1886, file: !457, line: 346, baseType: !461, size: 32, offset: 256)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1886, file: !457, line: 347, baseType: !461, size: 32, offset: 288)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1886, file: !457, line: 348, baseType: !978, size: 64, offset: 320)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1886, file: !457, line: 349, baseType: !461, size: 32, offset: 384)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1886, file: !457, line: 350, baseType: !461, size: 32, offset: 416)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1886, file: !457, line: 351, baseType: !461, size: 32, offset: 448)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1886, file: !457, line: 352, baseType: !113, size: 32, offset: 480)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1886, file: !457, line: 353, baseType: !461, size: 32, offset: 512)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1886, file: !457, line: 354, baseType: !461, size: 32, offset: 544)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1886, file: !457, line: 355, baseType: !978, size: 64, offset: 576)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1886, file: !457, line: 356, baseType: !461, size: 32, offset: 640)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1886, file: !457, line: 357, baseType: !461, size: 32, offset: 672)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1886, file: !457, line: 358, baseType: !461, size: 32, offset: 704)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1886, file: !457, line: 359, baseType: !113, size: 32, offset: 736)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1886, file: !457, line: 360, baseType: !461, size: 32, offset: 768)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1886, file: !457, line: 361, baseType: !461, size: 32, offset: 800)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1886, file: !457, line: 362, baseType: !978, size: 64, offset: 832)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1886, file: !457, line: 363, baseType: !461, size: 32, offset: 896)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1886, file: !457, line: 364, baseType: !461, size: 32, offset: 928)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1886, file: !457, line: 365, baseType: !978, size: 64, offset: 960)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1886, file: !457, line: 366, baseType: !461, size: 32, offset: 1024)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1886, file: !457, line: 367, baseType: !461, size: 32, offset: 1056)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1886, file: !457, line: 368, baseType: !999, size: 32, offset: 1088)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1886, file: !457, line: 369, baseType: !461, size: 32, offset: 1120)
!1920 = !{!1921, !1924, !1879}
!1921 = !DIGlobalVariableExpression(var: !1922, expr: !DIExpression())
!1922 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1881, file: !1923, line: 137, type: !113, isLocal: false, isDefinition: true)
!1923 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1924 = !DIGlobalVariableExpression(var: !1925, expr: !DIExpression())
!1925 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1881, file: !1923, line: 138, type: !1926, isLocal: false, isDefinition: true)
!1926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1927, size: 128, elements: !311)
!1927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !169)
!1928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1927, size: 64, elements: !1595)
!1929 = !DIGlobalVariableExpression(var: !1930, expr: !DIExpression())
!1930 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1931, file: !1934, line: 23, type: !1935, isLocal: false, isDefinition: true)
!1931 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1932, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, globals: !1933, splitDebugInlining: false, nameTableKind: None)
!1932 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!1933 = !{!1929}
!1934 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !105)
!1936 = !DIGlobalVariableExpression(var: !1937, expr: !DIExpression())
!1937 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1938, file: !1942, line: 37, type: !2197, isLocal: false, isDefinition: true)
!1938 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1939, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1940, retainedTypes: !1949, globals: !2022, splitDebugInlining: false, nameTableKind: None)
!1939 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!1940 = !{!1941, !30, !748}
!1941 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1942, line: 63, baseType: !32, size: 32, elements: !1943)
!1942 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1943 = !{!1944, !1945, !1946, !1947, !1948}
!1944 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1945 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1946 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1947 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1948 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1949 = !{!111, !104, !105, !1950, !102, !113, !1980, !116, !169, !2005}
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1952)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1953, line: 51, size: 64, elements: !1954)
!1953 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1954 = !{!1955, !1975}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1952, file: !1953, line: 52, baseType: !1956, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1953, line: 38, baseType: !1957)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 32)
!1958 = !DISubroutineType(types: !1959)
!1959 = !{!105, !1960, !432, !183}
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 32)
!1961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1962)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !1963)
!1963 = !{!1964, !1965, !1966, !1967, !1973, !1974}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1962, file: !481, line: 380, baseType: !269, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1962, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1962, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1962, file: !481, line: 386, baseType: !1968, size: 32, offset: 96)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 32)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !1970)
!1970 = !{!1971, !1972}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1969, file: !481, line: 359, baseType: !169, size: 8)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1969, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1962, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1962, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1952, file: !1953, line: 53, baseType: !1976, size: 32, offset: 32)
!1976 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1953, line: 47, baseType: !1977)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 32)
!1978 = !DISubroutineType(types: !1979)
!1979 = !{!105, !1960, !432, !183, !113}
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 32)
!1981 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !1982)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !1983)
!1983 = !{!1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1982, file: !679, line: 447, baseType: !683, size: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1982, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1982, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1982, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1982, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1982, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1982, file: !679, line: 453, baseType: !1732, size: 96, offset: 192)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1982, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1982, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1982, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1982, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1982, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1982, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1982, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1982, file: !679, line: 461, baseType: !1741, size: 64, offset: 512)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1982, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1982, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1982, file: !679, line: 464, baseType: !1745, size: 128, offset: 640)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1982, file: !679, line: 465, baseType: !1747, size: 160, offset: 768)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1982, file: !679, line: 466, baseType: !1749, size: 160, offset: 928)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1982, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !679, line: 426, baseType: !2007)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 411, size: 28704, elements: !2008)
!2008 = !{!2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2007, file: !679, line: 413, baseType: !1695, size: 256)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2007, file: !679, line: 414, baseType: !1697, size: 768, offset: 256)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2007, file: !679, line: 415, baseType: !1695, size: 256, offset: 1024)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2007, file: !679, line: 416, baseType: !1697, size: 768, offset: 1280)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2007, file: !679, line: 417, baseType: !1695, size: 256, offset: 2048)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2007, file: !679, line: 418, baseType: !1697, size: 768, offset: 2304)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2007, file: !679, line: 419, baseType: !1695, size: 256, offset: 3072)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2007, file: !679, line: 420, baseType: !1697, size: 768, offset: 3328)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2007, file: !679, line: 421, baseType: !1695, size: 256, offset: 4096)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2007, file: !679, line: 422, baseType: !1708, size: 1792, offset: 4352)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2007, file: !679, line: 423, baseType: !1712, size: 1920, offset: 6144)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2007, file: !679, line: 424, baseType: !1717, size: 20608, offset: 8064)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2007, file: !679, line: 425, baseType: !461, size: 32, offset: 28672)
!2022 = !{!1936, !2023, !2148, !2156, !2158, !2161, !2165, !2167, !2172}
!2023 = !DIGlobalVariableExpression(var: !2024, expr: !DIExpression())
!2024 = distinct !DIGlobalVariable(name: "_kernel", scope: !1938, file: !1942, line: 40, type: !2025, isLocal: false, isDefinition: true)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !163, line: 158, size: 320, elements: !2026)
!2026 = !{!2027, !2143}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2025, file: !163, line: 159, baseType: !2028, size: 224)
!2028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2029, size: 224, elements: !661)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !163, line: 100, size: 224, elements: !2030)
!2030 = !{!2031, !2032, !2033, !2136, !2137, !2138, !2139, !2140}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2029, file: !163, line: 102, baseType: !113, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2029, file: !163, line: 105, baseType: !102, size: 32, offset: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2029, file: !163, line: 108, baseType: !2034, size: 32, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 32)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !2036)
!2036 = !{!2037, !2095, !2107, !2108, !2109, !2110, !2116, !2131}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2035, file: !127, line: 247, baseType: !2038, size: 384)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2039)
!2039 = !{!2040, !2064, !2071, !2072, !2073, !2082, !2083, !2084}
!2040 = !DIDerivedType(tag: DW_TAG_member, scope: !2038, file: !127, line: 60, baseType: !2041, size: 64)
!2041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2038, file: !127, line: 60, size: 64, elements: !2042)
!2042 = !{!2043, !2058}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2041, file: !127, line: 61, baseType: !2044, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2045)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2046)
!2046 = !{!2047, !2053}
!2047 = !DIDerivedType(tag: DW_TAG_member, scope: !2045, file: !137, line: 38, baseType: !2048, size: 32)
!2048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2045, file: !137, line: 38, size: 32, elements: !2049)
!2049 = !{!2050, !2052}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2048, file: !137, line: 39, baseType: !2051, size: 32)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 32)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2048, file: !137, line: 40, baseType: !2051, size: 32)
!2053 = !DIDerivedType(tag: DW_TAG_member, scope: !2045, file: !137, line: 42, baseType: !2054, size: 32, offset: 32)
!2054 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2045, file: !137, line: 42, size: 32, elements: !2055)
!2055 = !{!2056, !2057}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2054, file: !137, line: 43, baseType: !2051, size: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2054, file: !137, line: 44, baseType: !2051, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2041, file: !127, line: 62, baseType: !2059, size: 64)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2060)
!2060 = !{!2061}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2059, file: !153, line: 50, baseType: !2062, size: 64)
!2062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2063, size: 64, elements: !158)
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 32)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2038, file: !127, line: 68, baseType: !2065, size: 32, offset: 64)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2067)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2068)
!2068 = !{!2069}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2067, file: !163, line: 232, baseType: !2070, size: 64)
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2045)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2038, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2038, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2073 = !DIDerivedType(tag: DW_TAG_member, scope: !2038, file: !127, line: 90, baseType: !2074, size: 16, offset: 112)
!2074 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2038, file: !127, line: 90, size: 16, elements: !2075)
!2075 = !{!2076, !2081}
!2076 = !DIDerivedType(tag: DW_TAG_member, scope: !2074, file: !127, line: 91, baseType: !2077, size: 16)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2074, file: !127, line: 91, size: 16, elements: !2078)
!2078 = !{!2079, !2080}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2077, file: !127, line: 96, baseType: !179, size: 8)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2077, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2074, file: !127, line: 100, baseType: !183, size: 16)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2038, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2038, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2038, file: !127, line: 131, baseType: !2085, size: 192, offset: 192)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2086)
!2086 = !{!2087, !2088, !2094}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2085, file: !163, line: 245, baseType: !2044, size: 64)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2085, file: !163, line: 246, baseType: !2089, size: 32, offset: 64)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2090)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 32)
!2091 = !DISubroutineType(types: !2092)
!2092 = !{null, !2093}
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2085, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2035, file: !127, line: 250, baseType: !2096, size: 288, offset: 384)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2097)
!2097 = !{!2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2096, file: !200, line: 26, baseType: !113, size: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2096, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2096, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2096, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2096, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2096, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2096, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2096, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2096, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2035, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2035, file: !127, line: 256, baseType: !2066, size: 64, offset: 704)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2035, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2035, file: !127, line: 300, baseType: !2111, size: 96, offset: 800)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !2112)
!2112 = !{!2113, !2114, !2115}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2111, file: !127, line: 153, baseType: !22, size: 32)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2111, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2111, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2035, file: !127, line: 325, baseType: !2117, size: 32, offset: 896)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 32)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2119)
!2119 = !{!2120, !2126, !2127}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2118, file: !122, line: 5074, baseType: !2121, size: 96)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !2122)
!2122 = !{!2123, !2124, !2125}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2121, file: !226, line: 57, baseType: !229, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2121, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2121, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2118, file: !122, line: 5075, baseType: !2066, size: 64, offset: 96)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2118, file: !122, line: 5076, baseType: !2128, size: 32, offset: 160)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2129)
!2129 = !{!2130}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2128, file: !236, line: 52, baseType: !22, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2035, file: !127, line: 343, baseType: !2132, size: 64, offset: 928)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2133)
!2133 = !{!2134, !2135}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2132, file: !200, line: 63, baseType: !113, size: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2132, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2029, file: !163, line: 111, baseType: !2034, size: 32, offset: 96)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_preempted", scope: !2029, file: !163, line: 119, baseType: !2034, size: 32, offset: 128)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2029, file: !163, line: 124, baseType: !105, size: 32, offset: 160)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2029, file: !163, line: 127, baseType: !169, size: 8, offset: 192)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2029, file: !163, line: 153, baseType: !2141, offset: 200)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2142, line: 33, elements: !397)
!2142 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2025, file: !163, line: 170, baseType: !2144, size: 96, offset: 224)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !163, line: 83, size: 96, elements: !2145)
!2145 = !{!2146, !2147}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2144, file: !163, line: 86, baseType: !2034, size: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2144, file: !163, line: 90, baseType: !2070, size: 64, offset: 32)
!2148 = !DIGlobalVariableExpression(var: !2149, expr: !DIExpression())
!2149 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1938, file: !1942, line: 43, type: !2150, isLocal: false, isDefinition: true, align: 512)
!2150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2151, size: 8704, elements: !2154)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !2152)
!2152 = !{!2153}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2151, file: !249, line: 48, baseType: !103, size: 8)
!2154 = !{!2155}
!2155 = !DISubrange(count: 1088)
!2156 = !DIGlobalVariableExpression(var: !2157, expr: !DIExpression())
!2157 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1938, file: !1942, line: 44, type: !2035, isLocal: false, isDefinition: true)
!2158 = !DIGlobalVariableExpression(var: !2159, expr: !DIExpression())
!2159 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1938, file: !1942, line: 48, type: !2160, isLocal: false, isDefinition: true)
!2160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2035, size: 1024, elements: !661)
!2161 = !DIGlobalVariableExpression(var: !2162, expr: !DIExpression())
!2162 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1938, file: !1942, line: 86, type: !2163, isLocal: false, isDefinition: true, align: 512)
!2163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2151, size: 16896, elements: !2164)
!2164 = !{!662, !319}
!2165 = !DIGlobalVariableExpression(var: !2166, expr: !DIExpression())
!2166 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1938, file: !1942, line: 217, type: !492, isLocal: false, isDefinition: true)
!2167 = !DIGlobalVariableExpression(var: !2168, expr: !DIExpression())
!2168 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1938, file: !1942, line: 50, type: !2169, isLocal: true, isDefinition: true, align: 512)
!2169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2151, size: 3072, elements: !2170)
!2170 = !{!662, !2171}
!2171 = !DISubrange(count: 384)
!2172 = !DIGlobalVariableExpression(var: !2173, expr: !DIExpression())
!2173 = distinct !DIGlobalVariable(name: "levels", scope: !2174, file: !1942, line: 232, type: !2194, isLocal: true, isDefinition: true)
!2174 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1942, file: !1942, line: 230, type: !2175, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !2177)
!2175 = !DISubroutineType(types: !2176)
!2176 = !{null, !1941}
!2177 = !{!2178, !2179, !2189, !2193}
!2178 = !DILocalVariable(name: "level", arg: 1, scope: !2174, file: !1942, line: 230, type: !1941)
!2179 = !DILocalVariable(name: "entry", scope: !2174, file: !1942, line: 244, type: !2180)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 32)
!2181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2182)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !2183)
!2183 = !{!2184, !2188}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2182, file: !472, line: 60, baseType: !2185, size: 32)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 32)
!2186 = !DISubroutineType(types: !2187)
!2187 = !{!105, !1960}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2182, file: !472, line: 65, baseType: !1960, size: 32, offset: 32)
!2189 = !DILocalVariable(name: "dev", scope: !2190, file: !1942, line: 247, type: !1960)
!2190 = distinct !DILexicalBlock(scope: !2191, file: !1942, line: 246, column: 64)
!2191 = distinct !DILexicalBlock(scope: !2192, file: !1942, line: 246, column: 2)
!2192 = distinct !DILexicalBlock(scope: !2174, file: !1942, line: 246, column: 2)
!2193 = !DILocalVariable(name: "rc", scope: !2190, file: !1942, line: 248, type: !105)
!2194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2180, size: 192, elements: !2195)
!2195 = !{!2196}
!2196 = !DISubrange(count: 6)
!2197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2198)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !348, line: 16, size: 64, elements: !2199)
!2199 = !{!2200, !2201}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2198, file: !348, line: 17, baseType: !269, size: 32)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2198, file: !348, line: 18, baseType: !169, size: 8, offset: 32)
!2202 = !DIGlobalVariableExpression(var: !2203, expr: !DIExpression())
!2203 = distinct !DIGlobalVariable(name: "states_str", scope: !2204, file: !2205, line: 276, type: !2328, isLocal: true, isDefinition: true)
!2204 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2205, file: !2205, line: 271, type: !2206, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !2319)
!2205 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2206 = !DISubroutineType(types: !2207)
!2207 = !{!269, !2208, !102, !111}
!2208 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !2209)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 32)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !2211)
!2211 = !{!2212, !2270, !2282, !2283, !2284, !2285, !2291, !2306}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2210, file: !127, line: 247, baseType: !2213, size: 384)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2214)
!2214 = !{!2215, !2239, !2246, !2247, !2248, !2257, !2258, !2259}
!2215 = !DIDerivedType(tag: DW_TAG_member, scope: !2213, file: !127, line: 60, baseType: !2216, size: 64)
!2216 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2213, file: !127, line: 60, size: 64, elements: !2217)
!2217 = !{!2218, !2233}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2216, file: !127, line: 61, baseType: !2219, size: 64)
!2219 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2220)
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2221)
!2221 = !{!2222, !2228}
!2222 = !DIDerivedType(tag: DW_TAG_member, scope: !2220, file: !137, line: 38, baseType: !2223, size: 32)
!2223 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2220, file: !137, line: 38, size: 32, elements: !2224)
!2224 = !{!2225, !2227}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2223, file: !137, line: 39, baseType: !2226, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 32)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2223, file: !137, line: 40, baseType: !2226, size: 32)
!2228 = !DIDerivedType(tag: DW_TAG_member, scope: !2220, file: !137, line: 42, baseType: !2229, size: 32, offset: 32)
!2229 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2220, file: !137, line: 42, size: 32, elements: !2230)
!2230 = !{!2231, !2232}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2229, file: !137, line: 43, baseType: !2226, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2229, file: !137, line: 44, baseType: !2226, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2216, file: !127, line: 62, baseType: !2234, size: 64)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2235)
!2235 = !{!2236}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2234, file: !153, line: 50, baseType: !2237, size: 64)
!2237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2238, size: 64, elements: !158)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 32)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2213, file: !127, line: 68, baseType: !2240, size: 32, offset: 64)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 32)
!2241 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2242)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2243)
!2243 = !{!2244}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2242, file: !163, line: 232, baseType: !2245, size: 64)
!2245 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2220)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2213, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2213, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2248 = !DIDerivedType(tag: DW_TAG_member, scope: !2213, file: !127, line: 90, baseType: !2249, size: 16, offset: 112)
!2249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2213, file: !127, line: 90, size: 16, elements: !2250)
!2250 = !{!2251, !2256}
!2251 = !DIDerivedType(tag: DW_TAG_member, scope: !2249, file: !127, line: 91, baseType: !2252, size: 16)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2249, file: !127, line: 91, size: 16, elements: !2253)
!2253 = !{!2254, !2255}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2252, file: !127, line: 96, baseType: !179, size: 8)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2252, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2249, file: !127, line: 100, baseType: !183, size: 16)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2213, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2213, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2213, file: !127, line: 131, baseType: !2260, size: 192, offset: 192)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2261)
!2261 = !{!2262, !2263, !2269}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2260, file: !163, line: 245, baseType: !2219, size: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2260, file: !163, line: 246, baseType: !2264, size: 32, offset: 64)
!2264 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2265)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 32)
!2266 = !DISubroutineType(types: !2267)
!2267 = !{null, !2268}
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2260, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2210, file: !127, line: 250, baseType: !2271, size: 288, offset: 384)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2272)
!2272 = !{!2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2271, file: !200, line: 26, baseType: !113, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2271, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2271, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2271, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2271, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2271, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2271, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2271, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2271, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2210, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2210, file: !127, line: 256, baseType: !2241, size: 64, offset: 704)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2210, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2210, file: !127, line: 300, baseType: !2286, size: 96, offset: 800)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !2287)
!2287 = !{!2288, !2289, !2290}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2286, file: !127, line: 153, baseType: !22, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2286, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2286, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2210, file: !127, line: 325, baseType: !2292, size: 32, offset: 896)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 32)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2294)
!2294 = !{!2295, !2301, !2302}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2293, file: !122, line: 5074, baseType: !2296, size: 96)
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !2297)
!2297 = !{!2298, !2299, !2300}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2296, file: !226, line: 57, baseType: !229, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2296, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2296, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2293, file: !122, line: 5075, baseType: !2241, size: 64, offset: 96)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2293, file: !122, line: 5076, baseType: !2303, size: 32, offset: 160)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2304)
!2304 = !{!2305}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2303, file: !236, line: 52, baseType: !22, size: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2210, file: !127, line: 343, baseType: !2307, size: 64, offset: 928)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2308)
!2308 = !{!2309, !2310}
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2307, file: !200, line: 63, baseType: !113, size: 32)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2307, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2311 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2312, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2313, globals: !2315, splitDebugInlining: false, nameTableKind: None)
!2312 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2313 = !{!104, !269, !107, !169, !22, !105, !2314, !24, !111, !102, !113, !114}
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 32)
!2315 = !{!2202, !2316}
!2316 = !DIGlobalVariableExpression(var: !2317, expr: !DIExpression())
!2317 = distinct !DIGlobalVariable(name: "states_sz", scope: !2204, file: !2205, line: 279, type: !2318, isLocal: true, isDefinition: true)
!2318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1874, size: 256, elements: !1595)
!2319 = !{!2320, !2321, !2322, !2323, !2324, !2325, !2326}
!2320 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2204, file: !2205, line: 271, type: !2208)
!2321 = !DILocalVariable(name: "buf", arg: 2, scope: !2204, file: !2205, line: 271, type: !102)
!2322 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2204, file: !2205, line: 271, type: !111)
!2323 = !DILocalVariable(name: "off", scope: !2204, file: !2205, line: 273, type: !111)
!2324 = !DILocalVariable(name: "bit", scope: !2204, file: !2205, line: 274, type: !169)
!2325 = !DILocalVariable(name: "thread_state", scope: !2204, file: !2205, line: 275, type: !169)
!2326 = !DILocalVariable(name: "index", scope: !2327, file: !2205, line: 293, type: !169)
!2327 = distinct !DILexicalBlock(scope: !2204, file: !2205, line: 293, column: 2)
!2328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !269, size: 256, elements: !1595)
!2329 = !DIGlobalVariableExpression(var: !2330, expr: !DIExpression())
!2330 = distinct !DIGlobalVariable(name: "lock", scope: !2331, file: !2350, line: 39, type: !2351, isLocal: true, isDefinition: true)
!2331 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2332, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2333, globals: !2349, splitDebugInlining: false, nameTableKind: None)
!2332 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2333 = !{!104, !492, !105, !2334}
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2336)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2337)
!2337 = !{!2338, !2344}
!2338 = !DIDerivedType(tag: DW_TAG_member, scope: !2336, file: !137, line: 38, baseType: !2339, size: 32)
!2339 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2336, file: !137, line: 38, size: 32, elements: !2340)
!2340 = !{!2341, !2343}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2339, file: !137, line: 39, baseType: !2342, size: 32)
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2339, file: !137, line: 40, baseType: !2342, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, scope: !2336, file: !137, line: 42, baseType: !2345, size: 32, offset: 32)
!2345 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2336, file: !137, line: 42, size: 32, elements: !2346)
!2346 = !{!2347, !2348}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2345, file: !137, line: 43, baseType: !2342, size: 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2345, file: !137, line: 44, baseType: !2342, size: 32)
!2349 = !{!2329}
!2350 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2352)
!2352 = !{!2353}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2351, file: !236, line: 52, baseType: !22, size: 32)
!2354 = !DIGlobalVariableExpression(var: !2355, expr: !DIExpression())
!2355 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2356, file: !2466, line: 56, type: !2453, isLocal: false, isDefinition: true)
!2356 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2357, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2358, globals: !2463, splitDebugInlining: false, nameTableKind: None)
!2357 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2358 = !{!2359, !102, !104, !2461, !432, !107, !116, !105, !113, !114, !2462}
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 32)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !2361)
!2361 = !{!2362, !2420, !2432, !2433, !2434, !2435, !2441, !2456}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2360, file: !127, line: 247, baseType: !2363, size: 384)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2364)
!2364 = !{!2365, !2389, !2396, !2397, !2398, !2407, !2408, !2409}
!2365 = !DIDerivedType(tag: DW_TAG_member, scope: !2363, file: !127, line: 60, baseType: !2366, size: 64)
!2366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2363, file: !127, line: 60, size: 64, elements: !2367)
!2367 = !{!2368, !2383}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2366, file: !127, line: 61, baseType: !2369, size: 64)
!2369 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2370)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2371)
!2371 = !{!2372, !2378}
!2372 = !DIDerivedType(tag: DW_TAG_member, scope: !2370, file: !137, line: 38, baseType: !2373, size: 32)
!2373 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2370, file: !137, line: 38, size: 32, elements: !2374)
!2374 = !{!2375, !2377}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2373, file: !137, line: 39, baseType: !2376, size: 32)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 32)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2373, file: !137, line: 40, baseType: !2376, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_member, scope: !2370, file: !137, line: 42, baseType: !2379, size: 32, offset: 32)
!2379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2370, file: !137, line: 42, size: 32, elements: !2380)
!2380 = !{!2381, !2382}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2379, file: !137, line: 43, baseType: !2376, size: 32)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2379, file: !137, line: 44, baseType: !2376, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2366, file: !127, line: 62, baseType: !2384, size: 64)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2385)
!2385 = !{!2386}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2384, file: !153, line: 50, baseType: !2387, size: 64)
!2387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2388, size: 64, elements: !158)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2363, file: !127, line: 68, baseType: !2390, size: 32, offset: 64)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2392)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2393)
!2393 = !{!2394}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2392, file: !163, line: 232, baseType: !2395, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2370)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2363, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2363, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2398 = !DIDerivedType(tag: DW_TAG_member, scope: !2363, file: !127, line: 90, baseType: !2399, size: 16, offset: 112)
!2399 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2363, file: !127, line: 90, size: 16, elements: !2400)
!2400 = !{!2401, !2406}
!2401 = !DIDerivedType(tag: DW_TAG_member, scope: !2399, file: !127, line: 91, baseType: !2402, size: 16)
!2402 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2399, file: !127, line: 91, size: 16, elements: !2403)
!2403 = !{!2404, !2405}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2402, file: !127, line: 96, baseType: !179, size: 8)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2402, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2399, file: !127, line: 100, baseType: !183, size: 16)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2363, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2363, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2363, file: !127, line: 131, baseType: !2410, size: 192, offset: 192)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2411)
!2411 = !{!2412, !2413, !2419}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2410, file: !163, line: 245, baseType: !2369, size: 64)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2410, file: !163, line: 246, baseType: !2414, size: 32, offset: 64)
!2414 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2415)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 32)
!2416 = !DISubroutineType(types: !2417)
!2417 = !{null, !2418}
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2410, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2360, file: !127, line: 250, baseType: !2421, size: 288, offset: 384)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2422)
!2422 = !{!2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2421, file: !200, line: 26, baseType: !113, size: 32)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2421, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2421, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2421, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2421, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2421, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2421, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2421, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2421, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2360, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2360, file: !127, line: 256, baseType: !2391, size: 64, offset: 704)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2360, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2360, file: !127, line: 300, baseType: !2436, size: 96, offset: 800)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !2437)
!2437 = !{!2438, !2439, !2440}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2436, file: !127, line: 153, baseType: !22, size: 32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2436, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2436, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2360, file: !127, line: 325, baseType: !2442, size: 32, offset: 896)
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 32)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2444)
!2444 = !{!2445, !2451, !2452}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2443, file: !122, line: 5074, baseType: !2446, size: 96)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !2447)
!2447 = !{!2448, !2449, !2450}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2446, file: !226, line: 57, baseType: !229, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2446, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2446, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2443, file: !122, line: 5075, baseType: !2391, size: 64, offset: 96)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2443, file: !122, line: 5076, baseType: !2453, size: 32, offset: 160)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2454)
!2454 = !{!2455}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2453, file: !236, line: 52, baseType: !22, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2360, file: !127, line: 343, baseType: !2457, size: 64, offset: 928)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2458)
!2458 = !{!2459, !2460}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2457, file: !200, line: 63, baseType: !113, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2457, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 32)
!2463 = !{!2354, !2464, !2467, !2469}
!2464 = !DIGlobalVariableExpression(var: !2465, expr: !DIExpression())
!2465 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2356, file: !2466, line: 404, type: !105, isLocal: true, isDefinition: true)
!2466 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2467 = !DIGlobalVariableExpression(var: !2468, expr: !DIExpression())
!2468 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2356, file: !2466, line: 405, type: !105, isLocal: true, isDefinition: true)
!2469 = !DIGlobalVariableExpression(var: !2470, expr: !DIExpression())
!2470 = distinct !DIGlobalVariable(name: "pending_current", scope: !2356, file: !2466, line: 425, type: !2359, isLocal: true, isDefinition: true)
!2471 = !DIGlobalVariableExpression(var: !2472, expr: !DIExpression())
!2472 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2473, file: !2503, line: 19, type: !2509, isLocal: true, isDefinition: true)
!2473 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2474, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2475, globals: !2500, splitDebugInlining: false, nameTableKind: None)
!2474 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2475 = !{!107, !104, !116, !113, !114, !105, !2476, !102, !109}
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 32)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2478)
!2478 = !{!2479, !2494, !2499}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2477, file: !163, line: 245, baseType: !2480, size: 64)
!2480 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2481)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2482)
!2482 = !{!2483, !2489}
!2483 = !DIDerivedType(tag: DW_TAG_member, scope: !2481, file: !137, line: 38, baseType: !2484, size: 32)
!2484 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2481, file: !137, line: 38, size: 32, elements: !2485)
!2485 = !{!2486, !2488}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2484, file: !137, line: 39, baseType: !2487, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2484, file: !137, line: 40, baseType: !2487, size: 32)
!2489 = !DIDerivedType(tag: DW_TAG_member, scope: !2481, file: !137, line: 42, baseType: !2490, size: 32, offset: 32)
!2490 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2481, file: !137, line: 42, size: 32, elements: !2491)
!2491 = !{!2492, !2493}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2490, file: !137, line: 43, baseType: !2487, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2490, file: !137, line: 44, baseType: !2487, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2477, file: !163, line: 246, baseType: !2495, size: 32, offset: 64)
!2495 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2496)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 32)
!2497 = !DISubroutineType(types: !2498)
!2498 = !{null, !2476}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2477, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2500 = !{!2501, !2471, !2504, !2506}
!2501 = !DIGlobalVariableExpression(var: !2502, expr: !DIExpression())
!2502 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2473, file: !2503, line: 15, type: !114, isLocal: true, isDefinition: true)
!2503 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2504 = !DIGlobalVariableExpression(var: !2505, expr: !DIExpression())
!2505 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2473, file: !2503, line: 25, type: !105, isLocal: true, isDefinition: true)
!2506 = !DIGlobalVariableExpression(var: !2507, expr: !DIExpression())
!2507 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2473, file: !2503, line: 17, type: !2508, isLocal: true, isDefinition: true)
!2508 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2481)
!2509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !2510)
!2510 = !{!2511}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2509, file: !236, line: 52, baseType: !22, size: 32)
!2512 = !DIGlobalVariableExpression(var: !2513, expr: !DIExpression())
!2513 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2514, file: !2533, line: 55, type: !2534, isLocal: true, isDefinition: true, align: 32)
!2514 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2515, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2516, globals: !2532, splitDebugInlining: false, nameTableKind: None)
!2515 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2516 = !{!104, !107, !105, !2517}
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2519)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2520)
!2520 = !{!2521, !2527}
!2521 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !137, line: 38, baseType: !2522, size: 32)
!2522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !137, line: 38, size: 32, elements: !2523)
!2523 = !{!2524, !2526}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2522, file: !137, line: 39, baseType: !2525, size: 32)
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2522, file: !137, line: 40, baseType: !2525, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !137, line: 42, baseType: !2528, size: 32, offset: 32)
!2528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !137, line: 42, size: 32, elements: !2529)
!2529 = !{!2530, !2531}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2528, file: !137, line: 43, baseType: !2525, size: 32)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2528, file: !137, line: 44, baseType: !2525, size: 32)
!2532 = !{!2512}
!2533 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2535)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !472, line: 51, size: 64, elements: !2536)
!2536 = !{!2537, !2544}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2535, file: !472, line: 60, baseType: !2538, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 32)
!2539 = !DISubroutineType(types: !2540)
!2540 = !{!105, !2541}
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 32)
!2542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2543)
!2543 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !472, line: 48, flags: DIFlagFwdDecl)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2535, file: !472, line: 65, baseType: !2541, size: 32, offset: 32)
!2545 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2546, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2546 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2547 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2548, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2548 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2549 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2550, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2551, retainedTypes: !2559, splitDebugInlining: false, nameTableKind: None)
!2550 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2551 = !{!30, !2552}
!2552 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2553, line: 54, baseType: !32, size: 32, elements: !2554)
!2553 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2554 = !{!2555, !2556, !2557, !2558}
!2555 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2556 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2557 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2558 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2559 = !{!104, !111, !432, !24, !2560, !22, !2566, !105, !1007, !2581}
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 32)
!2561 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2553, line: 58, baseType: !2562)
!2562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2553, line: 58, size: 64, elements: !2563)
!2563 = !{!2564}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2562, file: !2553, line: 58, baseType: !2565, size: 64)
!2565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 64, elements: !1595)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 32)
!2567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2553, line: 68, size: 128, elements: !2568)
!2568 = !{!2569, !2572, !2573, !2574}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2567, file: !2553, line: 69, baseType: !2570, size: 64)
!2570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2571, size: 64, elements: !158)
!2571 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2553, line: 61, baseType: !113)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2567, file: !2553, line: 70, baseType: !2571, size: 32, offset: 64)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2567, file: !2553, line: 71, baseType: !113, size: 32, offset: 96)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2567, file: !2553, line: 77, baseType: !2575, offset: 128)
!2575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2576, elements: !2579)
!2576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2553, line: 64, size: 32, elements: !2577)
!2577 = !{!2578}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2576, file: !2553, line: 65, baseType: !2571, size: 32)
!2579 = !{!2580}
!2580 = !DISubrange(count: 0)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!2582 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2583, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2584, retainedTypes: !2604, splitDebugInlining: false, nameTableKind: None)
!2583 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2584 = !{!2585, !2593}
!2585 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2586, line: 69, baseType: !32, size: 32, elements: !2587)
!2586 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2587 = !{!2588, !2589, !2590, !2591, !2592}
!2588 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2589 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2590 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2591 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2592 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2593 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2586, line: 56, baseType: !32, size: 32, elements: !2594)
!2594 = !{!2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603}
!2595 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2596 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2597 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2598 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2599 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2600 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2601 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2602 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2603 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2604 = !{!105, !2585, !2593, !2605, !180, !499, !2607, !2608, !170, !184, !269, !111, !104, !22, !32, !428, !2610, !2611, !106, !429, !110, !430, !2606, !2612, !2613, !2614, !2615}
!2605 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2586, line: 31, baseType: !2606)
!2606 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !110)
!2607 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !112, line: 329, baseType: !32)
!2608 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2586, line: 32, baseType: !2609)
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !115)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 32)
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!2614 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !112, line: 145, baseType: !105)
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 32)
!2616 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2617, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2617 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2618 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2619, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2619 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2620 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2621, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2622, splitDebugInlining: false, nameTableKind: None)
!2621 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2622 = !{!269, !170, !105, !32}
!2623 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2624, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2625, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2624 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2625 = !{!2626, !30}
!2626 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2627, line: 27, baseType: !32, size: 32, elements: !2628)
!2627 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2628 = !{!2629, !2630, !2631, !2632, !2633}
!2629 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2630 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2631 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2632 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2633 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2634 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2635, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2636, retainedTypes: !2637, splitDebugInlining: false, nameTableKind: None)
!2635 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2636 = !{!748, !2626, !30}
!2637 = !{!912, !2638, !104, !105, !116, !113, !169, !2655}
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 32)
!2639 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !679, line: 426, baseType: !2640)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 411, size: 28704, elements: !2641)
!2641 = !{!2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2640, file: !679, line: 413, baseType: !1695, size: 256)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2640, file: !679, line: 414, baseType: !1697, size: 768, offset: 256)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2640, file: !679, line: 415, baseType: !1695, size: 256, offset: 1024)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2640, file: !679, line: 416, baseType: !1697, size: 768, offset: 1280)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2640, file: !679, line: 417, baseType: !1695, size: 256, offset: 2048)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2640, file: !679, line: 418, baseType: !1697, size: 768, offset: 2304)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2640, file: !679, line: 419, baseType: !1695, size: 256, offset: 3072)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2640, file: !679, line: 420, baseType: !1697, size: 768, offset: 3328)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2640, file: !679, line: 421, baseType: !1695, size: 256, offset: 4096)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2640, file: !679, line: 422, baseType: !1708, size: 1792, offset: 4352)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2640, file: !679, line: 423, baseType: !1712, size: 1920, offset: 6144)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2640, file: !679, line: 424, baseType: !1717, size: 20608, offset: 8064)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2640, file: !679, line: 425, baseType: !461, size: 32, offset: 28672)
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2657)
!2657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2658)
!2658 = !{!2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2657, file: !679, line: 447, baseType: !683, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2657, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2657, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2657, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2657, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2657, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2657, file: !679, line: 453, baseType: !1732, size: 96, offset: 192)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2657, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2657, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2657, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2657, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2657, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2657, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2657, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2657, file: !679, line: 461, baseType: !1741, size: 64, offset: 512)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2657, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2657, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2657, file: !679, line: 464, baseType: !1745, size: 128, offset: 640)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2657, file: !679, line: 465, baseType: !1747, size: 160, offset: 768)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2657, file: !679, line: 466, baseType: !1749, size: 160, offset: 928)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2657, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2680 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2681, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!2681 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2682 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2683, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2684, splitDebugInlining: false, nameTableKind: None)
!2683 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2684 = !{!104, !105, !22, !2685}
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2687)
!2687 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2688)
!2688 = !{!2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2687, file: !679, line: 447, baseType: !683, size: 32)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2687, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2687, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2687, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2687, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2687, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2687, file: !679, line: 453, baseType: !1732, size: 96, offset: 192)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2687, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2687, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2687, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2687, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2687, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2687, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2687, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2687, file: !679, line: 461, baseType: !1741, size: 64, offset: 512)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2687, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2687, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2687, file: !679, line: 464, baseType: !1745, size: 128, offset: 640)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2687, file: !679, line: 465, baseType: !1747, size: 160, offset: 768)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2687, file: !679, line: 466, baseType: !1749, size: 160, offset: 928)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2687, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2710 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2711, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2712, splitDebugInlining: false, nameTableKind: None)
!2711 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2712 = !{!2713, !104, !105}
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 32)
!2714 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2715)
!2715 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2716)
!2716 = !{!2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2715, file: !679, line: 447, baseType: !683, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2715, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2715, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2715, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2715, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2715, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2715, file: !679, line: 453, baseType: !1732, size: 96, offset: 192)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2715, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2715, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2715, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2715, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2715, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2715, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2715, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2715, file: !679, line: 461, baseType: !1741, size: 64, offset: 512)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2715, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2715, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2715, file: !679, line: 464, baseType: !1745, size: 128, offset: 640)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2715, file: !679, line: 465, baseType: !1747, size: 160, offset: 768)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2715, file: !679, line: 466, baseType: !1749, size: 160, offset: 928)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2715, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2738 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2739, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2740, splitDebugInlining: false, nameTableKind: None)
!2739 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2740 = !{!2741, !113, !104, !105}
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 32)
!2742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2743, line: 98, size: 256, elements: !2744)
!2743 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2744 = !{!2745, !2750, !2755, !2760, !2765, !2770, !2775, !2780}
!2745 = !DIDerivedType(tag: DW_TAG_member, scope: !2742, file: !2743, line: 99, baseType: !2746, size: 32)
!2746 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2742, file: !2743, line: 99, size: 32, elements: !2747)
!2747 = !{!2748, !2749}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2746, file: !2743, line: 99, baseType: !113, size: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2746, file: !2743, line: 99, baseType: !113, size: 32)
!2750 = !DIDerivedType(tag: DW_TAG_member, scope: !2742, file: !2743, line: 100, baseType: !2751, size: 32, offset: 32)
!2751 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2742, file: !2743, line: 100, size: 32, elements: !2752)
!2752 = !{!2753, !2754}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2751, file: !2743, line: 100, baseType: !113, size: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2751, file: !2743, line: 100, baseType: !113, size: 32)
!2755 = !DIDerivedType(tag: DW_TAG_member, scope: !2742, file: !2743, line: 101, baseType: !2756, size: 32, offset: 64)
!2756 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2742, file: !2743, line: 101, size: 32, elements: !2757)
!2757 = !{!2758, !2759}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2756, file: !2743, line: 101, baseType: !113, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2756, file: !2743, line: 101, baseType: !113, size: 32)
!2760 = !DIDerivedType(tag: DW_TAG_member, scope: !2742, file: !2743, line: 102, baseType: !2761, size: 32, offset: 96)
!2761 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2742, file: !2743, line: 102, size: 32, elements: !2762)
!2762 = !{!2763, !2764}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2761, file: !2743, line: 102, baseType: !113, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2761, file: !2743, line: 102, baseType: !113, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, scope: !2742, file: !2743, line: 103, baseType: !2766, size: 32, offset: 128)
!2766 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2742, file: !2743, line: 103, size: 32, elements: !2767)
!2767 = !{!2768, !2769}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2766, file: !2743, line: 103, baseType: !113, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2766, file: !2743, line: 103, baseType: !113, size: 32)
!2770 = !DIDerivedType(tag: DW_TAG_member, scope: !2742, file: !2743, line: 104, baseType: !2771, size: 32, offset: 160)
!2771 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2742, file: !2743, line: 104, size: 32, elements: !2772)
!2772 = !{!2773, !2774}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2771, file: !2743, line: 104, baseType: !113, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2771, file: !2743, line: 104, baseType: !113, size: 32)
!2775 = !DIDerivedType(tag: DW_TAG_member, scope: !2742, file: !2743, line: 105, baseType: !2776, size: 32, offset: 192)
!2776 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2742, file: !2743, line: 105, size: 32, elements: !2777)
!2777 = !{!2778, !2779}
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2776, file: !2743, line: 105, baseType: !113, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2776, file: !2743, line: 105, baseType: !113, size: 32)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2742, file: !2743, line: 106, baseType: !113, size: 32, offset: 224)
!2781 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2782, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2625, retainedTypes: !2783, splitDebugInlining: false, nameTableKind: None)
!2782 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2783 = !{!2784, !104, !105, !2809, !2581, !113}
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 32)
!2785 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2786)
!2786 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2787)
!2787 = !{!2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2786, file: !679, line: 447, baseType: !683, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2786, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2786, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2786, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2786, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2786, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2786, file: !679, line: 453, baseType: !1732, size: 96, offset: 192)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2786, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2786, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2786, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2786, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2786, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2786, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2786, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2786, file: !679, line: 461, baseType: !1741, size: 64, offset: 512)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2786, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2786, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2786, file: !679, line: 464, baseType: !1745, size: 128, offset: 640)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2786, file: !679, line: 465, baseType: !1747, size: 160, offset: 768)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2786, file: !679, line: 466, baseType: !1749, size: 160, offset: 928)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2786, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 32)
!2810 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2743, line: 141, baseType: !2811)
!2811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2743, line: 97, size: 256, elements: !2812)
!2812 = !{!2813}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2811, file: !2743, line: 107, baseType: !2814, size: 256)
!2814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2743, line: 98, size: 256, elements: !2815)
!2815 = !{!2816, !2821, !2826, !2831, !2836, !2841, !2846, !2851}
!2816 = !DIDerivedType(tag: DW_TAG_member, scope: !2814, file: !2743, line: 99, baseType: !2817, size: 32)
!2817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2814, file: !2743, line: 99, size: 32, elements: !2818)
!2818 = !{!2819, !2820}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2817, file: !2743, line: 99, baseType: !113, size: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2817, file: !2743, line: 99, baseType: !113, size: 32)
!2821 = !DIDerivedType(tag: DW_TAG_member, scope: !2814, file: !2743, line: 100, baseType: !2822, size: 32, offset: 32)
!2822 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2814, file: !2743, line: 100, size: 32, elements: !2823)
!2823 = !{!2824, !2825}
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2822, file: !2743, line: 100, baseType: !113, size: 32)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2822, file: !2743, line: 100, baseType: !113, size: 32)
!2826 = !DIDerivedType(tag: DW_TAG_member, scope: !2814, file: !2743, line: 101, baseType: !2827, size: 32, offset: 64)
!2827 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2814, file: !2743, line: 101, size: 32, elements: !2828)
!2828 = !{!2829, !2830}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2827, file: !2743, line: 101, baseType: !113, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2827, file: !2743, line: 101, baseType: !113, size: 32)
!2831 = !DIDerivedType(tag: DW_TAG_member, scope: !2814, file: !2743, line: 102, baseType: !2832, size: 32, offset: 96)
!2832 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2814, file: !2743, line: 102, size: 32, elements: !2833)
!2833 = !{!2834, !2835}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2832, file: !2743, line: 102, baseType: !113, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2832, file: !2743, line: 102, baseType: !113, size: 32)
!2836 = !DIDerivedType(tag: DW_TAG_member, scope: !2814, file: !2743, line: 103, baseType: !2837, size: 32, offset: 128)
!2837 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2814, file: !2743, line: 103, size: 32, elements: !2838)
!2838 = !{!2839, !2840}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2837, file: !2743, line: 103, baseType: !113, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2837, file: !2743, line: 103, baseType: !113, size: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, scope: !2814, file: !2743, line: 104, baseType: !2842, size: 32, offset: 160)
!2842 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2814, file: !2743, line: 104, size: 32, elements: !2843)
!2843 = !{!2844, !2845}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2842, file: !2743, line: 104, baseType: !113, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2842, file: !2743, line: 104, baseType: !113, size: 32)
!2846 = !DIDerivedType(tag: DW_TAG_member, scope: !2814, file: !2743, line: 105, baseType: !2847, size: 32, offset: 192)
!2847 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2814, file: !2743, line: 105, size: 32, elements: !2848)
!2848 = !{!2849, !2850}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2847, file: !2743, line: 105, baseType: !113, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2847, file: !2743, line: 105, baseType: !113, size: 32)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2814, file: !2743, line: 106, baseType: !113, size: 32, offset: 224)
!2852 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2853, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1680, retainedTypes: !2854, splitDebugInlining: false, nameTableKind: None)
!2853 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2854 = !{!912, !116, !169, !113, !2855, !2872}
!2855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2856, size: 32)
!2856 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !679, line: 426, baseType: !2857)
!2857 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 411, size: 28704, elements: !2858)
!2858 = !{!2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2857, file: !679, line: 413, baseType: !1695, size: 256)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2857, file: !679, line: 414, baseType: !1697, size: 768, offset: 256)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2857, file: !679, line: 415, baseType: !1695, size: 256, offset: 1024)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2857, file: !679, line: 416, baseType: !1697, size: 768, offset: 1280)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2857, file: !679, line: 417, baseType: !1695, size: 256, offset: 2048)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2857, file: !679, line: 418, baseType: !1697, size: 768, offset: 2304)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2857, file: !679, line: 419, baseType: !1695, size: 256, offset: 3072)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2857, file: !679, line: 420, baseType: !1697, size: 768, offset: 3328)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2857, file: !679, line: 421, baseType: !1695, size: 256, offset: 4096)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2857, file: !679, line: 422, baseType: !1708, size: 1792, offset: 4352)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2857, file: !679, line: 423, baseType: !1712, size: 1920, offset: 6144)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2857, file: !679, line: 424, baseType: !1717, size: 20608, offset: 8064)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2857, file: !679, line: 425, baseType: !461, size: 32, offset: 28672)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 32)
!2873 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2874)
!2874 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2875)
!2875 = !{!2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2874, file: !679, line: 447, baseType: !683, size: 32)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2874, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2874, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2874, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2874, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2874, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2874, file: !679, line: 453, baseType: !1732, size: 96, offset: 192)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2874, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2874, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2874, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2874, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2874, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2874, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2874, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2874, file: !679, line: 461, baseType: !1741, size: 64, offset: 512)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2874, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2874, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2874, file: !679, line: 464, baseType: !1745, size: 128, offset: 640)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2874, file: !679, line: 465, baseType: !1747, size: 160, offset: 768)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2874, file: !679, line: 466, baseType: !1749, size: 160, offset: 928)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2874, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2897 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2898, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2899, splitDebugInlining: false, nameTableKind: None)
!2898 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2899 = !{!2900, !104, !105}
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 32)
!2901 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !679, line: 468, baseType: !2902)
!2902 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 445, size: 1120, elements: !2903)
!2903 = !{!2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2902, file: !679, line: 447, baseType: !683, size: 32)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2902, file: !679, line: 448, baseType: !461, size: 32, offset: 32)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2902, file: !679, line: 449, baseType: !461, size: 32, offset: 64)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2902, file: !679, line: 450, baseType: !461, size: 32, offset: 96)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2902, file: !679, line: 451, baseType: !461, size: 32, offset: 128)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2902, file: !679, line: 452, baseType: !461, size: 32, offset: 160)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2902, file: !679, line: 453, baseType: !1732, size: 96, offset: 192)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2902, file: !679, line: 454, baseType: !461, size: 32, offset: 288)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2902, file: !679, line: 455, baseType: !461, size: 32, offset: 320)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2902, file: !679, line: 456, baseType: !461, size: 32, offset: 352)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2902, file: !679, line: 457, baseType: !461, size: 32, offset: 384)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2902, file: !679, line: 458, baseType: !461, size: 32, offset: 416)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2902, file: !679, line: 459, baseType: !461, size: 32, offset: 448)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2902, file: !679, line: 460, baseType: !461, size: 32, offset: 480)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2902, file: !679, line: 461, baseType: !1741, size: 64, offset: 512)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2902, file: !679, line: 462, baseType: !683, size: 32, offset: 576)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2902, file: !679, line: 463, baseType: !683, size: 32, offset: 608)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2902, file: !679, line: 464, baseType: !1745, size: 128, offset: 640)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2902, file: !679, line: 465, baseType: !1747, size: 160, offset: 768)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2902, file: !679, line: 466, baseType: !1749, size: 160, offset: 928)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2902, file: !679, line: 467, baseType: !461, size: 32, offset: 1088)
!2925 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2926, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2927, splitDebugInlining: false, nameTableKind: None)
!2926 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2927 = !{!103, !102, !111, !1112, !2928, !170, !104}
!2928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2929, size: 32)
!2929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!2930 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2931, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2932, splitDebugInlining: false, nameTableKind: None)
!2931 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2932 = !{!2933}
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 370, baseType: !2935)
!2935 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 336, size: 1152, elements: !2936)
!2936 = !{!2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2935, file: !457, line: 338, baseType: !461, size: 32)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2935, file: !457, line: 339, baseType: !461, size: 32, offset: 32)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2935, file: !457, line: 340, baseType: !461, size: 32, offset: 64)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2935, file: !457, line: 341, baseType: !461, size: 32, offset: 96)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2935, file: !457, line: 342, baseType: !461, size: 32, offset: 128)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2935, file: !457, line: 343, baseType: !461, size: 32, offset: 160)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2935, file: !457, line: 344, baseType: !461, size: 32, offset: 192)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2935, file: !457, line: 345, baseType: !113, size: 32, offset: 224)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2935, file: !457, line: 346, baseType: !461, size: 32, offset: 256)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2935, file: !457, line: 347, baseType: !461, size: 32, offset: 288)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2935, file: !457, line: 348, baseType: !978, size: 64, offset: 320)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2935, file: !457, line: 349, baseType: !461, size: 32, offset: 384)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2935, file: !457, line: 350, baseType: !461, size: 32, offset: 416)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2935, file: !457, line: 351, baseType: !461, size: 32, offset: 448)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2935, file: !457, line: 352, baseType: !113, size: 32, offset: 480)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2935, file: !457, line: 353, baseType: !461, size: 32, offset: 512)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2935, file: !457, line: 354, baseType: !461, size: 32, offset: 544)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2935, file: !457, line: 355, baseType: !978, size: 64, offset: 576)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2935, file: !457, line: 356, baseType: !461, size: 32, offset: 640)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2935, file: !457, line: 357, baseType: !461, size: 32, offset: 672)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2935, file: !457, line: 358, baseType: !461, size: 32, offset: 704)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2935, file: !457, line: 359, baseType: !113, size: 32, offset: 736)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2935, file: !457, line: 360, baseType: !461, size: 32, offset: 768)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2935, file: !457, line: 361, baseType: !461, size: 32, offset: 800)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2935, file: !457, line: 362, baseType: !978, size: 64, offset: 832)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2935, file: !457, line: 363, baseType: !461, size: 32, offset: 896)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2935, file: !457, line: 364, baseType: !461, size: 32, offset: 928)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2935, file: !457, line: 365, baseType: !978, size: 64, offset: 960)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2935, file: !457, line: 366, baseType: !461, size: 32, offset: 1024)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2935, file: !457, line: 367, baseType: !461, size: 32, offset: 1056)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2935, file: !457, line: 368, baseType: !999, size: 32, offset: 1088)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2935, file: !457, line: 369, baseType: !461, size: 32, offset: 1120)
!2969 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2970, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2970 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2971 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2972, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2973, retainedTypes: !2989, splitDebugInlining: false, nameTableKind: None)
!2972 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!2973 = !{!2974, !2981, !2985}
!2974 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2975, line: 38, baseType: !32, size: 32, elements: !2976)
!2975 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2976 = !{!2977, !2978, !2979, !2980}
!2977 = !DIEnumerator(name: "HAL_OK", value: 0)
!2978 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2979 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2980 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2981 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !951, line: 184, baseType: !32, size: 32, elements: !2982)
!2982 = !{!2983, !2984}
!2983 = !DIEnumerator(name: "RESET", value: 0)
!2984 = !DIEnumerator(name: "SET", value: 1)
!2985 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !951, line: 190, baseType: !32, size: 32, elements: !2986)
!2986 = !{!2987, !2988}
!2987 = !DIEnumerator(name: "DISABLE", value: 0)
!2988 = !DIEnumerator(name: "ENABLE", value: 1)
!2989 = !{!104, !2990, !169, !113, !1589, !3026, !3032, !3043, !183, !3044, !114}
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 32)
!2991 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 370, baseType: !2992)
!2992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 336, size: 1152, elements: !2993)
!2993 = !{!2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2992, file: !457, line: 338, baseType: !461, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2992, file: !457, line: 339, baseType: !461, size: 32, offset: 32)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2992, file: !457, line: 340, baseType: !461, size: 32, offset: 64)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2992, file: !457, line: 341, baseType: !461, size: 32, offset: 96)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2992, file: !457, line: 342, baseType: !461, size: 32, offset: 128)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2992, file: !457, line: 343, baseType: !461, size: 32, offset: 160)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2992, file: !457, line: 344, baseType: !461, size: 32, offset: 192)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2992, file: !457, line: 345, baseType: !113, size: 32, offset: 224)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2992, file: !457, line: 346, baseType: !461, size: 32, offset: 256)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2992, file: !457, line: 347, baseType: !461, size: 32, offset: 288)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2992, file: !457, line: 348, baseType: !978, size: 64, offset: 320)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2992, file: !457, line: 349, baseType: !461, size: 32, offset: 384)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2992, file: !457, line: 350, baseType: !461, size: 32, offset: 416)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2992, file: !457, line: 351, baseType: !461, size: 32, offset: 448)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2992, file: !457, line: 352, baseType: !113, size: 32, offset: 480)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2992, file: !457, line: 353, baseType: !461, size: 32, offset: 512)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2992, file: !457, line: 354, baseType: !461, size: 32, offset: 544)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2992, file: !457, line: 355, baseType: !978, size: 64, offset: 576)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2992, file: !457, line: 356, baseType: !461, size: 32, offset: 640)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2992, file: !457, line: 357, baseType: !461, size: 32, offset: 672)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2992, file: !457, line: 358, baseType: !461, size: 32, offset: 704)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2992, file: !457, line: 359, baseType: !113, size: 32, offset: 736)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2992, file: !457, line: 360, baseType: !461, size: 32, offset: 768)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2992, file: !457, line: 361, baseType: !461, size: 32, offset: 800)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2992, file: !457, line: 362, baseType: !978, size: 64, offset: 832)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2992, file: !457, line: 363, baseType: !461, size: 32, offset: 896)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2992, file: !457, line: 364, baseType: !461, size: 32, offset: 928)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2992, file: !457, line: 365, baseType: !978, size: 64, offset: 960)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2992, file: !457, line: 366, baseType: !461, size: 32, offset: 1024)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2992, file: !457, line: 367, baseType: !461, size: 32, offset: 1056)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2992, file: !457, line: 368, baseType: !999, size: 32, offset: 1088)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2992, file: !457, line: 369, baseType: !461, size: 32, offset: 1120)
!3026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3027, size: 32)
!3027 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !457, line: 330, baseType: !3028)
!3028 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 326, size: 64, elements: !3029)
!3029 = !{!3030, !3031}
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3028, file: !457, line: 328, baseType: !461, size: 32)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3028, file: !457, line: 329, baseType: !461, size: 32, offset: 32)
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 32)
!3033 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !457, line: 259, baseType: !3034)
!3034 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 250, size: 224, elements: !3035)
!3035 = !{!3036, !3037, !3038, !3039, !3040, !3041, !3042}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3034, file: !457, line: 252, baseType: !461, size: 32)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3034, file: !457, line: 253, baseType: !461, size: 32, offset: 32)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3034, file: !457, line: 254, baseType: !461, size: 32, offset: 64)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3034, file: !457, line: 255, baseType: !461, size: 32, offset: 96)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3034, file: !457, line: 256, baseType: !461, size: 32, offset: 128)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3034, file: !457, line: 257, baseType: !461, size: 32, offset: 160)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3034, file: !457, line: 258, baseType: !461, size: 32, offset: 192)
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 32)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 32)
!3045 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !457, line: 276, baseType: !3046)
!3046 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 265, size: 320, elements: !3047)
!3047 = !{!3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3046, file: !457, line: 267, baseType: !461, size: 32)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3046, file: !457, line: 268, baseType: !461, size: 32, offset: 32)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3046, file: !457, line: 269, baseType: !461, size: 32, offset: 64)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3046, file: !457, line: 270, baseType: !461, size: 32, offset: 96)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3046, file: !457, line: 271, baseType: !461, size: 32, offset: 128)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3046, file: !457, line: 272, baseType: !461, size: 32, offset: 160)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3046, file: !457, line: 273, baseType: !461, size: 32, offset: 192)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3046, file: !457, line: 274, baseType: !461, size: 32, offset: 224)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3046, file: !457, line: 275, baseType: !1266, size: 64, offset: 256)
!3057 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3058, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3059, retainedTypes: !3060, splitDebugInlining: false, nameTableKind: None)
!3058 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!3059 = !{!950}
!3060 = !{!3061, !113, !3069, !3075, !3086}
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 32)
!3062 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !679, line: 770, baseType: !3063)
!3063 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !679, line: 764, size: 128, elements: !3064)
!3064 = !{!3065, !3066, !3067, !3068}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3063, file: !679, line: 766, baseType: !461, size: 32)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3063, file: !679, line: 767, baseType: !461, size: 32, offset: 32)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3063, file: !679, line: 768, baseType: !461, size: 32, offset: 64)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3063, file: !679, line: 769, baseType: !683, size: 32, offset: 96)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 32)
!3070 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !457, line: 330, baseType: !3071)
!3071 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 326, size: 64, elements: !3072)
!3072 = !{!3073, !3074}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3071, file: !457, line: 328, baseType: !461, size: 32)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3071, file: !457, line: 329, baseType: !461, size: 32, offset: 32)
!3075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3076, size: 32)
!3076 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !457, line: 259, baseType: !3077)
!3077 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 250, size: 224, elements: !3078)
!3078 = !{!3079, !3080, !3081, !3082, !3083, !3084, !3085}
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3077, file: !457, line: 252, baseType: !461, size: 32)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3077, file: !457, line: 253, baseType: !461, size: 32, offset: 32)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3077, file: !457, line: 254, baseType: !461, size: 32, offset: 64)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3077, file: !457, line: 255, baseType: !461, size: 32, offset: 96)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3077, file: !457, line: 256, baseType: !461, size: 32, offset: 128)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3077, file: !457, line: 257, baseType: !461, size: 32, offset: 160)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3077, file: !457, line: 258, baseType: !461, size: 32, offset: 192)
!3086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3087, size: 32)
!3087 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !457, line: 370, baseType: !3088)
!3088 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 336, size: 1152, elements: !3089)
!3089 = !{!3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121}
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3088, file: !457, line: 338, baseType: !461, size: 32)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3088, file: !457, line: 339, baseType: !461, size: 32, offset: 32)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3088, file: !457, line: 340, baseType: !461, size: 32, offset: 64)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3088, file: !457, line: 341, baseType: !461, size: 32, offset: 96)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3088, file: !457, line: 342, baseType: !461, size: 32, offset: 128)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3088, file: !457, line: 343, baseType: !461, size: 32, offset: 160)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3088, file: !457, line: 344, baseType: !461, size: 32, offset: 192)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3088, file: !457, line: 345, baseType: !113, size: 32, offset: 224)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3088, file: !457, line: 346, baseType: !461, size: 32, offset: 256)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3088, file: !457, line: 347, baseType: !461, size: 32, offset: 288)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3088, file: !457, line: 348, baseType: !978, size: 64, offset: 320)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3088, file: !457, line: 349, baseType: !461, size: 32, offset: 384)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3088, file: !457, line: 350, baseType: !461, size: 32, offset: 416)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3088, file: !457, line: 351, baseType: !461, size: 32, offset: 448)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3088, file: !457, line: 352, baseType: !113, size: 32, offset: 480)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3088, file: !457, line: 353, baseType: !461, size: 32, offset: 512)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3088, file: !457, line: 354, baseType: !461, size: 32, offset: 544)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3088, file: !457, line: 355, baseType: !978, size: 64, offset: 576)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3088, file: !457, line: 356, baseType: !461, size: 32, offset: 640)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3088, file: !457, line: 357, baseType: !461, size: 32, offset: 672)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3088, file: !457, line: 358, baseType: !461, size: 32, offset: 704)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3088, file: !457, line: 359, baseType: !113, size: 32, offset: 736)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3088, file: !457, line: 360, baseType: !461, size: 32, offset: 768)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3088, file: !457, line: 361, baseType: !461, size: 32, offset: 800)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3088, file: !457, line: 362, baseType: !978, size: 64, offset: 832)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3088, file: !457, line: 363, baseType: !461, size: 32, offset: 896)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3088, file: !457, line: 364, baseType: !461, size: 32, offset: 928)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3088, file: !457, line: 365, baseType: !978, size: 64, offset: 960)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3088, file: !457, line: 366, baseType: !461, size: 32, offset: 1024)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3088, file: !457, line: 367, baseType: !461, size: 32, offset: 1056)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3088, file: !457, line: 368, baseType: !999, size: 32, offset: 1088)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3088, file: !457, line: 369, baseType: !461, size: 32, offset: 1120)
!3122 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3123, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3124, splitDebugInlining: false, nameTableKind: None)
!3123 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!3124 = !{!104, !111}
!3125 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3126, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3127, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!3126 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!3127 = !{!3128, !3135, !2626, !30}
!3128 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3129, line: 14, baseType: !32, size: 32, elements: !3130)
!3129 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3130 = !{!3131, !3132, !3133, !3134}
!3131 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3132 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3133 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3134 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3129, line: 42, baseType: !32, size: 32, elements: !3136)
!3136 = !{!3137, !3138, !3139, !3140, !3141, !3142}
!3137 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3138 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3139 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3140 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3141 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3142 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3143 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3144, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!3144 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!3145 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3146, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3147, splitDebugInlining: false, nameTableKind: None)
!3146 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!3147 = !{!104, !105, !3148, !3163}
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 32)
!3149 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !3150)
!3150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !3151)
!3151 = !{!3152, !3158}
!3152 = !DIDerivedType(tag: DW_TAG_member, scope: !3150, file: !137, line: 38, baseType: !3153, size: 32)
!3153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3150, file: !137, line: 38, size: 32, elements: !3154)
!3154 = !{!3155, !3157}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3153, file: !137, line: 39, baseType: !3156, size: 32)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3150, size: 32)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3153, file: !137, line: 40, baseType: !3156, size: 32)
!3158 = !DIDerivedType(tag: DW_TAG_member, scope: !3150, file: !137, line: 42, baseType: !3159, size: 32, offset: 32)
!3159 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3150, file: !137, line: 42, size: 32, elements: !3160)
!3160 = !{!3161, !3162}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3159, file: !137, line: 43, baseType: !3156, size: 32)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3159, file: !137, line: 44, baseType: !3156, size: 32)
!3163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3164, size: 32)
!3164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !3165)
!3165 = !{!3166, !3210, !3222, !3223, !3224, !3225, !3231, !3246}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3164, file: !127, line: 247, baseType: !3167, size: 384)
!3167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !3168)
!3168 = !{!3169, !3179, !3186, !3187, !3188, !3197, !3198, !3199}
!3169 = !DIDerivedType(tag: DW_TAG_member, scope: !3167, file: !127, line: 60, baseType: !3170, size: 64)
!3170 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3167, file: !127, line: 60, size: 64, elements: !3171)
!3171 = !{!3172, !3173}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3170, file: !127, line: 61, baseType: !3149, size: 64)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3170, file: !127, line: 62, baseType: !3174, size: 64)
!3174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !3175)
!3175 = !{!3176}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3174, file: !153, line: 50, baseType: !3177, size: 64)
!3177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3178, size: 64, elements: !158)
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 32)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3167, file: !127, line: 68, baseType: !3180, size: 32, offset: 64)
!3180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3181, size: 32)
!3181 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !3182)
!3182 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !3183)
!3183 = !{!3184}
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3182, file: !163, line: 232, baseType: !3185, size: 64)
!3185 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !3150)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3167, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3167, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!3188 = !DIDerivedType(tag: DW_TAG_member, scope: !3167, file: !127, line: 90, baseType: !3189, size: 16, offset: 112)
!3189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3167, file: !127, line: 90, size: 16, elements: !3190)
!3190 = !{!3191, !3196}
!3191 = !DIDerivedType(tag: DW_TAG_member, scope: !3189, file: !127, line: 91, baseType: !3192, size: 16)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !127, line: 91, size: 16, elements: !3193)
!3193 = !{!3194, !3195}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3192, file: !127, line: 96, baseType: !179, size: 8)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3192, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3189, file: !127, line: 100, baseType: !183, size: 16)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3167, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3167, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3167, file: !127, line: 131, baseType: !3200, size: 192, offset: 192)
!3200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !3201)
!3201 = !{!3202, !3203, !3209}
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3200, file: !163, line: 245, baseType: !3149, size: 64)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3200, file: !163, line: 246, baseType: !3204, size: 32, offset: 64)
!3204 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !3205)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 32)
!3206 = !DISubroutineType(types: !3207)
!3207 = !{null, !3208}
!3208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3200, size: 32)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3200, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3164, file: !127, line: 250, baseType: !3211, size: 288, offset: 384)
!3211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !3212)
!3212 = !{!3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3211, file: !200, line: 26, baseType: !113, size: 32)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3211, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3211, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3211, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3211, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3211, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3211, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3211, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3211, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3164, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3164, file: !127, line: 256, baseType: !3181, size: 64, offset: 704)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3164, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3164, file: !127, line: 300, baseType: !3226, size: 96, offset: 800)
!3226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !3227)
!3227 = !{!3228, !3229, !3230}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3226, file: !127, line: 153, baseType: !22, size: 32)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3226, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3226, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3164, file: !127, line: 325, baseType: !3232, size: 32, offset: 896)
!3232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3233, size: 32)
!3233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !3234)
!3234 = !{!3235, !3241, !3242}
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3233, file: !122, line: 5074, baseType: !3236, size: 96)
!3236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !3237)
!3237 = !{!3238, !3239, !3240}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3236, file: !226, line: 57, baseType: !229, size: 32)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3236, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3236, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3233, file: !122, line: 5075, baseType: !3181, size: 64, offset: 96)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3233, file: !122, line: 5076, baseType: !3243, size: 32, offset: 160)
!3243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !3244)
!3244 = !{!3245}
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3243, file: !236, line: 52, baseType: !22, size: 32)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3164, file: !127, line: 343, baseType: !3247, size: 64, offset: 928)
!3247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !3248)
!3248 = !{!3249, !3250}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3247, file: !200, line: 63, baseType: !113, size: 32)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3247, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!3251 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3252, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3253, splitDebugInlining: false, nameTableKind: None)
!3252 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!3253 = !{!22, !104, !105}
!3254 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3255, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !444, splitDebugInlining: false, nameTableKind: None)
!3255 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!3256 = !{!"Ubuntu clang version 14.0.6"}
!3257 = !{i32 7, !"Dwarf Version", i32 4}
!3258 = !{i32 2, !"Debug Info Version", i32 3}
!3259 = !{i32 1, !"wchar_size", i32 4}
!3260 = !{i32 1, !"min_enum_size", i32 4}
!3261 = !{i32 1, !"branch-target-enforcement", i32 0}
!3262 = !{i32 1, !"sign-return-address", i32 0}
!3263 = !{i32 1, !"sign-return-address-all", i32 0}
!3264 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3265 = !{i32 7, !"frame-pointer", i32 2}
!3266 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3267, file: !3267, line: 26, type: !266, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !397)
!3267 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3268 = !DILocation(line: 28, column: 1, scope: !3266)
!3269 = !{i64 2154351422, i64 2154351442, i64 2154351505}
!3270 = !DILocation(line: 29, column: 1, scope: !3266)
!3271 = !{i64 2154351837, i64 2154351857, i64 2154351920}
!3272 = !DILocation(line: 30, column: 1, scope: !3266)
!3273 = !{i64 2154352256, i64 2154352276, i64 2154352339}
!3274 = !DILocation(line: 31, column: 1, scope: !3266)
!3275 = !{i64 2154352675, i64 2154352695, i64 2154352758}
!3276 = !DILocation(line: 33, column: 1, scope: !3266)
!3277 = !{i64 2154352967, i64 2154352987, i64 2154353050}
!3278 = !DILocation(line: 35, column: 1, scope: !3266)
!3279 = !{i64 2154353292, i64 2154353312, i64 2154353375}
!3280 = !DILocation(line: 50, column: 1, scope: !3266)
!3281 = !{i64 2154353719, i64 2154353739, i64 2154353802}
!3282 = !DILocation(line: 54, column: 1, scope: !3266)
!3283 = !{i64 2154354158, i64 2154354178, i64 2154354241}
!3284 = !DILocation(line: 61, column: 1, scope: !3266)
!3285 = !{i64 2154354475, i64 2154354495, i64 2154354558}
!3286 = !DILocation(line: 63, column: 1, scope: !3266)
!3287 = !{i64 2154354855, i64 2154354875, i64 2154354938}
!3288 = !DILocation(line: 64, column: 1, scope: !3266)
!3289 = !{i64 2154355377, i64 2154355397, i64 2154355460}
!3290 = !DILocation(line: 65, column: 1, scope: !3266)
!3291 = !{i64 2154355875, i64 2154355895, i64 2154355958}
!3292 = !DILocation(line: 66, column: 1, scope: !3266)
!3293 = !{i64 2154356357, i64 2154356377, i64 2154356440}
!3294 = !DILocation(line: 67, column: 1, scope: !3266)
!3295 = !{i64 2154356864, i64 2154356884, i64 2154356947}
!3296 = !DILocation(line: 68, column: 1, scope: !3266)
!3297 = !{i64 2154357352, i64 2154357372, i64 2154357435}
!3298 = !DILocation(line: 70, column: 1, scope: !3266)
!3299 = !{i64 2154361881, i64 2154361901, i64 2154361964}
!3300 = !DILocation(line: 71, column: 1, scope: !3266)
!3301 = !{i64 2154362323, i64 2154362343, i64 2154362406}
!3302 = !DILocation(line: 72, column: 1, scope: !3266)
!3303 = !{i64 2154362781, i64 2154362801, i64 2154362864}
!3304 = !DILocation(line: 79, column: 1, scope: !3266)
!3305 = !{i64 2154363235, i64 2154363255, i64 2154363318}
!3306 = !DILocation(line: 80, column: 1, scope: !3266)
!3307 = !{i64 2154363746, i64 2154363766, i64 2154363829}
!3308 = !DILocation(line: 82, column: 1, scope: !3266)
!3309 = !{i64 2154364237, i64 2154364257, i64 2154364320}
!3310 = !DILocation(line: 97, column: 1, scope: !3266)
!3311 = !{i64 2154364574, i64 2154364594, i64 2154364657}
!3312 = !DILocation(line: 99, column: 1, scope: !3266)
!3313 = !{i64 2154364792, i64 2154364812, i64 2154364875}
!3314 = !DILocation(line: 102, column: 1, scope: !3266)
!3315 = !{i64 2154365049, i64 2154365069, i64 2154365132}
!3316 = !DILocation(line: 105, column: 1, scope: !3266)
!3317 = !{i64 2154365289, i64 2154365309, i64 2154365372}
!3318 = !DILocation(line: 115, column: 1, scope: !3266)
!3319 = !{i64 2154365628, i64 2154365648, i64 2154365711}
!3320 = !DILocation(line: 118, column: 1, scope: !3266)
!3321 = !{i64 2154365972, i64 2154365992, i64 2154366055}
!3322 = !DILocation(line: 32, column: 1, scope: !3323)
!3323 = !DILexicalBlockFile(scope: !3266, file: !3324, discriminator: 0)
!3324 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3325 = !{i64 2154366328, i64 2154366348, i64 2154366411}
!3326 = !DILocation(line: 33, column: 1, scope: !3323)
!3327 = !{i64 2154366840, i64 2154366860, i64 2154366923}
!3328 = !DILocation(line: 53, column: 1, scope: !3323)
!3329 = !{i64 2154367348, i64 2154367368, i64 2154367431}
!3330 = !DILocation(line: 54, column: 1, scope: !3323)
!3331 = !{i64 2154367766, i64 2154367786, i64 2154367849}
!3332 = !DILocation(line: 55, column: 1, scope: !3323)
!3333 = !{i64 2154368184, i64 2154368204, i64 2154368267}
!3334 = !DILocation(line: 56, column: 1, scope: !3323)
!3335 = !{i64 2154368602, i64 2154368622, i64 2154368685}
!3336 = !DILocation(line: 57, column: 1, scope: !3323)
!3337 = !{i64 2154369020, i64 2154369040, i64 2154369103}
!3338 = !DILocation(line: 58, column: 1, scope: !3323)
!3339 = !{i64 2154369438, i64 2154369458, i64 2154369521}
!3340 = !DILocation(line: 59, column: 1, scope: !3323)
!3341 = !{i64 2154369856, i64 2154369876, i64 2154369939}
!3342 = !DILocation(line: 60, column: 1, scope: !3323)
!3343 = !{i64 2154370280, i64 2154370300, i64 2154370363}
!3344 = !DILocation(line: 61, column: 1, scope: !3323)
!3345 = !{i64 2154370597, i64 2154370617, i64 2154370680}
!3346 = !DILocation(line: 70, column: 1, scope: !3323)
!3347 = !{i64 2154370826, i64 2154370846, i64 2154370909}
!3348 = !DILocation(line: 72, column: 1, scope: !3323)
!3349 = !{i64 2154371158, i64 2154371178, i64 2154371241}
!3350 = !DILocation(line: 73, column: 1, scope: !3323)
!3351 = !{i64 2154375669, i64 2154375689, i64 2154375752}
!3352 = !DILocation(line: 74, column: 1, scope: !3323)
!3353 = !{i64 2154376119, i64 2154376139, i64 2154376202}
!3354 = !DILocation(line: 75, column: 1, scope: !3323)
!3355 = !{i64 2154376569, i64 2154376589, i64 2154376652}
!3356 = !DILocation(line: 76, column: 1, scope: !3323)
!3357 = !{i64 2154377019, i64 2154377039, i64 2154377102}
!3358 = !DILocation(line: 77, column: 1, scope: !3323)
!3359 = !{i64 2154377469, i64 2154377489, i64 2154377552}
!3360 = !DILocation(line: 78, column: 1, scope: !3323)
!3361 = !{i64 2154377919, i64 2154377939, i64 2154378002}
!3362 = !DILocation(line: 79, column: 1, scope: !3323)
!3363 = !{i64 2154378369, i64 2154378389, i64 2154378452}
!3364 = !DILocation(line: 80, column: 1, scope: !3323)
!3365 = !{i64 2154378822, i64 2154378842, i64 2154378905}
!3366 = !DILocation(line: 84, column: 1, scope: !3323)
!3367 = !{i64 2154379154, i64 2154379174, i64 2154379237}
!3368 = !DILocation(line: 91, column: 1, scope: !3323)
!3369 = !{i64 2154379551, i64 2154379571, i64 2154379634}
!3370 = !DILocation(line: 93, column: 1, scope: !3323)
!3371 = !{i64 2154379918, i64 2154379938, i64 2154380001}
!3372 = !DILocation(line: 106, column: 1, scope: !3323)
!3373 = !{i64 2154380188, i64 2154380208, i64 2154380271}
!3374 = !DILocation(line: 11, column: 1, scope: !3375)
!3375 = !DILexicalBlockFile(scope: !3266, file: !3376, discriminator: 0)
!3376 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3377 = distinct !DISubprogram(name: "metairq_fn", scope: !120, file: !120, line: 48, type: !256, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3378)
!3378 = !{!3379, !3380, !3381, !3382, !3384}
!3379 = !DILocalVariable(name: "p1", arg: 1, scope: !3377, file: !120, line: 48, type: !104)
!3380 = !DILocalVariable(name: "p2", arg: 2, scope: !3377, file: !120, line: 48, type: !104)
!3381 = !DILocalVariable(name: "p3", arg: 3, scope: !3377, file: !120, line: 48, type: !104)
!3382 = !DILocalVariable(name: "m", scope: !3383, file: !120, line: 59, type: !303)
!3383 = distinct !DILexicalBlock(scope: !3377, file: !120, line: 54, column: 15)
!3384 = !DILocalVariable(name: "ret", scope: !3383, file: !120, line: 64, type: !105)
!3385 = !DILocation(line: 0, scope: !3377)
!3386 = !DILocation(line: 54, column: 2, scope: !3377)
!3387 = !DILocation(line: 59, column: 3, scope: !3383)
!3388 = !DILocation(line: 59, column: 14, scope: !3383)
!3389 = !DILocation(line: 61, column: 3, scope: !3383)
!3390 = !DILocation(line: 62, column: 23, scope: !3383)
!3391 = !DILocation(line: 62, column: 44, scope: !3383)
!3392 = !DILocation(line: 62, column: 40, scope: !3383)
!3393 = !DILocation(line: 62, column: 21, scope: !3383)
!3394 = !DILocation(line: 64, column: 35, scope: !3383)
!3395 = !DILocation(line: 64, column: 43, scope: !3383)
!3396 = !DILocation(line: 64, column: 13, scope: !3383)
!3397 = !DILocation(line: 0, scope: !3383)
!3398 = !DILocation(line: 66, column: 7, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3383, file: !120, line: 66, column: 7)
!3400 = !DILocation(line: 66, column: 7, scope: !3383)
!3401 = !DILocation(line: 67, column: 4, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3403, file: !120, line: 67, column: 4)
!3403 = distinct !DILexicalBlock(scope: !3404, file: !120, line: 67, column: 4)
!3404 = distinct !DILexicalBlock(scope: !3405, file: !120, line: 67, column: 4)
!3405 = distinct !DILexicalBlock(scope: !3406, file: !120, line: 67, column: 4)
!3406 = distinct !DILexicalBlock(scope: !3399, file: !120, line: 66, column: 12)
!3407 = !DILocation(line: 69, column: 3, scope: !3406)
!3408 = !DILocation(line: 70, column: 2, scope: !3377)
!3409 = distinct !{!3409, !3386, !3408}
!3410 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3411 = !DILocation(line: 1677, column: 9, scope: !3410)
!3412 = !DILocation(line: 1677, column: 2, scope: !3410)
!3413 = distinct !DISubprogram(name: "k_msgq_put", scope: !3414, file: !3414, line: 1129, type: !3415, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3422)
!3414 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!3415 = !DISubroutineType(types: !3416)
!3416 = !{!105, !3417, !13, !3418}
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 32)
!3418 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !3419)
!3419 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !3420)
!3420 = !{!3421}
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3419, file: !108, line: 66, baseType: !107, size: 64)
!3422 = !{!3423, !3424, !3425}
!3423 = !DILocalVariable(name: "msgq", arg: 1, scope: !3413, file: !3414, line: 1129, type: !3417)
!3424 = !DILocalVariable(name: "data", arg: 2, scope: !3413, file: !3414, line: 1129, type: !13)
!3425 = !DILocalVariable(name: "timeout", arg: 3, scope: !3413, file: !3414, line: 1129, type: !3418)
!3426 = !DILocation(line: 0, scope: !3413)
!3427 = !DILocation(line: 1139, column: 2, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3413, file: !3414, line: 1139, column: 2)
!3429 = !{i64 2154078447}
!3430 = !DILocation(line: 1140, column: 9, scope: !3413)
!3431 = !DILocation(line: 1140, column: 2, scope: !3413)
!3432 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3433, file: !3433, line: 175, type: !3434, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3436)
!3433 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3434 = !DISubroutineType(types: !3435)
!3435 = !{!103, !105}
!3436 = !{!3437}
!3437 = !DILocalVariable(name: "level", arg: 1, scope: !3432, file: !3433, line: 175, type: !105)
!3438 = !DILocation(line: 0, scope: !3432)
!3439 = !DILocation(line: 177, column: 2, scope: !3432)
!3440 = !DILocation(line: 189, column: 1, scope: !3432)
!3441 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3442, file: !3442, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3442 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3443 = !DILocation(line: 26, column: 9, scope: !3441)
!3444 = !DILocation(line: 26, column: 2, scope: !3441)
!3445 = distinct !DISubprogram(name: "main", scope: !120, file: !120, line: 226, type: !266, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3446)
!3446 = !{!3447, !3449}
!3447 = !DILocalVariable(name: "i", scope: !3448, file: !120, line: 228, type: !106)
!3448 = distinct !DILexicalBlock(scope: !3445, file: !120, line: 228, column: 2)
!3449 = !DILocalVariable(name: "prio", scope: !3450, file: !120, line: 235, type: !105)
!3450 = distinct !DILexicalBlock(scope: !3451, file: !120, line: 228, column: 41)
!3451 = distinct !DILexicalBlock(scope: !3448, file: !120, line: 228, column: 2)
!3452 = !DILocation(line: 0, scope: !3448)
!3453 = !DILocation(line: 228, column: 2, scope: !3448)
!3454 = !DILocation(line: 246, column: 2, scope: !3445)
!3455 = !DILocation(line: 247, column: 1, scope: !3445)
!3456 = !DILocation(line: 235, column: 31, scope: !3450)
!3457 = !DILocation(line: 0, scope: !3450)
!3458 = !DILocation(line: 237, column: 27, scope: !3450)
!3459 = !DILocation(line: 237, column: 41, scope: !3450)
!3460 = !DILocation(line: 237, column: 33, scope: !3450)
!3461 = !DILocation(line: 237, column: 3, scope: !3450)
!3462 = !DILocation(line: 240, column: 31, scope: !3450)
!3463 = !DILocation(line: 241, column: 5, scope: !3450)
!3464 = !DILocation(line: 242, column: 16, scope: !3450)
!3465 = !DILocation(line: 240, column: 3, scope: !3450)
!3466 = !DILocation(line: 228, column: 37, scope: !3451)
!3467 = !DILocation(line: 228, column: 21, scope: !3451)
!3468 = distinct !{!3468, !3453, !3469}
!3469 = !DILocation(line: 244, column: 2, scope: !3448)
!3470 = distinct !DISubprogram(name: "k_thread_create", scope: !3414, file: !3414, line: 24, type: !3471, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3473)
!3471 = !DISubroutineType(types: !3472)
!3472 = !{!274, !125, !245, !111, !254, !104, !104, !104, !105, !113, !3418}
!3473 = !{!3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483}
!3474 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3470, file: !3414, line: 24, type: !125)
!3475 = !DILocalVariable(name: "stack", arg: 2, scope: !3470, file: !3414, line: 24, type: !245)
!3476 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3470, file: !3414, line: 24, type: !111)
!3477 = !DILocalVariable(name: "entry", arg: 4, scope: !3470, file: !3414, line: 24, type: !254)
!3478 = !DILocalVariable(name: "p1", arg: 5, scope: !3470, file: !3414, line: 24, type: !104)
!3479 = !DILocalVariable(name: "p2", arg: 6, scope: !3470, file: !3414, line: 24, type: !104)
!3480 = !DILocalVariable(name: "p3", arg: 7, scope: !3470, file: !3414, line: 24, type: !104)
!3481 = !DILocalVariable(name: "prio", arg: 8, scope: !3470, file: !3414, line: 24, type: !105)
!3482 = !DILocalVariable(name: "options", arg: 9, scope: !3470, file: !3414, line: 24, type: !113)
!3483 = !DILocalVariable(name: "delay", arg: 10, scope: !3470, file: !3414, line: 24, type: !3418)
!3484 = !DILocation(line: 0, scope: !3470)
!3485 = !DILocation(line: 49, column: 2, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3470, file: !3414, line: 49, column: 2)
!3487 = !{i64 2154074059}
!3488 = !DILocation(line: 50, column: 9, scope: !3470)
!3489 = !DILocation(line: 50, column: 2, scope: !3470)
!3490 = distinct !DISubprogram(name: "thread_fn", scope: !120, file: !120, line: 177, type: !256, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3491)
!3491 = !{!3492, !3493, !3494, !3495, !3496, !3497, !3499, !3500, !3504}
!3492 = !DILocalVariable(name: "p1", arg: 1, scope: !3490, file: !120, line: 177, type: !104)
!3493 = !DILocalVariable(name: "p2", arg: 2, scope: !3490, file: !120, line: 177, type: !104)
!3494 = !DILocalVariable(name: "p3", arg: 3, scope: !3490, file: !120, line: 177, type: !104)
!3495 = !DILocalVariable(name: "id", scope: !3490, file: !120, line: 181, type: !105)
!3496 = !DILocalVariable(name: "m", scope: !3490, file: !120, line: 182, type: !303)
!3497 = !DILocalVariable(name: "ret", scope: !3498, file: !120, line: 188, type: !105)
!3498 = distinct !DILexicalBlock(scope: !3490, file: !120, line: 187, column: 15)
!3499 = !DILocalVariable(name: "start", scope: !3498, file: !120, line: 189, type: !113)
!3500 = !DILocalVariable(name: "i", scope: !3501, file: !120, line: 202, type: !3503)
!3501 = distinct !DILexicalBlock(scope: !3502, file: !120, line: 202, column: 4)
!3502 = distinct !DILexicalBlock(scope: !3498, file: !120, line: 201, column: 49)
!3503 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !105)
!3504 = !DILocalVariable(name: "dur", scope: !3498, file: !120, line: 206, type: !113)
!3505 = !DILocation(line: 0, scope: !3490)
!3506 = !DILocation(line: 181, column: 11, scope: !3490)
!3507 = !DILocation(line: 182, column: 2, scope: !3490)
!3508 = !DILocation(line: 182, column: 13, scope: !3490)
!3509 = !DILocation(line: 184, column: 2, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3511, file: !120, line: 184, column: 2)
!3511 = distinct !DILexicalBlock(scope: !3512, file: !120, line: 184, column: 2)
!3512 = distinct !DILexicalBlock(scope: !3513, file: !120, line: 184, column: 2)
!3513 = distinct !DILexicalBlock(scope: !3490, file: !120, line: 184, column: 2)
!3514 = !DILocation(line: 188, column: 13, scope: !3498)
!3515 = !DILocation(line: 0, scope: !3498)
!3516 = !DILocation(line: 189, column: 20, scope: !3498)
!3517 = !DILocation(line: 191, column: 3, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3519, file: !120, line: 191, column: 3)
!3519 = distinct !DILexicalBlock(scope: !3498, file: !120, line: 191, column: 3)
!3520 = !DILocation(line: 191, column: 3, scope: !3519)
!3521 = !DILocation(line: 201, column: 10, scope: !3498)
!3522 = !DILocation(line: 201, column: 27, scope: !3498)
!3523 = !DILocation(line: 201, column: 39, scope: !3498)
!3524 = !DILocation(line: 201, column: 35, scope: !3498)
!3525 = !DILocation(line: 201, column: 3, scope: !3498)
!3526 = !DILocation(line: 191, column: 3, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3518, file: !120, line: 191, column: 3)
!3528 = !DILocation(line: 202, column: 9, scope: !3501)
!3529 = !DILocation(line: 202, column: 22, scope: !3501)
!3530 = !DILocation(line: 202, column: 29, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3501, file: !120, line: 202, column: 4)
!3532 = !DILocation(line: 202, column: 31, scope: !3531)
!3533 = !DILocation(line: 202, column: 4, scope: !3501)
!3534 = !DILocation(line: 202, column: 4, scope: !3531)
!3535 = distinct !{!3535, !3525, !3536}
!3536 = !DILocation(line: 204, column: 3, scope: !3498)
!3537 = !DILocation(line: 202, column: 39, scope: !3531)
!3538 = distinct !{!3538, !3533, !3539}
!3539 = !DILocation(line: 203, column: 4, scope: !3501)
!3540 = !DILocation(line: 206, column: 18, scope: !3498)
!3541 = !DILocation(line: 206, column: 35, scope: !3498)
!3542 = !DILocation(line: 216, column: 3, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3544, file: !120, line: 216, column: 3)
!3544 = distinct !DILexicalBlock(scope: !3545, file: !120, line: 216, column: 3)
!3545 = distinct !DILexicalBlock(scope: !3546, file: !120, line: 216, column: 3)
!3546 = distinct !DILexicalBlock(scope: !3498, file: !120, line: 216, column: 3)
!3547 = !DILocation(line: 222, column: 34, scope: !3498)
!3548 = !DILocation(line: 222, column: 30, scope: !3498)
!3549 = !DILocation(line: 222, column: 3, scope: !3498)
!3550 = distinct !{!3550, !3551, !3552}
!3551 = !DILocation(line: 187, column: 2, scope: !3490)
!3552 = !DILocation(line: 223, column: 2, scope: !3490)
!3553 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !3554, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3554 = !DISubroutineType(types: !3555)
!3555 = !{!274}
!3556 = !DILocation(line: 535, column: 9, scope: !3553)
!3557 = !DILocation(line: 535, column: 2, scope: !3553)
!3558 = distinct !DISubprogram(name: "k_thread_priority_get", scope: !3414, file: !3414, line: 258, type: !3559, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3561)
!3559 = !DISubroutineType(types: !3560)
!3560 = !{!105, !274}
!3561 = !{!3562}
!3562 = !DILocalVariable(name: "thread", arg: 1, scope: !3558, file: !3414, line: 258, type: !274)
!3563 = !DILocation(line: 0, scope: !3558)
!3564 = !DILocation(line: 266, column: 2, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3558, file: !3414, line: 266, column: 2)
!3566 = !{i64 2154074943}
!3567 = !DILocation(line: 267, column: 9, scope: !3558)
!3568 = !DILocation(line: 267, column: 2, scope: !3558)
!3569 = distinct !DISubprogram(name: "k_msgq_get", scope: !3414, file: !3414, line: 1147, type: !3570, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3572)
!3570 = !DISubroutineType(types: !3571)
!3571 = !{!105, !3417, !104, !3418}
!3572 = !{!3573, !3574, !3575}
!3573 = !DILocalVariable(name: "msgq", arg: 1, scope: !3569, file: !3414, line: 1147, type: !3417)
!3574 = !DILocalVariable(name: "data", arg: 2, scope: !3569, file: !3414, line: 1147, type: !104)
!3575 = !DILocalVariable(name: "timeout", arg: 3, scope: !3569, file: !3414, line: 1147, type: !3418)
!3576 = !DILocation(line: 0, scope: !3569)
!3577 = !DILocation(line: 1157, column: 2, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3569, file: !3414, line: 1157, column: 2)
!3579 = !{i64 2154078515}
!3580 = !DILocation(line: 1158, column: 9, scope: !3569)
!3581 = !DILocation(line: 1158, column: 2, scope: !3569)
!3582 = distinct !DISubprogram(name: "record_latencies", scope: !120, file: !120, line: 111, type: !3583, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3586)
!3583 = !DISubroutineType(types: !3584)
!3584 = !{null, !3585, !113}
!3585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!3586 = !{!3587, !3588, !3589, !3590, !3591, !3594, !3595, !3596, !3597, !3598}
!3587 = !DILocalVariable(name: "m", arg: 1, scope: !3582, file: !120, line: 111, type: !3585)
!3588 = !DILocalVariable(name: "latency", arg: 2, scope: !3582, file: !120, line: 111, type: !113)
!3589 = !DILocalVariable(name: "t", scope: !3582, file: !120, line: 129, type: !105)
!3590 = !DILocalVariable(name: "lidx", scope: !3582, file: !120, line: 130, type: !105)
!3591 = !DILocalVariable(name: "hi", scope: !3592, file: !120, line: 145, type: !113)
!3592 = distinct !DILexicalBlock(scope: !3593, file: !120, line: 144, column: 32)
!3593 = distinct !DILexicalBlock(scope: !3582, file: !120, line: 144, column: 6)
!3594 = !DILocalVariable(name: "lo", scope: !3592, file: !120, line: 145, type: !113)
!3595 = !DILocalVariable(name: "mean", scope: !3592, file: !120, line: 145, type: !113)
!3596 = !DILocalVariable(name: "stdev", scope: !3592, file: !120, line: 145, type: !113)
!3597 = !DILocalVariable(name: "ret", scope: !3592, file: !120, line: 145, type: !113)
!3598 = !DILocalVariable(name: "i", scope: !3599, file: !120, line: 159, type: !105)
!3599 = distinct !DILexicalBlock(scope: !3592, file: !120, line: 159, column: 3)
!3600 = !DILocation(line: 0, scope: !3582)
!3601 = !DILocation(line: 125, column: 9, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3582, file: !120, line: 125, column: 6)
!3603 = !DILocation(line: 125, column: 13, scope: !3602)
!3604 = !DILocation(line: 125, column: 6, scope: !3582)
!3605 = !DILocation(line: 129, column: 13, scope: !3582)
!3606 = !DILocation(line: 130, column: 30, scope: !3582)
!3607 = !DILocation(line: 130, column: 34, scope: !3582)
!3608 = !DILocation(line: 132, column: 11, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3582, file: !120, line: 132, column: 6)
!3610 = !DILocation(line: 132, column: 6, scope: !3582)
!3611 = !DILocation(line: 133, column: 3, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3609, file: !120, line: 132, column: 53)
!3613 = !DILocation(line: 133, column: 36, scope: !3612)
!3614 = !DILocation(line: 134, column: 2, scope: !3612)
!3615 = !DILocation(line: 136, column: 57, scope: !3582)
!3616 = !DILocation(line: 136, column: 23, scope: !3582)
!3617 = !DILocation(line: 136, column: 2, scope: !3582)
!3618 = !DILocation(line: 136, column: 52, scope: !3582)
!3619 = !DILocation(line: 144, column: 9, scope: !3593)
!3620 = !DILocation(line: 144, column: 13, scope: !3593)
!3621 = !DILocation(line: 144, column: 6, scope: !3582)
!3622 = !DILocation(line: 145, column: 3, scope: !3592)
!3623 = !DILocation(line: 147, column: 9, scope: !3592)
!3624 = !DILocation(line: 0, scope: !3592)
!3625 = !DILocation(line: 148, column: 3, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3627, file: !120, line: 148, column: 3)
!3627 = distinct !DILexicalBlock(scope: !3592, file: !120, line: 148, column: 3)
!3628 = !DILocation(line: 148, column: 3, scope: !3627)
!3629 = !DILocation(line: 148, column: 3, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3626, file: !120, line: 148, column: 3)
!3631 = !DILocation(line: 149, column: 3, scope: !3592)
!3632 = !DILocation(line: 151, column: 42, scope: !3592)
!3633 = !DILocation(line: 151, column: 3, scope: !3592)
!3634 = !DILocation(line: 154, column: 3, scope: !3635)
!3635 = distinct !DILexicalBlock(scope: !3636, file: !120, line: 154, column: 3)
!3636 = distinct !DILexicalBlock(scope: !3637, file: !120, line: 154, column: 3)
!3637 = distinct !DILexicalBlock(scope: !3638, file: !120, line: 154, column: 3)
!3638 = distinct !DILexicalBlock(scope: !3592, file: !120, line: 154, column: 3)
!3639 = !DILocation(line: 155, column: 3, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3641, file: !120, line: 155, column: 3)
!3641 = distinct !DILexicalBlock(scope: !3642, file: !120, line: 155, column: 3)
!3642 = distinct !DILexicalBlock(scope: !3643, file: !120, line: 155, column: 3)
!3643 = distinct !DILexicalBlock(scope: !3592, file: !120, line: 155, column: 3)
!3644 = !DILocation(line: 156, column: 3, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3646, file: !120, line: 156, column: 3)
!3646 = distinct !DILexicalBlock(scope: !3647, file: !120, line: 156, column: 3)
!3647 = distinct !DILexicalBlock(scope: !3648, file: !120, line: 156, column: 3)
!3648 = distinct !DILexicalBlock(scope: !3592, file: !120, line: 156, column: 3)
!3649 = !DILocation(line: 0, scope: !3599)
!3650 = !DILocation(line: 159, column: 3, scope: !3599)
!3651 = !DILocation(line: 173, column: 3, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3653, file: !120, line: 173, column: 3)
!3653 = distinct !DILexicalBlock(scope: !3654, file: !120, line: 173, column: 3)
!3654 = distinct !DILexicalBlock(scope: !3655, file: !120, line: 173, column: 3)
!3655 = distinct !DILexicalBlock(scope: !3592, file: !120, line: 173, column: 3)
!3656 = !DILocation(line: 174, column: 2, scope: !3593)
!3657 = !DILocation(line: 174, column: 2, scope: !3592)
!3658 = !DILocation(line: 160, column: 25, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3660, file: !120, line: 160, column: 8)
!3660 = distinct !DILexicalBlock(scope: !3661, file: !120, line: 159, column: 41)
!3661 = distinct !DILexicalBlock(scope: !3599, file: !120, line: 159, column: 3)
!3662 = !DILocation(line: 160, column: 30, scope: !3659)
!3663 = !DILocation(line: 160, column: 8, scope: !3660)
!3664 = !DILocation(line: 161, column: 5, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3666, file: !120, line: 161, column: 5)
!3666 = distinct !DILexicalBlock(scope: !3667, file: !120, line: 161, column: 5)
!3667 = distinct !DILexicalBlock(scope: !3668, file: !120, line: 161, column: 5)
!3668 = distinct !DILexicalBlock(scope: !3669, file: !120, line: 161, column: 5)
!3669 = distinct !DILexicalBlock(scope: !3659, file: !120, line: 160, column: 36)
!3670 = !DILocation(line: 162, column: 5, scope: !3669)
!3671 = !DILocation(line: 165, column: 15, scope: !3660)
!3672 = !DILocation(line: 165, column: 4, scope: !3660)
!3673 = !DILocation(line: 169, column: 4, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3675, file: !120, line: 169, column: 4)
!3675 = distinct !DILexicalBlock(scope: !3676, file: !120, line: 169, column: 4)
!3676 = distinct !DILexicalBlock(scope: !3677, file: !120, line: 169, column: 4)
!3677 = distinct !DILexicalBlock(scope: !3660, file: !120, line: 169, column: 4)
!3678 = !DILocation(line: 171, column: 3, scope: !3660)
!3679 = !DILocation(line: 159, column: 37, scope: !3661)
!3680 = !DILocation(line: 159, column: 21, scope: !3661)
!3681 = distinct !{!3681, !3650, !3682}
!3682 = !DILocation(line: 171, column: 3, scope: !3599)
!3683 = !DILocation(line: 175, column: 1, scope: !3582)
!3684 = distinct !DISubprogram(name: "atomic_inc", scope: !3685, file: !3685, line: 123, type: !3686, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3690)
!3685 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3686 = !DISubroutineType(types: !3687)
!3687 = !{!3688, !3689}
!3688 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !332, line: 23, baseType: !331)
!3689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!3690 = !{!3691}
!3691 = !DILocalVariable(name: "target", arg: 1, scope: !3684, file: !3685, line: 123, type: !3689)
!3692 = !DILocation(line: 0, scope: !3684)
!3693 = !DILocation(line: 125, column: 9, scope: !3684)
!3694 = !DILocation(line: 125, column: 2, scope: !3684)
!3695 = distinct !DISubprogram(name: "k_sem_take", scope: !3414, file: !3414, line: 1044, type: !3696, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3699)
!3696 = !DISubroutineType(types: !3697)
!3697 = !{!105, !3698, !3418}
!3698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!3699 = !{!3700, !3701}
!3700 = !DILocalVariable(name: "sem", arg: 1, scope: !3695, file: !3414, line: 1044, type: !3698)
!3701 = !DILocalVariable(name: "timeout", arg: 2, scope: !3695, file: !3414, line: 1044, type: !3418)
!3702 = !DILocation(line: 0, scope: !3695)
!3703 = !DILocation(line: 1053, column: 2, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3695, file: !3414, line: 1053, column: 2)
!3705 = !{i64 2154078107}
!3706 = !DILocation(line: 1054, column: 9, scope: !3695)
!3707 = !DILocation(line: 1054, column: 2, scope: !3695)
!3708 = distinct !DISubprogram(name: "k_msleep", scope: !122, file: !122, line: 439, type: !3709, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3711)
!3709 = !DISubroutineType(types: !3710)
!3710 = !{!116, !116}
!3711 = !{!3712}
!3712 = !DILocalVariable(name: "ms", arg: 1, scope: !3708, file: !122, line: 439, type: !116)
!3713 = !DILocation(line: 0, scope: !3708)
!3714 = !DILocation(line: 441, column: 9, scope: !3708)
!3715 = !DILocation(line: 441, column: 2, scope: !3708)
!3716 = distinct !DISubprogram(name: "calc_stats", scope: !120, file: !120, line: 87, type: !3717, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3721)
!3717 = !DISubroutineType(types: !3718)
!3718 = !{null, !3719, !113, !1007, !1007, !1007, !1007}
!3719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3720, size: 32)
!3720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!3721 = !{!3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3732, !3734}
!3722 = !DILocalVariable(name: "array", arg: 1, scope: !3716, file: !120, line: 87, type: !3719)
!3723 = !DILocalVariable(name: "n", arg: 2, scope: !3716, file: !120, line: 87, type: !113)
!3724 = !DILocalVariable(name: "lo", arg: 3, scope: !3716, file: !120, line: 88, type: !1007)
!3725 = !DILocalVariable(name: "hi", arg: 4, scope: !3716, file: !120, line: 88, type: !1007)
!3726 = !DILocalVariable(name: "mean", arg: 5, scope: !3716, file: !120, line: 88, type: !1007)
!3727 = !DILocalVariable(name: "stdev", arg: 6, scope: !3716, file: !120, line: 88, type: !1007)
!3728 = !DILocalVariable(name: "tot", scope: !3716, file: !120, line: 90, type: !114)
!3729 = !DILocalVariable(name: "totsq", scope: !3716, file: !120, line: 90, type: !114)
!3730 = !DILocalVariable(name: "i", scope: !3731, file: !120, line: 94, type: !105)
!3731 = distinct !DILexicalBlock(scope: !3716, file: !120, line: 94, column: 2)
!3732 = !DILocalVariable(name: "i", scope: !3733, file: !120, line: 102, type: !105)
!3733 = distinct !DILexicalBlock(scope: !3716, file: !120, line: 102, column: 2)
!3734 = !DILocalVariable(name: "d", scope: !3735, file: !120, line: 103, type: !109)
!3735 = distinct !DILexicalBlock(scope: !3736, file: !120, line: 102, column: 30)
!3736 = distinct !DILexicalBlock(scope: !3733, file: !120, line: 102, column: 2)
!3737 = !DILocation(line: 0, scope: !3716)
!3738 = !DILocation(line: 92, column: 6, scope: !3716)
!3739 = !DILocation(line: 93, column: 6, scope: !3716)
!3740 = !DILocation(line: 0, scope: !3731)
!3741 = !DILocation(line: 94, column: 20, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3731, file: !120, line: 94, column: 2)
!3743 = !DILocation(line: 94, column: 2, scope: !3731)
!3744 = !DILocation(line: 100, column: 31, scope: !3716)
!3745 = !DILocation(line: 100, column: 37, scope: !3716)
!3746 = !DILocation(line: 100, column: 10, scope: !3716)
!3747 = !DILocation(line: 100, column: 8, scope: !3716)
!3748 = !DILocation(line: 0, scope: !3733)
!3749 = !DILocation(line: 102, column: 2, scope: !3733)
!3750 = !DILocation(line: 100, column: 28, scope: !3716)
!3751 = !DILocation(line: 100, column: 26, scope: !3716)
!3752 = !DILocation(line: 100, column: 39, scope: !3716)
!3753 = !DILocation(line: 95, column: 9, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3742, file: !120, line: 94, column: 30)
!3755 = !DILocation(line: 95, column: 7, scope: !3754)
!3756 = !DILocation(line: 96, column: 9, scope: !3754)
!3757 = !DILocation(line: 96, column: 7, scope: !3754)
!3758 = !DILocation(line: 97, column: 10, scope: !3754)
!3759 = !DILocation(line: 97, column: 7, scope: !3754)
!3760 = !DILocation(line: 94, column: 26, scope: !3742)
!3761 = distinct !{!3761, !3743, !3762}
!3762 = !DILocation(line: 98, column: 2, scope: !3731)
!3763 = !DILocation(line: 108, column: 24, scope: !3716)
!3764 = !DILocation(line: 108, column: 35, scope: !3716)
!3765 = !DILocation(line: 108, column: 11, scope: !3716)
!3766 = !DILocation(line: 108, column: 9, scope: !3716)
!3767 = !DILocation(line: 109, column: 1, scope: !3716)
!3768 = !DILocation(line: 103, column: 26, scope: !3735)
!3769 = !DILocation(line: 103, column: 35, scope: !3735)
!3770 = !DILocation(line: 103, column: 15, scope: !3735)
!3771 = !DILocation(line: 0, scope: !3735)
!3772 = !DILocation(line: 105, column: 14, scope: !3735)
!3773 = !DILocation(line: 105, column: 9, scope: !3735)
!3774 = !DILocation(line: 102, column: 26, scope: !3736)
!3775 = !DILocation(line: 102, column: 20, scope: !3736)
!3776 = distinct !{!3776, !3749, !3777}
!3777 = !DILocation(line: 106, column: 2, scope: !3733)
!3778 = distinct !DISubprogram(name: "isqrt", scope: !120, file: !120, line: 76, type: !3779, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3781)
!3779 = !DISubroutineType(types: !3780)
!3780 = !{!113, !114}
!3781 = !{!3782, !3783, !3786}
!3782 = !DILocalVariable(name: "n", arg: 1, scope: !3778, file: !120, line: 76, type: !114)
!3783 = !DILocalVariable(name: "lo", scope: !3784, file: !120, line: 79, type: !114)
!3784 = distinct !DILexicalBlock(scope: !3785, file: !120, line: 78, column: 13)
!3785 = distinct !DILexicalBlock(scope: !3778, file: !120, line: 78, column: 6)
!3786 = !DILocalVariable(name: "hi", scope: !3784, file: !120, line: 80, type: !114)
!3787 = !DILocation(line: 0, scope: !3778)
!3788 = !DILocation(line: 78, column: 8, scope: !3785)
!3789 = !DILocation(line: 78, column: 6, scope: !3778)
!3790 = !DILocation(line: 85, column: 1, scope: !3778)
!3791 = !DILocation(line: 79, column: 25, scope: !3784)
!3792 = !DILocation(line: 79, column: 17, scope: !3784)
!3793 = !DILocation(line: 79, column: 31, scope: !3784)
!3794 = !DILocation(line: 0, scope: !3784)
!3795 = !DILocation(line: 80, column: 20, scope: !3784)
!3796 = !DILocation(line: 82, column: 26, scope: !3784)
!3797 = !DILocation(line: 82, column: 32, scope: !3784)
!3798 = !DILocation(line: 82, column: 21, scope: !3784)
!3799 = distinct !DISubprogram(name: "k_sleep", scope: !3414, file: !3414, line: 91, type: !3800, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3802)
!3800 = !DISubroutineType(types: !3801)
!3801 = !{!116, !3418}
!3802 = !{!3803}
!3803 = !DILocalVariable(name: "timeout", arg: 1, scope: !3799, file: !3414, line: 91, type: !3418)
!3804 = !DILocation(line: 0, scope: !3799)
!3805 = !DILocation(line: 99, column: 2, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3799, file: !3414, line: 99, column: 2)
!3807 = !{i64 2154074263}
!3808 = !DILocation(line: 100, column: 9, scope: !3799)
!3809 = !DILocation(line: 100, column: 2, scope: !3799)
!3810 = distinct !DISubprogram(name: "atomic_add", scope: !3685, file: !3685, line: 86, type: !3811, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3813)
!3811 = !DISubroutineType(types: !3812)
!3812 = !{!3688, !3689, !3688}
!3813 = !{!3814, !3815}
!3814 = !DILocalVariable(name: "target", arg: 1, scope: !3810, file: !3685, line: 86, type: !3689)
!3815 = !DILocalVariable(name: "value", arg: 2, scope: !3810, file: !3685, line: 86, type: !3688)
!3816 = !DILocation(line: 0, scope: !3810)
!3817 = !DILocation(line: 88, column: 9, scope: !3810)
!3818 = !DILocation(line: 88, column: 2, scope: !3810)
!3819 = distinct !DISubprogram(name: "z_current_get", scope: !3414, file: !3414, line: 173, type: !3554, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !397)
!3820 = !DILocation(line: 180, column: 2, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3819, file: !3414, line: 180, column: 2)
!3822 = !{i64 2154074603}
!3823 = !DILocation(line: 181, column: 9, scope: !3819)
!3824 = !DILocation(line: 181, column: 2, scope: !3819)
!3825 = distinct !DISubprogram(name: "message_dev_init", scope: !360, file: !360, line: 83, type: !266, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3826)
!3826 = !{!3827, !3828, !3829}
!3827 = !DILocalVariable(name: "cyc_per_tick", scope: !3825, file: !360, line: 90, type: !114)
!3828 = !DILocalVariable(name: "avg_ticks_per_event", scope: !3825, file: !360, line: 91, type: !114)
!3829 = !DILocalVariable(name: "avg_cyc_per_event", scope: !3825, file: !360, line: 92, type: !114)
!3830 = !DILocation(line: 0, scope: !3825)
!3831 = !DILocation(line: 94, column: 15, scope: !3825)
!3832 = !DILocation(line: 96, column: 2, scope: !3825)
!3833 = !DILocation(line: 97, column: 1, scope: !3825)
!3834 = distinct !DISubprogram(name: "dev_timer_expired", scope: !360, file: !360, line: 54, type: !381, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3835)
!3835 = !{!3836, !3837, !3838, !3846}
!3836 = !DILocalVariable(name: "t", arg: 1, scope: !3834, file: !360, line: 54, type: !383)
!3837 = !DILocalVariable(name: "timestamp", scope: !3834, file: !360, line: 57, type: !113)
!3838 = !DILocalVariable(name: "m", scope: !3834, file: !360, line: 58, type: !3839)
!3839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msg", file: !304, line: 44, size: 160, elements: !3840)
!3840 = !{!3841, !3842, !3843, !3844, !3845}
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3839, file: !304, line: 46, baseType: !113, size: 32)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !3839, file: !304, line: 49, baseType: !113, size: 32, offset: 32)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !3839, file: !304, line: 52, baseType: !113, size: 32, offset: 64)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "proc_cyc", scope: !3839, file: !304, line: 55, baseType: !113, size: 32, offset: 96)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_latency", scope: !3839, file: !304, line: 58, baseType: !113, size: 32, offset: 128)
!3846 = !DILocalVariable(name: "ret", scope: !3834, file: !360, line: 65, type: !105)
!3847 = !DILocation(line: 0, scope: !3834)
!3848 = !DILocation(line: 56, column: 2, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !360, line: 56, column: 2)
!3850 = distinct !DILexicalBlock(scope: !3834, file: !360, line: 56, column: 2)
!3851 = !DILocation(line: 56, column: 2, scope: !3850)
!3852 = !DILocation(line: 56, column: 2, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3849, file: !360, line: 56, column: 2)
!3854 = !DILocation(line: 57, column: 23, scope: !3834)
!3855 = !DILocation(line: 58, column: 2, scope: !3834)
!3856 = !DILocation(line: 58, column: 13, scope: !3834)
!3857 = !DILocation(line: 60, column: 17, scope: !3834)
!3858 = !DILocation(line: 60, column: 4, scope: !3834)
!3859 = !DILocation(line: 60, column: 8, scope: !3834)
!3860 = !DILocation(line: 61, column: 4, scope: !3834)
!3861 = !DILocation(line: 61, column: 14, scope: !3834)
!3862 = !DILocation(line: 62, column: 13, scope: !3834)
!3863 = !DILocation(line: 62, column: 22, scope: !3834)
!3864 = !DILocation(line: 62, column: 4, scope: !3834)
!3865 = !DILocation(line: 62, column: 11, scope: !3834)
!3866 = !DILocation(line: 63, column: 15, scope: !3834)
!3867 = !DILocation(line: 63, column: 26, scope: !3834)
!3868 = !DILocation(line: 63, column: 24, scope: !3834)
!3869 = !DILocation(line: 63, column: 4, scope: !3834)
!3870 = !DILocation(line: 63, column: 13, scope: !3834)
!3871 = !DILocation(line: 65, column: 12, scope: !3834)
!3872 = !DILocation(line: 67, column: 10, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3834, file: !360, line: 67, column: 6)
!3874 = !DILocation(line: 67, column: 6, scope: !3834)
!3875 = !DILocation(line: 68, column: 3, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3873, file: !360, line: 67, column: 16)
!3877 = !DILocation(line: 69, column: 2, scope: !3876)
!3878 = !DILocation(line: 71, column: 8, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3834, file: !360, line: 71, column: 6)
!3880 = !DILocation(line: 71, column: 12, scope: !3879)
!3881 = !DILocation(line: 71, column: 6, scope: !3834)
!3882 = !DILocation(line: 72, column: 3, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3879, file: !360, line: 71, column: 26)
!3884 = !DILocation(line: 73, column: 2, scope: !3883)
!3885 = !DILocation(line: 74, column: 1, scope: !3834)
!3886 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!3887 = !DILocation(line: 1677, column: 9, scope: !3886)
!3888 = !DILocation(line: 1677, column: 2, scope: !3886)
!3889 = !DILocation(line: 40, column: 7, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !394, file: !360, line: 40, column: 6)
!3891 = !DILocation(line: 40, column: 6, scope: !394)
!3892 = !DILocation(line: 41, column: 22, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3890, file: !360, line: 40, column: 14)
!3894 = !DILocation(line: 41, column: 12, scope: !3893)
!3895 = !DILocation(line: 41, column: 40, scope: !3893)
!3896 = !DILocation(line: 42, column: 2, scope: !3893)
!3897 = !DILocation(line: 45, column: 10, scope: !394)
!3898 = !DILocation(line: 45, column: 16, scope: !394)
!3899 = !DILocation(line: 45, column: 41, scope: !394)
!3900 = !DILocation(line: 45, column: 8, scope: !394)
!3901 = !DILocation(line: 46, column: 26, scope: !394)
!3902 = !DILocation(line: 46, column: 9, scope: !394)
!3903 = !DILocation(line: 46, column: 2, scope: !394)
!3904 = distinct !DISubprogram(name: "k_msgq_put", scope: !3414, file: !3414, line: 1129, type: !3905, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3912)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{!105, !3907, !13, !3908}
!3907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!3908 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !3909)
!3909 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !3910)
!3910 = !{!3911}
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3909, file: !108, line: 66, baseType: !107, size: 64)
!3912 = !{!3913, !3914, !3915}
!3913 = !DILocalVariable(name: "msgq", arg: 1, scope: !3904, file: !3414, line: 1129, type: !3907)
!3914 = !DILocalVariable(name: "data", arg: 2, scope: !3904, file: !3414, line: 1129, type: !13)
!3915 = !DILocalVariable(name: "timeout", arg: 3, scope: !3904, file: !3414, line: 1129, type: !3908)
!3916 = !DILocation(line: 0, scope: !3904)
!3917 = !DILocation(line: 1139, column: 2, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3904, file: !3414, line: 1139, column: 2)
!3919 = !{i64 2154076710}
!3920 = !DILocation(line: 1140, column: 9, scope: !3904)
!3921 = !DILocation(line: 1140, column: 2, scope: !3904)
!3922 = distinct !DISubprogram(name: "timeout_reset", scope: !360, file: !360, line: 76, type: !266, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3923)
!3923 = !{!3924}
!3924 = !DILocalVariable(name: "ticks", scope: !3922, file: !360, line: 78, type: !113)
!3925 = !DILocation(line: 78, column: 19, scope: !3922)
!3926 = !DILocation(line: 78, column: 28, scope: !3922)
!3927 = !DILocation(line: 0, scope: !3922)
!3928 = !DILocation(line: 80, column: 45, scope: !3922)
!3929 = !DILocation(line: 80, column: 2, scope: !3922)
!3930 = !DILocation(line: 81, column: 1, scope: !3922)
!3931 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3442, file: !3442, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !397)
!3932 = !DILocation(line: 26, column: 9, scope: !3931)
!3933 = !DILocation(line: 26, column: 2, scope: !3931)
!3934 = distinct !DISubprogram(name: "message_dev_fetch", scope: !360, file: !360, line: 99, type: !3935, scopeLine: 100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3938)
!3935 = !DISubroutineType(types: !3936)
!3936 = !{null, !3937}
!3937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3839, size: 32)
!3938 = !{!3939, !3940}
!3939 = !DILocalVariable(name: "m", arg: 1, scope: !3934, file: !360, line: 99, type: !3937)
!3940 = !DILocalVariable(name: "ret", scope: !3934, file: !360, line: 101, type: !105)
!3941 = !DILocation(line: 0, scope: !3934)
!3942 = !DILocation(line: 101, column: 33, scope: !3934)
!3943 = !DILocation(line: 101, column: 12, scope: !3934)
!3944 = !DILocation(line: 103, column: 2, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3946, file: !360, line: 103, column: 2)
!3946 = distinct !DILexicalBlock(scope: !3934, file: !360, line: 103, column: 2)
!3947 = !DILocation(line: 103, column: 2, scope: !3946)
!3948 = !DILocation(line: 103, column: 2, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3945, file: !360, line: 103, column: 2)
!3950 = !DILocation(line: 104, column: 1, scope: !3934)
!3951 = distinct !DISubprogram(name: "k_msgq_get", scope: !3414, file: !3414, line: 1147, type: !3952, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !354, retainedNodes: !3954)
!3952 = !DISubroutineType(types: !3953)
!3953 = !{!105, !3907, !104, !3908}
!3954 = !{!3955, !3956, !3957}
!3955 = !DILocalVariable(name: "msgq", arg: 1, scope: !3951, file: !3414, line: 1147, type: !3907)
!3956 = !DILocalVariable(name: "data", arg: 2, scope: !3951, file: !3414, line: 1147, type: !104)
!3957 = !DILocalVariable(name: "timeout", arg: 3, scope: !3951, file: !3414, line: 1147, type: !3908)
!3958 = !DILocation(line: 0, scope: !3951)
!3959 = !DILocation(line: 1157, column: 2, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3951, file: !3414, line: 1157, column: 2)
!3961 = !{i64 2154076778}
!3962 = !DILocation(line: 1158, column: 9, scope: !3951)
!3963 = !DILocation(line: 1158, column: 2, scope: !3951)
!3964 = distinct !DISubprogram(name: "cbvprintf_package", scope: !434, file: !434, line: 233, type: !3965, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !3974)
!3965 = !DISubroutineType(types: !3966)
!3966 = !{!105, !104, !111, !113, !269, !3967}
!3967 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3968, line: 99, baseType: !3969)
!3968 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3969 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3968, line: 40, baseType: !3970)
!3970 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !434, baseType: !3971)
!3971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3972)
!3972 = !{!3973}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3971, file: !434, line: 18, baseType: !104, size: 32)
!3974 = !{!3975, !3976, !3977, !3978, !3979, !3980, !3981, !3982, !3983, !3984, !3986, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994, !3995, !3996, !3997, !4010, !4019, !4022, !4023, !4026, !4029, !4032, !4035, !4041}
!3975 = !DILocalVariable(name: "packaged", arg: 1, scope: !3964, file: !434, line: 233, type: !104)
!3976 = !DILocalVariable(name: "len", arg: 2, scope: !3964, file: !434, line: 233, type: !111)
!3977 = !DILocalVariable(name: "flags", arg: 3, scope: !3964, file: !434, line: 233, type: !113)
!3978 = !DILocalVariable(name: "fmt", arg: 4, scope: !3964, file: !434, line: 234, type: !269)
!3979 = !DILocalVariable(name: "ap", arg: 5, scope: !3964, file: !434, line: 234, type: !3967)
!3980 = !DILocalVariable(name: "buf0", scope: !3964, file: !434, line: 247, type: !432)
!3981 = !DILocalVariable(name: "buf", scope: !3964, file: !434, line: 248, type: !432)
!3982 = !DILocalVariable(name: "size", scope: !3964, file: !434, line: 249, type: !32)
!3983 = !DILocalVariable(name: "align", scope: !3964, file: !434, line: 250, type: !32)
!3984 = !DILocalVariable(name: "str_ptr_pos", scope: !3964, file: !434, line: 251, type: !3985)
!3985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 128, elements: !311)
!3986 = !DILocalVariable(name: "str_ptr_arg", scope: !3964, file: !434, line: 252, type: !3985)
!3987 = !DILocalVariable(name: "s_idx", scope: !3964, file: !434, line: 253, type: !32)
!3988 = !DILocalVariable(name: "s_rw_cnt", scope: !3964, file: !434, line: 254, type: !32)
!3989 = !DILocalVariable(name: "s_ro_cnt", scope: !3964, file: !434, line: 255, type: !32)
!3990 = !DILocalVariable(name: "arg_idx", scope: !3964, file: !434, line: 256, type: !105)
!3991 = !DILocalVariable(name: "i", scope: !3964, file: !434, line: 257, type: !32)
!3992 = !DILocalVariable(name: "s", scope: !3964, file: !434, line: 258, type: !269)
!3993 = !DILocalVariable(name: "parsing", scope: !3964, file: !434, line: 259, type: !492)
!3994 = !DILocalVariable(name: "rws_pos_en", scope: !3964, file: !434, line: 263, type: !492)
!3995 = !DILocalVariable(name: "fros_cnt", scope: !3964, file: !434, line: 268, type: !105)
!3996 = !DILocalVariable(name: "is_str_arg", scope: !3964, file: !434, line: 269, type: !492)
!3997 = !DILocalVariable(name: "pkg_hdr", scope: !3964, file: !434, line: 270, type: !3998)
!3998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3999, size: 32)
!3999 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4000, line: 78, size: 32, elements: !4001)
!4000 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4001 = !{!4002, !4009}
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3999, file: !4000, line: 80, baseType: !4003, size: 32)
!4003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4000, line: 45, size: 32, elements: !4004)
!4004 = !{!4005, !4006, !4007, !4008}
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4003, file: !4000, line: 47, baseType: !169, size: 8)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4003, file: !4000, line: 50, baseType: !169, size: 8, offset: 8)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4003, file: !4000, line: 53, baseType: !169, size: 8, offset: 16)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4003, file: !4000, line: 56, baseType: !169, size: 8, offset: 24)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3999, file: !4000, line: 82, baseType: !104, size: 32)
!4010 = !DILocalVariable(name: "v", scope: !4011, file: !434, line: 567, type: !4015)
!4011 = distinct !DILexicalBlock(scope: !4012, file: !434, line: 562, column: 14)
!4012 = distinct !DILexicalBlock(scope: !4013, file: !434, line: 481, column: 18)
!4013 = distinct !DILexicalBlock(scope: !4014, file: !434, line: 466, column: 3)
!4014 = distinct !DILexicalBlock(scope: !3964, file: !434, line: 343, column: 15)
!4015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3964, file: !434, line: 567, size: 64, elements: !4016)
!4016 = !{!4017, !4018}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4015, file: !434, line: 567, baseType: !426, size: 64)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4015, file: !434, line: 567, baseType: !424, size: 64)
!4019 = !DILocalVariable(name: "is_ro", scope: !4020, file: !434, line: 620, type: !492)
!4020 = distinct !DILexicalBlock(scope: !4021, file: !434, line: 613, column: 19)
!4021 = distinct !DILexicalBlock(scope: !4014, file: !434, line: 613, column: 7)
!4022 = !DILocalVariable(name: "do_ro", scope: !4020, file: !434, line: 621, type: !492)
!4023 = !DILocalVariable(name: "s_ptr_idx", scope: !4024, file: !434, line: 626, type: !113)
!4024 = distinct !DILexicalBlock(scope: !4025, file: !434, line: 625, column: 11)
!4025 = distinct !DILexicalBlock(scope: !4020, file: !434, line: 623, column: 8)
!4026 = !DILocalVariable(name: "v", scope: !4027, file: !434, line: 684, type: !105)
!4027 = distinct !DILexicalBlock(scope: !4028, file: !434, line: 683, column: 35)
!4028 = distinct !DILexicalBlock(scope: !4021, file: !434, line: 683, column: 14)
!4029 = !DILocalVariable(name: "v", scope: !4030, file: !434, line: 691, type: !106)
!4030 = distinct !DILexicalBlock(scope: !4031, file: !434, line: 690, column: 36)
!4031 = distinct !DILexicalBlock(scope: !4028, file: !434, line: 690, column: 14)
!4032 = !DILocalVariable(name: "v", scope: !4033, file: !434, line: 698, type: !110)
!4033 = distinct !DILexicalBlock(scope: !4034, file: !434, line: 697, column: 41)
!4034 = distinct !DILexicalBlock(scope: !4031, file: !434, line: 697, column: 14)
!4035 = !DILocalVariable(name: "pos", scope: !4036, file: !434, line: 762, type: !169)
!4036 = distinct !DILexicalBlock(scope: !4037, file: !434, line: 757, column: 31)
!4037 = distinct !DILexicalBlock(scope: !4038, file: !434, line: 757, column: 3)
!4038 = distinct !DILexicalBlock(scope: !4039, file: !434, line: 757, column: 3)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !434, line: 756, column: 16)
!4040 = distinct !DILexicalBlock(scope: !3964, file: !434, line: 756, column: 6)
!4041 = !DILabel(scope: !4020, name: "process_string", file: !434, line: 615)
!4042 = !DILocation(line: 0, scope: !3964)
!4043 = !DILocation(line: 251, column: 2, scope: !3964)
!4044 = !DILocation(line: 251, column: 10, scope: !3964)
!4045 = !DILocation(line: 252, column: 2, scope: !3964)
!4046 = !DILocation(line: 252, column: 10, scope: !3964)
!4047 = !DILocation(line: 263, column: 29, scope: !3964)
!4048 = !DILocation(line: 263, column: 21, scope: !3964)
!4049 = !DILocation(line: 268, column: 21, scope: !3964)
!4050 = !DILocation(line: 268, column: 19, scope: !3964)
!4051 = !DILocation(line: 273, column: 6, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !3964, file: !434, line: 273, column: 6)
!4053 = !DILocation(line: 273, column: 26, scope: !4052)
!4054 = !DILocation(line: 273, column: 6, scope: !3964)
!4055 = !DILocation(line: 297, column: 6, scope: !3964)
!4056 = !DILocation(line: 305, column: 11, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !3964, file: !434, line: 305, column: 6)
!4058 = !DILocation(line: 305, column: 6, scope: !3964)
!4059 = !DILocation(line: 327, column: 19, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !3964, file: !434, line: 327, column: 6)
!4061 = !DILocation(line: 327, column: 22, scope: !4060)
!4062 = !DILocation(line: 327, column: 33, scope: !4060)
!4063 = !DILocation(line: 327, column: 50, scope: !4060)
!4064 = !DILocation(line: 327, column: 6, scope: !3964)
!4065 = !DILocation(line: 338, column: 9, scope: !3964)
!4066 = !DILocation(line: 341, column: 2, scope: !3964)
!4067 = !DILocation(line: 472, column: 8, scope: !4013)
!4068 = !DILocation(line: 473, column: 14, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4070, file: !434, line: 473, column: 9)
!4070 = distinct !DILexicalBlock(scope: !4071, file: !434, line: 472, column: 18)
!4071 = distinct !DILexicalBlock(scope: !4013, file: !434, line: 472, column: 8)
!4072 = !DILocation(line: 473, column: 9, scope: !4070)
!4073 = !DILocation(line: 479, column: 5, scope: !4070)
!4074 = !DILocation(line: 468, column: 9, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4013, file: !434, line: 468, column: 8)
!4076 = !DILocation(line: 468, column: 8, scope: !4075)
!4077 = !DILocation(line: 468, column: 15, scope: !4075)
!4078 = !DILocation(line: 468, column: 8, scope: !4013)
!4079 = distinct !{!4079, !4080, !4081}
!4080 = !DILocation(line: 343, column: 2, scope: !3964)
!4081 = !DILocation(line: 712, column: 2, scope: !3964)
!4082 = !DILocation(line: 481, column: 4, scope: !4013)
!4083 = !DILocation(line: 484, column: 12, scope: !4012)
!4084 = !DILocation(line: 485, column: 5, scope: !4012)
!4085 = !DILocation(line: 505, column: 5, scope: !4012)
!4086 = !DILocation(line: 518, column: 5, scope: !4012)
!4087 = !DILocation(line: 523, column: 5, scope: !4012)
!4088 = !DILocation(line: 532, column: 9, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4012, file: !434, line: 532, column: 9)
!4090 = !DILocation(line: 532, column: 17, scope: !4089)
!4091 = !DILocation(line: 532, column: 9, scope: !4012)
!4092 = !DILocation(line: 533, column: 10, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4094, file: !434, line: 533, column: 10)
!4094 = distinct !DILexicalBlock(scope: !4089, file: !434, line: 532, column: 25)
!4095 = !DILocation(line: 533, column: 18, scope: !4093)
!4096 = !DILocation(line: 0, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4011, file: !434, line: 569, column: 9)
!4098 = !DILocation(line: 0, scope: !4011)
!4099 = !DILocation(line: 579, column: 20, scope: !4011)
!4100 = !DILocation(line: 579, column: 11, scope: !4011)
!4101 = !DILocation(line: 580, column: 9, scope: !4011)
!4102 = !DILocation(line: 582, column: 21, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4104, file: !434, line: 582, column: 10)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !434, line: 580, column: 23)
!4105 = distinct !DILexicalBlock(scope: !4011, file: !434, line: 580, column: 9)
!4106 = !DILocation(line: 582, column: 28, scope: !4103)
!4107 = !DILocation(line: 582, column: 10, scope: !4104)
!4108 = !DILocation(line: 0, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4110, file: !434, line: 587, column: 17)
!4110 = distinct !DILexicalBlock(scope: !4104, file: !434, line: 585, column: 10)
!4111 = !DILocation(line: 593, column: 9, scope: !4011)
!4112 = !DILocation(line: 600, column: 5, scope: !4012)
!4113 = !DILocation(line: 605, column: 18, scope: !4014)
!4114 = !DILocation(line: 605, column: 9, scope: !4014)
!4115 = !DILocation(line: 608, column: 20, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4014, file: !434, line: 608, column: 7)
!4117 = !DILocation(line: 608, column: 23, scope: !4116)
!4118 = !DILocation(line: 608, column: 34, scope: !4116)
!4119 = !DILocation(line: 608, column: 41, scope: !4116)
!4120 = !DILocation(line: 608, column: 7, scope: !4014)
!4121 = !DILocation(line: 613, column: 7, scope: !4014)
!4122 = !DILocation(line: 614, column: 8, scope: !4020)
!4123 = !DILocation(line: 614, column: 4, scope: !4020)
!4124 = !DILocation(line: 256, column: 6, scope: !3964)
!4125 = !DILocation(line: 254, column: 15, scope: !3964)
!4126 = !DILocation(line: 320, column: 7, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4057, file: !434, line: 305, column: 20)
!4128 = !DILocation(line: 615, column: 1, scope: !4020)
!4129 = !DILocation(line: 616, column: 8, scope: !4020)
!4130 = !DILocation(line: 617, column: 5, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4132, file: !434, line: 616, column: 22)
!4132 = distinct !DILexicalBlock(scope: !4020, file: !434, line: 616, column: 8)
!4133 = !DILocation(line: 617, column: 25, scope: !4131)
!4134 = !DILocation(line: 618, column: 4, scope: !4131)
!4135 = !DILocation(line: 620, column: 26, scope: !4020)
!4136 = !DILocation(line: 620, column: 29, scope: !4020)
!4137 = !DILocation(line: 620, column: 17, scope: !4020)
!4138 = !DILocation(line: 620, column: 43, scope: !4020)
!4139 = !DILocation(line: 0, scope: !4020)
!4140 = !DILocation(line: 623, column: 14, scope: !4025)
!4141 = !DILocation(line: 626, column: 26, scope: !4024)
!4142 = !DILocation(line: 626, column: 37, scope: !4024)
!4143 = !DILocation(line: 0, scope: !4024)
!4144 = !DILocation(line: 634, column: 15, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4024, file: !434, line: 634, column: 9)
!4146 = !DILocation(line: 635, column: 6, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4148, file: !434, line: 635, column: 6)
!4148 = distinct !DILexicalBlock(scope: !4149, file: !434, line: 635, column: 6)
!4149 = distinct !DILexicalBlock(scope: !4150, file: !434, line: 635, column: 6)
!4150 = distinct !DILexicalBlock(scope: !4145, file: !434, line: 634, column: 44)
!4151 = !DILocation(line: 639, column: 15, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4024, file: !434, line: 639, column: 9)
!4153 = !DILocation(line: 639, column: 9, scope: !4024)
!4154 = !DILocation(line: 640, column: 6, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4156, file: !434, line: 640, column: 6)
!4156 = distinct !DILexicalBlock(scope: !4157, file: !434, line: 640, column: 6)
!4157 = distinct !DILexicalBlock(scope: !4158, file: !434, line: 640, column: 6)
!4158 = distinct !DILexicalBlock(scope: !4152, file: !434, line: 639, column: 43)
!4159 = !DILocation(line: 644, column: 9, scope: !4024)
!4160 = !DILocation(line: 649, column: 27, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4162, file: !434, line: 644, column: 23)
!4162 = distinct !DILexicalBlock(scope: !4024, file: !434, line: 644, column: 9)
!4163 = !DILocation(line: 649, column: 6, scope: !4161)
!4164 = !DILocation(line: 649, column: 25, scope: !4161)
!4165 = !DILocation(line: 650, column: 27, scope: !4161)
!4166 = !DILocation(line: 650, column: 6, scope: !4161)
!4167 = !DILocation(line: 650, column: 25, scope: !4161)
!4168 = !DILocation(line: 651, column: 10, scope: !4161)
!4169 = !DILocation(line: 653, column: 26, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4171, file: !434, line: 651, column: 17)
!4171 = distinct !DILexicalBlock(scope: !4161, file: !434, line: 651, column: 10)
!4172 = !DILocation(line: 654, column: 15, scope: !4170)
!4173 = !DILocation(line: 655, column: 6, scope: !4170)
!4174 = !DILocation(line: 656, column: 15, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4171, file: !434, line: 655, column: 13)
!4176 = !DILocation(line: 658, column: 16, scope: !4162)
!4177 = !DILocation(line: 663, column: 10, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4179, file: !434, line: 658, column: 23)
!4179 = distinct !DILexicalBlock(scope: !4162, file: !434, line: 658, column: 16)
!4180 = !DILocation(line: 664, column: 5, scope: !4178)
!4181 = !DILocation(line: 664, column: 16, scope: !4179)
!4182 = !DILocation(line: 669, column: 10, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4184, file: !434, line: 664, column: 28)
!4184 = distinct !DILexicalBlock(scope: !4179, file: !434, line: 664, column: 16)
!4185 = !DILocation(line: 670, column: 5, scope: !4183)
!4186 = !DILocation(line: 675, column: 13, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4184, file: !434, line: 670, column: 12)
!4188 = !DILocation(line: 675, column: 27, scope: !4187)
!4189 = !DILocation(line: 675, column: 10, scope: !4187)
!4190 = !DILocation(line: 678, column: 10, scope: !4024)
!4191 = !DILocation(line: 680, column: 8, scope: !4020)
!4192 = !DILocation(line: 683, column: 14, scope: !4021)
!4193 = !DILocation(line: 684, column: 12, scope: !4027)
!4194 = !DILocation(line: 0, scope: !4027)
!4195 = !DILocation(line: 686, column: 8, scope: !4027)
!4196 = !DILocation(line: 687, column: 5, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4198, file: !434, line: 686, column: 22)
!4198 = distinct !DILexicalBlock(scope: !4027, file: !434, line: 686, column: 8)
!4199 = !DILocation(line: 687, column: 17, scope: !4197)
!4200 = !DILocation(line: 688, column: 4, scope: !4197)
!4201 = !DILocation(line: 698, column: 18, scope: !4033)
!4202 = !DILocation(line: 0, scope: !4033)
!4203 = !DILocation(line: 700, column: 8, scope: !4033)
!4204 = !DILocation(line: 704, column: 6, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4206, file: !434, line: 703, column: 12)
!4206 = distinct !DILexicalBlock(scope: !4207, file: !434, line: 701, column: 9)
!4207 = distinct !DILexicalBlock(scope: !4208, file: !434, line: 700, column: 22)
!4208 = distinct !DILexicalBlock(scope: !4033, file: !434, line: 700, column: 8)
!4209 = !DILocation(line: 704, column: 24, scope: !4205)
!4210 = !DILocation(line: 706, column: 4, scope: !4207)
!4211 = !DILocation(line: 709, column: 4, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4213, file: !434, line: 709, column: 4)
!4213 = distinct !DILexicalBlock(scope: !4214, file: !434, line: 709, column: 4)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !434, line: 709, column: 4)
!4215 = distinct !DILexicalBlock(scope: !4034, file: !434, line: 708, column: 10)
!4216 = !DILocation(line: 0, scope: !4028)
!4217 = !DILocation(line: 0, scope: !4014)
!4218 = !DILocation(line: 720, column: 6, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !3964, file: !434, line: 720, column: 6)
!4220 = !DILocation(line: 720, column: 17, scope: !4219)
!4221 = !DILocation(line: 720, column: 31, scope: !4219)
!4222 = !DILocation(line: 720, column: 6, scope: !3964)
!4223 = !DILocation(line: 721, column: 3, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4225, file: !434, line: 721, column: 3)
!4225 = distinct !DILexicalBlock(scope: !4226, file: !434, line: 721, column: 3)
!4226 = distinct !DILexicalBlock(scope: !4227, file: !434, line: 721, column: 3)
!4227 = distinct !DILexicalBlock(scope: !4219, file: !434, line: 720, column: 38)
!4228 = !DILocation(line: 729, column: 6, scope: !3964)
!4229 = !DILocation(line: 730, column: 21, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4231, file: !434, line: 729, column: 20)
!4231 = distinct !DILexicalBlock(scope: !3964, file: !434, line: 729, column: 6)
!4232 = !DILocation(line: 730, column: 27, scope: !4230)
!4233 = !DILocation(line: 730, column: 3, scope: !4230)
!4234 = !DILocation(line: 737, column: 22, scope: !3964)
!4235 = !DILocation(line: 737, column: 20, scope: !3964)
!4236 = !DILocation(line: 0, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !3964, file: !434, line: 739, column: 6)
!4238 = !DILocation(line: 745, column: 17, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4237, file: !434, line: 743, column: 9)
!4240 = !DILocation(line: 745, column: 25, scope: !4239)
!4241 = !DILocation(line: 746, column: 17, scope: !4239)
!4242 = !DILocation(line: 746, column: 28, scope: !4239)
!4243 = !DILocation(line: 749, column: 29, scope: !3964)
!4244 = !DILocation(line: 749, column: 16, scope: !3964)
!4245 = !DILocation(line: 749, column: 27, scope: !3964)
!4246 = !DILocation(line: 756, column: 6, scope: !4040)
!4247 = !DILocation(line: 756, column: 6, scope: !3964)
!4248 = !DILocation(line: 757, column: 3, scope: !4038)
!4249 = !DILocation(line: 758, column: 10, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4036, file: !434, line: 758, column: 8)
!4251 = !DILocation(line: 758, column: 25, scope: !4250)
!4252 = !DILocation(line: 758, column: 8, scope: !4036)
!4253 = !DILocation(line: 0, scope: !4036)
!4254 = !DILocation(line: 765, column: 8, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4036, file: !434, line: 765, column: 8)
!4256 = !DILocation(line: 765, column: 19, scope: !4255)
!4257 = !DILocation(line: 765, column: 23, scope: !4255)
!4258 = !DILocation(line: 765, column: 8, scope: !4036)
!4259 = !DILocation(line: 762, column: 33, scope: !4036)
!4260 = !DILocation(line: 769, column: 8, scope: !4036)
!4261 = !DILocation(line: 769, column: 11, scope: !4036)
!4262 = !DILocation(line: 757, column: 27, scope: !4037)
!4263 = !DILocation(line: 757, column: 17, scope: !4037)
!4264 = distinct !{!4264, !4248, !4265}
!4265 = !DILocation(line: 770, column: 3, scope: !4038)
!4266 = !DILocation(line: 774, column: 16, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4268, file: !434, line: 774, column: 2)
!4268 = distinct !DILexicalBlock(scope: !3964, file: !434, line: 774, column: 2)
!4269 = !DILocation(line: 774, column: 2, scope: !4268)
!4270 = !DILocation(line: 776, column: 16, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4272, file: !434, line: 776, column: 7)
!4272 = distinct !DILexicalBlock(scope: !4267, file: !434, line: 774, column: 30)
!4273 = !DILocation(line: 776, column: 19, scope: !4271)
!4274 = !DILocation(line: 776, column: 34, scope: !4271)
!4275 = !DILocation(line: 776, column: 7, scope: !4272)
!4276 = !DILocation(line: 780, column: 7, scope: !4272)
!4277 = !DILocation(line: 782, column: 13, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4279, file: !434, line: 780, column: 19)
!4279 = distinct !DILexicalBlock(scope: !4272, file: !434, line: 780, column: 7)
!4280 = !DILocation(line: 782, column: 8, scope: !4278)
!4281 = !DILocation(line: 782, column: 11, scope: !4278)
!4282 = !DILocation(line: 783, column: 3, scope: !4278)
!4283 = !DILocation(line: 785, column: 26, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4279, file: !434, line: 783, column: 10)
!4285 = !DILocation(line: 785, column: 41, scope: !4284)
!4286 = !DILocation(line: 785, column: 24, scope: !4284)
!4287 = !DILocation(line: 785, column: 8, scope: !4284)
!4288 = !DILocation(line: 787, column: 52, scope: !4284)
!4289 = !DILocation(line: 789, column: 11, scope: !4284)
!4290 = !DILocation(line: 789, column: 21, scope: !4284)
!4291 = !DILocation(line: 0, scope: !4279)
!4292 = !DILocation(line: 793, column: 7, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4272, file: !434, line: 793, column: 7)
!4294 = !DILocation(line: 793, column: 18, scope: !4293)
!4295 = !DILocation(line: 793, column: 22, scope: !4293)
!4296 = !DILocation(line: 793, column: 29, scope: !4293)
!4297 = !DILocation(line: 793, column: 7, scope: !4272)
!4298 = !DILocation(line: 797, column: 12, scope: !4272)
!4299 = !DILocation(line: 797, column: 7, scope: !4272)
!4300 = !DILocation(line: 797, column: 10, scope: !4272)
!4301 = !DILocation(line: 799, column: 3, scope: !4272)
!4302 = !DILocation(line: 800, column: 7, scope: !4272)
!4303 = !DILocation(line: 801, column: 2, scope: !4272)
!4304 = !DILocation(line: 338, column: 4, scope: !3964)
!4305 = !DILocation(line: 774, column: 26, scope: !4267)
!4306 = distinct !{!4306, !4269, !4307}
!4307 = !DILocation(line: 801, column: 2, scope: !4268)
!4308 = !DILocation(line: 808, column: 9, scope: !3964)
!4309 = !DILocation(line: 808, column: 2, scope: !3964)
!4310 = !DILocation(line: 813, column: 1, scope: !3964)
!4311 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !434, file: !434, line: 33, type: !4312, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4314)
!4312 = !DISubroutineType(types: !4313)
!4313 = !{!492, !269}
!4314 = !{!4315}
!4315 = !DILocalVariable(name: "addr", arg: 1, scope: !4311, file: !434, line: 33, type: !269)
!4316 = !DILocation(line: 0, scope: !4311)
!4317 = !DILocation(line: 41, column: 9, scope: !4311)
!4318 = !DILocation(line: 41, column: 2, scope: !4311)
!4319 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4320, file: !4320, line: 24, type: !4321, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4323)
!4320 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4321 = !DISubroutineType(types: !4322)
!4322 = !{!492, !13}
!4323 = !{!4324}
!4324 = !DILocalVariable(name: "addr", arg: 1, scope: !4319, file: !4320, line: 24, type: !13)
!4325 = !DILocation(line: 0, scope: !4319)
!4326 = !DILocation(line: 49, column: 30, scope: !4319)
!4327 = !DILocation(line: 49, column: 57, scope: !4319)
!4328 = !DILocation(line: 49, column: 2, scope: !4319)
!4329 = distinct !DISubprogram(name: "cbprintf_package", scope: !434, file: !434, line: 815, type: !4330, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4332)
!4330 = !DISubroutineType(types: !4331)
!4331 = !{!105, !104, !111, !113, !269, null}
!4332 = !{!4333, !4334, !4335, !4336, !4337, !4338}
!4333 = !DILocalVariable(name: "packaged", arg: 1, scope: !4329, file: !434, line: 815, type: !104)
!4334 = !DILocalVariable(name: "len", arg: 2, scope: !4329, file: !434, line: 815, type: !111)
!4335 = !DILocalVariable(name: "flags", arg: 3, scope: !4329, file: !434, line: 815, type: !113)
!4336 = !DILocalVariable(name: "format", arg: 4, scope: !4329, file: !434, line: 816, type: !269)
!4337 = !DILocalVariable(name: "ap", scope: !4329, file: !434, line: 818, type: !3967)
!4338 = !DILocalVariable(name: "ret", scope: !4329, file: !434, line: 819, type: !105)
!4339 = !DILocation(line: 0, scope: !4329)
!4340 = !DILocation(line: 818, column: 2, scope: !4329)
!4341 = !DILocation(line: 818, column: 10, scope: !4329)
!4342 = !DILocation(line: 821, column: 2, scope: !4329)
!4343 = !DILocation(line: 822, column: 8, scope: !4329)
!4344 = !DILocation(line: 823, column: 2, scope: !4329)
!4345 = !DILocation(line: 825, column: 1, scope: !4329)
!4346 = !DILocation(line: 824, column: 2, scope: !4329)
!4347 = distinct !DISubprogram(name: "cbpprintf_external", scope: !434, file: !434, line: 827, type: !4348, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4358)
!4348 = !DISubroutineType(types: !4349)
!4349 = !{!105, !4350, !4354, !104, !104}
!4350 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4000, line: 297, baseType: !4351)
!4351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4352, size: 32)
!4352 = !DISubroutineType(types: !4353)
!4353 = !{!105, null}
!4354 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4000, line: 328, baseType: !4355)
!4355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4356, size: 32)
!4356 = !DISubroutineType(types: !4357)
!4357 = !{!105, !4350, !104, !269, !3967}
!4358 = !{!4359, !4360, !4361, !4362, !4363, !4364, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377}
!4359 = !DILocalVariable(name: "out", arg: 1, scope: !4347, file: !434, line: 827, type: !4350)
!4360 = !DILocalVariable(name: "formatter", arg: 2, scope: !4347, file: !434, line: 828, type: !4354)
!4361 = !DILocalVariable(name: "ctx", arg: 3, scope: !4347, file: !434, line: 829, type: !104)
!4362 = !DILocalVariable(name: "packaged", arg: 4, scope: !4347, file: !434, line: 829, type: !104)
!4363 = !DILocalVariable(name: "buf", scope: !4347, file: !434, line: 831, type: !432)
!4364 = !DILocalVariable(name: "hdr", scope: !4347, file: !434, line: 832, type: !4365)
!4365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4366, size: 32)
!4366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4000, line: 96, size: 64, elements: !4367)
!4367 = !{!4368, !4369}
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4366, file: !4000, line: 98, baseType: !3999, size: 32)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4366, file: !4000, line: 101, baseType: !102, size: 32, offset: 32)
!4370 = !DILocalVariable(name: "s", scope: !4347, file: !434, line: 833, type: !102)
!4371 = !DILocalVariable(name: "ps", scope: !4347, file: !434, line: 833, type: !431)
!4372 = !DILocalVariable(name: "i", scope: !4347, file: !434, line: 834, type: !32)
!4373 = !DILocalVariable(name: "args_size", scope: !4347, file: !434, line: 834, type: !32)
!4374 = !DILocalVariable(name: "s_nbr", scope: !4347, file: !434, line: 834, type: !32)
!4375 = !DILocalVariable(name: "ros_nbr", scope: !4347, file: !434, line: 834, type: !32)
!4376 = !DILocalVariable(name: "rws_nbr", scope: !4347, file: !434, line: 834, type: !32)
!4377 = !DILocalVariable(name: "s_idx", scope: !4347, file: !434, line: 834, type: !32)
!4378 = !DILocation(line: 0, scope: !4347)
!4379 = !DILocation(line: 836, column: 10, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4347, file: !434, line: 836, column: 6)
!4381 = !DILocation(line: 836, column: 6, scope: !4347)
!4382 = !DILocation(line: 842, column: 28, scope: !4347)
!4383 = !DILocation(line: 842, column: 14, scope: !4347)
!4384 = !DILocation(line: 852, column: 16, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4386, file: !434, line: 852, column: 2)
!4386 = distinct !DILexicalBlock(scope: !4347, file: !434, line: 852, column: 2)
!4387 = !DILocation(line: 852, column: 2, scope: !4386)
!4388 = !DILocation(line: 841, column: 28, scope: !4347)
!4389 = !DILocation(line: 841, column: 14, scope: !4347)
!4390 = !DILocation(line: 841, column: 32, scope: !4347)
!4391 = !DILocation(line: 847, column: 19, scope: !4347)
!4392 = !DILocation(line: 843, column: 28, scope: !4347)
!4393 = !DILocation(line: 843, column: 14, scope: !4347)
!4394 = !DILocation(line: 847, column: 31, scope: !4347)
!4395 = !DILocation(line: 844, column: 28, scope: !4347)
!4396 = !DILocation(line: 844, column: 14, scope: !4347)
!4397 = !DILocation(line: 847, column: 45, scope: !4347)
!4398 = !DILocation(line: 847, column: 41, scope: !4347)
!4399 = !DILocation(line: 854, column: 24, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4385, file: !434, line: 852, column: 30)
!4401 = !DILocation(line: 854, column: 11, scope: !4400)
!4402 = !DILocation(line: 855, column: 30, scope: !4400)
!4403 = !DILocation(line: 855, column: 22, scope: !4400)
!4404 = !DILocation(line: 855, column: 8, scope: !4400)
!4405 = !DILocation(line: 857, column: 7, scope: !4400)
!4406 = !DILocation(line: 859, column: 8, scope: !4400)
!4407 = !DILocation(line: 859, column: 18, scope: !4400)
!4408 = !DILocation(line: 859, column: 5, scope: !4400)
!4409 = !DILocation(line: 852, column: 26, scope: !4385)
!4410 = distinct !{!4410, !4387, !4411}
!4411 = !DILocation(line: 860, column: 2, scope: !4386)
!4412 = !DILocation(line: 863, column: 6, scope: !4347)
!4413 = !DILocation(line: 866, column: 56, scope: !4347)
!4414 = !DILocation(line: 866, column: 9, scope: !4347)
!4415 = !DILocation(line: 866, column: 2, scope: !4347)
!4416 = !DILocation(line: 867, column: 1, scope: !4347)
!4417 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !434, file: !434, line: 179, type: !4418, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4420)
!4418 = !DISubroutineType(types: !4419)
!4419 = !{!105, !4350, !4354, !104, !269, !104}
!4420 = !{!4421, !4422, !4423, !4424, !4425, !4426}
!4421 = !DILocalVariable(name: "out", arg: 1, scope: !4417, file: !434, line: 179, type: !4350)
!4422 = !DILocalVariable(name: "formatter", arg: 2, scope: !4417, file: !434, line: 180, type: !4354)
!4423 = !DILocalVariable(name: "ctx", arg: 3, scope: !4417, file: !434, line: 181, type: !104)
!4424 = !DILocalVariable(name: "fmt", arg: 4, scope: !4417, file: !434, line: 182, type: !269)
!4425 = !DILocalVariable(name: "buf", arg: 5, scope: !4417, file: !434, line: 182, type: !104)
!4426 = !DILocalVariable(name: "u", scope: !4417, file: !434, line: 187, type: !4427)
!4427 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4417, file: !434, line: 184, size: 32, elements: !4428)
!4428 = !{!4429, !4430}
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4427, file: !434, line: 185, baseType: !3967, size: 32)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4427, file: !434, line: 186, baseType: !104, size: 32)
!4431 = !DILocation(line: 0, scope: !4417)
!4432 = !DILocation(line: 191, column: 9, scope: !4417)
!4433 = !DILocation(line: 191, column: 2, scope: !4417)
!4434 = distinct !DISubprogram(name: "is_ptr", scope: !434, file: !434, line: 881, type: !4435, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4437)
!4435 = !DISubroutineType(types: !4436)
!4436 = !{!492, !269, !105}
!4437 = !{!4438, !4439, !4440, !4441, !4442}
!4438 = !DILocalVariable(name: "fmt", arg: 1, scope: !4434, file: !434, line: 881, type: !269)
!4439 = !DILocalVariable(name: "n", arg: 2, scope: !4434, file: !434, line: 881, type: !105)
!4440 = !DILocalVariable(name: "c", scope: !4434, file: !434, line: 883, type: !103)
!4441 = !DILocalVariable(name: "mod", scope: !4434, file: !434, line: 884, type: !492)
!4442 = !DILocalVariable(name: "cnt", scope: !4434, file: !434, line: 885, type: !105)
!4443 = !DILocation(line: 0, scope: !4434)
!4444 = !DILocation(line: 887, column: 14, scope: !4434)
!4445 = !DILocation(line: 887, column: 22, scope: !4434)
!4446 = !DILocation(line: 887, column: 2, scope: !4434)
!4447 = !DILocation(line: 887, column: 18, scope: !4434)
!4448 = !DILocation(line: 888, column: 7, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4434, file: !434, line: 887, column: 31)
!4450 = !DILocation(line: 889, column: 12, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4452, file: !434, line: 889, column: 8)
!4452 = distinct !DILexicalBlock(scope: !4453, file: !434, line: 888, column: 12)
!4453 = distinct !DILexicalBlock(scope: !4449, file: !434, line: 888, column: 7)
!4454 = !DILocation(line: 889, column: 8, scope: !4452)
!4455 = !DILocation(line: 890, column: 11, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4457, file: !434, line: 890, column: 9)
!4457 = distinct !DILexicalBlock(scope: !4451, file: !434, line: 889, column: 18)
!4458 = !DILocation(line: 890, column: 9, scope: !4457)
!4459 = !DILocation(line: 892, column: 16, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4456, file: !434, line: 892, column: 16)
!4461 = !DILocation(line: 892, column: 16, scope: !4456)
!4462 = !DILocation(line: 895, column: 15, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4451, file: !434, line: 895, column: 15)
!4464 = !DILocation(line: 895, column: 15, scope: !4451)
!4465 = !DILocation(line: 900, column: 9, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4449, file: !434, line: 900, column: 7)
!4467 = !DILocation(line: 900, column: 7, scope: !4449)
!4468 = distinct !{!4468, !4446, !4469}
!4469 = !DILocation(line: 903, column: 2, scope: !4434)
!4470 = !DILocation(line: 906, column: 1, scope: !4434)
!4471 = distinct !DISubprogram(name: "is_fmt_spec", scope: !434, file: !434, line: 873, type: !4472, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4474)
!4472 = !DISubroutineType(types: !4473)
!4473 = !{!492, !103}
!4474 = !{!4475}
!4475 = !DILocalVariable(name: "c", arg: 1, scope: !4471, file: !434, line: 873, type: !103)
!4476 = !DILocation(line: 0, scope: !4471)
!4477 = !DILocation(line: 875, column: 19, scope: !4471)
!4478 = !DILocation(line: 875, column: 2, scope: !4471)
!4479 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !434, file: !434, line: 908, type: !4480, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4486)
!4480 = !DISubroutineType(types: !4481)
!4481 = !{!105, !104, !111, !4482, !104, !113, !2581, !111}
!4482 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4000, line: 308, baseType: !4483)
!4483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4484, size: 32)
!4484 = !DISubroutineType(types: !4485)
!4485 = !{!105, !13, !111, !104}
!4486 = !{!4487, !4488, !4489, !4490, !4491, !4492, !4493, !4494, !4495, !4496, !4497, !4498, !4499, !4500, !4501, !4502, !4504, !4505, !4506, !4507, !4508, !4514, !4517, !4518, !4519, !4521, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4535, !4537, !4540, !4541, !4542, !4543, !4544, !4545, !4547, !4550, !4551, !4552}
!4487 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4479, file: !434, line: 908, type: !104)
!4488 = !DILocalVariable(name: "in_len", arg: 2, scope: !4479, file: !434, line: 909, type: !111)
!4489 = !DILocalVariable(name: "cb", arg: 3, scope: !4479, file: !434, line: 910, type: !4482)
!4490 = !DILocalVariable(name: "ctx", arg: 4, scope: !4479, file: !434, line: 911, type: !104)
!4491 = !DILocalVariable(name: "flags", arg: 5, scope: !4479, file: !434, line: 912, type: !113)
!4492 = !DILocalVariable(name: "strl", arg: 6, scope: !4479, file: !434, line: 913, type: !2581)
!4493 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4479, file: !434, line: 914, type: !111)
!4494 = !DILocalVariable(name: "buf", scope: !4479, file: !434, line: 918, type: !432)
!4495 = !DILocalVariable(name: "buf32", scope: !4479, file: !434, line: 919, type: !1007)
!4496 = !DILocalVariable(name: "args_size", scope: !4479, file: !434, line: 920, type: !32)
!4497 = !DILocalVariable(name: "ros_nbr", scope: !4479, file: !434, line: 920, type: !32)
!4498 = !DILocalVariable(name: "rws_nbr", scope: !4479, file: !434, line: 920, type: !32)
!4499 = !DILocalVariable(name: "fmt_present", scope: !4479, file: !434, line: 921, type: !492)
!4500 = !DILocalVariable(name: "rw_cpy", scope: !4479, file: !434, line: 922, type: !492)
!4501 = !DILocalVariable(name: "ro_cpy", scope: !4479, file: !434, line: 923, type: !492)
!4502 = !DILocalVariable(name: "in_desc", scope: !4479, file: !434, line: 924, type: !4503)
!4503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4003, size: 32)
!4504 = !DILocalVariable(name: "out_len", scope: !4479, file: !434, line: 960, type: !105)
!4505 = !DILocalVariable(name: "fmt", scope: !4479, file: !434, line: 965, type: !269)
!4506 = !DILocalVariable(name: "str_pos", scope: !4479, file: !434, line: 966, type: !432)
!4507 = !DILocalVariable(name: "strl_cnt", scope: !4479, file: !434, line: 967, type: !111)
!4508 = !DILocalVariable(name: "i", scope: !4509, file: !434, line: 973, type: !105)
!4509 = distinct !DILexicalBlock(scope: !4510, file: !434, line: 973, column: 4)
!4510 = distinct !DILexicalBlock(scope: !4511, file: !434, line: 972, column: 15)
!4511 = distinct !DILexicalBlock(scope: !4512, file: !434, line: 972, column: 7)
!4512 = distinct !DILexicalBlock(scope: !4513, file: !434, line: 970, column: 18)
!4513 = distinct !DILexicalBlock(scope: !4479, file: !434, line: 970, column: 6)
!4514 = !DILocalVariable(name: "str", scope: !4515, file: !434, line: 974, type: !269)
!4515 = distinct !DILexicalBlock(scope: !4516, file: !434, line: 973, column: 38)
!4516 = distinct !DILexicalBlock(scope: !4509, file: !434, line: 973, column: 4)
!4517 = !DILocalVariable(name: "len", scope: !4515, file: !434, line: 975, type: !105)
!4518 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4512, file: !434, line: 990, type: !492)
!4519 = !DILocalVariable(name: "i", scope: !4520, file: !434, line: 995, type: !105)
!4520 = distinct !DILexicalBlock(scope: !4512, file: !434, line: 995, column: 3)
!4521 = !DILocalVariable(name: "arg_idx", scope: !4522, file: !434, line: 996, type: !169)
!4522 = distinct !DILexicalBlock(scope: !4523, file: !434, line: 995, column: 37)
!4523 = distinct !DILexicalBlock(scope: !4520, file: !434, line: 995, column: 3)
!4524 = !DILocalVariable(name: "arg_pos", scope: !4522, file: !434, line: 997, type: !169)
!4525 = !DILocalVariable(name: "str", scope: !4522, file: !434, line: 998, type: !269)
!4526 = !DILocalVariable(name: "is_ro", scope: !4522, file: !434, line: 999, type: !492)
!4527 = !DILocalVariable(name: "len", scope: !4522, file: !434, line: 1000, type: !105)
!4528 = !DILocalVariable(name: "out_desc", scope: !4479, file: !434, line: 1038, type: !4003)
!4529 = !DILocalVariable(name: "cpy_str_pos", scope: !4479, file: !434, line: 1040, type: !3985)
!4530 = !DILocalVariable(name: "keep_str_pos", scope: !4479, file: !434, line: 1042, type: !3985)
!4531 = !DILocalVariable(name: "scpy_cnt", scope: !4479, file: !434, line: 1043, type: !169)
!4532 = !DILocalVariable(name: "keep_cnt", scope: !4479, file: !434, line: 1044, type: !169)
!4533 = !DILocalVariable(name: "dst", scope: !4479, file: !434, line: 1045, type: !432)
!4534 = !DILocalVariable(name: "rv", scope: !4479, file: !434, line: 1046, type: !105)
!4535 = !DILocalVariable(name: "i", scope: !4536, file: !434, line: 1074, type: !105)
!4536 = distinct !DILexicalBlock(scope: !4479, file: !434, line: 1074, column: 2)
!4537 = !DILocalVariable(name: "arg_idx", scope: !4538, file: !434, line: 1075, type: !169)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !434, line: 1074, column: 36)
!4539 = distinct !DILexicalBlock(scope: !4536, file: !434, line: 1074, column: 2)
!4540 = !DILocalVariable(name: "arg_pos", scope: !4538, file: !434, line: 1076, type: !169)
!4541 = !DILocalVariable(name: "str", scope: !4538, file: !434, line: 1077, type: !269)
!4542 = !DILocalVariable(name: "is_ro", scope: !4538, file: !434, line: 1078, type: !492)
!4543 = !DILocalVariable(name: "in_desc_backup", scope: !4479, file: !434, line: 1114, type: !4003)
!4544 = !DILocalVariable(name: "strs_len", scope: !4479, file: !434, line: 1134, type: !111)
!4545 = !DILocalVariable(name: "i", scope: !4546, file: !434, line: 1143, type: !105)
!4546 = distinct !DILexicalBlock(scope: !4479, file: !434, line: 1143, column: 2)
!4547 = !DILocalVariable(name: "loc", scope: !4548, file: !434, line: 1144, type: !169)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !434, line: 1143, column: 37)
!4549 = distinct !DILexicalBlock(scope: !4546, file: !434, line: 1143, column: 2)
!4550 = !DILocalVariable(name: "str", scope: !4548, file: !434, line: 1145, type: !269)
!4551 = !DILocalVariable(name: "str_len", scope: !4548, file: !434, line: 1146, type: !183)
!4552 = !DILabel(scope: !4553, name: "calculate_string_length", file: !434, line: 1021)
!4553 = distinct !DILexicalBlock(scope: !4554, file: !434, line: 1020, column: 56)
!4554 = distinct !DILexicalBlock(scope: !4555, file: !434, line: 1020, column: 15)
!4555 = distinct !DILexicalBlock(scope: !4522, file: !434, line: 1014, column: 8)
!4556 = !DILocation(line: 0, scope: !4479)
!4557 = !DILocation(line: 916, column: 2, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4559, file: !434, line: 916, column: 2)
!4559 = distinct !DILexicalBlock(scope: !4479, file: !434, line: 916, column: 2)
!4560 = !DILocation(line: 916, column: 2, scope: !4559)
!4561 = !DILocation(line: 916, column: 2, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4558, file: !434, line: 916, column: 2)
!4563 = !DILocation(line: 919, column: 20, scope: !4479)
!4564 = !DILocation(line: 921, column: 27, scope: !4479)
!4565 = !DILocation(line: 921, column: 21, scope: !4479)
!4566 = !DILocation(line: 926, column: 18, scope: !4479)
!4567 = !DILocation(line: 926, column: 11, scope: !4479)
!4568 = !DILocation(line: 926, column: 34, scope: !4479)
!4569 = !DILocation(line: 931, column: 21, scope: !4479)
!4570 = !DILocation(line: 931, column: 12, scope: !4479)
!4571 = !DILocation(line: 932, column: 11, scope: !4479)
!4572 = !DILocation(line: 932, column: 19, scope: !4479)
!4573 = !DILocation(line: 938, column: 21, scope: !4479)
!4574 = !DILocation(line: 938, column: 12, scope: !4479)
!4575 = !DILocation(line: 939, column: 19, scope: !4479)
!4576 = !DILocation(line: 939, column: 23, scope: !4479)
!4577 = !DILocation(line: 946, column: 14, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4479, file: !434, line: 946, column: 6)
!4579 = !DILocation(line: 947, column: 7, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4581, file: !434, line: 947, column: 7)
!4581 = distinct !DILexicalBlock(scope: !4578, file: !434, line: 946, column: 26)
!4582 = !DILocation(line: 947, column: 7, scope: !4581)
!4583 = !DILocation(line: 948, column: 4, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4580, file: !434, line: 947, column: 11)
!4585 = !DILocation(line: 949, column: 3, scope: !4584)
!4586 = !DILocation(line: 958, column: 23, scope: !4479)
!4587 = !DILocation(line: 958, column: 14, scope: !4479)
!4588 = !DILocation(line: 958, column: 27, scope: !4479)
!4589 = !DILocation(line: 965, column: 41, scope: !4479)
!4590 = !DILocation(line: 965, column: 20, scope: !4479)
!4591 = !DILocation(line: 966, column: 22, scope: !4479)
!4592 = !DILocation(line: 970, column: 9, scope: !4513)
!4593 = !DILocation(line: 970, column: 6, scope: !4479)
!4594 = !DILocation(line: 972, column: 7, scope: !4512)
!4595 = !DILocation(line: 0, scope: !4509)
!4596 = !DILocation(line: 973, column: 4, scope: !4509)
!4597 = !DILocation(line: 974, column: 46, scope: !4515)
!4598 = !DILocation(line: 974, column: 40, scope: !4515)
!4599 = !DILocation(line: 974, column: 23, scope: !4515)
!4600 = !DILocation(line: 0, scope: !4515)
!4601 = !DILocation(line: 975, column: 15, scope: !4515)
!4602 = !DILocation(line: 978, column: 14, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4515, file: !434, line: 978, column: 9)
!4604 = !DILocation(line: 979, column: 25, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4603, file: !434, line: 978, column: 38)
!4606 = !DILocation(line: 979, column: 19, scope: !4605)
!4607 = !DILocation(line: 979, column: 6, scope: !4605)
!4608 = !DILocation(line: 979, column: 23, scope: !4605)
!4609 = !DILocation(line: 980, column: 5, scope: !4605)
!4610 = !DILocation(line: 981, column: 13, scope: !4515)
!4611 = !DILocation(line: 982, column: 12, scope: !4515)
!4612 = !DILocation(line: 973, column: 34, scope: !4516)
!4613 = !DILocation(line: 973, column: 22, scope: !4516)
!4614 = distinct !{!4614, !4596, !4615}
!4615 = !DILocation(line: 983, column: 4, scope: !4509)
!4616 = !DILocation(line: 985, column: 16, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4618, file: !434, line: 985, column: 8)
!4618 = distinct !DILexicalBlock(scope: !4511, file: !434, line: 984, column: 10)
!4619 = !DILocation(line: 967, column: 9, scope: !4479)
!4620 = !DILocation(line: 971, column: 11, scope: !4512)
!4621 = !DILocation(line: 0, scope: !4512)
!4622 = !DILocation(line: 0, scope: !4520)
!4623 = !DILocation(line: 995, column: 21, scope: !4523)
!4624 = !DILocation(line: 995, column: 3, scope: !4520)
!4625 = !DILocation(line: 990, column: 34, scope: !4512)
!4626 = !DILocation(line: 990, column: 26, scope: !4512)
!4627 = !DILocation(line: 996, column: 30, scope: !4522)
!4628 = !DILocation(line: 0, scope: !4522)
!4629 = !DILocation(line: 997, column: 30, scope: !4522)
!4630 = !DILocation(line: 997, column: 22, scope: !4522)
!4631 = !DILocation(line: 998, column: 39, scope: !4522)
!4632 = !DILocation(line: 998, column: 22, scope: !4522)
!4633 = !DILocation(line: 999, column: 17, scope: !4522)
!4634 = !DILocation(line: 1002, column: 20, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4522, file: !434, line: 1002, column: 8)
!4636 = !DILocation(line: 996, column: 22, scope: !4522)
!4637 = !DILocation(line: 1002, column: 35, scope: !4635)
!4638 = !DILocation(line: 1002, column: 23, scope: !4635)
!4639 = !DILocation(line: 1002, column: 8, scope: !4522)
!4640 = !DILocation(line: 1003, column: 5, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4642, file: !434, line: 1003, column: 5)
!4642 = distinct !DILexicalBlock(scope: !4643, file: !434, line: 1003, column: 5)
!4643 = distinct !DILexicalBlock(scope: !4644, file: !434, line: 1003, column: 5)
!4644 = distinct !DILexicalBlock(scope: !4645, file: !434, line: 1003, column: 5)
!4645 = distinct !DILexicalBlock(scope: !4635, file: !434, line: 1002, column: 45)
!4646 = !DILocation(line: 1010, column: 13, scope: !4645)
!4647 = !DILocation(line: 1011, column: 5, scope: !4645)
!4648 = !DILocation(line: 1014, column: 8, scope: !4522)
!4649 = !DILocation(line: 1015, column: 9, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4555, file: !434, line: 1014, column: 15)
!4651 = !DILocation(line: 1018, column: 14, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !434, line: 1017, column: 12)
!4653 = distinct !DILexicalBlock(scope: !4650, file: !434, line: 1015, column: 9)
!4654 = !DILocation(line: 1020, column: 4, scope: !4650)
!4655 = !DILocation(line: 1020, column: 15, scope: !4555)
!4656 = !DILocation(line: 1021, column: 1, scope: !4553)
!4657 = !DILocation(line: 1022, column: 11, scope: !4553)
!4658 = !DILocation(line: 1025, column: 14, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4553, file: !434, line: 1025, column: 9)
!4660 = !DILocation(line: 1026, column: 25, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4659, file: !434, line: 1025, column: 38)
!4662 = !DILocation(line: 1026, column: 19, scope: !4661)
!4663 = !DILocation(line: 1026, column: 6, scope: !4661)
!4664 = !DILocation(line: 1026, column: 23, scope: !4661)
!4665 = !DILocation(line: 1027, column: 5, scope: !4661)
!4666 = !DILocation(line: 1031, column: 21, scope: !4553)
!4667 = !DILocation(line: 1031, column: 13, scope: !4553)
!4668 = !DILocation(line: 1032, column: 4, scope: !4553)
!4669 = !DILocation(line: 995, column: 33, scope: !4523)
!4670 = distinct !{!4670, !4624, !4671}
!4671 = !DILocation(line: 1033, column: 3, scope: !4520)
!4672 = !DILocation(line: 1040, column: 10, scope: !4479)
!4673 = !DILocation(line: 1042, column: 10, scope: !4479)
!4674 = !DILocation(line: 1052, column: 6, scope: !4479)
!4675 = !DILocation(line: 1055, column: 9, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4677, file: !434, line: 1052, column: 14)
!4677 = distinct !DILexicalBlock(scope: !4479, file: !434, line: 1052, column: 6)
!4678 = !DILocation(line: 1056, column: 2, scope: !4676)
!4679 = !DILocation(line: 1056, column: 21, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4677, file: !434, line: 1056, column: 13)
!4681 = !DILocation(line: 1066, column: 3, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4683, file: !434, line: 1065, column: 11)
!4683 = distinct !DILexicalBlock(scope: !4479, file: !434, line: 1065, column: 6)
!4684 = !DILocation(line: 1067, column: 2, scope: !4682)
!4685 = !DILocation(line: 1068, column: 10, scope: !4479)
!4686 = !DILocation(line: 0, scope: !4536)
!4687 = !DILocation(line: 1074, column: 20, scope: !4539)
!4688 = !DILocation(line: 1074, column: 2, scope: !4536)
!4689 = !DILocation(line: 1110, column: 24, scope: !4479)
!4690 = !DILocation(line: 1053, column: 12, scope: !4676)
!4691 = !DILocation(line: 1054, column: 12, scope: !4676)
!4692 = !DILocation(line: 1108, column: 30, scope: !4479)
!4693 = !DILocation(line: 1108, column: 40, scope: !4479)
!4694 = !DILocation(line: 1108, column: 38, scope: !4479)
!4695 = !DILocation(line: 1109, column: 31, scope: !4479)
!4696 = !DILocation(line: 1109, column: 24, scope: !4479)
!4697 = !DILocation(line: 1110, column: 31, scope: !4479)
!4698 = !DILocation(line: 1114, column: 31, scope: !4479)
!4699 = !DILocation(line: 1114, column: 48, scope: !4479)
!4700 = !DILocation(line: 1115, column: 13, scope: !4479)
!4701 = !DILocation(line: 1118, column: 7, scope: !4479)
!4702 = !DILocation(line: 1119, column: 9, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4479, file: !434, line: 1119, column: 6)
!4704 = !DILocation(line: 1119, column: 6, scope: !4479)
!4705 = !DILocation(line: 1075, column: 29, scope: !4538)
!4706 = !DILocation(line: 1075, column: 21, scope: !4538)
!4707 = !DILocation(line: 0, scope: !4538)
!4708 = !DILocation(line: 1076, column: 29, scope: !4538)
!4709 = !DILocation(line: 1076, column: 21, scope: !4538)
!4710 = !DILocation(line: 1077, column: 38, scope: !4538)
!4711 = !DILocation(line: 1077, column: 21, scope: !4538)
!4712 = !DILocation(line: 1078, column: 16, scope: !4538)
!4713 = !DILocation(line: 1080, column: 19, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4538, file: !434, line: 1080, column: 7)
!4715 = !DILocation(line: 1080, column: 34, scope: !4714)
!4716 = !DILocation(line: 1080, column: 22, scope: !4714)
!4717 = !DILocation(line: 1080, column: 7, scope: !4538)
!4718 = !DILocation(line: 1084, column: 7, scope: !4538)
!4719 = !DILocation(line: 1085, column: 8, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4721, file: !434, line: 1084, column: 14)
!4721 = distinct !DILexicalBlock(scope: !4538, file: !434, line: 1084, column: 7)
!4722 = !DILocation(line: 1086, column: 5, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4724, file: !434, line: 1086, column: 5)
!4724 = distinct !DILexicalBlock(scope: !4725, file: !434, line: 1086, column: 5)
!4725 = distinct !DILexicalBlock(scope: !4726, file: !434, line: 1085, column: 49)
!4726 = distinct !DILexicalBlock(scope: !4720, file: !434, line: 1085, column: 8)
!4727 = !DILocation(line: 1086, column: 5, scope: !4724)
!4728 = !DILocation(line: 1086, column: 5, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4723, file: !434, line: 1086, column: 5)
!4730 = !DILocation(line: 1087, column: 25, scope: !4725)
!4731 = !DILocation(line: 1087, column: 5, scope: !4725)
!4732 = !DILocation(line: 1088, column: 4, scope: !4725)
!4733 = !DILocation(line: 1088, column: 15, scope: !4726)
!4734 = !DILocation(line: 1089, column: 5, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4736, file: !434, line: 1089, column: 5)
!4736 = distinct !DILexicalBlock(scope: !4737, file: !434, line: 1089, column: 5)
!4737 = distinct !DILexicalBlock(scope: !4738, file: !434, line: 1088, column: 61)
!4738 = distinct !DILexicalBlock(scope: !4726, file: !434, line: 1088, column: 15)
!4739 = !DILocation(line: 1089, column: 5, scope: !4736)
!4740 = !DILocation(line: 1089, column: 5, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4735, file: !434, line: 1089, column: 5)
!4742 = !DILocation(line: 1090, column: 26, scope: !4737)
!4743 = !DILocation(line: 1090, column: 5, scope: !4737)
!4744 = !DILocation(line: 1091, column: 4, scope: !4737)
!4745 = !DILocation(line: 1095, column: 8, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4721, file: !434, line: 1094, column: 10)
!4747 = !DILocation(line: 1096, column: 5, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !434, line: 1096, column: 5)
!4749 = distinct !DILexicalBlock(scope: !4750, file: !434, line: 1096, column: 5)
!4750 = distinct !DILexicalBlock(scope: !4751, file: !434, line: 1095, column: 49)
!4751 = distinct !DILexicalBlock(scope: !4746, file: !434, line: 1095, column: 8)
!4752 = !DILocation(line: 1096, column: 5, scope: !4749)
!4753 = !DILocation(line: 1096, column: 5, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4748, file: !434, line: 1096, column: 5)
!4755 = !DILocation(line: 1097, column: 25, scope: !4750)
!4756 = !DILocation(line: 1097, column: 5, scope: !4750)
!4757 = !DILocation(line: 1098, column: 4, scope: !4750)
!4758 = !DILocation(line: 1099, column: 5, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4760, file: !434, line: 1099, column: 5)
!4760 = distinct !DILexicalBlock(scope: !4761, file: !434, line: 1099, column: 5)
!4761 = distinct !DILexicalBlock(scope: !4751, file: !434, line: 1098, column: 11)
!4762 = !DILocation(line: 1099, column: 5, scope: !4760)
!4763 = !DILocation(line: 1099, column: 5, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4759, file: !434, line: 1099, column: 5)
!4765 = !DILocation(line: 1100, column: 26, scope: !4761)
!4766 = !DILocation(line: 1100, column: 5, scope: !4761)
!4767 = !DILocation(line: 1100, column: 30, scope: !4761)
!4768 = !DILocation(line: 1101, column: 26, scope: !4761)
!4769 = !DILocation(line: 1101, column: 5, scope: !4761)
!4770 = !DILocation(line: 0, scope: !4721)
!4771 = !DILocation(line: 1074, column: 32, scope: !4539)
!4772 = distinct !{!4772, !4688, !4773}
!4773 = !DILocation(line: 1104, column: 2, scope: !4536)
!4774 = !DILocation(line: 1124, column: 13, scope: !4479)
!4775 = !DILocation(line: 1127, column: 10, scope: !4479)
!4776 = !DILocation(line: 1127, column: 7, scope: !4479)
!4777 = !DILocation(line: 1128, column: 9, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4479, file: !434, line: 1128, column: 6)
!4779 = !DILocation(line: 1128, column: 6, scope: !4479)
!4780 = !DILocation(line: 1134, column: 27, scope: !4479)
!4781 = !DILocation(line: 1136, column: 7, scope: !4479)
!4782 = !DILocation(line: 1137, column: 9, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4479, file: !434, line: 1137, column: 6)
!4784 = !DILocation(line: 1137, column: 6, scope: !4479)
!4785 = !DILocation(line: 1131, column: 10, scope: !4479)
!4786 = !DILocation(line: 1140, column: 10, scope: !4479)
!4787 = !DILocation(line: 0, scope: !4546)
!4788 = !DILocation(line: 1143, column: 20, scope: !4549)
!4789 = !DILocation(line: 1143, column: 2, scope: !4546)
!4790 = !DILocation(line: 1144, column: 3, scope: !4548)
!4791 = !DILocation(line: 1144, column: 17, scope: !4548)
!4792 = !DILocation(line: 0, scope: !4548)
!4793 = !DILocation(line: 1144, column: 11, scope: !4548)
!4794 = !DILocation(line: 1145, column: 38, scope: !4548)
!4795 = !DILocation(line: 1145, column: 21, scope: !4548)
!4796 = !DILocation(line: 1146, column: 22, scope: !4548)
!4797 = !DILocation(line: 1146, column: 29, scope: !4548)
!4798 = !DILocation(line: 1148, column: 8, scope: !4548)
!4799 = !DILocation(line: 1149, column: 10, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4548, file: !434, line: 1149, column: 7)
!4801 = !DILocation(line: 1149, column: 7, scope: !4548)
!4802 = !DILocation(line: 1154, column: 8, scope: !4548)
!4803 = !DILocation(line: 1155, column: 10, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4548, file: !434, line: 1155, column: 7)
!4805 = !DILocation(line: 1155, column: 7, scope: !4548)
!4806 = !DILocation(line: 1159, column: 2, scope: !4549)
!4807 = !DILocation(line: 1152, column: 11, scope: !4548)
!4808 = !DILocation(line: 1158, column: 11, scope: !4548)
!4809 = !DILocation(line: 1143, column: 33, scope: !4549)
!4810 = distinct !{!4810, !4789, !4811}
!4811 = !DILocation(line: 1159, column: 2, scope: !4546)
!4812 = !DILocation(line: 1162, column: 8, scope: !4479)
!4813 = !DILocation(line: 1164, column: 2, scope: !4479)
!4814 = !DILocation(line: 1165, column: 1, scope: !4479)
!4815 = distinct !DISubprogram(name: "get_package_len", scope: !434, file: !434, line: 196, type: !4816, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4818)
!4816 = !DISubroutineType(types: !4817)
!4817 = !{!111, !104}
!4818 = !{!4819, !4820, !4821, !4822, !4823, !4824, !4825}
!4819 = !DILocalVariable(name: "packaged", arg: 1, scope: !4815, file: !434, line: 196, type: !104)
!4820 = !DILocalVariable(name: "buf", scope: !4815, file: !434, line: 200, type: !432)
!4821 = !DILocalVariable(name: "start", scope: !4815, file: !434, line: 201, type: !432)
!4822 = !DILocalVariable(name: "args_size", scope: !4815, file: !434, line: 202, type: !32)
!4823 = !DILocalVariable(name: "s_nbr", scope: !4815, file: !434, line: 202, type: !32)
!4824 = !DILocalVariable(name: "ros_nbr", scope: !4815, file: !434, line: 202, type: !32)
!4825 = !DILocalVariable(name: "i", scope: !4826, file: !434, line: 215, type: !105)
!4826 = distinct !DILexicalBlock(scope: !4815, file: !434, line: 215, column: 2)
!4827 = !DILocation(line: 0, scope: !4815)
!4828 = !DILocation(line: 198, column: 2, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4830, file: !434, line: 198, column: 2)
!4830 = distinct !DILexicalBlock(scope: !4815, file: !434, line: 198, column: 2)
!4831 = !DILocation(line: 198, column: 2, scope: !4830)
!4832 = !DILocation(line: 198, column: 2, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4829, file: !434, line: 198, column: 2)
!4834 = !DILocation(line: 204, column: 14, scope: !4815)
!4835 = !DILocation(line: 204, column: 21, scope: !4815)
!4836 = !DILocation(line: 205, column: 14, scope: !4815)
!4837 = !DILocation(line: 206, column: 14, scope: !4815)
!4838 = !DILocation(line: 209, column: 6, scope: !4815)
!4839 = !DILocation(line: 212, column: 6, scope: !4815)
!4840 = !DILocation(line: 0, scope: !4826)
!4841 = !DILocation(line: 215, column: 20, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4826, file: !434, line: 215, column: 2)
!4843 = !DILocation(line: 215, column: 2, scope: !4826)
!4844 = !DILocation(line: 220, column: 33, scope: !4815)
!4845 = !DILocation(line: 220, column: 2, scope: !4815)
!4846 = !DILocation(line: 216, column: 6, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4842, file: !434, line: 215, column: 34)
!4848 = !DILocation(line: 217, column: 10, scope: !4847)
!4849 = !DILocation(line: 217, column: 36, scope: !4847)
!4850 = !DILocation(line: 217, column: 7, scope: !4847)
!4851 = !DILocation(line: 215, column: 30, scope: !4842)
!4852 = distinct !{!4852, !4843, !4853}
!4853 = !DILocation(line: 218, column: 2, scope: !4826)
!4854 = distinct !DISubprogram(name: "append_string", scope: !434, file: !434, line: 223, type: !4855, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !420, retainedNodes: !4857)
!4855 = !DISubroutineType(types: !4856)
!4856 = !{!105, !4482, !104, !269, !183}
!4857 = !{!4858, !4859, !4860, !4861}
!4858 = !DILocalVariable(name: "cb", arg: 1, scope: !4854, file: !434, line: 223, type: !4482)
!4859 = !DILocalVariable(name: "ctx", arg: 2, scope: !4854, file: !434, line: 223, type: !104)
!4860 = !DILocalVariable(name: "str", arg: 3, scope: !4854, file: !434, line: 223, type: !269)
!4861 = !DILocalVariable(name: "strl", arg: 4, scope: !4854, file: !434, line: 223, type: !183)
!4862 = !DILocation(line: 0, scope: !4854)
!4863 = !DILocation(line: 225, column: 9, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4854, file: !434, line: 225, column: 6)
!4865 = !DILocation(line: 225, column: 6, scope: !4854)
!4866 = !DILocation(line: 226, column: 14, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4864, file: !434, line: 225, column: 18)
!4868 = !DILocation(line: 226, column: 12, scope: !4867)
!4869 = !DILocation(line: 226, column: 3, scope: !4867)
!4870 = !DILocation(line: 229, column: 14, scope: !4854)
!4871 = !DILocation(line: 229, column: 9, scope: !4854)
!4872 = !DILocation(line: 229, column: 27, scope: !4854)
!4873 = !DILocation(line: 229, column: 39, scope: !4854)
!4874 = !DILocation(line: 230, column: 17, scope: !4854)
!4875 = !DILocation(line: 230, column: 9, scope: !4854)
!4876 = !DILocation(line: 230, column: 2, scope: !4854)
!4877 = !DILocation(line: 231, column: 1, scope: !4854)
!4878 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !446, file: !446, line: 45, type: !448, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4879)
!4879 = !{!4880}
!4880 = !DILocalVariable(name: "c", arg: 1, scope: !4878, file: !446, line: 45, type: !105)
!4881 = !DILocation(line: 0, scope: !4878)
!4882 = !DILocation(line: 50, column: 2, scope: !4878)
!4883 = distinct !DISubprogram(name: "__printk_hook_install", scope: !446, file: !446, line: 63, type: !4884, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4886)
!4884 = !DISubroutineType(types: !4885)
!4885 = !{null, !447}
!4886 = !{!4887}
!4887 = !DILocalVariable(name: "fn", arg: 1, scope: !4883, file: !446, line: 63, type: !447)
!4888 = !DILocation(line: 0, scope: !4883)
!4889 = !DILocation(line: 65, column: 12, scope: !4883)
!4890 = !DILocation(line: 66, column: 1, scope: !4883)
!4891 = distinct !DISubprogram(name: "__printk_get_hook", scope: !446, file: !446, line: 76, type: !4892, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !397)
!4892 = !DISubroutineType(types: !4893)
!4893 = !{!104}
!4894 = !DILocation(line: 78, column: 9, scope: !4891)
!4895 = !DILocation(line: 78, column: 2, scope: !4891)
!4896 = distinct !DISubprogram(name: "vprintk", scope: !446, file: !446, line: 113, type: !4897, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4905)
!4897 = !DISubroutineType(types: !4898)
!4898 = !{null, !269, !4899}
!4899 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3968, line: 99, baseType: !4900)
!4900 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3968, line: 40, baseType: !4901)
!4901 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !446, baseType: !4902)
!4902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4903)
!4903 = !{!4904}
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4902, file: !446, line: 79, baseType: !104, size: 32)
!4905 = !{!4906, !4907, !4908}
!4906 = !DILocalVariable(name: "fmt", arg: 1, scope: !4896, file: !446, line: 113, type: !269)
!4907 = !DILocalVariable(name: "ap", arg: 2, scope: !4896, file: !446, line: 113, type: !4899)
!4908 = !DILocalVariable(name: "ctx", scope: !4909, file: !446, line: 121, type: !4911)
!4909 = distinct !DILexicalBlock(scope: !4910, file: !446, line: 120, column: 27)
!4910 = distinct !DILexicalBlock(scope: !4896, file: !446, line: 120, column: 6)
!4911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !446, line: 81, size: 32, elements: !4912)
!4912 = !{!4913, !4914}
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4911, file: !446, line: 85, baseType: !32, size: 32)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4911, file: !446, line: 86, baseType: !4915, offset: 32)
!4915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, elements: !2579)
!4916 = !DILocation(line: 0, scope: !4896)
!4917 = !DILocation(line: 148, column: 3, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4910, file: !446, line: 138, column: 9)
!4919 = !DILocation(line: 155, column: 1, scope: !4896)
!4920 = distinct !DISubprogram(name: "char_out", scope: !446, file: !446, line: 107, type: !4921, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4923)
!4921 = !DISubroutineType(types: !4922)
!4922 = !{!105, !105, !104}
!4923 = !{!4924, !4925}
!4924 = !DILocalVariable(name: "c", arg: 1, scope: !4920, file: !446, line: 107, type: !105)
!4925 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4920, file: !446, line: 107, type: !104)
!4926 = !DILocation(line: 0, scope: !4920)
!4927 = !DILocation(line: 110, column: 9, scope: !4920)
!4928 = !DILocation(line: 110, column: 2, scope: !4920)
!4929 = distinct !DISubprogram(name: "cbvprintf", scope: !4000, file: !4000, line: 739, type: !4930, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4932)
!4930 = !DISubroutineType(types: !4931)
!4931 = !{!105, !4350, !104, !269, !4899}
!4932 = !{!4933, !4934, !4935, !4936}
!4933 = !DILocalVariable(name: "out", arg: 1, scope: !4929, file: !4000, line: 739, type: !4350)
!4934 = !DILocalVariable(name: "ctx", arg: 2, scope: !4929, file: !4000, line: 739, type: !104)
!4935 = !DILocalVariable(name: "format", arg: 3, scope: !4929, file: !4000, line: 739, type: !269)
!4936 = !DILocalVariable(name: "ap", arg: 4, scope: !4929, file: !4000, line: 739, type: !4899)
!4937 = !DILocation(line: 0, scope: !4929)
!4938 = !DILocation(line: 741, column: 9, scope: !4929)
!4939 = !DILocation(line: 741, column: 2, scope: !4929)
!4940 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !446, file: !446, line: 157, type: !4941, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4943)
!4941 = !DISubroutineType(types: !4942)
!4942 = !{null, !102, !111}
!4943 = !{!4944, !4945, !4946}
!4944 = !DILocalVariable(name: "c", arg: 1, scope: !4940, file: !446, line: 157, type: !102)
!4945 = !DILocalVariable(name: "n", arg: 2, scope: !4940, file: !446, line: 157, type: !111)
!4946 = !DILocalVariable(name: "i", scope: !4940, file: !446, line: 159, type: !111)
!4947 = !DILocation(line: 0, scope: !4940)
!4948 = !DILocation(line: 164, column: 16, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4950, file: !446, line: 164, column: 2)
!4950 = distinct !DILexicalBlock(scope: !4940, file: !446, line: 164, column: 2)
!4951 = !DILocation(line: 164, column: 2, scope: !4950)
!4952 = !DILocation(line: 165, column: 3, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4949, file: !446, line: 164, column: 26)
!4954 = !DILocation(line: 165, column: 13, scope: !4953)
!4955 = !DILocation(line: 164, column: 22, scope: !4949)
!4956 = distinct !{!4956, !4951, !4957}
!4957 = !DILocation(line: 166, column: 2, scope: !4950)
!4958 = !DILocation(line: 171, column: 1, scope: !4940)
!4959 = distinct !DISubprogram(name: "printk", scope: !446, file: !446, line: 203, type: !4960, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4962)
!4960 = !DISubroutineType(types: !4961)
!4961 = !{null, !269, null}
!4962 = !{!4963, !4964}
!4963 = !DILocalVariable(name: "fmt", arg: 1, scope: !4959, file: !446, line: 203, type: !269)
!4964 = !DILocalVariable(name: "ap", scope: !4959, file: !446, line: 205, type: !4899)
!4965 = !DILocation(line: 0, scope: !4959)
!4966 = !DILocation(line: 205, column: 2, scope: !4959)
!4967 = !DILocation(line: 205, column: 10, scope: !4959)
!4968 = !DILocation(line: 207, column: 2, scope: !4959)
!4969 = !DILocation(line: 209, column: 2, scope: !4959)
!4970 = !DILocation(line: 211, column: 2, scope: !4959)
!4971 = !DILocation(line: 212, column: 1, scope: !4959)
!4972 = distinct !DISubprogram(name: "snprintk", scope: !446, file: !446, line: 239, type: !4973, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4975)
!4973 = !DISubroutineType(types: !4974)
!4974 = !{!105, !102, !111, !269, null}
!4975 = !{!4976, !4977, !4978, !4979, !4980}
!4976 = !DILocalVariable(name: "str", arg: 1, scope: !4972, file: !446, line: 239, type: !102)
!4977 = !DILocalVariable(name: "size", arg: 2, scope: !4972, file: !446, line: 239, type: !111)
!4978 = !DILocalVariable(name: "fmt", arg: 3, scope: !4972, file: !446, line: 239, type: !269)
!4979 = !DILocalVariable(name: "ap", scope: !4972, file: !446, line: 241, type: !4899)
!4980 = !DILocalVariable(name: "ret", scope: !4972, file: !446, line: 242, type: !105)
!4981 = !DILocation(line: 0, scope: !4972)
!4982 = !DILocation(line: 241, column: 2, scope: !4972)
!4983 = !DILocation(line: 241, column: 10, scope: !4972)
!4984 = !DILocation(line: 244, column: 2, scope: !4972)
!4985 = !DILocation(line: 245, column: 8, scope: !4972)
!4986 = !DILocation(line: 246, column: 2, scope: !4972)
!4987 = !DILocation(line: 249, column: 1, scope: !4972)
!4988 = !DILocation(line: 248, column: 2, scope: !4972)
!4989 = distinct !DISubprogram(name: "vsnprintk", scope: !446, file: !446, line: 251, type: !4990, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !4992)
!4990 = !DISubroutineType(types: !4991)
!4991 = !{!105, !102, !111, !269, !4899}
!4992 = !{!4993, !4994, !4995, !4996, !4997}
!4993 = !DILocalVariable(name: "str", arg: 1, scope: !4989, file: !446, line: 251, type: !102)
!4994 = !DILocalVariable(name: "size", arg: 2, scope: !4989, file: !446, line: 251, type: !111)
!4995 = !DILocalVariable(name: "fmt", arg: 3, scope: !4989, file: !446, line: 251, type: !269)
!4996 = !DILocalVariable(name: "ap", arg: 4, scope: !4989, file: !446, line: 251, type: !4899)
!4997 = !DILocalVariable(name: "ctx", scope: !4989, file: !446, line: 253, type: !4998)
!4998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !446, line: 217, size: 96, elements: !4999)
!4999 = !{!5000, !5001, !5002}
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4998, file: !446, line: 218, baseType: !102, size: 32)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4998, file: !446, line: 219, baseType: !105, size: 32, offset: 32)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4998, file: !446, line: 220, baseType: !105, size: 32, offset: 64)
!5003 = !DILocation(line: 0, scope: !4989)
!5004 = !DILocation(line: 253, column: 2, scope: !4989)
!5005 = !DILocation(line: 253, column: 21, scope: !4989)
!5006 = !DILocation(line: 253, column: 27, scope: !4989)
!5007 = !DILocation(line: 255, column: 2, scope: !4989)
!5008 = !DILocation(line: 257, column: 10, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !4989, file: !446, line: 257, column: 6)
!5010 = !DILocation(line: 257, column: 22, scope: !5009)
!5011 = !DILocation(line: 257, column: 16, scope: !5009)
!5012 = !DILocation(line: 257, column: 6, scope: !4989)
!5013 = !DILocation(line: 258, column: 3, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5009, file: !446, line: 257, column: 27)
!5015 = !DILocation(line: 258, column: 18, scope: !5014)
!5016 = !DILocation(line: 259, column: 2, scope: !5014)
!5017 = !DILocation(line: 262, column: 1, scope: !4989)
!5018 = !DILocation(line: 261, column: 2, scope: !4989)
!5019 = distinct !DISubprogram(name: "str_out", scope: !446, file: !446, line: 223, type: !5020, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !442, retainedNodes: !5023)
!5020 = !DISubroutineType(types: !5021)
!5021 = !{!105, !105, !5022}
!5022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4998, size: 32)
!5023 = !{!5024, !5025}
!5024 = !DILocalVariable(name: "c", arg: 1, scope: !5019, file: !446, line: 223, type: !105)
!5025 = !DILocalVariable(name: "ctx", arg: 2, scope: !5019, file: !446, line: 223, type: !5022)
!5026 = !DILocation(line: 0, scope: !5019)
!5027 = !DILocation(line: 225, column: 11, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5019, file: !446, line: 225, column: 6)
!5029 = !DILocation(line: 225, column: 15, scope: !5028)
!5030 = !DILocation(line: 0, scope: !5028)
!5031 = !DILocation(line: 225, column: 23, scope: !5028)
!5032 = !DILocation(line: 225, column: 45, scope: !5028)
!5033 = !DILocation(line: 225, column: 37, scope: !5028)
!5034 = !DILocation(line: 225, column: 6, scope: !5019)
!5035 = !DILocation(line: 226, column: 8, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5028, file: !446, line: 225, column: 50)
!5037 = !DILocation(line: 226, column: 13, scope: !5036)
!5038 = !DILocation(line: 227, column: 3, scope: !5036)
!5039 = !DILocation(line: 230, column: 29, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5019, file: !446, line: 230, column: 6)
!5041 = !DILocation(line: 230, column: 17, scope: !5040)
!5042 = !DILocation(line: 230, column: 6, scope: !5019)
!5043 = !DILocation(line: 231, column: 22, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5040, file: !446, line: 230, column: 34)
!5045 = !DILocation(line: 231, column: 3, scope: !5044)
!5046 = !DILocation(line: 231, column: 26, scope: !5044)
!5047 = !DILocation(line: 232, column: 2, scope: !5044)
!5048 = !DILocation(line: 233, column: 28, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5040, file: !446, line: 232, column: 9)
!5050 = !DILocation(line: 233, column: 22, scope: !5049)
!5051 = !DILocation(line: 233, column: 3, scope: !5049)
!5052 = !DILocation(line: 233, column: 26, scope: !5049)
!5053 = !DILocation(line: 237, column: 1, scope: !5019)
!5054 = distinct !DISubprogram(name: "z_thread_entry", scope: !5055, file: !5055, line: 30, type: !5056, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !5058)
!5055 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5056 = !DISubroutineType(types: !5057)
!5057 = !{null, !254, !104, !104, !104}
!5058 = !{!5059, !5060, !5061, !5062}
!5059 = !DILocalVariable(name: "entry", arg: 1, scope: !5054, file: !5055, line: 30, type: !254)
!5060 = !DILocalVariable(name: "p1", arg: 2, scope: !5054, file: !5055, line: 31, type: !104)
!5061 = !DILocalVariable(name: "p2", arg: 3, scope: !5054, file: !5055, line: 31, type: !104)
!5062 = !DILocalVariable(name: "p3", arg: 4, scope: !5054, file: !5055, line: 31, type: !104)
!5063 = !DILocation(line: 0, scope: !5054)
!5064 = !DILocation(line: 36, column: 2, scope: !5054)
!5065 = !DILocation(line: 38, column: 17, scope: !5054)
!5066 = !DILocation(line: 38, column: 2, scope: !5054)
!5067 = !DILocation(line: 45, column: 2, scope: !5054)
!5068 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !5069, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !397)
!5069 = !DISubroutineType(types: !5070)
!5070 = !{!5071}
!5071 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !5072)
!5072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5073, size: 32)
!5073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !5074)
!5074 = !{!5075, !5133, !5145, !5146, !5147, !5148, !5154, !5169}
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5073, file: !127, line: 247, baseType: !5076, size: 384)
!5076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !5077)
!5077 = !{!5078, !5102, !5109, !5110, !5111, !5120, !5121, !5122}
!5078 = !DIDerivedType(tag: DW_TAG_member, scope: !5076, file: !127, line: 60, baseType: !5079, size: 64)
!5079 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5076, file: !127, line: 60, size: 64, elements: !5080)
!5080 = !{!5081, !5096}
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5079, file: !127, line: 61, baseType: !5082, size: 64)
!5082 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !5083)
!5083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !5084)
!5084 = !{!5085, !5091}
!5085 = !DIDerivedType(tag: DW_TAG_member, scope: !5083, file: !137, line: 38, baseType: !5086, size: 32)
!5086 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5083, file: !137, line: 38, size: 32, elements: !5087)
!5087 = !{!5088, !5090}
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5086, file: !137, line: 39, baseType: !5089, size: 32)
!5089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5083, size: 32)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5086, file: !137, line: 40, baseType: !5089, size: 32)
!5091 = !DIDerivedType(tag: DW_TAG_member, scope: !5083, file: !137, line: 42, baseType: !5092, size: 32, offset: 32)
!5092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5083, file: !137, line: 42, size: 32, elements: !5093)
!5093 = !{!5094, !5095}
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5092, file: !137, line: 43, baseType: !5089, size: 32)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5092, file: !137, line: 44, baseType: !5089, size: 32)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5079, file: !127, line: 62, baseType: !5097, size: 64)
!5097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !5098)
!5098 = !{!5099}
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5097, file: !153, line: 50, baseType: !5100, size: 64)
!5100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5101, size: 64, elements: !158)
!5101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5097, size: 32)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5076, file: !127, line: 68, baseType: !5103, size: 32, offset: 64)
!5103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5104, size: 32)
!5104 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !5105)
!5105 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !5106)
!5106 = !{!5107}
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5105, file: !163, line: 232, baseType: !5108, size: 64)
!5108 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !5083)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5076, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5076, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!5111 = !DIDerivedType(tag: DW_TAG_member, scope: !5076, file: !127, line: 90, baseType: !5112, size: 16, offset: 112)
!5112 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5076, file: !127, line: 90, size: 16, elements: !5113)
!5113 = !{!5114, !5119}
!5114 = !DIDerivedType(tag: DW_TAG_member, scope: !5112, file: !127, line: 91, baseType: !5115, size: 16)
!5115 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5112, file: !127, line: 91, size: 16, elements: !5116)
!5116 = !{!5117, !5118}
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5115, file: !127, line: 96, baseType: !179, size: 8)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5115, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5112, file: !127, line: 100, baseType: !183, size: 16)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5076, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5076, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5076, file: !127, line: 131, baseType: !5123, size: 192, offset: 192)
!5123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !5124)
!5124 = !{!5125, !5126, !5132}
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5123, file: !163, line: 245, baseType: !5082, size: 64)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5123, file: !163, line: 246, baseType: !5127, size: 32, offset: 64)
!5127 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !5128)
!5128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5129, size: 32)
!5129 = !DISubroutineType(types: !5130)
!5130 = !{null, !5131}
!5131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5123, size: 32)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5123, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5073, file: !127, line: 250, baseType: !5134, size: 288, offset: 384)
!5134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !5135)
!5135 = !{!5136, !5137, !5138, !5139, !5140, !5141, !5142, !5143, !5144}
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5134, file: !200, line: 26, baseType: !113, size: 32)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5134, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5134, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5134, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5134, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5134, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5134, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5134, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5134, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5073, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5073, file: !127, line: 256, baseType: !5104, size: 64, offset: 704)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5073, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5073, file: !127, line: 300, baseType: !5149, size: 96, offset: 800)
!5149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !5150)
!5150 = !{!5151, !5152, !5153}
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5149, file: !127, line: 153, baseType: !22, size: 32)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5149, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5149, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5073, file: !127, line: 325, baseType: !5155, size: 32, offset: 896)
!5155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5156, size: 32)
!5156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !5157)
!5157 = !{!5158, !5164, !5165}
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5156, file: !122, line: 5074, baseType: !5159, size: 96)
!5159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !5160)
!5160 = !{!5161, !5162, !5163}
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5159, file: !226, line: 57, baseType: !229, size: 32)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5159, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5159, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5156, file: !122, line: 5075, baseType: !5104, size: 64, offset: 96)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5156, file: !122, line: 5076, baseType: !5166, size: 32, offset: 160)
!5166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !5167)
!5167 = !{!5168}
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !5166, file: !236, line: 52, baseType: !22, size: 32)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5073, file: !127, line: 343, baseType: !5170, size: 64, offset: 928)
!5170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !5171)
!5171 = !{!5172, !5173}
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5170, file: !200, line: 63, baseType: !113, size: 32)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5170, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!5174 = !DILocation(line: 535, column: 9, scope: !5068)
!5175 = !DILocation(line: 535, column: 2, scope: !5068)
!5176 = distinct !DISubprogram(name: "k_thread_abort", scope: !3414, file: !3414, line: 188, type: !5177, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !5179)
!5177 = !DISubroutineType(types: !5178)
!5178 = !{null, !5071}
!5179 = !{!5180}
!5180 = !DILocalVariable(name: "thread", arg: 1, scope: !5176, file: !3414, line: 188, type: !5071)
!5181 = !DILocation(line: 0, scope: !5176)
!5182 = !DILocation(line: 197, column: 2, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5176, file: !3414, line: 197, column: 2)
!5184 = !{i64 2154069391}
!5185 = !DILocation(line: 198, column: 2, scope: !5176)
!5186 = !DILocation(line: 199, column: 1, scope: !5176)
!5187 = distinct !DISubprogram(name: "z_current_get", scope: !3414, file: !3414, line: 173, type: !5069, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !397)
!5188 = !DILocation(line: 180, column: 2, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5187, file: !3414, line: 180, column: 2)
!5190 = !{i64 2154069323}
!5191 = !DILocation(line: 181, column: 9, scope: !5187)
!5192 = !DILocation(line: 181, column: 2, scope: !5187)
!5193 = distinct !DISubprogram(name: "sys_heap_free", scope: !5194, file: !5194, line: 163, type: !5195, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5203)
!5194 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5195 = !DISubroutineType(types: !5196)
!5196 = !{null, !5197, !104}
!5197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5198, size: 32)
!5198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !5199)
!5199 = !{!5200, !5201, !5202}
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5198, file: !226, line: 57, baseType: !2566, size: 32)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5198, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5198, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!5203 = !{!5204, !5205, !5206, !5207}
!5204 = !DILocalVariable(name: "heap", arg: 1, scope: !5193, file: !5194, line: 163, type: !5197)
!5205 = !DILocalVariable(name: "mem", arg: 2, scope: !5193, file: !5194, line: 163, type: !104)
!5206 = !DILocalVariable(name: "h", scope: !5193, file: !5194, line: 168, type: !2566)
!5207 = !DILocalVariable(name: "c", scope: !5193, file: !5194, line: 169, type: !2571)
!5208 = !DILocation(line: 0, scope: !5193)
!5209 = !DILocation(line: 165, column: 10, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5193, file: !5194, line: 165, column: 6)
!5211 = !DILocation(line: 165, column: 6, scope: !5193)
!5212 = !DILocation(line: 168, column: 27, scope: !5193)
!5213 = !DILocation(line: 169, column: 16, scope: !5193)
!5214 = !{i32 0, i32 536870912}
!5215 = !DILocation(line: 175, column: 2, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5217, file: !5194, line: 175, column: 2)
!5217 = distinct !DILexicalBlock(scope: !5193, file: !5194, line: 175, column: 2)
!5218 = !DILocation(line: 175, column: 2, scope: !5217)
!5219 = !DILocation(line: 175, column: 2, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5216, file: !5194, line: 175, column: 2)
!5221 = !DILocation(line: 183, column: 2, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5223, file: !5194, line: 183, column: 2)
!5223 = distinct !DILexicalBlock(scope: !5193, file: !5194, line: 183, column: 2)
!5224 = !DILocation(line: 183, column: 2, scope: !5223)
!5225 = !DILocation(line: 183, column: 2, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5222, file: !5194, line: 183, column: 2)
!5227 = !DILocation(line: 187, column: 2, scope: !5193)
!5228 = !DILocation(line: 197, column: 2, scope: !5193)
!5229 = !DILocation(line: 198, column: 1, scope: !5193)
!5230 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !5194, file: !5194, line: 157, type: !5231, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5233)
!5231 = !DISubroutineType(types: !5232)
!5232 = !{!2571, !2566, !104}
!5233 = !{!5234, !5235, !5236, !5237}
!5234 = !DILocalVariable(name: "h", arg: 1, scope: !5230, file: !5194, line: 157, type: !2566)
!5235 = !DILocalVariable(name: "p", arg: 2, scope: !5230, file: !5194, line: 157, type: !104)
!5236 = !DILocalVariable(name: "mem", scope: !5230, file: !5194, line: 159, type: !432)
!5237 = !DILocalVariable(name: "base", scope: !5230, file: !5194, line: 159, type: !432)
!5238 = !DILocation(line: 0, scope: !5230)
!5239 = !DILocation(line: 159, column: 39, scope: !5230)
!5240 = !DILocation(line: 160, column: 14, scope: !5230)
!5241 = !DILocation(line: 160, column: 38, scope: !5230)
!5242 = !DILocation(line: 160, column: 46, scope: !5230)
!5243 = !DILocation(line: 160, column: 2, scope: !5230)
!5244 = distinct !DISubprogram(name: "chunk_used", scope: !2553, file: !2553, line: 137, type: !5245, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5247)
!5245 = !DISubroutineType(types: !5246)
!5246 = !{!492, !2566, !2571}
!5247 = !{!5248, !5249}
!5248 = !DILocalVariable(name: "h", arg: 1, scope: !5244, file: !2553, line: 137, type: !2566)
!5249 = !DILocalVariable(name: "c", arg: 2, scope: !5244, file: !2553, line: 137, type: !2571)
!5250 = !DILocation(line: 0, scope: !5244)
!5251 = !DILocation(line: 139, column: 9, scope: !5244)
!5252 = !DILocation(line: 139, column: 42, scope: !5244)
!5253 = !DILocation(line: 139, column: 2, scope: !5244)
!5254 = distinct !DISubprogram(name: "right_chunk", scope: !2553, file: !2553, line: 204, type: !5255, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5257)
!5255 = !DISubroutineType(types: !5256)
!5256 = !{!2571, !2566, !2571}
!5257 = !{!5258, !5259}
!5258 = !DILocalVariable(name: "h", arg: 1, scope: !5254, file: !2553, line: 204, type: !2566)
!5259 = !DILocalVariable(name: "c", arg: 2, scope: !5254, file: !2553, line: 204, type: !2571)
!5260 = !DILocation(line: 0, scope: !5254)
!5261 = !DILocation(line: 206, column: 13, scope: !5254)
!5262 = !DILocation(line: 206, column: 11, scope: !5254)
!5263 = !DILocation(line: 206, column: 2, scope: !5254)
!5264 = distinct !DISubprogram(name: "left_chunk", scope: !2553, file: !2553, line: 199, type: !5255, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5265)
!5265 = !{!5266, !5267}
!5266 = !DILocalVariable(name: "h", arg: 1, scope: !5264, file: !2553, line: 199, type: !2566)
!5267 = !DILocalVariable(name: "c", arg: 2, scope: !5264, file: !2553, line: 199, type: !2571)
!5268 = !DILocation(line: 0, scope: !5264)
!5269 = !DILocation(line: 201, column: 13, scope: !5264)
!5270 = !DILocation(line: 201, column: 11, scope: !5264)
!5271 = !DILocation(line: 201, column: 2, scope: !5264)
!5272 = distinct !DISubprogram(name: "set_chunk_used", scope: !2553, file: !2553, line: 147, type: !5273, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5275)
!5273 = !DISubroutineType(types: !5274)
!5274 = !{null, !2566, !2571, !492}
!5275 = !{!5276, !5277, !5278, !5279, !5280}
!5276 = !DILocalVariable(name: "h", arg: 1, scope: !5272, file: !2553, line: 147, type: !2566)
!5277 = !DILocalVariable(name: "c", arg: 2, scope: !5272, file: !2553, line: 147, type: !2571)
!5278 = !DILocalVariable(name: "used", arg: 3, scope: !5272, file: !2553, line: 147, type: !492)
!5279 = !DILocalVariable(name: "buf", scope: !5272, file: !2553, line: 149, type: !2560)
!5280 = !DILocalVariable(name: "cmem", scope: !5272, file: !2553, line: 150, type: !104)
!5281 = !DILocation(line: 0, scope: !5272)
!5282 = !DILocation(line: 149, column: 22, scope: !5272)
!5283 = !DILocation(line: 0, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5285, file: !2553, line: 159, column: 7)
!5285 = distinct !DILexicalBlock(scope: !5286, file: !2553, line: 158, column: 9)
!5286 = distinct !DILexicalBlock(scope: !5272, file: !2553, line: 152, column: 6)
!5287 = !DILocation(line: 159, column: 7, scope: !5285)
!5288 = !DILocation(line: 165, column: 1, scope: !5272)
!5289 = distinct !DISubprogram(name: "free_chunk", scope: !5194, file: !5194, line: 133, type: !5290, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5292)
!5290 = !DISubroutineType(types: !5291)
!5291 = !{null, !2566, !2571}
!5292 = !{!5293, !5294}
!5293 = !DILocalVariable(name: "h", arg: 1, scope: !5289, file: !5194, line: 133, type: !2566)
!5294 = !DILocalVariable(name: "c", arg: 2, scope: !5289, file: !5194, line: 133, type: !2571)
!5295 = !DILocation(line: 0, scope: !5289)
!5296 = !DILocation(line: 136, column: 21, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5289, file: !5194, line: 136, column: 6)
!5298 = !DILocation(line: 136, column: 7, scope: !5297)
!5299 = !DILocation(line: 136, column: 6, scope: !5289)
!5300 = !DILocation(line: 137, column: 3, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5297, file: !5194, line: 136, column: 41)
!5302 = !DILocation(line: 138, column: 22, scope: !5301)
!5303 = !DILocation(line: 138, column: 3, scope: !5301)
!5304 = !DILocation(line: 139, column: 2, scope: !5301)
!5305 = !DILocation(line: 142, column: 21, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5289, file: !5194, line: 142, column: 6)
!5307 = !DILocation(line: 142, column: 7, scope: !5306)
!5308 = !DILocation(line: 142, column: 6, scope: !5289)
!5309 = !DILocation(line: 143, column: 3, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5306, file: !5194, line: 142, column: 40)
!5311 = !DILocation(line: 144, column: 19, scope: !5310)
!5312 = !DILocation(line: 144, column: 3, scope: !5310)
!5313 = !DILocation(line: 145, column: 7, scope: !5310)
!5314 = !DILocation(line: 146, column: 2, scope: !5310)
!5315 = !DILocation(line: 148, column: 2, scope: !5289)
!5316 = !DILocation(line: 149, column: 1, scope: !5289)
!5317 = distinct !DISubprogram(name: "free_list_remove", scope: !5194, file: !5194, line: 60, type: !5290, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5318)
!5318 = !{!5319, !5320, !5321}
!5319 = !DILocalVariable(name: "h", arg: 1, scope: !5317, file: !5194, line: 60, type: !2566)
!5320 = !DILocalVariable(name: "c", arg: 2, scope: !5317, file: !5194, line: 60, type: !2571)
!5321 = !DILocalVariable(name: "bidx", scope: !5322, file: !5194, line: 63, type: !105)
!5322 = distinct !DILexicalBlock(scope: !5323, file: !5194, line: 62, column: 31)
!5323 = distinct !DILexicalBlock(scope: !5317, file: !5194, line: 62, column: 6)
!5324 = !DILocation(line: 0, scope: !5317)
!5325 = !DILocation(line: 63, column: 28, scope: !5322)
!5326 = !{i32 0, i32 32768}
!5327 = !DILocation(line: 63, column: 14, scope: !5322)
!5328 = !DILocation(line: 0, scope: !5322)
!5329 = !DILocation(line: 64, column: 3, scope: !5322)
!5330 = !DILocation(line: 66, column: 1, scope: !5317)
!5331 = distinct !DISubprogram(name: "merge_chunks", scope: !5194, file: !5194, line: 125, type: !5332, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5334)
!5332 = !DISubroutineType(types: !5333)
!5333 = !{null, !2566, !2571, !2571}
!5334 = !{!5335, !5336, !5337, !5338}
!5335 = !DILocalVariable(name: "h", arg: 1, scope: !5331, file: !5194, line: 125, type: !2566)
!5336 = !DILocalVariable(name: "lc", arg: 2, scope: !5331, file: !5194, line: 125, type: !2571)
!5337 = !DILocalVariable(name: "rc", arg: 3, scope: !5331, file: !5194, line: 125, type: !2571)
!5338 = !DILocalVariable(name: "newsz", scope: !5331, file: !5194, line: 127, type: !5339)
!5339 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2553, line: 62, baseType: !113)
!5340 = !DILocation(line: 0, scope: !5331)
!5341 = !DILocation(line: 127, column: 20, scope: !5331)
!5342 = !DILocation(line: 127, column: 40, scope: !5331)
!5343 = !DILocation(line: 127, column: 38, scope: !5331)
!5344 = !DILocation(line: 129, column: 2, scope: !5331)
!5345 = !DILocation(line: 130, column: 25, scope: !5331)
!5346 = !DILocation(line: 130, column: 2, scope: !5331)
!5347 = !DILocation(line: 131, column: 1, scope: !5331)
!5348 = distinct !DISubprogram(name: "free_list_add", scope: !5194, file: !5194, line: 98, type: !5290, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5349)
!5349 = !{!5350, !5351, !5352}
!5350 = !DILocalVariable(name: "h", arg: 1, scope: !5348, file: !5194, line: 98, type: !2566)
!5351 = !DILocalVariable(name: "c", arg: 2, scope: !5348, file: !5194, line: 98, type: !2571)
!5352 = !DILocalVariable(name: "bidx", scope: !5353, file: !5194, line: 101, type: !105)
!5353 = distinct !DILexicalBlock(scope: !5354, file: !5194, line: 100, column: 31)
!5354 = distinct !DILexicalBlock(scope: !5348, file: !5194, line: 100, column: 6)
!5355 = !DILocation(line: 0, scope: !5348)
!5356 = !DILocation(line: 101, column: 28, scope: !5353)
!5357 = !DILocation(line: 101, column: 14, scope: !5353)
!5358 = !DILocation(line: 0, scope: !5353)
!5359 = !DILocation(line: 102, column: 3, scope: !5353)
!5360 = !DILocation(line: 104, column: 1, scope: !5348)
!5361 = distinct !DISubprogram(name: "chunk_size", scope: !2553, file: !2553, line: 142, type: !5362, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5364)
!5362 = !DISubroutineType(types: !5363)
!5363 = !{!5339, !2566, !2571}
!5364 = !{!5365, !5366}
!5365 = !DILocalVariable(name: "h", arg: 1, scope: !5361, file: !2553, line: 142, type: !2566)
!5366 = !DILocalVariable(name: "c", arg: 2, scope: !5361, file: !2553, line: 142, type: !2571)
!5367 = !DILocation(line: 0, scope: !5361)
!5368 = !DILocation(line: 144, column: 9, scope: !5361)
!5369 = !DILocation(line: 144, column: 42, scope: !5361)
!5370 = !DILocation(line: 144, column: 2, scope: !5361)
!5371 = distinct !DISubprogram(name: "bucket_idx", scope: !2553, file: !2553, line: 250, type: !5372, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5374)
!5372 = !DISubroutineType(types: !5373)
!5373 = !{!105, !2566, !5339}
!5374 = !{!5375, !5376, !5377}
!5375 = !DILocalVariable(name: "h", arg: 1, scope: !5371, file: !2553, line: 250, type: !2566)
!5376 = !DILocalVariable(name: "sz", arg: 2, scope: !5371, file: !2553, line: 250, type: !5339)
!5377 = !DILocalVariable(name: "usable_sz", scope: !5371, file: !2553, line: 252, type: !32)
!5378 = !DILocation(line: 0, scope: !5371)
!5379 = !DILocation(line: 252, column: 32, scope: !5371)
!5380 = !DILocation(line: 252, column: 30, scope: !5371)
!5381 = !DILocation(line: 252, column: 50, scope: !5371)
!5382 = !DILocation(line: 253, column: 14, scope: !5371)
!5383 = !{i32 0, i32 33}
!5384 = !DILocation(line: 253, column: 12, scope: !5371)
!5385 = !DILocation(line: 253, column: 2, scope: !5371)
!5386 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !5194, file: !5194, line: 68, type: !5387, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5389)
!5387 = !DISubroutineType(types: !5388)
!5388 = !{null, !2566, !2571, !105}
!5389 = !{!5390, !5391, !5392, !5393, !5395, !5398}
!5390 = !DILocalVariable(name: "h", arg: 1, scope: !5386, file: !5194, line: 68, type: !2566)
!5391 = !DILocalVariable(name: "c", arg: 2, scope: !5386, file: !5194, line: 68, type: !2571)
!5392 = !DILocalVariable(name: "bidx", arg: 3, scope: !5386, file: !5194, line: 68, type: !105)
!5393 = !DILocalVariable(name: "b", scope: !5386, file: !5194, line: 70, type: !5394)
!5394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 32)
!5395 = !DILocalVariable(name: "second", scope: !5396, file: !5194, line: 84, type: !2571)
!5396 = distinct !DILexicalBlock(scope: !5397, file: !5194, line: 80, column: 9)
!5397 = distinct !DILexicalBlock(scope: !5386, file: !5194, line: 72, column: 6)
!5398 = !DILocalVariable(name: "first", scope: !5396, file: !5194, line: 85, type: !2571)
!5399 = !DILocation(line: 0, scope: !5386)
!5400 = !DILocation(line: 72, column: 9, scope: !5397)
!5401 = !DILocation(line: 72, column: 14, scope: !5397)
!5402 = !DILocation(line: 72, column: 6, scope: !5386)
!5403 = !DILocation(line: 76, column: 23, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5397, file: !5194, line: 72, column: 21)
!5405 = !DILocation(line: 76, column: 6, scope: !5404)
!5406 = !DILocation(line: 76, column: 20, scope: !5404)
!5407 = !DILocation(line: 77, column: 11, scope: !5404)
!5408 = !DILocation(line: 78, column: 3, scope: !5404)
!5409 = !DILocation(line: 79, column: 3, scope: !5404)
!5410 = !DILocation(line: 80, column: 2, scope: !5404)
!5411 = !DILocation(line: 0, scope: !5396)
!5412 = !DILocation(line: 85, column: 21, scope: !5396)
!5413 = !{i32 0, i32 65536}
!5414 = !DILocation(line: 87, column: 3, scope: !5396)
!5415 = !DILocation(line: 88, column: 3, scope: !5396)
!5416 = !DILocation(line: 89, column: 3, scope: !5396)
!5417 = !DILocation(line: 90, column: 3, scope: !5396)
!5418 = !DILocation(line: 96, column: 1, scope: !5386)
!5419 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2553, file: !2553, line: 187, type: !5332, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5420)
!5420 = !{!5421, !5422, !5423}
!5421 = !DILocalVariable(name: "h", arg: 1, scope: !5419, file: !2553, line: 187, type: !2566)
!5422 = !DILocalVariable(name: "c", arg: 2, scope: !5419, file: !2553, line: 187, type: !2571)
!5423 = !DILocalVariable(name: "prev", arg: 3, scope: !5419, file: !2553, line: 188, type: !2571)
!5424 = !DILocation(line: 0, scope: !5419)
!5425 = !DILocation(line: 190, column: 2, scope: !5419)
!5426 = !DILocation(line: 191, column: 1, scope: !5419)
!5427 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2553, file: !2553, line: 193, type: !5332, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5428)
!5428 = !{!5429, !5430, !5431}
!5429 = !DILocalVariable(name: "h", arg: 1, scope: !5427, file: !2553, line: 193, type: !2566)
!5430 = !DILocalVariable(name: "c", arg: 2, scope: !5427, file: !2553, line: 193, type: !2571)
!5431 = !DILocalVariable(name: "next", arg: 3, scope: !5427, file: !2553, line: 194, type: !2571)
!5432 = !DILocation(line: 0, scope: !5427)
!5433 = !DILocation(line: 196, column: 2, scope: !5427)
!5434 = !DILocation(line: 197, column: 1, scope: !5427)
!5435 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2553, file: !2553, line: 177, type: !5255, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5436)
!5436 = !{!5437, !5438}
!5437 = !DILocalVariable(name: "h", arg: 1, scope: !5435, file: !2553, line: 177, type: !2566)
!5438 = !DILocalVariable(name: "c", arg: 2, scope: !5435, file: !2553, line: 177, type: !2571)
!5439 = !DILocation(line: 0, scope: !5435)
!5440 = !DILocation(line: 179, column: 9, scope: !5435)
!5441 = !DILocation(line: 179, column: 2, scope: !5435)
!5442 = distinct !DISubprogram(name: "chunk_field", scope: !2553, file: !2553, line: 107, type: !5443, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5445)
!5443 = !DISubroutineType(types: !5444)
!5444 = !{!2571, !2566, !2571, !2552}
!5445 = !{!5446, !5447, !5448, !5449, !5450}
!5446 = !DILocalVariable(name: "h", arg: 1, scope: !5442, file: !2553, line: 107, type: !2566)
!5447 = !DILocalVariable(name: "c", arg: 2, scope: !5442, file: !2553, line: 107, type: !2571)
!5448 = !DILocalVariable(name: "f", arg: 3, scope: !5442, file: !2553, line: 108, type: !2552)
!5449 = !DILocalVariable(name: "buf", scope: !5442, file: !2553, line: 110, type: !2560)
!5450 = !DILocalVariable(name: "cmem", scope: !5442, file: !2553, line: 111, type: !104)
!5451 = !DILocation(line: 0, scope: !5442)
!5452 = !DILocation(line: 110, column: 22, scope: !5442)
!5453 = !DILocation(line: 111, column: 15, scope: !5442)
!5454 = !DILocation(line: 116, column: 11, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5456, file: !2553, line: 115, column: 9)
!5456 = distinct !DILexicalBlock(scope: !5442, file: !2553, line: 113, column: 6)
!5457 = !DILocation(line: 116, column: 10, scope: !5455)
!5458 = !DILocation(line: 118, column: 1, scope: !5442)
!5459 = distinct !DISubprogram(name: "chunk_buf", scope: !2553, file: !2553, line: 101, type: !5460, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5462)
!5460 = !DISubroutineType(types: !5461)
!5461 = !{!2560, !2566}
!5462 = !{!5463}
!5463 = !DILocalVariable(name: "h", arg: 1, scope: !5459, file: !2553, line: 101, type: !2566)
!5464 = !DILocation(line: 0, scope: !5459)
!5465 = !DILocation(line: 104, column: 9, scope: !5459)
!5466 = !DILocation(line: 104, column: 2, scope: !5459)
!5467 = distinct !DISubprogram(name: "chunk_set", scope: !2553, file: !2553, line: 120, type: !5468, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5470)
!5468 = !DISubroutineType(types: !5469)
!5469 = !{null, !2566, !2571, !2552, !2571}
!5470 = !{!5471, !5472, !5473, !5474, !5475, !5476}
!5471 = !DILocalVariable(name: "h", arg: 1, scope: !5467, file: !2553, line: 120, type: !2566)
!5472 = !DILocalVariable(name: "c", arg: 2, scope: !5467, file: !2553, line: 120, type: !2571)
!5473 = !DILocalVariable(name: "f", arg: 3, scope: !5467, file: !2553, line: 121, type: !2552)
!5474 = !DILocalVariable(name: "val", arg: 4, scope: !5467, file: !2553, line: 121, type: !2571)
!5475 = !DILocalVariable(name: "buf", scope: !5467, file: !2553, line: 125, type: !2560)
!5476 = !DILocalVariable(name: "cmem", scope: !5467, file: !2553, line: 126, type: !104)
!5477 = !DILocation(line: 0, scope: !5467)
!5478 = !DILocation(line: 125, column: 22, scope: !5467)
!5479 = !DILocation(line: 126, column: 15, scope: !5467)
!5480 = !DILocation(line: 133, column: 27, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5482, file: !2553, line: 131, column: 9)
!5482 = distinct !DILexicalBlock(scope: !5467, file: !2553, line: 128, column: 6)
!5483 = !DILocation(line: 133, column: 4, scope: !5481)
!5484 = !DILocation(line: 133, column: 3, scope: !5481)
!5485 = !DILocation(line: 133, column: 25, scope: !5481)
!5486 = !DILocation(line: 135, column: 1, scope: !5467)
!5487 = distinct !DISubprogram(name: "min_chunk_size", scope: !2553, file: !2553, line: 240, type: !5488, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5490)
!5488 = !DISubroutineType(types: !5489)
!5489 = !{!5339, !2566}
!5490 = !{!5491}
!5491 = !DILocalVariable(name: "h", arg: 1, scope: !5487, file: !2553, line: 240, type: !2566)
!5492 = !DILocation(line: 0, scope: !5487)
!5493 = !DILocation(line: 242, column: 9, scope: !5487)
!5494 = !DILocation(line: 242, column: 2, scope: !5487)
!5495 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2553, file: !2553, line: 235, type: !5496, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5498)
!5496 = !DISubroutineType(types: !5497)
!5497 = !{!5339, !2566, !111}
!5498 = !{!5499, !5500}
!5499 = !DILocalVariable(name: "h", arg: 1, scope: !5495, file: !2553, line: 235, type: !2566)
!5500 = !DILocalVariable(name: "bytes", arg: 2, scope: !5495, file: !2553, line: 235, type: !111)
!5501 = !DILocation(line: 0, scope: !5495)
!5502 = !DILocation(line: 237, column: 39, scope: !5495)
!5503 = !DILocation(line: 237, column: 9, scope: !5495)
!5504 = !DILocation(line: 237, column: 2, scope: !5495)
!5505 = distinct !DISubprogram(name: "chunksz", scope: !2553, file: !2553, line: 230, type: !5506, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5508)
!5506 = !DISubroutineType(types: !5507)
!5507 = !{!5339, !111}
!5508 = !{!5509}
!5509 = !DILocalVariable(name: "bytes", arg: 1, scope: !5505, file: !2553, line: 230, type: !111)
!5510 = !DILocation(line: 0, scope: !5505)
!5511 = !DILocation(line: 232, column: 29, scope: !5505)
!5512 = !DILocation(line: 232, column: 35, scope: !5505)
!5513 = !DILocation(line: 232, column: 2, scope: !5505)
!5514 = distinct !DISubprogram(name: "set_chunk_size", scope: !2553, file: !2553, line: 172, type: !5515, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5517)
!5515 = !DISubroutineType(types: !5516)
!5516 = !{null, !2566, !2571, !5339}
!5517 = !{!5518, !5519, !5520}
!5518 = !DILocalVariable(name: "h", arg: 1, scope: !5514, file: !2553, line: 172, type: !2566)
!5519 = !DILocalVariable(name: "c", arg: 2, scope: !5514, file: !2553, line: 172, type: !2571)
!5520 = !DILocalVariable(name: "size", arg: 3, scope: !5514, file: !2553, line: 172, type: !5339)
!5521 = !DILocation(line: 0, scope: !5514)
!5522 = !DILocation(line: 174, column: 38, scope: !5514)
!5523 = !DILocation(line: 174, column: 2, scope: !5514)
!5524 = !DILocation(line: 175, column: 1, scope: !5514)
!5525 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2553, file: !2553, line: 209, type: !5515, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5526)
!5526 = !{!5527, !5528, !5529}
!5527 = !DILocalVariable(name: "h", arg: 1, scope: !5525, file: !2553, line: 209, type: !2566)
!5528 = !DILocalVariable(name: "c", arg: 2, scope: !5525, file: !2553, line: 209, type: !2571)
!5529 = !DILocalVariable(name: "size", arg: 3, scope: !5525, file: !2553, line: 210, type: !5339)
!5530 = !DILocation(line: 0, scope: !5525)
!5531 = !DILocation(line: 212, column: 2, scope: !5525)
!5532 = !DILocation(line: 213, column: 1, scope: !5525)
!5533 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !5194, file: !5194, line: 34, type: !5387, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5534)
!5534 = !{!5535, !5536, !5537, !5538, !5539, !5542}
!5535 = !DILocalVariable(name: "h", arg: 1, scope: !5533, file: !5194, line: 34, type: !2566)
!5536 = !DILocalVariable(name: "c", arg: 2, scope: !5533, file: !5194, line: 34, type: !2571)
!5537 = !DILocalVariable(name: "bidx", arg: 3, scope: !5533, file: !5194, line: 34, type: !105)
!5538 = !DILocalVariable(name: "b", scope: !5533, file: !5194, line: 36, type: !5394)
!5539 = !DILocalVariable(name: "first", scope: !5540, file: !5194, line: 47, type: !2571)
!5540 = distinct !DILexicalBlock(scope: !5541, file: !5194, line: 46, column: 9)
!5541 = distinct !DILexicalBlock(scope: !5533, file: !5194, line: 42, column: 6)
!5542 = !DILocalVariable(name: "second", scope: !5540, file: !5194, line: 48, type: !2571)
!5543 = !DILocation(line: 0, scope: !5533)
!5544 = !DILocation(line: 36, column: 29, scope: !5533)
!5545 = !DILocation(line: 42, column: 6, scope: !5541)
!5546 = !DILocation(line: 42, column: 28, scope: !5541)
!5547 = !DILocation(line: 42, column: 6, scope: !5533)
!5548 = !DILocation(line: 44, column: 24, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5541, file: !5194, line: 42, column: 34)
!5550 = !DILocation(line: 44, column: 23, scope: !5549)
!5551 = !DILocation(line: 44, column: 6, scope: !5549)
!5552 = !DILocation(line: 44, column: 20, scope: !5549)
!5553 = !DILocation(line: 45, column: 6, scope: !5549)
!5554 = !DILocation(line: 45, column: 11, scope: !5549)
!5555 = !DILocation(line: 46, column: 2, scope: !5549)
!5556 = !DILocation(line: 47, column: 21, scope: !5540)
!5557 = !DILocation(line: 0, scope: !5540)
!5558 = !DILocation(line: 50, column: 6, scope: !5540)
!5559 = !DILocation(line: 50, column: 11, scope: !5540)
!5560 = !DILocation(line: 51, column: 3, scope: !5540)
!5561 = !DILocation(line: 52, column: 3, scope: !5540)
!5562 = !DILocation(line: 58, column: 1, scope: !5533)
!5563 = distinct !DISubprogram(name: "next_free_chunk", scope: !2553, file: !2553, line: 182, type: !5255, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5564)
!5564 = !{!5565, !5566}
!5565 = !DILocalVariable(name: "h", arg: 1, scope: !5563, file: !2553, line: 182, type: !2566)
!5566 = !DILocalVariable(name: "c", arg: 2, scope: !5563, file: !2553, line: 182, type: !2571)
!5567 = !DILocation(line: 0, scope: !5563)
!5568 = !DILocation(line: 184, column: 9, scope: !5563)
!5569 = !DILocation(line: 184, column: 2, scope: !5563)
!5570 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !5194, file: !5194, line: 200, type: !5571, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5573)
!5571 = !DISubroutineType(types: !5572)
!5572 = !{!111, !5197, !104}
!5573 = !{!5574, !5575, !5576, !5577, !5578, !5579, !5580}
!5574 = !DILocalVariable(name: "heap", arg: 1, scope: !5570, file: !5194, line: 200, type: !5197)
!5575 = !DILocalVariable(name: "mem", arg: 2, scope: !5570, file: !5194, line: 200, type: !104)
!5576 = !DILocalVariable(name: "h", scope: !5570, file: !5194, line: 202, type: !2566)
!5577 = !DILocalVariable(name: "c", scope: !5570, file: !5194, line: 203, type: !2571)
!5578 = !DILocalVariable(name: "addr", scope: !5570, file: !5194, line: 204, type: !111)
!5579 = !DILocalVariable(name: "chunk_base", scope: !5570, file: !5194, line: 205, type: !111)
!5580 = !DILocalVariable(name: "chunk_sz", scope: !5570, file: !5194, line: 206, type: !111)
!5581 = !DILocation(line: 0, scope: !5570)
!5582 = !DILocation(line: 202, column: 27, scope: !5570)
!5583 = !DILocation(line: 203, column: 16, scope: !5570)
!5584 = !DILocation(line: 204, column: 16, scope: !5570)
!5585 = !DILocation(line: 205, column: 31, scope: !5570)
!5586 = !DILocation(line: 205, column: 22, scope: !5570)
!5587 = !DILocation(line: 206, column: 20, scope: !5570)
!5588 = !DILocation(line: 206, column: 37, scope: !5570)
!5589 = !DILocation(line: 208, column: 26, scope: !5570)
!5590 = !DILocation(line: 208, column: 18, scope: !5570)
!5591 = !DILocation(line: 208, column: 2, scope: !5570)
!5592 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !5194, file: !5194, line: 263, type: !5593, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5595)
!5593 = !DISubroutineType(types: !5594)
!5594 = !{!104, !5197, !111}
!5595 = !{!5596, !5597, !5598, !5599, !5600, !5601}
!5596 = !DILocalVariable(name: "heap", arg: 1, scope: !5592, file: !5194, line: 263, type: !5197)
!5597 = !DILocalVariable(name: "bytes", arg: 2, scope: !5592, file: !5194, line: 263, type: !111)
!5598 = !DILocalVariable(name: "h", scope: !5592, file: !5194, line: 265, type: !2566)
!5599 = !DILocalVariable(name: "mem", scope: !5592, file: !5194, line: 266, type: !104)
!5600 = !DILocalVariable(name: "chunk_sz", scope: !5592, file: !5194, line: 272, type: !5339)
!5601 = !DILocalVariable(name: "c", scope: !5592, file: !5194, line: 273, type: !2571)
!5602 = !DILocation(line: 0, scope: !5592)
!5603 = !DILocation(line: 265, column: 27, scope: !5592)
!5604 = !DILocation(line: 268, column: 12, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5592, file: !5194, line: 268, column: 6)
!5606 = !DILocation(line: 268, column: 18, scope: !5605)
!5607 = !DILocation(line: 268, column: 21, scope: !5605)
!5608 = !DILocation(line: 268, column: 6, scope: !5592)
!5609 = !DILocation(line: 272, column: 23, scope: !5592)
!5610 = !DILocation(line: 273, column: 16, scope: !5592)
!5611 = !DILocation(line: 274, column: 8, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5592, file: !5194, line: 274, column: 6)
!5613 = !DILocation(line: 274, column: 6, scope: !5592)
!5614 = !DILocation(line: 279, column: 6, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5592, file: !5194, line: 279, column: 6)
!5616 = !DILocation(line: 279, column: 23, scope: !5615)
!5617 = !DILocation(line: 279, column: 6, scope: !5592)
!5618 = !DILocation(line: 280, column: 24, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5615, file: !5194, line: 279, column: 35)
!5620 = !DILocation(line: 280, column: 3, scope: !5619)
!5621 = !DILocation(line: 281, column: 3, scope: !5619)
!5622 = !DILocation(line: 282, column: 2, scope: !5619)
!5623 = !DILocation(line: 284, column: 2, scope: !5592)
!5624 = !DILocation(line: 286, column: 8, scope: !5592)
!5625 = !DILocation(line: 298, column: 2, scope: !5592)
!5626 = !DILocation(line: 299, column: 1, scope: !5592)
!5627 = distinct !DISubprogram(name: "size_too_big", scope: !2553, file: !2553, line: 256, type: !5628, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5630)
!5628 = !DISubroutineType(types: !5629)
!5629 = !{!492, !2566, !111}
!5630 = !{!5631, !5632}
!5631 = !DILocalVariable(name: "h", arg: 1, scope: !5627, file: !2553, line: 256, type: !2566)
!5632 = !DILocalVariable(name: "bytes", arg: 2, scope: !5627, file: !2553, line: 256, type: !111)
!5633 = !DILocation(line: 0, scope: !5627)
!5634 = !DILocation(line: 262, column: 16, scope: !5627)
!5635 = !DILocation(line: 262, column: 36, scope: !5627)
!5636 = !DILocation(line: 262, column: 30, scope: !5627)
!5637 = !DILocation(line: 262, column: 2, scope: !5627)
!5638 = distinct !DISubprogram(name: "alloc_chunk", scope: !5194, file: !5194, line: 211, type: !5639, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5641)
!5639 = !DISubroutineType(types: !5640)
!5640 = !{!2571, !2566, !5339}
!5641 = !{!5642, !5643, !5644, !5645, !5646, !5649, !5650, !5652, !5653, !5656}
!5642 = !DILocalVariable(name: "h", arg: 1, scope: !5638, file: !5194, line: 211, type: !2566)
!5643 = !DILocalVariable(name: "sz", arg: 2, scope: !5638, file: !5194, line: 211, type: !5339)
!5644 = !DILocalVariable(name: "bi", scope: !5638, file: !5194, line: 213, type: !105)
!5645 = !DILocalVariable(name: "b", scope: !5638, file: !5194, line: 214, type: !5394)
!5646 = !DILocalVariable(name: "first", scope: !5647, file: !5194, line: 233, type: !2571)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !5194, line: 232, column: 15)
!5648 = distinct !DILexicalBlock(scope: !5638, file: !5194, line: 232, column: 6)
!5649 = !DILocalVariable(name: "i", scope: !5647, file: !5194, line: 234, type: !105)
!5650 = !DILocalVariable(name: "c", scope: !5651, file: !5194, line: 236, type: !2571)
!5651 = distinct !DILexicalBlock(scope: !5647, file: !5194, line: 235, column: 6)
!5652 = !DILocalVariable(name: "bmask", scope: !5638, file: !5194, line: 249, type: !113)
!5653 = !DILocalVariable(name: "minbucket", scope: !5654, file: !5194, line: 252, type: !105)
!5654 = distinct !DILexicalBlock(scope: !5655, file: !5194, line: 251, column: 19)
!5655 = distinct !DILexicalBlock(scope: !5638, file: !5194, line: 251, column: 6)
!5656 = !DILocalVariable(name: "c", scope: !5654, file: !5194, line: 253, type: !2571)
!5657 = !DILocation(line: 0, scope: !5638)
!5658 = !DILocation(line: 213, column: 11, scope: !5638)
!5659 = !DILocation(line: 232, column: 9, scope: !5648)
!5660 = !DILocation(line: 232, column: 6, scope: !5648)
!5661 = !DILocation(line: 232, column: 6, scope: !5638)
!5662 = !DILocation(line: 236, column: 21, scope: !5651)
!5663 = !DILocation(line: 0, scope: !5647)
!5664 = !DILocation(line: 0, scope: !5651)
!5665 = !DILocation(line: 237, column: 8, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5651, file: !5194, line: 237, column: 8)
!5667 = !DILocation(line: 237, column: 25, scope: !5666)
!5668 = !DILocation(line: 237, column: 8, scope: !5651)
!5669 = !DILocation(line: 238, column: 5, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5666, file: !5194, line: 237, column: 32)
!5671 = !DILocation(line: 241, column: 14, scope: !5651)
!5672 = !DILocation(line: 241, column: 12, scope: !5651)
!5673 = !DILocation(line: 243, column: 12, scope: !5647)
!5674 = !DILocation(line: 243, column: 16, scope: !5647)
!5675 = distinct !{!5675, !5676, !5677}
!5676 = !DILocation(line: 235, column: 3, scope: !5647)
!5677 = !DILocation(line: 243, column: 35, scope: !5647)
!5678 = !DILocation(line: 249, column: 22, scope: !5638)
!5679 = !DILocation(line: 249, column: 39, scope: !5638)
!5680 = !DILocation(line: 249, column: 36, scope: !5638)
!5681 = !DILocation(line: 251, column: 12, scope: !5655)
!5682 = !DILocation(line: 251, column: 6, scope: !5638)
!5683 = !DILocation(line: 252, column: 19, scope: !5654)
!5684 = !DILocation(line: 0, scope: !5654)
!5685 = !DILocation(line: 253, column: 39, scope: !5654)
!5686 = !DILocation(line: 255, column: 3, scope: !5654)
!5687 = !DILocation(line: 261, column: 1, scope: !5638)
!5688 = distinct !DISubprogram(name: "split_chunks", scope: !5194, file: !5194, line: 109, type: !5332, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5689)
!5689 = !{!5690, !5691, !5692, !5693, !5694, !5695}
!5690 = !DILocalVariable(name: "h", arg: 1, scope: !5688, file: !5194, line: 109, type: !2566)
!5691 = !DILocalVariable(name: "lc", arg: 2, scope: !5688, file: !5194, line: 109, type: !2571)
!5692 = !DILocalVariable(name: "rc", arg: 3, scope: !5688, file: !5194, line: 109, type: !2571)
!5693 = !DILocalVariable(name: "sz0", scope: !5688, file: !5194, line: 114, type: !5339)
!5694 = !DILocalVariable(name: "lsz", scope: !5688, file: !5194, line: 115, type: !5339)
!5695 = !DILocalVariable(name: "rsz", scope: !5688, file: !5194, line: 116, type: !5339)
!5696 = !DILocation(line: 0, scope: !5688)
!5697 = !DILocation(line: 114, column: 18, scope: !5688)
!5698 = !DILocation(line: 115, column: 21, scope: !5688)
!5699 = !DILocation(line: 116, column: 22, scope: !5688)
!5700 = !DILocation(line: 118, column: 2, scope: !5688)
!5701 = !DILocation(line: 119, column: 2, scope: !5688)
!5702 = !DILocation(line: 120, column: 2, scope: !5688)
!5703 = !DILocation(line: 121, column: 25, scope: !5688)
!5704 = !DILocation(line: 121, column: 2, scope: !5688)
!5705 = !DILocation(line: 122, column: 1, scope: !5688)
!5706 = distinct !DISubprogram(name: "chunk_mem", scope: !5194, file: !5194, line: 24, type: !5707, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5709)
!5707 = !DISubroutineType(types: !5708)
!5708 = !{!104, !2566, !2571}
!5709 = !{!5710, !5711, !5712, !5713}
!5710 = !DILocalVariable(name: "h", arg: 1, scope: !5706, file: !5194, line: 24, type: !2566)
!5711 = !DILocalVariable(name: "c", arg: 2, scope: !5706, file: !5194, line: 24, type: !2571)
!5712 = !DILocalVariable(name: "buf", scope: !5706, file: !5194, line: 26, type: !2560)
!5713 = !DILocalVariable(name: "ret", scope: !5706, file: !5194, line: 27, type: !432)
!5714 = !DILocation(line: 0, scope: !5706)
!5715 = !DILocation(line: 26, column: 22, scope: !5706)
!5716 = !DILocation(line: 27, column: 38, scope: !5706)
!5717 = !DILocation(line: 31, column: 2, scope: !5706)
!5718 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !5194, file: !5194, line: 301, type: !5719, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5721)
!5719 = !DISubroutineType(types: !5720)
!5720 = !{!104, !5197, !111, !111}
!5721 = !{!5722, !5723, !5724, !5725, !5726, !5727, !5728, !5729, !5730, !5731, !5732, !5733}
!5722 = !DILocalVariable(name: "heap", arg: 1, scope: !5718, file: !5194, line: 301, type: !5197)
!5723 = !DILocalVariable(name: "align", arg: 2, scope: !5718, file: !5194, line: 301, type: !111)
!5724 = !DILocalVariable(name: "bytes", arg: 3, scope: !5718, file: !5194, line: 301, type: !111)
!5725 = !DILocalVariable(name: "h", scope: !5718, file: !5194, line: 303, type: !2566)
!5726 = !DILocalVariable(name: "gap", scope: !5718, file: !5194, line: 304, type: !111)
!5727 = !DILocalVariable(name: "rew", scope: !5718, file: !5194, line: 304, type: !111)
!5728 = !DILocalVariable(name: "padded_sz", scope: !5718, file: !5194, line: 335, type: !5339)
!5729 = !DILocalVariable(name: "c0", scope: !5718, file: !5194, line: 336, type: !2571)
!5730 = !DILocalVariable(name: "mem", scope: !5718, file: !5194, line: 341, type: !432)
!5731 = !DILocalVariable(name: "end", scope: !5718, file: !5194, line: 345, type: !2560)
!5732 = !DILocalVariable(name: "c", scope: !5718, file: !5194, line: 348, type: !2571)
!5733 = !DILocalVariable(name: "c_end", scope: !5718, file: !5194, line: 349, type: !2571)
!5734 = !DILocation(line: 0, scope: !5718)
!5735 = !DILocation(line: 303, column: 27, scope: !5718)
!5736 = !DILocation(line: 313, column: 16, scope: !5718)
!5737 = !DILocation(line: 313, column: 14, scope: !5718)
!5738 = !DILocation(line: 314, column: 12, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5718, file: !5194, line: 314, column: 6)
!5740 = !DILocation(line: 314, column: 6, scope: !5718)
!5741 = !DILocation(line: 315, column: 9, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5739, file: !5194, line: 314, column: 20)
!5743 = !DILocation(line: 316, column: 9, scope: !5742)
!5744 = !DILocation(line: 318, column: 13, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5746, file: !5194, line: 318, column: 7)
!5746 = distinct !DILexicalBlock(scope: !5739, file: !5194, line: 317, column: 9)
!5747 = !DILocation(line: 318, column: 7, scope: !5746)
!5748 = !DILocation(line: 319, column: 11, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5745, file: !5194, line: 318, column: 39)
!5750 = !DILocation(line: 319, column: 4, scope: !5749)
!5751 = !DILocation(line: 0, scope: !5739)
!5752 = !DILocation(line: 324, column: 2, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5754, file: !5194, line: 324, column: 2)
!5754 = distinct !DILexicalBlock(scope: !5718, file: !5194, line: 324, column: 2)
!5755 = !DILocation(line: 324, column: 2, scope: !5754)
!5756 = !DILocation(line: 324, column: 2, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5753, file: !5194, line: 324, column: 2)
!5758 = !DILocation(line: 326, column: 12, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5718, file: !5194, line: 326, column: 6)
!5760 = !DILocation(line: 326, column: 17, scope: !5759)
!5761 = !DILocation(line: 326, column: 20, scope: !5759)
!5762 = !DILocation(line: 326, column: 6, scope: !5718)
!5763 = !DILocation(line: 335, column: 50, scope: !5718)
!5764 = !DILocation(line: 335, column: 58, scope: !5718)
!5765 = !DILocation(line: 335, column: 24, scope: !5718)
!5766 = !DILocation(line: 336, column: 17, scope: !5718)
!5767 = !DILocation(line: 338, column: 9, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5718, file: !5194, line: 338, column: 6)
!5769 = !DILocation(line: 338, column: 6, scope: !5718)
!5770 = !DILocation(line: 341, column: 17, scope: !5718)
!5771 = !DILocation(line: 344, column: 20, scope: !5718)
!5772 = !DILocation(line: 344, column: 8, scope: !5718)
!5773 = !DILocation(line: 344, column: 47, scope: !5718)
!5774 = !DILocation(line: 345, column: 39, scope: !5718)
!5775 = !DILocation(line: 348, column: 16, scope: !5718)
!5776 = !DILocation(line: 349, column: 26, scope: !5718)
!5777 = !DILocation(line: 349, column: 24, scope: !5718)
!5778 = !DILocation(line: 353, column: 8, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5718, file: !5194, line: 353, column: 6)
!5780 = !DILocation(line: 353, column: 6, scope: !5718)
!5781 = !DILocation(line: 354, column: 3, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5779, file: !5194, line: 353, column: 14)
!5783 = !DILocation(line: 355, column: 3, scope: !5782)
!5784 = !DILocation(line: 356, column: 2, scope: !5782)
!5785 = !DILocation(line: 359, column: 6, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5718, file: !5194, line: 359, column: 6)
!5787 = !DILocation(line: 359, column: 24, scope: !5786)
!5788 = !DILocation(line: 359, column: 6, scope: !5718)
!5789 = !DILocation(line: 360, column: 3, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5786, file: !5194, line: 359, column: 33)
!5791 = !DILocation(line: 361, column: 3, scope: !5790)
!5792 = !DILocation(line: 362, column: 2, scope: !5790)
!5793 = !DILocation(line: 364, column: 2, scope: !5718)
!5794 = !DILocation(line: 377, column: 1, scope: !5718)
!5795 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !5194, file: !5194, line: 379, type: !5796, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5798)
!5796 = !DISubroutineType(types: !5797)
!5797 = !{!104, !5197, !104, !111, !111}
!5798 = !{!5799, !5800, !5801, !5802, !5803, !5804, !5805, !5806, !5807, !5808, !5814, !5815}
!5799 = !DILocalVariable(name: "heap", arg: 1, scope: !5795, file: !5194, line: 379, type: !5197)
!5800 = !DILocalVariable(name: "ptr", arg: 2, scope: !5795, file: !5194, line: 379, type: !104)
!5801 = !DILocalVariable(name: "align", arg: 3, scope: !5795, file: !5194, line: 380, type: !111)
!5802 = !DILocalVariable(name: "bytes", arg: 4, scope: !5795, file: !5194, line: 380, type: !111)
!5803 = !DILocalVariable(name: "h", scope: !5795, file: !5194, line: 382, type: !2566)
!5804 = !DILocalVariable(name: "c", scope: !5795, file: !5194, line: 399, type: !2571)
!5805 = !DILocalVariable(name: "rc", scope: !5795, file: !5194, line: 400, type: !2571)
!5806 = !DILocalVariable(name: "align_gap", scope: !5795, file: !5194, line: 401, type: !111)
!5807 = !DILocalVariable(name: "chunks_need", scope: !5795, file: !5194, line: 402, type: !5339)
!5808 = !DILocalVariable(name: "split_size", scope: !5809, file: !5194, line: 435, type: !5339)
!5809 = distinct !DILexicalBlock(scope: !5810, file: !5194, line: 433, column: 61)
!5810 = distinct !DILexicalBlock(scope: !5811, file: !5194, line: 432, column: 13)
!5811 = distinct !DILexicalBlock(scope: !5812, file: !5194, line: 409, column: 13)
!5812 = distinct !DILexicalBlock(scope: !5813, file: !5194, line: 406, column: 13)
!5813 = distinct !DILexicalBlock(scope: !5795, file: !5194, line: 404, column: 6)
!5814 = !DILocalVariable(name: "ptr2", scope: !5795, file: !5194, line: 474, type: !104)
!5815 = !DILocalVariable(name: "prev_size", scope: !5816, file: !5194, line: 477, type: !111)
!5816 = distinct !DILexicalBlock(scope: !5817, file: !5194, line: 476, column: 20)
!5817 = distinct !DILexicalBlock(scope: !5795, file: !5194, line: 476, column: 6)
!5818 = !DILocation(line: 0, scope: !5795)
!5819 = !DILocation(line: 382, column: 27, scope: !5795)
!5820 = !DILocation(line: 385, column: 10, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5795, file: !5194, line: 385, column: 6)
!5822 = !DILocation(line: 385, column: 6, scope: !5795)
!5823 = !DILocation(line: 386, column: 10, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5821, file: !5194, line: 385, column: 19)
!5825 = !DILocation(line: 386, column: 3, scope: !5824)
!5826 = !DILocation(line: 388, column: 12, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5795, file: !5194, line: 388, column: 6)
!5828 = !DILocation(line: 388, column: 6, scope: !5795)
!5829 = !DILocation(line: 389, column: 3, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5827, file: !5194, line: 388, column: 18)
!5831 = !DILocation(line: 390, column: 3, scope: !5830)
!5832 = !DILocation(line: 393, column: 2, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5834, file: !5194, line: 393, column: 2)
!5834 = distinct !DILexicalBlock(scope: !5795, file: !5194, line: 393, column: 2)
!5835 = !DILocation(line: 393, column: 2, scope: !5834)
!5836 = !DILocation(line: 393, column: 2, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5833, file: !5194, line: 393, column: 2)
!5838 = !DILocation(line: 395, column: 6, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5795, file: !5194, line: 395, column: 6)
!5840 = !DILocation(line: 395, column: 6, scope: !5795)
!5841 = !DILocation(line: 399, column: 16, scope: !5795)
!5842 = !DILocation(line: 400, column: 17, scope: !5795)
!5843 = !DILocation(line: 401, column: 49, scope: !5795)
!5844 = !DILocation(line: 401, column: 36, scope: !5795)
!5845 = !DILocation(line: 402, column: 52, scope: !5795)
!5846 = !DILocation(line: 402, column: 26, scope: !5795)
!5847 = !DILocation(line: 404, column: 6, scope: !5813)
!5848 = !DILocation(line: 404, column: 12, scope: !5813)
!5849 = !DILocation(line: 406, column: 13, scope: !5812)
!5850 = !DILocation(line: 406, column: 30, scope: !5812)
!5851 = !DILocation(line: 406, column: 13, scope: !5813)
!5852 = !DILocation(line: 409, column: 30, scope: !5811)
!5853 = !DILocation(line: 409, column: 13, scope: !5812)
!5854 = !DILocation(line: 420, column: 24, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5811, file: !5194, line: 409, column: 45)
!5856 = !DILocation(line: 420, column: 3, scope: !5855)
!5857 = !DILocation(line: 421, column: 3, scope: !5855)
!5858 = !DILocation(line: 422, column: 3, scope: !5855)
!5859 = !DILocation(line: 431, column: 3, scope: !5855)
!5860 = !DILocation(line: 432, column: 14, scope: !5810)
!5861 = !DILocation(line: 432, column: 32, scope: !5810)
!5862 = !DILocation(line: 433, column: 26, scope: !5810)
!5863 = !DILocation(line: 433, column: 24, scope: !5810)
!5864 = !DILocation(line: 433, column: 44, scope: !5810)
!5865 = !DILocation(line: 432, column: 13, scope: !5811)
!5866 = !DILocation(line: 435, column: 38, scope: !5809)
!5867 = !DILocation(line: 0, scope: !5809)
!5868 = !DILocation(line: 445, column: 3, scope: !5809)
!5869 = !DILocation(line: 447, column: 20, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5809, file: !5194, line: 447, column: 7)
!5871 = !DILocation(line: 447, column: 18, scope: !5870)
!5872 = !DILocation(line: 447, column: 7, scope: !5809)
!5873 = !DILocation(line: 448, column: 27, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5870, file: !5194, line: 447, column: 39)
!5875 = !DILocation(line: 448, column: 4, scope: !5874)
!5876 = !DILocation(line: 449, column: 4, scope: !5874)
!5877 = !DILocation(line: 450, column: 3, scope: !5874)
!5878 = !DILocation(line: 452, column: 3, scope: !5809)
!5879 = !DILocation(line: 453, column: 3, scope: !5809)
!5880 = !DILocation(line: 474, column: 15, scope: !5795)
!5881 = !DILocation(line: 476, column: 11, scope: !5817)
!5882 = !DILocation(line: 476, column: 6, scope: !5795)
!5883 = !DILocation(line: 477, column: 42, scope: !5816)
!5884 = !DILocation(line: 477, column: 22, scope: !5816)
!5885 = !DILocation(line: 477, column: 60, scope: !5816)
!5886 = !DILocation(line: 0, scope: !5816)
!5887 = !DILocation(line: 479, column: 21, scope: !5816)
!5888 = !DILocation(line: 479, column: 3, scope: !5816)
!5889 = !DILocation(line: 480, column: 3, scope: !5816)
!5890 = !DILocation(line: 481, column: 2, scope: !5816)
!5891 = !DILocation(line: 483, column: 1, scope: !5795)
!5892 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2553, file: !2553, line: 245, type: !5893, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5895)
!5893 = !DISubroutineType(types: !5894)
!5894 = !{!111, !2566, !5339}
!5895 = !{!5896, !5897}
!5896 = !DILocalVariable(name: "h", arg: 1, scope: !5892, file: !2553, line: 245, type: !2566)
!5897 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5892, file: !2553, line: 245, type: !5339)
!5898 = !DILocation(line: 0, scope: !5892)
!5899 = !DILocation(line: 247, column: 20, scope: !5892)
!5900 = !DILocation(line: 247, column: 33, scope: !5892)
!5901 = !DILocation(line: 247, column: 2, scope: !5892)
!5902 = distinct !DISubprogram(name: "sys_heap_init", scope: !5194, file: !5194, line: 485, type: !5903, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !5905)
!5903 = !DISubroutineType(types: !5904)
!5904 = !{null, !5197, !104, !111}
!5905 = !{!5906, !5907, !5908, !5909, !5910, !5911, !5912, !5913, !5914, !5915}
!5906 = !DILocalVariable(name: "heap", arg: 1, scope: !5902, file: !5194, line: 485, type: !5197)
!5907 = !DILocalVariable(name: "mem", arg: 2, scope: !5902, file: !5194, line: 485, type: !104)
!5908 = !DILocalVariable(name: "bytes", arg: 3, scope: !5902, file: !5194, line: 485, type: !111)
!5909 = !DILocalVariable(name: "addr", scope: !5902, file: !5194, line: 502, type: !22)
!5910 = !DILocalVariable(name: "end", scope: !5902, file: !5194, line: 503, type: !22)
!5911 = !DILocalVariable(name: "heap_sz", scope: !5902, file: !5194, line: 504, type: !5339)
!5912 = !DILocalVariable(name: "h", scope: !5902, file: !5194, line: 509, type: !2566)
!5913 = !DILocalVariable(name: "nb_buckets", scope: !5902, file: !5194, line: 520, type: !105)
!5914 = !DILocalVariable(name: "chunk0_size", scope: !5902, file: !5194, line: 521, type: !5339)
!5915 = !DILocalVariable(name: "i", scope: !5916, file: !5194, line: 526, type: !105)
!5916 = distinct !DILexicalBlock(scope: !5902, file: !5194, line: 526, column: 2)
!5917 = !DILocation(line: 0, scope: !5902)
!5918 = !DILocation(line: 491, column: 3, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5920, file: !5194, line: 491, column: 3)
!5920 = distinct !DILexicalBlock(scope: !5921, file: !5194, line: 491, column: 3)
!5921 = distinct !DILexicalBlock(scope: !5922, file: !5194, line: 489, column: 46)
!5922 = distinct !DILexicalBlock(scope: !5902, file: !5194, line: 489, column: 6)
!5923 = !DILocation(line: 491, column: 3, scope: !5920)
!5924 = !DILocation(line: 491, column: 3, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5919, file: !5194, line: 491, column: 3)
!5926 = !DILocation(line: 498, column: 2, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5928, file: !5194, line: 498, column: 2)
!5928 = distinct !DILexicalBlock(scope: !5902, file: !5194, line: 498, column: 2)
!5929 = !DILocation(line: 498, column: 2, scope: !5928)
!5930 = !DILocation(line: 498, column: 2, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5927, file: !5194, line: 498, column: 2)
!5932 = !DILocation(line: 499, column: 8, scope: !5902)
!5933 = !DILocation(line: 502, column: 19, scope: !5902)
!5934 = !DILocation(line: 503, column: 18, scope: !5902)
!5935 = !DILocation(line: 504, column: 27, scope: !5902)
!5936 = !DILocation(line: 504, column: 35, scope: !5902)
!5937 = !DILocation(line: 507, column: 2, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5939, file: !5194, line: 507, column: 2)
!5939 = distinct !DILexicalBlock(scope: !5902, file: !5194, line: 507, column: 2)
!5940 = !DILocation(line: 507, column: 2, scope: !5939)
!5941 = !DILocation(line: 507, column: 2, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5938, file: !5194, line: 507, column: 2)
!5943 = !DILocation(line: 509, column: 21, scope: !5902)
!5944 = !DILocation(line: 510, column: 8, scope: !5902)
!5945 = !DILocation(line: 510, column: 13, scope: !5902)
!5946 = !DILocation(line: 511, column: 5, scope: !5902)
!5947 = !DILocation(line: 511, column: 15, scope: !5902)
!5948 = !DILocation(line: 512, column: 5, scope: !5902)
!5949 = !DILocation(line: 512, column: 19, scope: !5902)
!5950 = !DILocation(line: 520, column: 19, scope: !5902)
!5951 = !DILocation(line: 522, column: 21, scope: !5902)
!5952 = !DILocation(line: 521, column: 56, scope: !5902)
!5953 = !DILocation(line: 521, column: 26, scope: !5902)
!5954 = !DILocation(line: 524, column: 2, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5956, file: !5194, line: 524, column: 2)
!5956 = distinct !DILexicalBlock(scope: !5902, file: !5194, line: 524, column: 2)
!5957 = !DILocation(line: 524, column: 2, scope: !5956)
!5958 = !DILocation(line: 0, scope: !5916)
!5959 = !DILocation(line: 526, column: 20, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5916, file: !5194, line: 526, column: 2)
!5961 = !DILocation(line: 526, column: 2, scope: !5916)
!5962 = !DILocation(line: 524, column: 2, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5955, file: !5194, line: 524, column: 2)
!5964 = !DILocation(line: 531, column: 2, scope: !5902)
!5965 = !DILocation(line: 532, column: 2, scope: !5902)
!5966 = !DILocation(line: 533, column: 2, scope: !5902)
!5967 = !DILocation(line: 536, column: 41, scope: !5902)
!5968 = !DILocation(line: 536, column: 2, scope: !5902)
!5969 = !DILocation(line: 537, column: 2, scope: !5902)
!5970 = !DILocation(line: 540, column: 2, scope: !5902)
!5971 = !DILocation(line: 541, column: 2, scope: !5902)
!5972 = !DILocation(line: 542, column: 2, scope: !5902)
!5973 = !DILocation(line: 544, column: 2, scope: !5902)
!5974 = !DILocation(line: 545, column: 1, scope: !5902)
!5975 = !DILocation(line: 527, column: 17, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5960, file: !5194, line: 526, column: 39)
!5977 = !DILocation(line: 527, column: 22, scope: !5976)
!5978 = !DILocation(line: 526, column: 35, scope: !5960)
!5979 = distinct !{!5979, !5961, !5980}
!5980 = !DILocation(line: 528, column: 2, scope: !5916)
!5981 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2586, file: !2586, line: 1338, type: !5982, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !5990)
!5982 = !DISubroutineType(types: !5983)
!5983 = !{!105, !4350, !104, !269, !5984, !113}
!5984 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3968, line: 99, baseType: !5985)
!5985 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3968, line: 40, baseType: !5986)
!5986 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2586, baseType: !5987)
!5987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5988)
!5988 = !{!5989}
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5987, file: !2586, baseType: !104, size: 32)
!5990 = !{!5991, !5992, !5993, !5994, !5995, !5996, !6000, !6001, !6002, !6004, !6009, !6052, !6055, !6058, !6059, !6060, !6061, !6062, !6063, !6064, !6067, !6068, !6069, !6073, !6076, !6078, !6081, !6082, !6083, !6088, !6094, !6097, !6101, !6107, !6111, !6114, !6116, !6119}
!5991 = !DILocalVariable(name: "out", arg: 1, scope: !5981, file: !2586, line: 1338, type: !4350)
!5992 = !DILocalVariable(name: "ctx", arg: 2, scope: !5981, file: !2586, line: 1338, type: !104)
!5993 = !DILocalVariable(name: "fp", arg: 3, scope: !5981, file: !2586, line: 1338, type: !269)
!5994 = !DILocalVariable(name: "ap", arg: 4, scope: !5981, file: !2586, line: 1339, type: !5984)
!5995 = !DILocalVariable(name: "flags", arg: 5, scope: !5981, file: !2586, line: 1339, type: !113)
!5996 = !DILocalVariable(name: "buf", scope: !5981, file: !2586, line: 1341, type: !5997)
!5997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 176, elements: !5998)
!5998 = !{!5999}
!5999 = !DISubrange(count: 22)
!6000 = !DILocalVariable(name: "count", scope: !5981, file: !2586, line: 1342, type: !111)
!6001 = !DILocalVariable(name: "sint", scope: !5981, file: !2586, line: 1343, type: !2605)
!6002 = !DILocalVariable(name: "tagged_ap", scope: !5981, file: !2586, line: 1345, type: !6003)
!6003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !492)
!6004 = !DILocalVariable(name: "rc", scope: !6005, file: !2586, line: 1377, type: !105)
!6005 = distinct !DILexicalBlock(scope: !6006, file: !2586, line: 1377, column: 4)
!6006 = distinct !DILexicalBlock(scope: !6007, file: !2586, line: 1376, column: 19)
!6007 = distinct !DILexicalBlock(scope: !6008, file: !2586, line: 1376, column: 7)
!6008 = distinct !DILexicalBlock(scope: !5981, file: !2586, line: 1375, column: 19)
!6009 = !DILocalVariable(name: "state", scope: !6008, file: !2586, line: 1395, type: !6010)
!6010 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5981, file: !2586, line: 1392, size: 192, elements: !6011)
!6011 = !{!6012, !6020}
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6010, file: !2586, line: 1393, baseType: !6013, size: 64)
!6013 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2586, line: 166, size: 64, elements: !6014)
!6014 = !{!6015, !6016, !6017, !6018, !6019}
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !6013, file: !2586, line: 168, baseType: !2605, size: 64)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !6013, file: !2586, line: 171, baseType: !2608, size: 64)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !6013, file: !2586, line: 174, baseType: !426, size: 64)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !6013, file: !2586, line: 177, baseType: !424, size: 64)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6013, file: !2586, line: 180, baseType: !104, size: 32)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !6010, file: !2586, line: 1394, baseType: !6021, size: 96, offset: 64)
!6021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2586, line: 189, size: 96, elements: !6022)
!6022 = !{!6023, !6024, !6025, !6026, !6027, !6028, !6029, !6030, !6031, !6032, !6033, !6034, !6035, !6036, !6037, !6038, !6039, !6040, !6041, !6042, !6047}
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !6021, file: !2586, line: 191, baseType: !492, size: 1, flags: DIFlagBitField, extraData: i64 0)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !6021, file: !2586, line: 194, baseType: !492, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !6021, file: !2586, line: 197, baseType: !492, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !6021, file: !2586, line: 200, baseType: !492, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !6021, file: !2586, line: 203, baseType: !492, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !6021, file: !2586, line: 206, baseType: !492, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !6021, file: !2586, line: 209, baseType: !492, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !6021, file: !2586, line: 212, baseType: !492, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !6021, file: !2586, line: 219, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !6021, file: !2586, line: 222, baseType: !492, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !6021, file: !2586, line: 229, baseType: !492, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !6021, file: !2586, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !6021, file: !2586, line: 238, baseType: !492, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !6021, file: !2586, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !6021, file: !2586, line: 244, baseType: !492, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !6021, file: !2586, line: 247, baseType: !492, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !6021, file: !2586, line: 252, baseType: !492, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !6021, file: !2586, line: 257, baseType: !492, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !6021, file: !2586, line: 260, baseType: !170, size: 8, offset: 24)
!6042 = !DIDerivedType(tag: DW_TAG_member, scope: !6021, file: !2586, line: 262, baseType: !6043, size: 32, offset: 32)
!6043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6021, file: !2586, line: 262, size: 32, elements: !6044)
!6044 = !{!6045, !6046}
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !6043, file: !2586, line: 267, baseType: !105, size: 32)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !6043, file: !2586, line: 289, baseType: !105, size: 32)
!6047 = !DIDerivedType(tag: DW_TAG_member, scope: !6021, file: !2586, line: 292, baseType: !6048, size: 32, offset: 64)
!6048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6021, file: !2586, line: 292, size: 32, elements: !6049)
!6049 = !{!6050, !6051}
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !6048, file: !2586, line: 297, baseType: !105, size: 32)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !6048, file: !2586, line: 306, baseType: !105, size: 32)
!6052 = !DILocalVariable(name: "conv", scope: !6008, file: !2586, line: 1400, type: !6053)
!6053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6054)
!6054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6021, size: 32)
!6055 = !DILocalVariable(name: "value", scope: !6008, file: !2586, line: 1401, type: !6056)
!6056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6057)
!6057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6013, size: 32)
!6058 = !DILocalVariable(name: "sp", scope: !6008, file: !2586, line: 1402, type: !269)
!6059 = !DILocalVariable(name: "width", scope: !6008, file: !2586, line: 1403, type: !105)
!6060 = !DILocalVariable(name: "precision", scope: !6008, file: !2586, line: 1404, type: !105)
!6061 = !DILocalVariable(name: "bps", scope: !6008, file: !2586, line: 1405, type: !269)
!6062 = !DILocalVariable(name: "bpe", scope: !6008, file: !2586, line: 1406, type: !269)
!6063 = !DILocalVariable(name: "sign", scope: !6008, file: !2586, line: 1407, type: !103)
!6064 = !DILocalVariable(name: "arg", scope: !6065, file: !2586, line: 1432, type: !105)
!6065 = distinct !DILexicalBlock(scope: !6066, file: !2586, line: 1431, column: 24)
!6066 = distinct !DILexicalBlock(scope: !6008, file: !2586, line: 1431, column: 7)
!6067 = !DILocalVariable(name: "specifier_cat", scope: !6008, file: !2586, line: 1468, type: !2585)
!6068 = !DILocalVariable(name: "length_mod", scope: !6008, file: !2586, line: 1470, type: !2593)
!6069 = !DILocalVariable(name: "rc", scope: !6070, file: !2586, line: 1575, type: !105)
!6070 = distinct !DILexicalBlock(scope: !6071, file: !2586, line: 1575, column: 4)
!6071 = distinct !DILexicalBlock(scope: !6072, file: !2586, line: 1574, column: 43)
!6072 = distinct !DILexicalBlock(scope: !6008, file: !2586, line: 1574, column: 7)
!6073 = !DILocalVariable(name: "rc", scope: !6074, file: !2586, line: 1584, type: !105)
!6074 = distinct !DILexicalBlock(scope: !6075, file: !2586, line: 1584, column: 4)
!6075 = distinct !DILexicalBlock(scope: !6008, file: !2586, line: 1582, column: 28)
!6076 = !DILocalVariable(name: "len", scope: !6077, file: !2586, line: 1589, type: !111)
!6077 = distinct !DILexicalBlock(scope: !6075, file: !2586, line: 1586, column: 13)
!6078 = !DILocalVariable(name: "len", scope: !6079, file: !2586, line: 1641, type: !111)
!6079 = distinct !DILexicalBlock(scope: !6080, file: !2586, line: 1640, column: 24)
!6080 = distinct !DILexicalBlock(scope: !6075, file: !2586, line: 1640, column: 8)
!6081 = !DILocalVariable(name: "nj_len", scope: !6008, file: !2586, line: 1722, type: !111)
!6082 = !DILocalVariable(name: "pad_len", scope: !6008, file: !2586, line: 1723, type: !105)
!6083 = !DILocalVariable(name: "pad", scope: !6084, file: !2586, line: 1751, type: !103)
!6084 = distinct !DILexicalBlock(scope: !6085, file: !2586, line: 1750, column: 26)
!6085 = distinct !DILexicalBlock(scope: !6086, file: !2586, line: 1750, column: 8)
!6086 = distinct !DILexicalBlock(scope: !6087, file: !2586, line: 1747, column: 18)
!6087 = distinct !DILexicalBlock(scope: !6008, file: !2586, line: 1747, column: 7)
!6088 = !DILocalVariable(name: "rc", scope: !6089, file: !2586, line: 1758, type: !105)
!6089 = distinct !DILexicalBlock(scope: !6090, file: !2586, line: 1758, column: 7)
!6090 = distinct !DILexicalBlock(scope: !6091, file: !2586, line: 1757, column: 21)
!6091 = distinct !DILexicalBlock(scope: !6092, file: !2586, line: 1757, column: 10)
!6092 = distinct !DILexicalBlock(scope: !6093, file: !2586, line: 1756, column: 26)
!6093 = distinct !DILexicalBlock(scope: !6084, file: !2586, line: 1756, column: 9)
!6094 = !DILocalVariable(name: "rc", scope: !6095, file: !2586, line: 1765, type: !105)
!6095 = distinct !DILexicalBlock(scope: !6096, file: !2586, line: 1765, column: 6)
!6096 = distinct !DILexicalBlock(scope: !6084, file: !2586, line: 1764, column: 25)
!6097 = !DILocalVariable(name: "rc", scope: !6098, file: !2586, line: 1774, type: !105)
!6098 = distinct !DILexicalBlock(scope: !6099, file: !2586, line: 1774, column: 4)
!6099 = distinct !DILexicalBlock(scope: !6100, file: !2586, line: 1773, column: 18)
!6100 = distinct !DILexicalBlock(scope: !6008, file: !2586, line: 1773, column: 7)
!6101 = !DILocalVariable(name: "rc", scope: !6102, file: !2586, line: 1819, type: !105)
!6102 = distinct !DILexicalBlock(scope: !6103, file: !2586, line: 1819, column: 5)
!6103 = distinct !DILexicalBlock(scope: !6104, file: !2586, line: 1818, column: 44)
!6104 = distinct !DILexicalBlock(scope: !6105, file: !2586, line: 1818, column: 8)
!6105 = distinct !DILexicalBlock(scope: !6106, file: !2586, line: 1817, column: 10)
!6106 = distinct !DILexicalBlock(scope: !6008, file: !2586, line: 1777, column: 7)
!6107 = !DILocalVariable(name: "rc", scope: !6108, file: !2586, line: 1823, type: !105)
!6108 = distinct !DILexicalBlock(scope: !6109, file: !2586, line: 1823, column: 5)
!6109 = distinct !DILexicalBlock(scope: !6110, file: !2586, line: 1822, column: 26)
!6110 = distinct !DILexicalBlock(scope: !6105, file: !2586, line: 1822, column: 8)
!6111 = !DILocalVariable(name: "rc", scope: !6112, file: !2586, line: 1828, type: !105)
!6112 = distinct !DILexicalBlock(scope: !6113, file: !2586, line: 1828, column: 5)
!6113 = distinct !DILexicalBlock(scope: !6105, file: !2586, line: 1827, column: 26)
!6114 = !DILocalVariable(name: "rc", scope: !6115, file: !2586, line: 1831, type: !105)
!6115 = distinct !DILexicalBlock(scope: !6105, file: !2586, line: 1831, column: 4)
!6116 = !DILocalVariable(name: "rc", scope: !6117, file: !2586, line: 1836, type: !105)
!6117 = distinct !DILexicalBlock(scope: !6118, file: !2586, line: 1836, column: 4)
!6118 = distinct !DILexicalBlock(scope: !6008, file: !2586, line: 1835, column: 21)
!6119 = !DILabel(scope: !6075, name: "prec_int_pad0", file: !2586, line: 1634)
!6120 = !DILocation(line: 0, scope: !5981)
!6121 = !DILocation(line: 1341, column: 2, scope: !5981)
!6122 = !DILocation(line: 1341, column: 7, scope: !5981)
!6123 = !DILocation(line: 1375, column: 2, scope: !5981)
!6124 = !DILocation(line: 1342, column: 9, scope: !5981)
!6125 = !DILocation(line: 1375, column: 9, scope: !5981)
!6126 = !DILocation(line: 1377, column: 4, scope: !6005)
!6127 = !DILocation(line: 0, scope: !6005)
!6128 = !DILocation(line: 1377, column: 4, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6005, file: !2586, line: 1377, column: 4)
!6130 = distinct !{!6130, !6123, !6131}
!6131 = !DILocation(line: 1839, column: 2, scope: !5981)
!6132 = !DILocation(line: 1392, column: 3, scope: !6008)
!6133 = !DILocation(line: 1395, column: 5, scope: !6008)
!6134 = !DILocation(line: 0, scope: !6008)
!6135 = !DILocation(line: 1409, column: 8, scope: !6008)
!6136 = !DILocation(line: 1414, column: 13, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6008, file: !2586, line: 1414, column: 7)
!6138 = !DILocation(line: 1414, column: 7, scope: !6008)
!6139 = !DILocation(line: 1415, column: 12, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6137, file: !2586, line: 1414, column: 25)
!6141 = !DILocation(line: 1417, column: 14, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6140, file: !2586, line: 1417, column: 8)
!6143 = !DILocation(line: 1417, column: 8, scope: !6140)
!6144 = !DILocation(line: 1418, column: 21, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6142, file: !2586, line: 1417, column: 19)
!6146 = !DILocation(line: 1419, column: 13, scope: !6145)
!6147 = !DILocation(line: 1420, column: 4, scope: !6145)
!6148 = !DILocation(line: 1421, column: 20, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6137, file: !2586, line: 1421, column: 14)
!6150 = !DILocation(line: 1421, column: 14, scope: !6137)
!6151 = !DILocation(line: 1431, column: 13, scope: !6066)
!6152 = !DILocation(line: 1431, column: 7, scope: !6008)
!6153 = !DILocation(line: 1432, column: 14, scope: !6065)
!6154 = !DILocation(line: 0, scope: !6065)
!6155 = !DILocation(line: 1434, column: 12, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6065, file: !2586, line: 1434, column: 8)
!6157 = !DILocation(line: 1434, column: 8, scope: !6065)
!6158 = !DILocation(line: 1435, column: 24, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6156, file: !2586, line: 1434, column: 17)
!6160 = !DILocation(line: 1436, column: 4, scope: !6159)
!6161 = !DILocation(line: 1439, column: 20, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6066, file: !2586, line: 1439, column: 14)
!6163 = !DILocation(line: 1439, column: 14, scope: !6066)
!6164 = !DILocation(line: 1469, column: 37, scope: !6008)
!6165 = !DILocation(line: 1448, column: 20, scope: !6008)
!6166 = !DILocation(line: 1449, column: 22, scope: !6008)
!6167 = !DILocation(line: 1471, column: 34, scope: !6008)
!6168 = !DILocation(line: 1478, column: 7, scope: !6008)
!6169 = !DILocation(line: 1479, column: 4, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6171, file: !2586, line: 1478, column: 40)
!6171 = distinct !DILexicalBlock(scope: !6008, file: !2586, line: 1478, column: 7)
!6172 = !DILocation(line: 1484, column: 19, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6170, file: !2586, line: 1479, column: 24)
!6174 = !DILocation(line: 1484, column: 17, scope: !6173)
!6175 = !DILocation(line: 1485, column: 5, scope: !6173)
!6176 = !DILocation(line: 1492, column: 20, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6178, file: !2586, line: 1491, column: 12)
!6178 = distinct !DILexicalBlock(scope: !6173, file: !2586, line: 1487, column: 9)
!6179 = !DILocation(line: 1492, column: 18, scope: !6177)
!6180 = !DILocation(line: 1494, column: 5, scope: !6173)
!6181 = !DILocation(line: 1497, column: 23, scope: !6173)
!6182 = !DILocation(line: 1496, column: 17, scope: !6173)
!6183 = !DILocation(line: 1498, column: 5, scope: !6173)
!6184 = !DILocation(line: 1501, column: 23, scope: !6173)
!6185 = !DILocation(line: 1500, column: 17, scope: !6173)
!6186 = !DILocation(line: 1502, column: 5, scope: !6173)
!6187 = !DILocation(line: 1513, column: 23, scope: !6173)
!6188 = !DILocation(line: 1513, column: 6, scope: !6173)
!6189 = !DILocation(line: 1512, column: 17, scope: !6173)
!6190 = !DILocation(line: 1514, column: 5, scope: !6173)
!6191 = !DILocation(line: 0, scope: !6173)
!6192 = !DILocation(line: 1516, column: 8, scope: !6170)
!6193 = !DILocation(line: 1517, column: 19, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6195, file: !2586, line: 1516, column: 33)
!6195 = distinct !DILexicalBlock(scope: !6170, file: !2586, line: 1516, column: 8)
!6196 = !DILocation(line: 1517, column: 17, scope: !6194)
!6197 = !DILocation(line: 1518, column: 4, scope: !6194)
!6198 = !DILocation(line: 1519, column: 19, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6200, file: !2586, line: 1518, column: 39)
!6200 = distinct !DILexicalBlock(scope: !6195, file: !2586, line: 1518, column: 15)
!6201 = !DILocation(line: 1519, column: 17, scope: !6199)
!6202 = !DILocation(line: 1520, column: 4, scope: !6199)
!6203 = !DILocation(line: 1522, column: 4, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6205, file: !2586, line: 1521, column: 47)
!6205 = distinct !DILexicalBlock(scope: !6171, file: !2586, line: 1521, column: 14)
!6206 = !DILocation(line: 1527, column: 19, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6204, file: !2586, line: 1522, column: 24)
!6208 = !DILocation(line: 1527, column: 17, scope: !6207)
!6209 = !DILocation(line: 1528, column: 5, scope: !6207)
!6210 = !DILocation(line: 0, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6207, file: !2586, line: 1530, column: 9)
!6212 = !DILocation(line: 1540, column: 23, scope: !6207)
!6213 = !DILocation(line: 1539, column: 17, scope: !6207)
!6214 = !DILocation(line: 1542, column: 5, scope: !6207)
!6215 = !DILocation(line: 1545, column: 23, scope: !6207)
!6216 = !DILocation(line: 1544, column: 17, scope: !6207)
!6217 = !DILocation(line: 1547, column: 5, scope: !6207)
!6218 = !DILocation(line: 1551, column: 23, scope: !6207)
!6219 = !DILocation(line: 1551, column: 6, scope: !6207)
!6220 = !DILocation(line: 1550, column: 17, scope: !6207)
!6221 = !DILocation(line: 1552, column: 5, scope: !6207)
!6222 = !DILocation(line: 0, scope: !6207)
!6223 = !DILocation(line: 1554, column: 8, scope: !6204)
!6224 = !DILocation(line: 1555, column: 19, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6226, file: !2586, line: 1554, column: 33)
!6226 = distinct !DILexicalBlock(scope: !6204, file: !2586, line: 1554, column: 8)
!6227 = !DILocation(line: 1555, column: 17, scope: !6225)
!6228 = !DILocation(line: 1556, column: 4, scope: !6225)
!6229 = !DILocation(line: 1557, column: 19, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6231, file: !2586, line: 1556, column: 39)
!6231 = distinct !DILexicalBlock(scope: !6226, file: !2586, line: 1556, column: 15)
!6232 = !DILocation(line: 1557, column: 17, scope: !6230)
!6233 = !DILocation(line: 1558, column: 4, scope: !6230)
!6234 = !DILocation(line: 0, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6236, file: !2586, line: 1560, column: 8)
!6236 = distinct !DILexicalBlock(scope: !6237, file: !2586, line: 1559, column: 45)
!6237 = distinct !DILexicalBlock(scope: !6205, file: !2586, line: 1559, column: 14)
!6238 = !DILocation(line: 1566, column: 17, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6240, file: !2586, line: 1565, column: 46)
!6240 = distinct !DILexicalBlock(scope: !6237, file: !2586, line: 1565, column: 14)
!6241 = !DILocation(line: 1566, column: 15, scope: !6239)
!6242 = !DILocation(line: 1567, column: 3, scope: !6239)
!6243 = !DILocation(line: 1574, column: 21, scope: !6072)
!6244 = !DILocation(line: 1575, column: 4, scope: !6070)
!6245 = !DILocation(line: 0, scope: !6070)
!6246 = !DILocation(line: 1575, column: 4, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6070, file: !2586, line: 1575, column: 4)
!6248 = !DILocation(line: 1582, column: 17, scope: !6008)
!6249 = !DILocation(line: 1582, column: 3, scope: !6008)
!6250 = !DILocation(line: 1584, column: 4, scope: !6074)
!6251 = !DILocation(line: 0, scope: !6074)
!6252 = !DILocation(line: 1584, column: 4, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6074, file: !2586, line: 1584, column: 4)
!6254 = !DILocation(line: 1587, column: 31, scope: !6077)
!6255 = !DILocation(line: 1591, column: 18, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6077, file: !2586, line: 1591, column: 8)
!6257 = !DILocation(line: 1591, column: 8, scope: !6077)
!6258 = !DILocation(line: 1592, column: 11, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6256, file: !2586, line: 1591, column: 24)
!6260 = !DILocation(line: 0, scope: !6077)
!6261 = !DILocation(line: 1593, column: 4, scope: !6259)
!6262 = !DILocation(line: 1594, column: 11, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6256, file: !2586, line: 1593, column: 11)
!6264 = !DILocation(line: 1604, column: 51, scope: !6075)
!6265 = !DILocation(line: 1604, column: 13, scope: !6075)
!6266 = !DILocation(line: 1604, column: 11, scope: !6075)
!6267 = !DILocation(line: 1606, column: 4, scope: !6075)
!6268 = !DILocation(line: 1609, column: 14, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6075, file: !2586, line: 1609, column: 8)
!6270 = !DILocation(line: 1609, column: 8, scope: !6075)
!6271 = !DILocation(line: 1619, column: 18, scope: !6075)
!6272 = !DILocation(line: 1620, column: 13, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6075, file: !2586, line: 1620, column: 8)
!6274 = !DILocation(line: 1620, column: 8, scope: !6075)
!6275 = !DILocation(line: 1622, column: 36, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6273, file: !2586, line: 1620, column: 18)
!6277 = !DILocation(line: 1622, column: 17, scope: !6276)
!6278 = !DILocation(line: 1623, column: 4, scope: !6276)
!6279 = !DILocation(line: 1632, column: 29, scope: !6075)
!6280 = !DILocation(line: 1632, column: 10, scope: !6075)
!6281 = !DILocation(line: 1632, column: 4, scope: !6075)
!6282 = !DILocation(line: 1407, column: 8, scope: !6008)
!6283 = !DILocation(line: 0, scope: !6075)
!6284 = !DILocation(line: 1634, column: 3, scope: !6075)
!6285 = !DILocation(line: 1640, column: 18, scope: !6080)
!6286 = !DILocation(line: 1640, column: 8, scope: !6075)
!6287 = !DILocation(line: 1729, column: 13, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6008, file: !2586, line: 1729, column: 7)
!6289 = !DILocation(line: 1641, column: 22, scope: !6079)
!6290 = !DILocation(line: 0, scope: !6079)
!6291 = !DILocation(line: 1646, column: 21, scope: !6079)
!6292 = !DILocation(line: 1649, column: 13, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6079, file: !2586, line: 1649, column: 9)
!6294 = !DILocation(line: 1649, column: 9, scope: !6079)
!6295 = !DILocation(line: 1650, column: 35, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6293, file: !2586, line: 1649, column: 34)
!6297 = !DILocation(line: 1650, column: 23, scope: !6296)
!6298 = !DILocation(line: 1651, column: 5, scope: !6296)
!6299 = !DILocation(line: 1660, column: 15, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6075, file: !2586, line: 1660, column: 8)
!6301 = !DILocation(line: 1660, column: 19, scope: !6300)
!6302 = !DILocation(line: 1660, column: 8, scope: !6075)
!6303 = !DILocation(line: 1661, column: 23, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6300, file: !2586, line: 1660, column: 28)
!6305 = !DILocation(line: 1661, column: 11, scope: !6304)
!6306 = !DILocation(line: 1665, column: 22, scope: !6304)
!6307 = !DILocation(line: 1666, column: 21, scope: !6304)
!6308 = !DILocation(line: 1668, column: 5, scope: !6304)
!6309 = !DILocation(line: 1677, column: 30, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6311, file: !2586, line: 1676, column: 49)
!6311 = distinct !DILexicalBlock(scope: !6075, file: !2586, line: 1676, column: 8)
!6312 = !DILocation(line: 1677, column: 5, scope: !6310)
!6313 = !DILocation(line: 1680, column: 4, scope: !6075)
!6314 = !DILocation(line: 0, scope: !6256)
!6315 = !DILocation(line: 1597, column: 14, scope: !6077)
!6316 = !DILocation(line: 1699, column: 11, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6008, file: !2586, line: 1699, column: 7)
!6318 = !DILocation(line: 1699, column: 7, scope: !6008)
!6319 = !DILocation(line: 1725, column: 7, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6008, file: !2586, line: 1725, column: 7)
!6321 = !DILocation(line: 1725, column: 12, scope: !6320)
!6322 = !DILocation(line: 1747, column: 13, scope: !6087)
!6323 = !DILocation(line: 1747, column: 7, scope: !6008)
!6324 = !DILocation(line: 1722, column: 24, scope: !6008)
!6325 = !DILocation(line: 1725, column: 7, scope: !6008)
!6326 = !DILocation(line: 1729, column: 7, scope: !6008)
!6327 = !DILocation(line: 1736, column: 13, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6008, file: !2586, line: 1736, column: 7)
!6329 = !DILocation(line: 1735, column: 19, scope: !6008)
!6330 = !DILocation(line: 1736, column: 7, scope: !6008)
!6331 = !DILocation(line: 1748, column: 10, scope: !6086)
!6332 = !DILocation(line: 1750, column: 15, scope: !6085)
!6333 = !DILocation(line: 1750, column: 8, scope: !6086)
!6334 = !DILocation(line: 0, scope: !6084)
!6335 = !DILocation(line: 1756, column: 15, scope: !6093)
!6336 = !DILocation(line: 1756, column: 9, scope: !6084)
!6337 = !DILocation(line: 1758, column: 7, scope: !6089)
!6338 = !DILocation(line: 0, scope: !6089)
!6339 = !DILocation(line: 1758, column: 7, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6089, file: !2586, line: 1758, column: 7)
!6341 = !DILocation(line: 1764, column: 5, scope: !6084)
!6342 = !DILocation(line: 0, scope: !6086)
!6343 = !DILocation(line: 1764, column: 20, scope: !6084)
!6344 = !DILocation(line: 1764, column: 17, scope: !6084)
!6345 = !DILocation(line: 1765, column: 6, scope: !6095)
!6346 = !DILocation(line: 0, scope: !6095)
!6347 = !DILocation(line: 1765, column: 6, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6095, file: !2586, line: 1765, column: 6)
!6349 = distinct !{!6349, !6341, !6350}
!6350 = !DILocation(line: 1766, column: 5, scope: !6084)
!6351 = !DILocation(line: 1773, column: 12, scope: !6100)
!6352 = !DILocation(line: 1773, column: 7, scope: !6008)
!6353 = !DILocation(line: 1773, column: 7, scope: !6100)
!6354 = !DILocation(line: 1774, column: 4, scope: !6098)
!6355 = !DILocation(line: 0, scope: !6098)
!6356 = !DILocation(line: 1774, column: 4, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6098, file: !2586, line: 1774, column: 4)
!6358 = !DILocation(line: 1818, column: 8, scope: !6104)
!6359 = !DILocation(line: 1818, column: 27, scope: !6104)
!6360 = !DILocation(line: 1818, column: 25, scope: !6104)
!6361 = !DILocation(line: 1818, column: 8, scope: !6105)
!6362 = !DILocation(line: 1819, column: 5, scope: !6102)
!6363 = !DILocation(line: 0, scope: !6102)
!6364 = !DILocation(line: 1819, column: 5, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6102, file: !2586, line: 1819, column: 5)
!6366 = !DILocation(line: 1822, column: 14, scope: !6110)
!6367 = !DILocation(line: 1822, column: 8, scope: !6105)
!6368 = !DILocation(line: 1823, column: 5, scope: !6108)
!6369 = !DILocation(line: 0, scope: !6108)
!6370 = !DILocation(line: 1823, column: 5, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6108, file: !2586, line: 1823, column: 5)
!6372 = !DILocation(line: 1826, column: 20, scope: !6105)
!6373 = !DILocation(line: 1827, column: 4, scope: !6105)
!6374 = !DILocation(line: 0, scope: !6105)
!6375 = !DILocation(line: 1827, column: 21, scope: !6105)
!6376 = !DILocation(line: 1827, column: 18, scope: !6105)
!6377 = !DILocation(line: 1828, column: 5, scope: !6112)
!6378 = !DILocation(line: 0, scope: !6112)
!6379 = !DILocation(line: 1828, column: 5, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6112, file: !2586, line: 1828, column: 5)
!6381 = distinct !{!6381, !6373, !6382}
!6382 = !DILocation(line: 1829, column: 4, scope: !6105)
!6383 = !DILocation(line: 1831, column: 4, scope: !6115)
!6384 = !DILocation(line: 0, scope: !6115)
!6385 = !DILocation(line: 1831, column: 4, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6115, file: !2586, line: 1831, column: 4)
!6387 = !DILocation(line: 1835, column: 16, scope: !6008)
!6388 = !DILocation(line: 1835, column: 3, scope: !6008)
!6389 = !DILocation(line: 1836, column: 4, scope: !6117)
!6390 = !DILocation(line: 0, scope: !6117)
!6391 = !DILocation(line: 1836, column: 4, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6117, file: !2586, line: 1836, column: 4)
!6393 = !DILocation(line: 1837, column: 4, scope: !6118)
!6394 = distinct !{!6394, !6388, !6395}
!6395 = !DILocation(line: 1838, column: 3, scope: !6008)
!6396 = !DILocation(line: 1844, column: 1, scope: !5981)
!6397 = distinct !DISubprogram(name: "extract_conversion", scope: !2586, file: !2586, line: 642, type: !6398, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6400)
!6398 = !DISubroutineType(types: !6399)
!6399 = !{!269, !6054, !269}
!6400 = !{!6401, !6402}
!6401 = !DILocalVariable(name: "conv", arg: 1, scope: !6397, file: !2586, line: 642, type: !6054)
!6402 = !DILocalVariable(name: "sp", arg: 2, scope: !6397, file: !2586, line: 643, type: !269)
!6403 = !DILocation(line: 0, scope: !6397)
!6404 = !DILocation(line: 645, column: 10, scope: !6397)
!6405 = !DILocation(line: 653, column: 2, scope: !6397)
!6406 = !DILocation(line: 654, column: 6, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6397, file: !2586, line: 654, column: 6)
!6408 = !DILocation(line: 654, column: 10, scope: !6407)
!6409 = !DILocation(line: 654, column: 6, scope: !6397)
!6410 = !DILocation(line: 655, column: 24, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6407, file: !2586, line: 654, column: 18)
!6412 = !DILocation(line: 655, column: 19, scope: !6411)
!6413 = !DILocation(line: 656, column: 3, scope: !6411)
!6414 = !DILocation(line: 659, column: 7, scope: !6397)
!6415 = !DILocation(line: 660, column: 7, scope: !6397)
!6416 = !DILocation(line: 661, column: 7, scope: !6397)
!6417 = !DILocation(line: 662, column: 7, scope: !6397)
!6418 = !DILocation(line: 663, column: 7, scope: !6397)
!6419 = !DILocation(line: 665, column: 2, scope: !6397)
!6420 = !DILocation(line: 666, column: 1, scope: !6397)
!6421 = distinct !DISubprogram(name: "outs", scope: !2586, file: !2586, line: 1319, type: !6422, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6424)
!6422 = !DISubroutineType(types: !6423)
!6423 = !{!105, !4350, !104, !269, !269}
!6424 = !{!6425, !6426, !6427, !6428, !6429, !6430}
!6425 = !DILocalVariable(name: "out", arg: 1, scope: !6421, file: !2586, line: 1319, type: !4350)
!6426 = !DILocalVariable(name: "ctx", arg: 2, scope: !6421, file: !2586, line: 1320, type: !104)
!6427 = !DILocalVariable(name: "sp", arg: 3, scope: !6421, file: !2586, line: 1321, type: !269)
!6428 = !DILocalVariable(name: "ep", arg: 4, scope: !6421, file: !2586, line: 1322, type: !269)
!6429 = !DILocalVariable(name: "count", scope: !6421, file: !2586, line: 1324, type: !111)
!6430 = !DILocalVariable(name: "rc", scope: !6431, file: !2586, line: 1327, type: !105)
!6431 = distinct !DILexicalBlock(scope: !6421, file: !2586, line: 1326, column: 45)
!6432 = !DILocation(line: 0, scope: !6421)
!6433 = !DILocation(line: 1326, column: 2, scope: !6421)
!6434 = !DILocation(line: 1324, column: 9, scope: !6421)
!6435 = !DILocation(line: 1326, column: 13, scope: !6421)
!6436 = !DILocation(line: 1326, column: 19, scope: !6421)
!6437 = !DILocation(line: 1327, column: 21, scope: !6431)
!6438 = !DILocation(line: 1326, column: 36, scope: !6421)
!6439 = !DILocation(line: 1326, column: 39, scope: !6421)
!6440 = !DILocation(line: 1327, column: 24, scope: !6431)
!6441 = !DILocation(line: 1327, column: 16, scope: !6431)
!6442 = !DILocation(line: 1327, column: 12, scope: !6431)
!6443 = !DILocation(line: 0, scope: !6431)
!6444 = !DILocation(line: 1329, column: 10, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6431, file: !2586, line: 1329, column: 7)
!6446 = !DILocation(line: 1329, column: 7, scope: !6431)
!6447 = distinct !{!6447, !6433, !6448}
!6448 = !DILocation(line: 1333, column: 2, scope: !6421)
!6449 = !DILocation(line: 1336, column: 1, scope: !6421)
!6450 = distinct !DISubprogram(name: "encode_uint", scope: !2586, file: !2586, line: 788, type: !6451, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6453)
!6451 = !DISubroutineType(types: !6452)
!6452 = !{!102, !2608, !6054, !102, !269}
!6453 = !{!6454, !6455, !6456, !6457, !6458, !6459, !6461, !6462}
!6454 = !DILocalVariable(name: "value", arg: 1, scope: !6450, file: !2586, line: 788, type: !2608)
!6455 = !DILocalVariable(name: "conv", arg: 2, scope: !6450, file: !2586, line: 789, type: !6054)
!6456 = !DILocalVariable(name: "bps", arg: 3, scope: !6450, file: !2586, line: 790, type: !102)
!6457 = !DILocalVariable(name: "bpe", arg: 4, scope: !6450, file: !2586, line: 791, type: !269)
!6458 = !DILocalVariable(name: "upcase", scope: !6450, file: !2586, line: 793, type: !492)
!6459 = !DILocalVariable(name: "radix", scope: !6450, file: !2586, line: 794, type: !6460)
!6460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6461 = !DILocalVariable(name: "bp", scope: !6450, file: !2586, line: 795, type: !102)
!6462 = !DILocalVariable(name: "lsv", scope: !6463, file: !2586, line: 798, type: !32)
!6463 = distinct !DILexicalBlock(scope: !6450, file: !2586, line: 797, column: 5)
!6464 = !DILocation(line: 0, scope: !6450)
!6465 = !DILocation(line: 793, column: 35, scope: !6450)
!6466 = !DILocation(line: 793, column: 24, scope: !6450)
!6467 = !DILocation(line: 793, column: 16, scope: !6450)
!6468 = !DILocation(line: 794, column: 29, scope: !6450)
!6469 = !DILocation(line: 795, column: 24, scope: !6450)
!6470 = !DILocation(line: 795, column: 17, scope: !6450)
!6471 = !DILocation(line: 797, column: 2, scope: !6450)
!6472 = !DILocation(line: 802, column: 9, scope: !6463)
!6473 = !DILocation(line: 798, column: 22, scope: !6463)
!6474 = !DILocation(line: 0, scope: !6463)
!6475 = !DILocation(line: 800, column: 16, scope: !6463)
!6476 = !DILocation(line: 800, column: 11, scope: !6463)
!6477 = !DILocation(line: 800, column: 4, scope: !6463)
!6478 = !DILocation(line: 800, column: 9, scope: !6463)
!6479 = !DILocation(line: 803, column: 18, scope: !6450)
!6480 = !DILocation(line: 803, column: 24, scope: !6450)
!6481 = !DILocation(line: 803, column: 2, scope: !6463)
!6482 = distinct !{!6482, !6471, !6483}
!6483 = !DILocation(line: 803, column: 37, scope: !6450)
!6484 = !DILocation(line: 808, column: 12, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6450, file: !2586, line: 808, column: 6)
!6486 = !DILocation(line: 808, column: 6, scope: !6450)
!6487 = !DILocation(line: 809, column: 7, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6485, file: !2586, line: 808, column: 23)
!6489 = !DILocation(line: 813, column: 3, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6491, file: !2586, line: 811, column: 27)
!6491 = distinct !DILexicalBlock(scope: !6492, file: !2586, line: 811, column: 14)
!6492 = distinct !DILexicalBlock(scope: !6488, file: !2586, line: 809, column: 7)
!6493 = !DILocation(line: 0, scope: !6492)
!6494 = !DILocation(line: 818, column: 2, scope: !6450)
!6495 = distinct !DISubprogram(name: "store_count", scope: !2586, file: !2586, line: 1280, type: !6496, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6500)
!6496 = !DISubroutineType(types: !6497)
!6497 = !{null, !6498, !104, !105}
!6498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6499, size: 32)
!6499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6021)
!6500 = !{!6501, !6502, !6503}
!6501 = !DILocalVariable(name: "conv", arg: 1, scope: !6495, file: !2586, line: 1280, type: !6498)
!6502 = !DILocalVariable(name: "dp", arg: 2, scope: !6495, file: !2586, line: 1281, type: !104)
!6503 = !DILocalVariable(name: "count", arg: 3, scope: !6495, file: !2586, line: 1282, type: !105)
!6504 = !DILocation(line: 0, scope: !6495)
!6505 = !DILocation(line: 1284, column: 38, scope: !6495)
!6506 = !DILocation(line: 1284, column: 2, scope: !6495)
!6507 = !DILocation(line: 1286, column: 4, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6495, file: !2586, line: 1284, column: 50)
!6509 = !DILocation(line: 1286, column: 14, scope: !6508)
!6510 = !DILocation(line: 1287, column: 3, scope: !6508)
!6511 = !DILocation(line: 1289, column: 24, scope: !6508)
!6512 = !DILocation(line: 1289, column: 22, scope: !6508)
!6513 = !DILocation(line: 1290, column: 3, scope: !6508)
!6514 = !DILocation(line: 1292, column: 18, scope: !6508)
!6515 = !DILocation(line: 1292, column: 4, scope: !6508)
!6516 = !DILocation(line: 1292, column: 16, scope: !6508)
!6517 = !DILocation(line: 1293, column: 3, scope: !6508)
!6518 = !DILocation(line: 1295, column: 4, scope: !6508)
!6519 = !DILocation(line: 1295, column: 15, scope: !6508)
!6520 = !DILocation(line: 1296, column: 3, scope: !6508)
!6521 = !DILocation(line: 1298, column: 22, scope: !6508)
!6522 = !DILocation(line: 1298, column: 4, scope: !6508)
!6523 = !DILocation(line: 1298, column: 20, scope: !6508)
!6524 = !DILocation(line: 1299, column: 3, scope: !6508)
!6525 = !DILocation(line: 1301, column: 21, scope: !6508)
!6526 = !DILocation(line: 1301, column: 4, scope: !6508)
!6527 = !DILocation(line: 1301, column: 19, scope: !6508)
!6528 = !DILocation(line: 1302, column: 3, scope: !6508)
!6529 = !DILocation(line: 1304, column: 4, scope: !6508)
!6530 = !DILocation(line: 1304, column: 17, scope: !6508)
!6531 = !DILocation(line: 1305, column: 3, scope: !6508)
!6532 = !DILocation(line: 1307, column: 4, scope: !6508)
!6533 = !DILocation(line: 1307, column: 20, scope: !6508)
!6534 = !DILocation(line: 1308, column: 3, scope: !6508)
!6535 = !DILocation(line: 1316, column: 1, scope: !6495)
!6536 = distinct !DISubprogram(name: "isupper", scope: !6537, file: !6537, line: 16, type: !448, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6538)
!6537 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6538 = !{!6539}
!6539 = !DILocalVariable(name: "a", arg: 1, scope: !6536, file: !6537, line: 16, type: !105)
!6540 = !DILocation(line: 0, scope: !6536)
!6541 = !DILocation(line: 18, column: 29, scope: !6536)
!6542 = !DILocation(line: 18, column: 45, scope: !6536)
!6543 = !DILocation(line: 18, column: 2, scope: !6536)
!6544 = distinct !DISubprogram(name: "conversion_radix", scope: !2586, file: !2586, line: 761, type: !6545, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6547)
!6545 = !DISubroutineType(types: !6546)
!6546 = !{!111, !103}
!6547 = !{!6548}
!6548 = !DILocalVariable(name: "specifier", arg: 1, scope: !6544, file: !2586, line: 761, type: !103)
!6549 = !DILocation(line: 0, scope: !6544)
!6550 = !DILocation(line: 763, column: 2, scope: !6544)
!6551 = !DILocation(line: 770, column: 3, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6544, file: !2586, line: 763, column: 21)
!6553 = !DILocation(line: 774, column: 3, scope: !6552)
!6554 = !DILocation(line: 0, scope: !6552)
!6555 = !DILocation(line: 776, column: 1, scope: !6544)
!6556 = distinct !DISubprogram(name: "extract_flags", scope: !2586, file: !2586, line: 339, type: !6398, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6557)
!6557 = !{!6558, !6559, !6560}
!6558 = !DILocalVariable(name: "conv", arg: 1, scope: !6556, file: !2586, line: 339, type: !6054)
!6559 = !DILocalVariable(name: "sp", arg: 2, scope: !6556, file: !2586, line: 340, type: !269)
!6560 = !DILocalVariable(name: "loop", scope: !6556, file: !2586, line: 342, type: !492)
!6561 = !DILocation(line: 0, scope: !6556)
!6562 = !DILocation(line: 344, column: 2, scope: !6556)
!6563 = !DILocation(line: 345, column: 11, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6556, file: !2586, line: 344, column: 5)
!6565 = !DILocation(line: 345, column: 3, scope: !6564)
!6566 = !DILocation(line: 351, column: 4, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6564, file: !2586, line: 345, column: 16)
!6568 = !DILocation(line: 354, column: 4, scope: !6567)
!6569 = !DILocation(line: 357, column: 4, scope: !6567)
!6570 = !DILocation(line: 360, column: 4, scope: !6567)
!6571 = !DILocation(line: 0, scope: !6567)
!6572 = !DILocation(line: 370, column: 12, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6556, file: !2586, line: 370, column: 6)
!6574 = !DILocation(line: 370, column: 22, scope: !6573)
!6575 = !DILocation(line: 371, column: 19, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6573, file: !2586, line: 370, column: 42)
!6577 = !DILocation(line: 372, column: 2, scope: !6576)
!6578 = !DILocation(line: 376, column: 2, scope: !6556)
!6579 = distinct !DISubprogram(name: "extract_width", scope: !2586, file: !2586, line: 388, type: !6398, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6580)
!6580 = !{!6581, !6582, !6583, !6584}
!6581 = !DILocalVariable(name: "conv", arg: 1, scope: !6579, file: !2586, line: 388, type: !6054)
!6582 = !DILocalVariable(name: "sp", arg: 2, scope: !6579, file: !2586, line: 389, type: !269)
!6583 = !DILocalVariable(name: "wp", scope: !6579, file: !2586, line: 398, type: !269)
!6584 = !DILocalVariable(name: "width", scope: !6579, file: !2586, line: 399, type: !111)
!6585 = !DILocation(line: 0, scope: !6579)
!6586 = !DILocation(line: 391, column: 8, scope: !6579)
!6587 = !DILocation(line: 391, column: 22, scope: !6579)
!6588 = !DILocation(line: 393, column: 6, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6579, file: !2586, line: 393, column: 6)
!6590 = !DILocation(line: 393, column: 10, scope: !6589)
!6591 = !DILocation(line: 393, column: 6, scope: !6579)
!6592 = !DILocation(line: 394, column: 20, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6589, file: !2586, line: 393, column: 18)
!6594 = !DILocation(line: 395, column: 10, scope: !6593)
!6595 = !DILocation(line: 395, column: 3, scope: !6593)
!6596 = !DILocation(line: 399, column: 17, scope: !6579)
!6597 = !DILocation(line: 401, column: 6, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6579, file: !2586, line: 401, column: 6)
!6599 = !DILocation(line: 401, column: 9, scope: !6598)
!6600 = !DILocation(line: 401, column: 6, scope: !6579)
!6601 = !DILocation(line: 402, column: 23, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6598, file: !2586, line: 401, column: 16)
!6603 = !DILocation(line: 403, column: 9, scope: !6602)
!6604 = !DILocation(line: 403, column: 21, scope: !6602)
!6605 = !DILocation(line: 405, column: 11, scope: !6602)
!6606 = !DILocation(line: 404, column: 21, scope: !6602)
!6607 = !DILocation(line: 406, column: 2, scope: !6602)
!6608 = !DILocation(line: 409, column: 1, scope: !6579)
!6609 = distinct !DISubprogram(name: "extract_prec", scope: !2586, file: !2586, line: 420, type: !6398, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6610)
!6610 = !{!6611, !6612, !6613}
!6611 = !DILocalVariable(name: "conv", arg: 1, scope: !6609, file: !2586, line: 420, type: !6054)
!6612 = !DILocalVariable(name: "sp", arg: 2, scope: !6609, file: !2586, line: 421, type: !269)
!6613 = !DILocalVariable(name: "prec", scope: !6609, file: !2586, line: 435, type: !111)
!6614 = !DILocation(line: 0, scope: !6609)
!6615 = !DILocation(line: 423, column: 24, scope: !6609)
!6616 = !DILocation(line: 423, column: 28, scope: !6609)
!6617 = !DILocation(line: 423, column: 8, scope: !6609)
!6618 = !DILocation(line: 423, column: 21, scope: !6609)
!6619 = !DILocation(line: 425, column: 6, scope: !6609)
!6620 = !DILocation(line: 428, column: 2, scope: !6609)
!6621 = !DILocation(line: 430, column: 6, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6609, file: !2586, line: 430, column: 6)
!6623 = !DILocation(line: 430, column: 10, scope: !6622)
!6624 = !DILocation(line: 430, column: 6, scope: !6609)
!6625 = !DILocation(line: 431, column: 19, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6622, file: !2586, line: 430, column: 18)
!6627 = !DILocation(line: 432, column: 10, scope: !6626)
!6628 = !DILocation(line: 432, column: 3, scope: !6626)
!6629 = !DILocation(line: 435, column: 16, scope: !6609)
!6630 = !DILocation(line: 437, column: 8, scope: !6609)
!6631 = !DILocation(line: 437, column: 19, scope: !6609)
!6632 = !DILocation(line: 439, column: 10, scope: !6609)
!6633 = !DILocation(line: 438, column: 20, scope: !6609)
!6634 = !DILocation(line: 441, column: 9, scope: !6609)
!6635 = !DILocation(line: 442, column: 1, scope: !6609)
!6636 = distinct !DISubprogram(name: "extract_length", scope: !2586, file: !2586, line: 453, type: !6398, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6637)
!6637 = !{!6638, !6639}
!6638 = !DILocalVariable(name: "conv", arg: 1, scope: !6636, file: !2586, line: 453, type: !6054)
!6639 = !DILocalVariable(name: "sp", arg: 2, scope: !6636, file: !2586, line: 454, type: !269)
!6640 = !DILocation(line: 0, scope: !6636)
!6641 = !DILocation(line: 456, column: 10, scope: !6636)
!6642 = !DILocation(line: 456, column: 2, scope: !6636)
!6643 = !DILocation(line: 458, column: 8, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6645, file: !2586, line: 458, column: 7)
!6645 = distinct !DILexicalBlock(scope: !6636, file: !2586, line: 456, column: 15)
!6646 = !DILocation(line: 458, column: 7, scope: !6644)
!6647 = !DILocation(line: 458, column: 13, scope: !6644)
!6648 = !DILocation(line: 0, scope: !6644)
!6649 = !DILocation(line: 458, column: 7, scope: !6645)
!6650 = !DILocation(line: 459, column: 21, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6644, file: !2586, line: 458, column: 21)
!6652 = !DILocation(line: 460, column: 4, scope: !6651)
!6653 = !DILocation(line: 461, column: 3, scope: !6651)
!6654 = !DILocation(line: 462, column: 21, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6644, file: !2586, line: 461, column: 10)
!6656 = !DILocation(line: 466, column: 8, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6645, file: !2586, line: 466, column: 7)
!6658 = !DILocation(line: 466, column: 7, scope: !6657)
!6659 = !DILocation(line: 466, column: 13, scope: !6657)
!6660 = !DILocation(line: 0, scope: !6657)
!6661 = !DILocation(line: 466, column: 7, scope: !6645)
!6662 = !DILocation(line: 467, column: 21, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6657, file: !2586, line: 466, column: 21)
!6664 = !DILocation(line: 468, column: 4, scope: !6663)
!6665 = !DILocation(line: 469, column: 3, scope: !6663)
!6666 = !DILocation(line: 470, column: 21, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6657, file: !2586, line: 469, column: 10)
!6668 = !DILocation(line: 474, column: 9, scope: !6645)
!6669 = !DILocation(line: 474, column: 20, scope: !6645)
!6670 = !DILocation(line: 475, column: 3, scope: !6645)
!6671 = !DILocation(line: 476, column: 3, scope: !6645)
!6672 = !DILocation(line: 478, column: 9, scope: !6645)
!6673 = !DILocation(line: 478, column: 20, scope: !6645)
!6674 = !DILocation(line: 479, column: 3, scope: !6645)
!6675 = !DILocation(line: 480, column: 3, scope: !6645)
!6676 = !DILocation(line: 482, column: 9, scope: !6645)
!6677 = !DILocation(line: 482, column: 20, scope: !6645)
!6678 = !DILocation(line: 483, column: 3, scope: !6645)
!6679 = !DILocation(line: 484, column: 3, scope: !6645)
!6680 = !DILocation(line: 486, column: 9, scope: !6645)
!6681 = !DILocation(line: 486, column: 20, scope: !6645)
!6682 = !DILocation(line: 487, column: 3, scope: !6645)
!6683 = !DILocation(line: 492, column: 21, scope: !6645)
!6684 = !DILocation(line: 493, column: 3, scope: !6645)
!6685 = !DILocation(line: 495, column: 9, scope: !6645)
!6686 = !DILocation(line: 495, column: 20, scope: !6645)
!6687 = !DILocation(line: 496, column: 3, scope: !6645)
!6688 = !DILocation(line: 498, column: 2, scope: !6636)
!6689 = distinct !DISubprogram(name: "extract_specifier", scope: !2586, file: !2586, line: 513, type: !6398, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6690)
!6690 = !{!6691, !6692, !6693, !6694}
!6691 = !DILocalVariable(name: "conv", arg: 1, scope: !6689, file: !2586, line: 513, type: !6054)
!6692 = !DILocalVariable(name: "sp", arg: 2, scope: !6689, file: !2586, line: 514, type: !269)
!6693 = !DILocalVariable(name: "unsupported", scope: !6689, file: !2586, line: 516, type: !492)
!6694 = !DILabel(scope: !6695, name: "int_conv", file: !2586, line: 526)
!6695 = distinct !DILexicalBlock(scope: !6689, file: !2586, line: 520, column: 27)
!6696 = !DILocation(line: 0, scope: !6689)
!6697 = !DILocation(line: 518, column: 20, scope: !6689)
!6698 = !DILocation(line: 518, column: 8, scope: !6689)
!6699 = !DILocation(line: 518, column: 18, scope: !6689)
!6700 = !DILocation(line: 520, column: 2, scope: !6689)
!6701 = !DILocation(line: 525, column: 3, scope: !6695)
!6702 = !DILocation(line: 0, scope: !6695)
!6703 = !DILocation(line: 526, column: 1, scope: !6695)
!6704 = !DILocation(line: 528, column: 24, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6695, file: !2586, line: 528, column: 7)
!6706 = !DILocation(line: 528, column: 7, scope: !6695)
!6707 = !DILocation(line: 535, column: 23, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6695, file: !2586, line: 535, column: 7)
!6709 = !DILocation(line: 535, column: 7, scope: !6695)
!6710 = !DILocation(line: 536, column: 36, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6708, file: !2586, line: 535, column: 31)
!6712 = !DILocation(line: 537, column: 3, scope: !6711)
!6713 = !DILocation(line: 570, column: 9, scope: !6695)
!6714 = !DILocation(line: 570, column: 23, scope: !6695)
!6715 = !DILocation(line: 575, column: 4, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6717, file: !2586, line: 573, column: 48)
!6717 = distinct !DILexicalBlock(scope: !6695, file: !2586, line: 573, column: 7)
!6718 = !DILocation(line: 603, column: 9, scope: !6695)
!6719 = !DILocation(line: 603, column: 23, scope: !6695)
!6720 = !DILocation(line: 605, column: 24, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6695, file: !2586, line: 605, column: 7)
!6722 = !DILocation(line: 605, column: 7, scope: !6695)
!6723 = !DILocation(line: 612, column: 9, scope: !6695)
!6724 = !DILocation(line: 612, column: 23, scope: !6695)
!6725 = !DILocation(line: 619, column: 24, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6695, file: !2586, line: 619, column: 7)
!6727 = !DILocation(line: 619, column: 7, scope: !6695)
!6728 = !DILocation(line: 625, column: 9, scope: !6695)
!6729 = !DILocation(line: 625, column: 17, scope: !6695)
!6730 = !DILocation(line: 626, column: 3, scope: !6695)
!6731 = !DILocation(line: 629, column: 20, scope: !6689)
!6732 = !DILocation(line: 629, column: 8, scope: !6689)
!6733 = !DILocation(line: 518, column: 23, scope: !6689)
!6734 = !DILocation(line: 631, column: 2, scope: !6689)
!6735 = distinct !DISubprogram(name: "extract_decimal", scope: !2586, file: !2586, line: 318, type: !6736, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6738)
!6736 = !DISubroutineType(types: !6737)
!6737 = !{!111, !427}
!6738 = !{!6739, !6740, !6741}
!6739 = !DILocalVariable(name: "str", arg: 1, scope: !6735, file: !2586, line: 318, type: !427)
!6740 = !DILocalVariable(name: "sp", scope: !6735, file: !2586, line: 320, type: !269)
!6741 = !DILocalVariable(name: "val", scope: !6735, file: !2586, line: 321, type: !111)
!6742 = !DILocation(line: 0, scope: !6735)
!6743 = !DILocation(line: 320, column: 19, scope: !6735)
!6744 = !DILocation(line: 323, column: 37, scope: !6735)
!6745 = !DILocation(line: 323, column: 17, scope: !6735)
!6746 = !DILocation(line: 323, column: 9, scope: !6735)
!6747 = !DILocation(line: 323, column: 2, scope: !6735)
!6748 = !DILocation(line: 324, column: 13, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6735, file: !2586, line: 323, column: 43)
!6750 = !DILocation(line: 324, column: 24, scope: !6749)
!6751 = !DILocation(line: 324, column: 19, scope: !6749)
!6752 = !DILocation(line: 324, column: 27, scope: !6749)
!6753 = distinct !{!6753, !6747, !6754}
!6754 = !DILocation(line: 325, column: 2, scope: !6735)
!6755 = !DILocation(line: 326, column: 7, scope: !6735)
!6756 = !DILocation(line: 327, column: 2, scope: !6735)
!6757 = distinct !DISubprogram(name: "isdigit", scope: !6537, file: !6537, line: 43, type: !448, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2582, retainedNodes: !6758)
!6758 = !{!6759}
!6759 = !DILocalVariable(name: "a", arg: 1, scope: !6757, file: !6537, line: 43, type: !105)
!6760 = !DILocation(line: 0, scope: !6757)
!6761 = !DILocation(line: 45, column: 29, scope: !6757)
!6762 = !DILocation(line: 45, column: 45, scope: !6757)
!6763 = !DILocation(line: 45, column: 2, scope: !6757)
!6764 = distinct !DISubprogram(name: "assert_post_action", scope: !6765, file: !6765, line: 26, type: !6766, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !6768)
!6765 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6766 = !DISubroutineType(types: !6767)
!6767 = !{null, !269, !32}
!6768 = !{!6769, !6770}
!6769 = !DILocalVariable(name: "file", arg: 1, scope: !6764, file: !6765, line: 26, type: !269)
!6770 = !DILocalVariable(name: "line", arg: 2, scope: !6764, file: !6765, line: 26, type: !32)
!6771 = !DILocation(line: 0, scope: !6764)
!6772 = !DILocation(line: 43, column: 2, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6764, file: !6765, line: 43, column: 2)
!6774 = !{i64 2154074735, i64 2154074751, i64 2154074777, i64 2154074805, i64 2154074825}
!6775 = !DILocation(line: 44, column: 1, scope: !6764)
!6776 = distinct !DISubprogram(name: "assert_print", scope: !6765, file: !6765, line: 46, type: !4960, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2616, retainedNodes: !6777)
!6777 = !{!6778, !6779}
!6778 = !DILocalVariable(name: "fmt", arg: 1, scope: !6776, file: !6765, line: 46, type: !269)
!6779 = !DILocalVariable(name: "ap", scope: !6776, file: !6765, line: 48, type: !6780)
!6780 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3968, line: 99, baseType: !6781)
!6781 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3968, line: 40, baseType: !6782)
!6782 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6765, baseType: !6783)
!6783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6784)
!6784 = !{!6785}
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6783, file: !6765, line: 48, baseType: !104, size: 32)
!6786 = !DILocation(line: 0, scope: !6776)
!6787 = !DILocation(line: 48, column: 2, scope: !6776)
!6788 = !DILocation(line: 48, column: 10, scope: !6776)
!6789 = !DILocation(line: 50, column: 2, scope: !6776)
!6790 = !DILocation(line: 52, column: 2, scope: !6776)
!6791 = !DILocation(line: 54, column: 2, scope: !6776)
!6792 = !DILocation(line: 55, column: 1, scope: !6776)
!6793 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6794, file: !6794, line: 9, type: !266, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2618, retainedNodes: !397)
!6794 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!6795 = !DILocation(line: 11, column: 1, scope: !6793)
!6796 = !{i64 2147564367, i64 2147564410, i64 2147564450}
!6797 = !DILocation(line: 12, column: 1, scope: !6793)
!6798 = !{i64 2147568594, i64 2147568637, i64 2147568677}
!6799 = !DILocation(line: 13, column: 1, scope: !6793)
!6800 = !{i64 2147568803, i64 2147568846, i64 2147568886}
!6801 = !DILocation(line: 14, column: 1, scope: !6793)
!6802 = !{i64 2147568972, i64 2147569015, i64 2147569055}
!6803 = !DILocation(line: 15, column: 1, scope: !6793)
!6804 = !{i64 2147569135, i64 2147569178, i64 2147569218}
!6805 = !DILocation(line: 16, column: 1, scope: !6793)
!6806 = !{i64 2147569319, i64 2147569362, i64 2147569402}
!6807 = !DILocation(line: 17, column: 1, scope: !6793)
!6808 = !{i64 2147569498, i64 2147569541, i64 2147569581}
!6809 = !DILocation(line: 18, column: 1, scope: !6793)
!6810 = !{i64 2147569740, i64 2147569783, i64 2147569823}
!6811 = !DILocation(line: 19, column: 1, scope: !6793)
!6812 = !{i64 2147569975, i64 2147570018, i64 2147570058}
!6813 = !DILocation(line: 20, column: 1, scope: !6793)
!6814 = !{i64 2147570161, i64 2147570204, i64 2147570244}
!6815 = !DILocation(line: 21, column: 1, scope: !6793)
!6816 = !{i64 2147570377, i64 2147570420, i64 2147570460}
!6817 = !DILocation(line: 22, column: 1, scope: !6793)
!6818 = !{i64 2147570580, i64 2147570623, i64 2147570663}
!6819 = !DILocation(line: 23, column: 1, scope: !6793)
!6820 = !{i64 2147570783, i64 2147570826, i64 2147570866}
!6821 = !DILocation(line: 24, column: 1, scope: !6793)
!6822 = !{i64 2147570958, i64 2147571001, i64 2147571041}
!6823 = !DILocation(line: 25, column: 1, scope: !6793)
!6824 = !{i64 2147571166, i64 2147571209, i64 2147571249}
!6825 = !DILocation(line: 26, column: 1, scope: !6793)
!6826 = !{i64 2147571370, i64 2147571413, i64 2147571453}
!6827 = !DILocation(line: 27, column: 1, scope: !6793)
!6828 = !{i64 2147571563, i64 2147571606, i64 2147571646}
!6829 = !DILocation(line: 28, column: 1, scope: !6793)
!6830 = !{i64 2147571765, i64 2147571808, i64 2147571848}
!6831 = !DILocation(line: 29, column: 1, scope: !6793)
!6832 = !{i64 2147571964, i64 2147572007, i64 2147572047}
!6833 = !DILocation(line: 30, column: 1, scope: !6793)
!6834 = !{i64 2147572191, i64 2147572234, i64 2147572274}
!6835 = !DILocation(line: 31, column: 1, scope: !6793)
!6836 = !{i64 2147572393, i64 2147572436, i64 2147572476}
!6837 = !DILocation(line: 32, column: 1, scope: !6793)
!6838 = !{i64 2147572608, i64 2147572651, i64 2147572691}
!6839 = !DILocation(line: 33, column: 1, scope: !6793)
!6840 = !{i64 2147572780, i64 2147572823, i64 2147572863}
!6841 = !DILocation(line: 34, column: 1, scope: !6793)
!6842 = !{i64 2147572982, i64 2147573025, i64 2147573065}
!6843 = !DILocation(line: 35, column: 1, scope: !6793)
!6844 = !{i64 2147573208, i64 2147573251, i64 2147573291}
!6845 = !DILocation(line: 36, column: 1, scope: !6793)
!6846 = !{i64 2147573407, i64 2147573450, i64 2147573490}
!6847 = !DILocation(line: 37, column: 1, scope: !6793)
!6848 = !{i64 2147573582, i64 2147573625, i64 2147573665}
!6849 = !DILocation(line: 38, column: 1, scope: !6793)
!6850 = !{i64 2147573835, i64 2147573878, i64 2147573918}
!6851 = !DILocation(line: 39, column: 1, scope: !6793)
!6852 = !{i64 2147574076, i64 2147574119, i64 2147574159}
!6853 = !DILocation(line: 40, column: 1, scope: !6793)
!6854 = !{i64 2147574311, i64 2147574354, i64 2147574394}
!6855 = !DILocation(line: 41, column: 1, scope: !6793)
!6856 = !{i64 2147574543, i64 2147574586, i64 2147574626}
!6857 = !DILocation(line: 42, column: 1, scope: !6793)
!6858 = !{i64 2147574769, i64 2147574812, i64 2147574852}
!6859 = !DILocation(line: 43, column: 1, scope: !6793)
!6860 = !{i64 2147574995, i64 2147575038, i64 2147575078}
!6861 = !DILocation(line: 44, column: 1, scope: !6793)
!6862 = !{i64 2147575221, i64 2147575264, i64 2147575304}
!6863 = !DILocation(line: 45, column: 1, scope: !6793)
!6864 = !{i64 2147575456, i64 2147575499, i64 2147575539}
!6865 = !DILocation(line: 46, column: 1, scope: !6793)
!6866 = !{i64 2147575694, i64 2147575737, i64 2147575777}
!6867 = !DILocation(line: 47, column: 1, scope: !6793)
!6868 = !{i64 2147575968, i64 2147576011, i64 2147576051}
!6869 = !DILocation(line: 48, column: 1, scope: !6793)
!6870 = !{i64 2147576206, i64 2147576249, i64 2147576289}
!6871 = !DILocation(line: 49, column: 1, scope: !6793)
!6872 = !{i64 2147576450, i64 2147576493, i64 2147576533}
!6873 = !DILocation(line: 50, column: 1, scope: !6793)
!6874 = !{i64 2147576700, i64 2147576743, i64 2147576783}
!6875 = !DILocation(line: 51, column: 1, scope: !6793)
!6876 = !{i64 2147576947, i64 2147576990, i64 2147577030}
!6877 = !DILocation(line: 52, column: 1, scope: !6793)
!6878 = !{i64 2147577182, i64 2147577225, i64 2147577265}
!6879 = !DILocation(line: 53, column: 1, scope: !6793)
!6880 = !{i64 2147581478, i64 2147581521, i64 2147581561}
!6881 = !DILocation(line: 54, column: 1, scope: !6793)
!6882 = !{i64 2147581713, i64 2147581756, i64 2147581796}
!6883 = !DILocation(line: 55, column: 1, scope: !6793)
!6884 = !{i64 2147581951, i64 2147581994, i64 2147582034}
!6885 = !DILocation(line: 56, column: 1, scope: !6793)
!6886 = !{i64 2147582192, i64 2147582235, i64 2147582275}
!6887 = !DILocation(line: 57, column: 1, scope: !6793)
!6888 = !{i64 2147582472, i64 2147582515, i64 2147582555}
!6889 = !DILocation(line: 58, column: 1, scope: !6793)
!6890 = !{i64 2147582731, i64 2147582774, i64 2147582814}
!6891 = !DILocation(line: 59, column: 1, scope: !6793)
!6892 = !{i64 2147582957, i64 2147583000, i64 2147583040}
!6893 = !DILocation(line: 60, column: 1, scope: !6793)
!6894 = !{i64 2147583195, i64 2147583238, i64 2147583278}
!6895 = !DILocation(line: 61, column: 1, scope: !6793)
!6896 = !{i64 2147583424, i64 2147583467, i64 2147583507}
!6897 = !DILocation(line: 62, column: 1, scope: !6793)
!6898 = !{i64 2147583632, i64 2147583675, i64 2147583715}
!6899 = !DILocation(line: 63, column: 1, scope: !6793)
!6900 = !{i64 2147583843, i64 2147583886, i64 2147583926}
!6901 = !DILocation(line: 64, column: 1, scope: !6793)
!6902 = !{i64 2147584078, i64 2147584121, i64 2147584161}
!6903 = !DILocation(line: 65, column: 1, scope: !6793)
!6904 = !{i64 2147584307, i64 2147584350, i64 2147584390}
!6905 = !DILocation(line: 66, column: 1, scope: !6793)
!6906 = !{i64 2147584524, i64 2147584567, i64 2147584607}
!6907 = !DILocation(line: 67, column: 1, scope: !6793)
!6908 = !{i64 2147584753, i64 2147584796, i64 2147584836}
!6909 = !DILocation(line: 68, column: 1, scope: !6793)
!6910 = !{i64 2147584991, i64 2147585034, i64 2147585074}
!6911 = !DILocation(line: 69, column: 1, scope: !6793)
!6912 = !{i64 2147585223, i64 2147585266, i64 2147585306}
!6913 = !DILocation(line: 70, column: 1, scope: !6793)
!6914 = !{i64 2147585449, i64 2147585492, i64 2147585532}
!6915 = !DILocation(line: 71, column: 1, scope: !6793)
!6916 = !{i64 2147585666, i64 2147585709, i64 2147585749}
!6917 = !DILocation(line: 72, column: 1, scope: !6793)
!6918 = !{i64 2147585898, i64 2147585941, i64 2147585981}
!6919 = !DILocation(line: 73, column: 1, scope: !6793)
!6920 = !{i64 2147586124, i64 2147586167, i64 2147586207}
!6921 = !DILocation(line: 74, column: 1, scope: !6793)
!6922 = !{i64 2147586338, i64 2147586381, i64 2147586421}
!6923 = !DILocation(line: 75, column: 1, scope: !6793)
!6924 = !{i64 2147586558, i64 2147586601, i64 2147586641}
!6925 = !DILocation(line: 76, column: 1, scope: !6793)
!6926 = !{i64 2147586790, i64 2147586833, i64 2147586873}
!6927 = !DILocation(line: 77, column: 1, scope: !6793)
!6928 = !{i64 2147586998, i64 2147587041, i64 2147587081}
!6929 = !DILocation(line: 78, column: 1, scope: !6793)
!6930 = !{i64 2147587203, i64 2147587246, i64 2147587286}
!6931 = !DILocation(line: 79, column: 1, scope: !6793)
!6932 = !{i64 2147587420, i64 2147587463, i64 2147587503}
!6933 = !DILocation(line: 80, column: 1, scope: !6793)
!6934 = !{i64 2147587634, i64 2147587677, i64 2147587717}
!6935 = !DILocation(line: 81, column: 1, scope: !6793)
!6936 = !{i64 2147587860, i64 2147587903, i64 2147587943}
!6937 = !DILocation(line: 82, column: 1, scope: !6793)
!6938 = !{i64 2147588080, i64 2147588123, i64 2147588163}
!6939 = !DILocation(line: 83, column: 1, scope: !6793)
!6940 = !{i64 2147588285, i64 2147588328, i64 2147588368}
!6941 = !DILocation(line: 84, column: 1, scope: !6793)
!6942 = !{i64 2147588517, i64 2147588560, i64 2147588600}
!6943 = !DILocation(line: 85, column: 1, scope: !6793)
!6944 = !{i64 2147588752, i64 2147588795, i64 2147588835}
!6945 = !DILocation(line: 86, column: 1, scope: !6793)
!6946 = !{i64 2147589002, i64 2147589045, i64 2147589085}
!6947 = !DILocation(line: 87, column: 1, scope: !6793)
!6948 = !{i64 2147589252, i64 2147589295, i64 2147589335}
!6949 = !DILocation(line: 88, column: 1, scope: !6793)
!6950 = !{i64 2147589490, i64 2147589533, i64 2147589573}
!6951 = !DILocation(line: 89, column: 1, scope: !6793)
!6952 = !{i64 2147593762, i64 2147593805, i64 2147593845}
!6953 = !DILocation(line: 90, column: 1, scope: !6793)
!6954 = !{i64 2147593979, i64 2147594022, i64 2147594062}
!6955 = !DILocation(line: 91, column: 1, scope: !6793)
!6956 = !{i64 2147594175, i64 2147594218, i64 2147594258}
!6957 = !DILocation(line: 92, column: 1, scope: !6793)
!6958 = !{i64 2147594377, i64 2147594420, i64 2147594460}
!6959 = !DILocation(line: 93, column: 1, scope: !6793)
!6960 = !{i64 2147594570, i64 2147594613, i64 2147594653}
!6961 = !DILocation(line: 94, column: 1, scope: !6793)
!6962 = !{i64 2147594778, i64 2147594821, i64 2147594861}
!6963 = !DILocation(line: 95, column: 1, scope: !6793)
!6964 = !{i64 2147594974, i64 2147595017, i64 2147595057}
!6965 = !DILocation(line: 96, column: 1, scope: !6793)
!6966 = !{i64 2147595179, i64 2147595222, i64 2147595262}
!6967 = !DILocation(line: 97, column: 1, scope: !6793)
!6968 = !{i64 2147595390, i64 2147595433, i64 2147595473}
!6969 = !DILocation(line: 98, column: 1, scope: !6793)
!6970 = !{i64 2147595589, i64 2147595632, i64 2147595672}
!6971 = !DILocation(line: 99, column: 1, scope: !6793)
!6972 = !{i64 2147595764, i64 2147595807, i64 2147595847}
!6973 = !DILocation(line: 100, column: 1, scope: !6793)
!6974 = !{i64 2147595948, i64 2147595991, i64 2147596031}
!6975 = !DILocation(line: 101, column: 1, scope: !6793)
!6976 = !{i64 2147596150, i64 2147596193, i64 2147596233}
!6977 = !DILocation(line: 102, column: 1, scope: !6793)
!6978 = !{i64 2147596349, i64 2147596392, i64 2147596432}
!6979 = !DILocation(line: 103, column: 1, scope: !6793)
!6980 = !{i64 2147596554, i64 2147596597, i64 2147596637}
!6981 = !DILocation(line: 104, column: 1, scope: !6793)
!6982 = !{i64 2147596747, i64 2147596790, i64 2147596830}
!6983 = !DILocation(line: 105, column: 1, scope: !6793)
!6984 = !{i64 2147596913, i64 2147596956, i64 2147596996}
!6985 = !DILocation(line: 106, column: 1, scope: !6793)
!6986 = !{i64 2147597097, i64 2147597140, i64 2147597180}
!6987 = !DILocation(line: 107, column: 1, scope: !6793)
!6988 = !{i64 2147597287, i64 2147597330, i64 2147597370}
!6989 = !DILocation(line: 108, column: 1, scope: !6793)
!6990 = !{i64 2147597471, i64 2147597514, i64 2147597554}
!6991 = !DILocation(line: 109, column: 1, scope: !6793)
!6992 = !{i64 2147597685, i64 2147597728, i64 2147597768}
!6993 = !DILocation(line: 110, column: 1, scope: !6793)
!6994 = !{i64 2147597896, i64 2147597939, i64 2147597979}
!6995 = !DILocation(line: 111, column: 1, scope: !6793)
!6996 = !{i64 2147598119, i64 2147598162, i64 2147598202}
!6997 = !DILocation(line: 112, column: 1, scope: !6793)
!6998 = !{i64 2147598303, i64 2147598346, i64 2147598386}
!6999 = !DILocation(line: 113, column: 1, scope: !6793)
!7000 = !{i64 2147598517, i64 2147598560, i64 2147598600}
!7001 = !DILocation(line: 114, column: 1, scope: !6793)
!7002 = !{i64 2147598683, i64 2147598726, i64 2147598766}
!7003 = !DILocation(line: 115, column: 1, scope: !6793)
!7004 = !{i64 2147598864, i64 2147598907, i64 2147598947}
!7005 = !DILocation(line: 116, column: 1, scope: !6793)
!7006 = !{i64 2147599057, i64 2147599100, i64 2147599140}
!7007 = !DILocation(line: 117, column: 1, scope: !6793)
!7008 = !{i64 2147599283, i64 2147599326, i64 2147599366}
!7009 = !DILocation(line: 118, column: 1, scope: !6793)
!7010 = !{i64 2147599497, i64 2147599540, i64 2147599580}
!7011 = !DILocation(line: 119, column: 1, scope: !6793)
!7012 = !{i64 2147599723, i64 2147599766, i64 2147599806}
!7013 = !DILocation(line: 120, column: 1, scope: !6793)
!7014 = !{i64 2147599940, i64 2147599983, i64 2147600023}
!7015 = !DILocation(line: 121, column: 1, scope: !6793)
!7016 = !{i64 2147600217, i64 2147600260, i64 2147600300}
!7017 = !DILocation(line: 122, column: 1, scope: !6793)
!7018 = !{i64 2147600443, i64 2147600486, i64 2147600526}
!7019 = !DILocation(line: 123, column: 1, scope: !6793)
!7020 = !{i64 2147600651, i64 2147600694, i64 2147600734}
!7021 = !DILocation(line: 124, column: 1, scope: !6793)
!7022 = !{i64 2147600847, i64 2147600890, i64 2147600930}
!7023 = !DILocation(line: 125, column: 1, scope: !6793)
!7024 = !{i64 2147601112, i64 2147601155, i64 2147601195}
!7025 = !DILocation(line: 126, column: 1, scope: !6793)
!7026 = !{i64 2147601326, i64 2147601369, i64 2147601409}
!7027 = !DILocation(line: 127, column: 1, scope: !6793)
!7028 = !{i64 2147601501, i64 2147601544, i64 2147601584}
!7029 = !DILocation(line: 128, column: 1, scope: !6793)
!7030 = !{i64 2147601755, i64 2147601798, i64 2147601838}
!7031 = !DILocation(line: 129, column: 1, scope: !6793)
!7032 = !{i64 2147601954, i64 2147601997, i64 2147602037}
!7033 = !DILocation(line: 130, column: 1, scope: !6793)
!7034 = !{i64 2147602196, i64 2147602239, i64 2147602279}
!7035 = !DILocation(line: 131, column: 1, scope: !6793)
!7036 = !{i64 2147602359, i64 2147602402, i64 2147602442}
!7037 = !DILocation(line: 132, column: 1, scope: !6793)
!7038 = !{i64 2147602546, i64 2147602589, i64 2147602629}
!7039 = !DILocation(line: 133, column: 1, scope: !6793)
!7040 = !{i64 2147602754, i64 2147602797, i64 2147602837}
!7041 = !DILocation(line: 134, column: 1, scope: !6793)
!7042 = !{i64 2147607011, i64 2147607054, i64 2147607094}
!7043 = !DILocation(line: 135, column: 1, scope: !6793)
!7044 = !{i64 2147607204, i64 2147607247, i64 2147607287}
!7045 = !DILocation(line: 136, column: 1, scope: !6793)
!7046 = !{i64 2147607387, i64 2147607430, i64 2147607470}
!7047 = !DILocation(line: 137, column: 1, scope: !6793)
!7048 = !{i64 2147607601, i64 2147607644, i64 2147607684}
!7049 = !DILocation(line: 138, column: 1, scope: !6793)
!7050 = !{i64 2147607812, i64 2147607855, i64 2147607895}
!7051 = !DILocation(line: 139, column: 1, scope: !6793)
!7052 = !{i64 2147608032, i64 2147608075, i64 2147608115}
!7053 = !DILocation(line: 140, column: 1, scope: !6793)
!7054 = !{i64 2147608239, i64 2147608282, i64 2147608322}
!7055 = !DILocation(line: 141, column: 1, scope: !6793)
!7056 = !{i64 2147608512, i64 2147608555, i64 2147608595}
!7057 = !DILocation(line: 142, column: 1, scope: !6793)
!7058 = !{i64 2147608760, i64 2147608803, i64 2147608843}
!7059 = !DILocation(line: 143, column: 1, scope: !6793)
!7060 = !{i64 2147608959, i64 2147609002, i64 2147609042}
!7061 = !DILocation(line: 144, column: 1, scope: !6793)
!7062 = !{i64 2147609194, i64 2147609237, i64 2147609277}
!7063 = !DILocation(line: 145, column: 1, scope: !6793)
!7064 = !{i64 2147609444, i64 2147609487, i64 2147609527}
!7065 = !DILocation(line: 146, column: 1, scope: !6793)
!7066 = !{i64 2147609646, i64 2147609689, i64 2147609729}
!7067 = !DILocation(line: 147, column: 1, scope: !6793)
!7068 = !{i64 2147609869, i64 2147609912, i64 2147609952}
!7069 = !DILocation(line: 148, column: 1, scope: !6793)
!7070 = !{i64 2147610083, i64 2147610126, i64 2147610166}
!7071 = !DILocation(line: 149, column: 1, scope: !6793)
!7072 = !{i64 2147610327, i64 2147610370, i64 2147610410}
!7073 = !DILocation(line: 150, column: 1, scope: !6793)
!7074 = !{i64 2147610556, i64 2147610599, i64 2147610639}
!7075 = !DILocation(line: 151, column: 1, scope: !6793)
!7076 = !{i64 2147610785, i64 2147610828, i64 2147610868}
!7077 = !DILocation(line: 152, column: 1, scope: !6793)
!7078 = !{i64 2147610993, i64 2147611036, i64 2147611076}
!7079 = !DILocation(line: 153, column: 1, scope: !6793)
!7080 = !{i64 2147611231, i64 2147611274, i64 2147611314}
!7081 = !DILocation(line: 154, column: 1, scope: !6793)
!7082 = !{i64 2147611457, i64 2147611500, i64 2147611540}
!7083 = !DILocation(line: 155, column: 1, scope: !6793)
!7084 = !{i64 2147611716, i64 2147611759, i64 2147611799}
!7085 = !DILocation(line: 156, column: 1, scope: !6793)
!7086 = !{i64 2147611936, i64 2147611979, i64 2147612019}
!7087 = !DILocation(line: 157, column: 1, scope: !6793)
!7088 = !{i64 2147612168, i64 2147612211, i64 2147612251}
!7089 = !DILocation(line: 158, column: 1, scope: !6793)
!7090 = !{i64 2147612409, i64 2147612452, i64 2147612492}
!7091 = !DILocation(line: 159, column: 1, scope: !6793)
!7092 = !{i64 2147612650, i64 2147612693, i64 2147612733}
!7093 = !DILocation(line: 160, column: 1, scope: !6793)
!7094 = !{i64 2147612873, i64 2147612916, i64 2147612956}
!7095 = !DILocation(line: 161, column: 1, scope: !6793)
!7096 = !{i64 2147613090, i64 2147613133, i64 2147613173}
!7097 = !DILocation(line: 162, column: 1, scope: !6793)
!7098 = !{i64 2147613331, i64 2147613374, i64 2147613414}
!7099 = !DILocation(line: 163, column: 1, scope: !6793)
!7100 = !{i64 2147613518, i64 2147613561, i64 2147613601}
!7101 = !DILocation(line: 164, column: 1, scope: !6793)
!7102 = !{i64 2147613705, i64 2147613748, i64 2147613788}
!7103 = !DILocation(line: 165, column: 1, scope: !6793)
!7104 = !{i64 2147613868, i64 2147613911, i64 2147613951}
!7105 = !DILocation(line: 166, column: 1, scope: !6793)
!7106 = !{i64 2147614073, i64 2147614116, i64 2147614156}
!7107 = !DILocation(line: 167, column: 1, scope: !6793)
!7108 = !{i64 2147614266, i64 2147614309, i64 2147614349}
!7109 = !DILocation(line: 168, column: 1, scope: !6793)
!7110 = !{i64 2147614525, i64 2147614568, i64 2147614608}
!7111 = !DILocation(line: 169, column: 1, scope: !6793)
!7112 = !{i64 2147614748, i64 2147614791, i64 2147614831}
!7113 = !DILocation(line: 170, column: 1, scope: !6793)
!7114 = !{i64 2147614977, i64 2147615020, i64 2147615060}
!7115 = !DILocation(line: 171, column: 1, scope: !6793)
!7116 = !{i64 2147615191, i64 2147615234, i64 2147615274}
!7117 = !DILocation(line: 172, column: 1, scope: !6793)
!7118 = !{i64 2147615393, i64 2147615436, i64 2147615476}
!7119 = !DILocation(line: 173, column: 1, scope: !6793)
!7120 = !{i64 2147619650, i64 2147619693, i64 2147619733}
!7121 = !DILocation(line: 174, column: 1, scope: !6793)
!7122 = !{i64 2147619862, i64 2147619905, i64 2147619945}
!7123 = !DILocation(line: 175, column: 1, scope: !6793)
!7124 = !{i64 2147620083, i64 2147620126, i64 2147620166}
!7125 = !DILocation(line: 176, column: 1, scope: !6793)
!7126 = !{i64 2147620297, i64 2147620340, i64 2147620380}
!7127 = !DILocation(line: 177, column: 1, scope: !6793)
!7128 = !{i64 2147620487, i64 2147620530, i64 2147620570}
!7129 = !DILocation(line: 178, column: 1, scope: !6793)
!7130 = !{i64 2147620686, i64 2147620729, i64 2147620769}
!7131 = !DILocation(line: 179, column: 1, scope: !6793)
!7132 = !{i64 2147620891, i64 2147620934, i64 2147620974}
!7133 = !DILocation(line: 180, column: 1, scope: !6793)
!7134 = !{i64 2147621111, i64 2147621154, i64 2147621194}
!7135 = !DILocation(line: 181, column: 1, scope: !6793)
!7136 = !{i64 2147621312, i64 2147621355, i64 2147621395}
!7137 = !DILocation(line: 182, column: 1, scope: !6793)
!7138 = !{i64 2147621511, i64 2147621554, i64 2147621594}
!7139 = !DILocation(line: 183, column: 1, scope: !6793)
!7140 = !{i64 2147621716, i64 2147621759, i64 2147621799}
!7141 = !DILocation(line: 184, column: 1, scope: !6793)
!7142 = !{i64 2147621885, i64 2147621928, i64 2147621968}
!7143 = !DILocation(line: 185, column: 1, scope: !6793)
!7144 = !{i64 2147622069, i64 2147622112, i64 2147622152}
!7145 = !DILocation(line: 186, column: 1, scope: !6793)
!7146 = !{i64 2147622253, i64 2147622296, i64 2147622336}
!7147 = !DILocation(line: 187, column: 1, scope: !6793)
!7148 = !{i64 2147622440, i64 2147622483, i64 2147622523}
!7149 = !DILocation(line: 188, column: 1, scope: !6793)
!7150 = !{i64 2147622624, i64 2147622667, i64 2147622707}
!7151 = !DILocation(line: 189, column: 1, scope: !6793)
!7152 = !{i64 2147622862, i64 2147622905, i64 2147622945}
!7153 = !DILocation(line: 190, column: 1, scope: !6793)
!7154 = !{i64 2147623092, i64 2147623135, i64 2147623175}
!7155 = !DILocation(line: 191, column: 1, scope: !6793)
!7156 = !{i64 2147623321, i64 2147623364, i64 2147623404}
!7157 = !DILocation(line: 192, column: 1, scope: !6793)
!7158 = !{i64 2147623508, i64 2147623551, i64 2147623591}
!7159 = !DILocation(line: 193, column: 1, scope: !6793)
!7160 = !{i64 2147623704, i64 2147623747, i64 2147623787}
!7161 = !DILocation(line: 194, column: 1, scope: !6793)
!7162 = !{i64 2147623912, i64 2147623955, i64 2147623995}
!7163 = !DILocation(line: 195, column: 1, scope: !6793)
!7164 = !{i64 2147624124, i64 2147624167, i64 2147624207}
!7165 = !DILocation(line: 196, column: 1, scope: !6793)
!7166 = !{i64 2147624323, i64 2147624366, i64 2147624406}
!7167 = !DILocation(line: 197, column: 1, scope: !6793)
!7168 = !{i64 2147624561, i64 2147624604, i64 2147624644}
!7169 = !DILocation(line: 198, column: 1, scope: !6793)
!7170 = !{i64 2147624757, i64 2147624800, i64 2147624840}
!7171 = !DILocation(line: 199, column: 1, scope: !6793)
!7172 = !{i64 2147624959, i64 2147625002, i64 2147625042}
!7173 = !DILocation(line: 200, column: 1, scope: !6793)
!7174 = !{i64 2147625152, i64 2147625195, i64 2147625235}
!7175 = !DILocation(line: 201, column: 1, scope: !6793)
!7176 = !{i64 2147625386, i64 2147625429, i64 2147625469}
!7177 = !DILocation(line: 202, column: 1, scope: !6793)
!7178 = !{i64 2147625549, i64 2147625592, i64 2147625632}
!7179 = !DILocation(line: 203, column: 1, scope: !6793)
!7180 = !{i64 2147625788, i64 2147625831, i64 2147625871}
!7181 = !DILocation(line: 204, column: 1, scope: !6793)
!7182 = !{i64 2147626027, i64 2147626070, i64 2147626110}
!7183 = !DILocation(line: 205, column: 1, scope: !6793)
!7184 = !{i64 2147626263, i64 2147626306, i64 2147626346}
!7185 = !DILocation(line: 206, column: 1, scope: !6793)
!7186 = !{i64 2147626493, i64 2147626536, i64 2147626576}
!7187 = !DILocation(line: 207, column: 1, scope: !6793)
!7188 = !{i64 2147626707, i64 2147626750, i64 2147626790}
!7189 = !DILocation(line: 208, column: 1, scope: !6793)
!7190 = !{i64 2147626894, i64 2147626937, i64 2147626977}
!7191 = !DILocation(line: 209, column: 1, scope: !6793)
!7192 = !{i64 2147627093, i64 2147627136, i64 2147627176}
!7193 = !DILocation(line: 210, column: 1, scope: !6793)
!7194 = !{i64 2147627364, i64 2147627407, i64 2147627447}
!7195 = !DILocation(line: 211, column: 1, scope: !6793)
!7196 = !{i64 2147627539, i64 2147627582, i64 2147627622}
!7197 = !DILocation(line: 212, column: 1, scope: !6793)
!7198 = !{i64 2147627773, i64 2147627816, i64 2147627856}
!7199 = !DILocation(line: 213, column: 1, scope: !6793)
!7200 = !{i64 2147627981, i64 2147628024, i64 2147628064}
!7201 = !DILocation(line: 214, column: 1, scope: !6793)
!7202 = !{i64 2147628199, i64 2147628242, i64 2147628282}
!7203 = !DILocation(line: 215, column: 1, scope: !6793)
!7204 = !{i64 2147628389, i64 2147628432, i64 2147628472}
!7205 = !DILocation(line: 216, column: 1, scope: !6793)
!7206 = !{i64 2147628621, i64 2147628664, i64 2147628704}
!7207 = !DILocation(line: 217, column: 1, scope: !6793)
!7208 = !{i64 2147632902, i64 2147632945, i64 2147632985}
!7209 = !DILocation(line: 218, column: 1, scope: !6793)
!7210 = !{i64 2147633098, i64 2147633141, i64 2147633181}
!7211 = !DILocation(line: 219, column: 1, scope: !6793)
!7212 = !{i64 2147633304, i64 2147633347, i64 2147633387}
!7213 = !DILocation(line: 220, column: 1, scope: !6793)
!7214 = !{i64 2147633509, i64 2147633552, i64 2147633592}
!7215 = !DILocation(line: 221, column: 1, scope: !6793)
!7216 = !{i64 2147633735, i64 2147633778, i64 2147633818}
!7217 = !DILocation(line: 222, column: 1, scope: !6793)
!7218 = !{i64 2147633943, i64 2147633986, i64 2147634026}
!7219 = !DILocation(line: 223, column: 1, scope: !6793)
!7220 = !{i64 2147634139, i64 2147634182, i64 2147634222}
!7221 = !DILocation(line: 224, column: 1, scope: !6793)
!7222 = !{i64 2147634371, i64 2147634414, i64 2147634454}
!7223 = !DILocation(line: 225, column: 1, scope: !6793)
!7224 = !{i64 2147634555, i64 2147634598, i64 2147634638}
!7225 = !DILocation(line: 226, column: 1, scope: !6793)
!7226 = !{i64 2147634764, i64 2147634807, i64 2147634847}
!7227 = !DILocation(line: 227, column: 1, scope: !6793)
!7228 = !{i64 2147634972, i64 2147635015, i64 2147635055}
!7229 = !DILocation(line: 228, column: 1, scope: !6793)
!7230 = !{i64 2147635168, i64 2147635211, i64 2147635251}
!7231 = !DILocation(line: 229, column: 1, scope: !6793)
!7232 = !{i64 2147635352, i64 2147635395, i64 2147635435}
!7233 = !DILocation(line: 230, column: 1, scope: !6793)
!7234 = !{i64 2147635578, i64 2147635621, i64 2147635661}
!7235 = !DILocation(line: 231, column: 1, scope: !6793)
!7236 = !{i64 2147635804, i64 2147635847, i64 2147635887}
!7237 = !DILocation(line: 232, column: 1, scope: !6793)
!7238 = !{i64 2147636030, i64 2147636073, i64 2147636113}
!7239 = !DILocation(line: 233, column: 1, scope: !6793)
!7240 = !{i64 2147636256, i64 2147636299, i64 2147636339}
!7241 = !DILocation(line: 234, column: 1, scope: !6793)
!7242 = !{i64 2147636482, i64 2147636525, i64 2147636565}
!7243 = !DILocation(line: 235, column: 1, scope: !6793)
!7244 = !{i64 2147636714, i64 2147636757, i64 2147636797}
!7245 = !DILocation(line: 236, column: 1, scope: !6793)
!7246 = !{i64 2147636952, i64 2147636995, i64 2147637035}
!7247 = !DILocation(line: 237, column: 1, scope: !6793)
!7248 = !{i64 2147637172, i64 2147637215, i64 2147637255}
!7249 = !DILocation(line: 238, column: 1, scope: !6793)
!7250 = !{i64 2147637416, i64 2147637459, i64 2147637499}
!7251 = !DILocation(line: 239, column: 1, scope: !6793)
!7252 = !{i64 2147637657, i64 2147637700, i64 2147637740}
!7253 = !DILocation(line: 240, column: 1, scope: !6793)
!7254 = !{i64 2147637892, i64 2147637935, i64 2147637975}
!7255 = !DILocation(line: 241, column: 1, scope: !6793)
!7256 = !{i64 2147638124, i64 2147638167, i64 2147638207}
!7257 = !DILocation(line: 242, column: 1, scope: !6793)
!7258 = !{i64 2147638326, i64 2147638369, i64 2147638409}
!7259 = !DILocation(line: 243, column: 1, scope: !6793)
!7260 = !{i64 2147638576, i64 2147638619, i64 2147638659}
!7261 = !DILocation(line: 244, column: 1, scope: !6793)
!7262 = !{i64 2147638814, i64 2147638857, i64 2147638897}
!7263 = !DILocation(line: 245, column: 1, scope: !6793)
!7264 = !{i64 2147639022, i64 2147639065, i64 2147639105}
!7265 = !DILocation(line: 246, column: 1, scope: !6793)
!7266 = !{i64 2147639218, i64 2147639261, i64 2147639301}
!7267 = !DILocation(line: 247, column: 1, scope: !6793)
!7268 = !{i64 2147639402, i64 2147639445, i64 2147639485}
!7269 = !DILocation(line: 248, column: 1, scope: !6793)
!7270 = !{i64 2147639619, i64 2147639662, i64 2147639702}
!7271 = !DILocation(line: 249, column: 1, scope: !6793)
!7272 = !{i64 2147639824, i64 2147639867, i64 2147639907}
!7273 = !DILocation(line: 250, column: 1, scope: !6793)
!7274 = !{i64 2147640059, i64 2147640102, i64 2147640142}
!7275 = !DILocation(line: 251, column: 1, scope: !6793)
!7276 = !{i64 2147640282, i64 2147640325, i64 2147640365}
!7277 = !DILocation(line: 252, column: 1, scope: !6793)
!7278 = !{i64 2147640505, i64 2147640548, i64 2147640588}
!7279 = !DILocation(line: 253, column: 1, scope: !6793)
!7280 = !{i64 2147640743, i64 2147640786, i64 2147640826}
!7281 = !DILocation(line: 254, column: 1, scope: !6793)
!7282 = !{i64 2147640981, i64 2147641024, i64 2147641064}
!7283 = !DILocation(line: 255, column: 1, scope: !6793)
!7284 = !{i64 2147641198, i64 2147641241, i64 2147641281}
!7285 = !DILocation(line: 256, column: 1, scope: !6793)
!7286 = !{i64 2147641403, i64 2147641446, i64 2147641486}
!7287 = !DILocation(line: 257, column: 1, scope: !6793)
!7288 = !{i64 2147645657, i64 2147645700, i64 2147645740}
!7289 = !DILocation(line: 258, column: 1, scope: !6793)
!7290 = !{i64 2147645910, i64 2147645953, i64 2147645993}
!7291 = !DILocation(line: 259, column: 1, scope: !6793)
!7292 = !{i64 2147646118, i64 2147646161, i64 2147646201}
!7293 = !DILocation(line: 260, column: 1, scope: !6793)
!7294 = !{i64 2147646314, i64 2147646357, i64 2147646397}
!7295 = !DILocation(line: 261, column: 1, scope: !6793)
!7296 = !{i64 2147646528, i64 2147646571, i64 2147646611}
!7297 = !DILocation(line: 262, column: 1, scope: !6793)
!7298 = !{i64 2147646736, i64 2147646779, i64 2147646819}
!7299 = !DILocation(line: 263, column: 1, scope: !6793)
!7300 = !{i64 2147646926, i64 2147646969, i64 2147647009}
!7301 = !DILocation(line: 264, column: 1, scope: !6793)
!7302 = !{i64 2147647140, i64 2147647183, i64 2147647223}
!7303 = !DILocation(line: 265, column: 1, scope: !6793)
!7304 = !{i64 2147647402, i64 2147647445, i64 2147647485}
!7305 = !DILocation(line: 266, column: 1, scope: !6793)
!7306 = !{i64 2147647613, i64 2147647656, i64 2147647696}
!7307 = !DILocation(line: 267, column: 1, scope: !6793)
!7308 = !{i64 2147647857, i64 2147647900, i64 2147647940}
!7309 = !DILocation(line: 268, column: 1, scope: !6793)
!7310 = !{i64 2147648068, i64 2147648111, i64 2147648151}
!7311 = !DILocation(line: 269, column: 1, scope: !6793)
!7312 = !{i64 2147648297, i64 2147648340, i64 2147648380}
!7313 = !DILocation(line: 270, column: 1, scope: !6793)
!7314 = !{i64 2147648562, i64 2147648605, i64 2147648645}
!7315 = !DILocation(line: 271, column: 1, scope: !6793)
!7316 = !{i64 2147648767, i64 2147648810, i64 2147648850}
!7317 = !DILocation(line: 272, column: 1, scope: !6793)
!7318 = !{i64 2147648963, i64 2147649006, i64 2147649046}
!7319 = !DILocation(line: 273, column: 1, scope: !6793)
!7320 = !{i64 2147649186, i64 2147649229, i64 2147649269}
!7321 = !DILocation(line: 274, column: 1, scope: !6793)
!7322 = !{i64 2147649349, i64 2147649392, i64 2147649432}
!7323 = !DILocation(line: 275, column: 1, scope: !6793)
!7324 = !{i64 2147649554, i64 2147649597, i64 2147649637}
!7325 = !DILocation(line: 276, column: 1, scope: !6793)
!7326 = !{i64 2147649774, i64 2147649817, i64 2147649857}
!7327 = !DILocation(line: 277, column: 1, scope: !6793)
!7328 = !{i64 2147649988, i64 2147650031, i64 2147650071}
!7329 = !DILocation(line: 278, column: 1, scope: !6793)
!7330 = !{i64 2147650232, i64 2147650275, i64 2147650315}
!7331 = !DILocation(line: 279, column: 1, scope: !6793)
!7332 = !{i64 2147650464, i64 2147650507, i64 2147650547}
!7333 = !DILocation(line: 280, column: 1, scope: !6793)
!7334 = !{i64 2147650678, i64 2147650721, i64 2147650761}
!7335 = !DILocation(line: 281, column: 1, scope: !6793)
!7336 = !{i64 2147650889, i64 2147650932, i64 2147650972}
!7337 = !DILocation(line: 282, column: 1, scope: !6793)
!7338 = !{i64 2147651082, i64 2147651125, i64 2147651165}
!7339 = !DILocation(line: 283, column: 1, scope: !6793)
!7340 = !{i64 2147651281, i64 2147651324, i64 2147651364}
!7341 = !DILocation(line: 284, column: 1, scope: !6793)
!7342 = !{i64 2147651453, i64 2147651496, i64 2147651536}
!7343 = !DILocation(line: 285, column: 1, scope: !6793)
!7344 = !{i64 2147651646, i64 2147651689, i64 2147651729}
!7345 = !DILocation(line: 286, column: 1, scope: !6793)
!7346 = !{i64 2147651818, i64 2147651861, i64 2147651901}
!7347 = !DILocation(line: 287, column: 1, scope: !6793)
!7348 = !{i64 2147652008, i64 2147652051, i64 2147652091}
!7349 = !DILocation(line: 288, column: 1, scope: !6793)
!7350 = !{i64 2147652201, i64 2147652244, i64 2147652284}
!7351 = !DILocation(line: 289, column: 1, scope: !6793)
!7352 = !{i64 2147652397, i64 2147652440, i64 2147652480}
!7353 = !DILocation(line: 290, column: 1, scope: !6793)
!7354 = !{i64 2147652560, i64 2147652603, i64 2147652643}
!7355 = !DILocation(line: 291, column: 1, scope: !6793)
!7356 = !{i64 2147652762, i64 2147652805, i64 2147652845}
!7357 = !DILocation(line: 292, column: 1, scope: !6793)
!7358 = !{i64 2147652967, i64 2147653010, i64 2147653050}
!7359 = !DILocation(line: 293, column: 1, scope: !6793)
!7360 = !{i64 2147653175, i64 2147653218, i64 2147653258}
!7361 = !DILocation(line: 294, column: 1, scope: !6793)
!7362 = !{i64 2147653368, i64 2147653411, i64 2147653451}
!7363 = !DILocation(line: 295, column: 1, scope: !6793)
!7364 = !{i64 2147653555, i64 2147653598, i64 2147653638}
!7365 = !DILocation(line: 296, column: 1, scope: !6793)
!7366 = !{i64 2147653772, i64 2147653815, i64 2147653855}
!7367 = !DILocation(line: 297, column: 1, scope: !6793)
!7368 = !{i64 2147653992, i64 2147654035, i64 2147654075}
!7369 = !DILocation(line: 298, column: 1, scope: !6793)
!7370 = !{i64 2147654219, i64 2147654262, i64 2147654302}
!7371 = !DILocation(line: 299, column: 1, scope: !6793)
!7372 = !{i64 2147654436, i64 2147654479, i64 2147654519}
!7373 = !DILocation(line: 300, column: 1, scope: !6793)
!7374 = !{i64 2147658789, i64 2147658832, i64 2147658872}
!7375 = !DILocation(line: 301, column: 1, scope: !6793)
!7376 = !{i64 2147659021, i64 2147659064, i64 2147659104}
!7377 = !DILocation(line: 302, column: 1, scope: !6793)
!7378 = !{i64 2147659238, i64 2147659281, i64 2147659321}
!7379 = !DILocation(line: 303, column: 1, scope: !6793)
!7380 = !{i64 2147659445, i64 2147659488, i64 2147659528}
!7381 = !DILocation(line: 304, column: 1, scope: !6793)
!7382 = !{i64 2147659646, i64 2147659689, i64 2147659729}
!7383 = !DILocation(line: 305, column: 1, scope: !6793)
!7384 = !{i64 2147659878, i64 2147659921, i64 2147659961}
!7385 = !DILocation(line: 306, column: 1, scope: !6793)
!7386 = !{i64 2147660086, i64 2147660129, i64 2147660169}
!7387 = !DILocation(line: 307, column: 1, scope: !6793)
!7388 = !{i64 2147660276, i64 2147660319, i64 2147660359}
!7389 = !DILocation(line: 308, column: 1, scope: !6793)
!7390 = !{i64 2147660502, i64 2147660545, i64 2147660585}
!7391 = !DILocation(line: 309, column: 1, scope: !6793)
!7392 = !{i64 2147660691, i64 2147660734, i64 2147660774}
!7393 = !DILocation(line: 310, column: 1, scope: !6793)
!7394 = !{i64 2147660962, i64 2147661005, i64 2147661045}
!7395 = !DILocation(line: 311, column: 1, scope: !6793)
!7396 = !{i64 2147661182, i64 2147661225, i64 2147661265}
!7397 = !DILocation(line: 312, column: 1, scope: !6793)
!7398 = !{i64 2147661435, i64 2147661478, i64 2147661518}
!7399 = !DILocation(line: 313, column: 1, scope: !6793)
!7400 = !{i64 2147661643, i64 2147661686, i64 2147661726}
!7401 = !DILocation(line: 314, column: 1, scope: !6793)
!7402 = !{i64 2147661875, i64 2147661918, i64 2147661958}
!7403 = !DILocation(line: 315, column: 1, scope: !6793)
!7404 = !{i64 2147662086, i64 2147662129, i64 2147662169}
!7405 = !DILocation(line: 316, column: 1, scope: !6793)
!7406 = !{i64 2147662276, i64 2147662319, i64 2147662359}
!7407 = !DILocation(line: 317, column: 1, scope: !6793)
!7408 = !{i64 2147662490, i64 2147662533, i64 2147662573}
!7409 = !DILocation(line: 318, column: 1, scope: !6793)
!7410 = !{i64 2147662689, i64 2147662732, i64 2147662772}
!7411 = !DILocation(line: 319, column: 1, scope: !6793)
!7412 = !{i64 2147662876, i64 2147662919, i64 2147662959}
!7413 = !DILocation(line: 320, column: 1, scope: !6793)
!7414 = !{i64 2147663084, i64 2147663127, i64 2147663167}
!7415 = !DILocation(line: 321, column: 1, scope: !6793)
!7416 = !{i64 2147663313, i64 2147663356, i64 2147663396}
!7417 = !DILocation(line: 322, column: 1, scope: !6793)
!7418 = !{i64 2147663515, i64 2147663558, i64 2147663598}
!7419 = !DILocation(line: 323, column: 1, scope: !6793)
!7420 = !{i64 2147663714, i64 2147663757, i64 2147663797}
!7421 = !DILocation(line: 324, column: 1, scope: !6793)
!7422 = !{i64 2147663931, i64 2147663974, i64 2147664014}
!7423 = !DILocation(line: 326, column: 1, scope: !6793)
!7424 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !469, file: !469, line: 30, type: !476, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !7425)
!7425 = !{!7426, !7427}
!7426 = !DILocalVariable(name: "arg", arg: 1, scope: !7424, file: !469, line: 30, type: !478)
!7427 = !DILocalVariable(name: "key", scope: !7424, file: !469, line: 32, type: !113)
!7428 = !DILocation(line: 0, scope: !7424)
!7429 = !DILocation(line: 37, column: 2, scope: !7424)
!7430 = !DILocation(line: 38, column: 2, scope: !7424)
!7431 = !DILocation(line: 55, column: 2, scope: !7432, inlinedAt: !7439)
!7432 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7433, file: !7433, line: 42, type: !7434, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !7436)
!7433 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7434 = !DISubroutineType(types: !7435)
!7435 = !{!32}
!7436 = !{!7437, !7438}
!7437 = !DILocalVariable(name: "key", scope: !7432, file: !7433, line: 44, type: !32)
!7438 = !DILocalVariable(name: "tmp", scope: !7432, file: !7433, line: 53, type: !32)
!7439 = distinct !DILocation(line: 40, column: 8, scope: !7424)
!7440 = !{i64 1835280}
!7441 = !DILocation(line: 0, scope: !7432, inlinedAt: !7439)
!7442 = !DILocalVariable(name: "key", arg: 1, scope: !7443, file: !7433, line: 84, type: !32)
!7443 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7433, file: !7433, line: 84, type: !7444, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !7446)
!7444 = !DISubroutineType(types: !7445)
!7445 = !{null, !32}
!7446 = !{!7442}
!7447 = !DILocation(line: 0, scope: !7443, inlinedAt: !7448)
!7448 = distinct !DILocation(line: 47, column: 2, scope: !7424)
!7449 = !DILocation(line: 95, column: 2, scope: !7443, inlinedAt: !7448)
!7450 = !{i64 1836097}
!7451 = !DILocation(line: 51, column: 18, scope: !7424)
!7452 = !DILocation(line: 53, column: 2, scope: !7424)
!7453 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !7454, file: !7454, line: 1609, type: !266, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !397)
!7454 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7455 = !DILocation(line: 1611, column: 3, scope: !7453)
!7456 = !DILocation(line: 1612, column: 1, scope: !7453)
!7457 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !7454, file: !7454, line: 1629, type: !266, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !452, retainedNodes: !397)
!7458 = !DILocation(line: 1631, column: 3, scope: !7457)
!7459 = !DILocation(line: 1632, column: 1, scope: !7457)
!7460 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !506, file: !506, line: 26, type: !512, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !503, retainedNodes: !7461)
!7461 = !{!7462}
!7462 = !DILocalVariable(name: "dev", arg: 1, scope: !7460, file: !506, line: 26, type: !514)
!7463 = !DILocation(line: 0, scope: !7460)
!7464 = !DILocation(line: 68, column: 2, scope: !7460)
!7465 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7466, file: !7466, line: 14, type: !4960, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !7467)
!7466 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7467 = !{!7468, !7469}
!7468 = !DILocalVariable(name: "fmt", arg: 1, scope: !7465, file: !7466, line: 14, type: !269)
!7469 = !DILocalVariable(name: "ap", scope: !7465, file: !7466, line: 16, type: !7470)
!7470 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3968, line: 99, baseType: !7471)
!7471 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3968, line: 40, baseType: !7472)
!7472 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7466, baseType: !7473)
!7473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7474)
!7474 = !{!7475}
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7473, file: !7466, line: 16, baseType: !104, size: 32)
!7476 = !DILocation(line: 0, scope: !7465)
!7477 = !DILocation(line: 16, column: 2, scope: !7465)
!7478 = !DILocation(line: 16, column: 10, scope: !7465)
!7479 = !DILocation(line: 18, column: 2, scope: !7465)
!7480 = !DILocation(line: 19, column: 2, scope: !7465)
!7481 = !DILocation(line: 20, column: 2, scope: !7465)
!7482 = !DILocation(line: 21, column: 1, scope: !7465)
!7483 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7466, file: !7466, line: 23, type: !7484, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !7486)
!7484 = !DISubroutineType(types: !7485)
!7485 = !{null, !269, !7470}
!7486 = !{!7487, !7488}
!7487 = !DILocalVariable(name: "fmt", arg: 1, scope: !7483, file: !7466, line: 23, type: !269)
!7488 = !DILocalVariable(name: "ap", arg: 2, scope: !7483, file: !7466, line: 23, type: !7470)
!7489 = !DILocation(line: 0, scope: !7483)
!7490 = !DILocation(line: 25, column: 2, scope: !7483)
!7491 = !DILocation(line: 26, column: 1, scope: !7483)
!7492 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7466, file: !7466, line: 52, type: !7493, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !7495)
!7493 = !DISubroutineType(types: !7494)
!7494 = !{null, !105, !13, !111}
!7495 = !{!7496, !7497, !7498, !7499}
!7496 = !DILocalVariable(name: "level", arg: 1, scope: !7492, file: !7466, line: 52, type: !105)
!7497 = !DILocalVariable(name: "data", arg: 2, scope: !7492, file: !7466, line: 52, type: !13)
!7498 = !DILocalVariable(name: "size", arg: 3, scope: !7492, file: !7466, line: 52, type: !111)
!7499 = !DILocalVariable(name: "data_buffer", scope: !7492, file: !7466, line: 54, type: !269)
!7500 = !DILocation(line: 0, scope: !7492)
!7501 = !DILocation(line: 55, column: 14, scope: !7492)
!7502 = !DILocation(line: 55, column: 2, scope: !7492)
!7503 = !DILocation(line: 56, column: 3, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7492, file: !7466, line: 55, column: 20)
!7505 = !DILocation(line: 57, column: 3, scope: !7504)
!7506 = !DILocation(line: 59, column: 7, scope: !7504)
!7507 = distinct !{!7507, !7502, !7508}
!7508 = !DILocation(line: 65, column: 2, scope: !7492)
!7509 = !DILocation(line: 66, column: 1, scope: !7492)
!7510 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3433, file: !3433, line: 175, type: !3434, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !7511)
!7511 = !{!7512}
!7512 = !DILocalVariable(name: "level", arg: 1, scope: !7510, file: !3433, line: 175, type: !105)
!7513 = !DILocation(line: 0, scope: !7510)
!7514 = !DILocation(line: 177, column: 2, scope: !7510)
!7515 = !DILocation(line: 189, column: 1, scope: !7510)
!7516 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7466, file: !7466, line: 28, type: !7517, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !7519)
!7517 = !DISubroutineType(types: !7518)
!7518 = !{null, !269, !111}
!7519 = !{!7520, !7521, !7522, !7524, !7526}
!7520 = !DILocalVariable(name: "data", arg: 1, scope: !7516, file: !7466, line: 28, type: !269)
!7521 = !DILocalVariable(name: "length", arg: 2, scope: !7516, file: !7466, line: 28, type: !111)
!7522 = !DILocalVariable(name: "i", scope: !7523, file: !7466, line: 30, type: !111)
!7523 = distinct !DILexicalBlock(scope: !7516, file: !7466, line: 30, column: 2)
!7524 = !DILocalVariable(name: "i", scope: !7525, file: !7466, line: 40, type: !111)
!7525 = distinct !DILexicalBlock(scope: !7516, file: !7466, line: 40, column: 2)
!7526 = !DILocalVariable(name: "c", scope: !7527, file: !7466, line: 42, type: !170)
!7527 = distinct !DILexicalBlock(scope: !7528, file: !7466, line: 41, column: 19)
!7528 = distinct !DILexicalBlock(scope: !7529, file: !7466, line: 41, column: 7)
!7529 = distinct !DILexicalBlock(scope: !7530, file: !7466, line: 40, column: 54)
!7530 = distinct !DILexicalBlock(scope: !7525, file: !7466, line: 40, column: 2)
!7531 = !DILocation(line: 0, scope: !7516)
!7532 = !DILocation(line: 0, scope: !7523)
!7533 = !DILocation(line: 30, column: 2, scope: !7523)
!7534 = !DILocation(line: 38, column: 2, scope: !7516)
!7535 = !DILocation(line: 0, scope: !7525)
!7536 = !DILocation(line: 40, column: 2, scope: !7525)
!7537 = !DILocation(line: 31, column: 9, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7539, file: !7466, line: 31, column: 7)
!7539 = distinct !DILexicalBlock(scope: !7540, file: !7466, line: 30, column: 54)
!7540 = distinct !DILexicalBlock(scope: !7523, file: !7466, line: 30, column: 2)
!7541 = !DILocation(line: 31, column: 7, scope: !7539)
!7542 = !DILocation(line: 32, column: 35, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7538, file: !7466, line: 31, column: 19)
!7544 = !DILocation(line: 32, column: 20, scope: !7543)
!7545 = !DILocation(line: 32, column: 4, scope: !7543)
!7546 = !DILocation(line: 33, column: 3, scope: !7543)
!7547 = !DILocation(line: 34, column: 4, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7538, file: !7466, line: 33, column: 10)
!7549 = !DILocation(line: 30, column: 50, scope: !7540)
!7550 = !DILocation(line: 30, column: 24, scope: !7540)
!7551 = distinct !{!7551, !7533, !7552}
!7552 = !DILocation(line: 36, column: 2, scope: !7523)
!7553 = !DILocation(line: 49, column: 2, scope: !7516)
!7554 = !DILocation(line: 50, column: 1, scope: !7516)
!7555 = !DILocation(line: 41, column: 9, scope: !7528)
!7556 = !DILocation(line: 41, column: 7, scope: !7529)
!7557 = !DILocation(line: 42, column: 22, scope: !7527)
!7558 = !DILocation(line: 0, scope: !7527)
!7559 = !DILocation(line: 44, column: 25, scope: !7527)
!7560 = !DILocation(line: 44, column: 17, scope: !7527)
!7561 = !DILocation(line: 44, column: 33, scope: !7527)
!7562 = !DILocation(line: 44, column: 4, scope: !7527)
!7563 = !DILocation(line: 45, column: 3, scope: !7527)
!7564 = !DILocation(line: 46, column: 4, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7528, file: !7466, line: 45, column: 10)
!7566 = !DILocation(line: 40, column: 50, scope: !7530)
!7567 = !DILocation(line: 40, column: 24, scope: !7530)
!7568 = distinct !{!7568, !7536, !7569}
!7569 = !DILocation(line: 48, column: 2, scope: !7525)
!7570 = distinct !DISubprogram(name: "isprint", scope: !6537, file: !6537, line: 37, type: !448, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2620, retainedNodes: !7571)
!7571 = !{!7572}
!7572 = !DILocalVariable(name: "c", arg: 1, scope: !7570, file: !6537, line: 37, type: !105)
!7573 = !DILocation(line: 0, scope: !7570)
!7574 = !DILocation(line: 39, column: 38, scope: !7570)
!7575 = !DILocation(line: 39, column: 2, scope: !7570)
!7576 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7577, file: !7577, line: 57, type: !7578, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !7624)
!7577 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7578 = !DISubroutineType(types: !7579)
!7579 = !{null, !32, !7580}
!7580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7581, size: 32)
!7581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7582)
!7582 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2743, line: 141, baseType: !7583)
!7583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2743, line: 97, size: 256, elements: !7584)
!7584 = !{!7585}
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7583, file: !2743, line: 107, baseType: !7586, size: 256)
!7586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2743, line: 98, size: 256, elements: !7587)
!7587 = !{!7588, !7593, !7598, !7603, !7608, !7613, !7618, !7623}
!7588 = !DIDerivedType(tag: DW_TAG_member, scope: !7586, file: !2743, line: 99, baseType: !7589, size: 32)
!7589 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7586, file: !2743, line: 99, size: 32, elements: !7590)
!7590 = !{!7591, !7592}
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7589, file: !2743, line: 99, baseType: !113, size: 32)
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7589, file: !2743, line: 99, baseType: !113, size: 32)
!7593 = !DIDerivedType(tag: DW_TAG_member, scope: !7586, file: !2743, line: 100, baseType: !7594, size: 32, offset: 32)
!7594 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7586, file: !2743, line: 100, size: 32, elements: !7595)
!7595 = !{!7596, !7597}
!7596 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7594, file: !2743, line: 100, baseType: !113, size: 32)
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7594, file: !2743, line: 100, baseType: !113, size: 32)
!7598 = !DIDerivedType(tag: DW_TAG_member, scope: !7586, file: !2743, line: 101, baseType: !7599, size: 32, offset: 64)
!7599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7586, file: !2743, line: 101, size: 32, elements: !7600)
!7600 = !{!7601, !7602}
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7599, file: !2743, line: 101, baseType: !113, size: 32)
!7602 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7599, file: !2743, line: 101, baseType: !113, size: 32)
!7603 = !DIDerivedType(tag: DW_TAG_member, scope: !7586, file: !2743, line: 102, baseType: !7604, size: 32, offset: 96)
!7604 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7586, file: !2743, line: 102, size: 32, elements: !7605)
!7605 = !{!7606, !7607}
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7604, file: !2743, line: 102, baseType: !113, size: 32)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7604, file: !2743, line: 102, baseType: !113, size: 32)
!7608 = !DIDerivedType(tag: DW_TAG_member, scope: !7586, file: !2743, line: 103, baseType: !7609, size: 32, offset: 128)
!7609 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7586, file: !2743, line: 103, size: 32, elements: !7610)
!7610 = !{!7611, !7612}
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7609, file: !2743, line: 103, baseType: !113, size: 32)
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7609, file: !2743, line: 103, baseType: !113, size: 32)
!7613 = !DIDerivedType(tag: DW_TAG_member, scope: !7586, file: !2743, line: 104, baseType: !7614, size: 32, offset: 160)
!7614 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7586, file: !2743, line: 104, size: 32, elements: !7615)
!7615 = !{!7616, !7617}
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7614, file: !2743, line: 104, baseType: !113, size: 32)
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7614, file: !2743, line: 104, baseType: !113, size: 32)
!7618 = !DIDerivedType(tag: DW_TAG_member, scope: !7586, file: !2743, line: 105, baseType: !7619, size: 32, offset: 192)
!7619 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7586, file: !2743, line: 105, size: 32, elements: !7620)
!7620 = !{!7621, !7622}
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7619, file: !2743, line: 105, baseType: !113, size: 32)
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7619, file: !2743, line: 105, baseType: !113, size: 32)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7586, file: !2743, line: 106, baseType: !113, size: 32, offset: 224)
!7624 = !{!7625, !7626}
!7625 = !DILocalVariable(name: "reason", arg: 1, scope: !7576, file: !7577, line: 57, type: !32)
!7626 = !DILocalVariable(name: "esf", arg: 2, scope: !7576, file: !7577, line: 57, type: !7580)
!7627 = !DILocation(line: 0, scope: !7576)
!7628 = !DILocation(line: 60, column: 10, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7576, file: !7577, line: 60, column: 6)
!7630 = !DILocation(line: 60, column: 6, scope: !7576)
!7631 = !DILocation(line: 61, column: 3, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7629, file: !7577, line: 60, column: 19)
!7633 = !DILocation(line: 62, column: 2, scope: !7632)
!7634 = !DILocation(line: 63, column: 2, scope: !7576)
!7635 = !DILocation(line: 64, column: 1, scope: !7576)
!7636 = distinct !DISubprogram(name: "esf_dump", scope: !7577, file: !7577, line: 20, type: !7637, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !7639)
!7637 = !DISubroutineType(types: !7638)
!7638 = !{null, !7580}
!7639 = !{!7640}
!7640 = !DILocalVariable(name: "esf", arg: 1, scope: !7636, file: !7577, line: 20, type: !7580)
!7641 = !DILocation(line: 0, scope: !7636)
!7642 = !DILocation(line: 22, column: 2, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7644, file: !7577, line: 22, column: 2)
!7644 = distinct !DILexicalBlock(scope: !7645, file: !7577, line: 22, column: 2)
!7645 = distinct !DILexicalBlock(scope: !7646, file: !7577, line: 22, column: 2)
!7646 = distinct !DILexicalBlock(scope: !7636, file: !7577, line: 22, column: 2)
!7647 = !DILocation(line: 24, column: 2, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7649, file: !7577, line: 24, column: 2)
!7649 = distinct !DILexicalBlock(scope: !7650, file: !7577, line: 24, column: 2)
!7650 = distinct !DILexicalBlock(scope: !7651, file: !7577, line: 24, column: 2)
!7651 = distinct !DILexicalBlock(scope: !7636, file: !7577, line: 24, column: 2)
!7652 = !DILocation(line: 26, column: 2, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7654, file: !7577, line: 26, column: 2)
!7654 = distinct !DILexicalBlock(scope: !7655, file: !7577, line: 26, column: 2)
!7655 = distinct !DILexicalBlock(scope: !7656, file: !7577, line: 26, column: 2)
!7656 = distinct !DILexicalBlock(scope: !7636, file: !7577, line: 26, column: 2)
!7657 = !DILocation(line: 53, column: 2, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7659, file: !7577, line: 53, column: 2)
!7659 = distinct !DILexicalBlock(scope: !7660, file: !7577, line: 53, column: 2)
!7660 = distinct !DILexicalBlock(scope: !7661, file: !7577, line: 53, column: 2)
!7661 = distinct !DILexicalBlock(scope: !7636, file: !7577, line: 53, column: 2)
!7662 = !DILocation(line: 55, column: 1, scope: !7636)
!7663 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7577, file: !7577, line: 82, type: !7664, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !7679)
!7664 = !DISubroutineType(types: !7665)
!7665 = !{null, !7580, !7666}
!7666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7667, size: 32)
!7667 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !200, line: 37, baseType: !7668)
!7668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !7669)
!7669 = !{!7670, !7671, !7672, !7673, !7674, !7675, !7676, !7677, !7678}
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7668, file: !200, line: 26, baseType: !113, size: 32)
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7668, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7668, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7668, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7668, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7668, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7668, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7668, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7668, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!7679 = !{!7680, !7681, !7682}
!7680 = !DILocalVariable(name: "esf", arg: 1, scope: !7663, file: !7577, line: 82, type: !7580)
!7681 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7663, file: !7577, line: 82, type: !7666)
!7682 = !DILocalVariable(name: "reason", scope: !7663, file: !7577, line: 88, type: !32)
!7683 = !DILocation(line: 0, scope: !7663)
!7684 = !DILocation(line: 88, column: 35, scope: !7663)
!7685 = !DILocation(line: 108, column: 2, scope: !7663)
!7686 = !DILocation(line: 131, column: 1, scope: !7663)
!7687 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7577, file: !7577, line: 133, type: !7688, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !7690)
!7688 = !DISubroutineType(types: !7689)
!7689 = !{null, !104}
!7690 = !{!7691, !7692, !7693}
!7691 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7687, file: !7577, line: 133, type: !104)
!7692 = !DILocalVariable(name: "ssf_contents", scope: !7687, file: !7577, line: 135, type: !1007)
!7693 = !DILocalVariable(name: "oops_esf", scope: !7687, file: !7577, line: 136, type: !7582)
!7694 = !DILocation(line: 0, scope: !7687)
!7695 = !DILocation(line: 136, column: 2, scope: !7687)
!7696 = !DILocation(line: 136, column: 15, scope: !7687)
!7697 = !DILocation(line: 139, column: 22, scope: !7687)
!7698 = !DILocation(line: 139, column: 17, scope: !7687)
!7699 = !DILocation(line: 139, column: 20, scope: !7687)
!7700 = !DILocation(line: 141, column: 2, scope: !7687)
!7701 = !DILocation(line: 142, column: 2, scope: !7687)
!7702 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7703, file: !7703, line: 40, type: !7444, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !7704)
!7703 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7704 = !{!7705}
!7705 = !DILocalVariable(name: "irq", arg: 1, scope: !7702, file: !7703, line: 40, type: !32)
!7706 = !DILocation(line: 0, scope: !7702)
!7707 = !DILocation(line: 42, column: 2, scope: !7702)
!7708 = !DILocation(line: 43, column: 1, scope: !7702)
!7709 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !679, file: !679, line: 1684, type: !7710, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !7712)
!7710 = !DISubroutineType(types: !7711)
!7711 = !{null, !912}
!7712 = !{!7713}
!7713 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7709, file: !679, line: 1684, type: !912)
!7714 = !DILocation(line: 0, scope: !7709)
!7715 = !DILocation(line: 1686, column: 23, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7709, file: !679, line: 1686, column: 7)
!7717 = !DILocation(line: 1686, column: 7, scope: !7709)
!7718 = !DILocation(line: 1688, column: 5, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7716, file: !679, line: 1687, column: 3)
!7720 = !{i64 2150359055}
!7721 = !DILocation(line: 1689, column: 81, scope: !7719)
!7722 = !DILocation(line: 1689, column: 60, scope: !7719)
!7723 = !DILocation(line: 1689, column: 34, scope: !7719)
!7724 = !DILocation(line: 1689, column: 5, scope: !7719)
!7725 = !DILocation(line: 1689, column: 43, scope: !7719)
!7726 = !DILocation(line: 1690, column: 5, scope: !7719)
!7727 = !{i64 2150359169}
!7728 = !DILocation(line: 1691, column: 3, scope: !7719)
!7729 = !DILocation(line: 1692, column: 1, scope: !7709)
!7730 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7703, file: !7703, line: 45, type: !7444, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !7731)
!7731 = !{!7732}
!7732 = !DILocalVariable(name: "irq", arg: 1, scope: !7730, file: !7703, line: 45, type: !32)
!7733 = !DILocation(line: 0, scope: !7730)
!7734 = !DILocation(line: 47, column: 2, scope: !7730)
!7735 = !DILocation(line: 48, column: 1, scope: !7730)
!7736 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !679, file: !679, line: 1722, type: !7710, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !7737)
!7737 = !{!7738}
!7738 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7736, file: !679, line: 1722, type: !912)
!7739 = !DILocation(line: 0, scope: !7736)
!7740 = !DILocation(line: 1724, column: 23, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7736, file: !679, line: 1724, column: 7)
!7742 = !DILocation(line: 1724, column: 7, scope: !7736)
!7743 = !DILocation(line: 1726, column: 81, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7741, file: !679, line: 1725, column: 3)
!7745 = !DILocation(line: 1726, column: 60, scope: !7744)
!7746 = !DILocation(line: 1726, column: 34, scope: !7744)
!7747 = !DILocation(line: 1726, column: 5, scope: !7744)
!7748 = !DILocation(line: 1726, column: 43, scope: !7744)
!7749 = !DILocation(line: 271, column: 3, scope: !7750, inlinedAt: !7752)
!7750 = distinct !DISubprogram(name: "__DSB", scope: !7751, file: !7751, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !397)
!7751 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7752 = distinct !DILocation(line: 1727, column: 5, scope: !7744)
!7753 = !{i64 2813438}
!7754 = !DILocation(line: 260, column: 3, scope: !7755, inlinedAt: !7756)
!7755 = distinct !DISubprogram(name: "__ISB", scope: !7751, file: !7751, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !397)
!7756 = distinct !DILocation(line: 1728, column: 5, scope: !7744)
!7757 = !{i64 2813155}
!7758 = !DILocation(line: 1729, column: 3, scope: !7744)
!7759 = !DILocation(line: 1730, column: 1, scope: !7736)
!7760 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7703, file: !7703, line: 50, type: !7761, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !7763)
!7761 = !DISubroutineType(types: !7762)
!7762 = !{!105, !32}
!7763 = !{!7764}
!7764 = !DILocalVariable(name: "irq", arg: 1, scope: !7760, file: !7703, line: 50, type: !32)
!7765 = !DILocation(line: 0, scope: !7760)
!7766 = !DILocation(line: 52, column: 20, scope: !7760)
!7767 = !DILocation(line: 52, column: 9, scope: !7760)
!7768 = !DILocation(line: 52, column: 41, scope: !7760)
!7769 = !DILocation(line: 52, column: 39, scope: !7760)
!7770 = !DILocation(line: 52, column: 2, scope: !7760)
!7771 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7703, file: !7703, line: 64, type: !7772, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !7774)
!7772 = !DISubroutineType(types: !7773)
!7773 = !{null, !32, !32, !113}
!7774 = !{!7775, !7776, !7777}
!7775 = !DILocalVariable(name: "irq", arg: 1, scope: !7771, file: !7703, line: 64, type: !32)
!7776 = !DILocalVariable(name: "prio", arg: 2, scope: !7771, file: !7703, line: 64, type: !32)
!7777 = !DILocalVariable(name: "flags", arg: 3, scope: !7771, file: !7703, line: 64, type: !113)
!7778 = !DILocation(line: 0, scope: !7771)
!7779 = !DILocation(line: 83, column: 8, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7781, file: !7703, line: 82, column: 9)
!7781 = distinct !DILexicalBlock(scope: !7771, file: !7703, line: 76, column: 6)
!7782 = !DILocation(line: 91, column: 2, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7784, file: !7703, line: 91, column: 2)
!7784 = distinct !DILexicalBlock(scope: !7771, file: !7703, line: 91, column: 2)
!7785 = !DILocation(line: 91, column: 2, scope: !7784)
!7786 = !DILocation(line: 91, column: 2, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7783, file: !7703, line: 91, column: 2)
!7788 = !DILocation(line: 95, column: 2, scope: !7771)
!7789 = !DILocation(line: 96, column: 1, scope: !7771)
!7790 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !679, file: !679, line: 1814, type: !7791, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !7793)
!7791 = !DISubroutineType(types: !7792)
!7792 = !{null, !912, !113}
!7793 = !{!7794, !7795}
!7794 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7790, file: !679, line: 1814, type: !912)
!7795 = !DILocalVariable(name: "priority", arg: 2, scope: !7790, file: !679, line: 1814, type: !113)
!7796 = !DILocation(line: 0, scope: !7790)
!7797 = !DILocation(line: 0, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7790, file: !679, line: 1816, column: 7)
!7799 = !DILocation(line: 1816, column: 7, scope: !7790)
!7800 = !DILocation(line: 1824, column: 1, scope: !7790)
!7801 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7703, file: !7703, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !7802)
!7802 = !{!7803}
!7803 = !DILocalVariable(name: "unused", arg: 1, scope: !7801, file: !7703, line: 155, type: !13)
!7804 = !DILocation(line: 0, scope: !7801)
!7805 = !DILocation(line: 159, column: 2, scope: !7801)
!7806 = !DILocation(line: 160, column: 1, scope: !7801)
!7807 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7808, file: !7808, line: 87, type: !266, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !397)
!7808 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7809 = !DILocation(line: 89, column: 2, scope: !7807)
!7810 = !DILocation(line: 90, column: 2, scope: !7807)
!7811 = !DILocation(line: 91, column: 1, scope: !7807)
!7812 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7808, file: !7808, line: 23, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!7813 = !DISubprogram(name: "z_arm_int_exit", scope: !7814, file: !7814, line: 153, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!7814 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7815 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7816, file: !7816, line: 256, type: !266, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2682, retainedNodes: !397)
!7816 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7817 = !DILocation(line: 258, column: 2, scope: !7815)
!7818 = !DILocation(line: 260, column: 2, scope: !7815)
!7819 = !DILocation(line: 262, column: 2, scope: !7815)
!7820 = !DILocation(line: 263, column: 2, scope: !7815)
!7821 = !DILocation(line: 267, column: 2, scope: !7815)
!7822 = !DILocation(line: 268, column: 2, scope: !7815)
!7823 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7816, file: !7816, line: 53, type: !266, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2682, retainedNodes: !397)
!7824 = !DILocation(line: 55, column: 12, scope: !7823)
!7825 = !DILocation(line: 271, column: 3, scope: !7826, inlinedAt: !7827)
!7826 = distinct !DISubprogram(name: "__DSB", scope: !7751, file: !7751, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2682, retainedNodes: !397)
!7827 = distinct !DILocation(line: 56, column: 2, scope: !7823)
!7828 = !{i64 2812109}
!7829 = !DILocation(line: 260, column: 3, scope: !7830, inlinedAt: !7831)
!7830 = distinct !DISubprogram(name: "__ISB", scope: !7751, file: !7751, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2682, retainedNodes: !397)
!7831 = distinct !DILocation(line: 57, column: 2, scope: !7823)
!7832 = !{i64 2811826}
!7833 = !DILocation(line: 58, column: 1, scope: !7823)
!7834 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7816, file: !7816, line: 96, type: !266, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2682, retainedNodes: !397)
!7835 = !DILocation(line: 103, column: 13, scope: !7834)
!7836 = !DILocation(line: 975, column: 3, scope: !7837, inlinedAt: !7840)
!7837 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7751, file: !7751, line: 971, type: !395, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2682, retainedNodes: !7838)
!7838 = !{!7839}
!7839 = !DILocalVariable(name: "result", scope: !7837, file: !7751, line: 973, type: !113)
!7840 = distinct !DILocation(line: 189, column: 16, scope: !7834)
!7841 = !{i64 2832939}
!7842 = !DILocation(line: 0, scope: !7837, inlinedAt: !7840)
!7843 = !DILocation(line: 189, column: 32, scope: !7834)
!7844 = !DILocalVariable(name: "control", arg: 1, scope: !7845, file: !7751, line: 1001, type: !113)
!7845 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7751, file: !7751, line: 1001, type: !7846, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2682, retainedNodes: !7848)
!7846 = !DISubroutineType(types: !7847)
!7847 = !{null, !113}
!7848 = !{!7844}
!7849 = !DILocation(line: 0, scope: !7845, inlinedAt: !7850)
!7850 = distinct !DILocation(line: 189, column: 2, scope: !7834)
!7851 = !DILocation(line: 1003, column: 3, scope: !7845, inlinedAt: !7850)
!7852 = !{i64 2833659}
!7853 = !DILocation(line: 260, column: 3, scope: !7830, inlinedAt: !7854)
!7854 = distinct !DILocation(line: 1004, column: 3, scope: !7845, inlinedAt: !7850)
!7855 = !DILocation(line: 191, column: 1, scope: !7834)
!7856 = distinct !DISubprogram(name: "arch_swap", scope: !7857, file: !7857, line: 33, type: !7761, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !7858)
!7857 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7858 = !{!7859}
!7859 = !DILocalVariable(name: "key", arg: 1, scope: !7856, file: !7857, line: 33, type: !32)
!7860 = !DILocation(line: 0, scope: !7856)
!7861 = !DILocation(line: 36, column: 2, scope: !7856)
!7862 = !DILocation(line: 36, column: 17, scope: !7856)
!7863 = !DILocation(line: 36, column: 25, scope: !7856)
!7864 = !DILocation(line: 37, column: 37, scope: !7856)
!7865 = !DILocation(line: 37, column: 17, scope: !7856)
!7866 = !DILocation(line: 37, column: 35, scope: !7856)
!7867 = !DILocation(line: 41, column: 12, scope: !7856)
!7868 = !DILocalVariable(name: "key", arg: 1, scope: !7869, file: !7433, line: 84, type: !32)
!7869 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7433, file: !7433, line: 84, type: !7444, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !7870)
!7870 = !{!7868}
!7871 = !DILocation(line: 0, scope: !7869, inlinedAt: !7872)
!7872 = distinct !DILocation(line: 44, column: 2, scope: !7856)
!7873 = !DILocation(line: 95, column: 2, scope: !7869, inlinedAt: !7872)
!7874 = !{i64 1951305}
!7875 = !DILocation(line: 53, column: 9, scope: !7856)
!7876 = !DILocation(line: 53, column: 24, scope: !7856)
!7877 = !DILocation(line: 53, column: 2, scope: !7856)
!7878 = distinct !DISubprogram(name: "arch_new_thread", scope: !7879, file: !7879, line: 56, type: !7880, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2738, retainedNodes: !7989)
!7879 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7880 = !DISubroutineType(types: !7881)
!7881 = !{null, !7882, !7984, !102, !254, !104, !104, !104}
!7882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7883, size: 32)
!7883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !7884)
!7884 = !{!7885, !7943, !7955, !7956, !7957, !7958, !7964, !7979}
!7885 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7883, file: !127, line: 247, baseType: !7886, size: 384)
!7886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !7887)
!7887 = !{!7888, !7912, !7919, !7920, !7921, !7930, !7931, !7932}
!7888 = !DIDerivedType(tag: DW_TAG_member, scope: !7886, file: !127, line: 60, baseType: !7889, size: 64)
!7889 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7886, file: !127, line: 60, size: 64, elements: !7890)
!7890 = !{!7891, !7906}
!7891 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7889, file: !127, line: 61, baseType: !7892, size: 64)
!7892 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !7893)
!7893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !7894)
!7894 = !{!7895, !7901}
!7895 = !DIDerivedType(tag: DW_TAG_member, scope: !7893, file: !137, line: 38, baseType: !7896, size: 32)
!7896 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7893, file: !137, line: 38, size: 32, elements: !7897)
!7897 = !{!7898, !7900}
!7898 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7896, file: !137, line: 39, baseType: !7899, size: 32)
!7899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7893, size: 32)
!7900 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7896, file: !137, line: 40, baseType: !7899, size: 32)
!7901 = !DIDerivedType(tag: DW_TAG_member, scope: !7893, file: !137, line: 42, baseType: !7902, size: 32, offset: 32)
!7902 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7893, file: !137, line: 42, size: 32, elements: !7903)
!7903 = !{!7904, !7905}
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7902, file: !137, line: 43, baseType: !7899, size: 32)
!7905 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7902, file: !137, line: 44, baseType: !7899, size: 32)
!7906 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7889, file: !127, line: 62, baseType: !7907, size: 64)
!7907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !7908)
!7908 = !{!7909}
!7909 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7907, file: !153, line: 50, baseType: !7910, size: 64)
!7910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7911, size: 64, elements: !158)
!7911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7907, size: 32)
!7912 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7886, file: !127, line: 68, baseType: !7913, size: 32, offset: 64)
!7913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7914, size: 32)
!7914 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !7915)
!7915 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !7916)
!7916 = !{!7917}
!7917 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7915, file: !163, line: 232, baseType: !7918, size: 64)
!7918 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !7893)
!7919 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7886, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!7920 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7886, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!7921 = !DIDerivedType(tag: DW_TAG_member, scope: !7886, file: !127, line: 90, baseType: !7922, size: 16, offset: 112)
!7922 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7886, file: !127, line: 90, size: 16, elements: !7923)
!7923 = !{!7924, !7929}
!7924 = !DIDerivedType(tag: DW_TAG_member, scope: !7922, file: !127, line: 91, baseType: !7925, size: 16)
!7925 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7922, file: !127, line: 91, size: 16, elements: !7926)
!7926 = !{!7927, !7928}
!7927 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7925, file: !127, line: 96, baseType: !179, size: 8)
!7928 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7925, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!7929 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7922, file: !127, line: 100, baseType: !183, size: 16)
!7930 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7886, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7886, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!7932 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7886, file: !127, line: 131, baseType: !7933, size: 192, offset: 192)
!7933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !7934)
!7934 = !{!7935, !7936, !7942}
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7933, file: !163, line: 245, baseType: !7892, size: 64)
!7936 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7933, file: !163, line: 246, baseType: !7937, size: 32, offset: 64)
!7937 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !7938)
!7938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7939, size: 32)
!7939 = !DISubroutineType(types: !7940)
!7940 = !{null, !7941}
!7941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7933, size: 32)
!7942 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7933, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!7943 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7883, file: !127, line: 250, baseType: !7944, size: 288, offset: 384)
!7944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !7945)
!7945 = !{!7946, !7947, !7948, !7949, !7950, !7951, !7952, !7953, !7954}
!7946 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7944, file: !200, line: 26, baseType: !113, size: 32)
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7944, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7944, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!7949 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7944, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7944, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!7951 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7944, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!7952 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7944, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!7953 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7944, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!7954 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7944, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!7955 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7883, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7883, file: !127, line: 256, baseType: !7914, size: 64, offset: 704)
!7957 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7883, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7883, file: !127, line: 300, baseType: !7959, size: 96, offset: 800)
!7959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !7960)
!7960 = !{!7961, !7962, !7963}
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7959, file: !127, line: 153, baseType: !22, size: 32)
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7959, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7959, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7883, file: !127, line: 325, baseType: !7965, size: 32, offset: 896)
!7965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7966, size: 32)
!7966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !7967)
!7967 = !{!7968, !7974, !7975}
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7966, file: !122, line: 5074, baseType: !7969, size: 96)
!7969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !7970)
!7970 = !{!7971, !7972, !7973}
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7969, file: !226, line: 57, baseType: !229, size: 32)
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7969, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!7973 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7969, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7966, file: !122, line: 5075, baseType: !7914, size: 64, offset: 96)
!7975 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7966, file: !122, line: 5076, baseType: !7976, size: 32, offset: 160)
!7976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !7977)
!7977 = !{!7978}
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7976, file: !236, line: 52, baseType: !22, size: 32)
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7883, file: !127, line: 343, baseType: !7980, size: 64, offset: 928)
!7980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !7981)
!7981 = !{!7982, !7983}
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7980, file: !200, line: 63, baseType: !113, size: 32)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7980, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!7984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7985, size: 32)
!7985 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !7986)
!7986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !7987)
!7987 = !{!7988}
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7986, file: !249, line: 48, baseType: !103, size: 8)
!7989 = !{!7990, !7991, !7992, !7993, !7994, !7995, !7996, !7997}
!7990 = !DILocalVariable(name: "thread", arg: 1, scope: !7878, file: !7879, line: 56, type: !7882)
!7991 = !DILocalVariable(name: "stack", arg: 2, scope: !7878, file: !7879, line: 56, type: !7984)
!7992 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7878, file: !7879, line: 57, type: !102)
!7993 = !DILocalVariable(name: "entry", arg: 4, scope: !7878, file: !7879, line: 57, type: !254)
!7994 = !DILocalVariable(name: "p1", arg: 5, scope: !7878, file: !7879, line: 58, type: !104)
!7995 = !DILocalVariable(name: "p2", arg: 6, scope: !7878, file: !7879, line: 58, type: !104)
!7996 = !DILocalVariable(name: "p3", arg: 7, scope: !7878, file: !7879, line: 58, type: !104)
!7997 = !DILocalVariable(name: "iframe", scope: !7878, file: !7879, line: 60, type: !2741)
!7998 = !DILocation(line: 0, scope: !7878)
!7999 = !DILocation(line: 85, column: 11, scope: !7878)
!8000 = !DILocation(line: 93, column: 10, scope: !7878)
!8001 = !DILocation(line: 98, column: 13, scope: !7878)
!8002 = !DILocation(line: 100, column: 15, scope: !7878)
!8003 = !DILocation(line: 100, column: 10, scope: !7878)
!8004 = !DILocation(line: 100, column: 13, scope: !7878)
!8005 = !DILocation(line: 101, column: 15, scope: !7878)
!8006 = !DILocation(line: 101, column: 10, scope: !7878)
!8007 = !DILocation(line: 101, column: 13, scope: !7878)
!8008 = !DILocation(line: 102, column: 15, scope: !7878)
!8009 = !DILocation(line: 102, column: 10, scope: !7878)
!8010 = !DILocation(line: 102, column: 13, scope: !7878)
!8011 = !DILocation(line: 103, column: 15, scope: !7878)
!8012 = !DILocation(line: 103, column: 10, scope: !7878)
!8013 = !DILocation(line: 103, column: 13, scope: !7878)
!8014 = !DILocation(line: 106, column: 10, scope: !7878)
!8015 = !DILocation(line: 106, column: 15, scope: !7878)
!8016 = !DILocation(line: 122, column: 29, scope: !7878)
!8017 = !DILocation(line: 122, column: 23, scope: !7878)
!8018 = !DILocation(line: 122, column: 27, scope: !7878)
!8019 = !DILocation(line: 123, column: 15, scope: !7878)
!8020 = !DILocation(line: 123, column: 23, scope: !7878)
!8021 = !DILocation(line: 143, column: 1, scope: !7878)
!8022 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7879, file: !7879, line: 385, type: !8023, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2738, retainedNodes: !8025)
!8023 = !DISubroutineType(types: !8024)
!8024 = !{!113, !3720, !3720}
!8025 = !{!8026, !8027, !8028, !8031}
!8026 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !8022, file: !7879, line: 385, type: !3720)
!8027 = !DILocalVariable(name: "psp", arg: 2, scope: !8022, file: !7879, line: 385, type: !3720)
!8028 = !DILocalVariable(name: "thread", scope: !8022, file: !7879, line: 388, type: !8029)
!8029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8030, size: 32)
!8030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7883)
!8031 = !DILocalVariable(name: "guard_len", scope: !8022, file: !7879, line: 405, type: !113)
!8032 = !DILocation(line: 0, scope: !8022)
!8033 = !DILocation(line: 388, column: 34, scope: !8022)
!8034 = !DILocation(line: 390, column: 13, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8022, file: !7879, line: 390, column: 6)
!8036 = !DILocation(line: 390, column: 6, scope: !8022)
!8037 = !DILocation(line: 438, column: 6, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8022, file: !7879, line: 438, column: 6)
!8039 = !DILocation(line: 438, column: 6, scope: !8022)
!8040 = !DILocation(line: 442, column: 3, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8038, file: !7879, line: 440, column: 22)
!8042 = !DILocation(line: 455, column: 1, scope: !8022)
!8043 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7879, file: !7879, line: 530, type: !8044, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2738, retainedNodes: !8046)
!8044 = !DISubroutineType(types: !8045)
!8045 = !{null, !7882, !102, !254}
!8046 = !{!8047, !8048, !8049}
!8047 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8043, file: !7879, line: 530, type: !7882)
!8048 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8043, file: !7879, line: 530, type: !102)
!8049 = !DILocalVariable(name: "_main", arg: 3, scope: !8043, file: !7879, line: 531, type: !254)
!8050 = !DILocation(line: 0, scope: !8043)
!8051 = !DILocation(line: 535, column: 11, scope: !8043)
!8052 = !DILocation(line: 560, column: 2, scope: !8043)
!8053 = !DILocation(line: 576, column: 2, scope: !8043)
!8054 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8055 = !DILocation(line: 603, column: 2, scope: !8043)
!8056 = distinct !DISubprogram(name: "z_arm_fault", scope: !8057, file: !8057, line: 1036, type: !8058, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !8073)
!8057 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8058 = !DISubroutineType(types: !8059)
!8059 = !{null, !113, !113, !113, !8060}
!8060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8061, size: 32)
!8061 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !200, line: 37, baseType: !8062)
!8062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !8063)
!8063 = !{!8064, !8065, !8066, !8067, !8068, !8069, !8070, !8071, !8072}
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8062, file: !200, line: 26, baseType: !113, size: 32)
!8065 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8062, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8062, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8062, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8062, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8062, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8062, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8062, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8062, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!8073 = !{!8074, !8075, !8076, !8077, !8078, !8079, !8080, !8081, !8082, !8083}
!8074 = !DILocalVariable(name: "msp", arg: 1, scope: !8056, file: !8057, line: 1036, type: !113)
!8075 = !DILocalVariable(name: "psp", arg: 2, scope: !8056, file: !8057, line: 1036, type: !113)
!8076 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8056, file: !8057, line: 1036, type: !113)
!8077 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8056, file: !8057, line: 1037, type: !8060)
!8078 = !DILocalVariable(name: "reason", scope: !8056, file: !8057, line: 1039, type: !113)
!8079 = !DILocalVariable(name: "fault", scope: !8056, file: !8057, line: 1040, type: !105)
!8080 = !DILocalVariable(name: "recoverable", scope: !8056, file: !8057, line: 1041, type: !492)
!8081 = !DILocalVariable(name: "nested_exc", scope: !8056, file: !8057, line: 1041, type: !492)
!8082 = !DILocalVariable(name: "esf", scope: !8056, file: !8057, line: 1042, type: !2809)
!8083 = !DILocalVariable(name: "esf_copy", scope: !8056, file: !8057, line: 1047, type: !2810)
!8084 = !DILocation(line: 0, scope: !8056)
!8085 = !DILocation(line: 1040, column: 19, scope: !8056)
!8086 = !DILocation(line: 1041, column: 2, scope: !8056)
!8087 = !DILocation(line: 1047, column: 2, scope: !8056)
!8088 = !DILocation(line: 1047, column: 15, scope: !8056)
!8089 = !DILocalVariable(name: "key", arg: 1, scope: !8090, file: !7433, line: 84, type: !32)
!8090 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7433, file: !7433, line: 84, type: !7444, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !8091)
!8091 = !{!8089}
!8092 = !DILocation(line: 0, scope: !8090, inlinedAt: !8093)
!8093 = distinct !DILocation(line: 1050, column: 2, scope: !8056)
!8094 = !DILocation(line: 95, column: 2, scope: !8090, inlinedAt: !8093)
!8095 = !{i64 1984549}
!8096 = !DILocation(line: 1055, column: 9, scope: !8056)
!8097 = !DILocation(line: 1056, column: 2, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8099, file: !8057, line: 1056, column: 2)
!8099 = distinct !DILexicalBlock(scope: !8056, file: !8057, line: 1056, column: 2)
!8100 = !DILocation(line: 1056, column: 2, scope: !8099)
!8101 = !DILocation(line: 1056, column: 2, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8098, file: !8057, line: 1056, column: 2)
!8103 = !DILocation(line: 1040, column: 24, scope: !8056)
!8104 = !DILocation(line: 1063, column: 11, scope: !8056)
!8105 = !DILocation(line: 1064, column: 6, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8056, file: !8057, line: 1064, column: 6)
!8107 = !{i8 0, i8 2}
!8108 = !DILocation(line: 1064, column: 6, scope: !8056)
!8109 = !DILocation(line: 1070, column: 20, scope: !8056)
!8110 = !DILocation(line: 1070, column: 2, scope: !8056)
!8111 = !DILocation(line: 1089, column: 6, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8056, file: !8057, line: 1089, column: 6)
!8113 = !DILocation(line: 0, scope: !8112)
!8114 = !DILocation(line: 1089, column: 6, scope: !8056)
!8115 = !DILocation(line: 1090, column: 28, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8117, file: !8057, line: 1090, column: 7)
!8117 = distinct !DILexicalBlock(scope: !8112, file: !8057, line: 1089, column: 18)
!8118 = !DILocation(line: 1090, column: 44, scope: !8116)
!8119 = !DILocation(line: 1090, column: 7, scope: !8117)
!8120 = !DILocation(line: 1091, column: 24, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8116, file: !8057, line: 1090, column: 50)
!8122 = !DILocation(line: 1092, column: 3, scope: !8121)
!8123 = !DILocation(line: 1094, column: 23, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8112, file: !8057, line: 1093, column: 9)
!8125 = !DILocation(line: 1097, column: 2, scope: !8056)
!8126 = !DILocation(line: 1098, column: 1, scope: !8056)
!8127 = distinct !DISubprogram(name: "get_esf", scope: !8057, file: !8057, line: 894, type: !8128, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !8131)
!8128 = !DISubroutineType(types: !8129)
!8129 = !{!2809, !113, !113, !113, !8130}
!8130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 32)
!8131 = !{!8132, !8133, !8134, !8135, !8136, !8137}
!8132 = !DILocalVariable(name: "msp", arg: 1, scope: !8127, file: !8057, line: 894, type: !113)
!8133 = !DILocalVariable(name: "psp", arg: 2, scope: !8127, file: !8057, line: 894, type: !113)
!8134 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8127, file: !8057, line: 894, type: !113)
!8135 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8127, file: !8057, line: 895, type: !8130)
!8136 = !DILocalVariable(name: "alternative_state_exc", scope: !8127, file: !8057, line: 897, type: !492)
!8137 = !DILocalVariable(name: "ptr_esf", scope: !8127, file: !8057, line: 898, type: !2809)
!8138 = !DILocation(line: 0, scope: !8127)
!8139 = !DILocation(line: 900, column: 14, scope: !8127)
!8140 = !DILocation(line: 902, column: 49, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8127, file: !8057, line: 902, column: 6)
!8142 = !DILocation(line: 902, column: 6, scope: !8127)
!8143 = !DILocation(line: 983, column: 44, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8127, file: !8057, line: 983, column: 6)
!8145 = !DILocation(line: 985, column: 3, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8147, file: !8057, line: 985, column: 3)
!8147 = distinct !DILexicalBlock(scope: !8148, file: !8057, line: 985, column: 3)
!8148 = distinct !DILexicalBlock(scope: !8149, file: !8057, line: 985, column: 3)
!8149 = distinct !DILexicalBlock(scope: !8150, file: !8057, line: 985, column: 3)
!8150 = distinct !DILexicalBlock(scope: !8144, file: !8057, line: 984, column: 47)
!8151 = !DILocation(line: 986, column: 3, scope: !8150)
!8152 = !DILocation(line: 983, column: 18, scope: !8144)
!8153 = !DILocation(line: 991, column: 7, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8155, file: !8057, line: 990, column: 30)
!8155 = distinct !DILexicalBlock(scope: !8127, file: !8057, line: 990, column: 6)
!8156 = !DILocation(line: 998, column: 16, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8158, file: !8057, line: 995, column: 10)
!8158 = distinct !DILexicalBlock(scope: !8154, file: !8057, line: 991, column: 7)
!8159 = !DILocation(line: 1002, column: 2, scope: !8127)
!8160 = !DILocation(line: 1003, column: 1, scope: !8127)
!8161 = distinct !DISubprogram(name: "fault_handle", scope: !8057, file: !8057, line: 786, type: !8162, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !8164)
!8162 = !DISubroutineType(types: !8163)
!8163 = !{!113, !2809, !105, !8130}
!8164 = !{!8165, !8166, !8167, !8168}
!8165 = !DILocalVariable(name: "esf", arg: 1, scope: !8161, file: !8057, line: 786, type: !2809)
!8166 = !DILocalVariable(name: "fault", arg: 2, scope: !8161, file: !8057, line: 786, type: !105)
!8167 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8161, file: !8057, line: 786, type: !8130)
!8168 = !DILocalVariable(name: "reason", scope: !8161, file: !8057, line: 788, type: !113)
!8169 = !DILocation(line: 0, scope: !8161)
!8170 = !DILocation(line: 790, column: 15, scope: !8161)
!8171 = !DILocation(line: 792, column: 2, scope: !8161)
!8172 = !DILocation(line: 794, column: 12, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8161, file: !8057, line: 792, column: 17)
!8174 = !DILocation(line: 795, column: 3, scope: !8173)
!8175 = !DILocation(line: 800, column: 12, scope: !8173)
!8176 = !DILocation(line: 801, column: 3, scope: !8173)
!8177 = !DILocation(line: 803, column: 12, scope: !8173)
!8178 = !DILocation(line: 804, column: 3, scope: !8173)
!8179 = !DILocation(line: 806, column: 12, scope: !8173)
!8180 = !DILocation(line: 807, column: 3, scope: !8173)
!8181 = !DILocation(line: 814, column: 3, scope: !8173)
!8182 = !DILocation(line: 815, column: 3, scope: !8173)
!8183 = !DILocation(line: 820, column: 3, scope: !8173)
!8184 = !DILocation(line: 821, column: 3, scope: !8173)
!8185 = !DILocation(line: 829, column: 2, scope: !8161)
!8186 = distinct !DISubprogram(name: "hard_fault", scope: !8057, file: !8057, line: 709, type: !8187, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !8189)
!8187 = !DISubroutineType(types: !8188)
!8188 = !{!113, !2809, !8130}
!8189 = !{!8190, !8191, !8192}
!8190 = !DILocalVariable(name: "esf", arg: 1, scope: !8186, file: !8057, line: 709, type: !2809)
!8191 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8186, file: !8057, line: 709, type: !8130)
!8192 = !DILocalVariable(name: "reason", scope: !8186, file: !8057, line: 711, type: !113)
!8193 = !DILocation(line: 0, scope: !8186)
!8194 = !DILocation(line: 713, column: 2, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8196, file: !8057, line: 713, column: 2)
!8196 = distinct !DILexicalBlock(scope: !8197, file: !8057, line: 713, column: 2)
!8197 = distinct !DILexicalBlock(scope: !8198, file: !8057, line: 713, column: 2)
!8198 = distinct !DILexicalBlock(scope: !8186, file: !8057, line: 713, column: 2)
!8199 = !DILocation(line: 732, column: 15, scope: !8186)
!8200 = !DILocation(line: 734, column: 12, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8186, file: !8057, line: 734, column: 6)
!8202 = !DILocation(line: 734, column: 17, scope: !8201)
!8203 = !DILocation(line: 734, column: 41, scope: !8201)
!8204 = !DILocation(line: 734, column: 6, scope: !8186)
!8205 = !DILocation(line: 735, column: 3, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8207, file: !8057, line: 735, column: 3)
!8207 = distinct !DILexicalBlock(scope: !8208, file: !8057, line: 735, column: 3)
!8208 = distinct !DILexicalBlock(scope: !8209, file: !8057, line: 735, column: 3)
!8209 = distinct !DILexicalBlock(scope: !8210, file: !8057, line: 735, column: 3)
!8210 = distinct !DILexicalBlock(scope: !8201, file: !8057, line: 734, column: 47)
!8211 = !DILocation(line: 736, column: 2, scope: !8210)
!8212 = !DILocation(line: 736, column: 19, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8201, file: !8057, line: 736, column: 13)
!8214 = !DILocation(line: 736, column: 49, scope: !8213)
!8215 = !DILocation(line: 736, column: 13, scope: !8201)
!8216 = !DILocation(line: 737, column: 3, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8218, file: !8057, line: 737, column: 3)
!8218 = distinct !DILexicalBlock(scope: !8219, file: !8057, line: 737, column: 3)
!8219 = distinct !DILexicalBlock(scope: !8220, file: !8057, line: 737, column: 3)
!8220 = distinct !DILexicalBlock(scope: !8221, file: !8057, line: 737, column: 3)
!8221 = distinct !DILexicalBlock(scope: !8213, file: !8057, line: 736, column: 55)
!8222 = !DILocation(line: 738, column: 2, scope: !8221)
!8223 = !DILocation(line: 738, column: 19, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8213, file: !8057, line: 738, column: 13)
!8225 = !DILocation(line: 738, column: 24, scope: !8224)
!8226 = !DILocation(line: 738, column: 47, scope: !8224)
!8227 = !DILocation(line: 738, column: 13, scope: !8213)
!8228 = !DILocation(line: 739, column: 3, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8230, file: !8057, line: 739, column: 3)
!8230 = distinct !DILexicalBlock(scope: !8231, file: !8057, line: 739, column: 3)
!8231 = distinct !DILexicalBlock(scope: !8232, file: !8057, line: 739, column: 3)
!8232 = distinct !DILexicalBlock(scope: !8233, file: !8057, line: 739, column: 3)
!8233 = distinct !DILexicalBlock(scope: !8224, file: !8057, line: 738, column: 53)
!8234 = !DILocation(line: 740, column: 7, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8233, file: !8057, line: 740, column: 7)
!8236 = !DILocation(line: 740, column: 7, scope: !8233)
!8237 = !DILocation(line: 741, column: 4, scope: !8238)
!8238 = distinct !DILexicalBlock(scope: !8239, file: !8057, line: 741, column: 4)
!8239 = distinct !DILexicalBlock(scope: !8240, file: !8057, line: 741, column: 4)
!8240 = distinct !DILexicalBlock(scope: !8241, file: !8057, line: 741, column: 4)
!8241 = distinct !DILexicalBlock(scope: !8242, file: !8057, line: 741, column: 4)
!8242 = distinct !DILexicalBlock(scope: !8235, file: !8057, line: 740, column: 38)
!8243 = !DILocation(line: 742, column: 24, scope: !8242)
!8244 = !DILocation(line: 743, column: 3, scope: !8242)
!8245 = !DILocation(line: 743, column: 20, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8235, file: !8057, line: 743, column: 14)
!8247 = !DILocation(line: 743, column: 25, scope: !8246)
!8248 = !DILocation(line: 743, column: 52, scope: !8246)
!8249 = !DILocation(line: 743, column: 14, scope: !8235)
!8250 = !DILocation(line: 744, column: 13, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8246, file: !8057, line: 743, column: 58)
!8252 = !DILocation(line: 745, column: 3, scope: !8251)
!8253 = !DILocation(line: 745, column: 20, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8246, file: !8057, line: 745, column: 14)
!8255 = !DILocation(line: 745, column: 25, scope: !8254)
!8256 = !DILocation(line: 745, column: 52, scope: !8254)
!8257 = !DILocation(line: 745, column: 14, scope: !8246)
!8258 = !DILocation(line: 746, column: 13, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8254, file: !8057, line: 745, column: 58)
!8260 = !DILocation(line: 747, column: 3, scope: !8259)
!8261 = !DILocation(line: 747, column: 20, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8254, file: !8057, line: 747, column: 14)
!8263 = !DILocation(line: 747, column: 52, scope: !8262)
!8264 = !DILocation(line: 747, column: 14, scope: !8254)
!8265 = !DILocation(line: 748, column: 13, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8262, file: !8057, line: 747, column: 58)
!8267 = !DILocation(line: 754, column: 4, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8269, file: !8057, line: 754, column: 4)
!8269 = distinct !DILexicalBlock(scope: !8270, file: !8057, line: 754, column: 4)
!8270 = distinct !DILexicalBlock(scope: !8271, file: !8057, line: 754, column: 4)
!8271 = distinct !DILexicalBlock(scope: !8262, file: !8057, line: 753, column: 10)
!8272 = !DILocation(line: 758, column: 3, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8274, file: !8057, line: 758, column: 3)
!8274 = distinct !DILexicalBlock(scope: !8275, file: !8057, line: 758, column: 3)
!8275 = distinct !DILexicalBlock(scope: !8276, file: !8057, line: 758, column: 3)
!8276 = distinct !DILexicalBlock(scope: !8224, file: !8057, line: 757, column: 9)
!8277 = !DILocation(line: 766, column: 2, scope: !8186)
!8278 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8057, file: !8057, line: 229, type: !8162, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !8279)
!8279 = !{!8280, !8281, !8282, !8283, !8284, !8285, !8288}
!8280 = !DILocalVariable(name: "esf", arg: 1, scope: !8278, file: !8057, line: 229, type: !2809)
!8281 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8278, file: !8057, line: 229, type: !105)
!8282 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8278, file: !8057, line: 230, type: !8130)
!8283 = !DILocalVariable(name: "reason", scope: !8278, file: !8057, line: 232, type: !113)
!8284 = !DILocalVariable(name: "mmfar", scope: !8278, file: !8057, line: 233, type: !113)
!8285 = !DILocalVariable(name: "temp", scope: !8286, file: !8057, line: 254, type: !113)
!8286 = distinct !DILexicalBlock(scope: !8287, file: !8057, line: 244, column: 48)
!8287 = distinct !DILexicalBlock(scope: !8278, file: !8057, line: 244, column: 6)
!8288 = !DILocalVariable(name: "min_stack_ptr", scope: !8289, file: !8057, line: 309, type: !113)
!8289 = distinct !DILexicalBlock(scope: !8290, file: !8057, line: 308, column: 43)
!8290 = distinct !DILexicalBlock(scope: !8291, file: !8057, line: 308, column: 7)
!8291 = distinct !DILexicalBlock(scope: !8292, file: !8057, line: 289, column: 40)
!8292 = distinct !DILexicalBlock(scope: !8278, file: !8057, line: 288, column: 6)
!8293 = !DILocation(line: 0, scope: !8278)
!8294 = !DILocation(line: 235, column: 2, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8296, file: !8057, line: 235, column: 2)
!8296 = distinct !DILexicalBlock(scope: !8297, file: !8057, line: 235, column: 2)
!8297 = distinct !DILexicalBlock(scope: !8298, file: !8057, line: 235, column: 2)
!8298 = distinct !DILexicalBlock(scope: !8278, file: !8057, line: 235, column: 2)
!8299 = !DILocation(line: 237, column: 12, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8278, file: !8057, line: 237, column: 6)
!8301 = !DILocation(line: 237, column: 17, scope: !8300)
!8302 = !DILocation(line: 237, column: 41, scope: !8300)
!8303 = !DILocation(line: 237, column: 6, scope: !8278)
!8304 = !DILocation(line: 238, column: 3, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8306, file: !8057, line: 238, column: 3)
!8306 = distinct !DILexicalBlock(scope: !8307, file: !8057, line: 238, column: 3)
!8307 = distinct !DILexicalBlock(scope: !8308, file: !8057, line: 238, column: 3)
!8308 = distinct !DILexicalBlock(scope: !8309, file: !8057, line: 238, column: 3)
!8309 = distinct !DILexicalBlock(scope: !8300, file: !8057, line: 237, column: 47)
!8310 = !DILocation(line: 240, column: 2, scope: !8309)
!8311 = !DILocation(line: 241, column: 12, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8278, file: !8057, line: 241, column: 6)
!8313 = !DILocation(line: 241, column: 17, scope: !8312)
!8314 = !DILocation(line: 241, column: 43, scope: !8312)
!8315 = !DILocation(line: 241, column: 6, scope: !8278)
!8316 = !DILocation(line: 242, column: 3, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8318, file: !8057, line: 242, column: 3)
!8318 = distinct !DILexicalBlock(scope: !8319, file: !8057, line: 242, column: 3)
!8319 = distinct !DILexicalBlock(scope: !8320, file: !8057, line: 242, column: 3)
!8320 = distinct !DILexicalBlock(scope: !8321, file: !8057, line: 242, column: 3)
!8321 = distinct !DILexicalBlock(scope: !8312, file: !8057, line: 241, column: 49)
!8322 = !DILocation(line: 243, column: 2, scope: !8321)
!8323 = !DILocation(line: 244, column: 12, scope: !8287)
!8324 = !DILocation(line: 244, column: 17, scope: !8287)
!8325 = !DILocation(line: 244, column: 42, scope: !8287)
!8326 = !DILocation(line: 244, column: 6, scope: !8278)
!8327 = !DILocation(line: 245, column: 3, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8329, file: !8057, line: 245, column: 3)
!8329 = distinct !DILexicalBlock(scope: !8330, file: !8057, line: 245, column: 3)
!8330 = distinct !DILexicalBlock(scope: !8331, file: !8057, line: 245, column: 3)
!8331 = distinct !DILexicalBlock(scope: !8286, file: !8057, line: 245, column: 3)
!8332 = !DILocation(line: 254, column: 24, scope: !8286)
!8333 = !DILocation(line: 0, scope: !8286)
!8334 = !DILocation(line: 256, column: 13, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8286, file: !8057, line: 256, column: 7)
!8336 = !DILocation(line: 256, column: 18, scope: !8335)
!8337 = !DILocation(line: 256, column: 44, scope: !8335)
!8338 = !DILocation(line: 256, column: 7, scope: !8286)
!8339 = !DILocation(line: 258, column: 4, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8341, file: !8057, line: 258, column: 4)
!8341 = distinct !DILexicalBlock(scope: !8342, file: !8057, line: 258, column: 4)
!8342 = distinct !DILexicalBlock(scope: !8343, file: !8057, line: 258, column: 4)
!8343 = distinct !DILexicalBlock(scope: !8344, file: !8057, line: 258, column: 4)
!8344 = distinct !DILexicalBlock(scope: !8335, file: !8057, line: 256, column: 50)
!8345 = !DILocation(line: 259, column: 24, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8344, file: !8057, line: 259, column: 8)
!8347 = !DILocation(line: 259, column: 8, scope: !8344)
!8348 = !DILocation(line: 261, column: 15, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8346, file: !8057, line: 259, column: 30)
!8350 = !DILocation(line: 262, column: 4, scope: !8349)
!8351 = !DILocation(line: 265, column: 12, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8278, file: !8057, line: 265, column: 6)
!8353 = !DILocation(line: 265, column: 17, scope: !8352)
!8354 = !DILocation(line: 265, column: 42, scope: !8352)
!8355 = !DILocation(line: 265, column: 6, scope: !8278)
!8356 = !DILocation(line: 266, column: 3, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8358, file: !8057, line: 266, column: 3)
!8358 = distinct !DILexicalBlock(scope: !8359, file: !8057, line: 266, column: 3)
!8359 = distinct !DILexicalBlock(scope: !8360, file: !8057, line: 266, column: 3)
!8360 = distinct !DILexicalBlock(scope: !8361, file: !8057, line: 266, column: 3)
!8361 = distinct !DILexicalBlock(scope: !8352, file: !8057, line: 265, column: 48)
!8362 = !DILocation(line: 267, column: 2, scope: !8361)
!8363 = !DILocation(line: 269, column: 12, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8278, file: !8057, line: 269, column: 6)
!8365 = !DILocation(line: 269, column: 17, scope: !8364)
!8366 = !DILocation(line: 269, column: 41, scope: !8364)
!8367 = !DILocation(line: 269, column: 6, scope: !8278)
!8368 = !DILocation(line: 270, column: 3, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8370, file: !8057, line: 270, column: 3)
!8370 = distinct !DILexicalBlock(scope: !8371, file: !8057, line: 270, column: 3)
!8371 = distinct !DILexicalBlock(scope: !8372, file: !8057, line: 270, column: 3)
!8372 = distinct !DILexicalBlock(scope: !8373, file: !8057, line: 270, column: 3)
!8373 = distinct !DILexicalBlock(scope: !8364, file: !8057, line: 269, column: 47)
!8374 = !DILocation(line: 272, column: 2, scope: !8373)
!8375 = !DILocation(line: 288, column: 12, scope: !8292)
!8376 = !DILocation(line: 288, column: 17, scope: !8292)
!8377 = !DILocation(line: 288, column: 41, scope: !8292)
!8378 = !DILocation(line: 289, column: 9, scope: !8292)
!8379 = !DILocation(line: 289, column: 14, scope: !8292)
!8380 = !DILocation(line: 288, column: 6, scope: !8278)
!8381 = !DILocation(line: 308, column: 12, scope: !8290)
!8382 = !DILocation(line: 308, column: 17, scope: !8290)
!8383 = !DILocation(line: 308, column: 7, scope: !8291)
!8384 = !DILocation(line: 310, column: 6, scope: !8289)
!8385 = !DILocation(line: 309, column: 29, scope: !8289)
!8386 = !DILocation(line: 0, scope: !8289)
!8387 = !DILocation(line: 312, column: 8, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8289, file: !8057, line: 312, column: 8)
!8389 = !DILocation(line: 312, column: 8, scope: !8289)
!8390 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !8391, file: !7751, line: 1099, type: !113)
!8391 = distinct !DISubprogram(name: "__set_PSP", scope: !7751, file: !7751, line: 1099, type: !7846, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !8392)
!8392 = !{!8390}
!8393 = !DILocation(line: 0, scope: !8391, inlinedAt: !8394)
!8394 = distinct !DILocation(line: 338, column: 5, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8388, file: !8057, line: 312, column: 23)
!8396 = !DILocation(line: 1101, column: 3, scope: !8391, inlinedAt: !8394)
!8397 = !{i64 2863078}
!8398 = !DILocation(line: 341, column: 4, scope: !8395)
!8399 = !DILocation(line: 342, column: 5, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8401, file: !8057, line: 342, column: 5)
!8401 = distinct !DILexicalBlock(scope: !8402, file: !8057, line: 342, column: 5)
!8402 = distinct !DILexicalBlock(scope: !8388, file: !8057, line: 341, column: 11)
!8403 = !DILocation(line: 342, column: 5, scope: !8401)
!8404 = !DILocation(line: 342, column: 5, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8400, file: !8057, line: 342, column: 5)
!8406 = !DILocation(line: 360, column: 12, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8278, file: !8057, line: 360, column: 6)
!8408 = !DILocation(line: 360, column: 17, scope: !8407)
!8409 = !DILocation(line: 360, column: 41, scope: !8407)
!8410 = !DILocation(line: 360, column: 6, scope: !8278)
!8411 = !DILocation(line: 361, column: 14, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8407, file: !8057, line: 360, column: 47)
!8413 = !DILocation(line: 362, column: 2, scope: !8412)
!8414 = !DILocation(line: 366, column: 12, scope: !8278)
!8415 = !DILocation(line: 369, column: 15, scope: !8278)
!8416 = !DILocation(line: 371, column: 2, scope: !8278)
!8417 = distinct !DISubprogram(name: "bus_fault", scope: !8057, file: !8057, line: 383, type: !8418, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !8420)
!8418 = !DISubroutineType(types: !8419)
!8419 = !{!105, !2809, !105, !8130}
!8420 = !{!8421, !8422, !8423, !8424, !8425}
!8421 = !DILocalVariable(name: "esf", arg: 1, scope: !8417, file: !8057, line: 383, type: !2809)
!8422 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8417, file: !8057, line: 383, type: !105)
!8423 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8417, file: !8057, line: 383, type: !8130)
!8424 = !DILocalVariable(name: "reason", scope: !8417, file: !8057, line: 385, type: !113)
!8425 = !DILocalVariable(name: "bfar", scope: !8426, file: !8057, line: 405, type: !113)
!8426 = distinct !DILexicalBlock(scope: !8427, file: !8057, line: 395, column: 42)
!8427 = distinct !DILexicalBlock(scope: !8417, file: !8057, line: 395, column: 6)
!8428 = !DILocation(line: 0, scope: !8417)
!8429 = !DILocation(line: 387, column: 2, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8431, file: !8057, line: 387, column: 2)
!8431 = distinct !DILexicalBlock(scope: !8432, file: !8057, line: 387, column: 2)
!8432 = distinct !DILexicalBlock(scope: !8433, file: !8057, line: 387, column: 2)
!8433 = distinct !DILexicalBlock(scope: !8417, file: !8057, line: 387, column: 2)
!8434 = !DILocation(line: 389, column: 11, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8417, file: !8057, line: 389, column: 6)
!8436 = !DILocation(line: 389, column: 16, scope: !8435)
!8437 = !DILocation(line: 389, column: 6, scope: !8417)
!8438 = !DILocation(line: 390, column: 3, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8440, file: !8057, line: 390, column: 3)
!8440 = distinct !DILexicalBlock(scope: !8441, file: !8057, line: 390, column: 3)
!8441 = distinct !DILexicalBlock(scope: !8442, file: !8057, line: 390, column: 3)
!8442 = distinct !DILexicalBlock(scope: !8443, file: !8057, line: 390, column: 3)
!8443 = distinct !DILexicalBlock(scope: !8435, file: !8057, line: 389, column: 39)
!8444 = !DILocation(line: 391, column: 2, scope: !8443)
!8445 = !DILocation(line: 392, column: 11, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8417, file: !8057, line: 392, column: 6)
!8447 = !DILocation(line: 392, column: 16, scope: !8446)
!8448 = !DILocation(line: 392, column: 6, scope: !8417)
!8449 = !DILocation(line: 393, column: 3, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8451, file: !8057, line: 393, column: 3)
!8451 = distinct !DILexicalBlock(scope: !8452, file: !8057, line: 393, column: 3)
!8452 = distinct !DILexicalBlock(scope: !8453, file: !8057, line: 393, column: 3)
!8453 = distinct !DILexicalBlock(scope: !8454, file: !8057, line: 393, column: 3)
!8454 = distinct !DILexicalBlock(scope: !8446, file: !8057, line: 392, column: 41)
!8455 = !DILocation(line: 394, column: 2, scope: !8454)
!8456 = !DILocation(line: 395, column: 11, scope: !8427)
!8457 = !DILocation(line: 395, column: 16, scope: !8427)
!8458 = !DILocation(line: 395, column: 6, scope: !8417)
!8459 = !DILocation(line: 396, column: 3, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8461, file: !8057, line: 396, column: 3)
!8461 = distinct !DILexicalBlock(scope: !8462, file: !8057, line: 396, column: 3)
!8462 = distinct !DILexicalBlock(scope: !8463, file: !8057, line: 396, column: 3)
!8463 = distinct !DILexicalBlock(scope: !8426, file: !8057, line: 396, column: 3)
!8464 = !DILocation(line: 405, column: 3, scope: !8426)
!8465 = !DILocation(line: 0, scope: !8426)
!8466 = !DILocation(line: 407, column: 13, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8426, file: !8057, line: 407, column: 7)
!8468 = !DILocation(line: 407, column: 18, scope: !8467)
!8469 = !DILocation(line: 407, column: 44, scope: !8467)
!8470 = !DILocation(line: 407, column: 7, scope: !8426)
!8471 = !DILocation(line: 408, column: 4, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8473, file: !8057, line: 408, column: 4)
!8473 = distinct !DILexicalBlock(scope: !8474, file: !8057, line: 408, column: 4)
!8474 = distinct !DILexicalBlock(scope: !8475, file: !8057, line: 408, column: 4)
!8475 = distinct !DILexicalBlock(scope: !8476, file: !8057, line: 408, column: 4)
!8476 = distinct !DILexicalBlock(scope: !8467, file: !8057, line: 407, column: 50)
!8477 = !DILocation(line: 409, column: 24, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8476, file: !8057, line: 409, column: 8)
!8479 = !DILocation(line: 409, column: 8, scope: !8476)
!8480 = !DILocation(line: 411, column: 15, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8478, file: !8057, line: 409, column: 30)
!8482 = !DILocation(line: 412, column: 4, scope: !8481)
!8483 = !DILocation(line: 415, column: 11, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8417, file: !8057, line: 415, column: 6)
!8485 = !DILocation(line: 415, column: 16, scope: !8484)
!8486 = !DILocation(line: 415, column: 6, scope: !8417)
!8487 = !DILocation(line: 416, column: 3, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8489, file: !8057, line: 416, column: 3)
!8489 = distinct !DILexicalBlock(scope: !8490, file: !8057, line: 416, column: 3)
!8490 = distinct !DILexicalBlock(scope: !8491, file: !8057, line: 416, column: 3)
!8491 = distinct !DILexicalBlock(scope: !8492, file: !8057, line: 416, column: 3)
!8492 = distinct !DILexicalBlock(scope: !8484, file: !8057, line: 415, column: 44)
!8493 = !DILocation(line: 417, column: 2, scope: !8492)
!8494 = !DILocation(line: 418, column: 12, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8417, file: !8057, line: 418, column: 6)
!8496 = !DILocation(line: 418, column: 17, scope: !8495)
!8497 = !DILocation(line: 418, column: 41, scope: !8495)
!8498 = !DILocation(line: 418, column: 6, scope: !8417)
!8499 = !DILocation(line: 423, column: 18, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8495, file: !8057, line: 423, column: 13)
!8501 = !DILocation(line: 423, column: 23, scope: !8500)
!8502 = !DILocation(line: 423, column: 13, scope: !8495)
!8503 = !DILocation(line: 0, scope: !8495)
!8504 = !DILocation(line: 524, column: 12, scope: !8417)
!8505 = !DILocation(line: 526, column: 15, scope: !8417)
!8506 = !DILocation(line: 528, column: 2, scope: !8417)
!8507 = distinct !DISubprogram(name: "usage_fault", scope: !8057, file: !8057, line: 539, type: !8508, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !8512)
!8508 = !DISubroutineType(types: !8509)
!8509 = !{!113, !8510}
!8510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8511, size: 32)
!8511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2810)
!8512 = !{!8513, !8514}
!8513 = !DILocalVariable(name: "esf", arg: 1, scope: !8507, file: !8057, line: 539, type: !8510)
!8514 = !DILocalVariable(name: "reason", scope: !8507, file: !8057, line: 541, type: !113)
!8515 = !DILocation(line: 0, scope: !8507)
!8516 = !DILocation(line: 543, column: 2, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8518, file: !8057, line: 543, column: 2)
!8518 = distinct !DILexicalBlock(scope: !8519, file: !8057, line: 543, column: 2)
!8519 = distinct !DILexicalBlock(scope: !8520, file: !8057, line: 543, column: 2)
!8520 = distinct !DILexicalBlock(scope: !8507, file: !8057, line: 543, column: 2)
!8521 = !DILocation(line: 546, column: 12, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8507, file: !8057, line: 546, column: 6)
!8523 = !DILocation(line: 546, column: 17, scope: !8522)
!8524 = !DILocation(line: 546, column: 43, scope: !8522)
!8525 = !DILocation(line: 546, column: 6, scope: !8507)
!8526 = !DILocation(line: 547, column: 3, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8528, file: !8057, line: 547, column: 3)
!8528 = distinct !DILexicalBlock(scope: !8529, file: !8057, line: 547, column: 3)
!8529 = distinct !DILexicalBlock(scope: !8530, file: !8057, line: 547, column: 3)
!8530 = distinct !DILexicalBlock(scope: !8531, file: !8057, line: 547, column: 3)
!8531 = distinct !DILexicalBlock(scope: !8522, file: !8057, line: 546, column: 49)
!8532 = !DILocation(line: 548, column: 2, scope: !8531)
!8533 = !DILocation(line: 549, column: 12, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8507, file: !8057, line: 549, column: 6)
!8535 = !DILocation(line: 549, column: 17, scope: !8534)
!8536 = !DILocation(line: 549, column: 43, scope: !8534)
!8537 = !DILocation(line: 549, column: 6, scope: !8507)
!8538 = !DILocation(line: 550, column: 3, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8540, file: !8057, line: 550, column: 3)
!8540 = distinct !DILexicalBlock(scope: !8541, file: !8057, line: 550, column: 3)
!8541 = distinct !DILexicalBlock(scope: !8542, file: !8057, line: 550, column: 3)
!8542 = distinct !DILexicalBlock(scope: !8543, file: !8057, line: 550, column: 3)
!8543 = distinct !DILexicalBlock(scope: !8534, file: !8057, line: 549, column: 49)
!8544 = !DILocation(line: 551, column: 2, scope: !8543)
!8545 = !DILocation(line: 567, column: 12, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8507, file: !8057, line: 567, column: 6)
!8547 = !DILocation(line: 567, column: 17, scope: !8546)
!8548 = !DILocation(line: 567, column: 38, scope: !8546)
!8549 = !DILocation(line: 567, column: 6, scope: !8507)
!8550 = !DILocation(line: 568, column: 3, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8552, file: !8057, line: 568, column: 3)
!8552 = distinct !DILexicalBlock(scope: !8553, file: !8057, line: 568, column: 3)
!8553 = distinct !DILexicalBlock(scope: !8554, file: !8057, line: 568, column: 3)
!8554 = distinct !DILexicalBlock(scope: !8555, file: !8057, line: 568, column: 3)
!8555 = distinct !DILexicalBlock(scope: !8546, file: !8057, line: 567, column: 44)
!8556 = !DILocation(line: 569, column: 2, scope: !8555)
!8557 = !DILocation(line: 570, column: 12, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8507, file: !8057, line: 570, column: 6)
!8559 = !DILocation(line: 570, column: 17, scope: !8558)
!8560 = !DILocation(line: 570, column: 39, scope: !8558)
!8561 = !DILocation(line: 570, column: 6, scope: !8507)
!8562 = !DILocation(line: 571, column: 3, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8564, file: !8057, line: 571, column: 3)
!8564 = distinct !DILexicalBlock(scope: !8565, file: !8057, line: 571, column: 3)
!8565 = distinct !DILexicalBlock(scope: !8566, file: !8057, line: 571, column: 3)
!8566 = distinct !DILexicalBlock(scope: !8567, file: !8057, line: 571, column: 3)
!8567 = distinct !DILexicalBlock(scope: !8558, file: !8057, line: 570, column: 45)
!8568 = !DILocation(line: 572, column: 2, scope: !8567)
!8569 = !DILocation(line: 573, column: 12, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8507, file: !8057, line: 573, column: 6)
!8571 = !DILocation(line: 573, column: 17, scope: !8570)
!8572 = !DILocation(line: 573, column: 42, scope: !8570)
!8573 = !DILocation(line: 573, column: 6, scope: !8507)
!8574 = !DILocation(line: 574, column: 3, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8576, file: !8057, line: 574, column: 3)
!8576 = distinct !DILexicalBlock(scope: !8577, file: !8057, line: 574, column: 3)
!8577 = distinct !DILexicalBlock(scope: !8578, file: !8057, line: 574, column: 3)
!8578 = distinct !DILexicalBlock(scope: !8579, file: !8057, line: 574, column: 3)
!8579 = distinct !DILexicalBlock(scope: !8570, file: !8057, line: 573, column: 48)
!8580 = !DILocation(line: 575, column: 2, scope: !8579)
!8581 = !DILocation(line: 576, column: 12, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8507, file: !8057, line: 576, column: 6)
!8583 = !DILocation(line: 576, column: 17, scope: !8582)
!8584 = !DILocation(line: 576, column: 44, scope: !8582)
!8585 = !DILocation(line: 576, column: 6, scope: !8507)
!8586 = !DILocation(line: 577, column: 3, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8588, file: !8057, line: 577, column: 3)
!8588 = distinct !DILexicalBlock(scope: !8589, file: !8057, line: 577, column: 3)
!8589 = distinct !DILexicalBlock(scope: !8590, file: !8057, line: 577, column: 3)
!8590 = distinct !DILexicalBlock(scope: !8591, file: !8057, line: 577, column: 3)
!8591 = distinct !DILexicalBlock(scope: !8582, file: !8057, line: 576, column: 50)
!8592 = !DILocation(line: 578, column: 2, scope: !8591)
!8593 = !DILocation(line: 581, column: 12, scope: !8507)
!8594 = !DILocation(line: 583, column: 2, scope: !8507)
!8595 = distinct !DISubprogram(name: "debug_monitor", scope: !8057, file: !8057, line: 632, type: !8596, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !8598)
!8596 = !DISubroutineType(types: !8597)
!8597 = !{null, !2809, !8130}
!8598 = !{!8599, !8600}
!8599 = !DILocalVariable(name: "esf", arg: 1, scope: !8595, file: !8057, line: 632, type: !2809)
!8600 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8595, file: !8057, line: 632, type: !8130)
!8601 = !DILocation(line: 0, scope: !8595)
!8602 = !DILocation(line: 634, column: 15, scope: !8595)
!8603 = !DILocation(line: 636, column: 2, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8605, file: !8057, line: 636, column: 2)
!8605 = distinct !DILexicalBlock(scope: !8606, file: !8057, line: 636, column: 2)
!8606 = distinct !DILexicalBlock(scope: !8607, file: !8057, line: 636, column: 2)
!8607 = distinct !DILexicalBlock(scope: !8595, file: !8057, line: 636, column: 2)
!8608 = !DILocation(line: 652, column: 1, scope: !8595)
!8609 = distinct !DISubprogram(name: "reserved_exception", scope: !8057, file: !8057, line: 776, type: !8610, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !8612)
!8610 = !DISubroutineType(types: !8611)
!8611 = !{null, !8510, !105}
!8612 = !{!8613, !8614}
!8613 = !DILocalVariable(name: "esf", arg: 1, scope: !8609, file: !8057, line: 776, type: !8510)
!8614 = !DILocalVariable(name: "fault", arg: 2, scope: !8609, file: !8057, line: 776, type: !105)
!8615 = !DILocation(line: 0, scope: !8609)
!8616 = !DILocation(line: 780, column: 2, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8618, file: !8057, line: 780, column: 2)
!8618 = distinct !DILexicalBlock(scope: !8619, file: !8057, line: 780, column: 2)
!8619 = distinct !DILexicalBlock(scope: !8620, file: !8057, line: 780, column: 2)
!8620 = distinct !DILexicalBlock(scope: !8609, file: !8057, line: 780, column: 2)
!8621 = !DILocation(line: 783, column: 1, scope: !8609)
!8622 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8057, file: !8057, line: 658, type: !8623, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !8625)
!8623 = !DISubroutineType(types: !8624)
!8624 = !{!492, !2809}
!8625 = !{!8626, !8627, !8628}
!8626 = !DILocalVariable(name: "esf", arg: 1, scope: !8622, file: !8057, line: 658, type: !2809)
!8627 = !DILocalVariable(name: "ret_addr", scope: !8622, file: !8057, line: 660, type: !2581)
!8628 = !DILocalVariable(name: "fault_insn", scope: !8622, file: !8057, line: 686, type: !183)
!8629 = !DILocation(line: 0, scope: !8622)
!8630 = !DILocation(line: 660, column: 46, scope: !8622)
!8631 = !DILocation(line: 660, column: 23, scope: !8622)
!8632 = !DILocation(line: 682, column: 11, scope: !8622)
!8633 = !DILocation(line: 271, column: 3, scope: !8634, inlinedAt: !8635)
!8634 = distinct !DISubprogram(name: "__DSB", scope: !7751, file: !7751, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !397)
!8635 = distinct !DILocation(line: 683, column: 2, scope: !8622)
!8636 = !{i64 2839213}
!8637 = !DILocation(line: 260, column: 3, scope: !8638, inlinedAt: !8639)
!8638 = distinct !DISubprogram(name: "__ISB", scope: !7751, file: !7751, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !397)
!8639 = distinct !DILocation(line: 684, column: 2, scope: !8622)
!8640 = !{i64 2838930}
!8641 = !DILocation(line: 686, column: 35, scope: !8622)
!8642 = !DILocation(line: 686, column: 24, scope: !8622)
!8643 = !DILocation(line: 688, column: 11, scope: !8622)
!8644 = !DILocation(line: 271, column: 3, scope: !8634, inlinedAt: !8645)
!8645 = distinct !DILocation(line: 689, column: 2, scope: !8622)
!8646 = !DILocation(line: 260, column: 3, scope: !8638, inlinedAt: !8647)
!8647 = distinct !DILocation(line: 690, column: 2, scope: !8622)
!8648 = !DILocation(line: 693, column: 45, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8622, file: !8057, line: 693, column: 6)
!8650 = !DILocation(line: 699, column: 1, scope: !8622)
!8651 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8057, file: !8057, line: 1107, type: !266, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2781, retainedNodes: !397)
!8652 = !DILocation(line: 1111, column: 11, scope: !8651)
!8653 = !DILocation(line: 1136, column: 1, scope: !8651)
!8654 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8655, file: !8655, line: 26, type: !266, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2852, retainedNodes: !8656)
!8655 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8656 = !{!8657}
!8657 = !DILocalVariable(name: "irq", scope: !8654, file: !8655, line: 28, type: !105)
!8658 = !DILocation(line: 0, scope: !8654)
!8659 = !DILocation(line: 30, column: 2, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8654, file: !8655, line: 30, column: 2)
!8661 = !DILocation(line: 31, column: 3, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8663, file: !8655, line: 30, column: 39)
!8663 = distinct !DILexicalBlock(scope: !8660, file: !8655, line: 30, column: 2)
!8664 = !DILocation(line: 30, column: 35, scope: !8663)
!8665 = !DILocation(line: 30, column: 13, scope: !8663)
!8666 = distinct !{!8666, !8659, !8667}
!8667 = !DILocation(line: 32, column: 2, scope: !8660)
!8668 = !DILocation(line: 33, column: 1, scope: !8654)
!8669 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !679, file: !679, line: 1814, type: !7791, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2852, retainedNodes: !8670)
!8670 = !{!8671, !8672}
!8671 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8669, file: !679, line: 1814, type: !912)
!8672 = !DILocalVariable(name: "priority", arg: 2, scope: !8669, file: !679, line: 1814, type: !113)
!8673 = !DILocation(line: 0, scope: !8669)
!8674 = !DILocation(line: 1816, column: 7, scope: !8669)
!8675 = !DILocation(line: 0, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8669, file: !679, line: 1816, column: 7)
!8677 = !DILocation(line: 1824, column: 1, scope: !8669)
!8678 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8679, file: !8679, line: 27, type: !8680, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !8785)
!8679 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8680 = !DISubroutineType(types: !8681)
!8681 = !{null, !8682}
!8682 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !8683)
!8683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8684, size: 32)
!8684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !8685)
!8685 = !{!8686, !8744, !8756, !8757, !8758, !8759, !8765, !8780}
!8686 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8684, file: !127, line: 247, baseType: !8687, size: 384)
!8687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !8688)
!8688 = !{!8689, !8713, !8720, !8721, !8722, !8731, !8732, !8733}
!8689 = !DIDerivedType(tag: DW_TAG_member, scope: !8687, file: !127, line: 60, baseType: !8690, size: 64)
!8690 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8687, file: !127, line: 60, size: 64, elements: !8691)
!8691 = !{!8692, !8707}
!8692 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8690, file: !127, line: 61, baseType: !8693, size: 64)
!8693 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !8694)
!8694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !8695)
!8695 = !{!8696, !8702}
!8696 = !DIDerivedType(tag: DW_TAG_member, scope: !8694, file: !137, line: 38, baseType: !8697, size: 32)
!8697 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8694, file: !137, line: 38, size: 32, elements: !8698)
!8698 = !{!8699, !8701}
!8699 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8697, file: !137, line: 39, baseType: !8700, size: 32)
!8700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8694, size: 32)
!8701 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8697, file: !137, line: 40, baseType: !8700, size: 32)
!8702 = !DIDerivedType(tag: DW_TAG_member, scope: !8694, file: !137, line: 42, baseType: !8703, size: 32, offset: 32)
!8703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8694, file: !137, line: 42, size: 32, elements: !8704)
!8704 = !{!8705, !8706}
!8705 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8703, file: !137, line: 43, baseType: !8700, size: 32)
!8706 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8703, file: !137, line: 44, baseType: !8700, size: 32)
!8707 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8690, file: !127, line: 62, baseType: !8708, size: 64)
!8708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !8709)
!8709 = !{!8710}
!8710 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8708, file: !153, line: 50, baseType: !8711, size: 64)
!8711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8712, size: 64, elements: !158)
!8712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8708, size: 32)
!8713 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8687, file: !127, line: 68, baseType: !8714, size: 32, offset: 64)
!8714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8715, size: 32)
!8715 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !8716)
!8716 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !8717)
!8717 = !{!8718}
!8718 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8716, file: !163, line: 232, baseType: !8719, size: 64)
!8719 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !8694)
!8720 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8687, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!8721 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8687, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!8722 = !DIDerivedType(tag: DW_TAG_member, scope: !8687, file: !127, line: 90, baseType: !8723, size: 16, offset: 112)
!8723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8687, file: !127, line: 90, size: 16, elements: !8724)
!8724 = !{!8725, !8730}
!8725 = !DIDerivedType(tag: DW_TAG_member, scope: !8723, file: !127, line: 91, baseType: !8726, size: 16)
!8726 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8723, file: !127, line: 91, size: 16, elements: !8727)
!8727 = !{!8728, !8729}
!8728 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8726, file: !127, line: 96, baseType: !179, size: 8)
!8729 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8726, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!8730 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8723, file: !127, line: 100, baseType: !183, size: 16)
!8731 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8687, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!8732 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8687, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!8733 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8687, file: !127, line: 131, baseType: !8734, size: 192, offset: 192)
!8734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !8735)
!8735 = !{!8736, !8737, !8743}
!8736 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8734, file: !163, line: 245, baseType: !8693, size: 64)
!8737 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8734, file: !163, line: 246, baseType: !8738, size: 32, offset: 64)
!8738 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !8739)
!8739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8740, size: 32)
!8740 = !DISubroutineType(types: !8741)
!8741 = !{null, !8742}
!8742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8734, size: 32)
!8743 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8734, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!8744 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8684, file: !127, line: 250, baseType: !8745, size: 288, offset: 384)
!8745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !8746)
!8746 = !{!8747, !8748, !8749, !8750, !8751, !8752, !8753, !8754, !8755}
!8747 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8745, file: !200, line: 26, baseType: !113, size: 32)
!8748 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8745, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!8749 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8745, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!8750 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8745, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!8751 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8745, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!8752 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8745, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!8753 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8745, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!8754 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8745, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!8755 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8745, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!8756 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8684, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!8757 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8684, file: !127, line: 256, baseType: !8715, size: 64, offset: 704)
!8758 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8684, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!8759 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8684, file: !127, line: 300, baseType: !8760, size: 96, offset: 800)
!8760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !8761)
!8761 = !{!8762, !8763, !8764}
!8762 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8760, file: !127, line: 153, baseType: !22, size: 32)
!8763 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8760, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!8764 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8760, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!8765 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8684, file: !127, line: 325, baseType: !8766, size: 32, offset: 896)
!8766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8767, size: 32)
!8767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !8768)
!8768 = !{!8769, !8775, !8776}
!8769 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8767, file: !122, line: 5074, baseType: !8770, size: 96)
!8770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !8771)
!8771 = !{!8772, !8773, !8774}
!8772 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8770, file: !226, line: 57, baseType: !229, size: 32)
!8773 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8770, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!8774 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8770, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!8775 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8767, file: !122, line: 5075, baseType: !8715, size: 64, offset: 96)
!8776 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8767, file: !122, line: 5076, baseType: !8777, size: 32, offset: 160)
!8777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !8778)
!8778 = !{!8779}
!8779 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8777, file: !236, line: 52, baseType: !22, size: 32)
!8780 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8684, file: !127, line: 343, baseType: !8781, size: 64, offset: 928)
!8781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !8782)
!8782 = !{!8783, !8784}
!8783 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8781, file: !200, line: 63, baseType: !113, size: 32)
!8784 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8781, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!8785 = !{!8786}
!8786 = !DILocalVariable(name: "thread", arg: 1, scope: !8678, file: !8679, line: 27, type: !8682)
!8787 = !DILocation(line: 0, scope: !8678)
!8788 = !DILocation(line: 29, column: 6, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8678, file: !8679, line: 29, column: 6)
!8790 = !DILocation(line: 29, column: 15, scope: !8789)
!8791 = !DILocation(line: 29, column: 6, scope: !8678)
!8792 = !DILocation(line: 1031, column: 3, scope: !8793, inlinedAt: !8796)
!8793 = distinct !DISubprogram(name: "__get_IPSR", scope: !7751, file: !7751, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !8794)
!8794 = !{!8795}
!8795 = !DILocalVariable(name: "result", scope: !8793, file: !7751, line: 1029, type: !113)
!8796 = distinct !DILocation(line: 48, column: 10, scope: !8797, inlinedAt: !8801)
!8797 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8798, file: !8798, line: 46, type: !8799, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2897, retainedNodes: !397)
!8798 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8799 = !DISubroutineType(types: !8800)
!8800 = !{!492}
!8801 = distinct !DILocation(line: 30, column: 7, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8803, file: !8679, line: 30, column: 7)
!8803 = distinct !DILexicalBlock(scope: !8789, file: !8679, line: 29, column: 26)
!8804 = !{i64 2828061}
!8805 = !DILocation(line: 0, scope: !8793, inlinedAt: !8796)
!8806 = !DILocation(line: 48, column: 9, scope: !8797, inlinedAt: !8801)
!8807 = !DILocation(line: 30, column: 7, scope: !8803)
!8808 = !DILocation(line: 42, column: 14, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8802, file: !8679, line: 30, column: 25)
!8810 = !DILocation(line: 48, column: 15, scope: !8809)
!8811 = !DILocation(line: 49, column: 3, scope: !8809)
!8812 = !DILocation(line: 52, column: 2, scope: !8678)
!8813 = !DILocation(line: 53, column: 1, scope: !8678)
!8814 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !539, file: !539, line: 127, type: !266, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !532, retainedNodes: !397)
!8815 = !DILocation(line: 134, column: 2, scope: !8814)
!8816 = !DILocation(line: 156, column: 1, scope: !8814)
!8817 = !DILocation(line: 0, scope: !538)
!8818 = !DILocation(line: 289, column: 36, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !538, file: !539, line: 285, column: 2)
!8820 = !DILocation(line: 289, column: 42, scope: !8819)
!8821 = !DILocation(line: 300, column: 36, scope: !538)
!8822 = !DILocation(line: 301, column: 35, scope: !538)
!8823 = !DILocation(line: 302, column: 37, scope: !538)
!8824 = !DILocation(line: 311, column: 2, scope: !538)
!8825 = !DILocation(line: 316, column: 1, scope: !538)
!8826 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !707, file: !707, line: 180, type: !266, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8827 = !DILocation(line: 188, column: 12, scope: !8826)
!8828 = !DILocation(line: 271, column: 3, scope: !8829, inlinedAt: !8830)
!8829 = distinct !DISubprogram(name: "__DSB", scope: !7751, file: !7751, line: 269, type: !266, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8830 = distinct !DILocation(line: 192, column: 2, scope: !8826)
!8831 = !{i64 2991196}
!8832 = !DILocation(line: 260, column: 3, scope: !8833, inlinedAt: !8834)
!8833 = distinct !DISubprogram(name: "__ISB", scope: !7751, file: !7751, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8834 = distinct !DILocation(line: 193, column: 2, scope: !8826)
!8835 = !{i64 2990913}
!8836 = !DILocation(line: 194, column: 1, scope: !8826)
!8837 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !707, file: !707, line: 199, type: !266, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8838 = !DILocation(line: 282, column: 3, scope: !8839, inlinedAt: !8840)
!8839 = distinct !DISubprogram(name: "__DMB", scope: !7751, file: !7751, line: 280, type: !266, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !397)
!8840 = distinct !DILocation(line: 202, column: 2, scope: !8837)
!8841 = !{i64 2991472}
!8842 = !DILocation(line: 205, column: 12, scope: !8837)
!8843 = !DILocation(line: 206, column: 1, scope: !8837)
!8844 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !707, file: !707, line: 275, type: !8845, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8858)
!8845 = !DISubroutineType(types: !8846)
!8846 = !{null, !8847, !1927, !3720, !3720}
!8847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8848, size: 32)
!8848 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8849)
!8849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !651, line: 52, size: 96, elements: !8850)
!8850 = !{!8851, !8852, !8853}
!8851 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8849, file: !651, line: 53, baseType: !22, size: 32)
!8852 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8849, file: !651, line: 54, baseType: !111, size: 32, offset: 32)
!8853 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8849, file: !651, line: 55, baseType: !8854, size: 32, offset: 64)
!8854 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !657, line: 151, baseType: !8855)
!8855 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !657, line: 149, size: 32, elements: !8856)
!8856 = !{!8857}
!8857 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8855, file: !657, line: 150, baseType: !113, size: 32)
!8858 = !{!8859, !8860, !8861, !8862}
!8859 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8844, file: !707, line: 276, type: !8847)
!8860 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8844, file: !707, line: 276, type: !1927)
!8861 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8844, file: !707, line: 277, type: !3720)
!8862 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8844, file: !707, line: 277, type: !3720)
!8863 = !DILocation(line: 0, scope: !8844)
!8864 = !DILocation(line: 279, column: 6, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8844, file: !707, line: 279, column: 6)
!8866 = !DILocation(line: 280, column: 57, scope: !8865)
!8867 = !DILocation(line: 279, column: 6, scope: !8844)
!8868 = !DILocation(line: 282, column: 3, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8870, file: !707, line: 282, column: 3)
!8870 = distinct !DILexicalBlock(scope: !8871, file: !707, line: 282, column: 3)
!8871 = distinct !DILexicalBlock(scope: !8872, file: !707, line: 282, column: 3)
!8872 = distinct !DILexicalBlock(scope: !8865, file: !707, line: 280, column: 69)
!8873 = !DILocation(line: 285, column: 1, scope: !8844)
!8874 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8875, file: !8875, line: 220, type: !8876, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8878)
!8875 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8876 = !DISubroutineType(types: !8877)
!8877 = !{!105, !8847, !1927, !3720, !3720}
!8878 = !{!8879, !8880, !8881, !8882, !8883}
!8879 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8874, file: !8875, line: 221, type: !8847)
!8880 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8874, file: !8875, line: 221, type: !1927)
!8881 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8874, file: !8875, line: 222, type: !3720)
!8882 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8874, file: !8875, line: 223, type: !3720)
!8883 = !DILocalVariable(name: "mpu_reg_index", scope: !8874, file: !8875, line: 225, type: !105)
!8884 = !DILocation(line: 0, scope: !8874)
!8885 = !DILocation(line: 225, column: 22, scope: !8874)
!8886 = !DILocation(line: 233, column: 18, scope: !8874)
!8887 = !DILocation(line: 236, column: 23, scope: !8874)
!8888 = !DILocation(line: 236, column: 21, scope: !8874)
!8889 = !DILocation(line: 238, column: 2, scope: !8874)
!8890 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !707, file: !707, line: 105, type: !8891, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8893)
!8891 = !DISubroutineType(types: !8892)
!8892 = !{!105, !8847, !169, !169, !492}
!8893 = !{!8894, !8895, !8896, !8897, !8898, !8899}
!8894 = !DILocalVariable(name: "regions", arg: 1, scope: !8890, file: !707, line: 106, type: !8847)
!8895 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8890, file: !707, line: 106, type: !169)
!8896 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8890, file: !707, line: 106, type: !169)
!8897 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8890, file: !707, line: 107, type: !492)
!8898 = !DILocalVariable(name: "i", scope: !8890, file: !707, line: 109, type: !105)
!8899 = !DILocalVariable(name: "reg_index", scope: !8890, file: !707, line: 110, type: !105)
!8900 = !DILocation(line: 0, scope: !8890)
!8901 = !DILocation(line: 110, column: 18, scope: !8890)
!8902 = !DILocation(line: 112, column: 16, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8904, file: !707, line: 112, column: 2)
!8904 = distinct !DILexicalBlock(scope: !8890, file: !707, line: 112, column: 2)
!8905 = !DILocation(line: 112, column: 2, scope: !8904)
!8906 = !DILocation(line: 113, column: 7, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8908, file: !707, line: 113, column: 7)
!8908 = distinct !DILexicalBlock(scope: !8903, file: !707, line: 112, column: 36)
!8909 = !DILocation(line: 113, column: 18, scope: !8907)
!8910 = !DILocation(line: 113, column: 23, scope: !8907)
!8911 = !DILocation(line: 113, column: 7, scope: !8908)
!8912 = !DILocation(line: 118, column: 23, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8908, file: !707, line: 118, column: 7)
!8914 = !DILocation(line: 119, column: 7, scope: !8913)
!8915 = !DILocation(line: 118, column: 7, scope: !8908)
!8916 = !DILocation(line: 120, column: 4, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8918, file: !707, line: 120, column: 4)
!8918 = distinct !DILexicalBlock(scope: !8919, file: !707, line: 120, column: 4)
!8919 = distinct !DILexicalBlock(scope: !8920, file: !707, line: 120, column: 4)
!8920 = distinct !DILexicalBlock(scope: !8921, file: !707, line: 120, column: 4)
!8921 = distinct !DILexicalBlock(scope: !8913, file: !707, line: 119, column: 45)
!8922 = !DILocation(line: 121, column: 4, scope: !8921)
!8923 = !DILocation(line: 124, column: 36, scope: !8908)
!8924 = !DILocation(line: 124, column: 15, scope: !8908)
!8925 = !DILocation(line: 126, column: 17, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8908, file: !707, line: 126, column: 7)
!8927 = !DILocation(line: 126, column: 7, scope: !8908)
!8928 = !DILocation(line: 131, column: 12, scope: !8908)
!8929 = !DILocation(line: 132, column: 2, scope: !8908)
!8930 = !DILocation(line: 112, column: 32, scope: !8903)
!8931 = distinct !{!8931, !8905, !8932}
!8932 = !DILocation(line: 132, column: 2, scope: !8904)
!8933 = !DILocation(line: 135, column: 1, scope: !8890)
!8934 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8875, file: !8875, line: 63, type: !8935, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8937)
!8935 = !DISubroutineType(types: !8936)
!8936 = !{!105, !8847}
!8937 = !{!8938, !8939}
!8938 = !DILocalVariable(name: "part", arg: 1, scope: !8934, file: !8875, line: 63, type: !8847)
!8939 = !DILocalVariable(name: "partition_is_valid", scope: !8934, file: !8875, line: 70, type: !105)
!8940 = !DILocation(line: 0, scope: !8934)
!8941 = !DILocation(line: 71, column: 11, scope: !8934)
!8942 = !DILocation(line: 71, column: 37, scope: !8934)
!8943 = !DILocation(line: 72, column: 3, scope: !8934)
!8944 = !DILocation(line: 71, column: 30, scope: !8934)
!8945 = !DILocation(line: 75, column: 11, scope: !8934)
!8946 = !DILocation(line: 75, column: 17, scope: !8934)
!8947 = !DILocation(line: 75, column: 38, scope: !8934)
!8948 = !DILocation(line: 77, column: 2, scope: !8934)
!8949 = distinct !DISubprogram(name: "mpu_configure_region", scope: !707, file: !707, line: 79, type: !8950, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8952)
!8950 = !DISubroutineType(types: !8951)
!8951 = !{!105, !1927, !8847}
!8952 = !{!8953, !8954, !8955}
!8953 = !DILocalVariable(name: "index", arg: 1, scope: !8949, file: !707, line: 79, type: !1927)
!8954 = !DILocalVariable(name: "new_region", arg: 2, scope: !8949, file: !707, line: 80, type: !8847)
!8955 = !DILocalVariable(name: "region_conf", scope: !8949, file: !707, line: 82, type: !696)
!8956 = !DILocation(line: 0, scope: !8949)
!8957 = !DILocation(line: 82, column: 2, scope: !8949)
!8958 = !DILocation(line: 82, column: 24, scope: !8949)
!8959 = !DILocation(line: 87, column: 33, scope: !8949)
!8960 = !DILocation(line: 87, column: 14, scope: !8949)
!8961 = !DILocation(line: 87, column: 19, scope: !8949)
!8962 = !DILocation(line: 91, column: 55, scope: !8949)
!8963 = !DILocation(line: 92, column: 16, scope: !8949)
!8964 = !DILocation(line: 92, column: 53, scope: !8949)
!8965 = !DILocation(line: 91, column: 2, scope: !8949)
!8966 = !DILocation(line: 95, column: 9, scope: !8949)
!8967 = !DILocation(line: 97, column: 1, scope: !8949)
!8968 = !DILocation(line: 95, column: 2, scope: !8949)
!8969 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8875, file: !8875, line: 113, type: !8970, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8975)
!8970 = !DISubroutineType(types: !8971)
!8971 = !{null, !8972, !8973, !113, !113}
!8972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 32)
!8973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8974, size: 32)
!8974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8854)
!8975 = !{!8976, !8977, !8978, !8979}
!8976 = !DILocalVariable(name: "p_attr", arg: 1, scope: !8969, file: !8875, line: 114, type: !8972)
!8977 = !DILocalVariable(name: "attr", arg: 2, scope: !8969, file: !8875, line: 115, type: !8973)
!8978 = !DILocalVariable(name: "base", arg: 3, scope: !8969, file: !8875, line: 115, type: !113)
!8979 = !DILocalVariable(name: "size", arg: 4, scope: !8969, file: !8875, line: 115, type: !113)
!8980 = !DILocation(line: 0, scope: !8969)
!8981 = !DILocation(line: 127, column: 23, scope: !8969)
!8982 = !DILocation(line: 127, column: 35, scope: !8969)
!8983 = !DILocation(line: 127, column: 33, scope: !8969)
!8984 = !DILocation(line: 127, column: 10, scope: !8969)
!8985 = !DILocation(line: 127, column: 15, scope: !8969)
!8986 = !DILocation(line: 129, column: 1, scope: !8969)
!8987 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !707, file: !707, line: 57, type: !8988, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !8990)
!8988 = !DISubroutineType(types: !8989)
!8989 = !{!105, !1927, !694}
!8990 = !{!8991, !8992}
!8991 = !DILocalVariable(name: "index", arg: 1, scope: !8987, file: !707, line: 57, type: !1927)
!8992 = !DILocalVariable(name: "region_conf", arg: 2, scope: !8987, file: !707, line: 58, type: !694)
!8993 = !DILocation(line: 0, scope: !8987)
!8994 = !DILocation(line: 61, column: 6, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8987, file: !707, line: 61, column: 6)
!8996 = !DILocation(line: 61, column: 12, scope: !8995)
!8997 = !DILocation(line: 61, column: 6, scope: !8987)
!8998 = !DILocation(line: 64, column: 3, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !9000, file: !707, line: 64, column: 3)
!9000 = distinct !DILexicalBlock(scope: !9001, file: !707, line: 64, column: 3)
!9001 = distinct !DILexicalBlock(scope: !9002, file: !707, line: 64, column: 3)
!9002 = distinct !DILexicalBlock(scope: !9003, file: !707, line: 64, column: 3)
!9003 = distinct !DILexicalBlock(scope: !8995, file: !707, line: 61, column: 40)
!9004 = !DILocation(line: 65, column: 3, scope: !9003)
!9005 = !DILocation(line: 71, column: 2, scope: !8987)
!9006 = !DILocation(line: 73, column: 2, scope: !8987)
!9007 = !DILocation(line: 74, column: 1, scope: !8987)
!9008 = distinct !DISubprogram(name: "region_init", scope: !8875, file: !8875, line: 29, type: !9009, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9011)
!9009 = !DISubroutineType(types: !9010)
!9010 = !{null, !3720, !694}
!9011 = !{!9012, !9013}
!9012 = !DILocalVariable(name: "index", arg: 1, scope: !9008, file: !8875, line: 29, type: !3720)
!9013 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9008, file: !8875, line: 30, type: !694)
!9014 = !DILocation(line: 0, scope: !9008)
!9015 = !DILocation(line: 33, column: 2, scope: !9008)
!9016 = !DILocation(line: 47, column: 28, scope: !9008)
!9017 = !DILocation(line: 47, column: 33, scope: !9008)
!9018 = !DILocation(line: 48, column: 26, scope: !9008)
!9019 = !DILocation(line: 47, column: 12, scope: !9008)
!9020 = !DILocation(line: 49, column: 32, scope: !9008)
!9021 = !DILocation(line: 49, column: 37, scope: !9008)
!9022 = !DILocation(line: 49, column: 12, scope: !9008)
!9023 = !DILocation(line: 53, column: 1, scope: !9008)
!9024 = distinct !DISubprogram(name: "set_region_number", scope: !9025, file: !9025, line: 32, type: !7846, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9026)
!9025 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9026 = !{!9027}
!9027 = !DILocalVariable(name: "index", arg: 1, scope: !9024, file: !9025, line: 32, type: !113)
!9028 = !DILocation(line: 0, scope: !9024)
!9029 = !DILocation(line: 34, column: 11, scope: !9024)
!9030 = !DILocation(line: 35, column: 1, scope: !9024)
!9031 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8875, file: !8875, line: 88, type: !9032, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9034)
!9032 = !DISubroutineType(types: !9033)
!9033 = !{!113, !113}
!9034 = !{!9035}
!9035 = !DILocalVariable(name: "size", arg: 1, scope: !9031, file: !8875, line: 88, type: !113)
!9036 = !DILocation(line: 0, scope: !9031)
!9037 = !DILocation(line: 91, column: 11, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9031, file: !8875, line: 91, column: 6)
!9039 = !DILocation(line: 91, column: 6, scope: !9031)
!9040 = !DILocation(line: 100, column: 11, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9031, file: !8875, line: 100, column: 6)
!9042 = !DILocation(line: 100, column: 6, scope: !9031)
!9043 = !DILocation(line: 104, column: 35, scope: !9031)
!9044 = !DILocation(line: 104, column: 16, scope: !9031)
!9045 = !DILocation(line: 104, column: 50, scope: !9031)
!9046 = !DILocation(line: 104, column: 72, scope: !9031)
!9047 = !DILocation(line: 104, column: 2, scope: !9031)
!9048 = !DILocation(line: 106, column: 1, scope: !9031)
!9049 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !707, file: !707, line: 307, type: !9050, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9052)
!9050 = !DISubroutineType(types: !9051)
!9051 = !{null, !8847, !169}
!9052 = !{!9053, !9054}
!9053 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9049, file: !707, line: 308, type: !8847)
!9054 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9049, file: !707, line: 308, type: !169)
!9055 = !DILocation(line: 0, scope: !9049)
!9056 = !DILocation(line: 310, column: 6, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9049, file: !707, line: 310, column: 6)
!9058 = !DILocation(line: 311, column: 3, scope: !9057)
!9059 = !DILocation(line: 310, column: 6, scope: !9049)
!9060 = !DILocation(line: 313, column: 3, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9062, file: !707, line: 313, column: 3)
!9062 = distinct !DILexicalBlock(scope: !9063, file: !707, line: 313, column: 3)
!9063 = distinct !DILexicalBlock(scope: !9064, file: !707, line: 313, column: 3)
!9064 = distinct !DILexicalBlock(scope: !9057, file: !707, line: 311, column: 15)
!9065 = !DILocation(line: 316, column: 1, scope: !9049)
!9066 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8875, file: !8875, line: 249, type: !9067, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9069)
!9067 = !DISubroutineType(types: !9068)
!9068 = !{!105, !8847, !169}
!9069 = !{!9070, !9071, !9072, !9073}
!9070 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9066, file: !8875, line: 250, type: !8847)
!9071 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9066, file: !8875, line: 250, type: !169)
!9072 = !DILocalVariable(name: "mpu_reg_index", scope: !9066, file: !8875, line: 252, type: !105)
!9073 = !DILocalVariable(name: "i", scope: !9074, file: !8875, line: 264, type: !105)
!9074 = distinct !DILexicalBlock(scope: !9075, file: !8875, line: 264, column: 3)
!9075 = distinct !DILexicalBlock(scope: !9076, file: !8875, line: 261, column: 32)
!9076 = distinct !DILexicalBlock(scope: !9066, file: !8875, line: 261, column: 6)
!9077 = !DILocation(line: 0, scope: !9066)
!9078 = !DILocation(line: 252, column: 22, scope: !9066)
!9079 = !DILocation(line: 258, column: 18, scope: !9066)
!9080 = !DILocation(line: 261, column: 20, scope: !9076)
!9081 = !DILocation(line: 261, column: 6, scope: !9066)
!9082 = !DILocation(line: 0, scope: !9074)
!9083 = !DILocation(line: 265, column: 4, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9085, file: !8875, line: 264, column: 59)
!9085 = distinct !DILexicalBlock(scope: !9074, file: !8875, line: 264, column: 3)
!9086 = !DILocation(line: 264, column: 55, scope: !9085)
!9087 = !DILocation(line: 264, column: 33, scope: !9085)
!9088 = !DILocation(line: 264, column: 3, scope: !9074)
!9089 = distinct !{!9089, !9088, !9090}
!9090 = !DILocation(line: 266, column: 3, scope: !9074)
!9091 = !DILocation(line: 269, column: 2, scope: !9066)
!9092 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !9093, file: !9093, line: 218, type: !7846, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9094)
!9093 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9094 = !{!9095}
!9095 = !DILocalVariable(name: "rnr", arg: 1, scope: !9092, file: !9093, line: 218, type: !113)
!9096 = !DILocation(line: 0, scope: !9092)
!9097 = !DILocation(line: 220, column: 12, scope: !9092)
!9098 = !DILocation(line: 221, column: 13, scope: !9092)
!9099 = !DILocation(line: 222, column: 1, scope: !9092)
!9100 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !707, file: !707, line: 326, type: !9101, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !674, retainedNodes: !9103)
!9101 = !DISubroutineType(types: !9102)
!9102 = !{!105}
!9103 = !{!9104}
!9104 = !DILocalVariable(name: "r_index", scope: !9100, file: !707, line: 328, type: !113)
!9105 = !DILocation(line: 330, column: 17, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9100, file: !707, line: 330, column: 6)
!9107 = !DILocation(line: 330, column: 29, scope: !9106)
!9108 = !DILocation(line: 330, column: 6, scope: !9100)
!9109 = !DILocation(line: 337, column: 3, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9111, file: !707, line: 337, column: 3)
!9111 = distinct !DILexicalBlock(scope: !9112, file: !707, line: 337, column: 3)
!9112 = distinct !DILexicalBlock(scope: !9113, file: !707, line: 337, column: 3)
!9113 = distinct !DILexicalBlock(scope: !9106, file: !707, line: 330, column: 50)
!9114 = !DILocation(line: 347, column: 2, scope: !9100)
!9115 = !DILocation(line: 0, scope: !9100)
!9116 = !DILocation(line: 364, column: 29, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9118, file: !707, line: 364, column: 2)
!9118 = distinct !DILexicalBlock(scope: !9100, file: !707, line: 364, column: 2)
!9119 = !DILocation(line: 364, column: 2, scope: !9118)
!9120 = !DILocation(line: 365, column: 25, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9117, file: !707, line: 364, column: 66)
!9122 = !DILocation(line: 365, column: 3, scope: !9121)
!9123 = !DILocation(line: 364, column: 62, scope: !9117)
!9124 = distinct !{!9124, !9119, !9125}
!9125 = !DILocation(line: 366, column: 2, scope: !9118)
!9126 = !DILocation(line: 369, column: 23, scope: !9100)
!9127 = !DILocation(line: 369, column: 21, scope: !9100)
!9128 = !DILocation(line: 372, column: 2, scope: !9100)
!9129 = !DILocation(line: 433, column: 2, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9131, file: !707, line: 433, column: 2)
!9131 = distinct !DILexicalBlock(scope: !9100, file: !707, line: 433, column: 2)
!9132 = !DILocation(line: 433, column: 2, scope: !9131)
!9133 = !DILocation(line: 433, column: 2, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9130, file: !707, line: 433, column: 2)
!9135 = !DILocation(line: 444, column: 1, scope: !9100)
!9136 = distinct !DISubprogram(name: "strcpy", scope: !9137, file: !9137, line: 20, type: !9138, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !9142)
!9137 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9138 = !DISubroutineType(types: !9139)
!9139 = !{!102, !9140, !9141}
!9140 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!9141 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !269)
!9142 = !{!9143, !9144, !9145}
!9143 = !DILocalVariable(name: "d", arg: 1, scope: !9136, file: !9137, line: 20, type: !9140)
!9144 = !DILocalVariable(name: "s", arg: 2, scope: !9136, file: !9137, line: 20, type: !9141)
!9145 = !DILocalVariable(name: "dest", scope: !9136, file: !9137, line: 22, type: !102)
!9146 = !DILocation(line: 0, scope: !9136)
!9147 = !DILocation(line: 24, column: 9, scope: !9136)
!9148 = !DILocation(line: 24, column: 12, scope: !9136)
!9149 = !DILocation(line: 24, column: 2, scope: !9136)
!9150 = !DILocation(line: 25, column: 6, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9136, file: !9137, line: 24, column: 21)
!9152 = !DILocation(line: 26, column: 4, scope: !9151)
!9153 = !DILocation(line: 27, column: 4, scope: !9151)
!9154 = distinct !{!9154, !9149, !9155}
!9155 = !DILocation(line: 28, column: 2, scope: !9136)
!9156 = !DILocation(line: 30, column: 5, scope: !9136)
!9157 = !DILocation(line: 32, column: 2, scope: !9136)
!9158 = distinct !DISubprogram(name: "strncpy", scope: !9137, file: !9137, line: 42, type: !9159, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !9161)
!9159 = !DISubroutineType(types: !9160)
!9160 = !{!102, !9140, !9141, !111}
!9161 = !{!9162, !9163, !9164, !9165}
!9162 = !DILocalVariable(name: "d", arg: 1, scope: !9158, file: !9137, line: 42, type: !9140)
!9163 = !DILocalVariable(name: "s", arg: 2, scope: !9158, file: !9137, line: 42, type: !9141)
!9164 = !DILocalVariable(name: "n", arg: 3, scope: !9158, file: !9137, line: 42, type: !111)
!9165 = !DILocalVariable(name: "dest", scope: !9158, file: !9137, line: 44, type: !102)
!9166 = !DILocation(line: 0, scope: !9158)
!9167 = !DILocation(line: 46, column: 12, scope: !9158)
!9168 = !DILocation(line: 46, column: 17, scope: !9158)
!9169 = !DILocation(line: 46, column: 20, scope: !9158)
!9170 = !DILocation(line: 46, column: 23, scope: !9158)
!9171 = !DILocation(line: 46, column: 2, scope: !9158)
!9172 = !DILocation(line: 47, column: 6, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9158, file: !9137, line: 46, column: 32)
!9174 = !DILocation(line: 48, column: 4, scope: !9173)
!9175 = !DILocation(line: 49, column: 4, scope: !9173)
!9176 = !DILocation(line: 50, column: 4, scope: !9173)
!9177 = distinct !{!9177, !9171, !9178}
!9178 = !DILocation(line: 51, column: 2, scope: !9158)
!9179 = !DILocation(line: 54, column: 6, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9158, file: !9137, line: 53, column: 16)
!9181 = !DILocation(line: 55, column: 4, scope: !9180)
!9182 = !DILocation(line: 56, column: 4, scope: !9180)
!9183 = !DILocation(line: 53, column: 11, scope: !9158)
!9184 = !DILocation(line: 53, column: 2, scope: !9158)
!9185 = distinct !{!9185, !9184, !9186}
!9186 = !DILocation(line: 57, column: 2, scope: !9158)
!9187 = !DILocation(line: 59, column: 2, scope: !9158)
!9188 = distinct !DISubprogram(name: "strchr", scope: !9137, file: !9137, line: 69, type: !9189, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !9191)
!9189 = !DISubroutineType(types: !9190)
!9190 = !{!102, !269, !105}
!9191 = !{!9192, !9193, !9194}
!9192 = !DILocalVariable(name: "s", arg: 1, scope: !9188, file: !9137, line: 69, type: !269)
!9193 = !DILocalVariable(name: "c", arg: 2, scope: !9188, file: !9137, line: 69, type: !105)
!9194 = !DILocalVariable(name: "tmp", scope: !9188, file: !9137, line: 71, type: !103)
!9195 = !DILocation(line: 0, scope: !9188)
!9196 = !DILocation(line: 73, column: 2, scope: !9188)
!9197 = !DILocation(line: 73, column: 10, scope: !9188)
!9198 = !DILocation(line: 73, column: 13, scope: !9188)
!9199 = !DILocation(line: 73, column: 21, scope: !9188)
!9200 = !DILocation(line: 74, column: 4, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9188, file: !9137, line: 73, column: 38)
!9202 = distinct !{!9202, !9196, !9203}
!9203 = !DILocation(line: 75, column: 2, scope: !9188)
!9204 = !DILocation(line: 77, column: 9, scope: !9188)
!9205 = !DILocation(line: 77, column: 2, scope: !9188)
!9206 = distinct !DISubprogram(name: "strrchr", scope: !9137, file: !9137, line: 87, type: !9189, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !9207)
!9207 = !{!9208, !9209, !9210}
!9208 = !DILocalVariable(name: "s", arg: 1, scope: !9206, file: !9137, line: 87, type: !269)
!9209 = !DILocalVariable(name: "c", arg: 2, scope: !9206, file: !9137, line: 87, type: !105)
!9210 = !DILocalVariable(name: "match", scope: !9206, file: !9137, line: 89, type: !102)
!9211 = !DILocation(line: 0, scope: !9206)
!9212 = !DILocation(line: 91, column: 2, scope: !9206)
!9213 = !DILocation(line: 92, column: 7, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9215, file: !9137, line: 92, column: 7)
!9215 = distinct !DILexicalBlock(scope: !9206, file: !9137, line: 91, column: 5)
!9216 = !DILocation(line: 92, column: 10, scope: !9214)
!9217 = !DILocation(line: 92, column: 7, scope: !9215)
!9218 = !DILocation(line: 95, column: 13, scope: !9206)
!9219 = !DILocation(line: 95, column: 2, scope: !9215)
!9220 = distinct !{!9220, !9212, !9221}
!9221 = !DILocation(line: 95, column: 15, scope: !9206)
!9222 = !DILocation(line: 97, column: 2, scope: !9206)
!9223 = distinct !DISubprogram(name: "strlen", scope: !9137, file: !9137, line: 107, type: !9224, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !9226)
!9224 = !DISubroutineType(types: !9225)
!9225 = !{!111, !269}
!9226 = !{!9227, !9228}
!9227 = !DILocalVariable(name: "s", arg: 1, scope: !9223, file: !9137, line: 107, type: !269)
!9228 = !DILocalVariable(name: "n", scope: !9223, file: !9137, line: 109, type: !111)
!9229 = !DILocation(line: 0, scope: !9223)
!9230 = !DILocation(line: 111, column: 9, scope: !9223)
!9231 = !DILocation(line: 111, column: 12, scope: !9223)
!9232 = !DILocation(line: 111, column: 2, scope: !9223)
!9233 = !DILocation(line: 112, column: 4, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9223, file: !9137, line: 111, column: 21)
!9235 = !DILocation(line: 113, column: 4, scope: !9234)
!9236 = distinct !{!9236, !9232, !9237}
!9237 = !DILocation(line: 114, column: 2, scope: !9223)
!9238 = !DILocation(line: 116, column: 2, scope: !9223)
!9239 = distinct !DISubprogram(name: "strnlen", scope: !9137, file: !9137, line: 126, type: !9240, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !9242)
!9240 = !DISubroutineType(types: !9241)
!9241 = !{!111, !269, !111}
!9242 = !{!9243, !9244, !9245}
!9243 = !DILocalVariable(name: "s", arg: 1, scope: !9239, file: !9137, line: 126, type: !269)
!9244 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9239, file: !9137, line: 126, type: !111)
!9245 = !DILocalVariable(name: "n", scope: !9239, file: !9137, line: 128, type: !111)
!9246 = !DILocation(line: 0, scope: !9239)
!9247 = !DILocation(line: 130, column: 9, scope: !9239)
!9248 = !DILocation(line: 130, column: 12, scope: !9239)
!9249 = !DILocation(line: 130, column: 20, scope: !9239)
!9250 = !DILocation(line: 130, column: 2, scope: !9239)
!9251 = !DILocation(line: 131, column: 4, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9239, file: !9137, line: 130, column: 35)
!9253 = !DILocation(line: 132, column: 4, scope: !9252)
!9254 = distinct !{!9254, !9250, !9255}
!9255 = !DILocation(line: 133, column: 2, scope: !9239)
!9256 = !DILocation(line: 135, column: 2, scope: !9239)
!9257 = distinct !DISubprogram(name: "strcmp", scope: !9137, file: !9137, line: 145, type: !9258, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !9260)
!9258 = !DISubroutineType(types: !9259)
!9259 = !{!105, !269, !269}
!9260 = !{!9261, !9262}
!9261 = !DILocalVariable(name: "s1", arg: 1, scope: !9257, file: !9137, line: 145, type: !269)
!9262 = !DILocalVariable(name: "s2", arg: 2, scope: !9257, file: !9137, line: 145, type: !269)
!9263 = !DILocation(line: 0, scope: !9257)
!9264 = !DILocation(line: 147, column: 10, scope: !9257)
!9265 = !DILocation(line: 147, column: 17, scope: !9257)
!9266 = !DILocation(line: 147, column: 14, scope: !9257)
!9267 = !DILocation(line: 147, column: 22, scope: !9257)
!9268 = !DILocation(line: 148, column: 5, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9257, file: !9137, line: 147, column: 40)
!9270 = !DILocation(line: 149, column: 5, scope: !9269)
!9271 = distinct !{!9271, !9272, !9273}
!9272 = !DILocation(line: 147, column: 2, scope: !9257)
!9273 = !DILocation(line: 150, column: 2, scope: !9257)
!9274 = !DILocation(line: 152, column: 9, scope: !9257)
!9275 = !DILocation(line: 152, column: 15, scope: !9257)
!9276 = !DILocation(line: 152, column: 13, scope: !9257)
!9277 = !DILocation(line: 152, column: 2, scope: !9257)
!9278 = distinct !DISubprogram(name: "strncmp", scope: !9137, file: !9137, line: 162, type: !9279, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !9281)
!9279 = !DISubroutineType(types: !9280)
!9280 = !{!105, !269, !269, !111}
!9281 = !{!9282, !9283, !9284}
!9282 = !DILocalVariable(name: "s1", arg: 1, scope: !9278, file: !9137, line: 162, type: !269)
!9283 = !DILocalVariable(name: "s2", arg: 2, scope: !9278, file: !9137, line: 162, type: !269)
!9284 = !DILocalVariable(name: "n", arg: 3, scope: !9278, file: !9137, line: 162, type: !111)
!9285 = !DILocation(line: 0, scope: !9278)
!9286 = !DILocation(line: 164, column: 17, scope: !9278)
!9287 = !DILocation(line: 164, column: 21, scope: !9278)
!9288 = !DILocation(line: 164, column: 28, scope: !9278)
!9289 = !DILocation(line: 164, column: 25, scope: !9278)
!9290 = !DILocation(line: 164, column: 33, scope: !9278)
!9291 = !DILocation(line: 165, column: 5, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9278, file: !9137, line: 164, column: 51)
!9293 = !DILocation(line: 166, column: 5, scope: !9292)
!9294 = !DILocation(line: 167, column: 4, scope: !9292)
!9295 = distinct !{!9295, !9296, !9297}
!9296 = !DILocation(line: 164, column: 2, scope: !9278)
!9297 = !DILocation(line: 168, column: 2, scope: !9278)
!9298 = !DILocation(line: 170, column: 25, scope: !9278)
!9299 = !DILocation(line: 170, column: 31, scope: !9278)
!9300 = !DILocation(line: 170, column: 29, scope: !9278)
!9301 = !DILocation(line: 170, column: 9, scope: !9278)
!9302 = !DILocation(line: 170, column: 2, scope: !9278)
!9303 = distinct !DISubprogram(name: "strtok_r", scope: !9137, file: !9137, line: 180, type: !9304, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !9306)
!9304 = !DISubroutineType(types: !9305)
!9305 = !{!102, !102, !269, !431}
!9306 = !{!9307, !9308, !9309, !9310, !9311}
!9307 = !DILocalVariable(name: "str", arg: 1, scope: !9303, file: !9137, line: 180, type: !102)
!9308 = !DILocalVariable(name: "sep", arg: 2, scope: !9303, file: !9137, line: 180, type: !269)
!9309 = !DILocalVariable(name: "state", arg: 3, scope: !9303, file: !9137, line: 180, type: !431)
!9310 = !DILocalVariable(name: "start", scope: !9303, file: !9137, line: 182, type: !102)
!9311 = !DILocalVariable(name: "end", scope: !9303, file: !9137, line: 182, type: !102)
!9312 = !DILocation(line: 0, scope: !9303)
!9313 = !DILocation(line: 184, column: 10, scope: !9303)
!9314 = !DILocation(line: 184, column: 22, scope: !9303)
!9315 = !DILocation(line: 187, column: 9, scope: !9303)
!9316 = !DILocation(line: 187, column: 16, scope: !9303)
!9317 = !DILocation(line: 187, column: 19, scope: !9303)
!9318 = !DILocation(line: 187, column: 2, scope: !9303)
!9319 = !DILocation(line: 188, column: 8, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9303, file: !9137, line: 187, column: 40)
!9321 = distinct !{!9321, !9318, !9322}
!9322 = !DILocation(line: 189, column: 2, scope: !9303)
!9323 = !DILocation(line: 198, column: 9, scope: !9303)
!9324 = !DILocation(line: 198, column: 18, scope: !9303)
!9325 = !DILocation(line: 198, column: 17, scope: !9303)
!9326 = !DILocation(line: 198, column: 2, scope: !9303)
!9327 = !DILocation(line: 199, column: 6, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9303, file: !9137, line: 198, column: 37)
!9329 = !DILocation(line: 198, column: 14, scope: !9303)
!9330 = distinct !{!9330, !9326, !9331}
!9331 = !DILocation(line: 200, column: 2, scope: !9303)
!9332 = !DILocation(line: 203, column: 8, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9334, file: !9137, line: 202, column: 20)
!9334 = distinct !DILexicalBlock(scope: !9303, file: !9137, line: 202, column: 6)
!9335 = !DILocation(line: 204, column: 16, scope: !9333)
!9336 = !DILocation(line: 205, column: 2, scope: !9333)
!9337 = !DILocation(line: 210, column: 1, scope: !9303)
!9338 = distinct !DISubprogram(name: "strcat", scope: !9137, file: !9137, line: 212, type: !9138, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !9339)
!9339 = !{!9340, !9341}
!9340 = !DILocalVariable(name: "dest", arg: 1, scope: !9338, file: !9137, line: 212, type: !9140)
!9341 = !DILocalVariable(name: "src", arg: 2, scope: !9338, file: !9137, line: 212, type: !9141)
!9342 = !DILocation(line: 0, scope: !9338)
!9343 = !DILocation(line: 214, column: 16, scope: !9338)
!9344 = !DILocation(line: 214, column: 14, scope: !9338)
!9345 = !DILocation(line: 214, column: 2, scope: !9338)
!9346 = !DILocation(line: 215, column: 2, scope: !9338)
!9347 = distinct !DISubprogram(name: "strncat", scope: !9137, file: !9137, line: 218, type: !9159, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !9348)
!9348 = !{!9349, !9350, !9351, !9352, !9353}
!9349 = !DILocalVariable(name: "dest", arg: 1, scope: !9347, file: !9137, line: 218, type: !9140)
!9350 = !DILocalVariable(name: "src", arg: 2, scope: !9347, file: !9137, line: 218, type: !9141)
!9351 = !DILocalVariable(name: "n", arg: 3, scope: !9347, file: !9137, line: 219, type: !111)
!9352 = !DILocalVariable(name: "orig_dest", scope: !9347, file: !9137, line: 221, type: !102)
!9353 = !DILocalVariable(name: "len", scope: !9347, file: !9137, line: 222, type: !111)
!9354 = !DILocation(line: 0, scope: !9347)
!9355 = !DILocation(line: 222, column: 15, scope: !9347)
!9356 = !DILocation(line: 224, column: 7, scope: !9347)
!9357 = !DILocation(line: 225, column: 14, scope: !9347)
!9358 = !DILocation(line: 225, column: 19, scope: !9347)
!9359 = !DILocation(line: 225, column: 11, scope: !9347)
!9360 = !DILocation(line: 225, column: 23, scope: !9347)
!9361 = !DILocation(line: 225, column: 28, scope: !9347)
!9362 = !DILocation(line: 225, column: 2, scope: !9347)
!9363 = !DILocation(line: 226, column: 17, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9347, file: !9137, line: 225, column: 38)
!9365 = !DILocation(line: 226, column: 8, scope: !9364)
!9366 = !DILocation(line: 226, column: 11, scope: !9364)
!9367 = distinct !{!9367, !9362, !9368}
!9368 = !DILocation(line: 227, column: 2, scope: !9347)
!9369 = !DILocation(line: 228, column: 8, scope: !9347)
!9370 = !DILocation(line: 230, column: 2, scope: !9347)
!9371 = distinct !DISubprogram(name: "memcmp", scope: !9137, file: !9137, line: 239, type: !9372, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !9374)
!9372 = !DISubroutineType(types: !9373)
!9373 = !{!105, !13, !13, !111}
!9374 = !{!9375, !9376, !9377, !9378, !9379}
!9375 = !DILocalVariable(name: "m1", arg: 1, scope: !9371, file: !9137, line: 239, type: !13)
!9376 = !DILocalVariable(name: "m2", arg: 2, scope: !9371, file: !9137, line: 239, type: !13)
!9377 = !DILocalVariable(name: "n", arg: 3, scope: !9371, file: !9137, line: 239, type: !111)
!9378 = !DILocalVariable(name: "c1", scope: !9371, file: !9137, line: 241, type: !269)
!9379 = !DILocalVariable(name: "c2", scope: !9371, file: !9137, line: 242, type: !269)
!9380 = !DILocation(line: 0, scope: !9371)
!9381 = !DILocation(line: 244, column: 7, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9371, file: !9137, line: 244, column: 6)
!9383 = !DILocation(line: 244, column: 6, scope: !9371)
!9384 = !DILocation(line: 248, column: 10, scope: !9371)
!9385 = !DILocation(line: 248, column: 14, scope: !9371)
!9386 = !DILocation(line: 248, column: 19, scope: !9371)
!9387 = !DILocation(line: 248, column: 2, scope: !9371)
!9388 = !DILocation(line: 248, column: 23, scope: !9371)
!9389 = !DILocation(line: 248, column: 30, scope: !9371)
!9390 = !DILocation(line: 248, column: 27, scope: !9371)
!9391 = !DILocation(line: 249, column: 5, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9371, file: !9137, line: 248, column: 36)
!9393 = !DILocation(line: 250, column: 5, scope: !9392)
!9394 = distinct !{!9394, !9387, !9395}
!9395 = !DILocation(line: 251, column: 2, scope: !9371)
!9396 = !DILocation(line: 253, column: 9, scope: !9371)
!9397 = !DILocation(line: 253, column: 15, scope: !9371)
!9398 = !DILocation(line: 253, column: 13, scope: !9371)
!9399 = !DILocation(line: 253, column: 2, scope: !9371)
!9400 = !DILocation(line: 254, column: 1, scope: !9371)
!9401 = distinct !DISubprogram(name: "memmove", scope: !9137, file: !9137, line: 263, type: !9402, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !9404)
!9402 = !DISubroutineType(types: !9403)
!9403 = !{!104, !104, !13, !111}
!9404 = !{!9405, !9406, !9407, !9408, !9409}
!9405 = !DILocalVariable(name: "d", arg: 1, scope: !9401, file: !9137, line: 263, type: !104)
!9406 = !DILocalVariable(name: "s", arg: 2, scope: !9401, file: !9137, line: 263, type: !13)
!9407 = !DILocalVariable(name: "n", arg: 3, scope: !9401, file: !9137, line: 263, type: !111)
!9408 = !DILocalVariable(name: "dest", scope: !9401, file: !9137, line: 265, type: !102)
!9409 = !DILocalVariable(name: "src", scope: !9401, file: !9137, line: 266, type: !269)
!9410 = !DILocation(line: 0, scope: !9401)
!9411 = !DILocation(line: 268, column: 21, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9401, file: !9137, line: 268, column: 6)
!9413 = !DILocation(line: 268, column: 28, scope: !9412)
!9414 = !DILocation(line: 268, column: 6, scope: !9401)
!9415 = !DILocation(line: 280, column: 12, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9412, file: !9137, line: 278, column: 9)
!9417 = !DILocation(line: 280, column: 3, scope: !9416)
!9418 = !DILocation(line: 275, column: 5, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9420, file: !9137, line: 274, column: 17)
!9420 = distinct !DILexicalBlock(scope: !9412, file: !9137, line: 268, column: 33)
!9421 = !DILocation(line: 276, column: 14, scope: !9419)
!9422 = !DILocation(line: 276, column: 4, scope: !9419)
!9423 = !DILocation(line: 276, column: 12, scope: !9419)
!9424 = !DILocation(line: 274, column: 12, scope: !9420)
!9425 = !DILocation(line: 274, column: 3, scope: !9420)
!9426 = distinct !{!9426, !9425, !9427}
!9427 = !DILocation(line: 277, column: 3, scope: !9420)
!9428 = !DILocation(line: 281, column: 12, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9416, file: !9137, line: 280, column: 17)
!9430 = !DILocation(line: 281, column: 10, scope: !9429)
!9431 = !DILocation(line: 282, column: 8, scope: !9429)
!9432 = !DILocation(line: 283, column: 7, scope: !9429)
!9433 = !DILocation(line: 284, column: 5, scope: !9429)
!9434 = distinct !{!9434, !9417, !9435}
!9435 = !DILocation(line: 285, column: 3, scope: !9416)
!9436 = !DILocation(line: 288, column: 2, scope: !9401)
!9437 = distinct !DISubprogram(name: "memcpy", scope: !9137, file: !9137, line: 298, type: !9438, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !9442)
!9438 = !DISubroutineType(types: !9439)
!9439 = !{!104, !9440, !9441, !111}
!9440 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !104)
!9441 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9442 = !{!9443, !9444, !9445, !9446, !9447}
!9443 = !DILocalVariable(name: "d", arg: 1, scope: !9437, file: !9137, line: 298, type: !9440)
!9444 = !DILocalVariable(name: "s", arg: 2, scope: !9437, file: !9137, line: 298, type: !9441)
!9445 = !DILocalVariable(name: "n", arg: 3, scope: !9437, file: !9137, line: 298, type: !111)
!9446 = !DILocalVariable(name: "d_byte", scope: !9437, file: !9137, line: 302, type: !1112)
!9447 = !DILocalVariable(name: "s_byte", scope: !9437, file: !9137, line: 303, type: !2928)
!9448 = !DILocation(line: 0, scope: !9437)
!9449 = !DILocation(line: 337, column: 11, scope: !9437)
!9450 = !DILocation(line: 337, column: 2, scope: !9437)
!9451 = !DILocation(line: 338, column: 25, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9437, file: !9137, line: 337, column: 16)
!9453 = !DILocation(line: 338, column: 17, scope: !9452)
!9454 = !DILocation(line: 338, column: 11, scope: !9452)
!9455 = !DILocation(line: 338, column: 15, scope: !9452)
!9456 = !DILocation(line: 339, column: 4, scope: !9452)
!9457 = distinct !{!9457, !9450, !9458}
!9458 = !DILocation(line: 340, column: 2, scope: !9437)
!9459 = !DILocation(line: 342, column: 2, scope: !9437)
!9460 = distinct !DISubprogram(name: "memset", scope: !9137, file: !9137, line: 352, type: !9461, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !9463)
!9461 = !DISubroutineType(types: !9462)
!9462 = !{!104, !104, !105, !111}
!9463 = !{!9464, !9465, !9466, !9467, !9468}
!9464 = !DILocalVariable(name: "buf", arg: 1, scope: !9460, file: !9137, line: 352, type: !104)
!9465 = !DILocalVariable(name: "c", arg: 2, scope: !9460, file: !9137, line: 352, type: !105)
!9466 = !DILocalVariable(name: "n", arg: 3, scope: !9460, file: !9137, line: 352, type: !111)
!9467 = !DILocalVariable(name: "d_byte", scope: !9460, file: !9137, line: 356, type: !1112)
!9468 = !DILocalVariable(name: "c_byte", scope: !9460, file: !9137, line: 357, type: !170)
!9469 = !DILocation(line: 0, scope: !9460)
!9470 = !DILocation(line: 357, column: 25, scope: !9460)
!9471 = !DILocation(line: 389, column: 11, scope: !9460)
!9472 = !DILocation(line: 389, column: 2, scope: !9460)
!9473 = !DILocation(line: 390, column: 11, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9460, file: !9137, line: 389, column: 16)
!9475 = !DILocation(line: 390, column: 15, scope: !9474)
!9476 = !DILocation(line: 391, column: 4, scope: !9474)
!9477 = distinct !{!9477, !9472, !9478}
!9478 = !DILocation(line: 392, column: 2, scope: !9460)
!9479 = !DILocation(line: 394, column: 2, scope: !9460)
!9480 = distinct !DISubprogram(name: "memchr", scope: !9137, file: !9137, line: 404, type: !9481, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !9483)
!9481 = !DISubroutineType(types: !9482)
!9482 = !{!104, !13, !105, !111}
!9483 = !{!9484, !9485, !9486, !9487}
!9484 = !DILocalVariable(name: "s", arg: 1, scope: !9480, file: !9137, line: 404, type: !13)
!9485 = !DILocalVariable(name: "c", arg: 2, scope: !9480, file: !9137, line: 404, type: !105)
!9486 = !DILocalVariable(name: "n", arg: 3, scope: !9480, file: !9137, line: 404, type: !111)
!9487 = !DILocalVariable(name: "p", scope: !9488, file: !9137, line: 407, type: !2928)
!9488 = distinct !DILexicalBlock(scope: !9489, file: !9137, line: 406, column: 14)
!9489 = distinct !DILexicalBlock(scope: !9480, file: !9137, line: 406, column: 6)
!9490 = !DILocation(line: 0, scope: !9480)
!9491 = !DILocation(line: 406, column: 8, scope: !9489)
!9492 = !DILocation(line: 406, column: 6, scope: !9480)
!9493 = !DILocation(line: 409, column: 3, scope: !9488)
!9494 = !DILocation(line: 0, scope: !9488)
!9495 = !DILocation(line: 410, column: 8, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9497, file: !9137, line: 410, column: 8)
!9497 = distinct !DILexicalBlock(scope: !9488, file: !9137, line: 409, column: 6)
!9498 = !DILocation(line: 410, column: 13, scope: !9496)
!9499 = !DILocation(line: 410, column: 8, scope: !9497)
!9500 = distinct !{!9500, !9493, !9501}
!9501 = !DILocation(line: 414, column: 20, scope: !9488)
!9502 = !DILocation(line: 417, column: 2, scope: !9480)
!9503 = !DILocation(line: 418, column: 1, scope: !9480)
!9504 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !717, file: !717, line: 23, type: !4884, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9505)
!9505 = !{!9506}
!9506 = !DILocalVariable(name: "hook", arg: 1, scope: !9504, file: !717, line: 23, type: !447)
!9507 = !DILocation(line: 0, scope: !9504)
!9508 = !DILocation(line: 25, column: 15, scope: !9504)
!9509 = !DILocation(line: 26, column: 1, scope: !9504)
!9510 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !717, file: !717, line: 14, type: !448, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9511)
!9511 = !{!9512}
!9512 = !DILocalVariable(name: "c", arg: 1, scope: !9510, file: !717, line: 14, type: !105)
!9513 = !DILocation(line: 0, scope: !9510)
!9514 = !DILocation(line: 18, column: 2, scope: !9510)
!9515 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !717, file: !717, line: 28, type: !9516, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9518)
!9516 = !DISubroutineType(types: !9517)
!9517 = !{!105, !105, !713}
!9518 = !{!9519, !9520}
!9519 = !DILocalVariable(name: "c", arg: 1, scope: !9515, file: !717, line: 28, type: !105)
!9520 = !DILocalVariable(name: "stream", arg: 2, scope: !9515, file: !717, line: 28, type: !713)
!9521 = !DILocation(line: 0, scope: !9515)
!9522 = !DILocation(line: 30, column: 27, scope: !9515)
!9523 = !DILocation(line: 30, column: 50, scope: !9515)
!9524 = !DILocation(line: 30, column: 9, scope: !9515)
!9525 = !DILocation(line: 30, column: 2, scope: !9515)
!9526 = distinct !DISubprogram(name: "fputc", scope: !717, file: !717, line: 41, type: !9516, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9527)
!9527 = !{!9528, !9529}
!9528 = !DILocalVariable(name: "c", arg: 1, scope: !9526, file: !717, line: 41, type: !105)
!9529 = !DILocalVariable(name: "stream", arg: 2, scope: !9526, file: !717, line: 41, type: !713)
!9530 = !DILocation(line: 0, scope: !9526)
!9531 = !DILocation(line: 43, column: 9, scope: !9526)
!9532 = !DILocation(line: 43, column: 2, scope: !9526)
!9533 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9534, file: !9534, line: 72, type: !9516, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9535)
!9534 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!9535 = !{!9536, !9537}
!9536 = !DILocalVariable(name: "c", arg: 1, scope: !9533, file: !9534, line: 72, type: !105)
!9537 = !DILocalVariable(name: "stream", arg: 2, scope: !9533, file: !9534, line: 72, type: !713)
!9538 = !DILocation(line: 0, scope: !9533)
!9539 = !DILocation(line: 81, column: 2, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9533, file: !9534, line: 81, column: 2)
!9541 = !{i64 2154134940}
!9542 = !DILocation(line: 82, column: 9, scope: !9533)
!9543 = !DILocation(line: 82, column: 2, scope: !9533)
!9544 = distinct !DISubprogram(name: "fputs", scope: !717, file: !717, line: 46, type: !9545, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9548)
!9545 = !DISubroutineType(types: !9546)
!9546 = !{!105, !9141, !9547}
!9547 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !713)
!9548 = !{!9549, !9550, !9551, !9552}
!9549 = !DILocalVariable(name: "s", arg: 1, scope: !9544, file: !717, line: 46, type: !9141)
!9550 = !DILocalVariable(name: "stream", arg: 2, scope: !9544, file: !717, line: 46, type: !9547)
!9551 = !DILocalVariable(name: "len", scope: !9544, file: !717, line: 48, type: !105)
!9552 = !DILocalVariable(name: "ret", scope: !9544, file: !717, line: 49, type: !105)
!9553 = !DILocation(line: 0, scope: !9544)
!9554 = !DILocation(line: 48, column: 12, scope: !9544)
!9555 = !DILocation(line: 51, column: 8, scope: !9544)
!9556 = !DILocation(line: 53, column: 13, scope: !9544)
!9557 = !DILocation(line: 53, column: 9, scope: !9544)
!9558 = !DILocation(line: 53, column: 2, scope: !9544)
!9559 = distinct !DISubprogram(name: "fwrite", scope: !717, file: !717, line: 99, type: !9560, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9562)
!9560 = !DISubroutineType(types: !9561)
!9561 = !{!111, !9441, !111, !111, !9547}
!9562 = !{!9563, !9564, !9565, !9566}
!9563 = !DILocalVariable(name: "ptr", arg: 1, scope: !9559, file: !717, line: 99, type: !9441)
!9564 = !DILocalVariable(name: "size", arg: 2, scope: !9559, file: !717, line: 99, type: !111)
!9565 = !DILocalVariable(name: "nitems", arg: 3, scope: !9559, file: !717, line: 99, type: !111)
!9566 = !DILocalVariable(name: "stream", arg: 4, scope: !9559, file: !717, line: 100, type: !9547)
!9567 = !DILocation(line: 0, scope: !9559)
!9568 = !DILocation(line: 102, column: 9, scope: !9559)
!9569 = !DILocation(line: 102, column: 2, scope: !9559)
!9570 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9534, file: !9534, line: 96, type: !9560, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9571)
!9571 = !{!9572, !9573, !9574, !9575}
!9572 = !DILocalVariable(name: "ptr", arg: 1, scope: !9570, file: !9534, line: 96, type: !9441)
!9573 = !DILocalVariable(name: "size", arg: 2, scope: !9570, file: !9534, line: 96, type: !111)
!9574 = !DILocalVariable(name: "nitems", arg: 3, scope: !9570, file: !9534, line: 96, type: !111)
!9575 = !DILocalVariable(name: "stream", arg: 4, scope: !9570, file: !9534, line: 96, type: !9547)
!9576 = !DILocation(line: 0, scope: !9570)
!9577 = !DILocation(line: 107, column: 2, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9570, file: !9534, line: 107, column: 2)
!9579 = !{i64 2154135044}
!9580 = !DILocation(line: 108, column: 9, scope: !9570)
!9581 = !DILocation(line: 108, column: 2, scope: !9570)
!9582 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !717, file: !717, line: 56, type: !9560, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9583)
!9583 = !{!9584, !9585, !9586, !9587, !9588, !9589, !9590, !9591}
!9584 = !DILocalVariable(name: "ptr", arg: 1, scope: !9582, file: !717, line: 56, type: !9441)
!9585 = !DILocalVariable(name: "size", arg: 2, scope: !9582, file: !717, line: 56, type: !111)
!9586 = !DILocalVariable(name: "nitems", arg: 3, scope: !9582, file: !717, line: 57, type: !111)
!9587 = !DILocalVariable(name: "stream", arg: 4, scope: !9582, file: !717, line: 57, type: !9547)
!9588 = !DILocalVariable(name: "i", scope: !9582, file: !717, line: 59, type: !111)
!9589 = !DILocalVariable(name: "j", scope: !9582, file: !717, line: 60, type: !111)
!9590 = !DILocalVariable(name: "p", scope: !9582, file: !717, line: 61, type: !2928)
!9591 = !DILabel(scope: !9582, name: "done", file: !717, line: 82)
!9592 = !DILocation(line: 0, scope: !9582)
!9593 = !DILocation(line: 63, column: 14, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9582, file: !717, line: 63, column: 6)
!9595 = !DILocation(line: 63, column: 24, scope: !9594)
!9596 = !DILocation(line: 72, column: 3, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9582, file: !717, line: 70, column: 5)
!9598 = !DILocation(line: 0, scope: !9597)
!9599 = !DILocation(line: 73, column: 8, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9601, file: !717, line: 73, column: 8)
!9601 = distinct !DILexicalBlock(scope: !9597, file: !717, line: 72, column: 6)
!9602 = !DILocation(line: 73, column: 29, scope: !9600)
!9603 = !DILocation(line: 73, column: 27, scope: !9600)
!9604 = !DILocation(line: 73, column: 21, scope: !9600)
!9605 = !DILocation(line: 73, column: 33, scope: !9600)
!9606 = !DILocation(line: 73, column: 8, scope: !9601)
!9607 = !DILocation(line: 76, column: 5, scope: !9601)
!9608 = !DILocation(line: 77, column: 14, scope: !9597)
!9609 = !DILocation(line: 77, column: 3, scope: !9601)
!9610 = distinct !{!9610, !9596, !9611}
!9611 = !DILocation(line: 77, column: 17, scope: !9597)
!9612 = !DILocation(line: 79, column: 4, scope: !9597)
!9613 = !DILocation(line: 80, column: 13, scope: !9582)
!9614 = !DILocation(line: 80, column: 2, scope: !9597)
!9615 = distinct !{!9615, !9616, !9617}
!9616 = !DILocation(line: 70, column: 2, scope: !9582)
!9617 = !DILocation(line: 80, column: 16, scope: !9582)
!9618 = !DILocation(line: 82, column: 1, scope: !9582)
!9619 = !DILocation(line: 83, column: 17, scope: !9582)
!9620 = !DILocation(line: 83, column: 2, scope: !9582)
!9621 = !DILocation(line: 84, column: 1, scope: !9582)
!9622 = distinct !DISubprogram(name: "puts", scope: !717, file: !717, line: 106, type: !9623, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !710, retainedNodes: !9625)
!9623 = !DISubroutineType(types: !9624)
!9624 = !{!105, !269}
!9625 = !{!9626}
!9626 = !DILocalVariable(name: "s", arg: 1, scope: !9622, file: !717, line: 106, type: !269)
!9627 = !DILocation(line: 0, scope: !9622)
!9628 = !DILocation(line: 108, column: 6, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9622, file: !717, line: 108, column: 6)
!9630 = !DILocation(line: 108, column: 23, scope: !9629)
!9631 = !DILocation(line: 108, column: 6, scope: !9622)
!9632 = !DILocation(line: 112, column: 9, scope: !9622)
!9633 = !DILocation(line: 112, column: 29, scope: !9622)
!9634 = !DILocation(line: 112, column: 2, scope: !9622)
!9635 = !DILocation(line: 113, column: 1, scope: !9622)
!9636 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !829, file: !829, line: 368, type: !880, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9637)
!9637 = !{!9638}
!9638 = !DILocalVariable(name: "dev", arg: 1, scope: !9636, file: !829, line: 368, type: !856)
!9639 = !DILocation(line: 0, scope: !9636)
!9640 = !DILocation(line: 370, column: 2, scope: !9636)
!9641 = !DILocation(line: 371, column: 1, scope: !9636)
!9642 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !829, file: !829, line: 243, type: !9643, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9645)
!9643 = !DISubroutineType(types: !9644)
!9644 = !{null, !105, !105, !856}
!9645 = !{!9646, !9647, !9648, !9649, !9651}
!9646 = !DILocalVariable(name: "min", arg: 1, scope: !9642, file: !829, line: 243, type: !105)
!9647 = !DILocalVariable(name: "max", arg: 2, scope: !9642, file: !829, line: 243, type: !105)
!9648 = !DILocalVariable(name: "dev", arg: 3, scope: !9642, file: !829, line: 243, type: !856)
!9649 = !DILocalVariable(name: "data", scope: !9642, file: !829, line: 245, type: !9650)
!9650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 32)
!9651 = !DILocalVariable(name: "line", scope: !9642, file: !829, line: 246, type: !105)
!9652 = !DILocation(line: 0, scope: !9642)
!9653 = !DILocation(line: 245, column: 38, scope: !9642)
!9654 = !DILocation(line: 249, column: 24, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9656, file: !829, line: 249, column: 2)
!9656 = distinct !DILexicalBlock(scope: !9642, file: !829, line: 249, column: 2)
!9657 = !DILocation(line: 249, column: 2, scope: !9656)
!9658 = !DILocation(line: 251, column: 7, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9660, file: !829, line: 251, column: 7)
!9660 = distinct !DILexicalBlock(scope: !9655, file: !829, line: 249, column: 39)
!9661 = !DILocation(line: 251, column: 7, scope: !9660)
!9662 = !DILocation(line: 253, column: 4, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9659, file: !829, line: 251, column: 36)
!9664 = !DILocation(line: 256, column: 24, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9663, file: !829, line: 256, column: 8)
!9666 = !DILocation(line: 256, column: 9, scope: !9665)
!9667 = !DILocation(line: 256, column: 8, scope: !9663)
!9668 = !DILocation(line: 260, column: 43, scope: !9663)
!9669 = !DILocation(line: 260, column: 4, scope: !9663)
!9670 = !DILocation(line: 261, column: 3, scope: !9663)
!9671 = !DILocation(line: 249, column: 35, scope: !9655)
!9672 = distinct !{!9672, !9657, !9673}
!9673 = !DILocation(line: 262, column: 2, scope: !9656)
!9674 = !DILocation(line: 263, column: 1, scope: !9642)
!9675 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !829, file: !829, line: 158, type: !448, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9676)
!9676 = !{!9677}
!9677 = !DILocalVariable(name: "line", arg: 1, scope: !9675, file: !829, line: 158, type: !105)
!9678 = !DILocation(line: 0, scope: !9675)
!9679 = !DILocation(line: 170, column: 38, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9681, file: !829, line: 160, column: 17)
!9681 = distinct !DILexicalBlock(scope: !9675, file: !829, line: 160, column: 6)
!9682 = !DILocation(line: 170, column: 10, scope: !9680)
!9683 = !DILocation(line: 176, column: 1, scope: !9675)
!9684 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !829, file: !829, line: 183, type: !9685, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9687)
!9685 = !DISubroutineType(types: !9686)
!9686 = !{null, !105}
!9687 = !{!9688}
!9688 = !DILocalVariable(name: "line", arg: 1, scope: !9684, file: !829, line: 183, type: !105)
!9689 = !DILocation(line: 0, scope: !9684)
!9690 = !DILocation(line: 195, column: 28, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9692, file: !829, line: 185, column: 17)
!9692 = distinct !DILexicalBlock(scope: !9684, file: !829, line: 185, column: 6)
!9693 = !DILocation(line: 195, column: 3, scope: !9691)
!9694 = !DILocation(line: 200, column: 1, scope: !9684)
!9695 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9696, file: !9696, line: 910, type: !7846, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9697)
!9696 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9697 = !{!9698}
!9698 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9695, file: !9696, line: 910, type: !113)
!9699 = !DILocation(line: 0, scope: !9695)
!9700 = !DILocation(line: 912, column: 3, scope: !9695)
!9701 = !DILocation(line: 913, column: 1, scope: !9695)
!9702 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9696, file: !9696, line: 834, type: !9032, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9703)
!9703 = !{!9704}
!9704 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9702, file: !9696, line: 834, type: !113)
!9705 = !DILocation(line: 0, scope: !9702)
!9706 = !DILocation(line: 836, column: 11, scope: !9702)
!9707 = !DILocation(line: 836, column: 40, scope: !9702)
!9708 = !DILocation(line: 836, column: 3, scope: !9702)
!9709 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !829, file: !829, line: 304, type: !880, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9710)
!9710 = !{!9711}
!9711 = !DILocalVariable(name: "dev", arg: 1, scope: !9709, file: !829, line: 304, type: !856)
!9712 = !DILocation(line: 0, scope: !9709)
!9713 = !DILocation(line: 306, column: 2, scope: !9709)
!9714 = !DILocation(line: 307, column: 1, scope: !9709)
!9715 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !829, file: !829, line: 299, type: !880, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9716)
!9716 = !{!9717}
!9717 = !DILocalVariable(name: "dev", arg: 1, scope: !9715, file: !829, line: 299, type: !856)
!9718 = !DILocation(line: 0, scope: !9715)
!9719 = !DILocation(line: 301, column: 2, scope: !9715)
!9720 = !DILocation(line: 302, column: 1, scope: !9715)
!9721 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !829, file: !829, line: 294, type: !880, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9722)
!9722 = !{!9723}
!9723 = !DILocalVariable(name: "dev", arg: 1, scope: !9721, file: !829, line: 294, type: !856)
!9724 = !DILocation(line: 0, scope: !9721)
!9725 = !DILocation(line: 296, column: 2, scope: !9721)
!9726 = !DILocation(line: 297, column: 1, scope: !9721)
!9727 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !829, file: !829, line: 397, type: !880, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9728)
!9728 = !{!9729}
!9729 = !DILocalVariable(name: "dev", arg: 1, scope: !9727, file: !829, line: 397, type: !856)
!9730 = !DILocation(line: 0, scope: !9727)
!9731 = !DILocation(line: 399, column: 2, scope: !9727)
!9732 = !DILocation(line: 400, column: 1, scope: !9727)
!9733 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !829, file: !829, line: 392, type: !880, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9734)
!9734 = !{!9735}
!9735 = !DILocalVariable(name: "dev", arg: 1, scope: !9733, file: !829, line: 392, type: !856)
!9736 = !DILocation(line: 0, scope: !9733)
!9737 = !DILocation(line: 394, column: 2, scope: !9733)
!9738 = !DILocation(line: 395, column: 1, scope: !9733)
!9739 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !829, file: !829, line: 289, type: !880, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9740)
!9740 = !{!9741}
!9741 = !DILocalVariable(name: "dev", arg: 1, scope: !9739, file: !829, line: 289, type: !856)
!9742 = !DILocation(line: 0, scope: !9739)
!9743 = !DILocation(line: 291, column: 2, scope: !9739)
!9744 = !DILocation(line: 292, column: 1, scope: !9739)
!9745 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !829, file: !829, line: 387, type: !880, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9746)
!9746 = !{!9747}
!9747 = !DILocalVariable(name: "dev", arg: 1, scope: !9745, file: !829, line: 387, type: !856)
!9748 = !DILocation(line: 0, scope: !9745)
!9749 = !DILocation(line: 389, column: 2, scope: !9745)
!9750 = !DILocation(line: 390, column: 1, scope: !9745)
!9751 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !829, file: !829, line: 382, type: !880, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9752)
!9752 = !{!9753}
!9753 = !DILocalVariable(name: "dev", arg: 1, scope: !9751, file: !829, line: 382, type: !856)
!9754 = !DILocation(line: 0, scope: !9751)
!9755 = !DILocation(line: 384, column: 2, scope: !9751)
!9756 = !DILocation(line: 385, column: 1, scope: !9751)
!9757 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !829, file: !829, line: 373, type: !880, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9758)
!9758 = !{!9759}
!9759 = !DILocalVariable(name: "dev", arg: 1, scope: !9757, file: !829, line: 373, type: !856)
!9760 = !DILocation(line: 0, scope: !9757)
!9761 = !DILocation(line: 375, column: 2, scope: !9757)
!9762 = !DILocation(line: 376, column: 1, scope: !9757)
!9763 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !829, file: !829, line: 284, type: !880, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9764)
!9764 = !{!9765}
!9765 = !DILocalVariable(name: "dev", arg: 1, scope: !9763, file: !829, line: 284, type: !856)
!9766 = !DILocation(line: 0, scope: !9763)
!9767 = !DILocation(line: 286, column: 2, scope: !9763)
!9768 = !DILocation(line: 287, column: 1, scope: !9763)
!9769 = distinct !DISubprogram(name: "stm32_exti_init", scope: !829, file: !829, line: 416, type: !854, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9770)
!9770 = !{!9771}
!9771 = !DILocalVariable(name: "dev", arg: 1, scope: !9769, file: !829, line: 416, type: !856)
!9772 = !DILocation(line: 0, scope: !9769)
!9773 = !DILocation(line: 418, column: 2, scope: !9769)
!9774 = !DILocation(line: 420, column: 2, scope: !9769)
!9775 = !DILocation(line: 0, scope: !879)
!9776 = !DILocation(line: 493, column: 2, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !879, file: !829, line: 493, column: 2)
!9778 = !DILocation(line: 497, column: 2, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !879, file: !829, line: 497, column: 2)
!9780 = !DILocation(line: 507, column: 2, scope: !9781)
!9781 = distinct !DILexicalBlock(scope: !879, file: !829, line: 507, column: 2)
!9782 = !DILocation(line: 512, column: 2, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !879, file: !829, line: 512, column: 2)
!9784 = !DILocation(line: 516, column: 2, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !879, file: !829, line: 516, column: 2)
!9786 = !DILocation(line: 523, column: 2, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !879, file: !829, line: 523, column: 2)
!9788 = !DILocation(line: 527, column: 2, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !879, file: !829, line: 527, column: 2)
!9790 = !DILocation(line: 581, column: 2, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !879, file: !829, line: 581, column: 2)
!9792 = !DILocation(line: 586, column: 2, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !879, file: !829, line: 586, column: 2)
!9794 = !DILocation(line: 591, column: 2, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !879, file: !829, line: 591, column: 2)
!9796 = !DILocation(line: 595, column: 2, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !879, file: !829, line: 595, column: 2)
!9798 = !DILocation(line: 607, column: 1, scope: !879)
!9799 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !829, file: !829, line: 112, type: !9685, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9800)
!9800 = !{!9801, !9802}
!9801 = !DILocalVariable(name: "line", arg: 1, scope: !9799, file: !829, line: 112, type: !105)
!9802 = !DILocalVariable(name: "irqnum", scope: !9799, file: !829, line: 114, type: !105)
!9803 = !DILocation(line: 0, scope: !9799)
!9804 = !DILocation(line: 122, column: 13, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9799, file: !829, line: 122, column: 6)
!9806 = !DILocation(line: 122, column: 6, scope: !9799)
!9807 = !DILocation(line: 123, column: 3, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9809, file: !829, line: 123, column: 3)
!9809 = distinct !DILexicalBlock(scope: !9810, file: !829, line: 123, column: 3)
!9810 = distinct !DILexicalBlock(scope: !9811, file: !829, line: 123, column: 3)
!9811 = distinct !DILexicalBlock(scope: !9805, file: !829, line: 122, column: 22)
!9812 = !DILocation(line: 121, column: 11, scope: !9799)
!9813 = !DILocation(line: 130, column: 26, scope: !9799)
!9814 = !DILocation(line: 130, column: 2, scope: !9799)
!9815 = !DILocation(line: 134, column: 2, scope: !9799)
!9816 = !DILocation(line: 135, column: 1, scope: !9799)
!9817 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9696, file: !9696, line: 268, type: !7846, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9818)
!9818 = !{!9819}
!9819 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9817, file: !9696, line: 268, type: !113)
!9820 = !DILocation(line: 0, scope: !9817)
!9821 = !DILocation(line: 270, column: 3, scope: !9817)
!9822 = !DILocation(line: 271, column: 1, scope: !9817)
!9823 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !829, file: !829, line: 137, type: !9685, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9824)
!9824 = !{!9825}
!9825 = !DILocalVariable(name: "line", arg: 1, scope: !9823, file: !829, line: 137, type: !105)
!9826 = !DILocation(line: 0, scope: !9823)
!9827 = !DILocation(line: 141, column: 11, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9823, file: !829, line: 141, column: 6)
!9829 = !DILocation(line: 141, column: 6, scope: !9823)
!9830 = !DILocation(line: 145, column: 28, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9828, file: !829, line: 141, column: 17)
!9832 = !DILocation(line: 145, column: 3, scope: !9831)
!9833 = !DILocation(line: 147, column: 2, scope: !9831)
!9834 = !DILocation(line: 151, column: 1, scope: !9823)
!9835 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9696, file: !9696, line: 309, type: !7846, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9836)
!9836 = !{!9837}
!9837 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9835, file: !9696, line: 309, type: !113)
!9838 = !DILocation(line: 0, scope: !9835)
!9839 = !DILocation(line: 311, column: 3, scope: !9835)
!9840 = !DILocation(line: 312, column: 1, scope: !9835)
!9841 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !829, file: !829, line: 202, type: !9842, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9844)
!9842 = !DISubroutineType(types: !9843)
!9843 = !{null, !105, !105}
!9844 = !{!9845, !9846}
!9845 = !DILocalVariable(name: "line", arg: 1, scope: !9841, file: !829, line: 202, type: !105)
!9846 = !DILocalVariable(name: "trigger", arg: 2, scope: !9841, file: !829, line: 202, type: !105)
!9847 = !DILocation(line: 0, scope: !9841)
!9848 = !DILocation(line: 211, column: 2, scope: !9841)
!9849 = !DILocation(line: 213, column: 36, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9841, file: !829, line: 211, column: 19)
!9851 = !DILocation(line: 213, column: 3, scope: !9850)
!9852 = !DILocation(line: 214, column: 3, scope: !9850)
!9853 = !DILocation(line: 215, column: 3, scope: !9850)
!9854 = !DILocation(line: 217, column: 35, scope: !9850)
!9855 = !DILocation(line: 217, column: 3, scope: !9850)
!9856 = !DILocation(line: 218, column: 3, scope: !9850)
!9857 = !DILocation(line: 219, column: 3, scope: !9850)
!9858 = !DILocation(line: 221, column: 36, scope: !9850)
!9859 = !DILocation(line: 221, column: 3, scope: !9850)
!9860 = !DILocation(line: 222, column: 3, scope: !9850)
!9861 = !DILocation(line: 223, column: 3, scope: !9850)
!9862 = !DILocation(line: 225, column: 35, scope: !9850)
!9863 = !DILocation(line: 225, column: 3, scope: !9850)
!9864 = !DILocation(line: 226, column: 3, scope: !9850)
!9865 = !DILocation(line: 227, column: 3, scope: !9850)
!9866 = !DILocation(line: 232, column: 1, scope: !9841)
!9867 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9696, file: !9696, line: 573, type: !7846, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9868)
!9868 = !{!9869}
!9869 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9867, file: !9696, line: 573, type: !113)
!9870 = !DILocation(line: 0, scope: !9867)
!9871 = !DILocation(line: 575, column: 3, scope: !9867)
!9872 = !DILocation(line: 577, column: 1, scope: !9867)
!9873 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9696, file: !9696, line: 703, type: !7846, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9874)
!9874 = !{!9875}
!9875 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9873, file: !9696, line: 703, type: !113)
!9876 = !DILocation(line: 0, scope: !9873)
!9877 = !DILocation(line: 705, column: 3, scope: !9873)
!9878 = !DILocation(line: 706, column: 1, scope: !9873)
!9879 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9696, file: !9696, line: 529, type: !7846, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9880)
!9880 = !{!9881}
!9881 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9879, file: !9696, line: 529, type: !113)
!9882 = !DILocation(line: 0, scope: !9879)
!9883 = !DILocation(line: 531, column: 3, scope: !9879)
!9884 = !DILocation(line: 533, column: 1, scope: !9879)
!9885 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9696, file: !9696, line: 661, type: !7846, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9886)
!9886 = !{!9887}
!9887 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9885, file: !9696, line: 661, type: !113)
!9888 = !DILocation(line: 0, scope: !9885)
!9889 = !DILocation(line: 663, column: 3, scope: !9885)
!9890 = !DILocation(line: 664, column: 1, scope: !9885)
!9891 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !829, file: !829, line: 433, type: !9892, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9894)
!9892 = !DISubroutineType(types: !9893)
!9893 = !{!105, !105, !867, !104}
!9894 = !{!9895, !9896, !9897, !9898, !9900}
!9895 = !DILocalVariable(name: "line", arg: 1, scope: !9891, file: !829, line: 433, type: !105)
!9896 = !DILocalVariable(name: "cb", arg: 2, scope: !9891, file: !829, line: 433, type: !867)
!9897 = !DILocalVariable(name: "arg", arg: 3, scope: !9891, file: !829, line: 433, type: !104)
!9898 = !DILocalVariable(name: "dev", scope: !9891, file: !829, line: 435, type: !9899)
!9899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !856)
!9900 = !DILocalVariable(name: "data", scope: !9891, file: !829, line: 436, type: !9650)
!9901 = !DILocation(line: 0, scope: !9891)
!9902 = !DILocation(line: 438, column: 21, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9891, file: !829, line: 438, column: 6)
!9904 = !DILocation(line: 438, column: 6, scope: !9903)
!9905 = !DILocation(line: 438, column: 6, scope: !9891)
!9906 = !DILocation(line: 442, column: 20, scope: !9891)
!9907 = !DILocation(line: 443, column: 17, scope: !9891)
!9908 = !DILocation(line: 443, column: 22, scope: !9891)
!9909 = !DILocation(line: 445, column: 2, scope: !9891)
!9910 = !DILocation(line: 446, column: 1, scope: !9891)
!9911 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !829, file: !829, line: 448, type: !9685, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !745, retainedNodes: !9912)
!9912 = !{!9913, !9914, !9915}
!9913 = !DILocalVariable(name: "line", arg: 1, scope: !9911, file: !829, line: 448, type: !105)
!9914 = !DILocalVariable(name: "dev", scope: !9911, file: !829, line: 450, type: !9899)
!9915 = !DILocalVariable(name: "data", scope: !9911, file: !829, line: 451, type: !9650)
!9916 = !DILocation(line: 0, scope: !9911)
!9917 = !DILocation(line: 453, column: 17, scope: !9911)
!9918 = !DILocation(line: 453, column: 20, scope: !9911)
!9919 = !DILocation(line: 454, column: 17, scope: !9911)
!9920 = !DILocation(line: 454, column: 22, scope: !9911)
!9921 = !DILocation(line: 455, column: 1, scope: !9911)
!9922 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1011, file: !1011, line: 183, type: !1049, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !9923)
!9923 = !{!9924, !9925, !9926, !9927, !9928}
!9924 = !DILocalVariable(name: "dev", arg: 1, scope: !9922, file: !1011, line: 183, type: !1040)
!9925 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9922, file: !1011, line: 184, type: !1051)
!9926 = !DILocalVariable(name: "pclken", scope: !9922, file: !1011, line: 186, type: !1001)
!9927 = !DILocalVariable(name: "reg", scope: !9922, file: !1011, line: 187, type: !1589)
!9928 = !DILocalVariable(name: "reg_val", scope: !9922, file: !1011, line: 188, type: !113)
!9929 = !DILocation(line: 0, scope: !9922)
!9930 = !DILocation(line: 192, column: 6, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9922, file: !1011, line: 192, column: 6)
!9932 = !DILocation(line: 192, column: 6, scope: !9922)
!9933 = !DILocation(line: 197, column: 52, scope: !9922)
!9934 = !DILocation(line: 197, column: 8, scope: !9922)
!9935 = !DILocation(line: 198, column: 12, scope: !9922)
!9936 = !DILocation(line: 199, column: 21, scope: !9922)
!9937 = !DILocation(line: 199, column: 10, scope: !9922)
!9938 = !DILocation(line: 200, column: 7, scope: !9922)
!9939 = !DILocation(line: 202, column: 2, scope: !9922)
!9940 = !DILocation(line: 203, column: 1, scope: !9922)
!9941 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1011, file: !1011, line: 205, type: !1049, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !9942)
!9942 = !{!9943, !9944, !9945, !9946, !9947}
!9943 = !DILocalVariable(name: "dev", arg: 1, scope: !9941, file: !1011, line: 205, type: !1040)
!9944 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9941, file: !1011, line: 206, type: !1051)
!9945 = !DILocalVariable(name: "pclken", scope: !9941, file: !1011, line: 208, type: !1001)
!9946 = !DILocalVariable(name: "reg", scope: !9941, file: !1011, line: 209, type: !1589)
!9947 = !DILocalVariable(name: "reg_val", scope: !9941, file: !1011, line: 210, type: !113)
!9948 = !DILocation(line: 0, scope: !9941)
!9949 = !DILocation(line: 214, column: 6, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9941, file: !1011, line: 214, column: 6)
!9951 = !DILocation(line: 214, column: 6, scope: !9941)
!9952 = !DILocation(line: 219, column: 52, scope: !9941)
!9953 = !DILocation(line: 219, column: 8, scope: !9941)
!9954 = !DILocation(line: 220, column: 12, scope: !9941)
!9955 = !DILocation(line: 221, column: 22, scope: !9941)
!9956 = !DILocation(line: 221, column: 13, scope: !9941)
!9957 = !DILocation(line: 221, column: 10, scope: !9941)
!9958 = !DILocation(line: 222, column: 7, scope: !9941)
!9959 = !DILocation(line: 224, column: 2, scope: !9941)
!9960 = !DILocation(line: 225, column: 1, scope: !9941)
!9961 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1011, file: !1011, line: 262, type: !1065, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !9962)
!9962 = !{!9963, !9964, !9965, !9966, !9967, !9968, !9969, !9970}
!9963 = !DILocalVariable(name: "clock", arg: 1, scope: !9961, file: !1011, line: 262, type: !1040)
!9964 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9961, file: !1011, line: 263, type: !1051)
!9965 = !DILocalVariable(name: "rate", arg: 3, scope: !9961, file: !1011, line: 264, type: !1007)
!9966 = !DILocalVariable(name: "pclken", scope: !9961, file: !1011, line: 266, type: !1001)
!9967 = !DILocalVariable(name: "ahb_clock", scope: !9961, file: !1011, line: 273, type: !113)
!9968 = !DILocalVariable(name: "apb1_clock", scope: !9961, file: !1011, line: 274, type: !113)
!9969 = !DILocalVariable(name: "apb2_clock", scope: !9961, file: !1011, line: 276, type: !113)
!9970 = !DILocalVariable(name: "ahb3_clock", scope: !9961, file: !1011, line: 286, type: !113)
!9971 = !DILocation(line: 0, scope: !9961)
!9972 = !DILocation(line: 273, column: 23, scope: !9961)
!9973 = !DILocation(line: 299, column: 18, scope: !9961)
!9974 = !DILocation(line: 299, column: 2, scope: !9961)
!9975 = !DILocation(line: 274, column: 24, scope: !9961)
!9976 = !DILocation(line: 319, column: 3, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9961, file: !1011, line: 299, column: 23)
!9978 = !DILocation(line: 276, column: 24, scope: !9961)
!9979 = !DILocation(line: 323, column: 3, scope: !9977)
!9980 = !DILocation(line: 346, column: 33, scope: !9977)
!9981 = !DILocation(line: 346, column: 11, scope: !9977)
!9982 = !DILocation(line: 350, column: 3, scope: !9977)
!9983 = !DILocation(line: 374, column: 3, scope: !9977)
!9984 = !DILocation(line: 379, column: 3, scope: !9977)
!9985 = !DILocation(line: 0, scope: !9977)
!9986 = !DILocation(line: 396, column: 1, scope: !9961)
!9987 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1011, file: !1011, line: 227, type: !1081, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !9988)
!9988 = !{!9989, !9990, !9991, !9992, !9993, !9994, !9995, !9996}
!9989 = !DILocalVariable(name: "dev", arg: 1, scope: !9987, file: !1011, line: 227, type: !1040)
!9990 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9987, file: !1011, line: 228, type: !1051)
!9991 = !DILocalVariable(name: "data", arg: 3, scope: !9987, file: !1011, line: 229, type: !104)
!9992 = !DILocalVariable(name: "pclken", scope: !9987, file: !1011, line: 233, type: !1001)
!9993 = !DILocalVariable(name: "reg", scope: !9987, file: !1011, line: 234, type: !1589)
!9994 = !DILocalVariable(name: "reg_val", scope: !9987, file: !1011, line: 235, type: !113)
!9995 = !DILocalVariable(name: "dt_val", scope: !9987, file: !1011, line: 235, type: !113)
!9996 = !DILocalVariable(name: "err", scope: !9987, file: !1011, line: 236, type: !105)
!9997 = !DILocation(line: 0, scope: !9987)
!9998 = !DILocation(line: 241, column: 30, scope: !9987)
!9999 = !DILocation(line: 241, column: 8, scope: !9987)
!10000 = !DILocation(line: 242, column: 10, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9987, file: !1011, line: 242, column: 6)
!10002 = !DILocation(line: 242, column: 6, scope: !9987)
!10003 = !DILocation(line: 247, column: 11, scope: !9987)
!10004 = !DILocation(line: 248, column: 6, scope: !9987)
!10005 = !DILocation(line: 247, column: 44, scope: !9987)
!10006 = !DILocation(line: 250, column: 6, scope: !9987)
!10007 = !DILocation(line: 249, column: 52, scope: !9987)
!10008 = !DILocation(line: 249, column: 8, scope: !9987)
!10009 = !DILocation(line: 251, column: 12, scope: !9987)
!10010 = !DILocation(line: 252, column: 10, scope: !9987)
!10011 = !DILocation(line: 253, column: 7, scope: !9987)
!10012 = !DILocation(line: 255, column: 2, scope: !9987)
!10013 = !DILocation(line: 260, column: 1, scope: !9987)
!10014 = distinct !DISubprogram(name: "enabled_clock", scope: !1011, file: !1011, line: 100, type: !10015, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !10017)
!10015 = !DISubroutineType(types: !10016)
!10016 = !{!105, !113}
!10017 = !{!10018, !10019}
!10018 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10014, file: !1011, line: 100, type: !113)
!10019 = !DILocalVariable(name: "r", scope: !10014, file: !1011, line: 102, type: !105)
!10020 = !DILocation(line: 0, scope: !10014)
!10021 = !DILocation(line: 104, column: 2, scope: !10014)
!10022 = !DILocation(line: 180, column: 2, scope: !10014)
!10023 = !DILocation(line: 181, column: 1, scope: !10014)
!10024 = distinct !DISubprogram(name: "get_bus_clock", scope: !1011, file: !1011, line: 79, type: !10025, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !10027)
!10025 = !DISubroutineType(types: !10026)
!10026 = !{!113, !113, !113}
!10027 = !{!10028, !10029}
!10028 = !DILocalVariable(name: "clock", arg: 1, scope: !10024, file: !1011, line: 79, type: !113)
!10029 = !DILocalVariable(name: "prescaler", arg: 2, scope: !10024, file: !1011, line: 79, type: !113)
!10030 = !DILocation(line: 0, scope: !10024)
!10031 = !DILocation(line: 81, column: 15, scope: !10024)
!10032 = !DILocation(line: 81, column: 2, scope: !10024)
!10033 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1011, file: !1011, line: 68, type: !10034, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !10036)
!10034 = !DISubroutineType(types: !10035)
!10035 = !{!113, !113, !105, !105, !105}
!10036 = !{!10037, !10038, !10039, !10040}
!10037 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !10033, file: !1011, line: 68, type: !113)
!10038 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !10033, file: !1011, line: 69, type: !105)
!10039 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !10033, file: !1011, line: 70, type: !105)
!10040 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !10033, file: !1011, line: 71, type: !105)
!10041 = !DILocation(line: 0, scope: !10033)
!10042 = !DILocation(line: 75, column: 22, scope: !10033)
!10043 = !DILocation(line: 75, column: 34, scope: !10033)
!10044 = !DILocation(line: 75, column: 2, scope: !10033)
!10045 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1011, file: !1011, line: 641, type: !1038, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !10046)
!10046 = !{!10047, !10048, !10049}
!10047 = !DILocalVariable(name: "dev", arg: 1, scope: !10045, file: !1011, line: 641, type: !1040)
!10048 = !DILocalVariable(name: "old_flash_freq", scope: !10045, file: !1011, line: 664, type: !113)
!10049 = !DILocalVariable(name: "new_flash_freq", scope: !10045, file: !1011, line: 665, type: !113)
!10050 = !DILocation(line: 0, scope: !10045)
!10051 = !DILocation(line: 646, column: 2, scope: !10045)
!10052 = !DILocation(line: 667, column: 19, scope: !10045)
!10053 = !DILocation(line: 674, column: 21, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10045, file: !1011, line: 674, column: 6)
!10055 = !DILocation(line: 674, column: 6, scope: !10045)
!10056 = !DILocation(line: 675, column: 3, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10054, file: !1011, line: 674, column: 59)
!10058 = !DILocation(line: 676, column: 2, scope: !10057)
!10059 = !DILocation(line: 680, column: 2, scope: !10045)
!10060 = !DILocation(line: 683, column: 2, scope: !10045)
!10061 = !DILocation(line: 690, column: 3, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10063, file: !1011, line: 689, column: 9)
!10063 = distinct !DILexicalBlock(scope: !10045, file: !1011, line: 685, column: 6)
!10064 = !DILocation(line: 695, column: 2, scope: !10045)
!10065 = !DILocation(line: 696, column: 2, scope: !10045)
!10066 = !DILocation(line: 696, column: 9, scope: !10045)
!10067 = !DILocation(line: 696, column: 34, scope: !10045)
!10068 = distinct !{!10068, !10065, !10069}
!10069 = !DILocation(line: 697, column: 2, scope: !10045)
!10070 = !DILocation(line: 720, column: 21, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10045, file: !1011, line: 720, column: 6)
!10072 = !DILocation(line: 720, column: 6, scope: !10045)
!10073 = !DILocation(line: 721, column: 3, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10071, file: !1011, line: 720, column: 60)
!10075 = !DILocation(line: 722, column: 2, scope: !10074)
!10076 = !DILocation(line: 725, column: 18, scope: !10045)
!10077 = !DILocation(line: 728, column: 2, scope: !10045)
!10078 = !DILocation(line: 730, column: 2, scope: !10045)
!10079 = !DILocation(line: 745, column: 2, scope: !10045)
!10080 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10081, file: !10081, line: 3275, type: !395, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !397)
!10081 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10082 = !DILocation(line: 3277, column: 21, scope: !10080)
!10083 = !DILocation(line: 3277, column: 3, scope: !10080)
!10084 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1011, file: !1011, line: 507, type: !266, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !397)
!10085 = !DILocation(line: 534, column: 7, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10087, file: !1011, line: 534, column: 7)
!10087 = distinct !DILexicalBlock(scope: !10088, file: !1011, line: 532, column: 37)
!10088 = distinct !DILexicalBlock(scope: !10084, file: !1011, line: 532, column: 6)
!10089 = !DILocation(line: 534, column: 28, scope: !10086)
!10090 = !DILocation(line: 534, column: 7, scope: !10087)
!10091 = !DILocation(line: 536, column: 4, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10086, file: !1011, line: 534, column: 34)
!10093 = !DILocation(line: 537, column: 4, scope: !10092)
!10094 = !DILocation(line: 537, column: 11, scope: !10092)
!10095 = !DILocation(line: 537, column: 32, scope: !10092)
!10096 = distinct !{!10096, !10093, !10097}
!10097 = !DILocation(line: 539, column: 4, scope: !10092)
!10098 = !DILocation(line: 583, column: 3, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10100, file: !1011, line: 577, column: 37)
!10100 = distinct !DILexicalBlock(scope: !10084, file: !1011, line: 577, column: 6)
!10101 = !DILocation(line: 584, column: 3, scope: !10099)
!10102 = !DILocation(line: 584, column: 10, scope: !10099)
!10103 = !DILocation(line: 584, column: 31, scope: !10099)
!10104 = distinct !{!10104, !10101, !10105}
!10105 = !DILocation(line: 585, column: 3, scope: !10099)
!10106 = !DILocation(line: 627, column: 1, scope: !10084)
!10107 = distinct !DISubprogram(name: "set_up_plls", scope: !1011, file: !1011, line: 448, type: !266, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !397)
!10108 = !DILocation(line: 460, column: 6, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10107, file: !1011, line: 460, column: 6)
!10110 = !DILocation(line: 460, column: 31, scope: !10109)
!10111 = !DILocation(line: 460, column: 6, scope: !10107)
!10112 = !DILocation(line: 461, column: 3, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10109, file: !1011, line: 460, column: 67)
!10114 = !DILocation(line: 462, column: 3, scope: !10113)
!10115 = !DILocation(line: 463, column: 2, scope: !10113)
!10116 = !DILocation(line: 464, column: 2, scope: !10107)
!10117 = !DILocation(line: 488, column: 2, scope: !10107)
!10118 = !DILocation(line: 496, column: 2, scope: !10107)
!10119 = !DILocation(line: 499, column: 2, scope: !10107)
!10120 = !DILocation(line: 500, column: 2, scope: !10107)
!10121 = !DILocation(line: 500, column: 9, scope: !10107)
!10122 = !DILocation(line: 500, column: 30, scope: !10107)
!10123 = distinct !{!10123, !10120, !10124}
!10124 = !DILocation(line: 502, column: 2, scope: !10107)
!10125 = !DILocation(line: 505, column: 1, scope: !10107)
!10126 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10081, file: !10081, line: 3224, type: !7846, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !10127)
!10127 = !{!10128}
!10128 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10126, file: !10081, line: 3224, type: !113)
!10129 = !DILocation(line: 0, scope: !10126)
!10130 = !DILocation(line: 3226, column: 3, scope: !10126)
!10131 = !DILocation(line: 3227, column: 1, scope: !10126)
!10132 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10081, file: !10081, line: 3188, type: !7846, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !10133)
!10133 = !{!10134}
!10134 = !DILocalVariable(name: "Source", arg: 1, scope: !10132, file: !10081, line: 3188, type: !113)
!10135 = !DILocation(line: 0, scope: !10132)
!10136 = !DILocation(line: 3190, column: 3, scope: !10132)
!10137 = !DILocation(line: 3191, column: 1, scope: !10132)
!10138 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10081, file: !10081, line: 3204, type: !395, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !397)
!10139 = !DILocation(line: 3206, column: 21, scope: !10138)
!10140 = !DILocation(line: 3206, column: 3, scope: !10138)
!10141 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10081, file: !10081, line: 3240, type: !7846, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !10142)
!10142 = !{!10143}
!10143 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10141, file: !10081, line: 3240, type: !113)
!10144 = !DILocation(line: 0, scope: !10141)
!10145 = !DILocation(line: 3242, column: 3, scope: !10141)
!10146 = !DILocation(line: 3243, column: 1, scope: !10141)
!10147 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10081, file: !10081, line: 3256, type: !7846, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !10148)
!10148 = !{!10149}
!10149 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10147, file: !10081, line: 3256, type: !113)
!10150 = !DILocation(line: 0, scope: !10147)
!10151 = !DILocation(line: 3258, column: 3, scope: !10147)
!10152 = !DILocation(line: 3259, column: 1, scope: !10147)
!10153 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1011, file: !1011, line: 409, type: !266, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !397)
!10154 = !DILocation(line: 412, column: 6, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10153, file: !1011, line: 412, column: 6)
!10156 = !DILocation(line: 412, column: 27, scope: !10155)
!10157 = !DILocation(line: 412, column: 6, scope: !10153)
!10158 = !DILocation(line: 414, column: 3, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10155, file: !1011, line: 412, column: 33)
!10160 = !DILocation(line: 415, column: 3, scope: !10159)
!10161 = !DILocation(line: 415, column: 10, scope: !10159)
!10162 = !DILocation(line: 415, column: 31, scope: !10159)
!10163 = distinct !{!10163, !10160, !10164}
!10164 = !DILocation(line: 417, column: 3, scope: !10159)
!10165 = !DILocation(line: 421, column: 2, scope: !10153)
!10166 = !DILocation(line: 422, column: 2, scope: !10153)
!10167 = !DILocation(line: 422, column: 9, scope: !10153)
!10168 = !DILocation(line: 422, column: 34, scope: !10153)
!10169 = distinct !{!10169, !10166, !10170}
!10170 = !DILocation(line: 423, column: 2, scope: !10153)
!10171 = !DILocation(line: 424, column: 1, scope: !10153)
!10172 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10081, file: !10081, line: 4195, type: !266, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !397)
!10173 = !DILocation(line: 4197, column: 3, scope: !10172)
!10174 = !DILocation(line: 4198, column: 1, scope: !10172)
!10175 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10081, file: !10081, line: 4184, type: !266, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !397)
!10176 = !DILocation(line: 4186, column: 3, scope: !10175)
!10177 = !DILocation(line: 4187, column: 1, scope: !10175)
!10178 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10081, file: !10081, line: 4205, type: !395, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !397)
!10179 = !DILocation(line: 4207, column: 11, scope: !10178)
!10180 = !DILocation(line: 4207, column: 44, scope: !10178)
!10181 = !DILocation(line: 4207, column: 3, scope: !10178)
!10182 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10081, file: !10081, line: 3007, type: !395, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !397)
!10183 = !DILocation(line: 3009, column: 11, scope: !10182)
!10184 = !DILocation(line: 3009, column: 44, scope: !10182)
!10185 = !DILocation(line: 3009, column: 3, scope: !10182)
!10186 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10081, file: !10081, line: 2987, type: !266, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !397)
!10187 = !DILocation(line: 2989, column: 3, scope: !10186)
!10188 = !DILocation(line: 2990, column: 1, scope: !10186)
!10189 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10081, file: !10081, line: 3143, type: !266, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !397)
!10190 = !DILocation(line: 3145, column: 3, scope: !10189)
!10191 = !DILocation(line: 3146, column: 1, scope: !10189)
!10192 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10081, file: !10081, line: 3163, type: !395, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !947, retainedNodes: !397)
!10193 = !DILocation(line: 3165, column: 11, scope: !10192)
!10194 = !DILocation(line: 3165, column: 46, scope: !10192)
!10195 = !DILocation(line: 3165, column: 3, scope: !10192)
!10196 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10197, file: !10197, line: 40, type: !395, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !397)
!10197 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10198 = !DILocation(line: 43, column: 3, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10200, file: !10197, line: 42, column: 37)
!10200 = distinct !DILexicalBlock(scope: !10196, file: !10197, line: 42, column: 6)
!10201 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10197, file: !10197, line: 56, type: !266, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !397)
!10202 = !DILocation(line: 58, column: 2, scope: !10201)
!10203 = !DILocation(line: 62, column: 1, scope: !10201)
!10204 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10081, file: !10081, line: 4304, type: !10205, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !10207)
!10205 = !DISubroutineType(types: !10206)
!10206 = !{null, !113, !113, !113, !113}
!10207 = !{!10208, !10209, !10210, !10211}
!10208 = !DILocalVariable(name: "Source", arg: 1, scope: !10204, file: !10081, line: 4304, type: !113)
!10209 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10204, file: !10081, line: 4304, type: !113)
!10210 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10204, file: !10081, line: 4304, type: !113)
!10211 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10204, file: !10081, line: 4304, type: !113)
!10212 = !DILocation(line: 0, scope: !10204)
!10213 = !DILocation(line: 4306, column: 3, scope: !10204)
!10214 = !DILocation(line: 4308, column: 3, scope: !10204)
!10215 = !DILocation(line: 4312, column: 1, scope: !10204)
!10216 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10197, file: !10197, line: 69, type: !266, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !397)
!10217 = !DILocation(line: 72, column: 2, scope: !10216)
!10218 = !DILocation(line: 73, column: 1, scope: !10216)
!10219 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10220, file: !10220, line: 1185, type: !7846, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2930, retainedNodes: !10221)
!10220 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10221 = !{!10222, !10223}
!10222 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10219, file: !10220, line: 1185, type: !113)
!10223 = !DILocalVariable(name: "tmpreg", scope: !10219, file: !10220, line: 1187, type: !461)
!10224 = !DILocation(line: 0, scope: !10219)
!10225 = !DILocation(line: 1187, column: 3, scope: !10219)
!10226 = !DILocation(line: 1187, column: 17, scope: !10219)
!10227 = !DILocation(line: 1188, column: 3, scope: !10219)
!10228 = !DILocation(line: 1190, column: 12, scope: !10219)
!10229 = !DILocation(line: 1190, column: 10, scope: !10219)
!10230 = !DILocation(line: 1191, column: 9, scope: !10219)
!10231 = !DILocation(line: 1192, column: 1, scope: !10219)
!10232 = distinct !DISubprogram(name: "uart_console_init", scope: !1142, file: !1142, line: 588, type: !1119, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !10233)
!10233 = !{!10234}
!10234 = !DILocalVariable(name: "arg", arg: 1, scope: !10232, file: !1142, line: 588, type: !1097)
!10235 = !DILocation(line: 0, scope: !10232)
!10236 = !DILocation(line: 593, column: 7, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10232, file: !1142, line: 593, column: 6)
!10238 = !DILocation(line: 593, column: 6, scope: !10232)
!10239 = !DILocation(line: 597, column: 2, scope: !10232)
!10240 = !DILocation(line: 599, column: 2, scope: !10232)
!10241 = !DILocation(line: 600, column: 1, scope: !10232)
!10242 = distinct !DISubprogram(name: "device_is_ready", scope: !10243, file: !10243, line: 47, type: !10244, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !10246)
!10243 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!10244 = !DISubroutineType(types: !10245)
!10245 = !{!492, !1097}
!10246 = !{!10247}
!10247 = !DILocalVariable(name: "dev", arg: 1, scope: !10242, file: !10243, line: 47, type: !1097)
!10248 = !DILocation(line: 0, scope: !10242)
!10249 = !DILocation(line: 55, column: 2, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10242, file: !10243, line: 55, column: 2)
!10251 = !{i64 2154277327}
!10252 = !DILocation(line: 56, column: 9, scope: !10242)
!10253 = !DILocation(line: 56, column: 2, scope: !10242)
!10254 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1142, file: !1142, line: 573, type: !266, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !397)
!10255 = !DILocation(line: 576, column: 2, scope: !10254)
!10256 = !DILocation(line: 579, column: 2, scope: !10254)
!10257 = !DILocation(line: 581, column: 1, scope: !10254)
!10258 = distinct !DISubprogram(name: "console_out", scope: !1142, file: !1142, line: 77, type: !448, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !10259)
!10259 = !{!10260}
!10260 = !DILocalVariable(name: "c", arg: 1, scope: !10258, file: !1142, line: 77, type: !105)
!10261 = !DILocation(line: 0, scope: !10258)
!10262 = !DILocation(line: 89, column: 11, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10258, file: !1142, line: 89, column: 6)
!10264 = !DILocation(line: 89, column: 6, scope: !10258)
!10265 = !DILocation(line: 90, column: 3, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10263, file: !1142, line: 89, column: 17)
!10267 = !DILocation(line: 91, column: 2, scope: !10266)
!10268 = !DILocation(line: 92, column: 34, scope: !10258)
!10269 = !DILocation(line: 92, column: 2, scope: !10258)
!10270 = !DILocation(line: 94, column: 2, scope: !10258)
!10271 = distinct !DISubprogram(name: "uart_poll_out", scope: !10272, file: !10272, line: 95, type: !1115, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !10273)
!10272 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!10273 = !{!10274, !10275}
!10274 = !DILocalVariable(name: "dev", arg: 1, scope: !10271, file: !10272, line: 95, type: !1097)
!10275 = !DILocalVariable(name: "out_char", arg: 2, scope: !10271, file: !10272, line: 95, type: !170)
!10276 = !DILocation(line: 0, scope: !10271)
!10277 = !DILocation(line: 105, column: 2, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10271, file: !10272, line: 105, column: 2)
!10279 = !{i64 2154360718}
!10280 = !DILocation(line: 106, column: 2, scope: !10271)
!10281 = !DILocation(line: 107, column: 1, scope: !10271)
!10282 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1091, file: !1091, line: 574, type: !1115, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !10283)
!10283 = !{!10284, !10285, !10286}
!10284 = !DILocalVariable(name: "dev", arg: 1, scope: !10282, file: !1091, line: 574, type: !1097)
!10285 = !DILocalVariable(name: "out_char", arg: 2, scope: !10282, file: !1091, line: 575, type: !170)
!10286 = !DILocalVariable(name: "api", scope: !10282, file: !1091, line: 577, type: !1088)
!10287 = !DILocation(line: 0, scope: !10282)
!10288 = !DILocation(line: 578, column: 40, scope: !10282)
!10289 = !DILocation(line: 580, column: 7, scope: !10282)
!10290 = !DILocation(line: 580, column: 2, scope: !10282)
!10291 = !DILocation(line: 581, column: 1, scope: !10282)
!10292 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !481, file: !481, line: 730, type: !10244, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !10293)
!10293 = !{!10294}
!10294 = !DILocalVariable(name: "dev", arg: 1, scope: !10292, file: !481, line: 730, type: !1097)
!10295 = !DILocation(line: 0, scope: !10292)
!10296 = !DILocation(line: 732, column: 9, scope: !10292)
!10297 = !DILocation(line: 732, column: 2, scope: !10292)
!10298 = distinct !DISubprogram(name: "uart_register_input", scope: !1142, file: !1142, line: 560, type: !10299, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !10346)
!10299 = !DISubroutineType(types: !10300)
!10300 = !{null, !10301, !10301, !10343}
!10301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10302, size: 32)
!10302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !122, line: 2208, size: 160, elements: !10303)
!10303 = !{!10304}
!10304 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10302, file: !122, line: 2209, baseType: !10305, size: 160)
!10305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !122, line: 1709, size: 160, elements: !10306)
!10306 = !{!10307, !10320, !10324}
!10307 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10305, file: !122, line: 1710, baseType: !10308, size: 64)
!10308 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10309, line: 46, baseType: !10310)
!10309 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10309, line: 41, size: 64, elements: !10311)
!10311 = !{!10312, !10319}
!10312 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10310, file: !10309, line: 42, baseType: !10313, size: 32)
!10313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10314, size: 32)
!10314 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10309, line: 39, baseType: !10315)
!10315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10309, line: 35, size: 32, elements: !10316)
!10316 = !{!10317}
!10317 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10315, file: !10309, line: 36, baseType: !10318, size: 32)
!10318 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10309, line: 32, baseType: !113)
!10319 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10310, file: !10309, line: 43, baseType: !10313, size: 32, offset: 32)
!10320 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10305, file: !122, line: 1711, baseType: !10321, size: 32, offset: 64)
!10321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !10322)
!10322 = !{!10323}
!10323 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !10321, file: !236, line: 52, baseType: !22, size: 32)
!10324 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10305, file: !122, line: 1712, baseType: !10325, size: 64, offset: 96)
!10325 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !10326)
!10326 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !10327)
!10327 = !{!10328}
!10328 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10326, file: !163, line: 232, baseType: !10329, size: 64)
!10329 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !10330)
!10330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !10331)
!10331 = !{!10332, !10338}
!10332 = !DIDerivedType(tag: DW_TAG_member, scope: !10330, file: !137, line: 38, baseType: !10333, size: 32)
!10333 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10330, file: !137, line: 38, size: 32, elements: !10334)
!10334 = !{!10335, !10337}
!10335 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10333, file: !137, line: 39, baseType: !10336, size: 32)
!10336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10330, size: 32)
!10337 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10333, file: !137, line: 40, baseType: !10336, size: 32)
!10338 = !DIDerivedType(tag: DW_TAG_member, scope: !10330, file: !137, line: 42, baseType: !10339, size: 32, offset: 32)
!10339 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10330, file: !137, line: 42, size: 32, elements: !10340)
!10340 = !{!10341, !10342}
!10341 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10339, file: !137, line: 43, baseType: !10336, size: 32)
!10342 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10339, file: !137, line: 44, baseType: !10336, size: 32)
!10343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10344, size: 32)
!10344 = !DISubroutineType(types: !10345)
!10345 = !{!169, !102, !169}
!10346 = !{!10347, !10348, !10349}
!10347 = !DILocalVariable(name: "avail", arg: 1, scope: !10298, file: !1142, line: 560, type: !10301)
!10348 = !DILocalVariable(name: "lines", arg: 2, scope: !10298, file: !1142, line: 560, type: !10301)
!10349 = !DILocalVariable(name: "completion", arg: 3, scope: !10298, file: !1142, line: 561, type: !10343)
!10350 = !DILocation(line: 0, scope: !10298)
!10351 = !DILocation(line: 566, column: 1, scope: !10298)
!10352 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1320, file: !1320, line: 523, type: !1178, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10353)
!10353 = !{!10354, !10355, !10356, !10357, !10358}
!10354 = !DILocalVariable(name: "dev", arg: 1, scope: !10352, file: !1320, line: 523, type: !1180)
!10355 = !DILocalVariable(name: "pin", arg: 2, scope: !10352, file: !1320, line: 524, type: !1195)
!10356 = !DILocalVariable(name: "flags", arg: 3, scope: !10352, file: !1320, line: 524, type: !1196)
!10357 = !DILocalVariable(name: "err", scope: !10352, file: !1320, line: 526, type: !105)
!10358 = !DILocalVariable(name: "pincfg", scope: !10352, file: !1320, line: 527, type: !105)
!10359 = !DILocation(line: 0, scope: !10352)
!10360 = !DILocation(line: 527, column: 2, scope: !10352)
!10361 = !DILocation(line: 532, column: 8, scope: !10352)
!10362 = !DILocation(line: 533, column: 10, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10352, file: !1320, line: 533, column: 6)
!10364 = !DILocation(line: 533, column: 6, scope: !10352)
!10365 = !DILocation(line: 543, column: 13, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10352, file: !1320, line: 543, column: 6)
!10367 = !DILocation(line: 543, column: 28, scope: !10366)
!10368 = !DILocation(line: 543, column: 6, scope: !10352)
!10369 = !DILocation(line: 544, column: 14, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10371, file: !1320, line: 544, column: 7)
!10371 = distinct !DILexicalBlock(scope: !10366, file: !1320, line: 543, column: 34)
!10372 = !DILocation(line: 544, column: 39, scope: !10370)
!10373 = !DILocation(line: 544, column: 7, scope: !10371)
!10374 = !DILocation(line: 545, column: 38, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10370, file: !1320, line: 544, column: 45)
!10376 = !DILocation(line: 545, column: 4, scope: !10375)
!10377 = !DILocation(line: 546, column: 3, scope: !10375)
!10378 = !DILocation(line: 546, column: 21, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10370, file: !1320, line: 546, column: 14)
!10380 = !DILocation(line: 546, column: 45, scope: !10379)
!10381 = !DILocation(line: 546, column: 14, scope: !10370)
!10382 = !DILocation(line: 547, column: 40, scope: !10383)
!10383 = distinct !DILexicalBlock(scope: !10379, file: !1320, line: 546, column: 51)
!10384 = !DILocation(line: 547, column: 4, scope: !10383)
!10385 = !DILocation(line: 548, column: 3, scope: !10383)
!10386 = !DILocation(line: 551, column: 32, scope: !10352)
!10387 = !DILocation(line: 551, column: 37, scope: !10352)
!10388 = !DILocation(line: 551, column: 2, scope: !10352)
!10389 = !DILocation(line: 554, column: 6, scope: !10352)
!10390 = !DILocation(line: 562, column: 1, scope: !10352)
!10391 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1320, file: !1320, line: 410, type: !10392, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10394)
!10392 = !DISubroutineType(types: !10393)
!10393 = !{!105, !1180, !1007}
!10394 = !{!10395, !10396, !10397, !10399}
!10395 = !DILocalVariable(name: "dev", arg: 1, scope: !10391, file: !1320, line: 410, type: !1180)
!10396 = !DILocalVariable(name: "value", arg: 2, scope: !10391, file: !1320, line: 410, type: !1007)
!10397 = !DILocalVariable(name: "cfg", scope: !10391, file: !1320, line: 412, type: !10398)
!10398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 32)
!10399 = !DILocalVariable(name: "gpio", scope: !10391, file: !1320, line: 413, type: !1253)
!10400 = !DILocation(line: 0, scope: !10391)
!10401 = !DILocation(line: 412, column: 45, scope: !10391)
!10402 = !DILocation(line: 413, column: 44, scope: !10391)
!10403 = !DILocation(line: 415, column: 11, scope: !10391)
!10404 = !DILocation(line: 415, column: 9, scope: !10391)
!10405 = !DILocation(line: 417, column: 2, scope: !10391)
!10406 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1320, file: !1320, line: 420, type: !1205, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10407)
!10407 = !{!10408, !10409, !10410, !10411, !10412, !10413}
!10408 = !DILocalVariable(name: "dev", arg: 1, scope: !10406, file: !1320, line: 420, type: !1180)
!10409 = !DILocalVariable(name: "mask", arg: 2, scope: !10406, file: !1320, line: 421, type: !1207)
!10410 = !DILocalVariable(name: "value", arg: 3, scope: !10406, file: !1320, line: 422, type: !1202)
!10411 = !DILocalVariable(name: "cfg", scope: !10406, file: !1320, line: 424, type: !10398)
!10412 = !DILocalVariable(name: "gpio", scope: !10406, file: !1320, line: 425, type: !1253)
!10413 = !DILocalVariable(name: "port_value", scope: !10406, file: !1320, line: 426, type: !113)
!10414 = !DILocation(line: 0, scope: !10406)
!10415 = !DILocation(line: 424, column: 45, scope: !10406)
!10416 = !DILocation(line: 425, column: 44, scope: !10406)
!10417 = !DILocation(line: 430, column: 15, scope: !10406)
!10418 = !DILocation(line: 431, column: 46, scope: !10406)
!10419 = !DILocation(line: 431, column: 44, scope: !10406)
!10420 = !DILocation(line: 431, column: 61, scope: !10406)
!10421 = !DILocation(line: 431, column: 53, scope: !10406)
!10422 = !DILocation(line: 431, column: 2, scope: !10406)
!10423 = !DILocation(line: 435, column: 2, scope: !10406)
!10424 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1320, file: !1320, line: 438, type: !1210, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10425)
!10425 = !{!10426, !10427, !10428, !10429}
!10426 = !DILocalVariable(name: "dev", arg: 1, scope: !10424, file: !1320, line: 438, type: !1180)
!10427 = !DILocalVariable(name: "pins", arg: 2, scope: !10424, file: !1320, line: 439, type: !1207)
!10428 = !DILocalVariable(name: "cfg", scope: !10424, file: !1320, line: 441, type: !10398)
!10429 = !DILocalVariable(name: "gpio", scope: !10424, file: !1320, line: 442, type: !1253)
!10430 = !DILocation(line: 0, scope: !10424)
!10431 = !DILocation(line: 441, column: 45, scope: !10424)
!10432 = !DILocation(line: 442, column: 44, scope: !10424)
!10433 = !DILocation(line: 448, column: 2, scope: !10424)
!10434 = !DILocation(line: 450, column: 2, scope: !10424)
!10435 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1320, file: !1320, line: 453, type: !1210, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10436)
!10436 = !{!10437, !10438, !10439, !10440}
!10437 = !DILocalVariable(name: "dev", arg: 1, scope: !10435, file: !1320, line: 453, type: !1180)
!10438 = !DILocalVariable(name: "pins", arg: 2, scope: !10435, file: !1320, line: 454, type: !1207)
!10439 = !DILocalVariable(name: "cfg", scope: !10435, file: !1320, line: 456, type: !10398)
!10440 = !DILocalVariable(name: "gpio", scope: !10435, file: !1320, line: 457, type: !1253)
!10441 = !DILocation(line: 0, scope: !10435)
!10442 = !DILocation(line: 456, column: 45, scope: !10435)
!10443 = !DILocation(line: 457, column: 44, scope: !10435)
!10444 = !DILocation(line: 467, column: 2, scope: !10435)
!10445 = !DILocation(line: 470, column: 2, scope: !10435)
!10446 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1320, file: !1320, line: 473, type: !1210, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10447)
!10447 = !{!10448, !10449, !10450, !10451}
!10448 = !DILocalVariable(name: "dev", arg: 1, scope: !10446, file: !1320, line: 473, type: !1180)
!10449 = !DILocalVariable(name: "pins", arg: 2, scope: !10446, file: !1320, line: 474, type: !1207)
!10450 = !DILocalVariable(name: "cfg", scope: !10446, file: !1320, line: 476, type: !10398)
!10451 = !DILocalVariable(name: "gpio", scope: !10446, file: !1320, line: 477, type: !1253)
!10452 = !DILocation(line: 0, scope: !10446)
!10453 = !DILocation(line: 476, column: 45, scope: !10446)
!10454 = !DILocation(line: 477, column: 44, scope: !10446)
!10455 = !DILocation(line: 484, column: 2, scope: !10446)
!10456 = !DILocation(line: 487, column: 2, scope: !10446)
!10457 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1320, file: !1320, line: 594, type: !1216, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10458)
!10458 = !{!10459, !10460, !10461, !10462, !10463, !10464, !10466, !10467, !10468}
!10459 = !DILocalVariable(name: "dev", arg: 1, scope: !10457, file: !1320, line: 594, type: !1180)
!10460 = !DILocalVariable(name: "pin", arg: 2, scope: !10457, file: !1320, line: 595, type: !1195)
!10461 = !DILocalVariable(name: "mode", arg: 3, scope: !10457, file: !1320, line: 596, type: !1154)
!10462 = !DILocalVariable(name: "trig", arg: 4, scope: !10457, file: !1320, line: 597, type: !1160)
!10463 = !DILocalVariable(name: "cfg", scope: !10457, file: !1320, line: 599, type: !10398)
!10464 = !DILocalVariable(name: "data", scope: !10457, file: !1320, line: 600, type: !10465)
!10465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 32)
!10466 = !DILocalVariable(name: "edge", scope: !10457, file: !1320, line: 601, type: !105)
!10467 = !DILocalVariable(name: "err", scope: !10457, file: !1320, line: 602, type: !105)
!10468 = !DILabel(scope: !10457, name: "exit", file: !1320, line: 643)
!10469 = !DILocation(line: 0, scope: !10457)
!10470 = !DILocation(line: 599, column: 45, scope: !10457)
!10471 = !DILocation(line: 604, column: 6, scope: !10457)
!10472 = !DILocation(line: 605, column: 34, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10474, file: !1320, line: 605, column: 7)
!10474 = distinct !DILexicalBlock(scope: !10475, file: !1320, line: 604, column: 38)
!10475 = distinct !DILexicalBlock(scope: !10457, file: !1320, line: 604, column: 6)
!10476 = !DILocation(line: 605, column: 7, scope: !10473)
!10477 = !DILocation(line: 605, column: 47, scope: !10473)
!10478 = !DILocation(line: 605, column: 39, scope: !10473)
!10479 = !DILocation(line: 605, column: 7, scope: !10474)
!10480 = !DILocation(line: 606, column: 4, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10473, file: !1320, line: 605, column: 53)
!10482 = !DILocation(line: 607, column: 4, scope: !10481)
!10483 = !DILocation(line: 608, column: 4, scope: !10481)
!10484 = !DILocation(line: 609, column: 3, scope: !10481)
!10485 = !DILocation(line: 600, column: 38, scope: !10457)
!10486 = !DILocation(line: 620, column: 30, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10457, file: !1320, line: 620, column: 6)
!10488 = !DILocation(line: 620, column: 6, scope: !10487)
!10489 = !DILocation(line: 620, column: 57, scope: !10487)
!10490 = !DILocation(line: 620, column: 6, scope: !10457)
!10491 = !DILocation(line: 625, column: 29, scope: !10457)
!10492 = !DILocation(line: 625, column: 2, scope: !10457)
!10493 = !DILocation(line: 627, column: 2, scope: !10457)
!10494 = !DILocation(line: 630, column: 3, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10457, file: !1320, line: 627, column: 16)
!10496 = !DILocation(line: 633, column: 3, scope: !10495)
!10497 = !DILocation(line: 636, column: 3, scope: !10495)
!10498 = !DILocation(line: 639, column: 2, scope: !10457)
!10499 = !DILocation(line: 641, column: 2, scope: !10457)
!10500 = !DILocation(line: 643, column: 1, scope: !10457)
!10501 = !DILocation(line: 644, column: 2, scope: !10457)
!10502 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1320, file: !1320, line: 647, type: !1220, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10503)
!10503 = !{!10504, !10505, !10506, !10507}
!10504 = !DILocalVariable(name: "dev", arg: 1, scope: !10502, file: !1320, line: 647, type: !1180)
!10505 = !DILocalVariable(name: "callback", arg: 2, scope: !10502, file: !1320, line: 648, type: !1222)
!10506 = !DILocalVariable(name: "set", arg: 3, scope: !10502, file: !1320, line: 649, type: !492)
!10507 = !DILocalVariable(name: "data", scope: !10502, file: !1320, line: 651, type: !10465)
!10508 = !DILocation(line: 0, scope: !10502)
!10509 = !DILocation(line: 651, column: 38, scope: !10502)
!10510 = !DILocation(line: 653, column: 37, scope: !10502)
!10511 = !DILocation(line: 653, column: 9, scope: !10502)
!10512 = !DILocation(line: 653, column: 2, scope: !10502)
!10513 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10514, file: !10514, line: 38, type: !10515, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10518)
!10514 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10515 = !DISubroutineType(types: !10516)
!10516 = !{!105, !10517, !1222, !492}
!10517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 32)
!10518 = !{!10519, !10520, !10521}
!10519 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10513, file: !10514, line: 38, type: !10517)
!10520 = !DILocalVariable(name: "callback", arg: 2, scope: !10513, file: !10514, line: 39, type: !1222)
!10521 = !DILocalVariable(name: "set", arg: 3, scope: !10513, file: !10514, line: 40, type: !492)
!10522 = !DILocation(line: 0, scope: !10513)
!10523 = !DILocation(line: 42, column: 2, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10525, file: !10514, line: 42, column: 2)
!10525 = distinct !DILexicalBlock(scope: !10513, file: !10514, line: 42, column: 2)
!10526 = !DILocation(line: 42, column: 2, scope: !10525)
!10527 = !DILocation(line: 42, column: 2, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10524, file: !10514, line: 42, column: 2)
!10529 = !DILocation(line: 43, column: 2, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10531, file: !10514, line: 43, column: 2)
!10531 = distinct !DILexicalBlock(scope: !10513, file: !10514, line: 43, column: 2)
!10532 = !DILocation(line: 43, column: 2, scope: !10531)
!10533 = !DILocation(line: 43, column: 2, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10530, file: !10514, line: 43, column: 2)
!10535 = !DILocation(line: 45, column: 7, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10513, file: !10514, line: 45, column: 6)
!10537 = !DILocation(line: 45, column: 6, scope: !10513)
!10538 = !DILocation(line: 46, column: 56, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10540, file: !10514, line: 46, column: 7)
!10540 = distinct !DILexicalBlock(scope: !10536, file: !10514, line: 45, column: 38)
!10541 = !DILocation(line: 46, column: 8, scope: !10539)
!10542 = !DILocation(line: 46, column: 7, scope: !10540)
!10543 = !DILocation(line: 51, column: 13, scope: !10536)
!10544 = !DILocation(line: 56, column: 43, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10546, file: !10514, line: 55, column: 11)
!10546 = distinct !DILexicalBlock(scope: !10513, file: !10514, line: 55, column: 6)
!10547 = !DILocation(line: 56, column: 3, scope: !10545)
!10548 = !DILocation(line: 57, column: 2, scope: !10545)
!10549 = !DILocation(line: 60, column: 1, scope: !10513)
!10550 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1227, file: !1227, line: 261, type: !10551, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10553)
!10551 = !DISubroutineType(types: !10552)
!10552 = !{!492, !10517}
!10553 = !{!10554}
!10554 = !DILocalVariable(name: "list", arg: 1, scope: !10550, file: !1227, line: 261, type: !10517)
!10555 = !DILocation(line: 0, scope: !10550)
!10556 = !DILocation(line: 261, column: 1, scope: !10550)
!10557 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1227, file: !1227, line: 417, type: !10558, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10560)
!10558 = !DISubroutineType(types: !10559)
!10559 = !{!492, !10517, !1393}
!10560 = !{!10561, !10562, !10563, !10564}
!10561 = !DILocalVariable(name: "list", arg: 1, scope: !10557, file: !1227, line: 417, type: !10517)
!10562 = !DILocalVariable(name: "node", arg: 2, scope: !10557, file: !1227, line: 417, type: !1393)
!10563 = !DILocalVariable(name: "prev", scope: !10557, file: !1227, line: 417, type: !1393)
!10564 = !DILocalVariable(name: "test", scope: !10557, file: !1227, line: 417, type: !1393)
!10565 = !DILocation(line: 0, scope: !10557)
!10566 = !DILocation(line: 417, column: 1, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10557, file: !1227, line: 417, column: 1)
!10568 = !DILocation(line: 417, column: 1, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10567, file: !1227, line: 417, column: 1)
!10570 = !DILocation(line: 417, column: 1, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10572, file: !1227, line: 417, column: 1)
!10572 = distinct !DILexicalBlock(scope: !10569, file: !1227, line: 417, column: 1)
!10573 = !DILocation(line: 417, column: 1, scope: !10572)
!10574 = distinct !{!10574, !10566, !10566}
!10575 = !DILocation(line: 417, column: 1, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10571, file: !1227, line: 417, column: 1)
!10577 = !DILocation(line: 417, column: 1, scope: !10557)
!10578 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1227, file: !1227, line: 298, type: !10579, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10581)
!10579 = !DISubroutineType(types: !10580)
!10580 = !{null, !10517, !1393}
!10581 = !{!10582, !10583}
!10582 = !DILocalVariable(name: "list", arg: 1, scope: !10578, file: !1227, line: 298, type: !10517)
!10583 = !DILocalVariable(name: "node", arg: 2, scope: !10578, file: !1227, line: 298, type: !1393)
!10584 = !DILocation(line: 0, scope: !10578)
!10585 = !DILocation(line: 298, column: 1, scope: !10578)
!10586 = !DILocation(line: 298, column: 1, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10578, file: !1227, line: 298, column: 1)
!10588 = !DILocation(line: 298, column: 1, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10587, file: !1227, line: 298, column: 1)
!10590 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1227, file: !1227, line: 231, type: !10591, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10593)
!10591 = !DISubroutineType(types: !10592)
!10592 = !{!1393, !10517}
!10593 = !{!10594}
!10594 = !DILocalVariable(name: "list", arg: 1, scope: !10590, file: !1227, line: 231, type: !10517)
!10595 = !DILocation(line: 0, scope: !10590)
!10596 = !DILocation(line: 233, column: 15, scope: !10590)
!10597 = !DILocation(line: 233, column: 2, scope: !10590)
!10598 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1227, file: !1227, line: 209, type: !10599, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10601)
!10599 = !DISubroutineType(types: !10600)
!10600 = !{null, !1393, !1393}
!10601 = !{!10602, !10603}
!10602 = !DILocalVariable(name: "parent", arg: 1, scope: !10598, file: !1227, line: 209, type: !1393)
!10603 = !DILocalVariable(name: "child", arg: 2, scope: !10598, file: !1227, line: 209, type: !1393)
!10604 = !DILocation(line: 0, scope: !10598)
!10605 = !DILocation(line: 211, column: 10, scope: !10598)
!10606 = !DILocation(line: 211, column: 15, scope: !10598)
!10607 = !DILocation(line: 212, column: 1, scope: !10598)
!10608 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1227, file: !1227, line: 214, type: !10579, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10609)
!10609 = !{!10610, !10611}
!10610 = !DILocalVariable(name: "list", arg: 1, scope: !10608, file: !1227, line: 214, type: !10517)
!10611 = !DILocalVariable(name: "node", arg: 2, scope: !10608, file: !1227, line: 214, type: !1393)
!10612 = !DILocation(line: 0, scope: !10608)
!10613 = !DILocation(line: 216, column: 8, scope: !10608)
!10614 = !DILocation(line: 216, column: 13, scope: !10608)
!10615 = !DILocation(line: 217, column: 1, scope: !10608)
!10616 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1227, file: !1227, line: 243, type: !10591, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10617)
!10617 = !{!10618}
!10618 = !DILocalVariable(name: "list", arg: 1, scope: !10616, file: !1227, line: 243, type: !10517)
!10619 = !DILocation(line: 0, scope: !10616)
!10620 = !DILocation(line: 245, column: 15, scope: !10616)
!10621 = !DILocation(line: 245, column: 2, scope: !10616)
!10622 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1227, file: !1227, line: 219, type: !10579, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10623)
!10623 = !{!10624, !10625}
!10624 = !DILocalVariable(name: "list", arg: 1, scope: !10622, file: !1227, line: 219, type: !10517)
!10625 = !DILocalVariable(name: "node", arg: 2, scope: !10622, file: !1227, line: 219, type: !1393)
!10626 = !DILocation(line: 0, scope: !10622)
!10627 = !DILocation(line: 221, column: 8, scope: !10622)
!10628 = !DILocation(line: 221, column: 13, scope: !10622)
!10629 = !DILocation(line: 222, column: 1, scope: !10622)
!10630 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1227, file: !1227, line: 401, type: !10631, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10633)
!10631 = !DISubroutineType(types: !10632)
!10632 = !{null, !10517, !1393, !1393}
!10633 = !{!10634, !10635, !10636}
!10634 = !DILocalVariable(name: "list", arg: 1, scope: !10630, file: !1227, line: 401, type: !10517)
!10635 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10630, file: !1227, line: 401, type: !1393)
!10636 = !DILocalVariable(name: "node", arg: 3, scope: !10630, file: !1227, line: 401, type: !1393)
!10637 = !DILocation(line: 0, scope: !10630)
!10638 = !DILocation(line: 401, column: 1, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10630, file: !1227, line: 401, column: 1)
!10640 = !DILocation(line: 0, scope: !10639)
!10641 = !DILocation(line: 401, column: 1, scope: !10630)
!10642 = !DILocation(line: 401, column: 1, scope: !10643)
!10643 = distinct !DILexicalBlock(scope: !10639, file: !1227, line: 401, column: 1)
!10644 = !DILocation(line: 401, column: 1, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10643, file: !1227, line: 401, column: 1)
!10646 = !DILocation(line: 401, column: 1, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10645, file: !1227, line: 401, column: 1)
!10648 = !DILocation(line: 401, column: 1, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10639, file: !1227, line: 401, column: 1)
!10650 = !DILocation(line: 401, column: 1, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10649, file: !1227, line: 401, column: 1)
!10652 = !DILocation(line: 401, column: 1, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10651, file: !1227, line: 401, column: 1)
!10654 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1227, file: !1227, line: 285, type: !10655, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10657)
!10655 = !DISubroutineType(types: !10656)
!10656 = !{!1393, !1393}
!10657 = !{!10658}
!10658 = !DILocalVariable(name: "node", arg: 1, scope: !10654, file: !1227, line: 285, type: !1393)
!10659 = !DILocation(line: 0, scope: !10654)
!10660 = !DILocation(line: 285, column: 1, scope: !10654)
!10661 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1227, file: !1227, line: 274, type: !10655, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10662)
!10662 = !{!10663}
!10663 = !DILocalVariable(name: "node", arg: 1, scope: !10661, file: !1227, line: 274, type: !1393)
!10664 = !DILocation(line: 0, scope: !10661)
!10665 = !DILocation(line: 274, column: 1, scope: !10661)
!10666 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1227, file: !1227, line: 204, type: !10655, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10667)
!10667 = !{!10668}
!10668 = !DILocalVariable(name: "node", arg: 1, scope: !10666, file: !1227, line: 204, type: !1393)
!10669 = !DILocation(line: 0, scope: !10666)
!10670 = !DILocation(line: 206, column: 15, scope: !10666)
!10671 = !DILocation(line: 206, column: 2, scope: !10666)
!10672 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1320, file: !1320, line: 342, type: !448, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10673)
!10673 = !{!10674, !10675, !10676}
!10674 = !DILocalVariable(name: "pin", arg: 1, scope: !10672, file: !1320, line: 342, type: !105)
!10675 = !DILocalVariable(name: "line", scope: !10672, file: !1320, line: 344, type: !113)
!10676 = !DILocalVariable(name: "port", scope: !10672, file: !1320, line: 345, type: !105)
!10677 = !DILocation(line: 0, scope: !10672)
!10678 = !DILocation(line: 344, column: 18, scope: !10672)
!10679 = !{i32 983040, i32 0}
!10680 = !DILocation(line: 356, column: 9, scope: !10672)
!10681 = !DILocation(line: 370, column: 2, scope: !10672)
!10682 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1320, file: !1320, line: 37, type: !870, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10683)
!10683 = !{!10684, !10685, !10686}
!10684 = !DILocalVariable(name: "line", arg: 1, scope: !10682, file: !1320, line: 37, type: !105)
!10685 = !DILocalVariable(name: "arg", arg: 2, scope: !10682, file: !1320, line: 37, type: !104)
!10686 = !DILocalVariable(name: "data", scope: !10682, file: !1320, line: 39, type: !10465)
!10687 = !DILocation(line: 0, scope: !10682)
!10688 = !DILocation(line: 41, column: 29, scope: !10682)
!10689 = !DILocation(line: 41, column: 39, scope: !10682)
!10690 = !DILocation(line: 41, column: 44, scope: !10682)
!10691 = !DILocation(line: 41, column: 2, scope: !10682)
!10692 = !DILocation(line: 42, column: 1, scope: !10682)
!10693 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1320, file: !1320, line: 376, type: !10694, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10696)
!10694 = !DISubroutineType(types: !10695)
!10695 = !{!105, !105, !105}
!10696 = !{!10697, !10698, !10699, !10701, !10702}
!10697 = !DILocalVariable(name: "port", arg: 1, scope: !10693, file: !1320, line: 376, type: !105)
!10698 = !DILocalVariable(name: "pin", arg: 2, scope: !10693, file: !1320, line: 376, type: !105)
!10699 = !DILocalVariable(name: "clk", scope: !10693, file: !1320, line: 386, type: !10700)
!10700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1180)
!10701 = !DILocalVariable(name: "pclken", scope: !10693, file: !1320, line: 387, type: !1436)
!10702 = !DILocalVariable(name: "ret", scope: !10693, file: !1320, line: 396, type: !105)
!10703 = !DILocation(line: 0, scope: !10693)
!10704 = !DILocation(line: 387, column: 2, scope: !10693)
!10705 = !DILocation(line: 387, column: 22, scope: !10693)
!10706 = !DILocation(line: 399, column: 8, scope: !10693)
!10707 = !DILocation(line: 400, column: 10, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10693, file: !1320, line: 400, column: 6)
!10709 = !DILocation(line: 400, column: 6, scope: !10693)
!10710 = !DILocation(line: 405, column: 2, scope: !10693)
!10711 = !DILocation(line: 407, column: 2, scope: !10693)
!10712 = !DILocation(line: 408, column: 1, scope: !10693)
!10713 = distinct !DISubprogram(name: "clock_control_on", scope: !956, file: !956, line: 123, type: !1285, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10714)
!10714 = !{!10715, !10716, !10717}
!10715 = !DILocalVariable(name: "dev", arg: 1, scope: !10713, file: !956, line: 123, type: !1180)
!10716 = !DILocalVariable(name: "sys", arg: 2, scope: !10713, file: !956, line: 124, type: !1051)
!10717 = !DILocalVariable(name: "api", scope: !10713, file: !956, line: 126, type: !1278)
!10718 = !DILocation(line: 0, scope: !10713)
!10719 = !DILocation(line: 127, column: 49, scope: !10713)
!10720 = !DILocation(line: 129, column: 14, scope: !10713)
!10721 = !DILocation(line: 129, column: 9, scope: !10713)
!10722 = !DILocation(line: 129, column: 2, scope: !10713)
!10723 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1320, file: !1320, line: 311, type: !9842, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10724)
!10724 = !{!10725, !10726, !10727}
!10725 = !DILocalVariable(name: "port", arg: 1, scope: !10723, file: !1320, line: 311, type: !105)
!10726 = !DILocalVariable(name: "pin", arg: 2, scope: !10723, file: !1320, line: 311, type: !105)
!10727 = !DILocalVariable(name: "line", scope: !10723, file: !1320, line: 313, type: !113)
!10728 = !DILocation(line: 0, scope: !10723)
!10729 = !DILocation(line: 313, column: 18, scope: !10723)
!10730 = !DILocation(line: 337, column: 2, scope: !10723)
!10731 = !DILocation(line: 340, column: 1, scope: !10723)
!10732 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1320, file: !1320, line: 295, type: !10733, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10735)
!10733 = !DISubroutineType(types: !10734)
!10734 = !{!113, !105}
!10735 = !{!10736}
!10736 = !DILocalVariable(name: "pin", arg: 1, scope: !10732, file: !1320, line: 295, type: !105)
!10737 = !DILocation(line: 0, scope: !10732)
!10738 = !DILocation(line: 307, column: 46, scope: !10732)
!10739 = !DILocation(line: 307, column: 27, scope: !10732)
!10740 = !DILocation(line: 307, column: 32, scope: !10732)
!10741 = !DILocation(line: 307, column: 14, scope: !10732)
!10742 = !DILocation(line: 307, column: 39, scope: !10732)
!10743 = !DILocation(line: 307, column: 2, scope: !10732)
!10744 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !7454, file: !7454, line: 671, type: !10745, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10747)
!10745 = !DISubroutineType(types: !10746)
!10746 = !{null, !113, !113}
!10747 = !{!10748, !10749}
!10748 = !DILocalVariable(name: "Port", arg: 1, scope: !10744, file: !7454, line: 671, type: !113)
!10749 = !DILocalVariable(name: "Line", arg: 2, scope: !10744, file: !7454, line: 671, type: !113)
!10750 = !DILocation(line: 0, scope: !10744)
!10751 = !DILocation(line: 673, column: 3, scope: !10744)
!10752 = !DILocalVariable(name: "value", arg: 1, scope: !10753, file: !7751, line: 373, type: !113)
!10753 = distinct !DISubprogram(name: "__RBIT", scope: !7751, file: !7751, line: 373, type: !9032, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10754)
!10754 = !{!10752, !10755}
!10755 = !DILocalVariable(name: "result", scope: !10753, file: !7751, line: 375, type: !113)
!10756 = !DILocation(line: 0, scope: !10753, inlinedAt: !10757)
!10757 = distinct !DILocation(line: 673, column: 3, scope: !10744)
!10758 = !DILocation(line: 380, column: 4, scope: !10753, inlinedAt: !10757)
!10759 = !{i64 2835361}
!10760 = !DILocalVariable(name: "value", arg: 1, scope: !10761, file: !7751, line: 403, type: !113)
!10761 = distinct !DISubprogram(name: "__CLZ", scope: !7751, file: !7751, line: 403, type: !10762, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10764)
!10762 = !DISubroutineType(types: !10763)
!10763 = !{!169, !113}
!10764 = !{!10760}
!10765 = !DILocation(line: 0, scope: !10761, inlinedAt: !10766)
!10766 = distinct !DILocation(line: 673, column: 3, scope: !10744)
!10767 = !DILocation(line: 414, column: 7, scope: !10761, inlinedAt: !10766)
!10768 = !DILocation(line: 674, column: 1, scope: !10744)
!10769 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10514, file: !10514, line: 69, type: !10770, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10772)
!10770 = !DISubroutineType(types: !10771)
!10771 = !{null, !10517, !1180, !113}
!10772 = !{!10773, !10774, !10775, !10776, !10777}
!10773 = !DILocalVariable(name: "list", arg: 1, scope: !10769, file: !10514, line: 69, type: !10517)
!10774 = !DILocalVariable(name: "port", arg: 2, scope: !10769, file: !10514, line: 70, type: !1180)
!10775 = !DILocalVariable(name: "pins", arg: 3, scope: !10769, file: !10514, line: 71, type: !113)
!10776 = !DILocalVariable(name: "cb", scope: !10769, file: !10514, line: 73, type: !1222)
!10777 = !DILocalVariable(name: "tmp", scope: !10769, file: !10514, line: 73, type: !1222)
!10778 = !DILocation(line: 0, scope: !10769)
!10779 = !DILocation(line: 75, column: 2, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10769, file: !10514, line: 75, column: 2)
!10781 = !DILocation(line: 0, scope: !10780)
!10782 = !DILocation(line: 76, column: 11, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10784, file: !10514, line: 76, column: 7)
!10784 = distinct !DILexicalBlock(scope: !10785, file: !10514, line: 75, column: 57)
!10785 = distinct !DILexicalBlock(scope: !10780, file: !10514, line: 75, column: 2)
!10786 = !DILocation(line: 76, column: 20, scope: !10783)
!10787 = !DILocation(line: 76, column: 7, scope: !10784)
!10788 = !DILocation(line: 77, column: 4, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10790, file: !10514, line: 77, column: 4)
!10790 = distinct !DILexicalBlock(scope: !10791, file: !10514, line: 77, column: 4)
!10791 = distinct !DILexicalBlock(scope: !10783, file: !10514, line: 76, column: 28)
!10792 = !DILocation(line: 77, column: 4, scope: !10790)
!10793 = !DILocation(line: 77, column: 4, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10789, file: !10514, line: 77, column: 4)
!10795 = !DILocation(line: 78, column: 4, scope: !10791)
!10796 = !DILocation(line: 79, column: 3, scope: !10791)
!10797 = !DILocation(line: 75, column: 2, scope: !10785)
!10798 = !DILocation(line: 81, column: 1, scope: !10769)
!10799 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !7454, file: !7454, line: 710, type: !9032, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10800)
!10800 = !{!10801}
!10801 = !DILocalVariable(name: "Line", arg: 1, scope: !10799, file: !7454, line: 710, type: !113)
!10802 = !DILocation(line: 0, scope: !10799)
!10803 = !DILocation(line: 712, column: 21, scope: !10799)
!10804 = !DILocation(line: 0, scope: !10753, inlinedAt: !10805)
!10805 = distinct !DILocation(line: 712, column: 76, scope: !10799)
!10806 = !DILocation(line: 380, column: 4, scope: !10753, inlinedAt: !10805)
!10807 = !DILocation(line: 0, scope: !10761, inlinedAt: !10808)
!10808 = distinct !DILocation(line: 712, column: 76, scope: !10799)
!10809 = !DILocation(line: 414, column: 7, scope: !10761, inlinedAt: !10808)
!10810 = !DILocation(line: 712, column: 73, scope: !10799)
!10811 = !DILocation(line: 712, column: 3, scope: !10799)
!10812 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10813, file: !10813, line: 910, type: !10814, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10816)
!10813 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10814 = !DISubroutineType(types: !10815)
!10815 = !{null, !1253, !113}
!10816 = !{!10817, !10818}
!10817 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10812, file: !10813, line: 910, type: !1253)
!10818 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10812, file: !10813, line: 910, type: !113)
!10819 = !DILocation(line: 0, scope: !10812)
!10820 = !DILocation(line: 912, column: 3, scope: !10812)
!10821 = !DILocation(line: 913, column: 1, scope: !10812)
!10822 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10813, file: !10813, line: 823, type: !10823, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10825)
!10823 = !DISubroutineType(types: !10824)
!10824 = !{!113, !1253}
!10825 = !{!10826}
!10826 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10822, file: !10813, line: 823, type: !1253)
!10827 = !DILocation(line: 0, scope: !10822)
!10828 = !DILocation(line: 825, column: 21, scope: !10822)
!10829 = !DILocation(line: 825, column: 3, scope: !10822)
!10830 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10813, file: !10813, line: 812, type: !10814, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10831)
!10831 = !{!10832, !10833}
!10832 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10830, file: !10813, line: 812, type: !1253)
!10833 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10830, file: !10813, line: 812, type: !113)
!10834 = !DILocation(line: 0, scope: !10830)
!10835 = !DILocation(line: 814, column: 3, scope: !10830)
!10836 = !DILocation(line: 815, column: 1, scope: !10830)
!10837 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10813, file: !10813, line: 771, type: !10823, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10838)
!10838 = !{!10839}
!10839 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10837, file: !10813, line: 771, type: !1253)
!10840 = !DILocation(line: 0, scope: !10837)
!10841 = !DILocation(line: 773, column: 21, scope: !10837)
!10842 = !DILocation(line: 773, column: 3, scope: !10837)
!10843 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1320, file: !1320, line: 47, type: !10844, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10846)
!10844 = !DISubroutineType(types: !10845)
!10845 = !{!105, !1196, !428}
!10846 = !{!10847, !10848}
!10847 = !DILocalVariable(name: "flags", arg: 1, scope: !10843, file: !1320, line: 47, type: !1196)
!10848 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10843, file: !1320, line: 47, type: !428)
!10849 = !DILocation(line: 0, scope: !10843)
!10850 = !DILocation(line: 50, column: 13, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10843, file: !1320, line: 50, column: 6)
!10852 = !DILocation(line: 50, column: 28, scope: !10851)
!10853 = !DILocation(line: 50, column: 6, scope: !10843)
!10854 = !DILocation(line: 53, column: 11, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10851, file: !1320, line: 50, column: 34)
!10856 = !DILocation(line: 55, column: 14, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10855, file: !1320, line: 55, column: 7)
!10858 = !DILocation(line: 55, column: 35, scope: !10857)
!10859 = !DILocation(line: 55, column: 7, scope: !10855)
!10860 = !DILocation(line: 56, column: 14, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10862, file: !1320, line: 56, column: 8)
!10862 = distinct !DILexicalBlock(scope: !10857, file: !1320, line: 55, column: 41)
!10863 = !DILocation(line: 56, column: 8, scope: !10862)
!10864 = !DILocation(line: 0, scope: !10857)
!10865 = !DILocation(line: 66, column: 14, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10855, file: !1320, line: 66, column: 7)
!10867 = !DILocation(line: 66, column: 30, scope: !10866)
!10868 = !DILocation(line: 66, column: 7, scope: !10855)
!10869 = !DILocation(line: 67, column: 12, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10866, file: !1320, line: 66, column: 36)
!10871 = !DILocation(line: 68, column: 3, scope: !10870)
!10872 = !DILocation(line: 68, column: 21, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10866, file: !1320, line: 68, column: 14)
!10874 = !DILocation(line: 68, column: 39, scope: !10873)
!10875 = !DILocation(line: 68, column: 14, scope: !10866)
!10876 = !DILocation(line: 69, column: 12, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10873, file: !1320, line: 68, column: 45)
!10878 = !DILocation(line: 70, column: 3, scope: !10877)
!10879 = !DILocation(line: 72, column: 21, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10851, file: !1320, line: 72, column: 14)
!10881 = !DILocation(line: 72, column: 35, scope: !10880)
!10882 = !DILocation(line: 72, column: 14, scope: !10851)
!10883 = !DILocation(line: 77, column: 14, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10885, file: !1320, line: 77, column: 7)
!10885 = distinct !DILexicalBlock(scope: !10880, file: !1320, line: 72, column: 41)
!10886 = !DILocation(line: 77, column: 30, scope: !10884)
!10887 = !DILocation(line: 77, column: 7, scope: !10885)
!10888 = !DILocation(line: 0, scope: !10851)
!10889 = !DILocation(line: 90, column: 1, scope: !10843)
!10890 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1320, file: !1320, line: 157, type: !10891, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10893)
!10891 = !DISubroutineType(types: !10892)
!10892 = !{null, !1180, !105, !105, !105}
!10893 = !{!10894, !10895, !10896, !10897, !10898, !10899, !10900, !10901, !10902, !10903, !10904}
!10894 = !DILocalVariable(name: "dev", arg: 1, scope: !10890, file: !1320, line: 157, type: !1180)
!10895 = !DILocalVariable(name: "pin", arg: 2, scope: !10890, file: !1320, line: 157, type: !105)
!10896 = !DILocalVariable(name: "conf", arg: 3, scope: !10890, file: !1320, line: 158, type: !105)
!10897 = !DILocalVariable(name: "func", arg: 4, scope: !10890, file: !1320, line: 158, type: !105)
!10898 = !DILocalVariable(name: "cfg", scope: !10890, file: !1320, line: 160, type: !10398)
!10899 = !DILocalVariable(name: "gpio", scope: !10890, file: !1320, line: 161, type: !1253)
!10900 = !DILocalVariable(name: "pin_ll", scope: !10890, file: !1320, line: 163, type: !105)
!10901 = !DILocalVariable(name: "mode", scope: !10890, file: !1320, line: 227, type: !32)
!10902 = !DILocalVariable(name: "otype", scope: !10890, file: !1320, line: 227, type: !32)
!10903 = !DILocalVariable(name: "ospeed", scope: !10890, file: !1320, line: 227, type: !32)
!10904 = !DILocalVariable(name: "pupd", scope: !10890, file: !1320, line: 227, type: !32)
!10905 = !DILocation(line: 0, scope: !10890)
!10906 = !DILocation(line: 160, column: 45, scope: !10890)
!10907 = !DILocation(line: 161, column: 44, scope: !10890)
!10908 = !DILocation(line: 163, column: 15, scope: !10890)
!10909 = !DILocation(line: 229, column: 14, scope: !10890)
!10910 = !DILocation(line: 246, column: 47, scope: !10890)
!10911 = !DILocation(line: 246, column: 2, scope: !10890)
!10912 = !DILocation(line: 248, column: 43, scope: !10890)
!10913 = !DILocation(line: 248, column: 2, scope: !10890)
!10914 = !DILocation(line: 250, column: 40, scope: !10890)
!10915 = !DILocation(line: 250, column: 2, scope: !10890)
!10916 = !DILocation(line: 252, column: 11, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10890, file: !1320, line: 252, column: 6)
!10918 = !DILocation(line: 252, column: 6, scope: !10890)
!10919 = !DILocation(line: 253, column: 11, scope: !10920)
!10920 = distinct !DILexicalBlock(scope: !10921, file: !1320, line: 253, column: 7)
!10921 = distinct !DILexicalBlock(scope: !10917, file: !1320, line: 252, column: 36)
!10922 = !DILocation(line: 253, column: 7, scope: !10921)
!10923 = !DILocation(line: 254, column: 4, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10920, file: !1320, line: 253, column: 16)
!10925 = !DILocation(line: 255, column: 3, scope: !10924)
!10926 = !DILocation(line: 256, column: 4, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10920, file: !1320, line: 255, column: 10)
!10928 = !DILocation(line: 260, column: 40, scope: !10890)
!10929 = !DILocation(line: 260, column: 2, scope: !10890)
!10930 = !DILocation(line: 265, column: 1, scope: !10890)
!10931 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1320, file: !1320, line: 137, type: !10733, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10932)
!10932 = !{!10933, !10934}
!10933 = !DILocalVariable(name: "pin", arg: 1, scope: !10931, file: !1320, line: 137, type: !105)
!10934 = !DILocalVariable(name: "pinval", scope: !10931, file: !1320, line: 139, type: !113)
!10935 = !DILocation(line: 0, scope: !10931)
!10936 = !DILocation(line: 149, column: 13, scope: !10931)
!10937 = !DILocation(line: 151, column: 2, scope: !10931)
!10938 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10813, file: !10813, line: 342, type: !10939, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10941)
!10939 = !DISubroutineType(types: !10940)
!10940 = !{null, !1253, !113, !113}
!10941 = !{!10942, !10943, !10944}
!10942 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10938, file: !10813, line: 342, type: !1253)
!10943 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10938, file: !10813, line: 342, type: !113)
!10944 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10938, file: !10813, line: 342, type: !113)
!10945 = !DILocation(line: 0, scope: !10938)
!10946 = !DILocation(line: 344, column: 3, scope: !10938)
!10947 = !DILocation(line: 345, column: 1, scope: !10938)
!10948 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10813, file: !10813, line: 413, type: !10939, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10949)
!10949 = !{!10950, !10951, !10952}
!10950 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10948, file: !10813, line: 413, type: !1253)
!10951 = !DILocalVariable(name: "Pin", arg: 2, scope: !10948, file: !10813, line: 413, type: !113)
!10952 = !DILocalVariable(name: "Speed", arg: 3, scope: !10948, file: !10813, line: 413, type: !113)
!10953 = !DILocation(line: 0, scope: !10948)
!10954 = !DILocation(line: 415, column: 3, scope: !10948)
!10955 = !DILocation(line: 0, scope: !10753, inlinedAt: !10956)
!10956 = distinct !DILocation(line: 415, column: 3, scope: !10948)
!10957 = !DILocation(line: 380, column: 4, scope: !10753, inlinedAt: !10956)
!10958 = !DILocation(line: 0, scope: !10761, inlinedAt: !10959)
!10959 = distinct !DILocation(line: 415, column: 3, scope: !10948)
!10960 = !DILocation(line: 414, column: 7, scope: !10761, inlinedAt: !10959)
!10961 = !DILocation(line: 0, scope: !10753, inlinedAt: !10962)
!10962 = distinct !DILocation(line: 415, column: 3, scope: !10948)
!10963 = !DILocation(line: 0, scope: !10761, inlinedAt: !10964)
!10964 = distinct !DILocation(line: 415, column: 3, scope: !10948)
!10965 = !DILocation(line: 417, column: 1, scope: !10948)
!10966 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10813, file: !10813, line: 484, type: !10939, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10967)
!10967 = !{!10968, !10969, !10970}
!10968 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10966, file: !10813, line: 484, type: !1253)
!10969 = !DILocalVariable(name: "Pin", arg: 2, scope: !10966, file: !10813, line: 484, type: !113)
!10970 = !DILocalVariable(name: "Pull", arg: 3, scope: !10966, file: !10813, line: 484, type: !113)
!10971 = !DILocation(line: 0, scope: !10966)
!10972 = !DILocation(line: 486, column: 3, scope: !10966)
!10973 = !DILocation(line: 0, scope: !10753, inlinedAt: !10974)
!10974 = distinct !DILocation(line: 486, column: 3, scope: !10966)
!10975 = !DILocation(line: 380, column: 4, scope: !10753, inlinedAt: !10974)
!10976 = !DILocation(line: 0, scope: !10761, inlinedAt: !10977)
!10977 = distinct !DILocation(line: 486, column: 3, scope: !10966)
!10978 = !DILocation(line: 414, column: 7, scope: !10761, inlinedAt: !10977)
!10979 = !DILocation(line: 0, scope: !10753, inlinedAt: !10980)
!10980 = distinct !DILocation(line: 486, column: 3, scope: !10966)
!10981 = !DILocation(line: 0, scope: !10761, inlinedAt: !10982)
!10982 = distinct !DILocation(line: 486, column: 3, scope: !10966)
!10983 = !DILocation(line: 487, column: 1, scope: !10966)
!10984 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10813, file: !10813, line: 556, type: !10939, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !10985)
!10985 = !{!10986, !10987, !10988}
!10986 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10984, file: !10813, line: 556, type: !1253)
!10987 = !DILocalVariable(name: "Pin", arg: 2, scope: !10984, file: !10813, line: 556, type: !113)
!10988 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10984, file: !10813, line: 556, type: !113)
!10989 = !DILocation(line: 0, scope: !10984)
!10990 = !DILocation(line: 558, column: 3, scope: !10984)
!10991 = !DILocation(line: 0, scope: !10753, inlinedAt: !10992)
!10992 = distinct !DILocation(line: 558, column: 3, scope: !10984)
!10993 = !DILocation(line: 380, column: 4, scope: !10753, inlinedAt: !10992)
!10994 = !DILocation(line: 0, scope: !10761, inlinedAt: !10995)
!10995 = distinct !DILocation(line: 558, column: 3, scope: !10984)
!10996 = !DILocation(line: 414, column: 7, scope: !10761, inlinedAt: !10995)
!10997 = !DILocation(line: 0, scope: !10753, inlinedAt: !10998)
!10998 = distinct !DILocation(line: 558, column: 3, scope: !10984)
!10999 = !DILocation(line: 0, scope: !10761, inlinedAt: !11000)
!11000 = distinct !DILocation(line: 558, column: 3, scope: !10984)
!11001 = !DILocation(line: 560, column: 1, scope: !10984)
!11002 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10813, file: !10813, line: 633, type: !10939, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !11003)
!11003 = !{!11004, !11005, !11006}
!11004 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11002, file: !10813, line: 633, type: !1253)
!11005 = !DILocalVariable(name: "Pin", arg: 2, scope: !11002, file: !10813, line: 633, type: !113)
!11006 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11002, file: !10813, line: 633, type: !113)
!11007 = !DILocation(line: 0, scope: !11002)
!11008 = !DILocation(line: 635, column: 3, scope: !11002)
!11009 = !DILocation(line: 0, scope: !10753, inlinedAt: !11010)
!11010 = distinct !DILocation(line: 635, column: 3, scope: !11002)
!11011 = !DILocation(line: 380, column: 4, scope: !10753, inlinedAt: !11010)
!11012 = !DILocation(line: 0, scope: !10761, inlinedAt: !11013)
!11013 = distinct !DILocation(line: 635, column: 3, scope: !11002)
!11014 = !DILocation(line: 414, column: 7, scope: !10761, inlinedAt: !11013)
!11015 = !DILocation(line: 0, scope: !10753, inlinedAt: !11016)
!11016 = distinct !DILocation(line: 635, column: 3, scope: !11002)
!11017 = !DILocation(line: 0, scope: !10761, inlinedAt: !11018)
!11018 = distinct !DILocation(line: 635, column: 3, scope: !11002)
!11019 = !DILocation(line: 637, column: 1, scope: !11002)
!11020 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10813, file: !10813, line: 273, type: !10939, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !11021)
!11021 = !{!11022, !11023, !11024}
!11022 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11020, file: !10813, line: 273, type: !1253)
!11023 = !DILocalVariable(name: "Pin", arg: 2, scope: !11020, file: !10813, line: 273, type: !113)
!11024 = !DILocalVariable(name: "Mode", arg: 3, scope: !11020, file: !10813, line: 273, type: !113)
!11025 = !DILocation(line: 0, scope: !11020)
!11026 = !DILocation(line: 275, column: 3, scope: !11020)
!11027 = !DILocation(line: 0, scope: !10753, inlinedAt: !11028)
!11028 = distinct !DILocation(line: 275, column: 3, scope: !11020)
!11029 = !DILocation(line: 380, column: 4, scope: !10753, inlinedAt: !11028)
!11030 = !DILocation(line: 0, scope: !10761, inlinedAt: !11031)
!11031 = distinct !DILocation(line: 275, column: 3, scope: !11020)
!11032 = !DILocation(line: 414, column: 7, scope: !10761, inlinedAt: !11031)
!11033 = !DILocation(line: 0, scope: !10753, inlinedAt: !11034)
!11034 = distinct !DILocation(line: 275, column: 3, scope: !11020)
!11035 = !DILocation(line: 0, scope: !10761, inlinedAt: !11036)
!11036 = distinct !DILocation(line: 275, column: 3, scope: !11020)
!11037 = !DILocation(line: 276, column: 1, scope: !11020)
!11038 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1320, file: !1320, line: 698, type: !1333, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !11039)
!11039 = !{!11040, !11041, !11042}
!11040 = !DILocalVariable(name: "dev", arg: 1, scope: !11038, file: !1320, line: 698, type: !1180)
!11041 = !DILocalVariable(name: "data", scope: !11038, file: !1320, line: 700, type: !10465)
!11042 = !DILocalVariable(name: "ret", scope: !11038, file: !1320, line: 701, type: !105)
!11043 = !DILocation(line: 0, scope: !11038)
!11044 = !DILocation(line: 700, column: 38, scope: !11038)
!11045 = !DILocation(line: 703, column: 8, scope: !11038)
!11046 = !DILocation(line: 703, column: 12, scope: !11038)
!11047 = !DILocation(line: 705, column: 7, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !11038, file: !1320, line: 705, column: 6)
!11049 = !DILocation(line: 705, column: 6, scope: !11038)
!11050 = !DILocation(line: 722, column: 8, scope: !11038)
!11051 = !DILocation(line: 723, column: 10, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !11038, file: !1320, line: 723, column: 6)
!11053 = !DILocation(line: 723, column: 6, scope: !11038)
!11054 = !DILocation(line: 731, column: 1, scope: !11038)
!11055 = distinct !DISubprogram(name: "device_is_ready", scope: !10243, file: !10243, line: 47, type: !11056, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !11058)
!11056 = !DISubroutineType(types: !11057)
!11057 = !{!492, !1180}
!11058 = !{!11059}
!11059 = !DILocalVariable(name: "dev", arg: 1, scope: !11055, file: !10243, line: 47, type: !1180)
!11060 = !DILocation(line: 0, scope: !11055)
!11061 = !DILocation(line: 55, column: 2, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11055, file: !10243, line: 55, column: 2)
!11063 = !{i64 2154268534}
!11064 = !DILocation(line: 56, column: 9, scope: !11055)
!11065 = !DILocation(line: 56, column: 2, scope: !11055)
!11066 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1320, file: !1320, line: 270, type: !11067, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !11069)
!11067 = !DISubroutineType(types: !11068)
!11068 = !{!105, !1180, !492}
!11069 = !{!11070, !11071, !11072, !11073, !11074}
!11070 = !DILocalVariable(name: "dev", arg: 1, scope: !11066, file: !1320, line: 270, type: !1180)
!11071 = !DILocalVariable(name: "on", arg: 2, scope: !11066, file: !1320, line: 270, type: !492)
!11072 = !DILocalVariable(name: "cfg", scope: !11066, file: !1320, line: 272, type: !10398)
!11073 = !DILocalVariable(name: "ret", scope: !11066, file: !1320, line: 273, type: !105)
!11074 = !DILocalVariable(name: "clk", scope: !11066, file: !1320, line: 278, type: !10700)
!11075 = !DILocation(line: 0, scope: !11066)
!11076 = !DILocation(line: 272, column: 45, scope: !11066)
!11077 = !DILocation(line: 282, column: 38, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11079, file: !1320, line: 280, column: 10)
!11079 = distinct !DILexicalBlock(scope: !11066, file: !1320, line: 280, column: 6)
!11080 = !DILocation(line: 282, column: 6, scope: !11078)
!11081 = !DILocation(line: 281, column: 9, scope: !11078)
!11082 = !DILocation(line: 293, column: 1, scope: !11066)
!11083 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !481, file: !481, line: 730, type: !11056, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !11084)
!11084 = !{!11085}
!11085 = !DILocalVariable(name: "dev", arg: 1, scope: !11083, file: !481, line: 730, type: !1180)
!11086 = !DILocation(line: 0, scope: !11083)
!11087 = !DILocation(line: 732, column: 9, scope: !11083)
!11088 = !DILocation(line: 732, column: 2, scope: !11083)
!11089 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1320, file: !1320, line: 496, type: !11090, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !11092)
!11090 = !DISubroutineType(types: !11091)
!11091 = !{!105, !1180, !105, !105, !105}
!11092 = !{!11093, !11094, !11095, !11096, !11097, !11098}
!11093 = !DILocalVariable(name: "dev", arg: 1, scope: !11089, file: !1320, line: 496, type: !1180)
!11094 = !DILocalVariable(name: "pin", arg: 2, scope: !11089, file: !1320, line: 496, type: !105)
!11095 = !DILocalVariable(name: "conf", arg: 3, scope: !11089, file: !1320, line: 496, type: !105)
!11096 = !DILocalVariable(name: "func", arg: 4, scope: !11089, file: !1320, line: 496, type: !105)
!11097 = !DILocalVariable(name: "ret", scope: !11089, file: !1320, line: 498, type: !105)
!11098 = !DILocalVariable(name: "gpio_out", scope: !11099, file: !1320, line: 508, type: !113)
!11099 = distinct !DILexicalBlock(scope: !11100, file: !1320, line: 507, column: 27)
!11100 = distinct !DILexicalBlock(scope: !11089, file: !1320, line: 507, column: 6)
!11101 = !DILocation(line: 0, scope: !11089)
!11102 = !DILocation(line: 505, column: 2, scope: !11089)
!11103 = !DILocation(line: 507, column: 11, scope: !11100)
!11104 = !DILocation(line: 507, column: 6, scope: !11089)
!11105 = !DILocation(line: 508, column: 28, scope: !11099)
!11106 = !DILocation(line: 0, scope: !11099)
!11107 = !DILocation(line: 510, column: 16, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11099, file: !1320, line: 510, column: 7)
!11109 = !DILocation(line: 0, scope: !11108)
!11110 = !DILocation(line: 510, column: 7, scope: !11099)
!11111 = !DILocation(line: 511, column: 4, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11108, file: !1320, line: 510, column: 32)
!11113 = !DILocation(line: 512, column: 3, scope: !11112)
!11114 = !DILocation(line: 513, column: 4, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11116, file: !1320, line: 512, column: 39)
!11116 = distinct !DILexicalBlock(scope: !11108, file: !1320, line: 512, column: 14)
!11117 = !DILocation(line: 514, column: 3, scope: !11115)
!11118 = !DILocation(line: 518, column: 1, scope: !11089)
!11119 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1593, file: !1593, line: 526, type: !1496, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11120)
!11120 = !{!11121, !11122, !11123}
!11121 = !DILocalVariable(name: "dev", arg: 1, scope: !11119, file: !1593, line: 526, type: !1498)
!11122 = !DILocalVariable(name: "c", arg: 2, scope: !11119, file: !1593, line: 526, type: !1112)
!11123 = !DILocalVariable(name: "config", scope: !11119, file: !1593, line: 528, type: !11124)
!11124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 32)
!11125 = !DILocation(line: 0, scope: !11119)
!11126 = !DILocation(line: 528, column: 48, scope: !11119)
!11127 = !DILocation(line: 531, column: 40, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11119, file: !1593, line: 531, column: 6)
!11129 = !DILocation(line: 531, column: 6, scope: !11128)
!11130 = !DILocation(line: 531, column: 6, scope: !11119)
!11131 = !DILocation(line: 532, column: 34, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11128, file: !1593, line: 531, column: 48)
!11133 = !DILocation(line: 532, column: 3, scope: !11132)
!11134 = !DILocation(line: 533, column: 2, scope: !11132)
!11135 = !DILocation(line: 539, column: 42, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11119, file: !1593, line: 539, column: 6)
!11137 = !DILocation(line: 539, column: 7, scope: !11136)
!11138 = !DILocation(line: 539, column: 6, scope: !11119)
!11139 = !DILocation(line: 543, column: 52, scope: !11119)
!11140 = !DILocation(line: 543, column: 22, scope: !11119)
!11141 = !DILocation(line: 543, column: 5, scope: !11119)
!11142 = !DILocation(line: 545, column: 2, scope: !11119)
!11143 = !DILocation(line: 546, column: 1, scope: !11119)
!11144 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1593, file: !1593, line: 548, type: !1515, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11145)
!11145 = !{!11146, !11147, !11148, !11149}
!11146 = !DILocalVariable(name: "dev", arg: 1, scope: !11144, file: !1593, line: 548, type: !1498)
!11147 = !DILocalVariable(name: "c", arg: 2, scope: !11144, file: !1593, line: 549, type: !170)
!11148 = !DILocalVariable(name: "config", scope: !11144, file: !1593, line: 551, type: !11124)
!11149 = !DILocalVariable(name: "key", scope: !11144, file: !1593, line: 555, type: !32)
!11150 = !DILocation(line: 0, scope: !11144)
!11151 = !DILocation(line: 551, column: 48, scope: !11144)
!11152 = !DILocation(line: 562, column: 2, scope: !11144)
!11153 = !DILocation(line: 563, column: 41, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11155, file: !1593, line: 563, column: 7)
!11155 = distinct !DILexicalBlock(scope: !11144, file: !1593, line: 562, column: 12)
!11156 = !DILocation(line: 563, column: 7, scope: !11154)
!11157 = !DILocation(line: 563, column: 7, scope: !11155)
!11158 = !DILocation(line: 55, column: 2, scope: !11159, inlinedAt: !11163)
!11159 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7433, file: !7433, line: 42, type: !7434, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11160)
!11160 = !{!11161, !11162}
!11161 = !DILocalVariable(name: "key", scope: !11159, file: !7433, line: 44, type: !32)
!11162 = !DILocalVariable(name: "tmp", scope: !11159, file: !7433, line: 53, type: !32)
!11163 = distinct !DILocation(line: 564, column: 10, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11154, file: !1593, line: 563, column: 49)
!11165 = !{i64 2000906}
!11166 = !DILocation(line: 0, scope: !11159, inlinedAt: !11163)
!11167 = !DILocation(line: 565, column: 42, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11164, file: !1593, line: 565, column: 8)
!11169 = !DILocation(line: 565, column: 8, scope: !11168)
!11170 = !DILocation(line: 565, column: 8, scope: !11164)
!11171 = !DILocalVariable(name: "key", arg: 1, scope: !11172, file: !7433, line: 84, type: !32)
!11172 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7433, file: !7433, line: 84, type: !7444, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11173)
!11173 = !{!11171}
!11174 = !DILocation(line: 0, scope: !11172, inlinedAt: !11175)
!11175 = distinct !DILocation(line: 568, column: 4, scope: !11164)
!11176 = !DILocation(line: 95, column: 2, scope: !11172, inlinedAt: !11175)
!11177 = !{i64 2001723}
!11178 = !DILocation(line: 569, column: 3, scope: !11164)
!11179 = distinct !{!11179, !11152, !11180}
!11180 = !DILocation(line: 570, column: 2, scope: !11144)
!11181 = !DILocation(line: 592, column: 33, scope: !11144)
!11182 = !DILocation(line: 592, column: 2, scope: !11144)
!11183 = !DILocation(line: 0, scope: !11172, inlinedAt: !11184)
!11184 = distinct !DILocation(line: 593, column: 2, scope: !11144)
!11185 = !DILocation(line: 95, column: 2, scope: !11172, inlinedAt: !11184)
!11186 = !DILocation(line: 594, column: 1, scope: !11144)
!11187 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1593, file: !1593, line: 596, type: !1519, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11188)
!11188 = !{!11189, !11190, !11191}
!11189 = !DILocalVariable(name: "dev", arg: 1, scope: !11187, file: !1593, line: 596, type: !1498)
!11190 = !DILocalVariable(name: "config", scope: !11187, file: !1593, line: 598, type: !11124)
!11191 = !DILocalVariable(name: "err", scope: !11187, file: !1593, line: 599, type: !113)
!11192 = !DILocation(line: 0, scope: !11187)
!11193 = !DILocation(line: 598, column: 48, scope: !11187)
!11194 = !DILocation(line: 606, column: 40, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11187, file: !1593, line: 606, column: 6)
!11196 = !DILocation(line: 606, column: 6, scope: !11195)
!11197 = !DILocation(line: 606, column: 6, scope: !11187)
!11198 = !DILocation(line: 610, column: 39, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11187, file: !1593, line: 610, column: 6)
!11200 = !DILocation(line: 610, column: 6, scope: !11199)
!11201 = !DILocation(line: 610, column: 6, scope: !11187)
!11202 = !DILocation(line: 614, column: 39, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11187, file: !1593, line: 614, column: 6)
!11204 = !DILocation(line: 614, column: 6, scope: !11203)
!11205 = !DILocation(line: 614, column: 6, scope: !11187)
!11206 = !DILocation(line: 619, column: 40, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11187, file: !1593, line: 619, column: 6)
!11208 = !DILocation(line: 619, column: 6, scope: !11207)
!11209 = !DILocation(line: 619, column: 6, scope: !11187)
!11210 = !DILocation(line: 623, column: 10, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11187, file: !1593, line: 623, column: 6)
!11212 = !DILocation(line: 623, column: 6, scope: !11187)
!11213 = !DILocation(line: 624, column: 34, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11211, file: !1593, line: 623, column: 24)
!11215 = !DILocation(line: 624, column: 3, scope: !11214)
!11216 = !DILocation(line: 625, column: 2, scope: !11214)
!11217 = !DILocation(line: 632, column: 10, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11187, file: !1593, line: 632, column: 6)
!11219 = !DILocation(line: 632, column: 6, scope: !11187)
!11220 = !DILocation(line: 633, column: 34, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11218, file: !1593, line: 632, column: 32)
!11222 = !DILocation(line: 633, column: 3, scope: !11221)
!11223 = !DILocation(line: 634, column: 2, scope: !11221)
!11224 = !DILocation(line: 636, column: 10, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11187, file: !1593, line: 636, column: 6)
!11226 = !DILocation(line: 636, column: 6, scope: !11187)
!11227 = !DILocation(line: 637, column: 33, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11225, file: !1593, line: 636, column: 31)
!11229 = !DILocation(line: 637, column: 3, scope: !11228)
!11230 = !DILocation(line: 638, column: 2, scope: !11228)
!11231 = !DILocation(line: 640, column: 10, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11187, file: !1593, line: 640, column: 6)
!11233 = !DILocation(line: 640, column: 6, scope: !11187)
!11234 = !DILocation(line: 641, column: 33, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11232, file: !1593, line: 640, column: 32)
!11236 = !DILocation(line: 641, column: 3, scope: !11235)
!11237 = !DILocation(line: 642, column: 2, scope: !11235)
!11238 = !DILocation(line: 646, column: 32, scope: !11187)
!11239 = !DILocation(line: 646, column: 2, scope: !11187)
!11240 = !DILocation(line: 648, column: 2, scope: !11187)
!11241 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1593, file: !1593, line: 419, type: !1523, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11242)
!11242 = !{!11243, !11244, !11245, !11246, !11248, !11249, !11250, !11251}
!11243 = !DILocalVariable(name: "dev", arg: 1, scope: !11241, file: !1593, line: 419, type: !1498)
!11244 = !DILocalVariable(name: "cfg", arg: 2, scope: !11241, file: !1593, line: 420, type: !1525)
!11245 = !DILocalVariable(name: "config", scope: !11241, file: !1593, line: 422, type: !11124)
!11246 = !DILocalVariable(name: "data", scope: !11241, file: !1593, line: 423, type: !11247)
!11247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 32)
!11248 = !DILocalVariable(name: "parity", scope: !11241, file: !1593, line: 424, type: !3720)
!11249 = !DILocalVariable(name: "stopbits", scope: !11241, file: !1593, line: 425, type: !3720)
!11250 = !DILocalVariable(name: "databits", scope: !11241, file: !1593, line: 426, type: !3720)
!11251 = !DILocalVariable(name: "flowctrl", scope: !11241, file: !1593, line: 428, type: !3720)
!11252 = !DILocation(line: 0, scope: !11241)
!11253 = !DILocation(line: 422, column: 48, scope: !11241)
!11254 = !DILocation(line: 423, column: 38, scope: !11241)
!11255 = !DILocation(line: 424, column: 56, scope: !11241)
!11256 = !DILocation(line: 424, column: 51, scope: !11241)
!11257 = !DILocation(line: 424, column: 26, scope: !11241)
!11258 = !DILocation(line: 425, column: 60, scope: !11241)
!11259 = !DILocation(line: 425, column: 55, scope: !11241)
!11260 = !DILocation(line: 425, column: 28, scope: !11241)
!11261 = !DILocation(line: 426, column: 60, scope: !11241)
!11262 = !DILocation(line: 426, column: 55, scope: !11241)
!11263 = !DILocation(line: 426, column: 28, scope: !11241)
!11264 = !DILocation(line: 428, column: 58, scope: !11241)
!11265 = !DILocation(line: 428, column: 53, scope: !11241)
!11266 = !DILocation(line: 428, column: 28, scope: !11241)
!11267 = !DILocation(line: 431, column: 44, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11241, file: !1593, line: 431, column: 6)
!11269 = !DILocation(line: 438, column: 22, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11241, file: !1593, line: 437, column: 6)
!11271 = !DILocation(line: 437, column: 6, scope: !11241)
!11272 = !DILocation(line: 448, column: 6, scope: !11241)
!11273 = !DILocation(line: 465, column: 47, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11241, file: !1593, line: 465, column: 6)
!11275 = !DILocation(line: 475, column: 21, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11241, file: !1593, line: 475, column: 6)
!11277 = !DILocation(line: 475, column: 6, scope: !11241)
!11278 = !DILocation(line: 476, column: 8, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11280, file: !1593, line: 476, column: 7)
!11280 = distinct !DILexicalBlock(scope: !11276, file: !1593, line: 475, column: 49)
!11281 = !DILocation(line: 477, column: 34, scope: !11279)
!11282 = !DILocation(line: 476, column: 7, scope: !11280)
!11283 = !DILocation(line: 482, column: 27, scope: !11241)
!11284 = !DILocation(line: 482, column: 2, scope: !11241)
!11285 = !DILocation(line: 484, column: 16, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11241, file: !1593, line: 484, column: 6)
!11287 = !DILocation(line: 484, column: 13, scope: !11286)
!11288 = !DILocation(line: 484, column: 6, scope: !11241)
!11289 = !DILocation(line: 485, column: 3, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11286, file: !1593, line: 484, column: 44)
!11291 = !DILocation(line: 486, column: 2, scope: !11290)
!11292 = !DILocation(line: 488, column: 18, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11241, file: !1593, line: 488, column: 6)
!11294 = !DILocation(line: 488, column: 15, scope: !11293)
!11295 = !DILocation(line: 488, column: 6, scope: !11241)
!11296 = !DILocation(line: 489, column: 3, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11293, file: !1593, line: 488, column: 48)
!11298 = !DILocation(line: 490, column: 2, scope: !11297)
!11299 = !DILocation(line: 492, column: 18, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11241, file: !1593, line: 492, column: 6)
!11301 = !DILocation(line: 492, column: 15, scope: !11300)
!11302 = !DILocation(line: 492, column: 6, scope: !11241)
!11303 = !DILocation(line: 493, column: 3, scope: !11304)
!11304 = distinct !DILexicalBlock(scope: !11300, file: !1593, line: 492, column: 48)
!11305 = !DILocation(line: 494, column: 2, scope: !11304)
!11306 = !DILocation(line: 496, column: 18, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11241, file: !1593, line: 496, column: 6)
!11308 = !DILocation(line: 496, column: 15, scope: !11307)
!11309 = !DILocation(line: 496, column: 6, scope: !11241)
!11310 = !DILocation(line: 497, column: 3, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11307, file: !1593, line: 496, column: 46)
!11312 = !DILocation(line: 498, column: 2, scope: !11311)
!11313 = !DILocation(line: 500, column: 11, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11241, file: !1593, line: 500, column: 6)
!11315 = !DILocation(line: 500, column: 29, scope: !11314)
!11316 = !DILocation(line: 500, column: 20, scope: !11314)
!11317 = !DILocation(line: 500, column: 6, scope: !11241)
!11318 = !DILocation(line: 501, column: 3, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11314, file: !1593, line: 500, column: 40)
!11320 = !DILocation(line: 502, column: 26, scope: !11319)
!11321 = !DILocation(line: 502, column: 19, scope: !11319)
!11322 = !DILocation(line: 503, column: 2, scope: !11319)
!11323 = !DILocation(line: 505, column: 26, scope: !11241)
!11324 = !DILocation(line: 505, column: 2, scope: !11241)
!11325 = !DILocation(line: 506, column: 2, scope: !11241)
!11326 = !DILocation(line: 507, column: 1, scope: !11241)
!11327 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1593, file: !1593, line: 509, type: !1536, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11328)
!11328 = !{!11329, !11330, !11331}
!11329 = !DILocalVariable(name: "dev", arg: 1, scope: !11327, file: !1593, line: 509, type: !1498)
!11330 = !DILocalVariable(name: "cfg", arg: 2, scope: !11327, file: !1593, line: 510, type: !1538)
!11331 = !DILocalVariable(name: "data", scope: !11327, file: !1593, line: 512, type: !11247)
!11332 = !DILocation(line: 0, scope: !11327)
!11333 = !DILocation(line: 512, column: 38, scope: !11327)
!11334 = !DILocation(line: 514, column: 24, scope: !11327)
!11335 = !DILocation(line: 514, column: 7, scope: !11327)
!11336 = !DILocation(line: 514, column: 16, scope: !11327)
!11337 = !DILocation(line: 515, column: 41, scope: !11327)
!11338 = !{i32 0, i32 1537}
!11339 = !DILocation(line: 515, column: 16, scope: !11327)
!11340 = !DILocation(line: 515, column: 7, scope: !11327)
!11341 = !DILocation(line: 515, column: 14, scope: !11327)
!11342 = !DILocation(line: 517, column: 3, scope: !11327)
!11343 = !{i32 0, i32 12289}
!11344 = !DILocation(line: 516, column: 19, scope: !11327)
!11345 = !DILocation(line: 516, column: 7, scope: !11327)
!11346 = !DILocation(line: 516, column: 17, scope: !11327)
!11347 = !DILocation(line: 519, column: 3, scope: !11327)
!11348 = !DILocation(line: 519, column: 33, scope: !11327)
!11349 = !DILocation(line: 518, column: 19, scope: !11327)
!11350 = !DILocation(line: 518, column: 7, scope: !11327)
!11351 = !DILocation(line: 518, column: 17, scope: !11327)
!11352 = !DILocation(line: 521, column: 3, scope: !11327)
!11353 = !{i32 0, i32 769}
!11354 = !DILocation(line: 520, column: 19, scope: !11327)
!11355 = !DILocation(line: 520, column: 7, scope: !11327)
!11356 = !DILocation(line: 520, column: 17, scope: !11327)
!11357 = !DILocation(line: 522, column: 2, scope: !11327)
!11358 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1593, file: !1593, line: 205, type: !11359, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11361)
!11359 = !DISubroutineType(types: !11360)
!11360 = !{!113, !1498}
!11361 = !{!11362, !11363}
!11362 = !DILocalVariable(name: "dev", arg: 1, scope: !11358, file: !1593, line: 205, type: !1498)
!11363 = !DILocalVariable(name: "config", scope: !11358, file: !1593, line: 207, type: !11124)
!11364 = !DILocation(line: 0, scope: !11358)
!11365 = !DILocation(line: 207, column: 48, scope: !11358)
!11366 = !DILocation(line: 209, column: 36, scope: !11358)
!11367 = !DILocation(line: 209, column: 9, scope: !11358)
!11368 = !DILocation(line: 209, column: 2, scope: !11358)
!11369 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1593, file: !1593, line: 270, type: !11370, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11372)
!11370 = !DISubroutineType(types: !11371)
!11371 = !{!1464, !113}
!11372 = !{!11373}
!11373 = !DILocalVariable(name: "parity", arg: 1, scope: !11369, file: !1593, line: 270, type: !113)
!11374 = !DILocation(line: 0, scope: !11369)
!11375 = !DILocation(line: 272, column: 2, scope: !11369)
!11376 = !DILocation(line: 281, column: 1, scope: !11369)
!11377 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1593, file: !1593, line: 220, type: !11359, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11378)
!11378 = !{!11379, !11380}
!11379 = !DILocalVariable(name: "dev", arg: 1, scope: !11377, file: !1593, line: 220, type: !1498)
!11380 = !DILocalVariable(name: "config", scope: !11377, file: !1593, line: 222, type: !11124)
!11381 = !DILocation(line: 0, scope: !11377)
!11382 = !DILocation(line: 222, column: 48, scope: !11377)
!11383 = !DILocation(line: 224, column: 44, scope: !11377)
!11384 = !DILocation(line: 224, column: 9, scope: !11377)
!11385 = !DILocation(line: 224, column: 2, scope: !11377)
!11386 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1593, file: !1593, line: 304, type: !11387, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11389)
!11387 = !DISubroutineType(types: !11388)
!11388 = !{!1478, !113}
!11389 = !{!11390}
!11390 = !DILocalVariable(name: "sb", arg: 1, scope: !11386, file: !1593, line: 304, type: !113)
!11391 = !DILocation(line: 0, scope: !11386)
!11392 = !DILocation(line: 306, column: 2, scope: !11386)
!11393 = !DILocation(line: 0, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11386, file: !1593, line: 306, column: 14)
!11395 = !DILocation(line: 323, column: 1, scope: !11386)
!11396 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1593, file: !1593, line: 235, type: !11359, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11397)
!11397 = !{!11398, !11399}
!11398 = !DILocalVariable(name: "dev", arg: 1, scope: !11396, file: !1593, line: 235, type: !1498)
!11399 = !DILocalVariable(name: "config", scope: !11396, file: !1593, line: 237, type: !11124)
!11400 = !DILocation(line: 0, scope: !11396)
!11401 = !DILocation(line: 237, column: 48, scope: !11396)
!11402 = !DILocation(line: 239, column: 39, scope: !11396)
!11403 = !DILocation(line: 239, column: 9, scope: !11396)
!11404 = !DILocation(line: 239, column: 2, scope: !11396)
!11405 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1593, file: !1593, line: 355, type: !11406, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11408)
!11406 = !DISubroutineType(types: !11407)
!11407 = !{!1471, !113, !113}
!11408 = !{!11409, !11410}
!11409 = !DILocalVariable(name: "db", arg: 1, scope: !11405, file: !1593, line: 355, type: !113)
!11410 = !DILocalVariable(name: "p", arg: 2, scope: !11405, file: !1593, line: 356, type: !113)
!11411 = !DILocation(line: 0, scope: !11405)
!11412 = !DILocation(line: 358, column: 2, scope: !11405)
!11413 = !DILocation(line: 384, column: 1, scope: !11405)
!11414 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1593, file: !1593, line: 250, type: !11359, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11415)
!11415 = !{!11416, !11417}
!11416 = !DILocalVariable(name: "dev", arg: 1, scope: !11414, file: !1593, line: 250, type: !1498)
!11417 = !DILocalVariable(name: "config", scope: !11414, file: !1593, line: 252, type: !11124)
!11418 = !DILocation(line: 0, scope: !11414)
!11419 = !DILocation(line: 252, column: 48, scope: !11414)
!11420 = !DILocation(line: 254, column: 40, scope: !11414)
!11421 = !DILocation(line: 254, column: 9, scope: !11414)
!11422 = !DILocation(line: 254, column: 2, scope: !11414)
!11423 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1593, file: !1593, line: 409, type: !11424, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11426)
!11424 = !DISubroutineType(types: !11425)
!11425 = !{!1484, !113}
!11426 = !{!11427}
!11427 = !DILocalVariable(name: "fc", arg: 1, scope: !11423, file: !1593, line: 409, type: !113)
!11428 = !DILocation(line: 0, scope: !11423)
!11429 = !DILocation(line: 411, column: 9, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11423, file: !1593, line: 411, column: 6)
!11431 = !DILocation(line: 416, column: 1, scope: !11423)
!11432 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11433, file: !11433, line: 967, type: !11434, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11436)
!11433 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11434 = !DISubroutineType(types: !11435)
!11435 = !{!113, !1539}
!11436 = !{!11437}
!11437 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11432, file: !11433, line: 967, type: !1539)
!11438 = !DILocation(line: 0, scope: !11432)
!11439 = !DILocation(line: 969, column: 21, scope: !11432)
!11440 = !DILocation(line: 969, column: 3, scope: !11432)
!11441 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11433, file: !11433, line: 601, type: !11434, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11442)
!11442 = !{!11443}
!11443 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11441, file: !11433, line: 601, type: !1539)
!11444 = !DILocation(line: 0, scope: !11441)
!11445 = !DILocation(line: 603, column: 21, scope: !11441)
!11446 = !DILocation(line: 603, column: 3, scope: !11441)
!11447 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11433, file: !11433, line: 820, type: !11434, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11448)
!11448 = !{!11449}
!11449 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11447, file: !11433, line: 820, type: !1539)
!11450 = !DILocation(line: 0, scope: !11447)
!11451 = !DILocation(line: 822, column: 21, scope: !11447)
!11452 = !DILocation(line: 822, column: 3, scope: !11447)
!11453 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11433, file: !11433, line: 547, type: !11434, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11454)
!11454 = !{!11455}
!11455 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11453, file: !11433, line: 547, type: !1539)
!11456 = !DILocation(line: 0, scope: !11453)
!11457 = !DILocation(line: 549, column: 21, scope: !11453)
!11458 = !DILocation(line: 549, column: 3, scope: !11453)
!11459 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1593, file: !1593, line: 257, type: !11460, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11462)
!11460 = !DISubroutineType(types: !11461)
!11461 = !{!113, !1464}
!11462 = !{!11463}
!11463 = !DILocalVariable(name: "parity", arg: 1, scope: !11459, file: !1593, line: 257, type: !1464)
!11464 = !DILocation(line: 0, scope: !11459)
!11465 = !DILocation(line: 259, column: 2, scope: !11459)
!11466 = !DILocation(line: 268, column: 1, scope: !11459)
!11467 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1593, file: !1593, line: 283, type: !11468, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11470)
!11468 = !DISubroutineType(types: !11469)
!11469 = !{!113, !1478}
!11470 = !{!11471}
!11471 = !DILocalVariable(name: "sb", arg: 1, scope: !11467, file: !1593, line: 283, type: !1478)
!11472 = !DILocation(line: 0, scope: !11467)
!11473 = !DILocation(line: 285, column: 2, scope: !11467)
!11474 = !DILocation(line: 0, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11467, file: !1593, line: 285, column: 14)
!11476 = !DILocation(line: 302, column: 1, scope: !11467)
!11477 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1593, file: !1593, line: 325, type: !11478, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11480)
!11478 = !DISubroutineType(types: !11479)
!11479 = !{!113, !1471, !1464}
!11480 = !{!11481, !11482}
!11481 = !DILocalVariable(name: "db", arg: 1, scope: !11477, file: !1593, line: 325, type: !1471)
!11482 = !DILocalVariable(name: "p", arg: 2, scope: !11477, file: !1593, line: 326, type: !1464)
!11483 = !DILocation(line: 0, scope: !11477)
!11484 = !DILocation(line: 328, column: 2, scope: !11477)
!11485 = !DILocation(line: 353, column: 1, scope: !11477)
!11486 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1593, file: !1593, line: 393, type: !11487, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11489)
!11487 = !DISubroutineType(types: !11488)
!11488 = !{!113, !1484}
!11489 = !{!11490}
!11490 = !DILocalVariable(name: "fc", arg: 1, scope: !11486, file: !1593, line: 393, type: !1484)
!11491 = !DILocation(line: 0, scope: !11486)
!11492 = !DILocation(line: 395, column: 9, scope: !11493)
!11493 = distinct !DILexicalBlock(scope: !11486, file: !1593, line: 395, column: 6)
!11494 = !DILocation(line: 400, column: 1, scope: !11486)
!11495 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11433, file: !11433, line: 424, type: !11496, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11498)
!11496 = !DISubroutineType(types: !11497)
!11497 = !{null, !1539}
!11498 = !{!11499}
!11499 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11495, file: !11433, line: 424, type: !1539)
!11500 = !DILocation(line: 0, scope: !11495)
!11501 = !DILocation(line: 426, column: 3, scope: !11495)
!11502 = !DILocation(line: 427, column: 1, scope: !11495)
!11503 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1593, file: !1593, line: 197, type: !11504, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11506)
!11504 = !DISubroutineType(types: !11505)
!11505 = !{null, !1498, !113}
!11506 = !{!11507, !11508, !11509}
!11507 = !DILocalVariable(name: "dev", arg: 1, scope: !11503, file: !1593, line: 197, type: !1498)
!11508 = !DILocalVariable(name: "parity", arg: 2, scope: !11503, file: !1593, line: 198, type: !113)
!11509 = !DILocalVariable(name: "config", scope: !11503, file: !1593, line: 200, type: !11124)
!11510 = !DILocation(line: 0, scope: !11503)
!11511 = !DILocation(line: 200, column: 48, scope: !11503)
!11512 = !DILocation(line: 202, column: 29, scope: !11503)
!11513 = !DILocation(line: 202, column: 2, scope: !11503)
!11514 = !DILocation(line: 203, column: 1, scope: !11503)
!11515 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1593, file: !1593, line: 212, type: !11504, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11516)
!11516 = !{!11517, !11518, !11519}
!11517 = !DILocalVariable(name: "dev", arg: 1, scope: !11515, file: !1593, line: 212, type: !1498)
!11518 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11515, file: !1593, line: 213, type: !113)
!11519 = !DILocalVariable(name: "config", scope: !11515, file: !1593, line: 215, type: !11124)
!11520 = !DILocation(line: 0, scope: !11515)
!11521 = !DILocation(line: 215, column: 48, scope: !11515)
!11522 = !DILocation(line: 217, column: 37, scope: !11515)
!11523 = !DILocation(line: 217, column: 2, scope: !11515)
!11524 = !DILocation(line: 218, column: 1, scope: !11515)
!11525 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1593, file: !1593, line: 227, type: !11504, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11526)
!11526 = !{!11527, !11528, !11529}
!11527 = !DILocalVariable(name: "dev", arg: 1, scope: !11525, file: !1593, line: 227, type: !1498)
!11528 = !DILocalVariable(name: "databits", arg: 2, scope: !11525, file: !1593, line: 228, type: !113)
!11529 = !DILocalVariable(name: "config", scope: !11525, file: !1593, line: 230, type: !11124)
!11530 = !DILocation(line: 0, scope: !11525)
!11531 = !DILocation(line: 230, column: 48, scope: !11525)
!11532 = !DILocation(line: 232, column: 32, scope: !11525)
!11533 = !DILocation(line: 232, column: 2, scope: !11525)
!11534 = !DILocation(line: 233, column: 1, scope: !11525)
!11535 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1593, file: !1593, line: 242, type: !11504, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11536)
!11536 = !{!11537, !11538, !11539}
!11537 = !DILocalVariable(name: "dev", arg: 1, scope: !11535, file: !1593, line: 242, type: !1498)
!11538 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11535, file: !1593, line: 243, type: !113)
!11539 = !DILocalVariable(name: "config", scope: !11535, file: !1593, line: 245, type: !11124)
!11540 = !DILocation(line: 0, scope: !11535)
!11541 = !DILocation(line: 245, column: 48, scope: !11535)
!11542 = !DILocation(line: 247, column: 33, scope: !11535)
!11543 = !DILocation(line: 247, column: 2, scope: !11535)
!11544 = !DILocation(line: 248, column: 1, scope: !11535)
!11545 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1593, file: !1593, line: 107, type: !11504, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11546)
!11546 = !{!11547, !11548, !11549, !11550, !11551}
!11547 = !DILocalVariable(name: "dev", arg: 1, scope: !11545, file: !1593, line: 107, type: !1498)
!11548 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11545, file: !1593, line: 107, type: !113)
!11549 = !DILocalVariable(name: "config", scope: !11545, file: !1593, line: 109, type: !11124)
!11550 = !DILocalVariable(name: "data", scope: !11545, file: !1593, line: 110, type: !11247)
!11551 = !DILocalVariable(name: "clock_rate", scope: !11545, file: !1593, line: 112, type: !113)
!11552 = !DILocation(line: 0, scope: !11545)
!11553 = !DILocation(line: 109, column: 48, scope: !11545)
!11554 = !DILocation(line: 110, column: 38, scope: !11545)
!11555 = !DILocation(line: 112, column: 2, scope: !11545)
!11556 = !DILocation(line: 123, column: 36, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11558, file: !1593, line: 123, column: 7)
!11558 = distinct !DILexicalBlock(scope: !11559, file: !1593, line: 122, column: 9)
!11559 = distinct !DILexicalBlock(scope: !11545, file: !1593, line: 115, column: 6)
!11560 = !DILocation(line: 124, column: 42, scope: !11557)
!11561 = !DILocation(line: 123, column: 7, scope: !11557)
!11562 = !DILocation(line: 125, column: 22, scope: !11557)
!11563 = !DILocation(line: 123, column: 7, scope: !11558)
!11564 = !DILocation(line: 126, column: 4, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11566, file: !1593, line: 126, column: 4)
!11566 = distinct !DILexicalBlock(scope: !11567, file: !1593, line: 126, column: 4)
!11567 = distinct !DILexicalBlock(scope: !11568, file: !1593, line: 126, column: 4)
!11568 = distinct !DILexicalBlock(scope: !11569, file: !1593, line: 126, column: 4)
!11569 = distinct !DILexicalBlock(scope: !11557, file: !1593, line: 125, column: 27)
!11570 = !DILocation(line: 127, column: 4, scope: !11569)
!11571 = !DILocation(line: 176, column: 36, scope: !11545)
!11572 = !DILocation(line: 176, column: 3, scope: !11545)
!11573 = !DILocation(line: 179, column: 32, scope: !11545)
!11574 = !DILocation(line: 180, column: 10, scope: !11545)
!11575 = !DILocation(line: 179, column: 3, scope: !11545)
!11576 = !DILocation(line: 189, column: 3, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11578, file: !1593, line: 189, column: 3)
!11578 = distinct !DILexicalBlock(scope: !11545, file: !1593, line: 189, column: 3)
!11579 = !DILocation(line: 189, column: 3, scope: !11578)
!11580 = !DILocation(line: 189, column: 3, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11577, file: !1593, line: 189, column: 3)
!11582 = !DILocation(line: 195, column: 1, scope: !11545)
!11583 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11433, file: !11433, line: 410, type: !11496, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11584)
!11584 = !{!11585}
!11585 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11583, file: !11433, line: 410, type: !1539)
!11586 = !DILocation(line: 0, scope: !11583)
!11587 = !DILocation(line: 412, column: 3, scope: !11583)
!11588 = !DILocation(line: 413, column: 1, scope: !11583)
!11589 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !956, file: !956, line: 216, type: !1572, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11590)
!11590 = !{!11591, !11592, !11593, !11594}
!11591 = !DILocalVariable(name: "dev", arg: 1, scope: !11589, file: !956, line: 216, type: !1498)
!11592 = !DILocalVariable(name: "sys", arg: 2, scope: !11589, file: !956, line: 217, type: !1051)
!11593 = !DILocalVariable(name: "rate", arg: 3, scope: !11589, file: !956, line: 218, type: !1007)
!11594 = !DILocalVariable(name: "api", scope: !11589, file: !956, line: 220, type: !1550)
!11595 = !DILocation(line: 0, scope: !11589)
!11596 = !DILocation(line: 221, column: 49, scope: !11589)
!11597 = !DILocation(line: 223, column: 11, scope: !11598)
!11598 = distinct !DILexicalBlock(scope: !11589, file: !956, line: 223, column: 6)
!11599 = !DILocation(line: 223, column: 20, scope: !11598)
!11600 = !DILocation(line: 223, column: 6, scope: !11589)
!11601 = !DILocation(line: 227, column: 9, scope: !11589)
!11602 = !DILocation(line: 227, column: 2, scope: !11589)
!11603 = !DILocation(line: 228, column: 1, scope: !11589)
!11604 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3433, file: !3433, line: 175, type: !3434, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11605)
!11605 = !{!11606}
!11606 = !DILocalVariable(name: "level", arg: 1, scope: !11604, file: !3433, line: 175, type: !105)
!11607 = !DILocation(line: 0, scope: !11604)
!11608 = !DILocation(line: 177, column: 2, scope: !11604)
!11609 = !DILocation(line: 189, column: 1, scope: !11604)
!11610 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11433, file: !11433, line: 615, type: !11611, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11613)
!11611 = !DISubroutineType(types: !11612)
!11612 = !{null, !1539, !113}
!11613 = !{!11614, !11615}
!11614 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11610, file: !11433, line: 615, type: !1539)
!11615 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11610, file: !11433, line: 615, type: !113)
!11616 = !DILocation(line: 0, scope: !11610)
!11617 = !DILocation(line: 617, column: 3, scope: !11610)
!11618 = !DILocation(line: 618, column: 1, scope: !11610)
!11619 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11433, file: !11433, line: 1020, type: !11620, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11622)
!11620 = !DISubroutineType(types: !11621)
!11621 = !{null, !1539, !113, !113, !113}
!11622 = !{!11623, !11624, !11625, !11626}
!11623 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11619, file: !11433, line: 1020, type: !1539)
!11624 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11619, file: !11433, line: 1020, type: !113)
!11625 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11619, file: !11433, line: 1020, type: !113)
!11626 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11619, file: !11433, line: 1021, type: !113)
!11627 = !DILocation(line: 0, scope: !11619)
!11628 = !DILocation(line: 1029, column: 30, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11630, file: !11433, line: 1028, column: 3)
!11630 = distinct !DILexicalBlock(scope: !11619, file: !11433, line: 1023, column: 7)
!11631 = !DILocation(line: 1029, column: 19, scope: !11629)
!11632 = !DILocation(line: 1029, column: 13, scope: !11629)
!11633 = !DILocation(line: 1029, column: 17, scope: !11629)
!11634 = !DILocation(line: 1031, column: 1, scope: !11619)
!11635 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11433, file: !11433, line: 949, type: !11611, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11636)
!11636 = !{!11637, !11638}
!11637 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11635, file: !11433, line: 949, type: !1539)
!11638 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11635, file: !11433, line: 949, type: !113)
!11639 = !DILocation(line: 0, scope: !11635)
!11640 = !DILocation(line: 951, column: 3, scope: !11635)
!11641 = !DILocation(line: 952, column: 1, scope: !11635)
!11642 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11433, file: !11433, line: 588, type: !11611, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11643)
!11643 = !{!11644, !11645}
!11644 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11642, file: !11433, line: 588, type: !1539)
!11645 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11642, file: !11433, line: 588, type: !113)
!11646 = !DILocation(line: 0, scope: !11642)
!11647 = !DILocation(line: 590, column: 3, scope: !11642)
!11648 = !DILocation(line: 591, column: 1, scope: !11642)
!11649 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11433, file: !11433, line: 805, type: !11611, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11650)
!11650 = !{!11651, !11652}
!11651 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11649, file: !11433, line: 805, type: !1539)
!11652 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11649, file: !11433, line: 805, type: !113)
!11653 = !DILocation(line: 0, scope: !11649)
!11654 = !DILocation(line: 807, column: 3, scope: !11649)
!11655 = !DILocation(line: 808, column: 1, scope: !11649)
!11656 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11433, file: !11433, line: 532, type: !11611, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11657)
!11657 = !{!11658, !11659}
!11658 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11656, file: !11433, line: 532, type: !1539)
!11659 = !DILocalVariable(name: "Parity", arg: 2, scope: !11656, file: !11433, line: 532, type: !113)
!11660 = !DILocation(line: 0, scope: !11656)
!11661 = !DILocation(line: 534, column: 3, scope: !11656)
!11662 = !DILocation(line: 535, column: 1, scope: !11656)
!11663 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11433, file: !11433, line: 1770, type: !11434, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11664)
!11664 = !{!11665}
!11665 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11663, file: !11433, line: 1770, type: !1539)
!11666 = !DILocation(line: 0, scope: !11663)
!11667 = !DILocation(line: 1772, column: 11, scope: !11663)
!11668 = !DILocation(line: 1772, column: 46, scope: !11663)
!11669 = !DILocation(line: 1772, column: 3, scope: !11663)
!11670 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11433, file: !11433, line: 1737, type: !11434, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11671)
!11671 = !{!11672}
!11672 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11670, file: !11433, line: 1737, type: !1539)
!11673 = !DILocation(line: 0, scope: !11670)
!11674 = !DILocation(line: 1739, column: 11, scope: !11670)
!11675 = !DILocation(line: 1739, column: 3, scope: !11670)
!11676 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11433, file: !11433, line: 1748, type: !11434, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11677)
!11677 = !{!11678}
!11678 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11676, file: !11433, line: 1748, type: !1539)
!11679 = !DILocation(line: 0, scope: !11676)
!11680 = !DILocation(line: 1750, column: 11, scope: !11676)
!11681 = !DILocation(line: 1750, column: 45, scope: !11676)
!11682 = !DILocation(line: 1750, column: 3, scope: !11676)
!11683 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11433, file: !11433, line: 1827, type: !11434, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11684)
!11684 = !{!11685}
!11685 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11683, file: !11433, line: 1827, type: !1539)
!11686 = !DILocation(line: 0, scope: !11683)
!11687 = !DILocation(line: 1829, column: 11, scope: !11683)
!11688 = !DILocation(line: 1829, column: 46, scope: !11683)
!11689 = !DILocation(line: 1829, column: 3, scope: !11683)
!11690 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11433, file: !11433, line: 1992, type: !11496, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11691)
!11691 = !{!11692}
!11692 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11690, file: !11433, line: 1992, type: !1539)
!11693 = !DILocation(line: 0, scope: !11690)
!11694 = !DILocation(line: 1994, column: 3, scope: !11690)
!11695 = !DILocation(line: 1995, column: 1, scope: !11690)
!11696 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11433, file: !11433, line: 1934, type: !11496, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11697)
!11697 = !{!11698, !11699}
!11698 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11696, file: !11433, line: 1934, type: !1539)
!11699 = !DILocalVariable(name: "tmpreg", scope: !11696, file: !11433, line: 1936, type: !461)
!11700 = !DILocation(line: 0, scope: !11696)
!11701 = !DILocation(line: 1936, column: 3, scope: !11696)
!11702 = !DILocation(line: 1936, column: 17, scope: !11696)
!11703 = !DILocation(line: 1937, column: 20, scope: !11696)
!11704 = !DILocation(line: 1937, column: 10, scope: !11696)
!11705 = !DILocation(line: 1938, column: 10, scope: !11696)
!11706 = !DILocation(line: 1939, column: 20, scope: !11696)
!11707 = !DILocation(line: 1939, column: 10, scope: !11696)
!11708 = !DILocation(line: 1940, column: 10, scope: !11696)
!11709 = !DILocation(line: 1941, column: 1, scope: !11696)
!11710 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11433, file: !11433, line: 1877, type: !11496, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11711)
!11711 = !{!11712, !11713}
!11712 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11710, file: !11433, line: 1877, type: !1539)
!11713 = !DILocalVariable(name: "tmpreg", scope: !11710, file: !11433, line: 1879, type: !461)
!11714 = !DILocation(line: 0, scope: !11710)
!11715 = !DILocation(line: 1879, column: 3, scope: !11710)
!11716 = !DILocation(line: 1879, column: 17, scope: !11710)
!11717 = !DILocation(line: 1880, column: 20, scope: !11710)
!11718 = !DILocation(line: 1880, column: 10, scope: !11710)
!11719 = !DILocation(line: 1881, column: 10, scope: !11710)
!11720 = !DILocation(line: 1882, column: 20, scope: !11710)
!11721 = !DILocation(line: 1882, column: 10, scope: !11710)
!11722 = !DILocation(line: 1883, column: 10, scope: !11710)
!11723 = !DILocation(line: 1884, column: 1, scope: !11710)
!11724 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11433, file: !11433, line: 1896, type: !11496, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11725)
!11725 = !{!11726, !11727}
!11726 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11724, file: !11433, line: 1896, type: !1539)
!11727 = !DILocalVariable(name: "tmpreg", scope: !11724, file: !11433, line: 1898, type: !461)
!11728 = !DILocation(line: 0, scope: !11724)
!11729 = !DILocation(line: 1898, column: 3, scope: !11724)
!11730 = !DILocation(line: 1898, column: 17, scope: !11724)
!11731 = !DILocation(line: 1899, column: 20, scope: !11724)
!11732 = !DILocation(line: 1899, column: 10, scope: !11724)
!11733 = !DILocation(line: 1900, column: 10, scope: !11724)
!11734 = !DILocation(line: 1901, column: 20, scope: !11724)
!11735 = !DILocation(line: 1901, column: 10, scope: !11724)
!11736 = !DILocation(line: 1902, column: 10, scope: !11724)
!11737 = !DILocation(line: 1903, column: 1, scope: !11724)
!11738 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11433, file: !11433, line: 1915, type: !11496, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11739)
!11739 = !{!11740, !11741}
!11740 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11738, file: !11433, line: 1915, type: !1539)
!11741 = !DILocalVariable(name: "tmpreg", scope: !11738, file: !11433, line: 1917, type: !461)
!11742 = !DILocation(line: 0, scope: !11738)
!11743 = !DILocation(line: 1917, column: 3, scope: !11738)
!11744 = !DILocation(line: 1917, column: 17, scope: !11738)
!11745 = !DILocation(line: 1918, column: 20, scope: !11738)
!11746 = !DILocation(line: 1918, column: 10, scope: !11738)
!11747 = !DILocation(line: 1919, column: 10, scope: !11738)
!11748 = !DILocation(line: 1920, column: 20, scope: !11738)
!11749 = !DILocation(line: 1920, column: 10, scope: !11738)
!11750 = !DILocation(line: 1921, column: 10, scope: !11738)
!11751 = !DILocation(line: 1922, column: 1, scope: !11738)
!11752 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11433, file: !11433, line: 1814, type: !11434, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11753)
!11753 = !{!11754}
!11754 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11752, file: !11433, line: 1814, type: !1539)
!11755 = !DILocation(line: 0, scope: !11752)
!11756 = !DILocation(line: 1816, column: 11, scope: !11752)
!11757 = !DILocation(line: 1816, column: 46, scope: !11752)
!11758 = !DILocation(line: 1816, column: 3, scope: !11752)
!11759 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11433, file: !11433, line: 2426, type: !11760, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11762)
!11760 = !DISubroutineType(types: !11761)
!11761 = !{null, !1539, !169}
!11762 = !{!11763, !11764}
!11763 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11759, file: !11433, line: 2426, type: !1539)
!11764 = !DILocalVariable(name: "Value", arg: 2, scope: !11759, file: !11433, line: 2426, type: !169)
!11765 = !DILocation(line: 0, scope: !11759)
!11766 = !DILocation(line: 2428, column: 16, scope: !11759)
!11767 = !DILocation(line: 2428, column: 11, scope: !11759)
!11768 = !DILocation(line: 2428, column: 14, scope: !11759)
!11769 = !DILocation(line: 2429, column: 1, scope: !11759)
!11770 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11433, file: !11433, line: 1792, type: !11434, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11771)
!11771 = !{!11772}
!11772 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11770, file: !11433, line: 1792, type: !1539)
!11773 = !DILocation(line: 0, scope: !11770)
!11774 = !DILocation(line: 1794, column: 11, scope: !11770)
!11775 = !DILocation(line: 1794, column: 47, scope: !11770)
!11776 = !DILocation(line: 1794, column: 3, scope: !11770)
!11777 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11433, file: !11433, line: 2403, type: !11778, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11780)
!11778 = !DISubroutineType(types: !11779)
!11779 = !{!169, !1539}
!11780 = !{!11781}
!11781 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11777, file: !11433, line: 2403, type: !1539)
!11782 = !DILocation(line: 0, scope: !11777)
!11783 = !DILocation(line: 2405, column: 20, scope: !11777)
!11784 = !DILocation(line: 2405, column: 10, scope: !11777)
!11785 = !DILocation(line: 2405, column: 3, scope: !11777)
!11786 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1593, file: !1593, line: 1583, type: !1519, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11787)
!11787 = !{!11788, !11789, !11790, !11791, !11792, !11793}
!11788 = !DILocalVariable(name: "dev", arg: 1, scope: !11786, file: !1593, line: 1583, type: !1498)
!11789 = !DILocalVariable(name: "config", scope: !11786, file: !1593, line: 1585, type: !11124)
!11790 = !DILocalVariable(name: "data", scope: !11786, file: !1593, line: 1586, type: !11247)
!11791 = !DILocalVariable(name: "ll_parity", scope: !11786, file: !1593, line: 1587, type: !113)
!11792 = !DILocalVariable(name: "ll_datawidth", scope: !11786, file: !1593, line: 1588, type: !113)
!11793 = !DILocalVariable(name: "err", scope: !11786, file: !1593, line: 1589, type: !105)
!11794 = !DILocation(line: 0, scope: !11786)
!11795 = !DILocation(line: 1585, column: 48, scope: !11786)
!11796 = !DILocation(line: 1586, column: 38, scope: !11786)
!11797 = !DILocation(line: 1591, column: 2, scope: !11786)
!11798 = !DILocation(line: 1593, column: 29, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11786, file: !1593, line: 1593, column: 6)
!11800 = !DILocation(line: 1593, column: 7, scope: !11799)
!11801 = !DILocation(line: 1593, column: 6, scope: !11786)
!11802 = !DILocation(line: 1594, column: 3, scope: !11803)
!11803 = distinct !DILexicalBlock(scope: !11804, file: !1593, line: 1594, column: 3)
!11804 = distinct !DILexicalBlock(scope: !11805, file: !1593, line: 1594, column: 3)
!11805 = distinct !DILexicalBlock(scope: !11806, file: !1593, line: 1594, column: 3)
!11806 = distinct !DILexicalBlock(scope: !11807, file: !1593, line: 1594, column: 3)
!11807 = distinct !DILexicalBlock(scope: !11799, file: !1593, line: 1593, column: 37)
!11808 = !DILocation(line: 1595, column: 3, scope: !11807)
!11809 = !DILocation(line: 1599, column: 31, scope: !11786)
!11810 = !DILocation(line: 1599, column: 71, scope: !11786)
!11811 = !DILocation(line: 1599, column: 8, scope: !11786)
!11812 = !DILocation(line: 1600, column: 10, scope: !11813)
!11813 = distinct !DILexicalBlock(scope: !11786, file: !1593, line: 1600, column: 6)
!11814 = !DILocation(line: 1600, column: 6, scope: !11786)
!11815 = !DILocation(line: 1601, column: 3, scope: !11816)
!11816 = distinct !DILexicalBlock(scope: !11817, file: !1593, line: 1601, column: 3)
!11817 = distinct !DILexicalBlock(scope: !11818, file: !1593, line: 1601, column: 3)
!11818 = distinct !DILexicalBlock(scope: !11819, file: !1593, line: 1601, column: 3)
!11819 = distinct !DILexicalBlock(scope: !11820, file: !1593, line: 1601, column: 3)
!11820 = distinct !DILexicalBlock(scope: !11813, file: !1593, line: 1600, column: 16)
!11821 = !DILocation(line: 1602, column: 3, scope: !11820)
!11822 = !DILocation(line: 1616, column: 36, scope: !11786)
!11823 = !DILocation(line: 1616, column: 8, scope: !11786)
!11824 = !DILocation(line: 1617, column: 10, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11786, file: !1593, line: 1617, column: 6)
!11826 = !DILocation(line: 1617, column: 6, scope: !11786)
!11827 = !DILocation(line: 1621, column: 27, scope: !11786)
!11828 = !DILocation(line: 1621, column: 2, scope: !11786)
!11829 = !DILocation(line: 1624, column: 40, scope: !11786)
!11830 = !DILocation(line: 1624, column: 2, scope: !11786)
!11831 = !DILocation(line: 1630, column: 14, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11786, file: !1593, line: 1630, column: 6)
!11833 = !DILocation(line: 1630, column: 6, scope: !11786)
!11834 = !DILocation(line: 1640, column: 4, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11836, file: !1593, line: 1640, column: 4)
!11836 = distinct !DILexicalBlock(scope: !11837, file: !1593, line: 1640, column: 4)
!11837 = distinct !DILexicalBlock(scope: !11838, file: !1593, line: 1640, column: 4)
!11838 = distinct !DILexicalBlock(scope: !11839, file: !1593, line: 1640, column: 4)
!11839 = distinct !DILexicalBlock(scope: !11840, file: !1593, line: 1639, column: 28)
!11840 = distinct !DILexicalBlock(scope: !11841, file: !1593, line: 1639, column: 7)
!11841 = distinct !DILexicalBlock(scope: !11842, file: !1593, line: 1638, column: 9)
!11842 = distinct !DILexicalBlock(scope: !11832, file: !1593, line: 1634, column: 13)
!11843 = !DILocation(line: 0, scope: !11832)
!11844 = !DILocation(line: 1649, column: 35, scope: !11786)
!11845 = !DILocation(line: 1649, column: 2, scope: !11786)
!11846 = !DILocation(line: 1654, column: 14, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11786, file: !1593, line: 1654, column: 6)
!11848 = !DILocation(line: 1654, column: 6, scope: !11786)
!11849 = !DILocation(line: 1655, column: 3, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11847, file: !1593, line: 1654, column: 31)
!11851 = !DILocation(line: 1656, column: 2, scope: !11850)
!11852 = !DILocation(line: 1659, column: 37, scope: !11786)
!11853 = !DILocation(line: 1659, column: 2, scope: !11786)
!11854 = !DILocation(line: 1662, column: 14, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11786, file: !1593, line: 1662, column: 6)
!11856 = !DILocation(line: 1662, column: 6, scope: !11786)
!11857 = !DILocation(line: 1663, column: 37, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11855, file: !1593, line: 1662, column: 27)
!11859 = !DILocation(line: 1663, column: 3, scope: !11858)
!11860 = !DILocation(line: 1664, column: 2, scope: !11858)
!11861 = !DILocation(line: 1684, column: 26, scope: !11786)
!11862 = !DILocation(line: 1684, column: 2, scope: !11786)
!11863 = !DILocation(line: 1722, column: 2, scope: !11786)
!11864 = !DILocation(line: 1724, column: 1, scope: !11786)
!11865 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1593, file: !1593, line: 651, type: !11866, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11868)
!11866 = !DISubroutineType(types: !11867)
!11867 = !{null, !1498}
!11868 = !{!11869, !11870, !11871}
!11869 = !DILocalVariable(name: "dev", arg: 1, scope: !11865, file: !1593, line: 651, type: !1498)
!11870 = !DILocalVariable(name: "data", scope: !11865, file: !1593, line: 653, type: !11247)
!11871 = !DILocalVariable(name: "clk", scope: !11865, file: !1593, line: 654, type: !11872)
!11872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1498)
!11873 = !DILocation(line: 0, scope: !11865)
!11874 = !DILocation(line: 653, column: 38, scope: !11865)
!11875 = !DILocation(line: 656, column: 8, scope: !11865)
!11876 = !DILocation(line: 656, column: 14, scope: !11865)
!11877 = !DILocation(line: 657, column: 1, scope: !11865)
!11878 = distinct !DISubprogram(name: "device_is_ready", scope: !10243, file: !10243, line: 47, type: !11879, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11881)
!11879 = !DISubroutineType(types: !11880)
!11880 = !{!492, !1498}
!11881 = !{!11882}
!11882 = !DILocalVariable(name: "dev", arg: 1, scope: !11878, file: !10243, line: 47, type: !1498)
!11883 = !DILocation(line: 0, scope: !11878)
!11884 = !DILocation(line: 55, column: 2, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11878, file: !10243, line: 55, column: 2)
!11886 = !{i64 2154359697}
!11887 = !DILocation(line: 56, column: 9, scope: !11878)
!11888 = !DILocation(line: 56, column: 2, scope: !11878)
!11889 = distinct !DISubprogram(name: "clock_control_on", scope: !956, file: !956, line: 123, type: !1557, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11890)
!11890 = !{!11891, !11892, !11893}
!11891 = !DILocalVariable(name: "dev", arg: 1, scope: !11889, file: !956, line: 123, type: !1498)
!11892 = !DILocalVariable(name: "sys", arg: 2, scope: !11889, file: !956, line: 124, type: !1051)
!11893 = !DILocalVariable(name: "api", scope: !11889, file: !956, line: 126, type: !1550)
!11894 = !DILocation(line: 0, scope: !11889)
!11895 = !DILocation(line: 127, column: 49, scope: !11889)
!11896 = !DILocation(line: 129, column: 14, scope: !11889)
!11897 = !DILocation(line: 129, column: 9, scope: !11889)
!11898 = !DILocation(line: 129, column: 2, scope: !11889)
!11899 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1633, file: !1633, line: 342, type: !11900, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11902)
!11900 = !DISubroutineType(types: !11901)
!11901 = !{!105, !1630, !169}
!11902 = !{!11903, !11904, !11905, !11906}
!11903 = !DILocalVariable(name: "config", arg: 1, scope: !11899, file: !1633, line: 342, type: !1630)
!11904 = !DILocalVariable(name: "id", arg: 2, scope: !11899, file: !1633, line: 343, type: !169)
!11905 = !DILocalVariable(name: "ret", scope: !11899, file: !1633, line: 345, type: !105)
!11906 = !DILocalVariable(name: "state", scope: !11899, file: !1633, line: 346, type: !1636)
!11907 = !DILocation(line: 0, scope: !11899)
!11908 = !DILocation(line: 346, column: 2, scope: !11899)
!11909 = !DILocation(line: 348, column: 8, scope: !11899)
!11910 = !DILocation(line: 349, column: 10, scope: !11911)
!11911 = distinct !DILexicalBlock(scope: !11899, file: !1633, line: 349, column: 6)
!11912 = !DILocation(line: 349, column: 6, scope: !11899)
!11913 = !DILocation(line: 353, column: 44, scope: !11899)
!11914 = !DILocation(line: 353, column: 9, scope: !11899)
!11915 = !DILocation(line: 353, column: 2, scope: !11899)
!11916 = !DILocation(line: 354, column: 1, scope: !11899)
!11917 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11433, file: !11433, line: 497, type: !11611, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11918)
!11918 = !{!11919, !11920, !11921}
!11919 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11917, file: !11433, line: 497, type: !1539)
!11920 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11917, file: !11433, line: 497, type: !113)
!11921 = !DILocalVariable(name: "val", scope: !11922, file: !11433, line: 499, type: !113)
!11922 = distinct !DILexicalBlock(scope: !11917, file: !11433, line: 499, column: 3)
!11923 = !DILocation(line: 0, scope: !11917)
!11924 = !DILocation(line: 499, column: 3, scope: !11922)
!11925 = !DILocalVariable(name: "addr", arg: 1, scope: !11926, file: !7751, line: 476, type: !1589)
!11926 = distinct !DISubprogram(name: "__LDREXW", scope: !7751, file: !7751, line: 476, type: !11927, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11929)
!11927 = !DISubroutineType(types: !11928)
!11928 = !{!113, !1589}
!11929 = !{!11925, !11930}
!11930 = !DILocalVariable(name: "result", scope: !11926, file: !7751, line: 478, type: !113)
!11931 = !DILocation(line: 0, scope: !11926, inlinedAt: !11932)
!11932 = distinct !DILocation(line: 499, column: 3, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11922, file: !11433, line: 499, column: 3)
!11934 = !DILocation(line: 480, column: 4, scope: !11926, inlinedAt: !11932)
!11935 = !{i64 2862968}
!11936 = !DILocation(line: 499, column: 3, scope: !11933)
!11937 = !DILocation(line: 0, scope: !11922)
!11938 = !DILocalVariable(name: "value", arg: 1, scope: !11939, file: !7751, line: 527, type: !113)
!11939 = distinct !DISubprogram(name: "__STREXW", scope: !7751, file: !7751, line: 527, type: !11940, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11942)
!11940 = !DISubroutineType(types: !11941)
!11941 = !{!113, !113, !1589}
!11942 = !{!11938, !11943, !11944}
!11943 = !DILocalVariable(name: "addr", arg: 2, scope: !11939, file: !7751, line: 527, type: !1589)
!11944 = !DILocalVariable(name: "result", scope: !11939, file: !7751, line: 529, type: !113)
!11945 = !DILocation(line: 0, scope: !11939, inlinedAt: !11946)
!11946 = distinct !DILocation(line: 499, column: 3, scope: !11922)
!11947 = !DILocation(line: 531, column: 4, scope: !11939, inlinedAt: !11946)
!11948 = !{i64 2864404}
!11949 = distinct !{!11949, !11924, !11924}
!11950 = !DILocation(line: 500, column: 1, scope: !11917)
!11951 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11433, file: !11433, line: 850, type: !11620, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11952)
!11952 = !{!11953, !11954, !11955, !11956}
!11953 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11951, file: !11433, line: 850, type: !1539)
!11954 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11951, file: !11433, line: 850, type: !113)
!11955 = !DILocalVariable(name: "Parity", arg: 3, scope: !11951, file: !11433, line: 850, type: !113)
!11956 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11951, file: !11433, line: 851, type: !113)
!11957 = !DILocation(line: 0, scope: !11951)
!11958 = !DILocation(line: 853, column: 3, scope: !11951)
!11959 = !DILocation(line: 854, column: 3, scope: !11951)
!11960 = !DILocation(line: 855, column: 1, scope: !11951)
!11961 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11433, file: !11433, line: 1337, type: !11496, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11962)
!11962 = !{!11963}
!11963 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11961, file: !11433, line: 1337, type: !1539)
!11964 = !DILocation(line: 0, scope: !11961)
!11965 = !DILocation(line: 1339, column: 3, scope: !11961)
!11966 = !DILocation(line: 1340, column: 1, scope: !11961)
!11967 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1633, file: !1633, line: 316, type: !11968, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11970)
!11968 = !DISubroutineType(types: !11969)
!11969 = !{!105, !1630, !1636}
!11970 = !{!11971, !11972, !11973}
!11971 = !DILocalVariable(name: "config", arg: 1, scope: !11967, file: !1633, line: 317, type: !1630)
!11972 = !DILocalVariable(name: "state", arg: 2, scope: !11967, file: !1633, line: 318, type: !1636)
!11973 = !DILocalVariable(name: "reg", scope: !11967, file: !1633, line: 320, type: !22)
!11974 = !DILocation(line: 0, scope: !11967)
!11975 = !DILocation(line: 329, column: 39, scope: !11967)
!11976 = !DILocation(line: 329, column: 52, scope: !11967)
!11977 = !DILocation(line: 329, column: 9, scope: !11967)
!11978 = !DILocation(line: 329, column: 2, scope: !11967)
!11979 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !481, file: !481, line: 730, type: !11879, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1454, retainedNodes: !11980)
!11980 = !{!11981}
!11981 = !DILocalVariable(name: "dev", arg: 1, scope: !11979, file: !481, line: 730, type: !1498)
!11982 = !DILocation(line: 0, scope: !11979)
!11983 = !DILocation(line: 732, column: 9, scope: !11979)
!11984 = !DILocation(line: 732, column: 2, scope: !11979)
!11985 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1754, file: !1754, line: 270, type: !1760, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !11986)
!11986 = !{!11987}
!11987 = !DILocalVariable(name: "dev", arg: 1, scope: !11985, file: !1754, line: 270, type: !1762)
!11988 = !DILocation(line: 0, scope: !11985)
!11989 = !DILocation(line: 274, column: 2, scope: !11985)
!11990 = !DILocation(line: 275, column: 12, scope: !11985)
!11991 = !DILocation(line: 276, column: 15, scope: !11985)
!11992 = !DILocation(line: 277, column: 16, scope: !11985)
!11993 = !DILocation(line: 278, column: 15, scope: !11985)
!11994 = !DILocation(line: 279, column: 16, scope: !11985)
!11995 = !DILocation(line: 282, column: 2, scope: !11985)
!11996 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !679, file: !679, line: 1814, type: !7791, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !11997)
!11997 = !{!11998, !11999}
!11998 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11996, file: !679, line: 1814, type: !912)
!11999 = !DILocalVariable(name: "priority", arg: 2, scope: !11996, file: !679, line: 1814, type: !113)
!12000 = !DILocation(line: 0, scope: !11996)
!12001 = !DILocation(line: 1822, column: 46, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !12003, file: !679, line: 1821, column: 3)
!12003 = distinct !DILexicalBlock(scope: !11996, file: !679, line: 1816, column: 7)
!12004 = !DILocation(line: 1824, column: 1, scope: !11996)
!12005 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1754, file: !1754, line: 118, type: !7688, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12006)
!12006 = !{!12007, !12008}
!12007 = !DILocalVariable(name: "arg", arg: 1, scope: !12005, file: !1754, line: 118, type: !104)
!12008 = !DILocalVariable(name: "dticks", scope: !12005, file: !1754, line: 121, type: !113)
!12009 = !DILocation(line: 0, scope: !12005)
!12010 = !DILocation(line: 124, column: 2, scope: !12005)
!12011 = !DILocation(line: 129, column: 17, scope: !12005)
!12012 = !DILocation(line: 129, column: 14, scope: !12005)
!12013 = !DILocation(line: 130, column: 15, scope: !12005)
!12014 = !DILocation(line: 145, column: 27, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !12016, file: !1754, line: 132, column: 16)
!12016 = distinct !DILexicalBlock(scope: !12005, file: !1754, line: 132, column: 6)
!12017 = !DILocation(line: 145, column: 25, scope: !12015)
!12018 = !DILocation(line: 145, column: 45, scope: !12015)
!12019 = !DILocation(line: 146, column: 30, scope: !12015)
!12020 = !DILocation(line: 146, column: 20, scope: !12015)
!12021 = !DILocation(line: 147, column: 3, scope: !12015)
!12022 = !DILocation(line: 151, column: 2, scope: !12005)
!12023 = !DILocation(line: 152, column: 1, scope: !12005)
!12024 = distinct !DISubprogram(name: "elapsed", scope: !1754, file: !1754, line: 85, type: !395, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12025)
!12025 = !{!12026, !12027, !12028}
!12026 = !DILocalVariable(name: "val1", scope: !12024, file: !1754, line: 87, type: !113)
!12027 = !DILocalVariable(name: "ctrl", scope: !12024, file: !1754, line: 88, type: !113)
!12028 = !DILocalVariable(name: "val2", scope: !12024, file: !1754, line: 89, type: !113)
!12029 = !DILocation(line: 87, column: 27, scope: !12024)
!12030 = !DILocation(line: 0, scope: !12024)
!12031 = !DILocation(line: 88, column: 27, scope: !12024)
!12032 = !DILocation(line: 89, column: 27, scope: !12024)
!12033 = !DILocation(line: 105, column: 12, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12024, file: !1754, line: 105, column: 6)
!12035 = !DILocation(line: 106, column: 6, scope: !12034)
!12036 = !DILocation(line: 107, column: 16, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12034, file: !1754, line: 106, column: 24)
!12038 = !DILocation(line: 111, column: 18, scope: !12037)
!12039 = !DILocation(line: 112, column: 2, scope: !12037)
!12040 = !DILocation(line: 114, column: 20, scope: !12024)
!12041 = !DILocation(line: 114, column: 30, scope: !12024)
!12042 = !DILocation(line: 114, column: 28, scope: !12024)
!12043 = !DILocation(line: 114, column: 2, scope: !12024)
!12044 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1754, file: !1754, line: 154, type: !12045, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12047)
!12045 = !DISubroutineType(types: !12046)
!12046 = !{null, !116, !492}
!12047 = !{!12048, !12049, !12050, !12051, !12052, !12053, !12054, !12059, !12060}
!12048 = !DILocalVariable(name: "ticks", arg: 1, scope: !12044, file: !1754, line: 154, type: !116)
!12049 = !DILocalVariable(name: "idle", arg: 2, scope: !12044, file: !1754, line: 154, type: !492)
!12050 = !DILocalVariable(name: "delay", scope: !12044, file: !1754, line: 169, type: !113)
!12051 = !DILocalVariable(name: "val1", scope: !12044, file: !1754, line: 170, type: !113)
!12052 = !DILocalVariable(name: "val2", scope: !12044, file: !1754, line: 170, type: !113)
!12053 = !DILocalVariable(name: "last_load_", scope: !12044, file: !1754, line: 171, type: !113)
!12054 = !DILocalVariable(name: "key", scope: !12044, file: !1754, line: 176, type: !12055)
!12055 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !12056)
!12056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !12057)
!12057 = !{!12058}
!12058 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12056, file: !236, line: 33, baseType: !105, size: 32)
!12059 = !DILocalVariable(name: "pending", scope: !12044, file: !1754, line: 178, type: !113)
!12060 = !DILocalVariable(name: "unannounced", scope: !12044, file: !1754, line: 185, type: !113)
!12061 = !DILocation(line: 0, scope: !12044)
!12062 = !DILocation(line: 162, column: 49, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12044, file: !1754, line: 162, column: 6)
!12064 = !DILocation(line: 163, column: 17, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !12063, file: !1754, line: 162, column: 78)
!12066 = !DILocation(line: 164, column: 13, scope: !12065)
!12067 = !DILocation(line: 165, column: 3, scope: !12065)
!12068 = !DILocation(line: 171, column: 24, scope: !12044)
!12069 = !DILocation(line: 173, column: 10, scope: !12044)
!12070 = !DILocation(line: 174, column: 10, scope: !12044)
!12071 = !DILocalVariable(name: "l", arg: 1, scope: !12072, file: !236, line: 136, type: !12075)
!12072 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !12073, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12076)
!12073 = !DISubroutineType(types: !12074)
!12074 = !{!12055, !12075}
!12075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 32)
!12076 = !{!12071, !12077}
!12077 = !DILocalVariable(name: "k", scope: !12072, file: !236, line: 139, type: !12055)
!12078 = !DILocation(line: 0, scope: !12072, inlinedAt: !12079)
!12079 = distinct !DILocation(line: 176, column: 25, scope: !12044)
!12080 = !DILocation(line: 55, column: 2, scope: !12081, inlinedAt: !12085)
!12081 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7433, file: !7433, line: 42, type: !7434, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12082)
!12082 = !{!12083, !12084}
!12083 = !DILocalVariable(name: "key", scope: !12081, file: !7433, line: 44, type: !32)
!12084 = !DILocalVariable(name: "tmp", scope: !12081, file: !7433, line: 53, type: !32)
!12085 = distinct !DILocation(line: 145, column: 10, scope: !12072, inlinedAt: !12079)
!12086 = !{i64 1925506}
!12087 = !DILocation(line: 0, scope: !12081, inlinedAt: !12085)
!12088 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !12079)
!12089 = distinct !DILexicalBlock(scope: !12090, file: !236, line: 148, column: 2)
!12090 = distinct !DILexicalBlock(scope: !12072, file: !236, line: 148, column: 2)
!12091 = !DILocation(line: 148, column: 2, scope: !12090, inlinedAt: !12079)
!12092 = !DILocation(line: 148, column: 2, scope: !12093, inlinedAt: !12079)
!12093 = distinct !DILexicalBlock(scope: !12089, file: !236, line: 148, column: 2)
!12094 = !DILocation(line: 160, column: 2, scope: !12072, inlinedAt: !12079)
!12095 = !DILocation(line: 178, column: 21, scope: !12044)
!12096 = !DILocation(line: 180, column: 18, scope: !12044)
!12097 = !DILocation(line: 182, column: 14, scope: !12044)
!12098 = !DILocation(line: 183, column: 15, scope: !12044)
!12099 = !DILocation(line: 185, column: 39, scope: !12044)
!12100 = !DILocation(line: 185, column: 37, scope: !12044)
!12101 = !DILocation(line: 187, column: 27, scope: !12102)
!12102 = distinct !DILexicalBlock(scope: !12044, file: !1754, line: 187, column: 6)
!12103 = !DILocation(line: 187, column: 6, scope: !12044)
!12104 = !DILocation(line: 202, column: 27, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12102, file: !1754, line: 195, column: 9)
!12106 = !DILocation(line: 202, column: 48, scope: !12105)
!12107 = !DILocation(line: 203, column: 9, scope: !12105)
!12108 = !DILocation(line: 204, column: 11, scope: !12105)
!12109 = !DILocation(line: 205, column: 13, scope: !12110)
!12110 = distinct !DILexicalBlock(scope: !12105, file: !1754, line: 205, column: 7)
!12111 = !DILocation(line: 205, column: 7, scope: !12105)
!12112 = !DILocation(line: 0, scope: !12102)
!12113 = !DILocation(line: 212, column: 18, scope: !12044)
!12114 = !DILocation(line: 214, column: 28, scope: !12044)
!12115 = !DILocation(line: 214, column: 16, scope: !12044)
!12116 = !DILocation(line: 215, column: 15, scope: !12044)
!12117 = !DILocation(line: 227, column: 11, scope: !12118)
!12118 = distinct !DILexicalBlock(scope: !12044, file: !1754, line: 227, column: 6)
!12119 = !DILocation(line: 227, column: 6, scope: !12044)
!12120 = !DILocation(line: 228, column: 15, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12118, file: !1754, line: 227, column: 19)
!12122 = !DILocation(line: 228, column: 38, scope: !12121)
!12123 = !DILocation(line: 228, column: 24, scope: !12121)
!12124 = !DILocation(line: 229, column: 2, scope: !12121)
!12125 = !DILocation(line: 230, column: 24, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12118, file: !1754, line: 229, column: 9)
!12127 = !DILocation(line: 230, column: 15, scope: !12126)
!12128 = !DILocation(line: 0, scope: !12118)
!12129 = !DILocalVariable(name: "key", arg: 2, scope: !12130, file: !236, line: 190, type: !12055)
!12130 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !12131, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12133)
!12131 = !DISubroutineType(types: !12132)
!12132 = !{null, !12075, !12055}
!12133 = !{!12134, !12129}
!12134 = !DILocalVariable(name: "l", arg: 1, scope: !12130, file: !236, line: 189, type: !12075)
!12135 = !DILocation(line: 0, scope: !12130, inlinedAt: !12136)
!12136 = distinct !DILocation(line: 232, column: 2, scope: !12044)
!12137 = !DILocation(line: 194, column: 2, scope: !12138, inlinedAt: !12136)
!12138 = distinct !DILexicalBlock(scope: !12139, file: !236, line: 194, column: 2)
!12139 = distinct !DILexicalBlock(scope: !12130, file: !236, line: 194, column: 2)
!12140 = !DILocation(line: 194, column: 2, scope: !12139, inlinedAt: !12136)
!12141 = !DILocation(line: 194, column: 2, scope: !12142, inlinedAt: !12136)
!12142 = distinct !DILexicalBlock(scope: !12138, file: !236, line: 194, column: 2)
!12143 = !DILocalVariable(name: "key", arg: 1, scope: !12144, file: !7433, line: 84, type: !32)
!12144 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7433, file: !7433, line: 84, type: !7444, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12145)
!12145 = !{!12143}
!12146 = !DILocation(line: 0, scope: !12144, inlinedAt: !12147)
!12147 = distinct !DILocation(line: 215, column: 2, scope: !12130, inlinedAt: !12136)
!12148 = !DILocation(line: 95, column: 2, scope: !12144, inlinedAt: !12147)
!12149 = !{i64 1926323}
!12150 = !DILocation(line: 234, column: 1, scope: !12044)
!12151 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1754, file: !1754, line: 236, type: !395, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12152)
!12152 = !{!12153, !12154}
!12153 = !DILocalVariable(name: "key", scope: !12151, file: !1754, line: 242, type: !12055)
!12154 = !DILocalVariable(name: "cyc", scope: !12151, file: !1754, line: 243, type: !113)
!12155 = !DILocation(line: 0, scope: !12072, inlinedAt: !12156)
!12156 = distinct !DILocation(line: 242, column: 25, scope: !12151)
!12157 = !DILocation(line: 55, column: 2, scope: !12081, inlinedAt: !12158)
!12158 = distinct !DILocation(line: 145, column: 10, scope: !12072, inlinedAt: !12156)
!12159 = !DILocation(line: 0, scope: !12081, inlinedAt: !12158)
!12160 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !12156)
!12161 = !DILocation(line: 148, column: 2, scope: !12090, inlinedAt: !12156)
!12162 = !DILocation(line: 148, column: 2, scope: !12093, inlinedAt: !12156)
!12163 = !DILocation(line: 160, column: 2, scope: !12072, inlinedAt: !12156)
!12164 = !DILocation(line: 0, scope: !12151)
!12165 = !DILocation(line: 243, column: 17, scope: !12151)
!12166 = !DILocation(line: 243, column: 29, scope: !12151)
!12167 = !DILocation(line: 243, column: 43, scope: !12151)
!12168 = !DILocation(line: 0, scope: !12130, inlinedAt: !12169)
!12169 = distinct !DILocation(line: 245, column: 2, scope: !12151)
!12170 = !DILocation(line: 194, column: 2, scope: !12138, inlinedAt: !12169)
!12171 = !DILocation(line: 194, column: 2, scope: !12139, inlinedAt: !12169)
!12172 = !DILocation(line: 194, column: 2, scope: !12142, inlinedAt: !12169)
!12173 = !DILocation(line: 243, column: 27, scope: !12151)
!12174 = !DILocation(line: 243, column: 41, scope: !12151)
!12175 = !DILocation(line: 0, scope: !12144, inlinedAt: !12176)
!12176 = distinct !DILocation(line: 215, column: 2, scope: !12130, inlinedAt: !12169)
!12177 = !DILocation(line: 95, column: 2, scope: !12144, inlinedAt: !12176)
!12178 = !DILocation(line: 246, column: 13, scope: !12151)
!12179 = !DILocation(line: 246, column: 2, scope: !12151)
!12180 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1754, file: !1754, line: 249, type: !395, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !12181)
!12181 = !{!12182, !12183}
!12182 = !DILocalVariable(name: "key", scope: !12180, file: !1754, line: 251, type: !12055)
!12183 = !DILocalVariable(name: "ret", scope: !12180, file: !1754, line: 252, type: !113)
!12184 = !DILocation(line: 0, scope: !12072, inlinedAt: !12185)
!12185 = distinct !DILocation(line: 251, column: 25, scope: !12180)
!12186 = !DILocation(line: 55, column: 2, scope: !12081, inlinedAt: !12187)
!12187 = distinct !DILocation(line: 145, column: 10, scope: !12072, inlinedAt: !12185)
!12188 = !DILocation(line: 0, scope: !12081, inlinedAt: !12187)
!12189 = !DILocation(line: 148, column: 2, scope: !12089, inlinedAt: !12185)
!12190 = !DILocation(line: 148, column: 2, scope: !12090, inlinedAt: !12185)
!12191 = !DILocation(line: 148, column: 2, scope: !12093, inlinedAt: !12185)
!12192 = !DILocation(line: 160, column: 2, scope: !12072, inlinedAt: !12185)
!12193 = !DILocation(line: 0, scope: !12180)
!12194 = !DILocation(line: 252, column: 17, scope: !12180)
!12195 = !DILocation(line: 252, column: 29, scope: !12180)
!12196 = !DILocation(line: 0, scope: !12130, inlinedAt: !12197)
!12197 = distinct !DILocation(line: 254, column: 2, scope: !12180)
!12198 = !DILocation(line: 194, column: 2, scope: !12138, inlinedAt: !12197)
!12199 = !DILocation(line: 194, column: 2, scope: !12139, inlinedAt: !12197)
!12200 = !DILocation(line: 194, column: 2, scope: !12142, inlinedAt: !12197)
!12201 = !DILocation(line: 252, column: 27, scope: !12180)
!12202 = !DILocation(line: 0, scope: !12144, inlinedAt: !12203)
!12203 = distinct !DILocation(line: 215, column: 2, scope: !12130, inlinedAt: !12197)
!12204 = !DILocation(line: 95, column: 2, scope: !12144, inlinedAt: !12203)
!12205 = !DILocation(line: 255, column: 2, scope: !12180)
!12206 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1754, file: !1754, line: 258, type: !266, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !397)
!12207 = !DILocation(line: 260, column: 6, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12206, file: !1754, line: 260, column: 6)
!12209 = !DILocation(line: 260, column: 16, scope: !12208)
!12210 = !DILocation(line: 260, column: 6, scope: !12206)
!12211 = !DILocation(line: 261, column: 17, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12208, file: !1754, line: 260, column: 34)
!12213 = !DILocation(line: 262, column: 2, scope: !12212)
!12214 = !DILocation(line: 263, column: 1, scope: !12206)
!12215 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1754, file: !1754, line: 265, type: !266, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1678, retainedNodes: !397)
!12216 = !DILocation(line: 267, column: 16, scope: !12215)
!12217 = !DILocation(line: 268, column: 1, scope: !12215)
!12218 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12219, file: !12219, line: 9, type: !12220, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2969, retainedNodes: !12243)
!12219 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12220 = !DISubroutineType(types: !12221)
!12221 = !{!105, !12222, !169, !12242}
!12222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12223, size: 32)
!12223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12224)
!12224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1633, line: 60, size: 64, elements: !12225)
!12225 = !{!12226, !12241}
!12226 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12224, file: !1633, line: 69, baseType: !12227, size: 32)
!12227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12228, size: 32)
!12228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12229)
!12229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1633, line: 50, size: 64, elements: !12230)
!12230 = !{!12231, !12239, !12240}
!12231 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12229, file: !1633, line: 52, baseType: !12232, size: 32)
!12232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12233, size: 32)
!12233 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12234)
!12234 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1644, line: 37, baseType: !12235)
!12235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1644, line: 32, size: 64, elements: !12236)
!12236 = !{!12237, !12238}
!12237 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12235, file: !1644, line: 34, baseType: !113, size: 32)
!12238 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12235, file: !1644, line: 36, baseType: !113, size: 32, offset: 32)
!12239 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12229, file: !1633, line: 54, baseType: !169, size: 8, offset: 32)
!12240 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12229, file: !1633, line: 56, baseType: !169, size: 8, offset: 40)
!12241 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12224, file: !1633, line: 71, baseType: !169, size: 8, offset: 32)
!12242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12227, size: 32)
!12243 = !{!12244, !12245, !12246}
!12244 = !DILocalVariable(name: "config", arg: 1, scope: !12218, file: !12219, line: 9, type: !12222)
!12245 = !DILocalVariable(name: "id", arg: 2, scope: !12218, file: !12219, line: 9, type: !169)
!12246 = !DILocalVariable(name: "state", arg: 3, scope: !12218, file: !12219, line: 10, type: !12242)
!12247 = !DILocation(line: 0, scope: !12218)
!12248 = !DILocation(line: 12, column: 20, scope: !12218)
!12249 = !DILocation(line: 13, column: 27, scope: !12218)
!12250 = !DILocation(line: 13, column: 42, scope: !12218)
!12251 = !DILocation(line: 13, column: 19, scope: !12218)
!12252 = !DILocation(line: 13, column: 16, scope: !12218)
!12253 = !DILocation(line: 13, column: 2, scope: !12218)
!12254 = distinct !{!12254, !12253, !12255}
!12255 = !DILocation(line: 19, column: 2, scope: !12218)
!12256 = !DILocation(line: 14, column: 23, scope: !12257)
!12257 = distinct !DILexicalBlock(scope: !12258, file: !12219, line: 14, column: 7)
!12258 = distinct !DILexicalBlock(scope: !12218, file: !12219, line: 13, column: 54)
!12259 = !DILocation(line: 14, column: 10, scope: !12257)
!12260 = !DILocation(line: 18, column: 11, scope: !12258)
!12261 = !DILocation(line: 14, column: 7, scope: !12258)
!12262 = !DILocation(line: 22, column: 1, scope: !12218)
!12263 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1873, file: !1873, line: 193, type: !12264, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !12273)
!12264 = !DISubroutineType(types: !12265)
!12265 = !{!105, !12266, !169, !22}
!12266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12267, size: 32)
!12267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12268)
!12268 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1644, line: 37, baseType: !12269)
!12269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1644, line: 32, size: 64, elements: !12270)
!12270 = !{!12271, !12272}
!12271 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12269, file: !1644, line: 34, baseType: !113, size: 32)
!12272 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12269, file: !1644, line: 36, baseType: !113, size: 32, offset: 32)
!12273 = !{!12274, !12275, !12276, !12277, !12278, !12279, !12280, !12281, !12283}
!12274 = !DILocalVariable(name: "pins", arg: 1, scope: !12263, file: !1873, line: 193, type: !12266)
!12275 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12263, file: !1873, line: 193, type: !169)
!12276 = !DILocalVariable(name: "reg", arg: 3, scope: !12263, file: !1873, line: 194, type: !22)
!12277 = !DILocalVariable(name: "pin", scope: !12263, file: !1873, line: 196, type: !113)
!12278 = !DILocalVariable(name: "mux", scope: !12263, file: !1873, line: 196, type: !113)
!12279 = !DILocalVariable(name: "pin_cgf", scope: !12263, file: !1873, line: 197, type: !113)
!12280 = !DILocalVariable(name: "ret", scope: !12263, file: !1873, line: 198, type: !105)
!12281 = !DILocalVariable(name: "i", scope: !12282, file: !1873, line: 209, type: !169)
!12282 = distinct !DILexicalBlock(scope: !12263, file: !1873, line: 209, column: 2)
!12283 = !DILocalVariable(name: "gpio_out", scope: !12284, file: !1873, line: 239, type: !113)
!12284 = distinct !DILexicalBlock(scope: !12285, file: !1873, line: 238, column: 55)
!12285 = distinct !DILexicalBlock(scope: !12286, file: !1873, line: 238, column: 14)
!12286 = distinct !DILexicalBlock(scope: !12287, file: !1873, line: 236, column: 14)
!12287 = distinct !DILexicalBlock(scope: !12288, file: !1873, line: 234, column: 7)
!12288 = distinct !DILexicalBlock(scope: !12289, file: !1873, line: 209, column: 41)
!12289 = distinct !DILexicalBlock(scope: !12282, file: !1873, line: 209, column: 2)
!12290 = !DILocation(line: 0, scope: !12263)
!12291 = !DILocation(line: 0, scope: !12282)
!12292 = !DILocation(line: 209, column: 25, scope: !12289)
!12293 = !DILocation(line: 209, column: 2, scope: !12282)
!12294 = distinct !{!12294, !12293, !12295}
!12295 = !DILocation(line: 259, column: 2, scope: !12282)
!12296 = !DILocation(line: 210, column: 17, scope: !12288)
!12297 = !DILocation(line: 234, column: 7, scope: !12287)
!12298 = !DILocation(line: 234, column: 33, scope: !12287)
!12299 = !DILocation(line: 234, column: 7, scope: !12288)
!12300 = !DILocation(line: 235, column: 22, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12287, file: !1873, line: 234, column: 49)
!12302 = !DILocation(line: 235, column: 29, scope: !12301)
!12303 = !DILocation(line: 236, column: 3, scope: !12301)
!12304 = !DILocation(line: 236, column: 14, scope: !12287)
!12305 = !DILocation(line: 239, column: 32, scope: !12284)
!12306 = !DILocation(line: 0, scope: !12284)
!12307 = !DILocation(line: 241, column: 8, scope: !12284)
!12308 = !DILocation(line: 246, column: 3, scope: !12284)
!12309 = !DILocation(line: 252, column: 9, scope: !12288)
!12310 = !DILocation(line: 255, column: 9, scope: !12288)
!12311 = !DILocation(line: 256, column: 11, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12288, file: !1873, line: 256, column: 7)
!12313 = !DILocation(line: 209, column: 37, scope: !12289)
!12314 = !DILocation(line: 256, column: 7, scope: !12288)
!12315 = !DILocation(line: 262, column: 1, scope: !12263)
!12316 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1873, file: !1873, line: 176, type: !12317, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !12319)
!12317 = !DISubroutineType(types: !12318)
!12318 = !{!105, !113, !113, !113}
!12319 = !{!12320, !12321, !12322, !12323}
!12320 = !DILocalVariable(name: "pin", arg: 1, scope: !12316, file: !1873, line: 176, type: !113)
!12321 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12316, file: !1873, line: 176, type: !113)
!12322 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12316, file: !1873, line: 176, type: !113)
!12323 = !DILocalVariable(name: "port_device", scope: !12316, file: !1873, line: 178, type: !1803)
!12324 = !DILocation(line: 0, scope: !12316)
!12325 = !DILocation(line: 180, column: 22, scope: !12326)
!12326 = distinct !DILexicalBlock(scope: !12316, file: !1873, line: 180, column: 6)
!12327 = !DILocation(line: 180, column: 6, scope: !12316)
!12328 = !DILocation(line: 180, column: 6, scope: !12326)
!12329 = !DILocation(line: 184, column: 16, scope: !12316)
!12330 = !DILocation(line: 186, column: 19, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12316, file: !1873, line: 186, column: 6)
!12332 = !DILocation(line: 186, column: 28, scope: !12331)
!12333 = !DILocation(line: 186, column: 33, scope: !12331)
!12334 = !DILocation(line: 186, column: 6, scope: !12316)
!12335 = !DILocation(line: 190, column: 43, scope: !12316)
!12336 = !DILocation(line: 190, column: 9, scope: !12316)
!12337 = !DILocation(line: 190, column: 2, scope: !12316)
!12338 = !DILocation(line: 191, column: 1, scope: !12316)
!12339 = distinct !DISubprogram(name: "device_is_ready", scope: !10243, file: !10243, line: 47, type: !12340, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !12342)
!12340 = !DISubroutineType(types: !12341)
!12341 = !{!492, !1803}
!12342 = !{!12343}
!12343 = !DILocalVariable(name: "dev", arg: 1, scope: !12339, file: !10243, line: 47, type: !1803)
!12344 = !DILocation(line: 0, scope: !12339)
!12345 = !DILocation(line: 55, column: 2, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12339, file: !10243, line: 55, column: 2)
!12347 = !{i64 2149163576}
!12348 = !DILocation(line: 56, column: 9, scope: !12339)
!12349 = !DILocation(line: 56, column: 2, scope: !12339)
!12350 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !481, file: !481, line: 730, type: !12340, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !12351)
!12351 = !{!12352}
!12352 = !DILocalVariable(name: "dev", arg: 1, scope: !12350, file: !481, line: 730, type: !1803)
!12353 = !DILocation(line: 0, scope: !12350)
!12354 = !DILocation(line: 732, column: 9, scope: !12350)
!12355 = !DILocation(line: 732, column: 2, scope: !12350)
!12356 = distinct !DISubprogram(name: "SystemInit", scope: !1923, file: !1923, line: 167, type: !266, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1881, retainedNodes: !397)
!12357 = !DILocation(line: 182, column: 1, scope: !12356)
!12358 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1923, file: !1923, line: 220, type: !266, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1881, retainedNodes: !12359)
!12359 = !{!12360, !12361, !12362, !12363, !12364}
!12360 = !DILocalVariable(name: "tmp", scope: !12358, file: !1923, line: 222, type: !113)
!12361 = !DILocalVariable(name: "pllvco", scope: !12358, file: !1923, line: 222, type: !113)
!12362 = !DILocalVariable(name: "pllp", scope: !12358, file: !1923, line: 222, type: !113)
!12363 = !DILocalVariable(name: "pllsource", scope: !12358, file: !1923, line: 222, type: !113)
!12364 = !DILocalVariable(name: "pllm", scope: !12358, file: !1923, line: 222, type: !113)
!12365 = !DILocation(line: 0, scope: !12358)
!12366 = !DILocation(line: 225, column: 14, scope: !12358)
!12367 = !DILocation(line: 225, column: 19, scope: !12358)
!12368 = !DILocation(line: 227, column: 3, scope: !12358)
!12369 = !DILocation(line: 234, column: 7, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12358, file: !1923, line: 228, column: 3)
!12371 = !DILocation(line: 240, column: 25, scope: !12370)
!12372 = !DILocation(line: 241, column: 19, scope: !12370)
!12373 = !DILocation(line: 241, column: 27, scope: !12370)
!12374 = !DILocation(line: 243, column: 21, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12370, file: !1923, line: 243, column: 11)
!12376 = !DILocation(line: 0, scope: !12375)
!12377 = !DILocation(line: 254, column: 22, scope: !12370)
!12378 = !DILocation(line: 254, column: 62, scope: !12370)
!12379 = !DILocation(line: 255, column: 31, scope: !12370)
!12380 = !DILocation(line: 256, column: 7, scope: !12370)
!12381 = !DILocation(line: 0, scope: !12370)
!12382 = !DILocation(line: 263, column: 30, scope: !12358)
!12383 = !DILocation(line: 263, column: 52, scope: !12358)
!12384 = !DILocation(line: 263, column: 9, scope: !12358)
!12385 = !DILocation(line: 265, column: 19, scope: !12358)
!12386 = !DILocation(line: 266, column: 1, scope: !12358)
!12387 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12388, file: !12388, line: 200, type: !12389, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !397)
!12388 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12389 = !DISubroutineType(types: !12390)
!12390 = !{!12391}
!12391 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2975, line: 44, baseType: !2974)
!12392 = !DILocation(line: 202, column: 3, scope: !12387)
!12393 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12388, file: !12388, line: 219, type: !12394, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !12418)
!12394 = !DISubroutineType(types: !12395)
!12395 = !{!12391, !12396}
!12396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12397, size: 32)
!12397 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12398, line: 70, baseType: !12399)
!12398 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12399 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12398, line: 49, size: 384, elements: !12400)
!12400 = !{!12401, !12402, !12403, !12404, !12405, !12406, !12407}
!12401 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12399, file: !12398, line: 51, baseType: !113, size: 32)
!12402 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12399, file: !12398, line: 54, baseType: !113, size: 32, offset: 32)
!12403 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12399, file: !12398, line: 57, baseType: !113, size: 32, offset: 64)
!12404 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12399, file: !12398, line: 60, baseType: !113, size: 32, offset: 96)
!12405 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12399, file: !12398, line: 63, baseType: !113, size: 32, offset: 128)
!12406 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12399, file: !12398, line: 66, baseType: !113, size: 32, offset: 160)
!12407 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12399, file: !12398, line: 69, baseType: !12408, size: 192, offset: 192)
!12408 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12409, line: 73, baseType: !12410)
!12409 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12410 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12409, line: 45, size: 192, elements: !12411)
!12411 = !{!12412, !12413, !12414, !12415, !12416, !12417}
!12412 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12410, file: !12409, line: 47, baseType: !113, size: 32)
!12413 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12410, file: !12409, line: 50, baseType: !113, size: 32, offset: 32)
!12414 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12410, file: !12409, line: 53, baseType: !113, size: 32, offset: 64)
!12415 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12410, file: !12409, line: 56, baseType: !113, size: 32, offset: 96)
!12416 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12410, file: !12409, line: 60, baseType: !113, size: 32, offset: 128)
!12417 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12410, file: !12409, line: 63, baseType: !113, size: 32, offset: 160)
!12418 = !{!12419, !12420, !12421, !12422, !12426}
!12419 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12393, file: !12388, line: 219, type: !12396)
!12420 = !DILocalVariable(name: "tickstart", scope: !12393, file: !12388, line: 221, type: !113)
!12421 = !DILocalVariable(name: "pll_config", scope: !12393, file: !12388, line: 221, type: !113)
!12422 = !DILocalVariable(name: "pwrclkchanged", scope: !12423, file: !12388, line: 391, type: !12425)
!12423 = distinct !DILexicalBlock(scope: !12424, file: !12388, line: 390, column: 3)
!12424 = distinct !DILexicalBlock(scope: !12393, file: !12388, line: 389, column: 6)
!12425 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !951, line: 188, baseType: !2981)
!12426 = !DILocalVariable(name: "tmpreg", scope: !12427, file: !12388, line: 400, type: !461)
!12427 = distinct !DILexicalBlock(scope: !12428, file: !12388, line: 400, column: 7)
!12428 = distinct !DILexicalBlock(scope: !12429, file: !12388, line: 399, column: 5)
!12429 = distinct !DILexicalBlock(scope: !12423, file: !12388, line: 398, column: 8)
!12430 = !DILocation(line: 0, scope: !12393)
!12431 = !DILocation(line: 224, column: 24, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12393, file: !12388, line: 224, column: 6)
!12433 = !DILocation(line: 224, column: 6, scope: !12393)
!12434 = !DILocation(line: 232, column: 27, scope: !12435)
!12435 = distinct !DILexicalBlock(scope: !12393, file: !12388, line: 232, column: 6)
!12436 = !DILocation(line: 232, column: 43, scope: !12435)
!12437 = !DILocation(line: 232, column: 69, scope: !12435)
!12438 = !DILocation(line: 232, column: 6, scope: !12393)
!12439 = !DILocation(line: 237, column: 9, scope: !12440)
!12440 = distinct !DILexicalBlock(scope: !12441, file: !12388, line: 237, column: 8)
!12441 = distinct !DILexicalBlock(scope: !12435, file: !12388, line: 233, column: 3)
!12442 = !DILocation(line: 237, column: 39, scope: !12440)
!12443 = !DILocation(line: 237, column: 60, scope: !12440)
!12444 = !DILocation(line: 238, column: 9, scope: !12440)
!12445 = !DILocation(line: 238, column: 39, scope: !12440)
!12446 = !DILocation(line: 238, column: 60, scope: !12440)
!12447 = !DILocation(line: 238, column: 70, scope: !12440)
!12448 = !DILocation(line: 238, column: 78, scope: !12440)
!12449 = !DILocation(line: 238, column: 100, scope: !12440)
!12450 = !DILocation(line: 237, column: 8, scope: !12441)
!12451 = !DILocation(line: 240, column: 11, scope: !12452)
!12452 = distinct !DILexicalBlock(scope: !12453, file: !12388, line: 240, column: 10)
!12453 = distinct !DILexicalBlock(scope: !12440, file: !12388, line: 239, column: 5)
!12454 = !DILocation(line: 240, column: 57, scope: !12452)
!12455 = !DILocation(line: 240, column: 80, scope: !12452)
!12456 = !DILocation(line: 240, column: 89, scope: !12452)
!12457 = !DILocation(line: 240, column: 10, scope: !12453)
!12458 = !DILocation(line: 248, column: 7, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12460, file: !12388, line: 248, column: 7)
!12460 = distinct !DILexicalBlock(scope: !12461, file: !12388, line: 248, column: 7)
!12461 = distinct !DILexicalBlock(scope: !12440, file: !12388, line: 246, column: 5)
!12462 = !DILocation(line: 248, column: 7, scope: !12460)
!12463 = !DILocation(line: 248, column: 7, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12459, file: !12388, line: 248, column: 7)
!12465 = !DILocation(line: 248, column: 7, scope: !12466)
!12466 = distinct !DILexicalBlock(scope: !12467, file: !12388, line: 248, column: 7)
!12467 = distinct !DILexicalBlock(scope: !12459, file: !12388, line: 248, column: 7)
!12468 = !DILocation(line: 248, column: 7, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12467, file: !12388, line: 248, column: 7)
!12470 = !DILocation(line: 0, scope: !12459)
!12471 = !DILocation(line: 251, column: 30, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12461, file: !12388, line: 251, column: 10)
!12473 = !DILocation(line: 251, column: 40, scope: !12472)
!12474 = !DILocation(line: 0, scope: !12472)
!12475 = !DILocation(line: 251, column: 10, scope: !12461)
!12476 = !DILocation(line: 257, column: 15, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12472, file: !12388, line: 252, column: 7)
!12478 = !DILocation(line: 257, column: 51, scope: !12477)
!12479 = !DILocation(line: 257, column: 9, scope: !12477)
!12480 = !DILocation(line: 259, column: 15, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12482, file: !12388, line: 259, column: 14)
!12482 = distinct !DILexicalBlock(scope: !12477, file: !12388, line: 258, column: 9)
!12483 = !DILocation(line: 259, column: 29, scope: !12481)
!12484 = !DILocation(line: 259, column: 43, scope: !12481)
!12485 = !DILocation(line: 259, column: 14, scope: !12482)
!12486 = distinct !{!12486, !12479, !12487}
!12487 = !DILocation(line: 263, column: 9, scope: !12477)
!12488 = !DILocation(line: 271, column: 15, scope: !12489)
!12489 = distinct !DILexicalBlock(scope: !12472, file: !12388, line: 266, column: 7)
!12490 = !DILocation(line: 271, column: 9, scope: !12489)
!12491 = !DILocation(line: 273, column: 15, scope: !12492)
!12492 = distinct !DILexicalBlock(scope: !12493, file: !12388, line: 273, column: 14)
!12493 = distinct !DILexicalBlock(scope: !12489, file: !12388, line: 272, column: 9)
!12494 = !DILocation(line: 273, column: 29, scope: !12492)
!12495 = !DILocation(line: 273, column: 43, scope: !12492)
!12496 = !DILocation(line: 273, column: 14, scope: !12493)
!12497 = distinct !{!12497, !12490, !12498}
!12498 = !DILocation(line: 277, column: 9, scope: !12489)
!12499 = !DILocation(line: 282, column: 27, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12393, file: !12388, line: 282, column: 6)
!12501 = !DILocation(line: 282, column: 43, scope: !12500)
!12502 = !DILocation(line: 282, column: 69, scope: !12500)
!12503 = !DILocation(line: 282, column: 6, scope: !12393)
!12504 = !DILocation(line: 289, column: 9, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12506, file: !12388, line: 289, column: 8)
!12506 = distinct !DILexicalBlock(scope: !12500, file: !12388, line: 283, column: 3)
!12507 = !DILocation(line: 289, column: 39, scope: !12505)
!12508 = !DILocation(line: 289, column: 60, scope: !12505)
!12509 = !DILocation(line: 290, column: 9, scope: !12505)
!12510 = !DILocation(line: 290, column: 39, scope: !12505)
!12511 = !DILocation(line: 290, column: 60, scope: !12505)
!12512 = !DILocation(line: 290, column: 70, scope: !12505)
!12513 = !DILocation(line: 290, column: 78, scope: !12505)
!12514 = !DILocation(line: 290, column: 100, scope: !12505)
!12515 = !DILocation(line: 289, column: 8, scope: !12506)
!12516 = !DILocation(line: 293, column: 11, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12518, file: !12388, line: 293, column: 10)
!12518 = distinct !DILexicalBlock(scope: !12505, file: !12388, line: 291, column: 5)
!12519 = !DILocation(line: 293, column: 57, scope: !12517)
!12520 = !DILocation(line: 293, column: 80, scope: !12517)
!12521 = !DILocation(line: 293, column: 89, scope: !12517)
!12522 = !DILocation(line: 293, column: 10, scope: !12518)
!12523 = !DILocation(line: 307, column: 30, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12525, file: !12388, line: 307, column: 10)
!12525 = distinct !DILexicalBlock(scope: !12505, file: !12388, line: 305, column: 5)
!12526 = !DILocation(line: 307, column: 39, scope: !12524)
!12527 = !DILocation(line: 307, column: 10, scope: !12525)
!12528 = !DILocation(line: 310, column: 9, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12524, file: !12388, line: 308, column: 7)
!12530 = !DILocation(line: 313, column: 21, scope: !12529)
!12531 = !DILocation(line: 316, column: 9, scope: !12529)
!12532 = !DILocation(line: 316, column: 15, scope: !12529)
!12533 = !DILocation(line: 316, column: 51, scope: !12529)
!12534 = !DILocation(line: 318, column: 15, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12536, file: !12388, line: 318, column: 14)
!12536 = distinct !DILexicalBlock(scope: !12529, file: !12388, line: 317, column: 9)
!12537 = !DILocation(line: 318, column: 29, scope: !12535)
!12538 = !DILocation(line: 318, column: 43, scope: !12535)
!12539 = !DILocation(line: 318, column: 14, scope: !12536)
!12540 = distinct !{!12540, !12531, !12541}
!12541 = !DILocation(line: 322, column: 9, scope: !12529)
!12542 = !DILocation(line: 330, column: 9, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12524, file: !12388, line: 328, column: 7)
!12544 = !DILocation(line: 333, column: 21, scope: !12543)
!12545 = !DILocation(line: 336, column: 9, scope: !12543)
!12546 = !DILocation(line: 336, column: 15, scope: !12543)
!12547 = !DILocation(line: 338, column: 15, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12549, file: !12388, line: 338, column: 14)
!12549 = distinct !DILexicalBlock(scope: !12543, file: !12388, line: 337, column: 9)
!12550 = !DILocation(line: 338, column: 29, scope: !12548)
!12551 = !DILocation(line: 338, column: 43, scope: !12548)
!12552 = !DILocation(line: 338, column: 14, scope: !12549)
!12553 = distinct !{!12553, !12545, !12554}
!12554 = !DILocation(line: 342, column: 9, scope: !12543)
!12555 = !DILocation(line: 0, scope: !12505)
!12556 = !DILocation(line: 347, column: 27, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12393, file: !12388, line: 347, column: 6)
!12558 = !DILocation(line: 347, column: 43, scope: !12557)
!12559 = !DILocation(line: 347, column: 69, scope: !12557)
!12560 = !DILocation(line: 347, column: 6, scope: !12393)
!12561 = !DILocation(line: 353, column: 28, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12563, file: !12388, line: 353, column: 8)
!12563 = distinct !DILexicalBlock(scope: !12557, file: !12388, line: 348, column: 3)
!12564 = !DILocation(line: 353, column: 37, scope: !12562)
!12565 = !DILocation(line: 353, column: 8, scope: !12563)
!12566 = !DILocation(line: 356, column: 7, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12562, file: !12388, line: 354, column: 5)
!12568 = !DILocation(line: 359, column: 19, scope: !12567)
!12569 = !DILocation(line: 362, column: 7, scope: !12567)
!12570 = !DILocation(line: 362, column: 13, scope: !12567)
!12571 = !DILocation(line: 362, column: 49, scope: !12567)
!12572 = !DILocation(line: 364, column: 13, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12574, file: !12388, line: 364, column: 12)
!12574 = distinct !DILexicalBlock(scope: !12567, file: !12388, line: 363, column: 7)
!12575 = !DILocation(line: 364, column: 27, scope: !12573)
!12576 = !DILocation(line: 364, column: 41, scope: !12573)
!12577 = !DILocation(line: 364, column: 12, scope: !12574)
!12578 = distinct !{!12578, !12569, !12579}
!12579 = !DILocation(line: 368, column: 7, scope: !12567)
!12580 = !DILocation(line: 373, column: 7, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12562, file: !12388, line: 371, column: 5)
!12582 = !DILocation(line: 376, column: 19, scope: !12581)
!12583 = !DILocation(line: 379, column: 7, scope: !12581)
!12584 = !DILocation(line: 379, column: 13, scope: !12581)
!12585 = !DILocation(line: 381, column: 13, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12587, file: !12388, line: 381, column: 12)
!12587 = distinct !DILexicalBlock(scope: !12581, file: !12388, line: 380, column: 7)
!12588 = !DILocation(line: 381, column: 27, scope: !12586)
!12589 = !DILocation(line: 381, column: 41, scope: !12586)
!12590 = !DILocation(line: 381, column: 12, scope: !12587)
!12591 = distinct !{!12591, !12583, !12592}
!12592 = !DILocation(line: 385, column: 7, scope: !12581)
!12593 = !DILocation(line: 389, column: 27, scope: !12424)
!12594 = !DILocation(line: 389, column: 43, scope: !12424)
!12595 = !DILocation(line: 389, column: 69, scope: !12424)
!12596 = !DILocation(line: 389, column: 6, scope: !12393)
!12597 = !DILocation(line: 0, scope: !12423)
!12598 = !DILocation(line: 398, column: 8, scope: !12429)
!12599 = !DILocation(line: 398, column: 8, scope: !12423)
!12600 = !DILocation(line: 400, column: 7, scope: !12427)
!12601 = !DILocation(line: 400, column: 7, scope: !12428)
!12602 = !DILocation(line: 402, column: 5, scope: !12428)
!12603 = !DILocation(line: 404, column: 8, scope: !12604)
!12604 = distinct !DILexicalBlock(scope: !12423, file: !12388, line: 404, column: 8)
!12605 = !DILocation(line: 404, column: 8, scope: !12423)
!12606 = !DILocation(line: 407, column: 7, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12604, file: !12388, line: 405, column: 5)
!12608 = !DILocation(line: 410, column: 19, scope: !12607)
!12609 = !DILocation(line: 412, column: 7, scope: !12607)
!12610 = !DILocation(line: 412, column: 13, scope: !12607)
!12611 = !DILocation(line: 414, column: 13, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12613, file: !12388, line: 414, column: 12)
!12613 = distinct !DILexicalBlock(scope: !12607, file: !12388, line: 413, column: 7)
!12614 = !DILocation(line: 414, column: 27, scope: !12612)
!12615 = !DILocation(line: 414, column: 40, scope: !12612)
!12616 = !DILocation(line: 414, column: 12, scope: !12613)
!12617 = distinct !{!12617, !12609, !12618}
!12618 = !DILocation(line: 418, column: 7, scope: !12607)
!12619 = !DILocation(line: 422, column: 5, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12621, file: !12388, line: 422, column: 5)
!12621 = distinct !DILexicalBlock(scope: !12423, file: !12388, line: 422, column: 5)
!12622 = !DILocation(line: 422, column: 5, scope: !12621)
!12623 = !DILocation(line: 422, column: 5, scope: !12624)
!12624 = distinct !DILexicalBlock(scope: !12620, file: !12388, line: 422, column: 5)
!12625 = !DILocation(line: 422, column: 5, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12627, file: !12388, line: 422, column: 5)
!12627 = distinct !DILexicalBlock(scope: !12620, file: !12388, line: 422, column: 5)
!12628 = !DILocation(line: 422, column: 5, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12627, file: !12388, line: 422, column: 5)
!12630 = !DILocation(line: 0, scope: !12620)
!12631 = !DILocation(line: 424, column: 28, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12423, file: !12388, line: 424, column: 8)
!12633 = !DILocation(line: 424, column: 38, scope: !12632)
!12634 = !DILocation(line: 0, scope: !12632)
!12635 = !DILocation(line: 424, column: 8, scope: !12423)
!12636 = !DILocation(line: 430, column: 13, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12632, file: !12388, line: 425, column: 5)
!12638 = !DILocation(line: 430, column: 49, scope: !12637)
!12639 = !DILocation(line: 430, column: 7, scope: !12637)
!12640 = !DILocation(line: 432, column: 13, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12642, file: !12388, line: 432, column: 12)
!12642 = distinct !DILexicalBlock(scope: !12637, file: !12388, line: 431, column: 7)
!12643 = !DILocation(line: 432, column: 27, scope: !12641)
!12644 = !DILocation(line: 432, column: 41, scope: !12641)
!12645 = !DILocation(line: 432, column: 12, scope: !12642)
!12646 = distinct !{!12646, !12639, !12647}
!12647 = !DILocation(line: 436, column: 7, scope: !12637)
!12648 = !DILocation(line: 444, column: 13, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !12632, file: !12388, line: 439, column: 5)
!12650 = !DILocation(line: 444, column: 7, scope: !12649)
!12651 = !DILocation(line: 446, column: 13, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12653, file: !12388, line: 446, column: 12)
!12653 = distinct !DILexicalBlock(scope: !12649, file: !12388, line: 445, column: 7)
!12654 = !DILocation(line: 446, column: 27, scope: !12652)
!12655 = !DILocation(line: 446, column: 41, scope: !12652)
!12656 = !DILocation(line: 446, column: 12, scope: !12653)
!12657 = distinct !{!12657, !12650, !12658}
!12658 = !DILocation(line: 450, column: 7, scope: !12649)
!12659 = !DILocation(line: 454, column: 8, scope: !12423)
!12660 = !DILocation(line: 456, column: 7, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12662, file: !12388, line: 455, column: 5)
!12662 = distinct !DILexicalBlock(scope: !12423, file: !12388, line: 454, column: 8)
!12663 = !DILocation(line: 457, column: 5, scope: !12661)
!12664 = !DILocation(line: 462, column: 31, scope: !12665)
!12665 = distinct !DILexicalBlock(scope: !12393, file: !12388, line: 462, column: 7)
!12666 = !DILocation(line: 462, column: 41, scope: !12665)
!12667 = !DILocation(line: 462, column: 7, scope: !12393)
!12668 = !DILocation(line: 465, column: 8, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12670, file: !12388, line: 465, column: 8)
!12670 = distinct !DILexicalBlock(scope: !12665, file: !12388, line: 463, column: 3)
!12671 = !DILocation(line: 465, column: 38, scope: !12669)
!12672 = !DILocation(line: 465, column: 8, scope: !12670)
!12673 = !DILocation(line: 467, column: 44, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12675, file: !12388, line: 467, column: 10)
!12675 = distinct !DILexicalBlock(scope: !12669, file: !12388, line: 466, column: 5)
!12676 = !DILocation(line: 0, scope: !12674)
!12677 = !DILocation(line: 467, column: 10, scope: !12675)
!12678 = !DILocation(line: 483, column: 15, scope: !12679)
!12679 = distinct !DILexicalBlock(scope: !12674, file: !12388, line: 468, column: 7)
!12680 = !DILocation(line: 483, column: 9, scope: !12679)
!12681 = !DILocation(line: 485, column: 15, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12683, file: !12388, line: 485, column: 14)
!12683 = distinct !DILexicalBlock(scope: !12679, file: !12388, line: 484, column: 9)
!12684 = !DILocation(line: 485, column: 29, scope: !12682)
!12685 = !DILocation(line: 485, column: 43, scope: !12682)
!12686 = !DILocation(line: 485, column: 14, scope: !12683)
!12687 = distinct !{!12687, !12680, !12688}
!12688 = !DILocation(line: 489, column: 9, scope: !12679)
!12689 = !DILocation(line: 492, column: 9, scope: !12679)
!12690 = !DILocation(line: 498, column: 9, scope: !12679)
!12691 = !DILocation(line: 501, column: 21, scope: !12679)
!12692 = !DILocation(line: 504, column: 9, scope: !12679)
!12693 = !DILocation(line: 504, column: 15, scope: !12679)
!12694 = !DILocation(line: 504, column: 51, scope: !12679)
!12695 = !DILocation(line: 506, column: 15, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12697, file: !12388, line: 506, column: 14)
!12697 = distinct !DILexicalBlock(scope: !12679, file: !12388, line: 505, column: 9)
!12698 = !DILocation(line: 506, column: 29, scope: !12696)
!12699 = !DILocation(line: 506, column: 43, scope: !12696)
!12700 = !DILocation(line: 506, column: 14, scope: !12697)
!12701 = distinct !{!12701, !12692, !12702}
!12702 = !DILocation(line: 510, column: 9, scope: !12679)
!12703 = !DILocation(line: 521, column: 15, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12674, file: !12388, line: 513, column: 7)
!12705 = !DILocation(line: 521, column: 9, scope: !12704)
!12706 = !DILocation(line: 523, column: 15, scope: !12707)
!12707 = distinct !DILexicalBlock(scope: !12708, file: !12388, line: 523, column: 14)
!12708 = distinct !DILexicalBlock(scope: !12704, file: !12388, line: 522, column: 9)
!12709 = !DILocation(line: 523, column: 29, scope: !12707)
!12710 = !DILocation(line: 523, column: 43, scope: !12707)
!12711 = !DILocation(line: 523, column: 14, scope: !12708)
!12712 = distinct !{!12712, !12705, !12713}
!12713 = !DILocation(line: 527, column: 9, scope: !12704)
!12714 = !DILocation(line: 533, column: 44, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12716, file: !12388, line: 533, column: 10)
!12716 = distinct !DILexicalBlock(scope: !12669, file: !12388, line: 531, column: 5)
!12717 = !DILocation(line: 533, column: 10, scope: !12716)
!12718 = !DILocation(line: 540, column: 27, scope: !12719)
!12719 = distinct !DILexicalBlock(scope: !12715, file: !12388, line: 538, column: 7)
!12720 = !DILocation(line: 551, column: 14, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12719, file: !12388, line: 550, column: 13)
!12722 = !DILocation(line: 551, column: 81, scope: !12721)
!12723 = !DILocation(line: 551, column: 55, scope: !12721)
!12724 = !DILocation(line: 551, column: 92, scope: !12721)
!12725 = !DILocation(line: 552, column: 14, scope: !12721)
!12726 = !DILocation(line: 552, column: 80, scope: !12721)
!12727 = !DILocation(line: 552, column: 53, scope: !12721)
!12728 = !DILocation(line: 552, column: 111, scope: !12721)
!12729 = !DILocation(line: 553, column: 14, scope: !12721)
!12730 = !DILocation(line: 553, column: 80, scope: !12721)
!12731 = !DILocation(line: 553, column: 86, scope: !12721)
!12732 = !DILocation(line: 553, column: 53, scope: !12721)
!12733 = !DILocation(line: 553, column: 111, scope: !12721)
!12734 = !DILocation(line: 554, column: 14, scope: !12721)
!12735 = !DILocation(line: 554, column: 82, scope: !12721)
!12736 = !DILocation(line: 554, column: 101, scope: !12721)
!12737 = !DILocation(line: 554, column: 53, scope: !12721)
!12738 = !DILocation(line: 554, column: 126, scope: !12721)
!12739 = !DILocation(line: 555, column: 14, scope: !12721)
!12740 = !DILocation(line: 555, column: 80, scope: !12721)
!12741 = !DILocation(line: 555, column: 85, scope: !12721)
!12742 = !DILocation(line: 555, column: 53, scope: !12721)
!12743 = !DILocation(line: 550, column: 13, scope: !12719)
!12744 = !DILocation(line: 563, column: 3, scope: !12393)
!12745 = !DILocation(line: 564, column: 1, scope: !12393)
!12746 = !DISubprogram(name: "HAL_GetTick", scope: !12747, file: !12747, line: 234, type: !395, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!12747 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12748 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12388, file: !12388, line: 591, type: !12749, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !12760)
!12749 = !DISubroutineType(types: !12750)
!12750 = !{!12391, !12751, !113}
!12751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12752, size: 32)
!12752 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12398, line: 92, baseType: !12753)
!12753 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12398, line: 75, size: 160, elements: !12754)
!12754 = !{!12755, !12756, !12757, !12758, !12759}
!12755 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12753, file: !12398, line: 77, baseType: !113, size: 32)
!12756 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12753, file: !12398, line: 80, baseType: !113, size: 32, offset: 32)
!12757 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12753, file: !12398, line: 83, baseType: !113, size: 32, offset: 64)
!12758 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12753, file: !12398, line: 86, baseType: !113, size: 32, offset: 96)
!12759 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12753, file: !12398, line: 89, baseType: !113, size: 32, offset: 128)
!12760 = !{!12761, !12762, !12763}
!12761 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12748, file: !12388, line: 591, type: !12751)
!12762 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12748, file: !12388, line: 591, type: !113)
!12763 = !DILocalVariable(name: "tickstart", scope: !12748, file: !12388, line: 593, type: !113)
!12764 = !DILocation(line: 0, scope: !12748)
!12765 = !DILocation(line: 596, column: 24, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12748, file: !12388, line: 596, column: 6)
!12767 = !DILocation(line: 596, column: 6, scope: !12748)
!12768 = !DILocation(line: 610, column: 17, scope: !12769)
!12769 = distinct !DILexicalBlock(scope: !12748, file: !12388, line: 610, column: 6)
!12770 = !DILocation(line: 610, column: 15, scope: !12769)
!12771 = !DILocation(line: 610, column: 6, scope: !12748)
!12772 = !DILocation(line: 613, column: 5, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12769, file: !12388, line: 611, column: 3)
!12774 = !DILocation(line: 617, column: 8, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12773, file: !12388, line: 617, column: 8)
!12776 = !DILocation(line: 617, column: 34, scope: !12775)
!12777 = !DILocation(line: 617, column: 8, scope: !12773)
!12778 = !DILocation(line: 624, column: 27, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12748, file: !12388, line: 624, column: 6)
!12780 = !DILocation(line: 624, column: 38, scope: !12779)
!12781 = !DILocation(line: 624, column: 60, scope: !12779)
!12782 = !DILocation(line: 624, column: 6, scope: !12748)
!12783 = !DILocation(line: 628, column: 40, scope: !12784)
!12784 = distinct !DILexicalBlock(scope: !12785, file: !12388, line: 628, column: 8)
!12785 = distinct !DILexicalBlock(scope: !12779, file: !12388, line: 625, column: 3)
!12786 = !DILocation(line: 628, column: 63, scope: !12784)
!12787 = !DILocation(line: 628, column: 8, scope: !12785)
!12788 = !DILocation(line: 630, column: 7, scope: !12789)
!12789 = distinct !DILexicalBlock(scope: !12784, file: !12388, line: 629, column: 5)
!12790 = !DILocation(line: 633, column: 29, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12785, file: !12388, line: 633, column: 8)
!12792 = !DILocation(line: 631, column: 5, scope: !12789)
!12793 = !DILocation(line: 633, column: 40, scope: !12791)
!12794 = !DILocation(line: 633, column: 63, scope: !12791)
!12795 = !DILocation(line: 633, column: 8, scope: !12785)
!12796 = !DILocation(line: 635, column: 7, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12791, file: !12388, line: 634, column: 5)
!12798 = !DILocation(line: 636, column: 5, scope: !12797)
!12799 = !DILocation(line: 639, column: 5, scope: !12785)
!12800 = !DILocation(line: 643, column: 27, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12748, file: !12388, line: 643, column: 6)
!12802 = !DILocation(line: 640, column: 3, scope: !12785)
!12803 = !DILocation(line: 643, column: 38, scope: !12801)
!12804 = !DILocation(line: 643, column: 62, scope: !12801)
!12805 = !DILocation(line: 643, column: 6, scope: !12748)
!12806 = !DILocation(line: 648, column: 27, scope: !12807)
!12807 = distinct !DILexicalBlock(scope: !12808, file: !12388, line: 648, column: 8)
!12808 = distinct !DILexicalBlock(scope: !12801, file: !12388, line: 644, column: 3)
!12809 = !DILocation(line: 648, column: 8, scope: !12808)
!12810 = !DILocation(line: 651, column: 10, scope: !12811)
!12811 = distinct !DILexicalBlock(scope: !12812, file: !12388, line: 651, column: 10)
!12812 = distinct !DILexicalBlock(scope: !12807, file: !12388, line: 649, column: 5)
!12813 = !DILocation(line: 651, column: 46, scope: !12811)
!12814 = !DILocation(line: 651, column: 10, scope: !12812)
!12815 = !DILocation(line: 661, column: 10, scope: !12816)
!12816 = distinct !DILexicalBlock(scope: !12817, file: !12388, line: 661, column: 10)
!12817 = distinct !DILexicalBlock(scope: !12818, file: !12388, line: 659, column: 5)
!12818 = distinct !DILexicalBlock(scope: !12807, file: !12388, line: 657, column: 13)
!12819 = !DILocation(line: 661, column: 46, scope: !12816)
!12820 = !DILocation(line: 661, column: 10, scope: !12817)
!12821 = !DILocation(line: 670, column: 10, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12823, file: !12388, line: 670, column: 10)
!12823 = distinct !DILexicalBlock(scope: !12818, file: !12388, line: 668, column: 5)
!12824 = !DILocation(line: 670, column: 46, scope: !12822)
!12825 = !DILocation(line: 670, column: 10, scope: !12823)
!12826 = !DILocation(line: 676, column: 5, scope: !12808)
!12827 = !DILocation(line: 679, column: 17, scope: !12808)
!12828 = !DILocation(line: 681, column: 5, scope: !12808)
!12829 = !DILocation(line: 681, column: 12, scope: !12808)
!12830 = !DILocation(line: 681, column: 65, scope: !12808)
!12831 = !DILocation(line: 681, column: 78, scope: !12808)
!12832 = !DILocation(line: 681, column: 42, scope: !12808)
!12833 = !DILocation(line: 683, column: 12, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12835, file: !12388, line: 683, column: 11)
!12835 = distinct !DILexicalBlock(scope: !12808, file: !12388, line: 682, column: 5)
!12836 = !DILocation(line: 683, column: 26, scope: !12834)
!12837 = !DILocation(line: 683, column: 39, scope: !12834)
!12838 = !DILocation(line: 683, column: 11, scope: !12835)
!12839 = distinct !{!12839, !12828, !12840}
!12840 = !DILocation(line: 687, column: 5, scope: !12808)
!12841 = !DILocation(line: 691, column: 17, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12748, file: !12388, line: 691, column: 6)
!12843 = !DILocation(line: 691, column: 15, scope: !12842)
!12844 = !DILocation(line: 691, column: 6, scope: !12748)
!12845 = !DILocation(line: 694, column: 5, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12842, file: !12388, line: 692, column: 3)
!12847 = !DILocation(line: 698, column: 8, scope: !12848)
!12848 = distinct !DILexicalBlock(scope: !12846, file: !12388, line: 698, column: 8)
!12849 = !DILocation(line: 698, column: 34, scope: !12848)
!12850 = !DILocation(line: 698, column: 8, scope: !12846)
!12851 = !DILocation(line: 705, column: 27, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12748, file: !12388, line: 705, column: 6)
!12853 = !DILocation(line: 705, column: 38, scope: !12852)
!12854 = !DILocation(line: 705, column: 61, scope: !12852)
!12855 = !DILocation(line: 705, column: 6, scope: !12748)
!12856 = !DILocation(line: 708, column: 5, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12852, file: !12388, line: 706, column: 3)
!12858 = !DILocation(line: 712, column: 27, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12748, file: !12388, line: 712, column: 6)
!12860 = !DILocation(line: 709, column: 3, scope: !12857)
!12861 = !DILocation(line: 712, column: 38, scope: !12859)
!12862 = !DILocation(line: 712, column: 61, scope: !12859)
!12863 = !DILocation(line: 712, column: 6, scope: !12748)
!12864 = !DILocation(line: 715, column: 5, scope: !12865)
!12865 = distinct !DILexicalBlock(scope: !12859, file: !12388, line: 713, column: 3)
!12866 = !DILocation(line: 716, column: 3, scope: !12865)
!12867 = !DILocation(line: 719, column: 21, scope: !12748)
!12868 = !DILocation(line: 719, column: 70, scope: !12748)
!12869 = !DILocation(line: 719, column: 91, scope: !12748)
!12870 = !DILocation(line: 719, column: 50, scope: !12748)
!12871 = !DILocation(line: 719, column: 47, scope: !12748)
!12872 = !DILocation(line: 719, column: 19, scope: !12748)
!12873 = !DILocation(line: 722, column: 17, scope: !12748)
!12874 = !DILocation(line: 722, column: 3, scope: !12748)
!12875 = !DILocation(line: 724, column: 3, scope: !12748)
!12876 = !DILocation(line: 725, column: 1, scope: !12748)
!12877 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12388, file: !12388, line: 885, type: !395, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !12878)
!12878 = !{!12879, !12880, !12881, !12882}
!12879 = !DILocalVariable(name: "pllm", scope: !12877, file: !12388, line: 887, type: !113)
!12880 = !DILocalVariable(name: "pllvco", scope: !12877, file: !12388, line: 887, type: !113)
!12881 = !DILocalVariable(name: "pllp", scope: !12877, file: !12388, line: 887, type: !113)
!12882 = !DILocalVariable(name: "sysclockfreq", scope: !12877, file: !12388, line: 888, type: !113)
!12883 = !DILocation(line: 0, scope: !12877)
!12884 = !DILocation(line: 891, column: 16, scope: !12877)
!12885 = !DILocation(line: 891, column: 21, scope: !12877)
!12886 = !DILocation(line: 891, column: 3, scope: !12877)
!12887 = !DILocation(line: 901, column: 7, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12889, file: !12388, line: 899, column: 5)
!12889 = distinct !DILexicalBlock(scope: !12877, file: !12388, line: 892, column: 3)
!12890 = !DILocation(line: 907, column: 19, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !12889, file: !12388, line: 904, column: 5)
!12892 = !DILocation(line: 907, column: 27, scope: !12891)
!12893 = !DILocation(line: 908, column: 10, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12891, file: !12388, line: 908, column: 10)
!12895 = !DILocation(line: 908, column: 40, scope: !12894)
!12896 = !DILocation(line: 0, scope: !12894)
!12897 = !DILocation(line: 908, column: 10, scope: !12891)
!12898 = !DILocation(line: 911, column: 53, scope: !12899)
!12899 = distinct !DILexicalBlock(scope: !12894, file: !12388, line: 909, column: 7)
!12900 = !DILocation(line: 911, column: 130, scope: !12899)
!12901 = !DILocation(line: 912, column: 7, scope: !12899)
!12902 = !DILocation(line: 916, column: 56, scope: !12903)
!12903 = distinct !DILexicalBlock(scope: !12894, file: !12388, line: 914, column: 7)
!12904 = !DILocation(line: 916, column: 53, scope: !12903)
!12905 = !DILocation(line: 916, column: 132, scope: !12903)
!12906 = !DILocation(line: 916, column: 130, scope: !12903)
!12907 = !DILocation(line: 916, column: 18, scope: !12903)
!12908 = !DILocation(line: 918, column: 23, scope: !12891)
!12909 = !DILocation(line: 918, column: 82, scope: !12891)
!12910 = !DILocation(line: 920, column: 28, scope: !12891)
!12911 = !DILocation(line: 921, column: 7, scope: !12891)
!12912 = !DILocation(line: 0, scope: !12889)
!12913 = !DILocation(line: 929, column: 3, scope: !12877)
!12914 = !DISubprogram(name: "HAL_InitTick", scope: !12747, file: !12747, line: 223, type: !12915, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!12915 = !DISubroutineType(types: !12916)
!12916 = !{!12391, !113}
!12917 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12388, file: !12388, line: 775, type: !12918, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !12920)
!12918 = !DISubroutineType(types: !12919)
!12919 = !{null, !113, !113, !113}
!12920 = !{!12921, !12922, !12923, !12924, !12934, !12938}
!12921 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12917, file: !12388, line: 775, type: !113)
!12922 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12917, file: !12388, line: 775, type: !113)
!12923 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12917, file: !12388, line: 775, type: !113)
!12924 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12917, file: !12388, line: 777, type: !12925)
!12925 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12926, line: 62, baseType: !12927)
!12926 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12927 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12926, line: 46, size: 160, elements: !12928)
!12928 = !{!12929, !12930, !12931, !12932, !12933}
!12929 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12927, file: !12926, line: 48, baseType: !113, size: 32)
!12930 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12927, file: !12926, line: 51, baseType: !113, size: 32, offset: 32)
!12931 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12927, file: !12926, line: 54, baseType: !113, size: 32, offset: 64)
!12932 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12927, file: !12926, line: 57, baseType: !113, size: 32, offset: 96)
!12933 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12927, file: !12926, line: 60, baseType: !113, size: 32, offset: 128)
!12934 = !DILocalVariable(name: "tmpreg", scope: !12935, file: !12388, line: 787, type: !461)
!12935 = distinct !DILexicalBlock(scope: !12936, file: !12388, line: 787, column: 5)
!12936 = distinct !DILexicalBlock(scope: !12937, file: !12388, line: 783, column: 3)
!12937 = distinct !DILexicalBlock(scope: !12917, file: !12388, line: 782, column: 6)
!12938 = !DILocalVariable(name: "tmpreg", scope: !12939, file: !12388, line: 811, type: !461)
!12939 = distinct !DILexicalBlock(scope: !12940, file: !12388, line: 811, column: 5)
!12940 = distinct !DILexicalBlock(scope: !12937, file: !12388, line: 807, column: 3)
!12941 = !DILocation(line: 0, scope: !12917)
!12942 = !DILocation(line: 777, column: 3, scope: !12917)
!12943 = !DILocation(line: 777, column: 20, scope: !12917)
!12944 = !DILocation(line: 782, column: 15, scope: !12937)
!12945 = !DILocation(line: 782, column: 6, scope: !12917)
!12946 = !DILocation(line: 787, column: 5, scope: !12935)
!12947 = !DILocation(line: 787, column: 5, scope: !12936)
!12948 = !DILocation(line: 790, column: 21, scope: !12936)
!12949 = !DILocation(line: 790, column: 25, scope: !12936)
!12950 = !DILocation(line: 791, column: 21, scope: !12936)
!12951 = !DILocation(line: 791, column: 26, scope: !12936)
!12952 = !DILocation(line: 792, column: 21, scope: !12936)
!12953 = !DILocation(line: 792, column: 27, scope: !12936)
!12954 = !DILocation(line: 793, column: 21, scope: !12936)
!12955 = !DILocation(line: 793, column: 26, scope: !12936)
!12956 = !DILocation(line: 794, column: 21, scope: !12936)
!12957 = !DILocation(line: 794, column: 31, scope: !12936)
!12958 = !DILocation(line: 795, column: 5, scope: !12936)
!12959 = !DILocation(line: 798, column: 5, scope: !12936)
!12960 = !DILocation(line: 804, column: 3, scope: !12936)
!12961 = !DILocation(line: 811, column: 5, scope: !12939)
!12962 = !DILocation(line: 811, column: 5, scope: !12940)
!12963 = !DILocation(line: 814, column: 21, scope: !12940)
!12964 = !DILocation(line: 814, column: 25, scope: !12940)
!12965 = !DILocation(line: 815, column: 21, scope: !12940)
!12966 = !DILocation(line: 815, column: 26, scope: !12940)
!12967 = !DILocation(line: 816, column: 21, scope: !12940)
!12968 = !DILocation(line: 816, column: 27, scope: !12940)
!12969 = !DILocation(line: 817, column: 21, scope: !12940)
!12970 = !DILocation(line: 817, column: 26, scope: !12940)
!12971 = !DILocation(line: 818, column: 21, scope: !12940)
!12972 = !DILocation(line: 818, column: 31, scope: !12940)
!12973 = !DILocation(line: 819, column: 5, scope: !12940)
!12974 = !DILocation(line: 822, column: 5, scope: !12940)
!12975 = !DILocation(line: 0, scope: !12937)
!12976 = !DILocation(line: 830, column: 1, scope: !12917)
!12977 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12926, file: !12926, line: 224, type: !12978, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!12978 = !DISubroutineType(types: !12979)
!12979 = !{null, !3044, !12980}
!12980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12925, size: 32)
!12981 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12388, file: !12388, line: 841, type: !266, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !397)
!12982 = !DILocation(line: 843, column: 38, scope: !12981)
!12983 = !DILocation(line: 844, column: 1, scope: !12981)
!12984 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12388, file: !12388, line: 850, type: !266, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !397)
!12985 = !DILocation(line: 852, column: 38, scope: !12984)
!12986 = !DILocation(line: 853, column: 1, scope: !12984)
!12987 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12388, file: !12388, line: 941, type: !395, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !397)
!12988 = !DILocation(line: 943, column: 10, scope: !12987)
!12989 = !DILocation(line: 943, column: 3, scope: !12987)
!12990 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12388, file: !12388, line: 952, type: !395, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !397)
!12991 = !DILocation(line: 955, column: 11, scope: !12990)
!12992 = !DILocation(line: 955, column: 56, scope: !12990)
!12993 = !DILocation(line: 955, column: 78, scope: !12990)
!12994 = !DILocation(line: 955, column: 36, scope: !12990)
!12995 = !DILocation(line: 955, column: 33, scope: !12990)
!12996 = !DILocation(line: 955, column: 3, scope: !12990)
!12997 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12388, file: !12388, line: 964, type: !395, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !397)
!12998 = !DILocation(line: 967, column: 11, scope: !12997)
!12999 = !DILocation(line: 967, column: 55, scope: !12997)
!13000 = !DILocation(line: 967, column: 77, scope: !12997)
!13001 = !DILocation(line: 967, column: 35, scope: !12997)
!13002 = !DILocation(line: 967, column: 32, scope: !12997)
!13003 = !DILocation(line: 967, column: 3, scope: !12997)
!13004 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12388, file: !12388, line: 977, type: !13005, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !13007)
!13005 = !DISubroutineType(types: !13006)
!13006 = !{null, !12396}
!13007 = !{!13008}
!13008 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13004, file: !12388, line: 977, type: !12396)
!13009 = !DILocation(line: 0, scope: !13004)
!13010 = !DILocation(line: 980, column: 22, scope: !13004)
!13011 = !DILocation(line: 980, column: 37, scope: !13004)
!13012 = !DILocation(line: 983, column: 12, scope: !13013)
!13013 = distinct !DILexicalBlock(scope: !13004, file: !12388, line: 983, column: 6)
!13014 = !DILocation(line: 983, column: 15, scope: !13013)
!13015 = !DILocation(line: 983, column: 31, scope: !13013)
!13016 = !DILocation(line: 983, column: 6, scope: !13004)
!13017 = !DILocation(line: 985, column: 24, scope: !13018)
!13018 = distinct !DILexicalBlock(scope: !13013, file: !12388, line: 984, column: 3)
!13019 = !DILocation(line: 985, column: 33, scope: !13018)
!13020 = !DILocation(line: 986, column: 3, scope: !13018)
!13021 = !DILocation(line: 987, column: 17, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !13013, file: !12388, line: 987, column: 11)
!13023 = !DILocation(line: 987, column: 20, scope: !13022)
!13024 = !DILocation(line: 987, column: 35, scope: !13022)
!13025 = !DILocation(line: 0, scope: !13022)
!13026 = !DILocation(line: 987, column: 11, scope: !13013)
!13027 = !DILocation(line: 989, column: 33, scope: !13028)
!13028 = distinct !DILexicalBlock(scope: !13022, file: !12388, line: 988, column: 3)
!13029 = !DILocation(line: 990, column: 3, scope: !13028)
!13030 = !DILocation(line: 993, column: 33, scope: !13031)
!13031 = distinct !DILexicalBlock(scope: !13022, file: !12388, line: 992, column: 3)
!13032 = !DILocation(line: 997, column: 12, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !13004, file: !12388, line: 997, column: 6)
!13034 = !DILocation(line: 997, column: 15, scope: !13033)
!13035 = !DILocation(line: 1003, column: 24, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !13033, file: !12388, line: 1002, column: 3)
!13037 = !DILocation(line: 1003, column: 33, scope: !13036)
!13038 = !DILocation(line: 1006, column: 61, scope: !13004)
!13039 = !DILocation(line: 1006, column: 81, scope: !13004)
!13040 = !DILocation(line: 1006, column: 22, scope: !13004)
!13041 = !DILocation(line: 1006, column: 42, scope: !13004)
!13042 = !DILocation(line: 1009, column: 12, scope: !13043)
!13043 = distinct !DILexicalBlock(scope: !13004, file: !12388, line: 1009, column: 6)
!13044 = !DILocation(line: 1009, column: 17, scope: !13043)
!13045 = !DILocation(line: 1009, column: 35, scope: !13043)
!13046 = !DILocation(line: 1009, column: 6, scope: !13004)
!13047 = !DILocation(line: 1011, column: 24, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13043, file: !12388, line: 1010, column: 3)
!13049 = !DILocation(line: 1011, column: 33, scope: !13048)
!13050 = !DILocation(line: 1012, column: 3, scope: !13048)
!13051 = !DILocation(line: 1013, column: 17, scope: !13052)
!13052 = distinct !DILexicalBlock(scope: !13043, file: !12388, line: 1013, column: 11)
!13053 = !DILocation(line: 1013, column: 22, scope: !13052)
!13054 = !DILocation(line: 1013, column: 39, scope: !13052)
!13055 = !DILocation(line: 0, scope: !13052)
!13056 = !DILocation(line: 1013, column: 11, scope: !13043)
!13057 = !DILocation(line: 1015, column: 33, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13052, file: !12388, line: 1014, column: 3)
!13059 = !DILocation(line: 1016, column: 3, scope: !13058)
!13060 = !DILocation(line: 1019, column: 33, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13052, file: !12388, line: 1018, column: 3)
!13062 = !DILocation(line: 1023, column: 12, scope: !13063)
!13063 = distinct !DILexicalBlock(scope: !13004, file: !12388, line: 1023, column: 6)
!13064 = !DILocation(line: 1023, column: 16, scope: !13063)
!13065 = !DILocation(line: 1029, column: 24, scope: !13066)
!13066 = distinct !DILexicalBlock(scope: !13063, file: !12388, line: 1028, column: 3)
!13067 = !DILocation(line: 1029, column: 33, scope: !13066)
!13068 = !DILocation(line: 1033, column: 12, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13004, file: !12388, line: 1033, column: 6)
!13070 = !DILocation(line: 1033, column: 15, scope: !13069)
!13071 = !DILocation(line: 1033, column: 30, scope: !13069)
!13072 = !DILocation(line: 1033, column: 6, scope: !13004)
!13073 = !DILocation(line: 1039, column: 28, scope: !13074)
!13074 = distinct !DILexicalBlock(scope: !13069, file: !12388, line: 1038, column: 3)
!13075 = !DILocation(line: 1039, column: 37, scope: !13074)
!13076 = !DILocation(line: 1041, column: 54, scope: !13004)
!13077 = !DILocation(line: 1041, column: 62, scope: !13004)
!13078 = !DILocation(line: 1041, column: 26, scope: !13004)
!13079 = !DILocation(line: 1041, column: 36, scope: !13004)
!13080 = !DILocation(line: 1042, column: 49, scope: !13004)
!13081 = !DILocation(line: 1042, column: 57, scope: !13004)
!13082 = !DILocation(line: 1042, column: 26, scope: !13004)
!13083 = !DILocation(line: 1042, column: 31, scope: !13004)
!13084 = !DILocation(line: 1043, column: 50, scope: !13004)
!13085 = !DILocation(line: 1043, column: 78, scope: !13004)
!13086 = !DILocation(line: 1043, column: 26, scope: !13004)
!13087 = !DILocation(line: 1043, column: 31, scope: !13004)
!13088 = !DILocation(line: 1044, column: 52, scope: !13004)
!13089 = !DILocation(line: 1044, column: 102, scope: !13004)
!13090 = !DILocation(line: 1044, column: 109, scope: !13004)
!13091 = !DILocation(line: 1044, column: 26, scope: !13004)
!13092 = !DILocation(line: 1044, column: 31, scope: !13004)
!13093 = !DILocation(line: 1045, column: 50, scope: !13004)
!13094 = !DILocation(line: 1045, column: 78, scope: !13004)
!13095 = !DILocation(line: 1045, column: 26, scope: !13004)
!13096 = !DILocation(line: 1045, column: 31, scope: !13004)
!13097 = !DILocation(line: 1046, column: 1, scope: !13004)
!13098 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12388, file: !12388, line: 1056, type: !13099, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !13101)
!13099 = !DISubroutineType(types: !13100)
!13100 = !{null, !12751, !1007}
!13101 = !{!13102, !13103}
!13102 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13098, file: !12388, line: 1056, type: !12751)
!13103 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !13098, file: !12388, line: 1056, type: !1007)
!13104 = !DILocation(line: 0, scope: !13098)
!13105 = !DILocation(line: 1059, column: 22, scope: !13098)
!13106 = !DILocation(line: 1059, column: 32, scope: !13098)
!13107 = !DILocation(line: 1062, column: 53, scope: !13098)
!13108 = !DILocation(line: 1062, column: 58, scope: !13098)
!13109 = !DILocation(line: 1062, column: 22, scope: !13098)
!13110 = !DILocation(line: 1062, column: 35, scope: !13098)
!13111 = !DILocation(line: 1065, column: 54, scope: !13098)
!13112 = !DILocation(line: 1065, column: 59, scope: !13098)
!13113 = !DILocation(line: 1065, column: 22, scope: !13098)
!13114 = !DILocation(line: 1065, column: 36, scope: !13098)
!13115 = !DILocation(line: 1068, column: 55, scope: !13098)
!13116 = !DILocation(line: 1068, column: 60, scope: !13098)
!13117 = !DILocation(line: 1068, column: 22, scope: !13098)
!13118 = !DILocation(line: 1068, column: 37, scope: !13098)
!13119 = !DILocation(line: 1071, column: 56, scope: !13098)
!13120 = !DILocation(line: 1071, column: 79, scope: !13098)
!13121 = !DILocation(line: 1071, column: 22, scope: !13098)
!13122 = !DILocation(line: 1071, column: 37, scope: !13098)
!13123 = !DILocation(line: 1074, column: 34, scope: !13098)
!13124 = !DILocation(line: 1074, column: 38, scope: !13098)
!13125 = !DILocation(line: 1074, column: 14, scope: !13098)
!13126 = !DILocation(line: 1075, column: 1, scope: !13098)
!13127 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12388, file: !12388, line: 1082, type: !266, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !397)
!13128 = !DILocation(line: 1085, column: 6, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13127, file: !12388, line: 1085, column: 6)
!13130 = !DILocation(line: 1085, column: 6, scope: !13127)
!13131 = !DILocation(line: 1088, column: 5, scope: !13132)
!13132 = distinct !DILexicalBlock(scope: !13129, file: !12388, line: 1086, column: 3)
!13133 = !DILocation(line: 1091, column: 5, scope: !13132)
!13134 = !DILocation(line: 1092, column: 3, scope: !13132)
!13135 = !DILocation(line: 1093, column: 1, scope: !13127)
!13136 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12388, file: !12388, line: 1099, type: !266, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !397)
!13137 = !DILocation(line: 1104, column: 1, scope: !13136)
!13138 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13139, file: !13139, line: 257, type: !7846, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13140)
!13139 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13140 = !{!13141}
!13141 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13138, file: !13139, line: 257, type: !113)
!13142 = !DILocation(line: 0, scope: !13138)
!13143 = !DILocation(line: 260, column: 3, scope: !13138)
!13144 = !DILocation(line: 261, column: 1, scope: !13138)
!13145 = distinct !DISubprogram(name: "LL_InitTick", scope: !13146, file: !13146, line: 260, type: !10745, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13147)
!13146 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13147 = !{!13148, !13149}
!13148 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13145, file: !13146, line: 260, type: !113)
!13149 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13145, file: !13146, line: 260, type: !113)
!13150 = !DILocation(line: 0, scope: !13145)
!13151 = !DILocation(line: 263, column: 46, scope: !13145)
!13152 = !DILocation(line: 263, column: 55, scope: !13145)
!13153 = !DILocation(line: 263, column: 18, scope: !13145)
!13154 = !DILocation(line: 264, column: 18, scope: !13145)
!13155 = !DILocation(line: 265, column: 18, scope: !13145)
!13156 = !DILocation(line: 267, column: 1, scope: !13145)
!13157 = distinct !DISubprogram(name: "LL_mDelay", scope: !13139, file: !13139, line: 273, type: !7846, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13158)
!13158 = !{!13159, !13160}
!13159 = !DILocalVariable(name: "Delay", arg: 1, scope: !13157, file: !13139, line: 273, type: !113)
!13160 = !DILocalVariable(name: "tmp", scope: !13157, file: !13139, line: 275, type: !461)
!13161 = !DILocation(line: 0, scope: !13157)
!13162 = !DILocation(line: 275, column: 3, scope: !13157)
!13163 = !DILocation(line: 275, column: 18, scope: !13157)
!13164 = !DILocation(line: 275, column: 33, scope: !13157)
!13165 = !DILocation(line: 277, column: 10, scope: !13157)
!13166 = !DILocation(line: 280, column: 12, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13157, file: !13139, line: 280, column: 6)
!13168 = !DILocation(line: 285, column: 3, scope: !13157)
!13169 = !DILocation(line: 287, column: 18, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13171, file: !13139, line: 287, column: 8)
!13171 = distinct !DILexicalBlock(scope: !13157, file: !13139, line: 286, column: 3)
!13172 = !DILocation(line: 292, column: 1, scope: !13157)
!13173 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13139, file: !13139, line: 323, type: !7846, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13174)
!13174 = !{!13175}
!13175 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13173, file: !13139, line: 323, type: !113)
!13176 = !DILocation(line: 0, scope: !13173)
!13177 = !DILocation(line: 326, column: 19, scope: !13173)
!13178 = !DILocation(line: 327, column: 1, scope: !13173)
!13179 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13139, file: !13139, line: 338, type: !13180, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13183)
!13180 = !DISubroutineType(types: !13181)
!13181 = !{!13182, !113}
!13182 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !951, line: 201, baseType: !950)
!13183 = !{!13184, !13185, !13186, !13187, !13188}
!13184 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !13179, file: !13139, line: 338, type: !113)
!13185 = !DILocalVariable(name: "timeout", scope: !13179, file: !13139, line: 340, type: !113)
!13186 = !DILocalVariable(name: "getlatency", scope: !13179, file: !13139, line: 341, type: !113)
!13187 = !DILocalVariable(name: "latency", scope: !13179, file: !13139, line: 342, type: !113)
!13188 = !DILocalVariable(name: "status", scope: !13179, file: !13139, line: 343, type: !13182)
!13189 = !DILocation(line: 0, scope: !13179)
!13190 = !DILocation(line: 347, column: 21, scope: !13191)
!13191 = distinct !DILexicalBlock(scope: !13179, file: !13139, line: 347, column: 6)
!13192 = !DILocation(line: 347, column: 6, scope: !13179)
!13193 = !DILocation(line: 353, column: 8, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !13195, file: !13139, line: 353, column: 8)
!13195 = distinct !DILexicalBlock(scope: !13191, file: !13139, line: 352, column: 3)
!13196 = !DILocation(line: 353, column: 40, scope: !13194)
!13197 = !DILocation(line: 353, column: 8, scope: !13195)
!13198 = !DILocation(line: 374, column: 55, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !13200, file: !13139, line: 374, column: 10)
!13200 = distinct !DILexicalBlock(scope: !13194, file: !13139, line: 354, column: 5)
!13201 = !DILocation(line: 368, column: 26, scope: !13202)
!13202 = distinct !DILexicalBlock(scope: !13200, file: !13139, line: 368, column: 10)
!13203 = !DILocation(line: 368, column: 55, scope: !13202)
!13204 = !DILocation(line: 380, column: 57, scope: !13205)
!13205 = distinct !DILexicalBlock(scope: !13206, file: !13139, line: 380, column: 12)
!13206 = distinct !DILexicalBlock(scope: !13199, file: !13139, line: 379, column: 7)
!13207 = !DILocation(line: 387, column: 8, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13195, file: !13139, line: 387, column: 8)
!13209 = !DILocation(line: 387, column: 40, scope: !13208)
!13210 = !DILocation(line: 387, column: 8, scope: !13195)
!13211 = !DILocation(line: 407, column: 26, scope: !13212)
!13212 = distinct !DILexicalBlock(scope: !13213, file: !13139, line: 407, column: 10)
!13213 = distinct !DILexicalBlock(scope: !13208, file: !13139, line: 388, column: 5)
!13214 = !DILocation(line: 407, column: 55, scope: !13212)
!13215 = !DILocation(line: 413, column: 28, scope: !13216)
!13216 = distinct !DILexicalBlock(scope: !13217, file: !13139, line: 413, column: 12)
!13217 = distinct !DILexicalBlock(scope: !13212, file: !13139, line: 412, column: 7)
!13218 = !DILocation(line: 413, column: 57, scope: !13216)
!13219 = !DILocation(line: 0, scope: !13195)
!13220 = !DILocation(line: 420, column: 8, scope: !13221)
!13221 = distinct !DILexicalBlock(scope: !13195, file: !13139, line: 420, column: 8)
!13222 = !DILocation(line: 420, column: 40, scope: !13221)
!13223 = !DILocation(line: 420, column: 8, scope: !13195)
!13224 = !DILocation(line: 429, column: 26, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13226, file: !13139, line: 429, column: 10)
!13226 = distinct !DILexicalBlock(scope: !13221, file: !13139, line: 421, column: 5)
!13227 = !DILocation(line: 429, column: 55, scope: !13225)
!13228 = !DILocation(line: 435, column: 28, scope: !13229)
!13229 = distinct !DILexicalBlock(scope: !13230, file: !13139, line: 435, column: 12)
!13230 = distinct !DILexicalBlock(scope: !13225, file: !13139, line: 434, column: 7)
!13231 = !DILocation(line: 435, column: 57, scope: !13229)
!13232 = !DILocation(line: 444, column: 5, scope: !13195)
!13233 = !DILocation(line: 448, column: 5, scope: !13195)
!13234 = !DILocation(line: 451, column: 18, scope: !13235)
!13235 = distinct !DILexicalBlock(scope: !13195, file: !13139, line: 449, column: 5)
!13236 = !DILocation(line: 452, column: 12, scope: !13235)
!13237 = !DILocation(line: 453, column: 26, scope: !13195)
!13238 = !DILocation(line: 453, column: 38, scope: !13195)
!13239 = !DILocation(line: 453, column: 5, scope: !13235)
!13240 = distinct !{!13240, !13233, !13241}
!13241 = !DILocation(line: 453, column: 54, scope: !13195)
!13242 = !DILocation(line: 0, scope: !13191)
!13243 = !DILocation(line: 464, column: 3, scope: !13179)
!13244 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !13245, file: !13245, line: 519, type: !395, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !397)
!13245 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13246 = !DILocation(line: 521, column: 21, scope: !13244)
!13247 = !DILocation(line: 521, column: 3, scope: !13244)
!13248 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !7454, file: !7454, line: 1543, type: !7846, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13249)
!13249 = !{!13250}
!13250 = !DILocalVariable(name: "Latency", arg: 1, scope: !13248, file: !7454, line: 1543, type: !113)
!13251 = !DILocation(line: 0, scope: !13248)
!13252 = !DILocation(line: 1545, column: 3, scope: !13248)
!13253 = !DILocation(line: 1546, column: 1, scope: !13248)
!13254 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !7454, file: !7454, line: 1569, type: !395, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !397)
!13255 = !DILocation(line: 1571, column: 21, scope: !13254)
!13256 = !DILocation(line: 1571, column: 3, scope: !13254)
!13257 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13139, file: !13139, line: 483, type: !13258, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13274)
!13258 = !DISubroutineType(types: !13259)
!13259 = !{!13182, !13260, !13267}
!13260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13261, size: 32)
!13261 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13146, line: 114, baseType: !13262)
!13262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13146, line: 94, size: 96, elements: !13263)
!13263 = !{!13264, !13265, !13266}
!13264 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13262, file: !13146, line: 96, baseType: !113, size: 32)
!13265 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13262, file: !13146, line: 102, baseType: !113, size: 32, offset: 32)
!13266 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13262, file: !13146, line: 109, baseType: !113, size: 32, offset: 64)
!13267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13268, size: 32)
!13268 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13146, line: 139, baseType: !13269)
!13269 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13146, line: 119, size: 96, elements: !13270)
!13270 = !{!13271, !13272, !13273}
!13271 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13269, file: !13146, line: 121, baseType: !113, size: 32)
!13272 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13269, file: !13146, line: 127, baseType: !113, size: 32, offset: 32)
!13273 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13269, file: !13146, line: 133, baseType: !113, size: 32, offset: 64)
!13274 = !{!13275, !13276, !13277, !13278}
!13275 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13257, file: !13139, line: 483, type: !13260)
!13276 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13257, file: !13139, line: 484, type: !13267)
!13277 = !DILocalVariable(name: "status", scope: !13257, file: !13139, line: 486, type: !13182)
!13278 = !DILocalVariable(name: "pllfreq", scope: !13257, file: !13139, line: 487, type: !113)
!13279 = !DILocation(line: 0, scope: !13257)
!13280 = !DILocation(line: 490, column: 6, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13257, file: !13139, line: 490, column: 6)
!13282 = !DILocation(line: 490, column: 25, scope: !13281)
!13283 = !DILocation(line: 490, column: 6, scope: !13257)
!13284 = !DILocation(line: 493, column: 15, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13281, file: !13139, line: 491, column: 3)
!13286 = !DILocation(line: 496, column: 8, scope: !13287)
!13287 = distinct !DILexicalBlock(scope: !13285, file: !13139, line: 496, column: 8)
!13288 = !DILocation(line: 496, column: 29, scope: !13287)
!13289 = !DILocation(line: 496, column: 8, scope: !13285)
!13290 = !DILocation(line: 498, column: 7, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !13287, file: !13139, line: 497, column: 5)
!13292 = !DILocation(line: 499, column: 7, scope: !13291)
!13293 = !DILocation(line: 499, column: 14, scope: !13291)
!13294 = !DILocation(line: 499, column: 35, scope: !13291)
!13295 = distinct !{!13295, !13292, !13296}
!13296 = !DILocation(line: 502, column: 7, scope: !13291)
!13297 = !DILocation(line: 506, column: 76, scope: !13285)
!13298 = !DILocation(line: 506, column: 103, scope: !13285)
!13299 = !DILocation(line: 507, column: 54, scope: !13285)
!13300 = !DILocation(line: 506, column: 5, scope: !13285)
!13301 = !DILocation(line: 510, column: 14, scope: !13285)
!13302 = !DILocation(line: 511, column: 3, scope: !13285)
!13303 = !DILocation(line: 0, scope: !13281)
!13304 = !DILocation(line: 518, column: 3, scope: !13257)
!13305 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13139, file: !13139, line: 642, type: !13306, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13308)
!13306 = !DISubroutineType(types: !13307)
!13307 = !{!13182}
!13308 = !{!13309}
!13309 = !DILocalVariable(name: "status", scope: !13305, file: !13139, line: 644, type: !13182)
!13310 = !DILocation(line: 0, scope: !13305)
!13311 = !DILocation(line: 647, column: 6, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13305, file: !13139, line: 647, column: 6)
!13313 = !DILocation(line: 647, column: 27, scope: !13312)
!13314 = !DILocation(line: 663, column: 6, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13305, file: !13139, line: 663, column: 6)
!13316 = !DILocation(line: 663, column: 30, scope: !13315)
!13317 = !DILocation(line: 663, column: 6, scope: !13305)
!13318 = !DILocation(line: 669, column: 3, scope: !13305)
!13319 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13139, file: !13139, line: 611, type: !13320, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13322)
!13320 = !DISubroutineType(types: !13321)
!13321 = !{!113, !113, !13260}
!13322 = !{!13323, !13324, !13325}
!13323 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !13319, file: !13139, line: 611, type: !113)
!13324 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !13319, file: !13139, line: 611, type: !13260)
!13325 = !DILocalVariable(name: "pllfreq", scope: !13319, file: !13139, line: 613, type: !113)
!13326 = !DILocation(line: 0, scope: !13319)
!13327 = !DILocation(line: 622, column: 56, scope: !13319)
!13328 = !DILocation(line: 622, column: 61, scope: !13319)
!13329 = !DILocation(line: 622, column: 32, scope: !13319)
!13330 = !DILocation(line: 626, column: 45, scope: !13319)
!13331 = !DILocation(line: 626, column: 50, scope: !13319)
!13332 = !DILocation(line: 626, column: 21, scope: !13319)
!13333 = !DILocation(line: 630, column: 47, scope: !13319)
!13334 = !DILocation(line: 630, column: 82, scope: !13319)
!13335 = !DILocation(line: 630, column: 21, scope: !13319)
!13336 = !DILocation(line: 633, column: 3, scope: !13319)
!13337 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10081, file: !10081, line: 3007, type: !395, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !397)
!13338 = !DILocation(line: 3009, column: 11, scope: !13337)
!13339 = !DILocation(line: 3009, column: 44, scope: !13337)
!13340 = !DILocation(line: 3009, column: 3, scope: !13337)
!13341 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10081, file: !10081, line: 2987, type: !266, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !397)
!13342 = !DILocation(line: 2989, column: 3, scope: !13341)
!13343 = !DILocation(line: 2990, column: 1, scope: !13341)
!13344 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10081, file: !10081, line: 4304, type: !10205, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13345)
!13345 = !{!13346, !13347, !13348, !13349}
!13346 = !DILocalVariable(name: "Source", arg: 1, scope: !13344, file: !10081, line: 4304, type: !113)
!13347 = !DILocalVariable(name: "PLLM", arg: 2, scope: !13344, file: !10081, line: 4304, type: !113)
!13348 = !DILocalVariable(name: "PLLN", arg: 3, scope: !13344, file: !10081, line: 4304, type: !113)
!13349 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !13344, file: !10081, line: 4304, type: !113)
!13350 = !DILocation(line: 0, scope: !13344)
!13351 = !DILocation(line: 4306, column: 3, scope: !13344)
!13352 = !DILocation(line: 4308, column: 3, scope: !13344)
!13353 = !DILocation(line: 4312, column: 1, scope: !13344)
!13354 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13139, file: !13139, line: 681, type: !13355, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13357)
!13355 = !DISubroutineType(types: !13356)
!13356 = !{!13182, !113, !13267}
!13357 = !{!13358, !13359, !13360, !13361}
!13358 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !13354, file: !13139, line: 681, type: !113)
!13359 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13354, file: !13139, line: 681, type: !13267)
!13360 = !DILocalVariable(name: "status", scope: !13354, file: !13139, line: 683, type: !13182)
!13361 = !DILocalVariable(name: "hclk_frequency", scope: !13354, file: !13139, line: 684, type: !113)
!13362 = !DILocation(line: 0, scope: !13354)
!13363 = !DILocation(line: 691, column: 20, scope: !13354)
!13364 = !DILocation(line: 694, column: 6, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13354, file: !13139, line: 694, column: 6)
!13366 = !DILocation(line: 694, column: 22, scope: !13365)
!13367 = !DILocation(line: 694, column: 6, scope: !13354)
!13368 = !DILocation(line: 697, column: 14, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13365, file: !13139, line: 695, column: 3)
!13370 = !DILocation(line: 701, column: 13, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13354, file: !13139, line: 701, column: 6)
!13372 = !DILocation(line: 701, column: 6, scope: !13354)
!13373 = !DILocation(line: 704, column: 5, scope: !13374)
!13374 = distinct !DILexicalBlock(scope: !13371, file: !13139, line: 702, column: 3)
!13375 = !DILocation(line: 705, column: 5, scope: !13374)
!13376 = !DILocation(line: 705, column: 12, scope: !13374)
!13377 = !DILocation(line: 705, column: 33, scope: !13374)
!13378 = distinct !{!13378, !13375, !13379}
!13379 = !DILocation(line: 708, column: 5, scope: !13374)
!13380 = !DILocation(line: 711, column: 49, scope: !13374)
!13381 = !DILocation(line: 711, column: 5, scope: !13374)
!13382 = !DILocation(line: 712, column: 5, scope: !13374)
!13383 = !DILocation(line: 713, column: 5, scope: !13374)
!13384 = !DILocation(line: 713, column: 12, scope: !13374)
!13385 = !DILocation(line: 713, column: 37, scope: !13374)
!13386 = distinct !{!13386, !13383, !13387}
!13387 = !DILocation(line: 716, column: 5, scope: !13374)
!13388 = !DILocation(line: 719, column: 50, scope: !13374)
!13389 = !DILocation(line: 719, column: 5, scope: !13374)
!13390 = !DILocation(line: 720, column: 50, scope: !13374)
!13391 = !DILocation(line: 720, column: 5, scope: !13374)
!13392 = !DILocation(line: 721, column: 3, scope: !13374)
!13393 = !DILocation(line: 724, column: 6, scope: !13394)
!13394 = distinct !DILexicalBlock(scope: !13354, file: !13139, line: 724, column: 6)
!13395 = !DILocation(line: 724, column: 22, scope: !13394)
!13396 = !DILocation(line: 724, column: 6, scope: !13354)
!13397 = !DILocation(line: 727, column: 14, scope: !13398)
!13398 = distinct !DILexicalBlock(scope: !13394, file: !13139, line: 725, column: 3)
!13399 = !DILocation(line: 728, column: 3, scope: !13398)
!13400 = !DILocation(line: 731, column: 13, scope: !13401)
!13401 = distinct !DILexicalBlock(scope: !13354, file: !13139, line: 731, column: 6)
!13402 = !DILocation(line: 731, column: 6, scope: !13354)
!13403 = !DILocation(line: 733, column: 5, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13401, file: !13139, line: 732, column: 3)
!13405 = !DILocation(line: 734, column: 3, scope: !13404)
!13406 = !DILocation(line: 736, column: 3, scope: !13354)
!13407 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10081, file: !10081, line: 4184, type: !266, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !397)
!13408 = !DILocation(line: 4186, column: 3, scope: !13407)
!13409 = !DILocation(line: 4187, column: 1, scope: !13407)
!13410 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10081, file: !10081, line: 4205, type: !395, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !397)
!13411 = !DILocation(line: 4207, column: 11, scope: !13410)
!13412 = !DILocation(line: 4207, column: 44, scope: !13410)
!13413 = !DILocation(line: 4207, column: 3, scope: !13410)
!13414 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10081, file: !10081, line: 3224, type: !7846, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13415)
!13415 = !{!13416}
!13416 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13414, file: !10081, line: 3224, type: !113)
!13417 = !DILocation(line: 0, scope: !13414)
!13418 = !DILocation(line: 3226, column: 3, scope: !13414)
!13419 = !DILocation(line: 3227, column: 1, scope: !13414)
!13420 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10081, file: !10081, line: 3188, type: !7846, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13421)
!13421 = !{!13422}
!13422 = !DILocalVariable(name: "Source", arg: 1, scope: !13420, file: !10081, line: 3188, type: !113)
!13423 = !DILocation(line: 0, scope: !13420)
!13424 = !DILocation(line: 3190, column: 3, scope: !13420)
!13425 = !DILocation(line: 3191, column: 1, scope: !13420)
!13426 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10081, file: !10081, line: 3204, type: !395, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !397)
!13427 = !DILocation(line: 3206, column: 21, scope: !13426)
!13428 = !DILocation(line: 3206, column: 3, scope: !13426)
!13429 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10081, file: !10081, line: 3240, type: !7846, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13430)
!13430 = !{!13431}
!13431 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13429, file: !10081, line: 3240, type: !113)
!13432 = !DILocation(line: 0, scope: !13429)
!13433 = !DILocation(line: 3242, column: 3, scope: !13429)
!13434 = !DILocation(line: 3243, column: 1, scope: !13429)
!13435 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10081, file: !10081, line: 3256, type: !7846, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13436)
!13436 = !{!13437}
!13437 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13435, file: !10081, line: 3256, type: !113)
!13438 = !DILocation(line: 0, scope: !13435)
!13439 = !DILocation(line: 3258, column: 3, scope: !13435)
!13440 = !DILocation(line: 3259, column: 1, scope: !13435)
!13441 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10081, file: !10081, line: 5153, type: !395, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !397)
!13442 = !DILocation(line: 5155, column: 11, scope: !13441)
!13443 = !DILocation(line: 5155, column: 47, scope: !13441)
!13444 = !DILocation(line: 5155, column: 3, scope: !13441)
!13445 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13139, file: !13139, line: 540, type: !13446, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !13448)
!13446 = !DISubroutineType(types: !13447)
!13447 = !{!13182, !113, !113, !13260, !13267}
!13448 = !{!13449, !13450, !13451, !13452, !13453, !13454}
!13449 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13445, file: !13139, line: 540, type: !113)
!13450 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13445, file: !13139, line: 540, type: !113)
!13451 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13445, file: !13139, line: 541, type: !13260)
!13452 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13445, file: !13139, line: 541, type: !13267)
!13453 = !DILocalVariable(name: "status", scope: !13445, file: !13139, line: 543, type: !13182)
!13454 = !DILocalVariable(name: "pllfreq", scope: !13445, file: !13139, line: 544, type: !113)
!13455 = !DILocation(line: 0, scope: !13445)
!13456 = !DILocation(line: 551, column: 6, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !13445, file: !13139, line: 551, column: 6)
!13458 = !DILocation(line: 551, column: 25, scope: !13457)
!13459 = !DILocation(line: 551, column: 6, scope: !13445)
!13460 = !DILocation(line: 554, column: 15, scope: !13461)
!13461 = distinct !DILexicalBlock(scope: !13457, file: !13139, line: 552, column: 3)
!13462 = !DILocation(line: 557, column: 8, scope: !13463)
!13463 = distinct !DILexicalBlock(scope: !13461, file: !13139, line: 557, column: 8)
!13464 = !DILocation(line: 557, column: 29, scope: !13463)
!13465 = !DILocation(line: 557, column: 8, scope: !13461)
!13466 = !DILocation(line: 560, column: 20, scope: !13467)
!13467 = distinct !DILexicalBlock(scope: !13468, file: !13139, line: 560, column: 10)
!13468 = distinct !DILexicalBlock(scope: !13463, file: !13139, line: 558, column: 5)
!13469 = !DILocation(line: 560, column: 10, scope: !13468)
!13470 = !DILocation(line: 562, column: 9, scope: !13471)
!13471 = distinct !DILexicalBlock(scope: !13467, file: !13139, line: 561, column: 7)
!13472 = !DILocation(line: 563, column: 7, scope: !13471)
!13473 = !DILocation(line: 566, column: 9, scope: !13474)
!13474 = distinct !DILexicalBlock(scope: !13467, file: !13139, line: 565, column: 7)
!13475 = !DILocation(line: 570, column: 7, scope: !13468)
!13476 = !DILocation(line: 571, column: 7, scope: !13468)
!13477 = !DILocation(line: 571, column: 14, scope: !13468)
!13478 = !DILocation(line: 571, column: 35, scope: !13468)
!13479 = distinct !{!13479, !13476, !13480}
!13480 = !DILocation(line: 574, column: 7, scope: !13468)
!13481 = !DILocation(line: 578, column: 76, scope: !13461)
!13482 = !DILocation(line: 578, column: 103, scope: !13461)
!13483 = !DILocation(line: 579, column: 54, scope: !13461)
!13484 = !DILocation(line: 578, column: 5, scope: !13461)
!13485 = !DILocation(line: 582, column: 14, scope: !13461)
!13486 = !DILocation(line: 583, column: 3, scope: !13461)
!13487 = !DILocation(line: 0, scope: !13457)
!13488 = !DILocation(line: 590, column: 3, scope: !13445)
!13489 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10081, file: !10081, line: 2969, type: !395, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !397)
!13490 = !DILocation(line: 2971, column: 11, scope: !13489)
!13491 = !DILocation(line: 2971, column: 44, scope: !13489)
!13492 = !DILocation(line: 2971, column: 3, scope: !13489)
!13493 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10081, file: !10081, line: 2929, type: !266, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !397)
!13494 = !DILocation(line: 2931, column: 3, scope: !13493)
!13495 = !DILocation(line: 2932, column: 1, scope: !13493)
!13496 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10081, file: !10081, line: 2939, type: !266, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !397)
!13497 = !DILocation(line: 2941, column: 3, scope: !13496)
!13498 = !DILocation(line: 2942, column: 1, scope: !13496)
!13499 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10081, file: !10081, line: 2949, type: !266, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3057, retainedNodes: !397)
!13500 = !DILocation(line: 2951, column: 3, scope: !13499)
!13501 = !DILocation(line: 2952, column: 1, scope: !13499)
!13502 = distinct !DISubprogram(name: "z_device_state_init", scope: !13503, file: !13503, line: 23, type: !266, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !13504)
!13503 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13504 = !{!13505}
!13505 = !DILocalVariable(name: "dev", scope: !13502, file: !13503, line: 25, type: !13506)
!13506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13507, size: 32)
!13507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13508)
!13508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !481, line: 378, size: 192, elements: !13509)
!13509 = !{!13510, !13511, !13512, !13513, !13519, !13520}
!13510 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13508, file: !481, line: 380, baseType: !269, size: 32)
!13511 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13508, file: !481, line: 382, baseType: !13, size: 32, offset: 32)
!13512 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13508, file: !481, line: 384, baseType: !13, size: 32, offset: 64)
!13513 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13508, file: !481, line: 386, baseType: !13514, size: 32, offset: 96)
!13514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13515, size: 32)
!13515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !481, line: 351, size: 16, elements: !13516)
!13516 = !{!13517, !13518}
!13517 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13515, file: !481, line: 359, baseType: !169, size: 8)
!13518 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13515, file: !481, line: 364, baseType: !492, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13519 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13508, file: !481, line: 388, baseType: !104, size: 32, offset: 128)
!13520 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13508, file: !481, line: 396, baseType: !495, size: 32, offset: 160)
!13521 = !DILocation(line: 0, scope: !13502)
!13522 = !DILocation(line: 31, column: 1, scope: !13502)
!13523 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13503, file: !13503, line: 33, type: !13524, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !13526)
!13524 = !DISubroutineType(types: !13525)
!13525 = !{!13506, !269}
!13526 = !{!13527, !13528}
!13527 = !DILocalVariable(name: "name", arg: 1, scope: !13523, file: !13503, line: 33, type: !269)
!13528 = !DILocalVariable(name: "dev", scope: !13523, file: !13503, line: 35, type: !13506)
!13529 = !DILocation(line: 0, scope: !13523)
!13530 = !DILocation(line: 40, column: 12, scope: !13531)
!13531 = distinct !DILexicalBlock(scope: !13523, file: !13503, line: 40, column: 6)
!13532 = !DILocation(line: 40, column: 21, scope: !13531)
!13533 = !DILocation(line: 40, column: 25, scope: !13531)
!13534 = !DILocation(line: 40, column: 33, scope: !13531)
!13535 = !DILocation(line: 40, column: 6, scope: !13523)
!13536 = !DILocation(line: 55, column: 2, scope: !13537)
!13537 = distinct !DILexicalBlock(scope: !13523, file: !13503, line: 55, column: 2)
!13538 = !DILocation(line: 50, column: 7, scope: !13539)
!13539 = distinct !DILexicalBlock(scope: !13540, file: !13503, line: 50, column: 7)
!13540 = distinct !DILexicalBlock(scope: !13541, file: !13503, line: 49, column: 57)
!13541 = distinct !DILexicalBlock(scope: !13542, file: !13503, line: 49, column: 2)
!13542 = distinct !DILexicalBlock(scope: !13523, file: !13503, line: 49, column: 2)
!13543 = !DILocation(line: 50, column: 30, scope: !13539)
!13544 = !DILocation(line: 50, column: 39, scope: !13539)
!13545 = !DILocation(line: 50, column: 44, scope: !13539)
!13546 = !DILocation(line: 50, column: 7, scope: !13540)
!13547 = !DILocation(line: 49, column: 53, scope: !13541)
!13548 = !DILocation(line: 49, column: 33, scope: !13541)
!13549 = !DILocation(line: 49, column: 2, scope: !13542)
!13550 = distinct !{!13550, !13549, !13551}
!13551 = !DILocation(line: 53, column: 2, scope: !13542)
!13552 = !DILocation(line: 56, column: 7, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13554, file: !13503, line: 56, column: 7)
!13554 = distinct !DILexicalBlock(scope: !13555, file: !13503, line: 55, column: 57)
!13555 = distinct !DILexicalBlock(scope: !13537, file: !13503, line: 55, column: 2)
!13556 = !DILocation(line: 56, column: 30, scope: !13553)
!13557 = !DILocation(line: 56, column: 52, scope: !13553)
!13558 = !DILocation(line: 56, column: 34, scope: !13553)
!13559 = !DILocation(line: 56, column: 58, scope: !13553)
!13560 = !DILocation(line: 56, column: 7, scope: !13554)
!13561 = !DILocation(line: 55, column: 53, scope: !13555)
!13562 = !DILocation(line: 55, column: 33, scope: !13555)
!13563 = distinct !{!13563, !13536, !13564}
!13564 = !DILocation(line: 59, column: 2, scope: !13537)
!13565 = !DILocation(line: 62, column: 1, scope: !13523)
!13566 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13503, file: !13503, line: 93, type: !13567, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !13569)
!13567 = !DISubroutineType(types: !13568)
!13568 = !{!492, !13506}
!13569 = !{!13570}
!13570 = !DILocalVariable(name: "dev", arg: 1, scope: !13566, file: !13503, line: 93, type: !13506)
!13571 = !DILocation(line: 0, scope: !13566)
!13572 = !DILocation(line: 99, column: 10, scope: !13573)
!13573 = distinct !DILexicalBlock(scope: !13566, file: !13503, line: 99, column: 6)
!13574 = !DILocation(line: 99, column: 6, scope: !13566)
!13575 = !DILocation(line: 103, column: 14, scope: !13566)
!13576 = !DILocation(line: 103, column: 21, scope: !13566)
!13577 = !DILocation(line: 103, column: 33, scope: !13566)
!13578 = !DILocation(line: 103, column: 49, scope: !13566)
!13579 = !DILocation(line: 103, column: 58, scope: !13566)
!13580 = !DILocation(line: 104, column: 1, scope: !13566)
!13581 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13503, file: !13503, line: 87, type: !13582, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !13585)
!13582 = !DISubroutineType(types: !13583)
!13583 = !{!111, !13584}
!13584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13506, size: 32)
!13585 = !{!13586}
!13586 = !DILocalVariable(name: "devices", arg: 1, scope: !13581, file: !13503, line: 87, type: !13584)
!13587 = !DILocation(line: 0, scope: !13581)
!13588 = !DILocation(line: 89, column: 11, scope: !13581)
!13589 = !DILocation(line: 90, column: 2, scope: !13581)
!13590 = distinct !DISubprogram(name: "device_required_foreach", scope: !13503, file: !13503, line: 125, type: !13591, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !13597)
!13591 = !DISubroutineType(types: !13592)
!13592 = !{!105, !13506, !13593, !104}
!13593 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !481, line: 471, baseType: !13594)
!13594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13595, size: 32)
!13595 = !DISubroutineType(types: !13596)
!13596 = !{!105, !13506, !104}
!13597 = !{!13598, !13599, !13600, !13601, !13602}
!13598 = !DILocalVariable(name: "dev", arg: 1, scope: !13590, file: !13503, line: 125, type: !13506)
!13599 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13590, file: !13503, line: 126, type: !13593)
!13600 = !DILocalVariable(name: "context", arg: 3, scope: !13590, file: !13503, line: 127, type: !104)
!13601 = !DILocalVariable(name: "handle_count", scope: !13590, file: !13503, line: 129, type: !111)
!13602 = !DILocalVariable(name: "handles", scope: !13590, file: !13503, line: 130, type: !495)
!13603 = !DILocation(line: 0, scope: !13590)
!13604 = !DILocation(line: 129, column: 2, scope: !13590)
!13605 = !DILocation(line: 129, column: 9, scope: !13590)
!13606 = !DILocation(line: 130, column: 35, scope: !13590)
!13607 = !DILocation(line: 132, column: 33, scope: !13590)
!13608 = !DILocation(line: 132, column: 9, scope: !13590)
!13609 = !DILocation(line: 133, column: 1, scope: !13590)
!13610 = !DILocation(line: 132, column: 2, scope: !13590)
!13611 = distinct !DISubprogram(name: "device_required_handles_get", scope: !481, file: !481, line: 493, type: !13612, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !13614)
!13612 = !DISubroutineType(types: !13613)
!13613 = !{!495, !13506, !2613}
!13614 = !{!13615, !13616, !13617, !13618}
!13615 = !DILocalVariable(name: "dev", arg: 1, scope: !13611, file: !481, line: 493, type: !13506)
!13616 = !DILocalVariable(name: "count", arg: 2, scope: !13611, file: !481, line: 493, type: !2613)
!13617 = !DILocalVariable(name: "rv", scope: !13611, file: !481, line: 495, type: !495)
!13618 = !DILocalVariable(name: "i", scope: !13619, file: !481, line: 498, type: !111)
!13619 = distinct !DILexicalBlock(scope: !13620, file: !481, line: 497, column: 18)
!13620 = distinct !DILexicalBlock(scope: !13611, file: !481, line: 497, column: 6)
!13621 = !DILocation(line: 0, scope: !13611)
!13622 = !DILocation(line: 495, column: 35, scope: !13611)
!13623 = !DILocation(line: 497, column: 9, scope: !13620)
!13624 = !DILocation(line: 497, column: 6, scope: !13611)
!13625 = !DILocation(line: 0, scope: !13619)
!13626 = !DILocation(line: 500, column: 11, scope: !13619)
!13627 = !DILocation(line: 500, column: 40, scope: !13619)
!13628 = !DILocation(line: 502, column: 4, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13619, file: !481, line: 501, column: 40)
!13630 = distinct !{!13630, !13631, !13632}
!13631 = !DILocation(line: 500, column: 3, scope: !13619)
!13632 = !DILocation(line: 503, column: 3, scope: !13619)
!13633 = !DILocation(line: 504, column: 10, scope: !13619)
!13634 = !DILocation(line: 505, column: 2, scope: !13619)
!13635 = !DILocation(line: 507, column: 2, scope: !13611)
!13636 = distinct !DISubprogram(name: "device_visitor", scope: !13503, file: !13503, line: 106, type: !13637, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !13639)
!13637 = !DISubroutineType(types: !13638)
!13638 = !{!105, !495, !111, !13593, !104}
!13639 = !{!13640, !13641, !13642, !13643, !13644, !13646, !13649, !13650}
!13640 = !DILocalVariable(name: "handles", arg: 1, scope: !13636, file: !13503, line: 106, type: !495)
!13641 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13636, file: !13503, line: 107, type: !111)
!13642 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13636, file: !13503, line: 108, type: !13593)
!13643 = !DILocalVariable(name: "context", arg: 4, scope: !13636, file: !13503, line: 109, type: !104)
!13644 = !DILocalVariable(name: "i", scope: !13645, file: !13503, line: 112, type: !111)
!13645 = distinct !DILexicalBlock(scope: !13636, file: !13503, line: 112, column: 2)
!13646 = !DILocalVariable(name: "dh", scope: !13647, file: !13503, line: 113, type: !497)
!13647 = distinct !DILexicalBlock(scope: !13648, file: !13503, line: 112, column: 44)
!13648 = distinct !DILexicalBlock(scope: !13645, file: !13503, line: 112, column: 2)
!13649 = !DILocalVariable(name: "rdev", scope: !13647, file: !13503, line: 114, type: !13506)
!13650 = !DILocalVariable(name: "rc", scope: !13647, file: !13503, line: 115, type: !105)
!13651 = !DILocation(line: 0, scope: !13636)
!13652 = !DILocation(line: 0, scope: !13645)
!13653 = !DILocation(line: 112, column: 23, scope: !13648)
!13654 = !DILocation(line: 112, column: 2, scope: !13645)
!13655 = distinct !{!13655, !13654, !13656}
!13656 = !DILocation(line: 120, column: 2, scope: !13645)
!13657 = !DILocation(line: 113, column: 24, scope: !13647)
!13658 = !DILocation(line: 0, scope: !13647)
!13659 = !DILocation(line: 114, column: 31, scope: !13647)
!13660 = !DILocation(line: 115, column: 12, scope: !13647)
!13661 = !DILocation(line: 117, column: 10, scope: !13662)
!13662 = distinct !DILexicalBlock(scope: !13647, file: !13503, line: 117, column: 7)
!13663 = !DILocation(line: 112, column: 39, scope: !13648)
!13664 = !DILocation(line: 123, column: 1, scope: !13636)
!13665 = distinct !DISubprogram(name: "device_from_handle", scope: !481, file: !481, line: 439, type: !13666, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !13668)
!13666 = !DISubroutineType(types: !13667)
!13667 = !{!13506, !497}
!13668 = !{!13669, !13670, !13671}
!13669 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13665, file: !481, line: 439, type: !497)
!13670 = !DILocalVariable(name: "dev", scope: !13665, file: !481, line: 443, type: !13506)
!13671 = !DILocalVariable(name: "numdev", scope: !13665, file: !481, line: 444, type: !111)
!13672 = !DILocation(line: 0, scope: !13665)
!13673 = !DILocation(line: 446, column: 7, scope: !13674)
!13674 = distinct !DILexicalBlock(scope: !13665, file: !481, line: 446, column: 6)
!13675 = !DILocation(line: 446, column: 18, scope: !13674)
!13676 = !DILocation(line: 446, column: 23, scope: !13674)
!13677 = !DILocation(line: 450, column: 2, scope: !13665)
!13678 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13503, file: !13503, line: 135, type: !13591, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !13679)
!13679 = !{!13680, !13681, !13682, !13683, !13684}
!13680 = !DILocalVariable(name: "dev", arg: 1, scope: !13678, file: !13503, line: 135, type: !13506)
!13681 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13678, file: !13503, line: 136, type: !13593)
!13682 = !DILocalVariable(name: "context", arg: 3, scope: !13678, file: !13503, line: 137, type: !104)
!13683 = !DILocalVariable(name: "handle_count", scope: !13678, file: !13503, line: 139, type: !111)
!13684 = !DILocalVariable(name: "handles", scope: !13678, file: !13503, line: 140, type: !495)
!13685 = !DILocation(line: 0, scope: !13678)
!13686 = !DILocation(line: 139, column: 2, scope: !13678)
!13687 = !DILocation(line: 139, column: 9, scope: !13678)
!13688 = !DILocation(line: 140, column: 35, scope: !13678)
!13689 = !DILocation(line: 142, column: 33, scope: !13678)
!13690 = !DILocation(line: 142, column: 9, scope: !13678)
!13691 = !DILocation(line: 143, column: 1, scope: !13678)
!13692 = !DILocation(line: 142, column: 2, scope: !13678)
!13693 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !481, file: !481, line: 573, type: !13612, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !13694)
!13694 = !{!13695, !13696, !13697, !13698, !13699}
!13695 = !DILocalVariable(name: "dev", arg: 1, scope: !13693, file: !481, line: 573, type: !13506)
!13696 = !DILocalVariable(name: "count", arg: 2, scope: !13693, file: !481, line: 573, type: !2613)
!13697 = !DILocalVariable(name: "rv", scope: !13693, file: !481, line: 575, type: !495)
!13698 = !DILocalVariable(name: "region", scope: !13693, file: !481, line: 576, type: !111)
!13699 = !DILocalVariable(name: "i", scope: !13693, file: !481, line: 577, type: !111)
!13700 = !DILocation(line: 0, scope: !13693)
!13701 = !DILocation(line: 575, column: 35, scope: !13693)
!13702 = !DILocation(line: 579, column: 9, scope: !13703)
!13703 = distinct !DILexicalBlock(scope: !13693, file: !481, line: 579, column: 6)
!13704 = !DILocation(line: 579, column: 6, scope: !13693)
!13705 = !DILocation(line: 582, column: 8, scope: !13706)
!13706 = distinct !DILexicalBlock(scope: !13707, file: !481, line: 582, column: 8)
!13707 = distinct !DILexicalBlock(scope: !13708, file: !481, line: 581, column: 23)
!13708 = distinct !DILexicalBlock(scope: !13703, file: !481, line: 579, column: 18)
!13709 = !DILocation(line: 582, column: 12, scope: !13706)
!13710 = !DILocation(line: 585, column: 6, scope: !13707)
!13711 = !DILocation(line: 0, scope: !13708)
!13712 = !DILocation(line: 581, column: 17, scope: !13708)
!13713 = !DILocation(line: 581, column: 3, scope: !13708)
!13714 = !DILocation(line: 588, column: 10, scope: !13708)
!13715 = !DILocation(line: 588, column: 16, scope: !13708)
!13716 = !DILocation(line: 589, column: 4, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13708, file: !481, line: 588, column: 39)
!13718 = !DILocation(line: 588, column: 3, scope: !13708)
!13719 = distinct !{!13719, !13718, !13720}
!13720 = !DILocation(line: 590, column: 3, scope: !13708)
!13721 = !DILocation(line: 591, column: 10, scope: !13708)
!13722 = !DILocation(line: 592, column: 2, scope: !13708)
!13723 = !DILocation(line: 575, column: 25, scope: !13693)
!13724 = !DILocation(line: 594, column: 2, scope: !13693)
!13725 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1934, file: !1934, line: 49, type: !13726, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1931, retainedNodes: !397)
!13726 = !DISubroutineType(types: !13727)
!13727 = !{!428}
!13728 = !DILocation(line: 51, column: 10, scope: !13725)
!13729 = !DILocation(line: 51, column: 20, scope: !13725)
!13730 = !DILocation(line: 51, column: 2, scope: !13725)
!13731 = distinct !DISubprogram(name: "coredump", scope: !3129, file: !3129, line: 209, type: !13732, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13880)
!13732 = !DISubroutineType(types: !13733)
!13733 = !{null, !32, !13734, !13778}
!13734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13735, size: 32)
!13735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13736)
!13736 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2743, line: 141, baseType: !13737)
!13737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2743, line: 97, size: 256, elements: !13738)
!13738 = !{!13739}
!13739 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13737, file: !2743, line: 107, baseType: !13740, size: 256)
!13740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2743, line: 98, size: 256, elements: !13741)
!13741 = !{!13742, !13747, !13752, !13757, !13762, !13767, !13772, !13777}
!13742 = !DIDerivedType(tag: DW_TAG_member, scope: !13740, file: !2743, line: 99, baseType: !13743, size: 32)
!13743 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13740, file: !2743, line: 99, size: 32, elements: !13744)
!13744 = !{!13745, !13746}
!13745 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13743, file: !2743, line: 99, baseType: !113, size: 32)
!13746 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13743, file: !2743, line: 99, baseType: !113, size: 32)
!13747 = !DIDerivedType(tag: DW_TAG_member, scope: !13740, file: !2743, line: 100, baseType: !13748, size: 32, offset: 32)
!13748 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13740, file: !2743, line: 100, size: 32, elements: !13749)
!13749 = !{!13750, !13751}
!13750 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13748, file: !2743, line: 100, baseType: !113, size: 32)
!13751 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13748, file: !2743, line: 100, baseType: !113, size: 32)
!13752 = !DIDerivedType(tag: DW_TAG_member, scope: !13740, file: !2743, line: 101, baseType: !13753, size: 32, offset: 64)
!13753 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13740, file: !2743, line: 101, size: 32, elements: !13754)
!13754 = !{!13755, !13756}
!13755 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13753, file: !2743, line: 101, baseType: !113, size: 32)
!13756 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13753, file: !2743, line: 101, baseType: !113, size: 32)
!13757 = !DIDerivedType(tag: DW_TAG_member, scope: !13740, file: !2743, line: 102, baseType: !13758, size: 32, offset: 96)
!13758 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13740, file: !2743, line: 102, size: 32, elements: !13759)
!13759 = !{!13760, !13761}
!13760 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13758, file: !2743, line: 102, baseType: !113, size: 32)
!13761 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13758, file: !2743, line: 102, baseType: !113, size: 32)
!13762 = !DIDerivedType(tag: DW_TAG_member, scope: !13740, file: !2743, line: 103, baseType: !13763, size: 32, offset: 128)
!13763 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13740, file: !2743, line: 103, size: 32, elements: !13764)
!13764 = !{!13765, !13766}
!13765 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13763, file: !2743, line: 103, baseType: !113, size: 32)
!13766 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13763, file: !2743, line: 103, baseType: !113, size: 32)
!13767 = !DIDerivedType(tag: DW_TAG_member, scope: !13740, file: !2743, line: 104, baseType: !13768, size: 32, offset: 160)
!13768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13740, file: !2743, line: 104, size: 32, elements: !13769)
!13769 = !{!13770, !13771}
!13770 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13768, file: !2743, line: 104, baseType: !113, size: 32)
!13771 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13768, file: !2743, line: 104, baseType: !113, size: 32)
!13772 = !DIDerivedType(tag: DW_TAG_member, scope: !13740, file: !2743, line: 105, baseType: !13773, size: 32, offset: 192)
!13773 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13740, file: !2743, line: 105, size: 32, elements: !13774)
!13774 = !{!13775, !13776}
!13775 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13773, file: !2743, line: 105, baseType: !113, size: 32)
!13776 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13773, file: !2743, line: 105, baseType: !113, size: 32)
!13777 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13740, file: !2743, line: 106, baseType: !113, size: 32, offset: 224)
!13778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13779, size: 32)
!13779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !13780)
!13780 = !{!13781, !13839, !13851, !13852, !13853, !13854, !13860, !13875}
!13781 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13779, file: !127, line: 247, baseType: !13782, size: 384)
!13782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !13783)
!13783 = !{!13784, !13808, !13815, !13816, !13817, !13826, !13827, !13828}
!13784 = !DIDerivedType(tag: DW_TAG_member, scope: !13782, file: !127, line: 60, baseType: !13785, size: 64)
!13785 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13782, file: !127, line: 60, size: 64, elements: !13786)
!13786 = !{!13787, !13802}
!13787 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13785, file: !127, line: 61, baseType: !13788, size: 64)
!13788 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !13789)
!13789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !13790)
!13790 = !{!13791, !13797}
!13791 = !DIDerivedType(tag: DW_TAG_member, scope: !13789, file: !137, line: 38, baseType: !13792, size: 32)
!13792 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13789, file: !137, line: 38, size: 32, elements: !13793)
!13793 = !{!13794, !13796}
!13794 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13792, file: !137, line: 39, baseType: !13795, size: 32)
!13795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13789, size: 32)
!13796 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13792, file: !137, line: 40, baseType: !13795, size: 32)
!13797 = !DIDerivedType(tag: DW_TAG_member, scope: !13789, file: !137, line: 42, baseType: !13798, size: 32, offset: 32)
!13798 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13789, file: !137, line: 42, size: 32, elements: !13799)
!13799 = !{!13800, !13801}
!13800 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13798, file: !137, line: 43, baseType: !13795, size: 32)
!13801 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13798, file: !137, line: 44, baseType: !13795, size: 32)
!13802 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13785, file: !127, line: 62, baseType: !13803, size: 64)
!13803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !13804)
!13804 = !{!13805}
!13805 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13803, file: !153, line: 50, baseType: !13806, size: 64)
!13806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13807, size: 64, elements: !158)
!13807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13803, size: 32)
!13808 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13782, file: !127, line: 68, baseType: !13809, size: 32, offset: 64)
!13809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13810, size: 32)
!13810 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !13811)
!13811 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !13812)
!13812 = !{!13813}
!13813 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13811, file: !163, line: 232, baseType: !13814, size: 64)
!13814 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !13789)
!13815 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13782, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!13816 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13782, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!13817 = !DIDerivedType(tag: DW_TAG_member, scope: !13782, file: !127, line: 90, baseType: !13818, size: 16, offset: 112)
!13818 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13782, file: !127, line: 90, size: 16, elements: !13819)
!13819 = !{!13820, !13825}
!13820 = !DIDerivedType(tag: DW_TAG_member, scope: !13818, file: !127, line: 91, baseType: !13821, size: 16)
!13821 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13818, file: !127, line: 91, size: 16, elements: !13822)
!13822 = !{!13823, !13824}
!13823 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13821, file: !127, line: 96, baseType: !179, size: 8)
!13824 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13821, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!13825 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13818, file: !127, line: 100, baseType: !183, size: 16)
!13826 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13782, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!13827 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13782, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!13828 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13782, file: !127, line: 131, baseType: !13829, size: 192, offset: 192)
!13829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !13830)
!13830 = !{!13831, !13832, !13838}
!13831 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13829, file: !163, line: 245, baseType: !13788, size: 64)
!13832 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13829, file: !163, line: 246, baseType: !13833, size: 32, offset: 64)
!13833 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !13834)
!13834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13835, size: 32)
!13835 = !DISubroutineType(types: !13836)
!13836 = !{null, !13837}
!13837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13829, size: 32)
!13838 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13829, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!13839 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13779, file: !127, line: 250, baseType: !13840, size: 288, offset: 384)
!13840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !13841)
!13841 = !{!13842, !13843, !13844, !13845, !13846, !13847, !13848, !13849, !13850}
!13842 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13840, file: !200, line: 26, baseType: !113, size: 32)
!13843 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13840, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!13844 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13840, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!13845 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13840, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!13846 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13840, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!13847 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13840, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!13848 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13840, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!13849 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13840, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!13850 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13840, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!13851 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13779, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!13852 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13779, file: !127, line: 256, baseType: !13810, size: 64, offset: 704)
!13853 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13779, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!13854 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13779, file: !127, line: 300, baseType: !13855, size: 96, offset: 800)
!13855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !13856)
!13856 = !{!13857, !13858, !13859}
!13857 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13855, file: !127, line: 153, baseType: !22, size: 32)
!13858 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13855, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!13859 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13855, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!13860 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13779, file: !127, line: 325, baseType: !13861, size: 32, offset: 896)
!13861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13862, size: 32)
!13862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !13863)
!13863 = !{!13864, !13870, !13871}
!13864 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13862, file: !122, line: 5074, baseType: !13865, size: 96)
!13865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !13866)
!13866 = !{!13867, !13868, !13869}
!13867 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13865, file: !226, line: 57, baseType: !229, size: 32)
!13868 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13865, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!13869 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13865, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!13870 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13862, file: !122, line: 5075, baseType: !13810, size: 64, offset: 96)
!13871 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13862, file: !122, line: 5076, baseType: !13872, size: 32, offset: 160)
!13872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !13873)
!13873 = !{!13874}
!13874 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13872, file: !236, line: 52, baseType: !22, size: 32)
!13875 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13779, file: !127, line: 343, baseType: !13876, size: 64, offset: 928)
!13876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !13877)
!13877 = !{!13878, !13879}
!13878 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13876, file: !200, line: 63, baseType: !113, size: 32)
!13879 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13876, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!13880 = !{!13881, !13882, !13883}
!13881 = !DILocalVariable(name: "reason", arg: 1, scope: !13731, file: !3129, line: 209, type: !32)
!13882 = !DILocalVariable(name: "esf", arg: 2, scope: !13731, file: !3129, line: 209, type: !13734)
!13883 = !DILocalVariable(name: "thread", arg: 3, scope: !13731, file: !3129, line: 210, type: !13778)
!13884 = !DILocation(line: 0, scope: !13731)
!13885 = !DILocation(line: 212, column: 1, scope: !13731)
!13886 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3129, file: !3129, line: 214, type: !13887, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13889)
!13887 = !DISubroutineType(types: !13888)
!13888 = !{null, !22, !22}
!13889 = !{!13890, !13891}
!13890 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13886, file: !3129, line: 214, type: !22)
!13891 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13886, file: !3129, line: 214, type: !22)
!13892 = !DILocation(line: 0, scope: !13886)
!13893 = !DILocation(line: 216, column: 1, scope: !13886)
!13894 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3129, file: !3129, line: 218, type: !13895, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13897)
!13895 = !DISubroutineType(types: !13896)
!13896 = !{null, !432, !111}
!13897 = !{!13898, !13899}
!13898 = !DILocalVariable(name: "buf", arg: 1, scope: !13894, file: !3129, line: 218, type: !432)
!13899 = !DILocalVariable(name: "buflen", arg: 2, scope: !13894, file: !3129, line: 218, type: !111)
!13900 = !DILocation(line: 0, scope: !13894)
!13901 = !DILocation(line: 220, column: 1, scope: !13894)
!13902 = distinct !DISubprogram(name: "coredump_query", scope: !3129, file: !3129, line: 222, type: !13903, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13905)
!13903 = !DISubroutineType(types: !13904)
!13904 = !{!105, !3128, !104}
!13905 = !{!13906, !13907}
!13906 = !DILocalVariable(name: "query_id", arg: 1, scope: !13902, file: !3129, line: 222, type: !3128)
!13907 = !DILocalVariable(name: "arg", arg: 2, scope: !13902, file: !3129, line: 222, type: !104)
!13908 = !DILocation(line: 0, scope: !13902)
!13909 = !DILocation(line: 224, column: 2, scope: !13902)
!13910 = distinct !DISubprogram(name: "coredump_cmd", scope: !3129, file: !3129, line: 227, type: !13911, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13913)
!13911 = !DISubroutineType(types: !13912)
!13912 = !{!105, !3135, !104}
!13913 = !{!13914, !13915}
!13914 = !DILocalVariable(name: "query_id", arg: 1, scope: !13910, file: !3129, line: 227, type: !3135)
!13915 = !DILocalVariable(name: "arg", arg: 2, scope: !13910, file: !3129, line: 227, type: !104)
!13916 = !DILocation(line: 0, scope: !13910)
!13917 = !DILocation(line: 229, column: 2, scope: !13910)
!13918 = distinct !DISubprogram(name: "arch_system_halt", scope: !13919, file: !13919, line: 23, type: !7444, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13920)
!13919 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13920 = !{!13921}
!13921 = !DILocalVariable(name: "reason", arg: 1, scope: !13918, file: !13919, line: 23, type: !32)
!13922 = !DILocation(line: 0, scope: !13918)
!13923 = !DILocation(line: 55, column: 2, scope: !13924, inlinedAt: !13928)
!13924 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7433, file: !7433, line: 42, type: !7434, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13925)
!13925 = !{!13926, !13927}
!13926 = !DILocalVariable(name: "key", scope: !13924, file: !7433, line: 44, type: !32)
!13927 = !DILocalVariable(name: "tmp", scope: !13924, file: !7433, line: 53, type: !32)
!13928 = distinct !DILocation(line: 31, column: 8, scope: !13918)
!13929 = !{i64 1953466}
!13930 = !DILocation(line: 0, scope: !13924, inlinedAt: !13928)
!13931 = !DILocation(line: 32, column: 2, scope: !13918)
!13932 = !DILocation(line: 32, column: 2, scope: !13933)
!13933 = distinct !DILexicalBlock(scope: !13934, file: !13919, line: 32, column: 2)
!13934 = distinct !DILexicalBlock(scope: !13918, file: !13919, line: 32, column: 2)
!13935 = distinct !{!13935, !13936, !13937}
!13936 = !DILocation(line: 32, column: 2, scope: !13934)
!13937 = !DILocation(line: 34, column: 2, scope: !13934)
!13938 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13919, file: !13919, line: 39, type: !13939, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13941)
!13939 = !DISubroutineType(types: !13940)
!13940 = !{null, !32, !13734}
!13941 = !{!13942, !13943}
!13942 = !DILocalVariable(name: "reason", arg: 1, scope: !13938, file: !13919, line: 39, type: !32)
!13943 = !DILocalVariable(name: "esf", arg: 2, scope: !13938, file: !13919, line: 40, type: !13734)
!13944 = !DILocation(line: 0, scope: !13938)
!13945 = !DILocation(line: 45, column: 2, scope: !13946)
!13946 = distinct !DILexicalBlock(scope: !13947, file: !13919, line: 45, column: 2)
!13947 = distinct !DILexicalBlock(scope: !13948, file: !13919, line: 45, column: 2)
!13948 = distinct !DILexicalBlock(scope: !13949, file: !13919, line: 45, column: 2)
!13949 = distinct !DILexicalBlock(scope: !13938, file: !13919, line: 45, column: 2)
!13950 = !DILocation(line: 46, column: 2, scope: !13938)
!13951 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13919, file: !13919, line: 81, type: !7444, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13952)
!13952 = !{!13953}
!13953 = !DILocalVariable(name: "reason", arg: 1, scope: !13951, file: !13919, line: 81, type: !32)
!13954 = !DILocation(line: 0, scope: !13951)
!13955 = !DILocation(line: 83, column: 2, scope: !13951)
!13956 = distinct !DISubprogram(name: "z_fatal_error", scope: !13919, file: !13919, line: 96, type: !13939, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13957)
!13957 = !{!13958, !13959, !13960, !13961}
!13958 = !DILocalVariable(name: "reason", arg: 1, scope: !13956, file: !13919, line: 96, type: !32)
!13959 = !DILocalVariable(name: "esf", arg: 2, scope: !13956, file: !13919, line: 96, type: !13734)
!13960 = !DILocalVariable(name: "key", scope: !13956, file: !13919, line: 102, type: !32)
!13961 = !DILocalVariable(name: "thread", scope: !13956, file: !13919, line: 103, type: !13778)
!13962 = !DILocation(line: 0, scope: !13956)
!13963 = !DILocation(line: 55, column: 2, scope: !13924, inlinedAt: !13964)
!13964 = distinct !DILocation(line: 102, column: 21, scope: !13956)
!13965 = !DILocation(line: 0, scope: !13924, inlinedAt: !13964)
!13966 = !DILocation(line: 104, column: 4, scope: !13956)
!13967 = !DILocation(line: 109, column: 2, scope: !13968)
!13968 = distinct !DILexicalBlock(scope: !13969, file: !13919, line: 109, column: 2)
!13969 = distinct !DILexicalBlock(scope: !13970, file: !13919, line: 109, column: 2)
!13970 = distinct !DILexicalBlock(scope: !13971, file: !13919, line: 109, column: 2)
!13971 = distinct !DILexicalBlock(scope: !13956, file: !13919, line: 109, column: 2)
!13972 = !DILocation(line: 119, column: 11, scope: !13973)
!13973 = distinct !DILexicalBlock(scope: !13956, file: !13919, line: 119, column: 6)
!13974 = !DILocation(line: 119, column: 20, scope: !13973)
!13975 = !DILocalVariable(name: "esf", arg: 1, scope: !13976, file: !8798, line: 71, type: !13734)
!13976 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8798, file: !8798, line: 71, type: !13977, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !13979)
!13977 = !DISubroutineType(types: !13978)
!13978 = !{!492, !13734}
!13979 = !{!13975}
!13980 = !DILocation(line: 0, scope: !13976, inlinedAt: !13981)
!13981 = distinct !DILocation(line: 119, column: 23, scope: !13973)
!13982 = !DILocation(line: 73, column: 21, scope: !13976, inlinedAt: !13981)
!13983 = !DILocation(line: 73, column: 26, scope: !13976, inlinedAt: !13981)
!13984 = !DILocation(line: 73, column: 9, scope: !13976, inlinedAt: !13981)
!13985 = !DILocation(line: 119, column: 6, scope: !13956)
!13986 = !DILocation(line: 120, column: 3, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13988, file: !13919, line: 120, column: 3)
!13988 = distinct !DILexicalBlock(scope: !13989, file: !13919, line: 120, column: 3)
!13989 = distinct !DILexicalBlock(scope: !13990, file: !13919, line: 120, column: 3)
!13990 = distinct !DILexicalBlock(scope: !13991, file: !13919, line: 120, column: 3)
!13991 = distinct !DILexicalBlock(scope: !13973, file: !13919, line: 119, column: 57)
!13992 = !DILocation(line: 121, column: 2, scope: !13991)
!13993 = !DILocation(line: 124, column: 2, scope: !13994)
!13994 = distinct !DILexicalBlock(scope: !13995, file: !13919, line: 124, column: 2)
!13995 = distinct !DILexicalBlock(scope: !13996, file: !13919, line: 124, column: 2)
!13996 = distinct !DILexicalBlock(scope: !13997, file: !13919, line: 124, column: 2)
!13997 = distinct !DILexicalBlock(scope: !13956, file: !13919, line: 124, column: 2)
!13998 = !DILocation(line: 131, column: 2, scope: !13956)
!13999 = !DILocation(line: 147, column: 3, scope: !14000)
!14000 = distinct !DILexicalBlock(scope: !14001, file: !13919, line: 147, column: 3)
!14001 = distinct !DILexicalBlock(scope: !14002, file: !13919, line: 147, column: 3)
!14002 = distinct !DILexicalBlock(scope: !14003, file: !13919, line: 146, column: 32)
!14003 = distinct !DILexicalBlock(scope: !13956, file: !13919, line: 146, column: 6)
!14004 = !DILocation(line: 147, column: 3, scope: !14001)
!14005 = !DILocation(line: 147, column: 3, scope: !14006)
!14006 = distinct !DILexicalBlock(scope: !14000, file: !13919, line: 147, column: 3)
!14007 = !DILocalVariable(name: "key", arg: 1, scope: !14008, file: !7433, line: 84, type: !32)
!14008 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7433, file: !7433, line: 84, type: !7444, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !14009)
!14009 = !{!14007}
!14010 = !DILocation(line: 0, scope: !14008, inlinedAt: !14011)
!14011 = distinct !DILocation(line: 186, column: 2, scope: !13956)
!14012 = !DILocation(line: 95, column: 2, scope: !14008, inlinedAt: !14011)
!14013 = !{i64 1954283}
!14014 = !DILocation(line: 189, column: 3, scope: !14015)
!14015 = distinct !DILexicalBlock(scope: !14016, file: !13919, line: 188, column: 41)
!14016 = distinct !DILexicalBlock(scope: !13956, file: !13919, line: 188, column: 6)
!14017 = !DILocation(line: 191, column: 1, scope: !13956)
!14018 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !14019, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !397)
!14019 = !DISubroutineType(types: !14020)
!14020 = !{!14021}
!14021 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !13778)
!14022 = !DILocation(line: 535, column: 9, scope: !14018)
!14023 = !DILocation(line: 535, column: 2, scope: !14018)
!14024 = distinct !DISubprogram(name: "reason_to_str", scope: !13919, file: !13919, line: 62, type: !14025, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !14027)
!14025 = !DISubroutineType(types: !14026)
!14026 = !{!269, !32}
!14027 = !{!14028}
!14028 = !DILocalVariable(name: "reason", arg: 1, scope: !14024, file: !13919, line: 62, type: !32)
!14029 = !DILocation(line: 0, scope: !14024)
!14030 = !DILocation(line: 64, column: 2, scope: !14024)
!14031 = !DILocation(line: 0, scope: !14032)
!14032 = distinct !DILexicalBlock(scope: !14024, file: !13919, line: 64, column: 18)
!14033 = !DILocation(line: 78, column: 1, scope: !14024)
!14034 = distinct !DISubprogram(name: "thread_name_get", scope: !13919, file: !13919, line: 51, type: !14035, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !14037)
!14035 = !DISubroutineType(types: !14036)
!14036 = !{!269, !13778}
!14037 = !{!14038, !14039}
!14038 = !DILocalVariable(name: "thread", arg: 1, scope: !14034, file: !13919, line: 51, type: !13778)
!14039 = !DILocalVariable(name: "thread_name", scope: !14034, file: !13919, line: 53, type: !269)
!14040 = !DILocation(line: 0, scope: !14034)
!14041 = !DILocation(line: 53, column: 36, scope: !14034)
!14042 = !DILocation(line: 53, column: 28, scope: !14034)
!14043 = !DILocation(line: 53, column: 47, scope: !14034)
!14044 = !DILocation(line: 55, column: 19, scope: !14045)
!14045 = distinct !DILexicalBlock(scope: !14034, file: !13919, line: 55, column: 6)
!14046 = !DILocation(line: 55, column: 28, scope: !14045)
!14047 = !DILocation(line: 55, column: 32, scope: !14045)
!14048 = !DILocation(line: 55, column: 47, scope: !14045)
!14049 = !DILocation(line: 55, column: 6, scope: !14034)
!14050 = !DILocation(line: 57, column: 2, scope: !14051)
!14051 = distinct !DILexicalBlock(scope: !14045, file: !13919, line: 55, column: 57)
!14052 = !DILocation(line: 59, column: 2, scope: !14034)
!14053 = distinct !DISubprogram(name: "k_thread_abort", scope: !3414, file: !3414, line: 188, type: !14054, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !14056)
!14054 = !DISubroutineType(types: !14055)
!14055 = !{null, !14021}
!14056 = !{!14057}
!14057 = !DILocalVariable(name: "thread", arg: 1, scope: !14053, file: !3414, line: 188, type: !14021)
!14058 = !DILocation(line: 0, scope: !14053)
!14059 = !DILocation(line: 197, column: 2, scope: !14060)
!14060 = distinct !DILexicalBlock(scope: !14053, file: !3414, line: 197, column: 2)
!14061 = !{i64 2154073096}
!14062 = !DILocation(line: 198, column: 2, scope: !14053)
!14063 = !DILocation(line: 199, column: 1, scope: !14053)
!14064 = distinct !DISubprogram(name: "z_current_get", scope: !3414, file: !3414, line: 173, type: !14019, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3125, retainedNodes: !397)
!14065 = !DILocation(line: 180, column: 2, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14064, file: !3414, line: 180, column: 2)
!14067 = !{i64 2154073028}
!14068 = !DILocation(line: 181, column: 9, scope: !14064)
!14069 = !DILocation(line: 181, column: 2, scope: !14064)
!14070 = distinct !DISubprogram(name: "z_early_memset", scope: !1942, file: !1942, line: 108, type: !14071, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14073)
!14071 = !DISubroutineType(types: !14072)
!14072 = !{null, !104, !105, !111}
!14073 = !{!14074, !14075, !14076}
!14074 = !DILocalVariable(name: "dst", arg: 1, scope: !14070, file: !1942, line: 108, type: !104)
!14075 = !DILocalVariable(name: "c", arg: 2, scope: !14070, file: !1942, line: 108, type: !105)
!14076 = !DILocalVariable(name: "n", arg: 3, scope: !14070, file: !1942, line: 108, type: !111)
!14077 = !DILocation(line: 0, scope: !14070)
!14078 = !DILocation(line: 110, column: 9, scope: !14070)
!14079 = !DILocation(line: 111, column: 1, scope: !14070)
!14080 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1942, file: !1942, line: 121, type: !14081, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14083)
!14081 = !DISubroutineType(types: !14082)
!14082 = !{null, !104, !13, !111}
!14083 = !{!14084, !14085, !14086}
!14084 = !DILocalVariable(name: "dst", arg: 1, scope: !14080, file: !1942, line: 121, type: !104)
!14085 = !DILocalVariable(name: "src", arg: 2, scope: !14080, file: !1942, line: 121, type: !13)
!14086 = !DILocalVariable(name: "n", arg: 3, scope: !14080, file: !1942, line: 121, type: !111)
!14087 = !DILocation(line: 0, scope: !14080)
!14088 = !DILocation(line: 123, column: 9, scope: !14080)
!14089 = !DILocation(line: 124, column: 1, scope: !14080)
!14090 = distinct !DISubprogram(name: "z_bss_zero", scope: !1942, file: !1942, line: 132, type: !266, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !397)
!14091 = !DILocation(line: 143, column: 2, scope: !14090)
!14092 = !DILocation(line: 168, column: 1, scope: !14090)
!14093 = distinct !DISubprogram(name: "z_init_cpu", scope: !1942, file: !1942, line: 372, type: !9685, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14094)
!14094 = !{!14095}
!14095 = !DILocalVariable(name: "id", arg: 1, scope: !14093, file: !1942, line: 372, type: !105)
!14096 = !DILocation(line: 0, scope: !14093)
!14097 = !DILocation(line: 374, column: 2, scope: !14093)
!14098 = !DILocation(line: 375, column: 34, scope: !14093)
!14099 = !DILocation(line: 375, column: 19, scope: !14093)
!14100 = !DILocation(line: 375, column: 31, scope: !14093)
!14101 = !DILocation(line: 376, column: 24, scope: !14093)
!14102 = !DILocation(line: 376, column: 19, scope: !14093)
!14103 = !DILocation(line: 376, column: 22, scope: !14093)
!14104 = !DILocation(line: 378, column: 26, scope: !14093)
!14105 = !DILocation(line: 378, column: 4, scope: !14093)
!14106 = !DILocation(line: 378, column: 50, scope: !14093)
!14107 = !DILocation(line: 377, column: 19, scope: !14093)
!14108 = !DILocation(line: 377, column: 29, scope: !14093)
!14109 = !DILocation(line: 384, column: 1, scope: !14093)
!14110 = distinct !DISubprogram(name: "init_idle_thread", scope: !1942, file: !1942, line: 343, type: !9685, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14111)
!14111 = !{!14112, !14113, !14114, !14117}
!14112 = !DILocalVariable(name: "i", arg: 1, scope: !14110, file: !1942, line: 343, type: !105)
!14113 = !DILocalVariable(name: "thread", scope: !14110, file: !1942, line: 345, type: !2034)
!14114 = !DILocalVariable(name: "stack", scope: !14110, file: !1942, line: 346, type: !14115)
!14115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14116, size: 32)
!14116 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !2151)
!14117 = !DILocalVariable(name: "tname", scope: !14110, file: !1942, line: 358, type: !102)
!14118 = !DILocation(line: 0, scope: !14110)
!14119 = !DILocation(line: 345, column: 29, scope: !14110)
!14120 = !DILocation(line: 346, column: 28, scope: !14110)
!14121 = !DILocation(line: 362, column: 37, scope: !14110)
!14122 = !DILocation(line: 362, column: 36, scope: !14110)
!14123 = !DILocation(line: 361, column: 2, scope: !14110)
!14124 = !DILocation(line: 365, column: 2, scope: !14110)
!14125 = !DILocation(line: 370, column: 1, scope: !14110)
!14126 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !249, file: !249, line: 331, type: !14127, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14129)
!14127 = !DISubroutineType(types: !14128)
!14128 = !{!102, !14115}
!14129 = !{!14130}
!14130 = !DILocalVariable(name: "sym", arg: 1, scope: !14126, file: !249, line: 331, type: !14115)
!14131 = !DILocation(line: 0, scope: !14126)
!14132 = !DILocation(line: 333, column: 21, scope: !14126)
!14133 = !DILocation(line: 333, column: 2, scope: !14126)
!14134 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14135, file: !14135, line: 155, type: !14136, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14138)
!14135 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14136 = !DISubroutineType(types: !14137)
!14137 = !{null, !2034}
!14138 = !{!14139}
!14139 = !DILocalVariable(name: "thread", arg: 1, scope: !14134, file: !14135, line: 155, type: !2034)
!14140 = !DILocation(line: 0, scope: !14134)
!14141 = !DILocation(line: 157, column: 15, scope: !14134)
!14142 = !DILocation(line: 157, column: 28, scope: !14134)
!14143 = !DILocation(line: 158, column: 1, scope: !14134)
!14144 = distinct !DISubprogram(name: "z_early_boot_rand_get", scope: !1942, file: !1942, line: 451, type: !13895, scopeLine: 452, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14145)
!14145 = !{!14146, !14147}
!14146 = !DILocalVariable(name: "buf", arg: 1, scope: !14144, file: !1942, line: 451, type: !432)
!14147 = !DILocalVariable(name: "length", arg: 2, scope: !14144, file: !1942, line: 451, type: !111)
!14148 = !DILocation(line: 0, scope: !14144)
!14149 = !DILocation(line: 485, column: 2, scope: !14144)
!14150 = !DILocation(line: 486, column: 1, scope: !14144)
!14151 = distinct !DISubprogram(name: "sys_rand_get", scope: !14152, file: !14152, line: 46, type: !14153, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14155)
!14152 = !DIFile(filename: "zephyr/include/generated/syscalls/rand32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_neonkey/metairq_dispatch")
!14153 = !DISubroutineType(types: !14154)
!14154 = !{null, !104, !111}
!14155 = !{!14156, !14157}
!14156 = !DILocalVariable(name: "dst", arg: 1, scope: !14151, file: !14152, line: 46, type: !104)
!14157 = !DILocalVariable(name: "len", arg: 2, scope: !14151, file: !14152, line: 46, type: !111)
!14158 = !DILocation(line: 0, scope: !14151)
!14159 = !DILocation(line: 56, column: 2, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !14151, file: !14152, line: 56, column: 2)
!14161 = !{i64 2154290825}
!14162 = !DILocation(line: 57, column: 2, scope: !14151)
!14163 = !DILocation(line: 58, column: 1, scope: !14151)
!14164 = !DISubprogram(name: "z_impl_sys_rand_get", scope: !14152, file: !14152, line: 43, type: !14153, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!14165 = distinct !DISubprogram(name: "z_cstart", scope: !1942, file: !1942, line: 501, type: !266, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14166)
!14166 = !{!14167}
!14167 = !DILocalVariable(name: "dummy_thread", scope: !14165, file: !1942, line: 518, type: !2035)
!14168 = !DILocation(line: 507, column: 2, scope: !14165)
!14169 = !DILocation(line: 43, column: 14, scope: !14170, inlinedAt: !14174)
!14170 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14171, file: !14171, line: 40, type: !266, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14172)
!14171 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14172 = !{!14173}
!14173 = !DILocalVariable(name: "msp", scope: !14170, file: !14171, line: 42, type: !113)
!14174 = distinct !DILocation(line: 44, column: 2, scope: !14175, inlinedAt: !14177)
!14175 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14176, file: !14176, line: 42, type: !266, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !397)
!14176 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14177 = distinct !DILocation(line: 510, column: 2, scope: !14165)
!14178 = !DILocation(line: 43, column: 3, scope: !14170, inlinedAt: !14174)
!14179 = !DILocation(line: 43, column: 60, scope: !14170, inlinedAt: !14174)
!14180 = !DILocation(line: 0, scope: !14170, inlinedAt: !14174)
!14181 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14182, file: !7751, line: 1153, type: !113)
!14182 = distinct !DISubprogram(name: "__set_MSP", scope: !7751, file: !7751, line: 1153, type: !7846, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14183)
!14183 = !{!14181}
!14184 = !DILocation(line: 0, scope: !14182, inlinedAt: !14185)
!14185 = distinct !DILocation(line: 46, column: 2, scope: !14170, inlinedAt: !14174)
!14186 = !DILocation(line: 1155, column: 3, scope: !14182, inlinedAt: !14185)
!14187 = !{i64 2850710}
!14188 = !DILocation(line: 62, column: 11, scope: !14170, inlinedAt: !14174)
!14189 = !DILocation(line: 102, column: 2, scope: !14190, inlinedAt: !14191)
!14190 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8798, file: !8798, line: 97, type: !266, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !397)
!14191 = distinct !DILocation(line: 45, column: 2, scope: !14175, inlinedAt: !14177)
!14192 = !DILocation(line: 108, column: 2, scope: !14190, inlinedAt: !14191)
!14193 = !DILocation(line: 112, column: 2, scope: !14190, inlinedAt: !14191)
!14194 = !DILocation(line: 113, column: 2, scope: !14190, inlinedAt: !14191)
!14195 = !DILocation(line: 114, column: 2, scope: !14190, inlinedAt: !14191)
!14196 = !DILocation(line: 116, column: 2, scope: !14190, inlinedAt: !14191)
!14197 = !DILocation(line: 123, column: 13, scope: !14190, inlinedAt: !14191)
!14198 = !DILocation(line: 46, column: 2, scope: !14175, inlinedAt: !14177)
!14199 = !DILocation(line: 47, column: 2, scope: !14175, inlinedAt: !14177)
!14200 = !DILocation(line: 174, column: 12, scope: !14201, inlinedAt: !14202)
!14201 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8798, file: !8798, line: 169, type: !266, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !397)
!14202 = distinct !DILocation(line: 48, column: 2, scope: !14175, inlinedAt: !14177)
!14203 = !DILocation(line: 179, column: 12, scope: !14201, inlinedAt: !14202)
!14204 = !DILocation(line: 50, column: 2, scope: !14175, inlinedAt: !14177)
!14205 = !DILocation(line: 57, column: 2, scope: !14175, inlinedAt: !14177)
!14206 = !DILocation(line: 518, column: 2, scope: !14165)
!14207 = !DILocation(line: 518, column: 18, scope: !14165)
!14208 = !DILocation(line: 520, column: 2, scope: !14165)
!14209 = !DILocation(line: 523, column: 2, scope: !14165)
!14210 = !DILocation(line: 526, column: 2, scope: !14165)
!14211 = !DILocation(line: 527, column: 2, scope: !14165)
!14212 = !DILocation(line: 543, column: 24, scope: !14165)
!14213 = !DILocation(line: 543, column: 2, scope: !14165)
!14214 = !DILocation(line: 0, scope: !2174)
!14215 = !DILocation(line: 246, column: 15, scope: !2192)
!14216 = !DILocation(line: 246, column: 36, scope: !2191)
!14217 = !DILocation(line: 246, column: 2, scope: !2192)
!14218 = !DILocation(line: 247, column: 37, scope: !2190)
!14219 = !DILocation(line: 0, scope: !2190)
!14220 = !DILocation(line: 248, column: 19, scope: !2190)
!14221 = !DILocation(line: 248, column: 12, scope: !2190)
!14222 = !DILocation(line: 250, column: 11, scope: !14223)
!14223 = distinct !DILexicalBlock(scope: !2190, file: !1942, line: 250, column: 7)
!14224 = !DILocation(line: 250, column: 7, scope: !2190)
!14225 = !DILocation(line: 254, column: 11, scope: !14226)
!14226 = distinct !DILexicalBlock(scope: !14227, file: !1942, line: 254, column: 8)
!14227 = distinct !DILexicalBlock(scope: !14223, file: !1942, line: 250, column: 20)
!14228 = !DILocation(line: 254, column: 8, scope: !14227)
!14229 = !DILocation(line: 255, column: 9, scope: !14230)
!14230 = distinct !DILexicalBlock(scope: !14226, file: !1942, line: 254, column: 17)
!14231 = !DILocation(line: 258, column: 9, scope: !14230)
!14232 = !DILocation(line: 261, column: 28, scope: !14230)
!14233 = !DILocation(line: 261, column: 10, scope: !14230)
!14234 = !DILocation(line: 261, column: 17, scope: !14230)
!14235 = !DILocation(line: 261, column: 26, scope: !14230)
!14236 = !DILocation(line: 262, column: 4, scope: !14230)
!14237 = !DILocation(line: 263, column: 9, scope: !14227)
!14238 = !DILocation(line: 263, column: 16, scope: !14227)
!14239 = !DILocation(line: 263, column: 28, scope: !14227)
!14240 = !DILocation(line: 264, column: 3, scope: !14227)
!14241 = !DILocation(line: 246, column: 60, scope: !2191)
!14242 = distinct !{!14242, !14217, !14243}
!14243 = !DILocation(line: 265, column: 2, scope: !2192)
!14244 = !DILocation(line: 266, column: 1, scope: !2174)
!14245 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !679, file: !679, line: 1814, type: !7791, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14246)
!14246 = !{!14247, !14248}
!14247 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14245, file: !679, line: 1814, type: !912)
!14248 = !DILocalVariable(name: "priority", arg: 2, scope: !14245, file: !679, line: 1814, type: !113)
!14249 = !DILocation(line: 0, scope: !14245)
!14250 = !DILocation(line: 1822, column: 48, scope: !14251)
!14251 = distinct !DILexicalBlock(scope: !14252, file: !679, line: 1821, column: 3)
!14252 = distinct !DILexicalBlock(scope: !14245, file: !679, line: 1816, column: 7)
!14253 = !DILocation(line: 1822, column: 32, scope: !14251)
!14254 = !DILocation(line: 1822, column: 40, scope: !14251)
!14255 = !DILocation(line: 1822, column: 5, scope: !14251)
!14256 = !DILocation(line: 1822, column: 46, scope: !14251)
!14257 = !DILocation(line: 1824, column: 1, scope: !14245)
!14258 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14176, file: !14176, line: 32, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!14259 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14260, file: !14260, line: 215, type: !14136, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14261)
!14260 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14261 = !{!14262}
!14262 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14259, file: !14260, line: 215, type: !2034)
!14263 = !DILocation(line: 0, scope: !14259)
!14264 = !DILocation(line: 217, column: 21, scope: !14259)
!14265 = !DILocation(line: 217, column: 34, scope: !14259)
!14266 = !DILocation(line: 221, column: 21, scope: !14259)
!14267 = !DILocation(line: 221, column: 34, scope: !14259)
!14268 = !DILocation(line: 223, column: 27, scope: !14259)
!14269 = !DILocation(line: 223, column: 33, scope: !14259)
!14270 = !DILocation(line: 224, column: 27, scope: !14259)
!14271 = !DILocation(line: 224, column: 32, scope: !14259)
!14272 = !DILocation(line: 232, column: 16, scope: !14259)
!14273 = !DILocation(line: 232, column: 30, scope: !14259)
!14274 = !DILocation(line: 239, column: 24, scope: !14259)
!14275 = !DILocation(line: 240, column: 1, scope: !14259)
!14276 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1942, file: !1942, line: 399, type: !14277, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14279)
!14277 = !DISubroutineType(types: !14278)
!14278 = !{!102}
!14279 = !{!14280}
!14280 = !DILocalVariable(name: "stack_ptr", scope: !14276, file: !1942, line: 401, type: !102)
!14281 = !DILocation(line: 404, column: 2, scope: !14276)
!14282 = !DILocation(line: 416, column: 24, scope: !14276)
!14283 = !DILocation(line: 418, column: 14, scope: !14276)
!14284 = !DILocation(line: 0, scope: !14276)
!14285 = !DILocation(line: 423, column: 2, scope: !14276)
!14286 = !DILocation(line: 424, column: 2, scope: !14276)
!14287 = !DILocation(line: 426, column: 2, scope: !14276)
!14288 = !DILocation(line: 428, column: 2, scope: !14276)
!14289 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1942, file: !1942, line: 432, type: !14290, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14292)
!14290 = !DISubroutineType(types: !14291)
!14291 = !{null, !102}
!14292 = !{!14293}
!14293 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14289, file: !1942, line: 432, type: !102)
!14294 = !DILocation(line: 0, scope: !14289)
!14295 = !DILocation(line: 435, column: 2, scope: !14289)
!14296 = !DILocation(line: 445, column: 2, scope: !14289)
!14297 = distinct !DISubprogram(name: "bg_thread_main", scope: !1942, file: !1942, line: 277, type: !256, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1938, retainedNodes: !14298)
!14298 = !{!14299, !14300, !14301}
!14299 = !DILocalVariable(name: "unused1", arg: 1, scope: !14297, file: !1942, line: 277, type: !104)
!14300 = !DILocalVariable(name: "unused2", arg: 2, scope: !14297, file: !1942, line: 277, type: !104)
!14301 = !DILocalVariable(name: "unused3", arg: 3, scope: !14297, file: !1942, line: 277, type: !104)
!14302 = !DILocation(line: 0, scope: !14297)
!14303 = !DILocation(line: 291, column: 20, scope: !14297)
!14304 = !DILocation(line: 293, column: 2, scope: !14297)
!14305 = !DILocation(line: 297, column: 2, scope: !14297)
!14306 = !DILocation(line: 305, column: 2, scope: !14297)
!14307 = !DILocation(line: 307, column: 2, scope: !14297)
!14308 = !DILocation(line: 330, column: 8, scope: !14297)
!14309 = !DILocation(line: 333, column: 34, scope: !14297)
!14310 = !DILocation(line: 339, column: 1, scope: !14297)
!14311 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2205, file: !2205, line: 45, type: !14312, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14320)
!14312 = !DISubroutineType(types: !14313)
!14313 = !{null, !14314, !104}
!14314 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !122, line: 103, baseType: !14315)
!14315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14316, size: 32)
!14316 = !DISubroutineType(types: !14317)
!14317 = !{null, !14318, !104}
!14318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14319, size: 32)
!14319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2210)
!14320 = !{!14321, !14322}
!14321 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14311, file: !2205, line: 45, type: !14314)
!14322 = !DILocalVariable(name: "user_data", arg: 2, scope: !14311, file: !2205, line: 45, type: !104)
!14323 = !DILocation(line: 0, scope: !14311)
!14324 = !DILocation(line: 71, column: 1, scope: !14311)
!14325 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2205, file: !2205, line: 73, type: !14312, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14326)
!14326 = !{!14327, !14328}
!14327 = !DILocalVariable(name: "user_cb", arg: 1, scope: !14325, file: !2205, line: 73, type: !14314)
!14328 = !DILocalVariable(name: "user_data", arg: 2, scope: !14325, file: !2205, line: 73, type: !104)
!14329 = !DILocation(line: 0, scope: !14325)
!14330 = !DILocation(line: 95, column: 1, scope: !14325)
!14331 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2205, file: !2205, line: 97, type: !8799, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !397)
!14332 = !DILocation(line: 1031, column: 3, scope: !14333, inlinedAt: !14336)
!14333 = distinct !DISubprogram(name: "__get_IPSR", scope: !7751, file: !7751, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14334)
!14334 = !{!14335}
!14335 = !DILocalVariable(name: "result", scope: !14333, file: !7751, line: 1029, type: !113)
!14336 = distinct !DILocation(line: 48, column: 10, scope: !14337, inlinedAt: !14338)
!14337 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8798, file: !8798, line: 46, type: !8799, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !397)
!14338 = distinct !DILocation(line: 99, column: 9, scope: !14331)
!14339 = !{i64 2856361}
!14340 = !DILocation(line: 0, scope: !14333, inlinedAt: !14336)
!14341 = !DILocation(line: 48, column: 9, scope: !14337, inlinedAt: !14338)
!14342 = !DILocation(line: 99, column: 2, scope: !14331)
!14343 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2205, file: !2205, line: 106, type: !266, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !397)
!14344 = !DILocation(line: 108, column: 2, scope: !14343)
!14345 = !DILocation(line: 108, column: 17, scope: !14343)
!14346 = !DILocation(line: 108, column: 30, scope: !14343)
!14347 = !DILocation(line: 109, column: 1, scope: !14343)
!14348 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2205, file: !2205, line: 116, type: !266, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !397)
!14349 = !DILocation(line: 118, column: 2, scope: !14348)
!14350 = !DILocation(line: 118, column: 17, scope: !14348)
!14351 = !DILocation(line: 118, column: 30, scope: !14348)
!14352 = !DILocation(line: 119, column: 1, scope: !14348)
!14353 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2205, file: !2205, line: 126, type: !8799, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !397)
!14354 = !DILocation(line: 128, column: 10, scope: !14353)
!14355 = !DILocation(line: 128, column: 25, scope: !14353)
!14356 = !DILocation(line: 128, column: 38, scope: !14353)
!14357 = !DILocation(line: 128, column: 53, scope: !14353)
!14358 = !DILocation(line: 128, column: 2, scope: !14353)
!14359 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2205, file: !2205, line: 187, type: !14360, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14362)
!14360 = !DISubroutineType(types: !14361)
!14361 = !{!105, !2209, !269}
!14362 = !{!14363, !14364}
!14363 = !DILocalVariable(name: "thread", arg: 1, scope: !14359, file: !2205, line: 187, type: !2209)
!14364 = !DILocalVariable(name: "value", arg: 2, scope: !14359, file: !2205, line: 187, type: !269)
!14365 = !DILocation(line: 0, scope: !14359)
!14366 = !DILocation(line: 206, column: 2, scope: !14359)
!14367 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2205, file: !2205, line: 238, type: !14368, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14370)
!14368 = !DISubroutineType(types: !14369)
!14369 = !{!269, !2209}
!14370 = !{!14371}
!14371 = !DILocalVariable(name: "thread", arg: 1, scope: !14367, file: !2205, line: 238, type: !2209)
!14372 = !DILocation(line: 0, scope: !14367)
!14373 = !DILocation(line: 244, column: 2, scope: !14367)
!14374 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2205, file: !2205, line: 248, type: !14375, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14377)
!14375 = !DISubroutineType(types: !14376)
!14376 = !{!105, !2208, !102, !111}
!14377 = !{!14378, !14379, !14380}
!14378 = !DILocalVariable(name: "thread", arg: 1, scope: !14374, file: !2205, line: 248, type: !2208)
!14379 = !DILocalVariable(name: "buf", arg: 2, scope: !14374, file: !2205, line: 248, type: !102)
!14380 = !DILocalVariable(name: "size", arg: 3, scope: !14374, file: !2205, line: 248, type: !111)
!14381 = !DILocation(line: 0, scope: !14374)
!14382 = !DILocation(line: 257, column: 2, scope: !14374)
!14383 = !DILocation(line: 0, scope: !2204)
!14384 = !DILocation(line: 281, column: 11, scope: !14385)
!14385 = distinct !DILexicalBlock(scope: !2204, file: !2205, line: 281, column: 6)
!14386 = !DILocation(line: 281, column: 20, scope: !14385)
!14387 = !DILocation(line: 275, column: 45, scope: !2204)
!14388 = !DILocation(line: 285, column: 10, scope: !2204)
!14389 = !DILocation(line: 0, scope: !2327)
!14390 = !DILocation(line: 293, column: 39, scope: !14391)
!14391 = distinct !DILexicalBlock(scope: !2327, file: !2205, line: 293, column: 2)
!14392 = !DILocation(line: 293, column: 2, scope: !2327)
!14393 = !DILocation(line: 273, column: 14, scope: !2204)
!14394 = !DILocation(line: 309, column: 2, scope: !2204)
!14395 = !DILocation(line: 309, column: 11, scope: !2204)
!14396 = !DILocation(line: 311, column: 2, scope: !2204)
!14397 = !DILocation(line: 293, column: 26, scope: !14391)
!14398 = !DILocation(line: 294, column: 9, scope: !14399)
!14399 = distinct !DILexicalBlock(scope: !14391, file: !2205, line: 293, column: 54)
!14400 = !DILocation(line: 295, column: 21, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14399, file: !2205, line: 295, column: 7)
!14402 = !DILocation(line: 295, column: 28, scope: !14401)
!14403 = !DILocation(line: 295, column: 7, scope: !14399)
!14404 = !DILocation(line: 299, column: 25, scope: !14399)
!14405 = !DILocation(line: 299, column: 41, scope: !14399)
!14406 = !DILocation(line: 300, column: 7, scope: !14399)
!14407 = !DILocation(line: 300, column: 26, scope: !14399)
!14408 = !DILocation(line: 299, column: 10, scope: !14399)
!14409 = !DILocation(line: 299, column: 7, scope: !14399)
!14410 = !DILocation(line: 302, column: 16, scope: !14399)
!14411 = !DILocation(line: 304, column: 20, scope: !14412)
!14412 = distinct !DILexicalBlock(scope: !14399, file: !2205, line: 304, column: 7)
!14413 = !DILocation(line: 304, column: 7, scope: !14399)
!14414 = !DILocation(line: 305, column: 26, scope: !14415)
!14415 = distinct !DILexicalBlock(scope: !14412, file: !2205, line: 304, column: 26)
!14416 = !DILocation(line: 305, column: 42, scope: !14415)
!14417 = !DILocation(line: 305, column: 11, scope: !14415)
!14418 = !DILocation(line: 305, column: 8, scope: !14415)
!14419 = !DILocation(line: 306, column: 3, scope: !14415)
!14420 = !DILocation(line: 293, column: 50, scope: !14391)
!14421 = !DILocation(line: 312, column: 1, scope: !2204)
!14422 = distinct !DISubprogram(name: "copy_bytes", scope: !2205, file: !2205, line: 261, type: !14423, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14425)
!14423 = !DISubroutineType(types: !14424)
!14424 = !{!111, !102, !111, !269, !111}
!14425 = !{!14426, !14427, !14428, !14429, !14430}
!14426 = !DILocalVariable(name: "dest", arg: 1, scope: !14422, file: !2205, line: 261, type: !102)
!14427 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14422, file: !2205, line: 261, type: !111)
!14428 = !DILocalVariable(name: "src", arg: 3, scope: !14422, file: !2205, line: 261, type: !269)
!14429 = !DILocalVariable(name: "src_size", arg: 4, scope: !14422, file: !2205, line: 261, type: !111)
!14430 = !DILocalVariable(name: "bytes_to_copy", scope: !14422, file: !2205, line: 263, type: !111)
!14431 = !DILocation(line: 0, scope: !14422)
!14432 = !DILocation(line: 265, column: 18, scope: !14422)
!14433 = !DILocation(line: 266, column: 2, scope: !14422)
!14434 = !DILocation(line: 268, column: 2, scope: !14422)
!14435 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2205, file: !2205, line: 383, type: !14436, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14438)
!14436 = !DISubroutineType(types: !14437)
!14437 = !{null, !2209}
!14438 = !{!14439}
!14439 = !DILocalVariable(name: "thread", arg: 1, scope: !14435, file: !2205, line: 383, type: !2209)
!14440 = !DILocation(line: 0, scope: !14435)
!14441 = !DILocation(line: 387, column: 2, scope: !14435)
!14442 = !DILocation(line: 388, column: 1, scope: !14435)
!14443 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2205, file: !2205, line: 528, type: !14444, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14451)
!14444 = !DISubroutineType(types: !14445)
!14445 = !{!102, !2209, !14446, !111, !254, !104, !104, !104, !105, !113, !269}
!14446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14447, size: 32)
!14447 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !247, line: 44, baseType: !14448)
!14448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !249, line: 47, size: 8, elements: !14449)
!14449 = !{!14450}
!14450 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14448, file: !249, line: 48, baseType: !103, size: 8)
!14451 = !{!14452, !14453, !14454, !14455, !14456, !14457, !14458, !14459, !14460, !14461, !14462}
!14452 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14443, file: !2205, line: 528, type: !2209)
!14453 = !DILocalVariable(name: "stack", arg: 2, scope: !14443, file: !2205, line: 529, type: !14446)
!14454 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14443, file: !2205, line: 529, type: !111)
!14455 = !DILocalVariable(name: "entry", arg: 4, scope: !14443, file: !2205, line: 530, type: !254)
!14456 = !DILocalVariable(name: "p1", arg: 5, scope: !14443, file: !2205, line: 531, type: !104)
!14457 = !DILocalVariable(name: "p2", arg: 6, scope: !14443, file: !2205, line: 531, type: !104)
!14458 = !DILocalVariable(name: "p3", arg: 7, scope: !14443, file: !2205, line: 531, type: !104)
!14459 = !DILocalVariable(name: "prio", arg: 8, scope: !14443, file: !2205, line: 532, type: !105)
!14460 = !DILocalVariable(name: "options", arg: 9, scope: !14443, file: !2205, line: 532, type: !113)
!14461 = !DILocalVariable(name: "name", arg: 10, scope: !14443, file: !2205, line: 532, type: !269)
!14462 = !DILocalVariable(name: "stack_ptr", scope: !14443, file: !2205, line: 534, type: !102)
!14463 = !DILocation(line: 0, scope: !14443)
!14464 = !DILocation(line: 536, column: 2, scope: !14465)
!14465 = distinct !DILexicalBlock(scope: !14466, file: !2205, line: 536, column: 2)
!14466 = distinct !DILexicalBlock(scope: !14467, file: !2205, line: 536, column: 2)
!14467 = distinct !DILexicalBlock(scope: !14443, file: !2205, line: 536, column: 2)
!14468 = !DILocation(line: 536, column: 2, scope: !14469)
!14469 = distinct !DILexicalBlock(scope: !14465, file: !2205, line: 536, column: 2)
!14470 = !DILocation(line: 550, column: 28, scope: !14443)
!14471 = !DILocation(line: 550, column: 2, scope: !14443)
!14472 = !DILocation(line: 553, column: 34, scope: !14443)
!14473 = !DILocation(line: 553, column: 2, scope: !14443)
!14474 = !DILocation(line: 554, column: 14, scope: !14443)
!14475 = !DILocation(line: 564, column: 2, scope: !14443)
!14476 = !DILocation(line: 567, column: 14, scope: !14443)
!14477 = !DILocation(line: 567, column: 24, scope: !14443)
!14478 = !DILocation(line: 612, column: 7, scope: !14479)
!14479 = distinct !DILexicalBlock(scope: !14443, file: !2205, line: 612, column: 6)
!14480 = !DILocation(line: 612, column: 6, scope: !14443)
!14481 = !DILocation(line: 627, column: 40, scope: !14443)
!14482 = !DILocation(line: 637, column: 2, scope: !14443)
!14483 = !DILocation(line: 613, column: 15, scope: !14484)
!14484 = distinct !DILexicalBlock(scope: !14479, file: !2205, line: 612, column: 17)
!14485 = !DILocation(line: 613, column: 29, scope: !14484)
!14486 = !DILocation(line: 638, column: 1, scope: !14443)
!14487 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !14135, file: !14135, line: 78, type: !14488, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14490)
!14488 = !DISubroutineType(types: !14489)
!14489 = !{!492, !104}
!14490 = !{!14491}
!14491 = !DILocalVariable(name: "entry_point", arg: 1, scope: !14487, file: !14135, line: 78, type: !104)
!14492 = !DILocation(line: 0, scope: !14487)
!14493 = !DILocation(line: 80, column: 21, scope: !14487)
!14494 = !DILocation(line: 80, column: 2, scope: !14487)
!14495 = distinct !DISubprogram(name: "z_waitq_init", scope: !14496, file: !14496, line: 47, type: !14497, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14499)
!14496 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14497 = !DISubroutineType(types: !14498)
!14498 = !{null, !2240}
!14499 = !{!14500}
!14500 = !DILocalVariable(name: "w", arg: 1, scope: !14495, file: !14496, line: 47, type: !2240)
!14501 = !DILocation(line: 0, scope: !14495)
!14502 = !DILocation(line: 49, column: 21, scope: !14495)
!14503 = !DILocation(line: 49, column: 2, scope: !14495)
!14504 = !DILocation(line: 50, column: 1, scope: !14495)
!14505 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2205, file: !2205, line: 791, type: !14506, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14509)
!14506 = !DISubroutineType(types: !14507)
!14507 = !{null, !14508, !105, !113, !32}
!14508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!14509 = !{!14510, !14511, !14512, !14513}
!14510 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14505, file: !2205, line: 791, type: !14508)
!14511 = !DILocalVariable(name: "priority", arg: 2, scope: !14505, file: !2205, line: 791, type: !105)
!14512 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14505, file: !2205, line: 792, type: !113)
!14513 = !DILocalVariable(name: "options", arg: 4, scope: !14505, file: !2205, line: 792, type: !32)
!14514 = !DILocation(line: 0, scope: !14505)
!14515 = !DILocation(line: 795, column: 15, scope: !14505)
!14516 = !DILocation(line: 795, column: 25, scope: !14505)
!14517 = !DILocation(line: 796, column: 30, scope: !14505)
!14518 = !DILocation(line: 796, column: 15, scope: !14505)
!14519 = !DILocation(line: 796, column: 28, scope: !14505)
!14520 = !DILocation(line: 797, column: 30, scope: !14505)
!14521 = !DILocation(line: 797, column: 15, scope: !14505)
!14522 = !DILocation(line: 797, column: 28, scope: !14505)
!14523 = !DILocation(line: 799, column: 22, scope: !14505)
!14524 = !DILocation(line: 799, column: 15, scope: !14505)
!14525 = !DILocation(line: 799, column: 20, scope: !14505)
!14526 = !DILocation(line: 801, column: 15, scope: !14505)
!14527 = !DILocation(line: 801, column: 28, scope: !14505)
!14528 = !DILocation(line: 814, column: 2, scope: !14505)
!14529 = !DILocation(line: 815, column: 1, scope: !14505)
!14530 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2205, file: !2205, line: 449, type: !14531, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14533)
!14531 = !DISubroutineType(types: !14532)
!14532 = !{!102, !2209, !14446, !111}
!14533 = !{!14534, !14535, !14536, !14537, !14538, !14539, !14540, !14541}
!14534 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14530, file: !2205, line: 449, type: !2209)
!14535 = !DILocalVariable(name: "stack", arg: 2, scope: !14530, file: !2205, line: 450, type: !14446)
!14536 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14530, file: !2205, line: 450, type: !111)
!14537 = !DILocalVariable(name: "stack_obj_size", scope: !14530, file: !2205, line: 452, type: !111)
!14538 = !DILocalVariable(name: "stack_buf_size", scope: !14530, file: !2205, line: 452, type: !111)
!14539 = !DILocalVariable(name: "stack_ptr", scope: !14530, file: !2205, line: 453, type: !102)
!14540 = !DILocalVariable(name: "stack_buf_start", scope: !14530, file: !2205, line: 453, type: !102)
!14541 = !DILocalVariable(name: "delta", scope: !14530, file: !2205, line: 454, type: !111)
!14542 = !DILocation(line: 0, scope: !14530)
!14543 = !DILocation(line: 465, column: 20, scope: !14544)
!14544 = distinct !DILexicalBlock(scope: !14530, file: !2205, line: 463, column: 2)
!14545 = !DILocation(line: 466, column: 21, scope: !14544)
!14546 = !DILocation(line: 473, column: 28, scope: !14530)
!14547 = !DILocation(line: 514, column: 33, scope: !14530)
!14548 = !DILocation(line: 514, column: 25, scope: !14530)
!14549 = !DILocation(line: 514, column: 31, scope: !14530)
!14550 = !DILocation(line: 515, column: 25, scope: !14530)
!14551 = !DILocation(line: 515, column: 30, scope: !14530)
!14552 = !DILocation(line: 516, column: 25, scope: !14530)
!14553 = !DILocation(line: 516, column: 31, scope: !14530)
!14554 = !DILocation(line: 520, column: 2, scope: !14530)
!14555 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !249, file: !249, line: 331, type: !14556, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14558)
!14556 = !DISubroutineType(types: !14557)
!14557 = !{!102, !14446}
!14558 = !{!14559}
!14559 = !DILocalVariable(name: "sym", arg: 1, scope: !14555, file: !249, line: 331, type: !14446)
!14560 = !DILocation(line: 0, scope: !14555)
!14561 = !DILocation(line: 333, column: 21, scope: !14555)
!14562 = !DILocation(line: 333, column: 2, scope: !14555)
!14563 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14564, file: !14564, line: 40, type: !14565, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14567)
!14564 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14565 = !DISubroutineType(types: !14566)
!14566 = !{null, !14508}
!14567 = !{!14568}
!14568 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14563, file: !14564, line: 40, type: !14508)
!14569 = !DILocation(line: 0, scope: !14563)
!14570 = !DILocation(line: 42, column: 31, scope: !14563)
!14571 = !DILocation(line: 42, column: 2, scope: !14563)
!14572 = !DILocation(line: 43, column: 1, scope: !14563)
!14573 = distinct !DISubprogram(name: "z_init_timeout", scope: !14564, file: !14564, line: 25, type: !2266, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14574)
!14574 = !{!14575}
!14575 = !DILocalVariable(name: "to", arg: 1, scope: !14573, file: !14564, line: 25, type: !2268)
!14576 = !DILocation(line: 0, scope: !14573)
!14577 = !DILocation(line: 27, column: 22, scope: !14573)
!14578 = !DILocation(line: 27, column: 2, scope: !14573)
!14579 = !DILocation(line: 28, column: 1, scope: !14573)
!14580 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !14581, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14583)
!14581 = !DISubroutineType(types: !14582)
!14582 = !{null, !2314}
!14583 = !{!14584}
!14584 = !DILocalVariable(name: "node", arg: 1, scope: !14580, file: !137, line: 211, type: !2314)
!14585 = !DILocation(line: 0, scope: !14580)
!14586 = !DILocation(line: 213, column: 8, scope: !14580)
!14587 = !DILocation(line: 213, column: 13, scope: !14580)
!14588 = !DILocation(line: 214, column: 8, scope: !14580)
!14589 = !DILocation(line: 214, column: 13, scope: !14580)
!14590 = !DILocation(line: 215, column: 1, scope: !14580)
!14591 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !14592, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14595)
!14592 = !DISubroutineType(types: !14593)
!14593 = !{null, !14594}
!14594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 32)
!14595 = !{!14596}
!14596 = !DILocalVariable(name: "list", arg: 1, scope: !14591, file: !137, line: 197, type: !14594)
!14597 = !DILocation(line: 0, scope: !14591)
!14598 = !DILocation(line: 199, column: 8, scope: !14591)
!14599 = !DILocation(line: 199, column: 13, scope: !14591)
!14600 = !DILocation(line: 200, column: 8, scope: !14591)
!14601 = !DILocation(line: 200, column: 13, scope: !14591)
!14602 = !DILocation(line: 201, column: 1, scope: !14591)
!14603 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2205, file: !2205, line: 641, type: !14604, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14610)
!14604 = !DISubroutineType(types: !14605)
!14605 = !{!2208, !2209, !14446, !111, !254, !104, !104, !104, !105, !113, !14606}
!14606 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !14607)
!14607 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !14608)
!14608 = !{!14609}
!14609 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14607, file: !108, line: 66, baseType: !107, size: 64)
!14610 = !{!14611, !14612, !14613, !14614, !14615, !14616, !14617, !14618, !14619, !14620}
!14611 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14603, file: !2205, line: 641, type: !2209)
!14612 = !DILocalVariable(name: "stack", arg: 2, scope: !14603, file: !2205, line: 642, type: !14446)
!14613 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14603, file: !2205, line: 643, type: !111)
!14614 = !DILocalVariable(name: "entry", arg: 4, scope: !14603, file: !2205, line: 643, type: !254)
!14615 = !DILocalVariable(name: "p1", arg: 5, scope: !14603, file: !2205, line: 644, type: !104)
!14616 = !DILocalVariable(name: "p2", arg: 6, scope: !14603, file: !2205, line: 644, type: !104)
!14617 = !DILocalVariable(name: "p3", arg: 7, scope: !14603, file: !2205, line: 644, type: !104)
!14618 = !DILocalVariable(name: "prio", arg: 8, scope: !14603, file: !2205, line: 645, type: !105)
!14619 = !DILocalVariable(name: "options", arg: 9, scope: !14603, file: !2205, line: 645, type: !113)
!14620 = !DILocalVariable(name: "delay", arg: 10, scope: !14603, file: !2205, line: 645, type: !14606)
!14621 = !DILocation(line: 0, scope: !14603)
!14622 = !DILocation(line: 1031, column: 3, scope: !14333, inlinedAt: !14623)
!14623 = distinct !DILocation(line: 48, column: 10, scope: !14337, inlinedAt: !14624)
!14624 = distinct !DILocation(line: 647, column: 2, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14626, file: !2205, line: 647, column: 2)
!14626 = distinct !DILexicalBlock(scope: !14603, file: !2205, line: 647, column: 2)
!14627 = !DILocation(line: 0, scope: !14333, inlinedAt: !14623)
!14628 = !DILocation(line: 48, column: 9, scope: !14337, inlinedAt: !14624)
!14629 = !DILocation(line: 647, column: 2, scope: !14626)
!14630 = !DILocation(line: 647, column: 2, scope: !14631)
!14631 = distinct !DILexicalBlock(scope: !14625, file: !2205, line: 647, column: 2)
!14632 = !DILocation(line: 649, column: 2, scope: !14603)
!14633 = !DILocation(line: 652, column: 7, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !14603, file: !2205, line: 652, column: 6)
!14635 = !DILocation(line: 652, column: 6, scope: !14603)
!14636 = !DILocation(line: 653, column: 3, scope: !14637)
!14637 = distinct !DILexicalBlock(scope: !14634, file: !2205, line: 652, column: 39)
!14638 = !DILocation(line: 654, column: 2, scope: !14637)
!14639 = !DILocation(line: 656, column: 2, scope: !14603)
!14640 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2205, file: !2205, line: 401, type: !14641, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14643)
!14641 = !DISubroutineType(types: !14642)
!14642 = !{null, !2209, !14606}
!14643 = !{!14644, !14645}
!14644 = !DILocalVariable(name: "thread", arg: 1, scope: !14640, file: !2205, line: 401, type: !2209)
!14645 = !DILocalVariable(name: "delay", arg: 2, scope: !14640, file: !2205, line: 401, type: !14606)
!14646 = !DILocation(line: 0, scope: !14640)
!14647 = !DILocation(line: 404, column: 6, scope: !14648)
!14648 = distinct !DILexicalBlock(scope: !14640, file: !2205, line: 404, column: 6)
!14649 = !DILocation(line: 404, column: 6, scope: !14640)
!14650 = !DILocation(line: 405, column: 3, scope: !14651)
!14651 = distinct !DILexicalBlock(scope: !14648, file: !2205, line: 404, column: 38)
!14652 = !DILocation(line: 406, column: 2, scope: !14651)
!14653 = !DILocation(line: 407, column: 3, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !14648, file: !2205, line: 406, column: 9)
!14655 = !DILocation(line: 413, column: 1, scope: !14640)
!14656 = distinct !DISubprogram(name: "k_thread_start", scope: !3414, file: !3414, line: 205, type: !14657, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14659)
!14657 = !DISubroutineType(types: !14658)
!14658 = !{null, !2208}
!14659 = !{!14660}
!14660 = !DILocalVariable(name: "thread", arg: 1, scope: !14656, file: !3414, line: 205, type: !2208)
!14661 = !DILocation(line: 0, scope: !14656)
!14662 = !DILocation(line: 214, column: 2, scope: !14663)
!14663 = distinct !DILexicalBlock(scope: !14656, file: !3414, line: 214, column: 2)
!14664 = !{i64 2154098320}
!14665 = !DILocation(line: 215, column: 2, scope: !14656)
!14666 = !DILocation(line: 216, column: 1, scope: !14656)
!14667 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14564, file: !14564, line: 47, type: !14641, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14668)
!14668 = !{!14669, !14670}
!14669 = !DILocalVariable(name: "thread", arg: 1, scope: !14667, file: !14564, line: 47, type: !2209)
!14670 = !DILocalVariable(name: "ticks", arg: 2, scope: !14667, file: !14564, line: 47, type: !14606)
!14671 = !DILocation(line: 0, scope: !14667)
!14672 = !DILocation(line: 49, column: 30, scope: !14667)
!14673 = !DILocation(line: 49, column: 2, scope: !14667)
!14674 = !DILocation(line: 50, column: 1, scope: !14667)
!14675 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2205, file: !2205, line: 748, type: !266, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14676)
!14676 = !{!14677, !14694}
!14677 = !DILocalVariable(name: "thread_data", scope: !14678, file: !2205, line: 750, type: !14679)
!14678 = distinct !DILexicalBlock(scope: !14675, file: !2205, line: 750, column: 2)
!14679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14680, size: 32)
!14680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !122, line: 620, size: 384, elements: !14681)
!14681 = !{!14682, !14683, !14684, !14685, !14686, !14687, !14688, !14689, !14690, !14691, !14692, !14693}
!14682 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14680, file: !122, line: 621, baseType: !2209, size: 32)
!14683 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14680, file: !122, line: 622, baseType: !14446, size: 32, offset: 32)
!14684 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14680, file: !122, line: 623, baseType: !32, size: 32, offset: 64)
!14685 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14680, file: !122, line: 624, baseType: !254, size: 32, offset: 96)
!14686 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14680, file: !122, line: 625, baseType: !104, size: 32, offset: 128)
!14687 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14680, file: !122, line: 626, baseType: !104, size: 32, offset: 160)
!14688 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14680, file: !122, line: 627, baseType: !104, size: 32, offset: 192)
!14689 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14680, file: !122, line: 628, baseType: !105, size: 32, offset: 224)
!14690 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14680, file: !122, line: 629, baseType: !113, size: 32, offset: 256)
!14691 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14680, file: !122, line: 630, baseType: !116, size: 32, offset: 288)
!14692 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14680, file: !122, line: 631, baseType: !265, size: 32, offset: 320)
!14693 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14680, file: !122, line: 632, baseType: !269, size: 32, offset: 352)
!14694 = !DILocalVariable(name: "thread_data", scope: !14695, file: !2205, line: 781, type: !14679)
!14695 = distinct !DILexicalBlock(scope: !14675, file: !2205, line: 781, column: 2)
!14696 = !DILocation(line: 0, scope: !14678)
!14697 = !DILocation(line: 750, column: 2, scope: !14698)
!14698 = distinct !DILexicalBlock(scope: !14699, file: !2205, line: 750, column: 2)
!14699 = distinct !DILexicalBlock(scope: !14700, file: !2205, line: 750, column: 2)
!14700 = distinct !DILexicalBlock(scope: !14678, file: !2205, line: 750, column: 2)
!14701 = !DILocation(line: 750, column: 2, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14703, file: !2205, line: 750, column: 2)
!14703 = distinct !DILexicalBlock(scope: !14698, file: !2205, line: 750, column: 2)
!14704 = !DILocation(line: 750, column: 2, scope: !14699)
!14705 = !DILocation(line: 750, column: 2, scope: !14678)
!14706 = !DILocation(line: 780, column: 2, scope: !14675)
!14707 = !DILocation(line: 0, scope: !14695)
!14708 = !DILocation(line: 781, column: 2, scope: !14709)
!14709 = distinct !DILexicalBlock(scope: !14710, file: !2205, line: 781, column: 2)
!14710 = distinct !DILexicalBlock(scope: !14711, file: !2205, line: 781, column: 2)
!14711 = distinct !DILexicalBlock(scope: !14695, file: !2205, line: 781, column: 2)
!14712 = !DILocation(line: 752, column: 17, scope: !14713)
!14713 = distinct !DILexicalBlock(scope: !14700, file: !2205, line: 750, column: 38)
!14714 = !DILocation(line: 753, column: 17, scope: !14713)
!14715 = !DILocation(line: 754, column: 17, scope: !14713)
!14716 = !DILocation(line: 755, column: 17, scope: !14713)
!14717 = !DILocation(line: 756, column: 17, scope: !14713)
!14718 = !DILocation(line: 757, column: 17, scope: !14713)
!14719 = !DILocation(line: 758, column: 17, scope: !14713)
!14720 = !DILocation(line: 759, column: 17, scope: !14713)
!14721 = !DILocation(line: 760, column: 17, scope: !14713)
!14722 = !DILocation(line: 751, column: 3, scope: !14713)
!14723 = !DILocation(line: 763, column: 16, scope: !14713)
!14724 = !DILocation(line: 763, column: 29, scope: !14713)
!14725 = !DILocation(line: 763, column: 39, scope: !14713)
!14726 = !DILocation(line: 750, column: 2, scope: !14700)
!14727 = !DILocation(line: 750, column: 2, scope: !14703)
!14728 = distinct !{!14728, !14705, !14729}
!14729 = !DILocation(line: 764, column: 2, scope: !14678)
!14730 = !DILocation(line: 781, column: 2, scope: !14731)
!14731 = distinct !DILexicalBlock(scope: !14732, file: !2205, line: 781, column: 2)
!14732 = distinct !DILexicalBlock(scope: !14709, file: !2205, line: 781, column: 2)
!14733 = !DILocation(line: 781, column: 2, scope: !14710)
!14734 = !DILocation(line: 781, column: 2, scope: !14695)
!14735 = !DILocation(line: 787, column: 2, scope: !14675)
!14736 = !DILocation(line: 788, column: 1, scope: !14675)
!14737 = !DILocation(line: 782, column: 20, scope: !14738)
!14738 = distinct !DILexicalBlock(scope: !14739, file: !2205, line: 782, column: 7)
!14739 = distinct !DILexicalBlock(scope: !14711, file: !2205, line: 781, column: 38)
!14740 = !DILocation(line: 782, column: 31, scope: !14738)
!14741 = !DILocation(line: 782, column: 7, scope: !14739)
!14742 = !DILocation(line: 783, column: 37, scope: !14743)
!14743 = distinct !DILexicalBlock(scope: !14738, file: !2205, line: 782, column: 51)
!14744 = !DILocation(line: 784, column: 10, scope: !14743)
!14745 = !DILocation(line: 783, column: 4, scope: !14743)
!14746 = !DILocation(line: 785, column: 3, scope: !14743)
!14747 = !DILocation(line: 781, column: 2, scope: !14711)
!14748 = !DILocation(line: 781, column: 2, scope: !14732)
!14749 = distinct !{!14749, !14734, !14750}
!14750 = !DILocation(line: 786, column: 2, scope: !14695)
!14751 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !14752, file: !14752, line: 403, type: !14753, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14755)
!14752 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14753 = !DISubroutineType(types: !14754)
!14754 = !{!114, !114}
!14755 = !{!14756}
!14756 = !DILocalVariable(name: "t", arg: 1, scope: !14751, file: !14752, line: 403, type: !114)
!14757 = !DILocation(line: 0, scope: !14751)
!14758 = !DILocalVariable(name: "t", arg: 1, scope: !14759, file: !14752, line: 102, type: !114)
!14759 = distinct !DISubprogram(name: "z_tmcvt", scope: !14752, file: !14752, line: 102, type: !14760, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14762)
!14760 = !DISubroutineType(types: !14761)
!14761 = !{!114, !114, !113, !113, !492, !492, !492, !492}
!14762 = !{!14758, !14763, !14764, !14765, !14766, !14767, !14768, !14769, !14770, !14771, !14772}
!14763 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14759, file: !14752, line: 102, type: !113)
!14764 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14759, file: !14752, line: 103, type: !113)
!14765 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14759, file: !14752, line: 103, type: !492)
!14766 = !DILocalVariable(name: "result32", arg: 5, scope: !14759, file: !14752, line: 104, type: !492)
!14767 = !DILocalVariable(name: "round_up", arg: 6, scope: !14759, file: !14752, line: 104, type: !492)
!14768 = !DILocalVariable(name: "round_off", arg: 7, scope: !14759, file: !14752, line: 105, type: !492)
!14769 = !DILocalVariable(name: "mul_ratio", scope: !14759, file: !14752, line: 107, type: !492)
!14770 = !DILocalVariable(name: "div_ratio", scope: !14759, file: !14752, line: 109, type: !492)
!14771 = !DILocalVariable(name: "off", scope: !14759, file: !14752, line: 116, type: !114)
!14772 = !DILocalVariable(name: "rdivisor", scope: !14773, file: !14752, line: 119, type: !113)
!14773 = distinct !DILexicalBlock(scope: !14774, file: !14752, line: 118, column: 18)
!14774 = distinct !DILexicalBlock(scope: !14759, file: !14752, line: 118, column: 6)
!14775 = !DILocation(line: 0, scope: !14759, inlinedAt: !14776)
!14776 = distinct !DILocation(line: 406, column: 9, scope: !14751)
!14777 = !DILocation(line: 145, column: 13, scope: !14778, inlinedAt: !14776)
!14778 = distinct !DILexicalBlock(scope: !14779, file: !14752, line: 144, column: 10)
!14779 = distinct !DILexicalBlock(scope: !14780, file: !14752, line: 142, column: 7)
!14780 = distinct !DILexicalBlock(scope: !14781, file: !14752, line: 141, column: 24)
!14781 = distinct !DILexicalBlock(scope: !14782, file: !14752, line: 141, column: 13)
!14782 = distinct !DILexicalBlock(scope: !14759, file: !14752, line: 134, column: 6)
!14783 = !DILocation(line: 406, column: 2, scope: !14751)
!14784 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2205, file: !2205, line: 817, type: !5056, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14785)
!14785 = !{!14786, !14787, !14788, !14789}
!14786 = !DILocalVariable(name: "entry", arg: 1, scope: !14784, file: !2205, line: 817, type: !254)
!14787 = !DILocalVariable(name: "p1", arg: 2, scope: !14784, file: !2205, line: 818, type: !104)
!14788 = !DILocalVariable(name: "p2", arg: 3, scope: !14784, file: !2205, line: 818, type: !104)
!14789 = !DILocalVariable(name: "p3", arg: 4, scope: !14784, file: !2205, line: 818, type: !104)
!14790 = !DILocation(line: 0, scope: !14784)
!14791 = !DILocation(line: 822, column: 2, scope: !14784)
!14792 = !DILocation(line: 822, column: 17, scope: !14784)
!14793 = !DILocation(line: 822, column: 30, scope: !14784)
!14794 = !DILocation(line: 823, column: 2, scope: !14784)
!14795 = !DILocation(line: 845, column: 2, scope: !14784)
!14796 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2205, file: !2205, line: 853, type: !14797, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14800)
!14797 = !DISubroutineType(types: !14798)
!14798 = !{!492, !14799}
!14799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 32)
!14800 = !{!14801, !14802}
!14801 = !DILocalVariable(name: "l", arg: 1, scope: !14796, file: !2205, line: 853, type: !14799)
!14802 = !DILocalVariable(name: "thread_cpu", scope: !14796, file: !2205, line: 855, type: !22)
!14803 = !DILocation(line: 0, scope: !14796)
!14804 = !DILocation(line: 855, column: 28, scope: !14796)
!14805 = !DILocation(line: 857, column: 17, scope: !14806)
!14806 = distinct !DILexicalBlock(scope: !14796, file: !2205, line: 857, column: 6)
!14807 = !DILocation(line: 857, column: 6, scope: !14796)
!14808 = !DILocation(line: 858, column: 19, scope: !14809)
!14809 = distinct !DILexicalBlock(scope: !14810, file: !2205, line: 858, column: 7)
!14810 = distinct !DILexicalBlock(scope: !14806, file: !2205, line: 857, column: 24)
!14811 = !DILocation(line: 858, column: 42, scope: !14809)
!14812 = !DILocation(line: 858, column: 28, scope: !14809)
!14813 = !DILocation(line: 858, column: 25, scope: !14809)
!14814 = !DILocation(line: 858, column: 7, scope: !14810)
!14815 = !DILocation(line: 862, column: 2, scope: !14796)
!14816 = !DILocation(line: 863, column: 1, scope: !14796)
!14817 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2205, file: !2205, line: 865, type: !14797, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14818)
!14818 = !{!14819}
!14819 = !DILocalVariable(name: "l", arg: 1, scope: !14817, file: !2205, line: 865, type: !14799)
!14820 = !DILocation(line: 0, scope: !14817)
!14821 = !DILocation(line: 867, column: 9, scope: !14822)
!14822 = distinct !DILexicalBlock(scope: !14817, file: !2205, line: 867, column: 6)
!14823 = !DILocation(line: 867, column: 38, scope: !14822)
!14824 = !DILocation(line: 867, column: 24, scope: !14822)
!14825 = !DILocation(line: 867, column: 54, scope: !14822)
!14826 = !DILocation(line: 867, column: 43, scope: !14822)
!14827 = !DILocation(line: 867, column: 41, scope: !14822)
!14828 = !DILocation(line: 867, column: 20, scope: !14822)
!14829 = !DILocation(line: 867, column: 6, scope: !14817)
!14830 = !DILocation(line: 870, column: 16, scope: !14817)
!14831 = !DILocation(line: 871, column: 2, scope: !14817)
!14832 = !DILocation(line: 872, column: 1, scope: !14817)
!14833 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2205, file: !2205, line: 874, type: !14834, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14836)
!14834 = !DISubroutineType(types: !14835)
!14835 = !{null, !14799}
!14836 = !{!14837}
!14837 = !DILocalVariable(name: "l", arg: 1, scope: !14833, file: !2205, line: 874, type: !14799)
!14838 = !DILocation(line: 0, scope: !14833)
!14839 = !DILocation(line: 876, column: 32, scope: !14833)
!14840 = !DILocation(line: 876, column: 18, scope: !14833)
!14841 = !DILocation(line: 876, column: 48, scope: !14833)
!14842 = !DILocation(line: 876, column: 37, scope: !14833)
!14843 = !DILocation(line: 876, column: 35, scope: !14833)
!14844 = !DILocation(line: 876, column: 5, scope: !14833)
!14845 = !DILocation(line: 876, column: 16, scope: !14833)
!14846 = !DILocation(line: 877, column: 1, scope: !14833)
!14847 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2205, file: !2205, line: 888, type: !14848, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14850)
!14848 = !DISubroutineType(types: !14849)
!14849 = !{!105, !2209}
!14850 = !{!14851}
!14851 = !DILocalVariable(name: "thread", arg: 1, scope: !14847, file: !2205, line: 888, type: !2209)
!14852 = !DILocation(line: 0, scope: !14847)
!14853 = !DILocation(line: 893, column: 2, scope: !14847)
!14854 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2205, file: !2205, line: 897, type: !14855, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14857)
!14855 = !DISubroutineType(types: !14856)
!14856 = !{!105, !2209, !32}
!14857 = !{!14858, !14859}
!14858 = !DILocalVariable(name: "thread", arg: 1, scope: !14854, file: !2205, line: 897, type: !2209)
!14859 = !DILocalVariable(name: "options", arg: 2, scope: !14854, file: !2205, line: 897, type: !32)
!14860 = !DILocation(line: 0, scope: !14854)
!14861 = !DILocation(line: 902, column: 2, scope: !14854)
!14862 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2205, file: !2205, line: 1072, type: !14863, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14868)
!14863 = !DISubroutineType(types: !14864)
!14864 = !{!105, !2208, !14865}
!14865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14866, size: 32)
!14866 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !127, line: 234, baseType: !14867)
!14867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !127, line: 192, elements: !397)
!14868 = !{!14869, !14870}
!14869 = !DILocalVariable(name: "thread", arg: 1, scope: !14862, file: !2205, line: 1072, type: !2208)
!14870 = !DILocalVariable(name: "stats", arg: 2, scope: !14862, file: !2205, line: 1073, type: !14865)
!14871 = !DILocation(line: 0, scope: !14862)
!14872 = !DILocation(line: 1075, column: 14, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14862, file: !2205, line: 1075, column: 6)
!14874 = !DILocation(line: 1075, column: 23, scope: !14873)
!14875 = !DILocation(line: 1086, column: 1, scope: !14862)
!14876 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2205, file: !2205, line: 1088, type: !14877, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2311, retainedNodes: !14879)
!14877 = !DISubroutineType(types: !14878)
!14878 = !{!105, !14865}
!14879 = !{!14880}
!14880 = !DILocalVariable(name: "stats", arg: 1, scope: !14876, file: !2205, line: 1088, type: !14865)
!14881 = !DILocation(line: 0, scope: !14876)
!14882 = !DILocation(line: 1094, column: 12, scope: !14883)
!14883 = distinct !DILexicalBlock(scope: !14876, file: !2205, line: 1094, column: 6)
!14884 = !DILocation(line: 1120, column: 1, scope: !14876)
!14885 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14886, file: !14886, line: 20, type: !266, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3143, retainedNodes: !397)
!14886 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14887 = !DILocation(line: 30, column: 2, scope: !14885)
!14888 = !DILocation(line: 31, column: 1, scope: !14885)
!14889 = distinct !DISubprogram(name: "idle", scope: !14886, file: !14886, line: 33, type: !256, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3143, retainedNodes: !14890)
!14890 = !{!14891, !14892, !14893}
!14891 = !DILocalVariable(name: "unused1", arg: 1, scope: !14889, file: !14886, line: 33, type: !104)
!14892 = !DILocalVariable(name: "unused2", arg: 2, scope: !14889, file: !14886, line: 33, type: !104)
!14893 = !DILocalVariable(name: "unused3", arg: 3, scope: !14889, file: !14886, line: 33, type: !104)
!14894 = !DILocation(line: 0, scope: !14889)
!14895 = !DILocation(line: 39, column: 2, scope: !14896)
!14896 = distinct !DILexicalBlock(scope: !14897, file: !14886, line: 39, column: 2)
!14897 = distinct !DILexicalBlock(scope: !14889, file: !14886, line: 39, column: 2)
!14898 = !DILocation(line: 39, column: 2, scope: !14897)
!14899 = !DILocation(line: 39, column: 2, scope: !14900)
!14900 = distinct !DILexicalBlock(scope: !14896, file: !14886, line: 39, column: 2)
!14901 = !DILocation(line: 55, column: 2, scope: !14902, inlinedAt: !14906)
!14902 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7433, file: !7433, line: 42, type: !7434, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3143, retainedNodes: !14903)
!14903 = !{!14904, !14905}
!14904 = !DILocalVariable(name: "key", scope: !14902, file: !7433, line: 44, type: !32)
!14905 = !DILocalVariable(name: "tmp", scope: !14902, file: !7433, line: 53, type: !32)
!14906 = distinct !DILocation(line: 62, column: 10, scope: !14907)
!14907 = distinct !DILexicalBlock(scope: !14889, file: !14886, line: 41, column: 15)
!14908 = !{i64 1951808}
!14909 = !DILocation(line: 0, scope: !14902, inlinedAt: !14906)
!14910 = !DILocation(line: 86, column: 3, scope: !14907)
!14911 = !DILocation(line: 41, column: 2, scope: !14889)
!14912 = distinct !{!14912, !14911, !14913}
!14913 = !DILocation(line: 105, column: 2, scope: !14889)
!14914 = distinct !DISubprogram(name: "k_cpu_idle", scope: !122, file: !122, line: 5627, type: !266, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3143, retainedNodes: !397)
!14915 = !DILocation(line: 5629, column: 2, scope: !14914)
!14916 = !DILocation(line: 5630, column: 1, scope: !14914)
!14917 = !DISubprogram(name: "arch_cpu_idle", scope: !247, file: !247, line: 167, type: !266, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!14918 = distinct !DISubprogram(name: "k_msgq_init", scope: !14919, file: !14919, line: 35, type: !14920, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !14935)
!14919 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14920 = !DISubroutineType(types: !14921)
!14921 = !{null, !14922, !102, !111, !113}
!14922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14923, size: 32)
!14923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !14924)
!14924 = !{!14925, !14926, !14927, !14928, !14929, !14930, !14931, !14932, !14933, !14934}
!14925 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14923, file: !122, line: 4206, baseType: !3181, size: 64)
!14926 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14923, file: !122, line: 4208, baseType: !3243, size: 32, offset: 64)
!14927 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !14923, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!14928 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !14923, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!14929 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !14923, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!14930 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !14923, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!14931 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !14923, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!14932 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !14923, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!14933 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !14923, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!14934 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14923, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!14935 = !{!14936, !14937, !14938, !14939}
!14936 = !DILocalVariable(name: "msgq", arg: 1, scope: !14918, file: !14919, line: 35, type: !14922)
!14937 = !DILocalVariable(name: "buffer", arg: 2, scope: !14918, file: !14919, line: 35, type: !102)
!14938 = !DILocalVariable(name: "msg_size", arg: 3, scope: !14918, file: !14919, line: 35, type: !111)
!14939 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !14918, file: !14919, line: 36, type: !113)
!14940 = !DILocation(line: 0, scope: !14918)
!14941 = !DILocation(line: 38, column: 8, scope: !14918)
!14942 = !DILocation(line: 38, column: 17, scope: !14918)
!14943 = !DILocation(line: 39, column: 8, scope: !14918)
!14944 = !DILocation(line: 39, column: 17, scope: !14918)
!14945 = !DILocation(line: 40, column: 8, scope: !14918)
!14946 = !DILocation(line: 40, column: 21, scope: !14918)
!14947 = !DILocation(line: 41, column: 40, scope: !14918)
!14948 = !DILocation(line: 41, column: 28, scope: !14918)
!14949 = !DILocation(line: 41, column: 8, scope: !14918)
!14950 = !DILocation(line: 41, column: 19, scope: !14918)
!14951 = !DILocation(line: 42, column: 8, scope: !14918)
!14952 = !DILocation(line: 42, column: 17, scope: !14918)
!14953 = !DILocation(line: 43, column: 8, scope: !14918)
!14954 = !DILocation(line: 43, column: 18, scope: !14918)
!14955 = !DILocation(line: 44, column: 8, scope: !14918)
!14956 = !DILocation(line: 44, column: 18, scope: !14918)
!14957 = !DILocation(line: 45, column: 8, scope: !14918)
!14958 = !DILocation(line: 45, column: 14, scope: !14918)
!14959 = !DILocation(line: 46, column: 22, scope: !14918)
!14960 = !DILocation(line: 46, column: 2, scope: !14918)
!14961 = !DILocation(line: 47, column: 15, scope: !14918)
!14962 = !DILocation(line: 55, column: 1, scope: !14918)
!14963 = distinct !DISubprogram(name: "z_waitq_init", scope: !14496, file: !14496, line: 47, type: !14964, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !14966)
!14964 = !DISubroutineType(types: !14965)
!14965 = !{null, !3180}
!14966 = !{!14967}
!14967 = !DILocalVariable(name: "w", arg: 1, scope: !14963, file: !14496, line: 47, type: !3180)
!14968 = !DILocation(line: 0, scope: !14963)
!14969 = !DILocation(line: 49, column: 21, scope: !14963)
!14970 = !DILocation(line: 49, column: 2, scope: !14963)
!14971 = !DILocation(line: 50, column: 1, scope: !14963)
!14972 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !14973, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !14976)
!14973 = !DISubroutineType(types: !14974)
!14974 = !{null, !14975}
!14975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3185, size: 32)
!14976 = !{!14977}
!14977 = !DILocalVariable(name: "list", arg: 1, scope: !14972, file: !137, line: 197, type: !14975)
!14978 = !DILocation(line: 0, scope: !14972)
!14979 = !DILocation(line: 199, column: 8, scope: !14972)
!14980 = !DILocation(line: 199, column: 13, scope: !14972)
!14981 = !DILocation(line: 200, column: 8, scope: !14972)
!14982 = !DILocation(line: 200, column: 13, scope: !14972)
!14983 = !DILocation(line: 201, column: 1, scope: !14972)
!14984 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !14919, file: !14919, line: 57, type: !14985, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !14987)
!14985 = !DISubroutineType(types: !14986)
!14986 = !{!105, !14922, !111, !113}
!14987 = !{!14988, !14989, !14990, !14991, !14992, !14993}
!14988 = !DILocalVariable(name: "msgq", arg: 1, scope: !14984, file: !14919, line: 57, type: !14922)
!14989 = !DILocalVariable(name: "msg_size", arg: 2, scope: !14984, file: !14919, line: 57, type: !111)
!14990 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !14984, file: !14919, line: 58, type: !113)
!14991 = !DILocalVariable(name: "buffer", scope: !14984, file: !14919, line: 60, type: !104)
!14992 = !DILocalVariable(name: "ret", scope: !14984, file: !14919, line: 61, type: !105)
!14993 = !DILocalVariable(name: "total_size", scope: !14984, file: !14919, line: 62, type: !111)
!14994 = !DILocation(line: 0, scope: !14984)
!14995 = !DILocation(line: 62, column: 2, scope: !14984)
!14996 = !DILocation(line: 66, column: 6, scope: !14997)
!14997 = distinct !DILexicalBlock(scope: !14984, file: !14919, line: 66, column: 6)
!14998 = !DILocation(line: 66, column: 6, scope: !14984)
!14999 = !DILocation(line: 69, column: 28, scope: !15000)
!15000 = distinct !DILexicalBlock(scope: !14997, file: !14919, line: 68, column: 9)
!15001 = !DILocation(line: 69, column: 12, scope: !15000)
!15002 = !DILocation(line: 70, column: 14, scope: !15003)
!15003 = distinct !DILexicalBlock(scope: !15000, file: !14919, line: 70, column: 7)
!15004 = !DILocation(line: 70, column: 7, scope: !15000)
!15005 = !DILocation(line: 71, column: 4, scope: !15006)
!15006 = distinct !DILexicalBlock(scope: !15003, file: !14919, line: 70, column: 23)
!15007 = !DILocation(line: 72, column: 10, scope: !15006)
!15008 = !DILocation(line: 72, column: 16, scope: !15006)
!15009 = !DILocation(line: 74, column: 3, scope: !15006)
!15010 = !DILocation(line: 0, scope: !14997)
!15011 = !DILocation(line: 82, column: 1, scope: !14984)
!15012 = !DILocation(line: 81, column: 2, scope: !14984)
!15013 = distinct !DISubprogram(name: "size_mul_overflow", scope: !15014, file: !15014, line: 105, type: !15015, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !15017)
!15014 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15015 = !DISubroutineType(types: !15016)
!15016 = !{!492, !111, !111, !2613}
!15017 = !{!15018, !15019, !15020}
!15018 = !DILocalVariable(name: "a", arg: 1, scope: !15013, file: !15014, line: 105, type: !111)
!15019 = !DILocalVariable(name: "b", arg: 2, scope: !15013, file: !15014, line: 105, type: !111)
!15020 = !DILocalVariable(name: "result", arg: 3, scope: !15013, file: !15014, line: 105, type: !2613)
!15021 = !DILocation(line: 0, scope: !15013)
!15022 = !DILocation(line: 107, column: 9, scope: !15013)
!15023 = !DILocation(line: 107, column: 2, scope: !15013)
!15024 = distinct !DISubprogram(name: "z_thread_malloc", scope: !15025, file: !15025, line: 102, type: !15026, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !15027)
!15025 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15026 = !DISubroutineType(types: !3124)
!15027 = !{!15028}
!15028 = !DILocalVariable(name: "size", arg: 1, scope: !15024, file: !15025, line: 102, type: !111)
!15029 = !DILocation(line: 0, scope: !15024)
!15030 = !DILocation(line: 104, column: 9, scope: !15024)
!15031 = !DILocation(line: 104, column: 2, scope: !15024)
!15032 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !15025, file: !15025, line: 87, type: !15033, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!15033 = !DISubroutineType(types: !15034)
!15034 = !{!104, !111, !111}
!15035 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !14919, file: !14919, line: 95, type: !15036, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !15038)
!15036 = !DISubroutineType(types: !15037)
!15037 = !{!105, !14922}
!15038 = !{!15039}
!15039 = !DILocalVariable(name: "msgq", arg: 1, scope: !15035, file: !14919, line: 95, type: !14922)
!15040 = !DILocation(line: 0, scope: !15035)
!15041 = !DILocation(line: 99, column: 2, scope: !15042)
!15042 = distinct !DILexicalBlock(scope: !15035, file: !14919, line: 99, column: 2)
!15043 = !DILocation(line: 99, column: 2, scope: !15035)
!15044 = !DILocation(line: 105, column: 13, scope: !15045)
!15045 = distinct !DILexicalBlock(scope: !15035, file: !14919, line: 105, column: 6)
!15046 = !DILocation(line: 105, column: 19, scope: !15045)
!15047 = !DILocation(line: 105, column: 40, scope: !15045)
!15048 = !DILocation(line: 105, column: 6, scope: !15035)
!15049 = !DILocation(line: 106, column: 16, scope: !15050)
!15050 = distinct !DILexicalBlock(scope: !15045, file: !14919, line: 105, column: 47)
!15051 = !DILocation(line: 106, column: 3, scope: !15050)
!15052 = !DILocation(line: 107, column: 15, scope: !15050)
!15053 = !DILocation(line: 108, column: 2, scope: !15050)
!15054 = !DILocation(line: 113, column: 1, scope: !15035)
!15055 = distinct !DISubprogram(name: "z_waitq_head", scope: !14496, file: !14496, line: 52, type: !15056, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !15058)
!15056 = !DISubroutineType(types: !15057)
!15057 = !{!3163, !3180}
!15058 = !{!15059}
!15059 = !DILocalVariable(name: "w", arg: 1, scope: !15055, file: !14496, line: 52, type: !3180)
!15060 = !DILocation(line: 0, scope: !15055)
!15061 = !DILocation(line: 54, column: 52, scope: !15055)
!15062 = !DILocation(line: 54, column: 28, scope: !15055)
!15063 = !DILocation(line: 54, column: 9, scope: !15055)
!15064 = !DILocation(line: 54, column: 2, scope: !15055)
!15065 = !DISubprogram(name: "k_free", scope: !122, file: !122, line: 5272, type: !7688, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!15066 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !15067, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !15069)
!15067 = !DISubroutineType(types: !15068)
!15068 = !{!3148, !14975}
!15069 = !{!15070}
!15070 = !DILocalVariable(name: "list", arg: 1, scope: !15066, file: !137, line: 294, type: !14975)
!15071 = !DILocation(line: 0, scope: !15066)
!15072 = !DILocation(line: 296, column: 9, scope: !15066)
!15073 = !DILocation(line: 296, column: 49, scope: !15066)
!15074 = !DILocation(line: 296, column: 2, scope: !15066)
!15075 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !15076, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !15078)
!15076 = !DISubroutineType(types: !15077)
!15077 = !{!492, !14975}
!15078 = !{!15079}
!15079 = !DILocalVariable(name: "list", arg: 1, scope: !15075, file: !137, line: 266, type: !14975)
!15080 = !DILocation(line: 0, scope: !15075)
!15081 = !DILocation(line: 268, column: 15, scope: !15075)
!15082 = !DILocation(line: 268, column: 20, scope: !15075)
!15083 = !DILocation(line: 268, column: 2, scope: !15075)
!15084 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !14919, file: !14919, line: 116, type: !15085, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !15091)
!15085 = !DISubroutineType(types: !15086)
!15086 = !{!105, !14922, !13, !15087}
!15087 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !15088)
!15088 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !15089)
!15089 = !{!15090}
!15090 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15088, file: !108, line: 66, baseType: !107, size: 64)
!15091 = !{!15092, !15093, !15094, !15095, !15096, !15101}
!15092 = !DILocalVariable(name: "msgq", arg: 1, scope: !15084, file: !14919, line: 116, type: !14922)
!15093 = !DILocalVariable(name: "data", arg: 2, scope: !15084, file: !14919, line: 116, type: !13)
!15094 = !DILocalVariable(name: "timeout", arg: 3, scope: !15084, file: !14919, line: 116, type: !15087)
!15095 = !DILocalVariable(name: "pending_thread", scope: !15084, file: !14919, line: 120, type: !3163)
!15096 = !DILocalVariable(name: "key", scope: !15084, file: !14919, line: 121, type: !15097)
!15097 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !15098)
!15098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !15099)
!15099 = !{!15100}
!15100 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15098, file: !236, line: 33, baseType: !105, size: 32)
!15101 = !DILocalVariable(name: "result", scope: !15084, file: !14919, line: 122, type: !105)
!15102 = !DILocation(line: 0, scope: !15084)
!15103 = !DILocation(line: 1031, column: 3, scope: !15104, inlinedAt: !15107)
!15104 = distinct !DISubprogram(name: "__get_IPSR", scope: !7751, file: !7751, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !15105)
!15105 = !{!15106}
!15106 = !DILocalVariable(name: "result", scope: !15104, file: !7751, line: 1029, type: !113)
!15107 = distinct !DILocation(line: 48, column: 10, scope: !15108, inlinedAt: !15109)
!15108 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8798, file: !8798, line: 46, type: !8799, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !397)
!15109 = distinct !DILocation(line: 118, column: 2, scope: !15110)
!15110 = distinct !DILexicalBlock(scope: !15111, file: !14919, line: 118, column: 2)
!15111 = distinct !DILexicalBlock(scope: !15084, file: !14919, line: 118, column: 2)
!15112 = !{i64 2835684}
!15113 = !DILocation(line: 0, scope: !15104, inlinedAt: !15107)
!15114 = !DILocation(line: 48, column: 9, scope: !15108, inlinedAt: !15109)
!15115 = !DILocation(line: 118, column: 2, scope: !15110)
!15116 = !DILocation(line: 118, column: 2, scope: !15117)
!15117 = distinct !DILexicalBlock(scope: !15110, file: !14919, line: 118, column: 2)
!15118 = !DILocation(line: 124, column: 27, scope: !15084)
!15119 = !DILocalVariable(name: "l", arg: 1, scope: !15120, file: !236, line: 136, type: !15123)
!15120 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !15121, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !15124)
!15121 = !DISubroutineType(types: !15122)
!15122 = !{!15097, !15123}
!15123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3243, size: 32)
!15124 = !{!15119, !15125}
!15125 = !DILocalVariable(name: "k", scope: !15120, file: !236, line: 139, type: !15097)
!15126 = !DILocation(line: 0, scope: !15120, inlinedAt: !15127)
!15127 = distinct !DILocation(line: 124, column: 8, scope: !15084)
!15128 = !DILocation(line: 55, column: 2, scope: !15129, inlinedAt: !15133)
!15129 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7433, file: !7433, line: 42, type: !7434, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !15130)
!15130 = !{!15131, !15132}
!15131 = !DILocalVariable(name: "key", scope: !15129, file: !7433, line: 44, type: !32)
!15132 = !DILocalVariable(name: "tmp", scope: !15129, file: !7433, line: 53, type: !32)
!15133 = distinct !DILocation(line: 145, column: 10, scope: !15120, inlinedAt: !15127)
!15134 = !{i64 1957945}
!15135 = !DILocation(line: 0, scope: !15129, inlinedAt: !15133)
!15136 = !DILocation(line: 148, column: 2, scope: !15137, inlinedAt: !15127)
!15137 = distinct !DILexicalBlock(scope: !15138, file: !236, line: 148, column: 2)
!15138 = distinct !DILexicalBlock(scope: !15120, file: !236, line: 148, column: 2)
!15139 = !DILocation(line: 148, column: 2, scope: !15138, inlinedAt: !15127)
!15140 = !DILocation(line: 148, column: 2, scope: !15141, inlinedAt: !15127)
!15141 = distinct !DILexicalBlock(scope: !15137, file: !236, line: 148, column: 2)
!15142 = !DILocation(line: 160, column: 2, scope: !15120, inlinedAt: !15127)
!15143 = !DILocation(line: 128, column: 12, scope: !15144)
!15144 = distinct !DILexicalBlock(scope: !15084, file: !14919, line: 128, column: 6)
!15145 = !DILocation(line: 128, column: 30, scope: !15144)
!15146 = !DILocation(line: 128, column: 22, scope: !15144)
!15147 = !DILocation(line: 128, column: 6, scope: !15084)
!15148 = !DILocation(line: 130, column: 49, scope: !15149)
!15149 = distinct !DILexicalBlock(scope: !15144, file: !14919, line: 128, column: 40)
!15150 = !DILocation(line: 130, column: 20, scope: !15149)
!15151 = !DILocation(line: 131, column: 22, scope: !15152)
!15152 = distinct !DILexicalBlock(scope: !15149, file: !14919, line: 131, column: 7)
!15153 = !DILocation(line: 131, column: 7, scope: !15149)
!15154 = !DILocation(line: 135, column: 38, scope: !15155)
!15155 = distinct !DILexicalBlock(scope: !15152, file: !14919, line: 131, column: 31)
!15156 = !DILocation(line: 136, column: 17, scope: !15155)
!15157 = !DILocation(line: 135, column: 10, scope: !15155)
!15158 = !DILocalVariable(name: "thread", arg: 1, scope: !15159, file: !14176, line: 65, type: !3163)
!15159 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14176, file: !14176, line: 65, type: !15160, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !15162)
!15160 = !DISubroutineType(types: !15161)
!15161 = !{null, !3163, !32}
!15162 = !{!15158, !15163}
!15163 = !DILocalVariable(name: "value", arg: 2, scope: !15159, file: !14176, line: 65, type: !32)
!15164 = !DILocation(line: 0, scope: !15159, inlinedAt: !15165)
!15165 = distinct !DILocation(line: 138, column: 4, scope: !15155)
!15166 = !DILocation(line: 67, column: 15, scope: !15159, inlinedAt: !15165)
!15167 = !DILocation(line: 67, column: 33, scope: !15159, inlinedAt: !15165)
!15168 = !DILocation(line: 139, column: 4, scope: !15155)
!15169 = !DILocation(line: 140, column: 4, scope: !15155)
!15170 = !DILocation(line: 141, column: 4, scope: !15155)
!15171 = !DILocation(line: 144, column: 23, scope: !15172)
!15172 = distinct !DILexicalBlock(scope: !15152, file: !14919, line: 142, column: 10)
!15173 = !DILocation(line: 144, column: 46, scope: !15172)
!15174 = !DILocation(line: 144, column: 10, scope: !15172)
!15175 = !DILocation(line: 145, column: 29, scope: !15172)
!15176 = !DILocation(line: 145, column: 20, scope: !15172)
!15177 = !DILocation(line: 146, column: 33, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !15172, file: !14919, line: 146, column: 8)
!15179 = !DILocation(line: 146, column: 24, scope: !15178)
!15180 = !DILocation(line: 146, column: 8, scope: !15172)
!15181 = !DILocation(line: 147, column: 29, scope: !15182)
!15182 = distinct !DILexicalBlock(scope: !15178, file: !14919, line: 146, column: 45)
!15183 = !DILocation(line: 147, column: 21, scope: !15182)
!15184 = !DILocation(line: 148, column: 4, scope: !15182)
!15185 = !DILocation(line: 149, column: 19, scope: !15172)
!15186 = !DILocation(line: 155, column: 2, scope: !15149)
!15187 = !DILocation(line: 155, column: 13, scope: !15144)
!15188 = !DILocation(line: 162, column: 3, scope: !15189)
!15189 = distinct !DILexicalBlock(scope: !15190, file: !14919, line: 158, column: 9)
!15190 = distinct !DILexicalBlock(scope: !15144, file: !14919, line: 155, column: 13)
!15191 = !DILocation(line: 162, column: 18, scope: !15189)
!15192 = !DILocation(line: 162, column: 28, scope: !15189)
!15193 = !DILocation(line: 164, column: 49, scope: !15189)
!15194 = !DILocation(line: 164, column: 12, scope: !15189)
!15195 = !DILocation(line: 166, column: 3, scope: !15189)
!15196 = !DILocation(line: 0, scope: !15144)
!15197 = !DILocalVariable(name: "key", arg: 2, scope: !15198, file: !236, line: 190, type: !15097)
!15198 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !15199, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !15201)
!15199 = !DISubroutineType(types: !15200)
!15200 = !{null, !15123, !15097}
!15201 = !{!15202, !15197}
!15202 = !DILocalVariable(name: "l", arg: 1, scope: !15198, file: !236, line: 189, type: !15123)
!15203 = !DILocation(line: 0, scope: !15198, inlinedAt: !15204)
!15204 = distinct !DILocation(line: 171, column: 2, scope: !15084)
!15205 = !DILocation(line: 194, column: 2, scope: !15206, inlinedAt: !15204)
!15206 = distinct !DILexicalBlock(scope: !15207, file: !236, line: 194, column: 2)
!15207 = distinct !DILexicalBlock(scope: !15198, file: !236, line: 194, column: 2)
!15208 = !DILocation(line: 194, column: 2, scope: !15207, inlinedAt: !15204)
!15209 = !DILocation(line: 194, column: 2, scope: !15210, inlinedAt: !15204)
!15210 = distinct !DILexicalBlock(scope: !15206, file: !236, line: 194, column: 2)
!15211 = !DILocalVariable(name: "key", arg: 1, scope: !15212, file: !7433, line: 84, type: !32)
!15212 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7433, file: !7433, line: 84, type: !7444, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !15213)
!15213 = !{!15211}
!15214 = !DILocation(line: 0, scope: !15212, inlinedAt: !15215)
!15215 = distinct !DILocation(line: 215, column: 2, scope: !15198, inlinedAt: !15204)
!15216 = !DILocation(line: 95, column: 2, scope: !15212, inlinedAt: !15215)
!15217 = !{i64 1958762}
!15218 = !DILocation(line: 173, column: 2, scope: !15084)
!15219 = !DILocation(line: 174, column: 1, scope: !15084)
!15220 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !14919, file: !14919, line: 188, type: !15221, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !15229)
!15221 = !DISubroutineType(types: !15222)
!15222 = !{null, !14922, !15223}
!15223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15224, size: 32)
!15224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !122, line: 4259, size: 96, elements: !15225)
!15225 = !{!15226, !15227, !15228}
!15226 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !15224, file: !122, line: 4261, baseType: !111, size: 32)
!15227 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !15224, file: !122, line: 4263, baseType: !113, size: 32, offset: 32)
!15228 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !15224, file: !122, line: 4265, baseType: !113, size: 32, offset: 64)
!15229 = !{!15230, !15231}
!15230 = !DILocalVariable(name: "msgq", arg: 1, scope: !15220, file: !14919, line: 188, type: !14922)
!15231 = !DILocalVariable(name: "attrs", arg: 2, scope: !15220, file: !14919, line: 188, type: !15223)
!15232 = !DILocation(line: 0, scope: !15220)
!15233 = !DILocation(line: 190, column: 26, scope: !15220)
!15234 = !DILocation(line: 190, column: 9, scope: !15220)
!15235 = !DILocation(line: 190, column: 18, scope: !15220)
!15236 = !DILocation(line: 191, column: 26, scope: !15220)
!15237 = !DILocation(line: 191, column: 9, scope: !15220)
!15238 = !DILocation(line: 191, column: 18, scope: !15220)
!15239 = !DILocation(line: 192, column: 27, scope: !15220)
!15240 = !DILocation(line: 192, column: 9, scope: !15220)
!15241 = !DILocation(line: 192, column: 19, scope: !15220)
!15242 = !DILocation(line: 193, column: 1, scope: !15220)
!15243 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !14919, file: !14919, line: 206, type: !15244, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !15246)
!15244 = !DISubroutineType(types: !15245)
!15245 = !{!105, !14922, !104, !15087}
!15246 = !{!15247, !15248, !15249, !15250, !15251, !15252}
!15247 = !DILocalVariable(name: "msgq", arg: 1, scope: !15243, file: !14919, line: 206, type: !14922)
!15248 = !DILocalVariable(name: "data", arg: 2, scope: !15243, file: !14919, line: 206, type: !104)
!15249 = !DILocalVariable(name: "timeout", arg: 3, scope: !15243, file: !14919, line: 206, type: !15087)
!15250 = !DILocalVariable(name: "key", scope: !15243, file: !14919, line: 210, type: !15097)
!15251 = !DILocalVariable(name: "pending_thread", scope: !15243, file: !14919, line: 211, type: !3163)
!15252 = !DILocalVariable(name: "result", scope: !15243, file: !14919, line: 212, type: !105)
!15253 = !DILocation(line: 0, scope: !15243)
!15254 = !DILocation(line: 1031, column: 3, scope: !15104, inlinedAt: !15255)
!15255 = distinct !DILocation(line: 48, column: 10, scope: !15108, inlinedAt: !15256)
!15256 = distinct !DILocation(line: 208, column: 2, scope: !15257)
!15257 = distinct !DILexicalBlock(scope: !15258, file: !14919, line: 208, column: 2)
!15258 = distinct !DILexicalBlock(scope: !15243, file: !14919, line: 208, column: 2)
!15259 = !DILocation(line: 0, scope: !15104, inlinedAt: !15255)
!15260 = !DILocation(line: 48, column: 9, scope: !15108, inlinedAt: !15256)
!15261 = !DILocation(line: 208, column: 2, scope: !15257)
!15262 = !DILocation(line: 208, column: 2, scope: !15263)
!15263 = distinct !DILexicalBlock(scope: !15257, file: !14919, line: 208, column: 2)
!15264 = !DILocation(line: 214, column: 27, scope: !15243)
!15265 = !DILocation(line: 0, scope: !15120, inlinedAt: !15266)
!15266 = distinct !DILocation(line: 214, column: 8, scope: !15243)
!15267 = !DILocation(line: 55, column: 2, scope: !15129, inlinedAt: !15268)
!15268 = distinct !DILocation(line: 145, column: 10, scope: !15120, inlinedAt: !15266)
!15269 = !DILocation(line: 0, scope: !15129, inlinedAt: !15268)
!15270 = !DILocation(line: 148, column: 2, scope: !15137, inlinedAt: !15266)
!15271 = !DILocation(line: 148, column: 2, scope: !15138, inlinedAt: !15266)
!15272 = !DILocation(line: 148, column: 2, scope: !15141, inlinedAt: !15266)
!15273 = !DILocation(line: 160, column: 2, scope: !15120, inlinedAt: !15266)
!15274 = !DILocation(line: 218, column: 12, scope: !15275)
!15275 = distinct !DILexicalBlock(scope: !15243, file: !14919, line: 218, column: 6)
!15276 = !DILocation(line: 218, column: 22, scope: !15275)
!15277 = !DILocation(line: 218, column: 6, scope: !15243)
!15278 = !DILocation(line: 220, column: 28, scope: !15279)
!15279 = distinct !DILexicalBlock(scope: !15275, file: !14919, line: 218, column: 28)
!15280 = !DILocation(line: 220, column: 44, scope: !15279)
!15281 = !DILocation(line: 220, column: 9, scope: !15279)
!15282 = !DILocation(line: 221, column: 27, scope: !15279)
!15283 = !DILocation(line: 221, column: 18, scope: !15279)
!15284 = !DILocation(line: 222, column: 31, scope: !15285)
!15285 = distinct !DILexicalBlock(scope: !15279, file: !14919, line: 222, column: 7)
!15286 = !DILocation(line: 222, column: 22, scope: !15285)
!15287 = !DILocation(line: 222, column: 7, scope: !15279)
!15288 = !DILocation(line: 223, column: 27, scope: !15289)
!15289 = distinct !DILexicalBlock(scope: !15285, file: !14919, line: 222, column: 43)
!15290 = !DILocation(line: 223, column: 19, scope: !15289)
!15291 = !DILocation(line: 224, column: 3, scope: !15289)
!15292 = !DILocation(line: 225, column: 18, scope: !15279)
!15293 = !DILocation(line: 228, column: 49, scope: !15279)
!15294 = !DILocation(line: 228, column: 20, scope: !15279)
!15295 = !DILocation(line: 229, column: 22, scope: !15296)
!15296 = distinct !DILexicalBlock(scope: !15279, file: !14919, line: 229, column: 7)
!15297 = !DILocation(line: 229, column: 7, scope: !15279)
!15298 = !DILocation(line: 233, column: 23, scope: !15299)
!15299 = distinct !DILexicalBlock(scope: !15296, file: !14919, line: 229, column: 31)
!15300 = !DILocation(line: 233, column: 55, scope: !15299)
!15301 = !DILocation(line: 234, column: 17, scope: !15299)
!15302 = !DILocation(line: 233, column: 10, scope: !15299)
!15303 = !DILocation(line: 235, column: 29, scope: !15299)
!15304 = !DILocation(line: 235, column: 20, scope: !15299)
!15305 = !DILocation(line: 236, column: 33, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15299, file: !14919, line: 236, column: 8)
!15307 = !DILocation(line: 236, column: 24, scope: !15306)
!15308 = !DILocation(line: 236, column: 8, scope: !15299)
!15309 = !DILocation(line: 237, column: 29, scope: !15310)
!15310 = distinct !DILexicalBlock(scope: !15306, file: !14919, line: 236, column: 45)
!15311 = !DILocation(line: 237, column: 21, scope: !15310)
!15312 = !DILocation(line: 238, column: 4, scope: !15310)
!15313 = !DILocation(line: 239, column: 19, scope: !15299)
!15314 = !DILocation(line: 0, scope: !15159, inlinedAt: !15315)
!15315 = distinct !DILocation(line: 242, column: 4, scope: !15299)
!15316 = !DILocation(line: 67, column: 15, scope: !15159, inlinedAt: !15315)
!15317 = !DILocation(line: 67, column: 33, scope: !15159, inlinedAt: !15315)
!15318 = !DILocation(line: 243, column: 4, scope: !15299)
!15319 = !DILocation(line: 244, column: 4, scope: !15299)
!15320 = !DILocation(line: 248, column: 4, scope: !15299)
!15321 = !DILocation(line: 251, column: 13, scope: !15275)
!15322 = !DILocation(line: 258, column: 3, scope: !15323)
!15323 = distinct !DILexicalBlock(scope: !15324, file: !14919, line: 254, column: 9)
!15324 = distinct !DILexicalBlock(scope: !15275, file: !14919, line: 251, column: 13)
!15325 = !DILocation(line: 258, column: 18, scope: !15323)
!15326 = !DILocation(line: 258, column: 28, scope: !15323)
!15327 = !DILocation(line: 260, column: 49, scope: !15323)
!15328 = !DILocation(line: 260, column: 12, scope: !15323)
!15329 = !DILocation(line: 262, column: 3, scope: !15323)
!15330 = !DILocation(line: 0, scope: !15275)
!15331 = !DILocation(line: 0, scope: !15198, inlinedAt: !15332)
!15332 = distinct !DILocation(line: 267, column: 2, scope: !15243)
!15333 = !DILocation(line: 194, column: 2, scope: !15206, inlinedAt: !15332)
!15334 = !DILocation(line: 194, column: 2, scope: !15207, inlinedAt: !15332)
!15335 = !DILocation(line: 194, column: 2, scope: !15210, inlinedAt: !15332)
!15336 = !DILocation(line: 0, scope: !15212, inlinedAt: !15337)
!15337 = distinct !DILocation(line: 215, column: 2, scope: !15198, inlinedAt: !15332)
!15338 = !DILocation(line: 95, column: 2, scope: !15212, inlinedAt: !15337)
!15339 = !DILocation(line: 269, column: 2, scope: !15243)
!15340 = !DILocation(line: 270, column: 1, scope: !15243)
!15341 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !14919, file: !14919, line: 284, type: !15342, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !15344)
!15342 = !DISubroutineType(types: !15343)
!15343 = !{!105, !14922, !104}
!15344 = !{!15345, !15346, !15347, !15348}
!15345 = !DILocalVariable(name: "msgq", arg: 1, scope: !15341, file: !14919, line: 284, type: !14922)
!15346 = !DILocalVariable(name: "data", arg: 2, scope: !15341, file: !14919, line: 284, type: !104)
!15347 = !DILocalVariable(name: "key", scope: !15341, file: !14919, line: 286, type: !15097)
!15348 = !DILocalVariable(name: "result", scope: !15341, file: !14919, line: 287, type: !105)
!15349 = !DILocation(line: 0, scope: !15341)
!15350 = !DILocation(line: 289, column: 27, scope: !15341)
!15351 = !DILocation(line: 0, scope: !15120, inlinedAt: !15352)
!15352 = distinct !DILocation(line: 289, column: 8, scope: !15341)
!15353 = !DILocation(line: 55, column: 2, scope: !15129, inlinedAt: !15354)
!15354 = distinct !DILocation(line: 145, column: 10, scope: !15120, inlinedAt: !15352)
!15355 = !DILocation(line: 0, scope: !15129, inlinedAt: !15354)
!15356 = !DILocation(line: 148, column: 2, scope: !15137, inlinedAt: !15352)
!15357 = !DILocation(line: 148, column: 2, scope: !15138, inlinedAt: !15352)
!15358 = !DILocation(line: 148, column: 2, scope: !15141, inlinedAt: !15352)
!15359 = !DILocation(line: 160, column: 2, scope: !15120, inlinedAt: !15352)
!15360 = !DILocation(line: 291, column: 12, scope: !15361)
!15361 = distinct !DILexicalBlock(scope: !15341, file: !14919, line: 291, column: 6)
!15362 = !DILocation(line: 291, column: 22, scope: !15361)
!15363 = !DILocation(line: 291, column: 6, scope: !15341)
!15364 = !DILocation(line: 293, column: 28, scope: !15365)
!15365 = distinct !DILexicalBlock(scope: !15361, file: !14919, line: 291, column: 28)
!15366 = !DILocation(line: 293, column: 44, scope: !15365)
!15367 = !DILocation(line: 293, column: 9, scope: !15365)
!15368 = !DILocation(line: 295, column: 2, scope: !15365)
!15369 = !DILocation(line: 0, scope: !15361)
!15370 = !DILocation(line: 0, scope: !15198, inlinedAt: !15371)
!15371 = distinct !DILocation(line: 302, column: 2, scope: !15341)
!15372 = !DILocation(line: 194, column: 2, scope: !15206, inlinedAt: !15371)
!15373 = !DILocation(line: 194, column: 2, scope: !15207, inlinedAt: !15371)
!15374 = !DILocation(line: 194, column: 2, scope: !15210, inlinedAt: !15371)
!15375 = !DILocation(line: 0, scope: !15212, inlinedAt: !15376)
!15376 = distinct !DILocation(line: 215, column: 2, scope: !15198, inlinedAt: !15371)
!15377 = !DILocation(line: 95, column: 2, scope: !15212, inlinedAt: !15376)
!15378 = !DILocation(line: 304, column: 2, scope: !15341)
!15379 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !14919, file: !14919, line: 318, type: !15380, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3145, retainedNodes: !15382)
!15380 = !DISubroutineType(types: !15381)
!15381 = !{null, !14922}
!15382 = !{!15383, !15384, !15385}
!15383 = !DILocalVariable(name: "msgq", arg: 1, scope: !15379, file: !14919, line: 318, type: !14922)
!15384 = !DILocalVariable(name: "key", scope: !15379, file: !14919, line: 320, type: !15097)
!15385 = !DILocalVariable(name: "pending_thread", scope: !15379, file: !14919, line: 321, type: !3163)
!15386 = !DILocation(line: 0, scope: !15379)
!15387 = !DILocation(line: 323, column: 27, scope: !15379)
!15388 = !DILocation(line: 0, scope: !15120, inlinedAt: !15389)
!15389 = distinct !DILocation(line: 323, column: 8, scope: !15379)
!15390 = !DILocation(line: 55, column: 2, scope: !15129, inlinedAt: !15391)
!15391 = distinct !DILocation(line: 145, column: 10, scope: !15120, inlinedAt: !15389)
!15392 = !DILocation(line: 0, scope: !15129, inlinedAt: !15391)
!15393 = !DILocation(line: 148, column: 2, scope: !15137, inlinedAt: !15389)
!15394 = !DILocation(line: 148, column: 2, scope: !15138, inlinedAt: !15389)
!15395 = !DILocation(line: 148, column: 2, scope: !15141, inlinedAt: !15389)
!15396 = !DILocation(line: 160, column: 2, scope: !15120, inlinedAt: !15389)
!15397 = !DILocation(line: 328, column: 27, scope: !15379)
!15398 = !DILocation(line: 328, column: 65, scope: !15379)
!15399 = !DILocation(line: 328, column: 2, scope: !15379)
!15400 = !DILocation(line: 0, scope: !15159, inlinedAt: !15401)
!15401 = distinct !DILocation(line: 329, column: 3, scope: !15402)
!15402 = distinct !DILexicalBlock(scope: !15379, file: !14919, line: 328, column: 74)
!15403 = !DILocation(line: 67, column: 15, scope: !15159, inlinedAt: !15401)
!15404 = !DILocation(line: 67, column: 33, scope: !15159, inlinedAt: !15401)
!15405 = !DILocation(line: 330, column: 3, scope: !15402)
!15406 = distinct !{!15406, !15399, !15407}
!15407 = !DILocation(line: 331, column: 2, scope: !15379)
!15408 = !DILocation(line: 333, column: 8, scope: !15379)
!15409 = !DILocation(line: 333, column: 18, scope: !15379)
!15410 = !DILocation(line: 334, column: 25, scope: !15379)
!15411 = !DILocation(line: 334, column: 8, scope: !15379)
!15412 = !DILocation(line: 334, column: 17, scope: !15379)
!15413 = !DILocation(line: 336, column: 2, scope: !15379)
!15414 = !DILocation(line: 337, column: 1, scope: !15379)
!15415 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2350, file: !2350, line: 41, type: !15416, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15429)
!15416 = !DISubroutineType(types: !15417)
!15417 = !{!105, !15418, !32, !32}
!15418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15419, size: 32)
!15419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !122, line: 2909, size: 128, elements: !15420)
!15420 = !{!15421, !15427, !15428}
!15421 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15419, file: !122, line: 2910, baseType: !15422, size: 64)
!15422 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !15423)
!15423 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !15424)
!15424 = !{!15425}
!15425 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !15423, file: !163, line: 232, baseType: !15426, size: 64)
!15426 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2336)
!15427 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !15419, file: !122, line: 2911, baseType: !32, size: 32, offset: 64)
!15428 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !15419, file: !122, line: 2912, baseType: !32, size: 32, offset: 96)
!15429 = !{!15430, !15431, !15432}
!15430 = !DILocalVariable(name: "sem", arg: 1, scope: !15415, file: !2350, line: 41, type: !15418)
!15431 = !DILocalVariable(name: "initial_count", arg: 2, scope: !15415, file: !2350, line: 41, type: !32)
!15432 = !DILocalVariable(name: "limit", arg: 3, scope: !15415, file: !2350, line: 42, type: !32)
!15433 = !DILocation(line: 0, scope: !15415)
!15434 = !DILocation(line: 47, column: 2, scope: !15435)
!15435 = distinct !DILexicalBlock(scope: !15415, file: !2350, line: 47, column: 2)
!15436 = !DILocation(line: 53, column: 7, scope: !15415)
!15437 = !DILocation(line: 53, column: 13, scope: !15415)
!15438 = !DILocation(line: 54, column: 7, scope: !15415)
!15439 = !DILocation(line: 54, column: 13, scope: !15415)
!15440 = !DILocation(line: 58, column: 21, scope: !15415)
!15441 = !DILocation(line: 58, column: 2, scope: !15415)
!15442 = !DILocation(line: 64, column: 2, scope: !15415)
!15443 = !DILocation(line: 65, column: 1, scope: !15415)
!15444 = distinct !DISubprogram(name: "z_waitq_init", scope: !14496, file: !14496, line: 47, type: !15445, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15448)
!15445 = !DISubroutineType(types: !15446)
!15446 = !{null, !15447}
!15447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15422, size: 32)
!15448 = !{!15449}
!15449 = !DILocalVariable(name: "w", arg: 1, scope: !15444, file: !14496, line: 47, type: !15447)
!15450 = !DILocation(line: 0, scope: !15444)
!15451 = !DILocation(line: 49, column: 21, scope: !15444)
!15452 = !DILocation(line: 49, column: 2, scope: !15444)
!15453 = !DILocation(line: 50, column: 1, scope: !15444)
!15454 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !15455, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15458)
!15455 = !DISubroutineType(types: !15456)
!15456 = !{null, !15457}
!15457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15426, size: 32)
!15458 = !{!15459}
!15459 = !DILocalVariable(name: "list", arg: 1, scope: !15454, file: !137, line: 197, type: !15457)
!15460 = !DILocation(line: 0, scope: !15454)
!15461 = !DILocation(line: 199, column: 8, scope: !15454)
!15462 = !DILocation(line: 199, column: 13, scope: !15454)
!15463 = !DILocation(line: 200, column: 8, scope: !15454)
!15464 = !DILocation(line: 200, column: 13, scope: !15454)
!15465 = !DILocation(line: 201, column: 1, scope: !15454)
!15466 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2350, file: !2350, line: 86, type: !15467, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15469)
!15467 = !DISubroutineType(types: !15468)
!15468 = !{null, !15418}
!15469 = !{!15470, !15471, !15476}
!15470 = !DILocalVariable(name: "sem", arg: 1, scope: !15466, file: !2350, line: 86, type: !15418)
!15471 = !DILocalVariable(name: "key", scope: !15466, file: !2350, line: 88, type: !15472)
!15472 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !15473)
!15473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !15474)
!15474 = !{!15475}
!15475 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15473, file: !236, line: 33, baseType: !105, size: 32)
!15476 = !DILocalVariable(name: "thread", scope: !15466, file: !2350, line: 89, type: !15477)
!15477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15478, size: 32)
!15478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 1024, elements: !15479)
!15479 = !{!15480, !15518, !15530, !15531, !15532, !15533, !15539, !15551}
!15480 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !15478, file: !127, line: 247, baseType: !15481, size: 384)
!15481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !15482)
!15482 = !{!15483, !15493, !15494, !15495, !15496, !15505, !15506, !15507}
!15483 = !DIDerivedType(tag: DW_TAG_member, scope: !15481, file: !127, line: 60, baseType: !15484, size: 64)
!15484 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15481, file: !127, line: 60, size: 64, elements: !15485)
!15485 = !{!15486, !15487}
!15486 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !15484, file: !127, line: 61, baseType: !2335, size: 64)
!15487 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !15484, file: !127, line: 62, baseType: !15488, size: 64)
!15488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !15489)
!15489 = !{!15490}
!15490 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !15488, file: !153, line: 50, baseType: !15491, size: 64)
!15491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15492, size: 64, elements: !158)
!15492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15488, size: 32)
!15493 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !15481, file: !127, line: 68, baseType: !15447, size: 32, offset: 64)
!15494 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !15481, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!15495 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !15481, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!15496 = !DIDerivedType(tag: DW_TAG_member, scope: !15481, file: !127, line: 90, baseType: !15497, size: 16, offset: 112)
!15497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !15481, file: !127, line: 90, size: 16, elements: !15498)
!15498 = !{!15499, !15504}
!15499 = !DIDerivedType(tag: DW_TAG_member, scope: !15497, file: !127, line: 91, baseType: !15500, size: 16)
!15500 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !15497, file: !127, line: 91, size: 16, elements: !15501)
!15501 = !{!15502, !15503}
!15502 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !15500, file: !127, line: 96, baseType: !179, size: 8)
!15503 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !15500, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!15504 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !15497, file: !127, line: 100, baseType: !183, size: 16)
!15505 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !15481, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!15506 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !15481, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!15507 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !15481, file: !127, line: 131, baseType: !15508, size: 192, offset: 192)
!15508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !15509)
!15509 = !{!15510, !15511, !15517}
!15510 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !15508, file: !163, line: 245, baseType: !2335, size: 64)
!15511 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !15508, file: !163, line: 246, baseType: !15512, size: 32, offset: 64)
!15512 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !15513)
!15513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15514, size: 32)
!15514 = !DISubroutineType(types: !15515)
!15515 = !{null, !15516}
!15516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15508, size: 32)
!15517 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !15508, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!15518 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !15478, file: !127, line: 250, baseType: !15519, size: 288, offset: 384)
!15519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !15520)
!15520 = !{!15521, !15522, !15523, !15524, !15525, !15526, !15527, !15528, !15529}
!15521 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !15519, file: !200, line: 26, baseType: !113, size: 32)
!15522 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !15519, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!15523 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !15519, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!15524 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !15519, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!15525 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !15519, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!15526 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !15519, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!15527 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !15519, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!15528 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !15519, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!15529 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !15519, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!15530 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !15478, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!15531 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !15478, file: !127, line: 256, baseType: !15422, size: 64, offset: 704)
!15532 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !15478, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!15533 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !15478, file: !127, line: 300, baseType: !15534, size: 96, offset: 800)
!15534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !127, line: 149, size: 96, elements: !15535)
!15535 = !{!15536, !15537, !15538}
!15536 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !15534, file: !127, line: 153, baseType: !22, size: 32)
!15537 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !15534, file: !127, line: 162, baseType: !111, size: 32, offset: 32)
!15538 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !15534, file: !127, line: 168, baseType: !111, size: 32, offset: 64)
!15539 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !15478, file: !127, line: 325, baseType: !15540, size: 32, offset: 896)
!15540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15541, size: 32)
!15541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !15542)
!15542 = !{!15543, !15549, !15550}
!15543 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15541, file: !122, line: 5074, baseType: !15544, size: 96)
!15544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !15545)
!15545 = !{!15546, !15547, !15548}
!15546 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !15544, file: !226, line: 57, baseType: !229, size: 32)
!15547 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !15544, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!15548 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !15544, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!15549 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15541, file: !122, line: 5075, baseType: !15422, size: 64, offset: 96)
!15550 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15541, file: !122, line: 5076, baseType: !2351, size: 32, offset: 160)
!15551 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !15478, file: !127, line: 343, baseType: !15552, size: 64, offset: 928)
!15552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !15553)
!15553 = !{!15554, !15555}
!15554 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !15552, file: !200, line: 63, baseType: !113, size: 32)
!15555 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !15552, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!15556 = !DILocation(line: 0, scope: !15466)
!15557 = !DILocalVariable(name: "l", arg: 1, scope: !15558, file: !236, line: 136, type: !15561)
!15558 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !15559, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15562)
!15559 = !DISubroutineType(types: !15560)
!15560 = !{!15472, !15561}
!15561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!15562 = !{!15557, !15563}
!15563 = !DILocalVariable(name: "k", scope: !15558, file: !236, line: 139, type: !15472)
!15564 = !DILocation(line: 0, scope: !15558, inlinedAt: !15565)
!15565 = distinct !DILocation(line: 88, column: 25, scope: !15466)
!15566 = !DILocation(line: 55, column: 2, scope: !15567, inlinedAt: !15571)
!15567 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7433, file: !7433, line: 42, type: !7434, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15568)
!15568 = !{!15569, !15570}
!15569 = !DILocalVariable(name: "key", scope: !15567, file: !7433, line: 44, type: !32)
!15570 = !DILocalVariable(name: "tmp", scope: !15567, file: !7433, line: 53, type: !32)
!15571 = distinct !DILocation(line: 145, column: 10, scope: !15558, inlinedAt: !15565)
!15572 = !{i64 1953370}
!15573 = !DILocation(line: 0, scope: !15567, inlinedAt: !15571)
!15574 = !DILocation(line: 148, column: 2, scope: !15575, inlinedAt: !15565)
!15575 = distinct !DILexicalBlock(scope: !15576, file: !236, line: 148, column: 2)
!15576 = distinct !DILexicalBlock(scope: !15558, file: !236, line: 148, column: 2)
!15577 = !DILocation(line: 148, column: 2, scope: !15576, inlinedAt: !15565)
!15578 = !DILocation(line: 148, column: 2, scope: !15579, inlinedAt: !15565)
!15579 = distinct !DILexicalBlock(scope: !15575, file: !236, line: 148, column: 2)
!15580 = !DILocation(line: 160, column: 2, scope: !15558, inlinedAt: !15565)
!15581 = !DILocation(line: 93, column: 39, scope: !15466)
!15582 = !DILocation(line: 93, column: 11, scope: !15466)
!15583 = !DILocation(line: 95, column: 13, scope: !15584)
!15584 = distinct !DILexicalBlock(scope: !15466, file: !2350, line: 95, column: 6)
!15585 = !DILocation(line: 95, column: 6, scope: !15466)
!15586 = !DILocalVariable(name: "thread", arg: 1, scope: !15587, file: !14176, line: 65, type: !15477)
!15587 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14176, file: !14176, line: 65, type: !15588, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15590)
!15588 = !DISubroutineType(types: !15589)
!15589 = !{null, !15477, !32}
!15590 = !{!15586, !15591}
!15591 = !DILocalVariable(name: "value", arg: 2, scope: !15587, file: !14176, line: 65, type: !32)
!15592 = !DILocation(line: 0, scope: !15587, inlinedAt: !15593)
!15593 = distinct !DILocation(line: 96, column: 3, scope: !15594)
!15594 = distinct !DILexicalBlock(scope: !15584, file: !2350, line: 95, column: 22)
!15595 = !DILocation(line: 67, column: 15, scope: !15587, inlinedAt: !15593)
!15596 = !DILocation(line: 67, column: 33, scope: !15587, inlinedAt: !15593)
!15597 = !DILocation(line: 97, column: 3, scope: !15594)
!15598 = !DILocation(line: 98, column: 2, scope: !15594)
!15599 = !DILocation(line: 99, column: 23, scope: !15600)
!15600 = distinct !DILexicalBlock(scope: !15584, file: !2350, line: 98, column: 9)
!15601 = !DILocation(line: 99, column: 37, scope: !15600)
!15602 = !DILocation(line: 99, column: 29, scope: !15600)
!15603 = !DILocation(line: 99, column: 17, scope: !15600)
!15604 = !DILocation(line: 99, column: 14, scope: !15600)
!15605 = !DILocation(line: 103, column: 2, scope: !15466)
!15606 = !DILocation(line: 106, column: 1, scope: !15466)
!15607 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2350, file: !2350, line: 117, type: !15608, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15614)
!15608 = !DISubroutineType(types: !15609)
!15609 = !{!105, !15418, !15610}
!15610 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !15611)
!15611 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !15612)
!15612 = !{!15613}
!15613 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15611, file: !108, line: 66, baseType: !107, size: 64)
!15614 = !{!15615, !15616, !15617, !15618, !15619}
!15615 = !DILocalVariable(name: "sem", arg: 1, scope: !15607, file: !2350, line: 117, type: !15418)
!15616 = !DILocalVariable(name: "timeout", arg: 2, scope: !15607, file: !2350, line: 117, type: !15610)
!15617 = !DILocalVariable(name: "ret", scope: !15607, file: !2350, line: 119, type: !105)
!15618 = !DILocalVariable(name: "key", scope: !15607, file: !2350, line: 124, type: !15472)
!15619 = !DILabel(scope: !15607, name: "out", file: !2350, line: 145)
!15620 = !DILocation(line: 0, scope: !15607)
!15621 = !DILocation(line: 1031, column: 3, scope: !15622, inlinedAt: !15625)
!15622 = distinct !DISubprogram(name: "__get_IPSR", scope: !7751, file: !7751, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15623)
!15623 = !{!15624}
!15624 = !DILocalVariable(name: "result", scope: !15622, file: !7751, line: 1029, type: !113)
!15625 = distinct !DILocation(line: 48, column: 10, scope: !15626, inlinedAt: !15627)
!15626 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8798, file: !8798, line: 46, type: !8799, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !397)
!15627 = distinct !DILocation(line: 121, column: 2, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15629, file: !2350, line: 121, column: 2)
!15629 = distinct !DILexicalBlock(scope: !15607, file: !2350, line: 121, column: 2)
!15630 = !{i64 2831109}
!15631 = !DILocation(line: 0, scope: !15622, inlinedAt: !15625)
!15632 = !DILocation(line: 48, column: 9, scope: !15626, inlinedAt: !15627)
!15633 = !DILocation(line: 121, column: 2, scope: !15628)
!15634 = !DILocation(line: 121, column: 2, scope: !15635)
!15635 = distinct !DILexicalBlock(scope: !15628, file: !2350, line: 121, column: 2)
!15636 = !DILocation(line: 0, scope: !15558, inlinedAt: !15637)
!15637 = distinct !DILocation(line: 124, column: 25, scope: !15607)
!15638 = !DILocation(line: 55, column: 2, scope: !15567, inlinedAt: !15639)
!15639 = distinct !DILocation(line: 145, column: 10, scope: !15558, inlinedAt: !15637)
!15640 = !DILocation(line: 0, scope: !15567, inlinedAt: !15639)
!15641 = !DILocation(line: 148, column: 2, scope: !15575, inlinedAt: !15637)
!15642 = !DILocation(line: 148, column: 2, scope: !15576, inlinedAt: !15637)
!15643 = !DILocation(line: 148, column: 2, scope: !15579, inlinedAt: !15637)
!15644 = !DILocation(line: 160, column: 2, scope: !15558, inlinedAt: !15637)
!15645 = !DILocation(line: 128, column: 6, scope: !15646)
!15646 = distinct !DILexicalBlock(scope: !15607, file: !2350, line: 128, column: 6)
!15647 = !DILocation(line: 128, column: 6, scope: !15607)
!15648 = !{!"branch_weights", i32 1, i32 2000}
!15649 = !DILocation(line: 129, column: 13, scope: !15650)
!15650 = distinct !DILexicalBlock(scope: !15646, file: !2350, line: 128, column: 31)
!15651 = !DILocalVariable(name: "key", arg: 2, scope: !15652, file: !236, line: 190, type: !15472)
!15652 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !15653, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15655)
!15653 = !DISubroutineType(types: !15654)
!15654 = !{null, !15561, !15472}
!15655 = !{!15656, !15651}
!15656 = !DILocalVariable(name: "l", arg: 1, scope: !15652, file: !236, line: 189, type: !15561)
!15657 = !DILocation(line: 0, scope: !15652, inlinedAt: !15658)
!15658 = distinct !DILocation(line: 130, column: 3, scope: !15650)
!15659 = !DILocation(line: 194, column: 2, scope: !15660, inlinedAt: !15658)
!15660 = distinct !DILexicalBlock(scope: !15661, file: !236, line: 194, column: 2)
!15661 = distinct !DILexicalBlock(scope: !15652, file: !236, line: 194, column: 2)
!15662 = !DILocation(line: 194, column: 2, scope: !15661, inlinedAt: !15658)
!15663 = !DILocation(line: 194, column: 2, scope: !15664, inlinedAt: !15658)
!15664 = distinct !DILexicalBlock(scope: !15660, file: !236, line: 194, column: 2)
!15665 = !DILocalVariable(name: "key", arg: 1, scope: !15666, file: !7433, line: 84, type: !32)
!15666 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7433, file: !7433, line: 84, type: !7444, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15667)
!15667 = !{!15665}
!15668 = !DILocation(line: 0, scope: !15666, inlinedAt: !15669)
!15669 = distinct !DILocation(line: 215, column: 2, scope: !15652, inlinedAt: !15658)
!15670 = !DILocation(line: 95, column: 2, scope: !15666, inlinedAt: !15669)
!15671 = !{i64 1954187}
!15672 = !DILocation(line: 132, column: 3, scope: !15650)
!15673 = !DILocation(line: 135, column: 6, scope: !15607)
!15674 = !DILocation(line: 0, scope: !15652, inlinedAt: !15675)
!15675 = distinct !DILocation(line: 136, column: 3, scope: !15676)
!15676 = distinct !DILexicalBlock(scope: !15677, file: !2350, line: 135, column: 40)
!15677 = distinct !DILexicalBlock(scope: !15607, file: !2350, line: 135, column: 6)
!15678 = !DILocation(line: 194, column: 2, scope: !15660, inlinedAt: !15675)
!15679 = !DILocation(line: 194, column: 2, scope: !15661, inlinedAt: !15675)
!15680 = !DILocation(line: 194, column: 2, scope: !15664, inlinedAt: !15675)
!15681 = !DILocation(line: 0, scope: !15666, inlinedAt: !15682)
!15682 = distinct !DILocation(line: 215, column: 2, scope: !15652, inlinedAt: !15675)
!15683 = !DILocation(line: 95, column: 2, scope: !15666, inlinedAt: !15682)
!15684 = !DILocation(line: 138, column: 3, scope: !15676)
!15685 = !DILocation(line: 143, column: 38, scope: !15607)
!15686 = !DILocation(line: 143, column: 8, scope: !15607)
!15687 = !DILocation(line: 143, column: 2, scope: !15607)
!15688 = !DILocation(line: 145, column: 1, scope: !15607)
!15689 = !DILocation(line: 148, column: 2, scope: !15607)
!15690 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2350, file: !2350, line: 151, type: !15467, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2331, retainedNodes: !15691)
!15691 = !{!15692, !15693, !15694}
!15692 = !DILocalVariable(name: "sem", arg: 1, scope: !15690, file: !2350, line: 151, type: !15418)
!15693 = !DILocalVariable(name: "thread", scope: !15690, file: !2350, line: 153, type: !15477)
!15694 = !DILocalVariable(name: "key", scope: !15690, file: !2350, line: 154, type: !15472)
!15695 = !DILocation(line: 0, scope: !15690)
!15696 = !DILocation(line: 0, scope: !15558, inlinedAt: !15697)
!15697 = distinct !DILocation(line: 154, column: 25, scope: !15690)
!15698 = !DILocation(line: 55, column: 2, scope: !15567, inlinedAt: !15699)
!15699 = distinct !DILocation(line: 145, column: 10, scope: !15558, inlinedAt: !15697)
!15700 = !DILocation(line: 0, scope: !15567, inlinedAt: !15699)
!15701 = !DILocation(line: 148, column: 2, scope: !15575, inlinedAt: !15697)
!15702 = !DILocation(line: 148, column: 2, scope: !15576, inlinedAt: !15697)
!15703 = !DILocation(line: 148, column: 2, scope: !15579, inlinedAt: !15697)
!15704 = !DILocation(line: 160, column: 2, scope: !15558, inlinedAt: !15697)
!15705 = !DILocation(line: 157, column: 12, scope: !15706)
!15706 = distinct !DILexicalBlock(scope: !15690, file: !2350, line: 156, column: 15)
!15707 = !DILocation(line: 158, column: 14, scope: !15708)
!15708 = distinct !DILexicalBlock(scope: !15706, file: !2350, line: 158, column: 7)
!15709 = !DILocation(line: 158, column: 7, scope: !15706)
!15710 = !DILocation(line: 0, scope: !15587, inlinedAt: !15711)
!15711 = distinct !DILocation(line: 161, column: 3, scope: !15706)
!15712 = !DILocation(line: 67, column: 15, scope: !15587, inlinedAt: !15711)
!15713 = !DILocation(line: 67, column: 33, scope: !15587, inlinedAt: !15711)
!15714 = !DILocation(line: 162, column: 3, scope: !15706)
!15715 = distinct !{!15715, !15716, !15717}
!15716 = !DILocation(line: 156, column: 2, scope: !15690)
!15717 = !DILocation(line: 163, column: 2, scope: !15690)
!15718 = !DILocation(line: 164, column: 7, scope: !15690)
!15719 = !DILocation(line: 164, column: 13, scope: !15690)
!15720 = !DILocation(line: 170, column: 2, scope: !15690)
!15721 = !DILocation(line: 171, column: 1, scope: !15690)
!15722 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2466, file: !2466, line: 93, type: !15723, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15725)
!15723 = !DISubroutineType(types: !15724)
!15724 = !{!116, !2359, !2359}
!15725 = !{!15726, !15727, !15728, !15729}
!15726 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15722, file: !2466, line: 93, type: !2359)
!15727 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15722, file: !2466, line: 94, type: !2359)
!15728 = !DILocalVariable(name: "b1", scope: !15722, file: !2466, line: 97, type: !116)
!15729 = !DILocalVariable(name: "b2", scope: !15722, file: !2466, line: 98, type: !116)
!15730 = !DILocation(line: 0, scope: !15722)
!15731 = !DILocation(line: 97, column: 30, scope: !15722)
!15732 = !DILocation(line: 98, column: 30, scope: !15722)
!15733 = !DILocation(line: 100, column: 9, scope: !15734)
!15734 = distinct !DILexicalBlock(scope: !15722, file: !2466, line: 100, column: 6)
!15735 = !DILocation(line: 100, column: 6, scope: !15722)
!15736 = !DILocation(line: 125, column: 1, scope: !15722)
!15737 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2466, file: !2466, line: 428, type: !15738, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15740)
!15738 = !DISubroutineType(types: !15739)
!15739 = !{null, !2359}
!15740 = !{!15741}
!15741 = !DILocalVariable(name: "curr", arg: 1, scope: !15737, file: !2466, line: 428, type: !2359)
!15742 = !DILocation(line: 0, scope: !15737)
!15743 = !DILocation(line: 434, column: 6, scope: !15744)
!15744 = distinct !DILexicalBlock(scope: !15737, file: !2466, line: 434, column: 6)
!15745 = !DILocation(line: 434, column: 23, scope: !15744)
!15746 = !DILocation(line: 434, column: 6, scope: !15737)
!15747 = !DILocation(line: 435, column: 50, scope: !15748)
!15748 = distinct !DILexicalBlock(scope: !15744, file: !2466, line: 434, column: 29)
!15749 = !DILocation(line: 435, column: 48, scope: !15748)
!15750 = !DILocation(line: 435, column: 29, scope: !15748)
!15751 = !DILocation(line: 436, column: 24, scope: !15748)
!15752 = !DILocation(line: 436, column: 3, scope: !15748)
!15753 = !DILocation(line: 437, column: 2, scope: !15748)
!15754 = !DILocation(line: 438, column: 1, scope: !15737)
!15755 = distinct !DISubprogram(name: "slice_time", scope: !2466, file: !2466, line: 407, type: !15756, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15758)
!15756 = !DISubroutineType(types: !15757)
!15757 = !{!105, !2359}
!15758 = !{!15759, !15760}
!15759 = !DILocalVariable(name: "curr", arg: 1, scope: !15755, file: !2466, line: 407, type: !2359)
!15760 = !DILocalVariable(name: "ret", scope: !15755, file: !2466, line: 409, type: !105)
!15761 = !DILocation(line: 0, scope: !15755)
!15762 = !DILocation(line: 409, column: 12, scope: !15755)
!15763 = !DILocation(line: 416, column: 2, scope: !15755)
!15764 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2466, file: !2466, line: 440, type: !15765, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15767)
!15765 = !DISubroutineType(types: !15766)
!15766 = !{null, !116, !105}
!15767 = !{!15768, !15769, !15770, !15776}
!15768 = !DILocalVariable(name: "slice", arg: 1, scope: !15764, file: !2466, line: 440, type: !116)
!15769 = !DILocalVariable(name: "prio", arg: 2, scope: !15764, file: !2466, line: 440, type: !105)
!15770 = !DILocalVariable(name: "__i", scope: !15771, file: !2466, line: 442, type: !15772)
!15771 = distinct !DILexicalBlock(scope: !15764, file: !2466, line: 442, column: 2)
!15772 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !15773)
!15773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !15774)
!15774 = !{!15775}
!15775 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15773, file: !236, line: 33, baseType: !105, size: 32)
!15776 = !DILocalVariable(name: "__key", scope: !15771, file: !2466, line: 442, type: !15772)
!15777 = !DILocation(line: 0, scope: !15764)
!15778 = !DILocation(line: 0, scope: !15771)
!15779 = !DILocalVariable(name: "l", arg: 1, scope: !15780, file: !236, line: 136, type: !15783)
!15780 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !15781, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15784)
!15781 = !DISubroutineType(types: !15782)
!15782 = !{!15772, !15783}
!15783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 32)
!15784 = !{!15779, !15785}
!15785 = !DILocalVariable(name: "k", scope: !15780, file: !236, line: 139, type: !15772)
!15786 = !DILocation(line: 0, scope: !15780, inlinedAt: !15787)
!15787 = distinct !DILocation(line: 442, column: 2, scope: !15771)
!15788 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !15793)
!15789 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7433, file: !7433, line: 42, type: !7434, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15790)
!15790 = !{!15791, !15792}
!15791 = !DILocalVariable(name: "key", scope: !15789, file: !7433, line: 44, type: !32)
!15792 = !DILocalVariable(name: "tmp", scope: !15789, file: !7433, line: 53, type: !32)
!15793 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !15787)
!15794 = !{i64 1995779}
!15795 = !DILocation(line: 0, scope: !15789, inlinedAt: !15793)
!15796 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !15787)
!15797 = distinct !DILexicalBlock(scope: !15798, file: !236, line: 148, column: 2)
!15798 = distinct !DILexicalBlock(scope: !15780, file: !236, line: 148, column: 2)
!15799 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !15787)
!15800 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !15787)
!15801 = distinct !DILexicalBlock(scope: !15797, file: !236, line: 148, column: 2)
!15802 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !15787)
!15803 = !DILocation(line: 443, column: 29, scope: !15804)
!15804 = distinct !DILexicalBlock(scope: !15805, file: !2466, line: 442, column: 26)
!15805 = distinct !DILexicalBlock(scope: !15771, file: !2466, line: 442, column: 2)
!15806 = !DILocation(line: 444, column: 17, scope: !15804)
!15807 = !DILocation(line: 445, column: 51, scope: !15808)
!15808 = distinct !DILexicalBlock(scope: !15804, file: !2466, line: 445, column: 7)
!15809 = !DILocation(line: 445, column: 7, scope: !15804)
!15810 = !DILocation(line: 0, scope: !15804)
!15811 = !DILocation(line: 451, column: 18, scope: !15804)
!15812 = !DILocation(line: 452, column: 3, scope: !15804)
!15813 = !DILocalVariable(name: "key", arg: 2, scope: !15814, file: !236, line: 190, type: !15772)
!15814 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !15815, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15817)
!15815 = !DISubroutineType(types: !15816)
!15816 = !{null, !15783, !15772}
!15817 = !{!15818, !15813}
!15818 = !DILocalVariable(name: "l", arg: 1, scope: !15814, file: !236, line: 189, type: !15783)
!15819 = !DILocation(line: 0, scope: !15814, inlinedAt: !15820)
!15820 = distinct !DILocation(line: 442, column: 2, scope: !15805)
!15821 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !15820)
!15822 = distinct !DILexicalBlock(scope: !15823, file: !236, line: 194, column: 2)
!15823 = distinct !DILexicalBlock(scope: !15814, file: !236, line: 194, column: 2)
!15824 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !15820)
!15825 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !15820)
!15826 = distinct !DILexicalBlock(scope: !15822, file: !236, line: 194, column: 2)
!15827 = !DILocalVariable(name: "key", arg: 1, scope: !15828, file: !7433, line: 84, type: !32)
!15828 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7433, file: !7433, line: 84, type: !7444, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15829)
!15829 = !{!15827}
!15830 = !DILocation(line: 0, scope: !15828, inlinedAt: !15831)
!15831 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !15820)
!15832 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !15831)
!15833 = !{i64 1996596}
!15834 = !DILocation(line: 454, column: 1, scope: !15764)
!15835 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !14752, file: !14752, line: 389, type: !9032, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15836)
!15836 = !{!15837}
!15837 = !DILocalVariable(name: "t", arg: 1, scope: !15835, file: !14752, line: 389, type: !113)
!15838 = !DILocation(line: 0, scope: !15835)
!15839 = !DILocalVariable(name: "t", arg: 1, scope: !15840, file: !14752, line: 102, type: !114)
!15840 = distinct !DISubprogram(name: "z_tmcvt", scope: !14752, file: !14752, line: 102, type: !14760, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15841)
!15841 = !{!15839, !15842, !15843, !15844, !15845, !15846, !15847, !15848, !15849, !15850, !15851}
!15842 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15840, file: !14752, line: 102, type: !113)
!15843 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15840, file: !14752, line: 103, type: !113)
!15844 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15840, file: !14752, line: 103, type: !492)
!15845 = !DILocalVariable(name: "result32", arg: 5, scope: !15840, file: !14752, line: 104, type: !492)
!15846 = !DILocalVariable(name: "round_up", arg: 6, scope: !15840, file: !14752, line: 104, type: !492)
!15847 = !DILocalVariable(name: "round_off", arg: 7, scope: !15840, file: !14752, line: 105, type: !492)
!15848 = !DILocalVariable(name: "mul_ratio", scope: !15840, file: !14752, line: 107, type: !492)
!15849 = !DILocalVariable(name: "div_ratio", scope: !15840, file: !14752, line: 109, type: !492)
!15850 = !DILocalVariable(name: "off", scope: !15840, file: !14752, line: 116, type: !114)
!15851 = !DILocalVariable(name: "rdivisor", scope: !15852, file: !14752, line: 119, type: !113)
!15852 = distinct !DILexicalBlock(scope: !15853, file: !14752, line: 118, column: 18)
!15853 = distinct !DILexicalBlock(scope: !15840, file: !14752, line: 118, column: 6)
!15854 = !DILocation(line: 0, scope: !15840, inlinedAt: !15855)
!15855 = distinct !DILocation(line: 392, column: 9, scope: !15835)
!15856 = !DILocation(line: 143, column: 25, scope: !15857, inlinedAt: !15855)
!15857 = distinct !DILexicalBlock(scope: !15858, file: !14752, line: 142, column: 17)
!15858 = distinct !DILexicalBlock(scope: !15859, file: !14752, line: 142, column: 7)
!15859 = distinct !DILexicalBlock(scope: !15860, file: !14752, line: 141, column: 24)
!15860 = distinct !DILexicalBlock(scope: !15861, file: !14752, line: 141, column: 13)
!15861 = distinct !DILexicalBlock(scope: !15840, file: !14752, line: 134, column: 6)
!15862 = !DILocation(line: 392, column: 2, scope: !15835)
!15863 = distinct !DISubprogram(name: "z_time_slice", scope: !2466, file: !2466, line: 502, type: !9685, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15864)
!15864 = !{!15865, !15866}
!15865 = !DILocalVariable(name: "ticks", arg: 1, scope: !15863, file: !2466, line: 502, type: !105)
!15866 = !DILocalVariable(name: "key", scope: !15863, file: !2466, line: 511, type: !15772)
!15867 = !DILocation(line: 0, scope: !15863)
!15868 = !DILocation(line: 0, scope: !15780, inlinedAt: !15869)
!15869 = distinct !DILocation(line: 511, column: 25, scope: !15863)
!15870 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !15871)
!15871 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !15869)
!15872 = !DILocation(line: 0, scope: !15789, inlinedAt: !15871)
!15873 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !15869)
!15874 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !15869)
!15875 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !15869)
!15876 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !15869)
!15877 = !DILocation(line: 514, column: 6, scope: !15878)
!15878 = distinct !DILexicalBlock(scope: !15863, file: !2466, line: 514, column: 6)
!15879 = !DILocation(line: 514, column: 25, scope: !15878)
!15880 = !DILocation(line: 514, column: 22, scope: !15878)
!15881 = !DILocation(line: 514, column: 6, scope: !15863)
!15882 = !DILocation(line: 515, column: 3, scope: !15883)
!15883 = distinct !DILexicalBlock(scope: !15878, file: !2466, line: 514, column: 35)
!15884 = !DILocation(line: 0, scope: !15814, inlinedAt: !15885)
!15885 = distinct !DILocation(line: 516, column: 3, scope: !15883)
!15886 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !15885)
!15887 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !15885)
!15888 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !15885)
!15889 = !DILocation(line: 0, scope: !15828, inlinedAt: !15890)
!15890 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !15885)
!15891 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !15890)
!15892 = !DILocation(line: 517, column: 3, scope: !15883)
!15893 = !DILocation(line: 519, column: 18, scope: !15863)
!15894 = !DILocation(line: 522, column: 6, scope: !15895)
!15895 = distinct !DILexicalBlock(scope: !15863, file: !2466, line: 522, column: 6)
!15896 = !DILocation(line: 522, column: 27, scope: !15895)
!15897 = !DILocation(line: 522, column: 30, scope: !15895)
!15898 = !DILocation(line: 522, column: 6, scope: !15863)
!15899 = !DILocation(line: 523, column: 30, scope: !15900)
!15900 = distinct !DILexicalBlock(scope: !15901, file: !2466, line: 523, column: 7)
!15901 = distinct !DILexicalBlock(scope: !15895, file: !2466, line: 522, column: 51)
!15902 = !DILocation(line: 523, column: 13, scope: !15900)
!15903 = !DILocation(line: 523, column: 7, scope: !15901)
!15904 = !DILocation(line: 530, column: 10, scope: !15905)
!15905 = distinct !DILexicalBlock(scope: !15900, file: !2466, line: 523, column: 43)
!15906 = !DILocation(line: 531, column: 3, scope: !15905)
!15907 = !DILocation(line: 532, column: 30, scope: !15908)
!15908 = distinct !DILexicalBlock(scope: !15900, file: !2466, line: 531, column: 10)
!15909 = !DILocation(line: 535, column: 29, scope: !15910)
!15910 = distinct !DILexicalBlock(scope: !15895, file: !2466, line: 534, column: 9)
!15911 = !DILocation(line: 0, scope: !15814, inlinedAt: !15912)
!15912 = distinct !DILocation(line: 537, column: 2, scope: !15863)
!15913 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !15912)
!15914 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !15912)
!15915 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !15912)
!15916 = !DILocation(line: 0, scope: !15828, inlinedAt: !15917)
!15917 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !15912)
!15918 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !15917)
!15919 = !DILocation(line: 538, column: 1, scope: !15863)
!15920 = distinct !DISubprogram(name: "sliceable", scope: !2466, file: !2466, line: 468, type: !15921, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15923)
!15921 = !DISubroutineType(types: !15922)
!15922 = !{!492, !2359}
!15923 = !{!15924, !15925}
!15924 = !DILocalVariable(name: "thread", arg: 1, scope: !15920, file: !2466, line: 468, type: !2359)
!15925 = !DILocalVariable(name: "ret", scope: !15920, file: !2466, line: 470, type: !492)
!15926 = !DILocation(line: 0, scope: !15920)
!15927 = !DILocation(line: 470, column: 13, scope: !15920)
!15928 = !DILocation(line: 471, column: 3, scope: !15920)
!15929 = !DILocation(line: 471, column: 7, scope: !15920)
!15930 = !DILocation(line: 472, column: 3, scope: !15920)
!15931 = !DILocation(line: 472, column: 37, scope: !15920)
!15932 = !DILocation(line: 472, column: 24, scope: !15920)
!15933 = !DILocation(line: 472, column: 43, scope: !15920)
!15934 = !DILocation(line: 472, column: 7, scope: !15920)
!15935 = !DILocation(line: 473, column: 3, scope: !15920)
!15936 = !DILocation(line: 473, column: 7, scope: !15920)
!15937 = !DILocation(line: 473, column: 6, scope: !15920)
!15938 = !DILocation(line: 479, column: 2, scope: !15920)
!15939 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2466, file: !2466, line: 482, type: !15940, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15942)
!15940 = !DISubroutineType(types: !15941)
!15941 = !{!15772, !15772}
!15942 = !{!15943, !15944}
!15943 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15939, file: !2466, line: 482, type: !15772)
!15944 = !DILocalVariable(name: "curr", scope: !15939, file: !2466, line: 484, type: !2359)
!15945 = !DILocation(line: 0, scope: !15939)
!15946 = !DILocation(line: 484, column: 26, scope: !15939)
!15947 = !DILocation(line: 493, column: 7, scope: !15948)
!15948 = distinct !DILexicalBlock(scope: !15939, file: !2466, line: 493, column: 6)
!15949 = !DILocation(line: 493, column: 6, scope: !15939)
!15950 = !DILocation(line: 494, column: 3, scope: !15951)
!15951 = distinct !DILexicalBlock(scope: !15948, file: !2466, line: 493, column: 49)
!15952 = !DILocation(line: 495, column: 2, scope: !15951)
!15953 = !DILocation(line: 496, column: 2, scope: !15939)
!15954 = !DILocation(line: 499, column: 1, scope: !15939)
!15955 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14135, file: !14135, line: 106, type: !15921, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15956)
!15956 = !{!15957, !15958}
!15957 = !DILocalVariable(name: "thread", arg: 1, scope: !15955, file: !14135, line: 106, type: !2359)
!15958 = !DILocalVariable(name: "state", scope: !15955, file: !14135, line: 108, type: !169)
!15959 = !DILocation(line: 0, scope: !15955)
!15960 = !DILocation(line: 108, column: 31, scope: !15955)
!15961 = !DILocation(line: 110, column: 16, scope: !15955)
!15962 = !DILocation(line: 111, column: 41, scope: !15955)
!15963 = !DILocation(line: 110, column: 2, scope: !15955)
!15964 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2466, file: !2466, line: 393, type: !15738, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15965)
!15965 = !{!15966}
!15966 = !DILocalVariable(name: "thread", arg: 1, scope: !15964, file: !2466, line: 393, type: !2359)
!15967 = !DILocation(line: 0, scope: !15964)
!15968 = !DILocation(line: 395, column: 6, scope: !15969)
!15969 = distinct !DILexicalBlock(scope: !15964, file: !2466, line: 395, column: 6)
!15970 = !DILocation(line: 395, column: 6, scope: !15964)
!15971 = !DILocalVariable(name: "thread", arg: 1, scope: !15972, file: !2466, line: 264, type: !2359)
!15972 = distinct !DISubprogram(name: "dequeue_thread", scope: !2466, file: !2466, line: 264, type: !15738, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15973)
!15973 = !{!15971}
!15974 = !DILocation(line: 0, scope: !15972, inlinedAt: !15975)
!15975 = distinct !DILocation(line: 396, column: 3, scope: !15976)
!15976 = distinct !DILexicalBlock(scope: !15969, file: !2466, line: 395, column: 34)
!15977 = !DILocation(line: 266, column: 15, scope: !15972, inlinedAt: !15975)
!15978 = !DILocation(line: 266, column: 28, scope: !15972, inlinedAt: !15975)
!15979 = !DILocalVariable(name: "thread", arg: 1, scope: !15980, file: !2466, line: 232, type: !2359)
!15980 = distinct !DISubprogram(name: "runq_remove", scope: !2466, file: !2466, line: 232, type: !15738, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15981)
!15981 = !{!15979}
!15982 = !DILocation(line: 0, scope: !15980, inlinedAt: !15983)
!15983 = distinct !DILocation(line: 268, column: 3, scope: !15984, inlinedAt: !15975)
!15984 = distinct !DILexicalBlock(scope: !15985, file: !2466, line: 267, column: 35)
!15985 = distinct !DILexicalBlock(scope: !15972, file: !2466, line: 267, column: 6)
!15986 = !DILocation(line: 234, column: 2, scope: !15980, inlinedAt: !15983)
!15987 = !DILocation(line: 397, column: 2, scope: !15976)
!15988 = !DILocalVariable(name: "thread", arg: 1, scope: !15989, file: !2466, line: 250, type: !2359)
!15989 = distinct !DISubprogram(name: "queue_thread", scope: !2466, file: !2466, line: 250, type: !15738, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15990)
!15990 = !{!15988}
!15991 = !DILocation(line: 0, scope: !15989, inlinedAt: !15992)
!15992 = distinct !DILocation(line: 398, column: 2, scope: !15964)
!15993 = !DILocation(line: 252, column: 15, scope: !15989, inlinedAt: !15992)
!15994 = !DILocation(line: 252, column: 28, scope: !15989, inlinedAt: !15992)
!15995 = !DILocalVariable(name: "thread", arg: 1, scope: !15996, file: !2466, line: 227, type: !2359)
!15996 = distinct !DISubprogram(name: "runq_add", scope: !2466, file: !2466, line: 227, type: !15738, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !15997)
!15997 = !{!15995}
!15998 = !DILocation(line: 0, scope: !15996, inlinedAt: !15999)
!15999 = distinct !DILocation(line: 254, column: 3, scope: !16000, inlinedAt: !15992)
!16000 = distinct !DILexicalBlock(scope: !16001, file: !2466, line: 253, column: 35)
!16001 = distinct !DILexicalBlock(scope: !15989, file: !2466, line: 253, column: 6)
!16002 = !DILocalVariable(name: "pq", arg: 1, scope: !16003, file: !2466, line: 181, type: !16006)
!16003 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2466, file: !2466, line: 181, type: !16004, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16007)
!16004 = !DISubroutineType(types: !16005)
!16005 = !{null, !16006, !2359}
!16006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 32)
!16007 = !{!16002, !16008, !16009}
!16008 = !DILocalVariable(name: "thread", arg: 2, scope: !16003, file: !2466, line: 182, type: !2359)
!16009 = !DILocalVariable(name: "t", scope: !16003, file: !2466, line: 184, type: !2359)
!16010 = !DILocation(line: 0, scope: !16003, inlinedAt: !16011)
!16011 = distinct !DILocation(line: 229, column: 2, scope: !15996, inlinedAt: !15999)
!16012 = !DILocation(line: 186, column: 2, scope: !16013, inlinedAt: !16011)
!16013 = distinct !DILexicalBlock(scope: !16014, file: !2466, line: 186, column: 2)
!16014 = distinct !DILexicalBlock(scope: !16003, file: !2466, line: 186, column: 2)
!16015 = !DILocation(line: 186, column: 2, scope: !16014, inlinedAt: !16011)
!16016 = !DILocation(line: 186, column: 2, scope: !16017, inlinedAt: !16011)
!16017 = distinct !DILexicalBlock(scope: !16013, file: !2466, line: 186, column: 2)
!16018 = !DILocation(line: 188, column: 2, scope: !16019, inlinedAt: !16011)
!16019 = distinct !DILexicalBlock(scope: !16003, file: !2466, line: 188, column: 2)
!16020 = !DILocation(line: 188, column: 2, scope: !16021, inlinedAt: !16011)
!16021 = distinct !DILexicalBlock(scope: !16019, file: !2466, line: 188, column: 2)
!16022 = !DILocation(line: 0, scope: !16019, inlinedAt: !16011)
!16023 = !DILocation(line: 189, column: 7, scope: !16024, inlinedAt: !16011)
!16024 = distinct !DILexicalBlock(scope: !16025, file: !2466, line: 189, column: 7)
!16025 = distinct !DILexicalBlock(scope: !16021, file: !2466, line: 188, column: 56)
!16026 = !DILocation(line: 189, column: 35, scope: !16024, inlinedAt: !16011)
!16027 = !DILocation(line: 189, column: 7, scope: !16025, inlinedAt: !16011)
!16028 = !DILocation(line: 191, column: 21, scope: !16029, inlinedAt: !16011)
!16029 = distinct !DILexicalBlock(scope: !16024, file: !2466, line: 189, column: 40)
!16030 = !DILocation(line: 190, column: 4, scope: !16029, inlinedAt: !16011)
!16031 = !DILocation(line: 192, column: 4, scope: !16029, inlinedAt: !16011)
!16032 = distinct !{!16032, !16018, !16033}
!16033 = !DILocation(line: 194, column: 2, scope: !16019, inlinedAt: !16011)
!16034 = !DILocation(line: 196, column: 37, scope: !16003, inlinedAt: !16011)
!16035 = !DILocation(line: 196, column: 2, scope: !16003, inlinedAt: !16011)
!16036 = !DILocation(line: 197, column: 1, scope: !16003, inlinedAt: !16011)
!16037 = !DILocation(line: 399, column: 25, scope: !15964)
!16038 = !DILocation(line: 399, column: 22, scope: !15964)
!16039 = !DILocation(line: 399, column: 2, scope: !15964)
!16040 = !DILocation(line: 400, column: 1, scope: !15964)
!16041 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14135, file: !14135, line: 136, type: !15921, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16042)
!16042 = !{!16043}
!16043 = !DILocalVariable(name: "thread", arg: 1, scope: !16041, file: !14135, line: 136, type: !2359)
!16044 = !DILocation(line: 0, scope: !16041)
!16045 = !DILocation(line: 138, column: 9, scope: !16041)
!16046 = !DILocation(line: 138, column: 2, scope: !16041)
!16047 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2466, file: !2466, line: 1137, type: !16004, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16048)
!16048 = !{!16049, !16050}
!16049 = !DILocalVariable(name: "pq", arg: 1, scope: !16047, file: !2466, line: 1137, type: !16006)
!16050 = !DILocalVariable(name: "thread", arg: 2, scope: !16047, file: !2466, line: 1137, type: !2359)
!16051 = !DILocation(line: 0, scope: !16047)
!16052 = !DILocation(line: 1139, column: 2, scope: !16053)
!16053 = distinct !DILexicalBlock(scope: !16054, file: !2466, line: 1139, column: 2)
!16054 = distinct !DILexicalBlock(scope: !16047, file: !2466, line: 1139, column: 2)
!16055 = !DILocation(line: 1139, column: 2, scope: !16054)
!16056 = !DILocation(line: 1139, column: 2, scope: !16057)
!16057 = distinct !DILexicalBlock(scope: !16053, file: !2466, line: 1139, column: 2)
!16058 = !DILocation(line: 1141, column: 33, scope: !16047)
!16059 = !DILocation(line: 1141, column: 2, scope: !16047)
!16060 = !DILocation(line: 1142, column: 1, scope: !16047)
!16061 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14135, file: !14135, line: 83, type: !15921, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16062)
!16062 = !{!16063}
!16063 = !DILocalVariable(name: "thread", arg: 1, scope: !16061, file: !14135, line: 83, type: !2359)
!16064 = !DILocation(line: 0, scope: !16061)
!16065 = !DILocation(line: 89, column: 16, scope: !16061)
!16066 = !DILocation(line: 89, column: 2, scope: !16061)
!16067 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !16068, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16070)
!16068 = !DISubroutineType(types: !16069)
!16069 = !{!2462, !16006}
!16070 = !{!16071}
!16071 = !DILocalVariable(name: "list", arg: 1, scope: !16067, file: !137, line: 294, type: !16006)
!16072 = !DILocation(line: 0, scope: !16067)
!16073 = !DILocation(line: 296, column: 9, scope: !16067)
!16074 = !DILocation(line: 296, column: 49, scope: !16067)
!16075 = !DILocation(line: 296, column: 2, scope: !16067)
!16076 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !137, file: !137, line: 443, type: !16077, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16079)
!16077 = !DISubroutineType(types: !16078)
!16078 = !{null, !2462, !2462}
!16079 = !{!16080, !16081, !16082}
!16080 = !DILocalVariable(name: "successor", arg: 1, scope: !16076, file: !137, line: 443, type: !2462)
!16081 = !DILocalVariable(name: "node", arg: 2, scope: !16076, file: !137, line: 443, type: !2462)
!16082 = !DILocalVariable(name: "prev", scope: !16076, file: !137, line: 445, type: !16083)
!16083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2462)
!16084 = !DILocation(line: 0, scope: !16076)
!16085 = !DILocation(line: 445, column: 39, scope: !16076)
!16086 = !DILocation(line: 447, column: 8, scope: !16076)
!16087 = !DILocation(line: 447, column: 13, scope: !16076)
!16088 = !DILocation(line: 448, column: 8, scope: !16076)
!16089 = !DILocation(line: 448, column: 13, scope: !16076)
!16090 = !DILocation(line: 449, column: 8, scope: !16076)
!16091 = !DILocation(line: 449, column: 13, scope: !16076)
!16092 = !DILocation(line: 450, column: 18, scope: !16076)
!16093 = !DILocation(line: 451, column: 1, scope: !16076)
!16094 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !137, file: !137, line: 341, type: !16095, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16097)
!16095 = !DISubroutineType(types: !16096)
!16096 = !{!2462, !16006, !2462}
!16097 = !{!16098, !16099}
!16098 = !DILocalVariable(name: "list", arg: 1, scope: !16094, file: !137, line: 341, type: !16006)
!16099 = !DILocalVariable(name: "node", arg: 2, scope: !16094, file: !137, line: 342, type: !2462)
!16100 = !DILocation(line: 0, scope: !16094)
!16101 = !DILocation(line: 344, column: 15, scope: !16094)
!16102 = !DILocation(line: 344, column: 9, scope: !16094)
!16103 = !DILocation(line: 344, column: 26, scope: !16094)
!16104 = !DILocation(line: 344, column: 2, scope: !16094)
!16105 = distinct !DISubprogram(name: "sys_dlist_append", scope: !137, file: !137, line: 404, type: !16106, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16108)
!16106 = !DISubroutineType(types: !16107)
!16107 = !{null, !16006, !2462}
!16108 = !{!16109, !16110, !16111}
!16109 = !DILocalVariable(name: "list", arg: 1, scope: !16105, file: !137, line: 404, type: !16006)
!16110 = !DILocalVariable(name: "node", arg: 2, scope: !16105, file: !137, line: 404, type: !2462)
!16111 = !DILocalVariable(name: "tail", scope: !16105, file: !137, line: 406, type: !16083)
!16112 = !DILocation(line: 0, scope: !16105)
!16113 = !DILocation(line: 406, column: 34, scope: !16105)
!16114 = !DILocation(line: 408, column: 8, scope: !16105)
!16115 = !DILocation(line: 408, column: 13, scope: !16105)
!16116 = !DILocation(line: 409, column: 8, scope: !16105)
!16117 = !DILocation(line: 409, column: 13, scope: !16105)
!16118 = !DILocation(line: 411, column: 8, scope: !16105)
!16119 = !DILocation(line: 411, column: 13, scope: !16105)
!16120 = !DILocation(line: 412, column: 13, scope: !16105)
!16121 = !DILocation(line: 413, column: 1, scope: !16105)
!16122 = distinct !DISubprogram(name: "update_cache", scope: !2466, file: !2466, line: 559, type: !9685, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16123)
!16123 = !{!16124, !16125}
!16124 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !16122, file: !2466, line: 559, type: !105)
!16125 = !DILocalVariable(name: "thread", scope: !16122, file: !2466, line: 562, type: !2359)
!16126 = !DILocation(line: 0, scope: !16122)
!16127 = !DILocation(line: 239, column: 9, scope: !16128, inlinedAt: !16131)
!16128 = distinct !DISubprogram(name: "runq_best", scope: !2466, file: !2466, line: 237, type: !16129, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !397)
!16129 = !DISubroutineType(types: !16130)
!16130 = !{!2359}
!16131 = distinct !DILocation(line: 314, column: 28, scope: !16132, inlinedAt: !16136)
!16132 = distinct !DISubprogram(name: "next_up", scope: !2466, file: !2466, line: 312, type: !16129, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16133)
!16133 = !{!16134, !16135}
!16134 = !DILocalVariable(name: "thread", scope: !16132, file: !2466, line: 314, type: !2359)
!16135 = !DILocalVariable(name: "mirqp", scope: !16132, file: !2466, line: 322, type: !2359)
!16136 = distinct !DILocation(line: 562, column: 28, scope: !16122)
!16137 = !DILocation(line: 0, scope: !16132, inlinedAt: !16136)
!16138 = !DILocation(line: 322, column: 41, scope: !16132, inlinedAt: !16136)
!16139 = !DILocation(line: 324, column: 12, scope: !16140, inlinedAt: !16136)
!16140 = distinct !DILexicalBlock(scope: !16132, file: !2466, line: 324, column: 6)
!16141 = !DILocation(line: 324, column: 20, scope: !16140, inlinedAt: !16136)
!16142 = !DILocation(line: 324, column: 31, scope: !16140, inlinedAt: !16136)
!16143 = !DILocation(line: 324, column: 39, scope: !16140, inlinedAt: !16136)
!16144 = !DILocation(line: 324, column: 43, scope: !16140, inlinedAt: !16136)
!16145 = !DILocation(line: 324, column: 6, scope: !16132, inlinedAt: !16136)
!16146 = !DILocation(line: 325, column: 8, scope: !16147, inlinedAt: !16136)
!16147 = distinct !DILexicalBlock(scope: !16148, file: !2466, line: 325, column: 7)
!16148 = distinct !DILexicalBlock(scope: !16140, file: !2466, line: 324, column: 64)
!16149 = !DILocation(line: 325, column: 7, scope: !16148, inlinedAt: !16136)
!16150 = !DILocation(line: 328, column: 36, scope: !16151, inlinedAt: !16136)
!16151 = distinct !DILexicalBlock(scope: !16147, file: !2466, line: 327, column: 10)
!16152 = !DILocation(line: 340, column: 17, scope: !16132, inlinedAt: !16136)
!16153 = !DILocation(line: 340, column: 9, scope: !16132, inlinedAt: !16136)
!16154 = !DILocalVariable(name: "thread", arg: 1, scope: !16155, file: !2466, line: 127, type: !2359)
!16155 = distinct !DISubprogram(name: "should_preempt", scope: !2466, file: !2466, line: 127, type: !16156, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16158)
!16156 = !DISubroutineType(types: !16157)
!16157 = !{!492, !2359, !105}
!16158 = !{!16154, !16159}
!16159 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !16155, file: !2466, line: 128, type: !105)
!16160 = !DILocation(line: 0, scope: !16155, inlinedAt: !16161)
!16161 = distinct !DILocation(line: 564, column: 6, scope: !16162)
!16162 = distinct !DILexicalBlock(scope: !16122, file: !2466, line: 564, column: 6)
!16163 = !DILocation(line: 133, column: 17, scope: !16164, inlinedAt: !16161)
!16164 = distinct !DILexicalBlock(scope: !16155, file: !2466, line: 133, column: 6)
!16165 = !DILocation(line: 0, scope: !16162)
!16166 = !DILocation(line: 133, column: 6, scope: !16155, inlinedAt: !16161)
!16167 = !DILocation(line: 137, column: 2, scope: !16168, inlinedAt: !16161)
!16168 = distinct !DILexicalBlock(scope: !16169, file: !2466, line: 137, column: 2)
!16169 = distinct !DILexicalBlock(scope: !16155, file: !2466, line: 137, column: 2)
!16170 = !DILocation(line: 137, column: 2, scope: !16169, inlinedAt: !16161)
!16171 = !DILocation(line: 137, column: 2, scope: !16172, inlinedAt: !16161)
!16172 = distinct !DILexicalBlock(scope: !16168, file: !2466, line: 137, column: 2)
!16173 = !DILocation(line: 140, column: 6, scope: !16174, inlinedAt: !16161)
!16174 = distinct !DILexicalBlock(scope: !16155, file: !2466, line: 140, column: 6)
!16175 = !DILocation(line: 140, column: 6, scope: !16155, inlinedAt: !16161)
!16176 = !DILocation(line: 150, column: 9, scope: !16177, inlinedAt: !16161)
!16177 = distinct !DILexicalBlock(scope: !16155, file: !2466, line: 149, column: 6)
!16178 = !DILocation(line: 149, column: 6, scope: !16155, inlinedAt: !16161)
!16179 = !DILocation(line: 157, column: 6, scope: !16180, inlinedAt: !16161)
!16180 = distinct !DILexicalBlock(scope: !16155, file: !2466, line: 157, column: 6)
!16181 = !DILocation(line: 157, column: 27, scope: !16180, inlinedAt: !16161)
!16182 = !DILocation(line: 157, column: 30, scope: !16180, inlinedAt: !16161)
!16183 = !DILocation(line: 564, column: 6, scope: !16122)
!16184 = !DILocation(line: 566, column: 14, scope: !16185)
!16185 = distinct !DILexicalBlock(scope: !16186, file: !2466, line: 566, column: 7)
!16186 = distinct !DILexicalBlock(scope: !16162, file: !2466, line: 564, column: 42)
!16187 = !DILocation(line: 566, column: 7, scope: !16186)
!16188 = !DILocation(line: 567, column: 4, scope: !16189)
!16189 = distinct !DILexicalBlock(scope: !16185, file: !2466, line: 566, column: 27)
!16190 = !DILocation(line: 568, column: 3, scope: !16189)
!16191 = !DILocation(line: 570, column: 3, scope: !16186)
!16192 = !DILocation(line: 572, column: 2, scope: !16186)
!16193 = !DILocation(line: 585, column: 1, scope: !16122)
!16194 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2466, file: !2466, line: 1144, type: !16195, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16197)
!16195 = !DISubroutineType(types: !16196)
!16196 = !{!2359, !16006}
!16197 = !{!16198, !16199, !16200}
!16198 = !DILocalVariable(name: "pq", arg: 1, scope: !16194, file: !2466, line: 1144, type: !16006)
!16199 = !DILocalVariable(name: "thread", scope: !16194, file: !2466, line: 1146, type: !2359)
!16200 = !DILocalVariable(name: "n", scope: !16194, file: !2466, line: 1147, type: !2462)
!16201 = !DILocation(line: 0, scope: !16194)
!16202 = !DILocation(line: 1147, column: 19, scope: !16194)
!16203 = !DILocation(line: 1152, column: 2, scope: !16194)
!16204 = distinct !DISubprogram(name: "is_metairq", scope: !2466, file: !2466, line: 68, type: !15756, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16205)
!16205 = !{!16206}
!16206 = !DILocalVariable(name: "thread", arg: 1, scope: !16204, file: !2466, line: 68, type: !2359)
!16207 = !DILocation(line: 0, scope: !16204)
!16208 = !DILocation(line: 71, column: 23, scope: !16204)
!16209 = !DILocation(line: 72, column: 3, scope: !16204)
!16210 = !DILocation(line: 71, column: 2, scope: !16204)
!16211 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14135, file: !14135, line: 115, type: !15921, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16212)
!16212 = !{!16213}
!16213 = !DILocalVariable(name: "thread", arg: 1, scope: !16211, file: !14135, line: 115, type: !2359)
!16214 = !DILocation(line: 0, scope: !16211)
!16215 = !DILocation(line: 117, column: 46, scope: !16211)
!16216 = !DILocation(line: 117, column: 10, scope: !16211)
!16217 = !DILocation(line: 117, column: 9, scope: !16211)
!16218 = !DILocation(line: 117, column: 2, scope: !16211)
!16219 = distinct !DISubprogram(name: "is_preempt", scope: !2466, file: !2466, line: 62, type: !15756, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16220)
!16220 = !{!16221}
!16221 = !DILocalVariable(name: "thread", arg: 1, scope: !16219, file: !2466, line: 62, type: !2359)
!16222 = !DILocation(line: 0, scope: !16219)
!16223 = !DILocation(line: 65, column: 22, scope: !16219)
!16224 = !DILocation(line: 65, column: 30, scope: !16219)
!16225 = !DILocation(line: 65, column: 2, scope: !16219)
!16226 = distinct !DISubprogram(name: "update_metairq_preempt", scope: !2466, file: !2466, line: 545, type: !15738, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16227)
!16227 = !{!16228}
!16228 = !DILocalVariable(name: "thread", arg: 1, scope: !16226, file: !2466, line: 545, type: !2359)
!16229 = !DILocation(line: 0, scope: !16226)
!16230 = !DILocation(line: 548, column: 6, scope: !16231)
!16231 = distinct !DILexicalBlock(scope: !16226, file: !2466, line: 548, column: 6)
!16232 = !DILocation(line: 548, column: 25, scope: !16231)
!16233 = !DILocation(line: 548, column: 40, scope: !16231)
!16234 = !DILocation(line: 548, column: 29, scope: !16231)
!16235 = !DILocation(line: 548, column: 50, scope: !16231)
!16236 = !DILocation(line: 549, column: 7, scope: !16231)
!16237 = !DILocation(line: 548, column: 6, scope: !16226)
!16238 = !DILocation(line: 552, column: 37, scope: !16239)
!16239 = distinct !DILexicalBlock(scope: !16231, file: !2466, line: 552, column: 13)
!16240 = !DILocation(line: 552, column: 13, scope: !16231)
!16241 = !DILocation(line: 0, scope: !16231)
!16242 = !DILocation(line: 557, column: 1, scope: !16226)
!16243 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14564, file: !14564, line: 35, type: !16244, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16248)
!16244 = !DISubroutineType(types: !16245)
!16245 = !{!492, !16246}
!16246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16247, size: 32)
!16247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2410)
!16248 = !{!16249}
!16249 = !DILocalVariable(name: "to", arg: 1, scope: !16243, file: !14564, line: 35, type: !16246)
!16250 = !DILocation(line: 0, scope: !16243)
!16251 = !DILocation(line: 37, column: 35, scope: !16243)
!16252 = !DILocation(line: 37, column: 10, scope: !16243)
!16253 = !DILocation(line: 37, column: 9, scope: !16243)
!16254 = !DILocation(line: 37, column: 2, scope: !16243)
!16255 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !137, file: !137, line: 225, type: !16256, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16260)
!16256 = !DISubroutineType(types: !16257)
!16257 = !{!492, !16258}
!16258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16259, size: 32)
!16259 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2369)
!16260 = !{!16261}
!16261 = !DILocalVariable(name: "node", arg: 1, scope: !16255, file: !137, line: 225, type: !16258)
!16262 = !DILocation(line: 0, scope: !16255)
!16263 = !DILocation(line: 227, column: 15, scope: !16255)
!16264 = !DILocation(line: 227, column: 20, scope: !16255)
!16265 = !DILocation(line: 227, column: 2, scope: !16255)
!16266 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !137, file: !137, line: 325, type: !16095, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16267)
!16267 = !{!16268, !16269}
!16268 = !DILocalVariable(name: "list", arg: 1, scope: !16266, file: !137, line: 325, type: !16006)
!16269 = !DILocalVariable(name: "node", arg: 2, scope: !16266, file: !137, line: 326, type: !2462)
!16270 = !DILocation(line: 0, scope: !16266)
!16271 = !DILocation(line: 328, column: 24, scope: !16266)
!16272 = !DILocation(line: 328, column: 15, scope: !16266)
!16273 = !DILocation(line: 328, column: 9, scope: !16266)
!16274 = !DILocation(line: 328, column: 45, scope: !16266)
!16275 = !DILocation(line: 328, column: 2, scope: !16266)
!16276 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !16277, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16279)
!16277 = !DISubroutineType(types: !16278)
!16278 = !{!492, !16006}
!16279 = !{!16280}
!16280 = !DILocalVariable(name: "list", arg: 1, scope: !16276, file: !137, line: 266, type: !16006)
!16281 = !DILocation(line: 0, scope: !16276)
!16282 = !DILocation(line: 268, column: 15, scope: !16276)
!16283 = !DILocation(line: 268, column: 20, scope: !16276)
!16284 = !DILocation(line: 268, column: 2, scope: !16276)
!16285 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !137, file: !137, line: 496, type: !16286, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16288)
!16286 = !DISubroutineType(types: !16287)
!16287 = !{null, !2462}
!16288 = !{!16289, !16290, !16291}
!16289 = !DILocalVariable(name: "node", arg: 1, scope: !16285, file: !137, line: 496, type: !2462)
!16290 = !DILocalVariable(name: "prev", scope: !16285, file: !137, line: 498, type: !16083)
!16291 = !DILocalVariable(name: "next", scope: !16285, file: !137, line: 499, type: !16083)
!16292 = !DILocation(line: 0, scope: !16285)
!16293 = !DILocation(line: 498, column: 34, scope: !16285)
!16294 = !DILocation(line: 499, column: 34, scope: !16285)
!16295 = !DILocation(line: 501, column: 8, scope: !16285)
!16296 = !DILocation(line: 501, column: 13, scope: !16285)
!16297 = !DILocation(line: 502, column: 8, scope: !16285)
!16298 = !DILocation(line: 502, column: 13, scope: !16285)
!16299 = !DILocation(line: 503, column: 2, scope: !16285)
!16300 = !DILocation(line: 504, column: 1, scope: !16285)
!16301 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !16286, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16302)
!16302 = !{!16303}
!16303 = !DILocalVariable(name: "node", arg: 1, scope: !16301, file: !137, line: 211, type: !2462)
!16304 = !DILocation(line: 0, scope: !16301)
!16305 = !DILocation(line: 213, column: 8, scope: !16301)
!16306 = !DILocation(line: 213, column: 13, scope: !16301)
!16307 = !DILocation(line: 214, column: 8, scope: !16301)
!16308 = !DILocation(line: 214, column: 13, scope: !16301)
!16309 = !DILocation(line: 215, column: 1, scope: !16301)
!16310 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14135, file: !14135, line: 131, type: !16311, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16313)
!16311 = !DISubroutineType(types: !16312)
!16312 = !{!492, !2359, !113}
!16313 = !{!16314, !16315}
!16314 = !DILocalVariable(name: "thread", arg: 1, scope: !16310, file: !14135, line: 131, type: !2359)
!16315 = !DILocalVariable(name: "state", arg: 2, scope: !16310, file: !14135, line: 131, type: !113)
!16316 = !DILocation(line: 0, scope: !16310)
!16317 = !DILocation(line: 133, column: 23, scope: !16310)
!16318 = !DILocation(line: 133, column: 10, scope: !16310)
!16319 = !DILocation(line: 133, column: 36, scope: !16310)
!16320 = !DILocation(line: 133, column: 45, scope: !16310)
!16321 = !DILocation(line: 133, column: 2, scope: !16310)
!16322 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14135, file: !14135, line: 211, type: !16323, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16325)
!16323 = !DISubroutineType(types: !16324)
!16324 = !{!492, !105, !105}
!16325 = !{!16326, !16327}
!16326 = !DILocalVariable(name: "prio", arg: 1, scope: !16322, file: !14135, line: 211, type: !105)
!16327 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16322, file: !14135, line: 211, type: !105)
!16328 = !DILocation(line: 0, scope: !16322)
!16329 = !DILocation(line: 213, column: 9, scope: !16322)
!16330 = !DILocation(line: 213, column: 2, scope: !16322)
!16331 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14135, file: !14135, line: 206, type: !16323, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16332)
!16332 = !{!16333, !16334}
!16333 = !DILocalVariable(name: "prio1", arg: 1, scope: !16331, file: !14135, line: 206, type: !105)
!16334 = !DILocalVariable(name: "prio2", arg: 2, scope: !16331, file: !14135, line: 206, type: !105)
!16335 = !DILocation(line: 0, scope: !16331)
!16336 = !DILocation(line: 208, column: 15, scope: !16331)
!16337 = !DILocation(line: 208, column: 2, scope: !16331)
!16338 = distinct !DISubprogram(name: "z_ready_thread", scope: !2466, file: !2466, line: 635, type: !15738, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16339)
!16339 = !{!16340, !16341, !16343}
!16340 = !DILocalVariable(name: "thread", arg: 1, scope: !16338, file: !2466, line: 635, type: !2359)
!16341 = !DILocalVariable(name: "__i", scope: !16342, file: !2466, line: 637, type: !15772)
!16342 = distinct !DILexicalBlock(scope: !16338, file: !2466, line: 637, column: 2)
!16343 = !DILocalVariable(name: "__key", scope: !16342, file: !2466, line: 637, type: !15772)
!16344 = !DILocation(line: 0, scope: !16338)
!16345 = !DILocation(line: 0, scope: !16342)
!16346 = !DILocation(line: 0, scope: !15780, inlinedAt: !16347)
!16347 = distinct !DILocation(line: 637, column: 2, scope: !16342)
!16348 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !16349)
!16349 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !16347)
!16350 = !DILocation(line: 0, scope: !15789, inlinedAt: !16349)
!16351 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !16347)
!16352 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !16347)
!16353 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !16347)
!16354 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !16347)
!16355 = !DILocation(line: 639, column: 4, scope: !16356)
!16356 = distinct !DILexicalBlock(scope: !16357, file: !2466, line: 638, column: 41)
!16357 = distinct !DILexicalBlock(scope: !16358, file: !2466, line: 638, column: 7)
!16358 = distinct !DILexicalBlock(scope: !16359, file: !2466, line: 637, column: 26)
!16359 = distinct !DILexicalBlock(scope: !16342, file: !2466, line: 637, column: 2)
!16360 = !DILocation(line: 0, scope: !15814, inlinedAt: !16361)
!16361 = distinct !DILocation(line: 637, column: 2, scope: !16359)
!16362 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !16361)
!16363 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !16361)
!16364 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !16361)
!16365 = !DILocation(line: 0, scope: !15828, inlinedAt: !16366)
!16366 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !16361)
!16367 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !16366)
!16368 = !DILocation(line: 642, column: 1, scope: !16338)
!16369 = distinct !DISubprogram(name: "ready_thread", scope: !2466, file: !2466, line: 617, type: !15738, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16370)
!16370 = !{!16371}
!16371 = !DILocalVariable(name: "thread", arg: 1, scope: !16369, file: !2466, line: 617, type: !2359)
!16372 = !DILocation(line: 0, scope: !16369)
!16373 = !DILocation(line: 626, column: 7, scope: !16374)
!16374 = distinct !DILexicalBlock(scope: !16369, file: !2466, line: 626, column: 6)
!16375 = !DILocation(line: 626, column: 34, scope: !16374)
!16376 = !DILocation(line: 626, column: 37, scope: !16374)
!16377 = !DILocation(line: 626, column: 6, scope: !16369)
!16378 = !DILocation(line: 0, scope: !15989, inlinedAt: !16379)
!16379 = distinct !DILocation(line: 629, column: 3, scope: !16380)
!16380 = distinct !DILexicalBlock(scope: !16374, file: !2466, line: 626, column: 64)
!16381 = !DILocation(line: 252, column: 15, scope: !15989, inlinedAt: !16379)
!16382 = !DILocation(line: 252, column: 28, scope: !15989, inlinedAt: !16379)
!16383 = !DILocation(line: 0, scope: !15996, inlinedAt: !16384)
!16384 = distinct !DILocation(line: 254, column: 3, scope: !16000, inlinedAt: !16379)
!16385 = !DILocation(line: 0, scope: !16003, inlinedAt: !16386)
!16386 = distinct !DILocation(line: 229, column: 2, scope: !15996, inlinedAt: !16384)
!16387 = !DILocation(line: 186, column: 2, scope: !16013, inlinedAt: !16386)
!16388 = !DILocation(line: 186, column: 2, scope: !16014, inlinedAt: !16386)
!16389 = !DILocation(line: 186, column: 2, scope: !16017, inlinedAt: !16386)
!16390 = !DILocation(line: 188, column: 2, scope: !16019, inlinedAt: !16386)
!16391 = !DILocation(line: 188, column: 2, scope: !16021, inlinedAt: !16386)
!16392 = !DILocation(line: 0, scope: !16019, inlinedAt: !16386)
!16393 = !DILocation(line: 189, column: 7, scope: !16024, inlinedAt: !16386)
!16394 = !DILocation(line: 189, column: 35, scope: !16024, inlinedAt: !16386)
!16395 = !DILocation(line: 189, column: 7, scope: !16025, inlinedAt: !16386)
!16396 = !DILocation(line: 191, column: 21, scope: !16029, inlinedAt: !16386)
!16397 = !DILocation(line: 190, column: 4, scope: !16029, inlinedAt: !16386)
!16398 = !DILocation(line: 192, column: 4, scope: !16029, inlinedAt: !16386)
!16399 = distinct !{!16399, !16390, !16400}
!16400 = !DILocation(line: 194, column: 2, scope: !16019, inlinedAt: !16386)
!16401 = !DILocation(line: 196, column: 37, scope: !16003, inlinedAt: !16386)
!16402 = !DILocation(line: 196, column: 2, scope: !16003, inlinedAt: !16386)
!16403 = !DILocation(line: 197, column: 1, scope: !16003, inlinedAt: !16386)
!16404 = !DILocation(line: 630, column: 3, scope: !16380)
!16405 = !DILocation(line: 632, column: 2, scope: !16380)
!16406 = !DILocation(line: 633, column: 1, scope: !16369)
!16407 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14135, file: !14135, line: 120, type: !15921, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16408)
!16408 = !{!16409}
!16409 = !DILocalVariable(name: "thread", arg: 1, scope: !16407, file: !14135, line: 120, type: !2359)
!16410 = !DILocation(line: 0, scope: !16407)
!16411 = !DILocation(line: 122, column: 12, scope: !16407)
!16412 = !DILocation(line: 122, column: 62, scope: !16407)
!16413 = !DILocation(line: 123, column: 4, scope: !16407)
!16414 = !DILocation(line: 122, column: 2, scope: !16407)
!16415 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2466, file: !2466, line: 644, type: !15738, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16416)
!16416 = !{!16417, !16418, !16420}
!16417 = !DILocalVariable(name: "thread", arg: 1, scope: !16415, file: !2466, line: 644, type: !2359)
!16418 = !DILocalVariable(name: "__i", scope: !16419, file: !2466, line: 646, type: !15772)
!16419 = distinct !DILexicalBlock(scope: !16415, file: !2466, line: 646, column: 2)
!16420 = !DILocalVariable(name: "__key", scope: !16419, file: !2466, line: 646, type: !15772)
!16421 = !DILocation(line: 0, scope: !16415)
!16422 = !DILocation(line: 0, scope: !16419)
!16423 = !DILocation(line: 0, scope: !15780, inlinedAt: !16424)
!16424 = distinct !DILocation(line: 646, column: 2, scope: !16419)
!16425 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !16426)
!16426 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !16424)
!16427 = !DILocation(line: 0, scope: !15789, inlinedAt: !16426)
!16428 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !16424)
!16429 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !16424)
!16430 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !16424)
!16431 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !16424)
!16432 = !DILocation(line: 647, column: 3, scope: !16433)
!16433 = distinct !DILexicalBlock(scope: !16434, file: !2466, line: 646, column: 26)
!16434 = distinct !DILexicalBlock(scope: !16419, file: !2466, line: 646, column: 2)
!16435 = !DILocation(line: 0, scope: !15814, inlinedAt: !16436)
!16436 = distinct !DILocation(line: 646, column: 2, scope: !16434)
!16437 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !16436)
!16438 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !16436)
!16439 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !16436)
!16440 = !DILocation(line: 0, scope: !15828, inlinedAt: !16441)
!16441 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !16436)
!16442 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !16441)
!16443 = !DILocation(line: 649, column: 1, scope: !16415)
!16444 = distinct !DISubprogram(name: "z_sched_start", scope: !2466, file: !2466, line: 651, type: !15738, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16445)
!16445 = !{!16446, !16447}
!16446 = !DILocalVariable(name: "thread", arg: 1, scope: !16444, file: !2466, line: 651, type: !2359)
!16447 = !DILocalVariable(name: "key", scope: !16444, file: !2466, line: 653, type: !15772)
!16448 = !DILocation(line: 0, scope: !16444)
!16449 = !DILocation(line: 0, scope: !15780, inlinedAt: !16450)
!16450 = distinct !DILocation(line: 653, column: 25, scope: !16444)
!16451 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !16452)
!16452 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !16450)
!16453 = !DILocation(line: 0, scope: !15789, inlinedAt: !16452)
!16454 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !16450)
!16455 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !16450)
!16456 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !16450)
!16457 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !16450)
!16458 = !DILocation(line: 655, column: 6, scope: !16459)
!16459 = distinct !DILexicalBlock(scope: !16444, file: !2466, line: 655, column: 6)
!16460 = !DILocation(line: 655, column: 6, scope: !16444)
!16461 = !DILocation(line: 0, scope: !15814, inlinedAt: !16462)
!16462 = distinct !DILocation(line: 656, column: 3, scope: !16463)
!16463 = distinct !DILexicalBlock(scope: !16459, file: !2466, line: 655, column: 36)
!16464 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !16462)
!16465 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !16462)
!16466 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !16462)
!16467 = !DILocation(line: 0, scope: !15828, inlinedAt: !16468)
!16468 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !16462)
!16469 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !16468)
!16470 = !DILocation(line: 657, column: 3, scope: !16463)
!16471 = !DILocation(line: 660, column: 2, scope: !16444)
!16472 = !DILocation(line: 661, column: 2, scope: !16444)
!16473 = !DILocation(line: 662, column: 2, scope: !16444)
!16474 = !DILocation(line: 663, column: 1, scope: !16444)
!16475 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14135, file: !14135, line: 126, type: !15921, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16476)
!16476 = !{!16477}
!16477 = !DILocalVariable(name: "thread", arg: 1, scope: !16475, file: !14135, line: 126, type: !2359)
!16478 = !DILocation(line: 0, scope: !16475)
!16479 = !DILocation(line: 128, column: 23, scope: !16475)
!16480 = !DILocation(line: 128, column: 36, scope: !16475)
!16481 = !DILocation(line: 128, column: 56, scope: !16475)
!16482 = !DILocation(line: 128, column: 2, scope: !16475)
!16483 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14135, file: !14135, line: 155, type: !15738, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16484)
!16484 = !{!16485}
!16485 = !DILocalVariable(name: "thread", arg: 1, scope: !16483, file: !14135, line: 155, type: !2359)
!16486 = !DILocation(line: 0, scope: !16483)
!16487 = !DILocation(line: 157, column: 15, scope: !16483)
!16488 = !DILocation(line: 157, column: 28, scope: !16483)
!16489 = !DILocation(line: 158, column: 1, scope: !16483)
!16490 = distinct !DISubprogram(name: "z_reschedule", scope: !2466, file: !2466, line: 967, type: !15815, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16491)
!16491 = !{!16492, !16493}
!16492 = !DILocalVariable(name: "lock", arg: 1, scope: !16490, file: !2466, line: 967, type: !15783)
!16493 = !DILocalVariable(name: "key", arg: 2, scope: !16490, file: !2466, line: 967, type: !15772)
!16494 = !DILocation(line: 0, scope: !16490)
!16495 = !DILocation(line: 969, column: 6, scope: !16496)
!16496 = distinct !DILexicalBlock(scope: !16490, file: !2466, line: 969, column: 6)
!16497 = !DILocation(line: 969, column: 23, scope: !16496)
!16498 = !DILocation(line: 969, column: 26, scope: !16496)
!16499 = !DILocation(line: 969, column: 6, scope: !16490)
!16500 = !DILocalVariable(name: "key", arg: 2, scope: !16501, file: !14260, line: 193, type: !15772)
!16501 = distinct !DISubprogram(name: "z_swap", scope: !14260, file: !14260, line: 193, type: !16502, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16504)
!16502 = !DISubroutineType(types: !16503)
!16503 = !{!105, !15783, !15772}
!16504 = !{!16505, !16500}
!16505 = !DILocalVariable(name: "lock", arg: 1, scope: !16501, file: !14260, line: 193, type: !15783)
!16506 = !DILocation(line: 0, scope: !16501, inlinedAt: !16507)
!16507 = distinct !DILocation(line: 970, column: 3, scope: !16508)
!16508 = distinct !DILexicalBlock(scope: !16496, file: !2466, line: 969, column: 39)
!16509 = !DILocalVariable(name: "l", arg: 1, scope: !16510, file: !236, line: 221, type: !15783)
!16510 = distinct !DISubprogram(name: "k_spin_release", scope: !236, file: !236, line: 221, type: !16511, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16513)
!16511 = !DISubroutineType(types: !16512)
!16512 = !{null, !15783}
!16513 = !{!16509}
!16514 = !DILocation(line: 0, scope: !16510, inlinedAt: !16515)
!16515 = distinct !DILocation(line: 195, column: 2, scope: !16501, inlinedAt: !16507)
!16516 = !DILocation(line: 225, column: 2, scope: !16517, inlinedAt: !16515)
!16517 = distinct !DILexicalBlock(scope: !16518, file: !236, line: 225, column: 2)
!16518 = distinct !DILexicalBlock(scope: !16510, file: !236, line: 225, column: 2)
!16519 = !DILocation(line: 225, column: 2, scope: !16518, inlinedAt: !16515)
!16520 = !DILocation(line: 225, column: 2, scope: !16521, inlinedAt: !16515)
!16521 = distinct !DILexicalBlock(scope: !16517, file: !236, line: 225, column: 2)
!16522 = !DILocation(line: 196, column: 9, scope: !16501, inlinedAt: !16507)
!16523 = !DILocation(line: 971, column: 2, scope: !16508)
!16524 = !DILocation(line: 0, scope: !15814, inlinedAt: !16525)
!16525 = distinct !DILocation(line: 972, column: 3, scope: !16526)
!16526 = distinct !DILexicalBlock(scope: !16496, file: !2466, line: 971, column: 9)
!16527 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !16525)
!16528 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !16525)
!16529 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !16525)
!16530 = !DILocation(line: 0, scope: !15828, inlinedAt: !16531)
!16531 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !16525)
!16532 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !16531)
!16533 = !DILocation(line: 975, column: 1, scope: !16490)
!16534 = distinct !DISubprogram(name: "resched", scope: !2466, file: !2466, line: 940, type: !16535, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16537)
!16535 = !DISubroutineType(types: !16536)
!16536 = !{!492, !113}
!16537 = !{!16538}
!16538 = !DILocalVariable(name: "key", arg: 1, scope: !16534, file: !2466, line: 940, type: !113)
!16539 = !DILocation(line: 0, scope: !16534)
!16540 = !DILocalVariable(name: "key", arg: 1, scope: !16541, file: !7433, line: 112, type: !32)
!16541 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7433, file: !7433, line: 112, type: !16542, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16544)
!16542 = !DISubroutineType(types: !16543)
!16543 = !{!492, !32}
!16544 = !{!16540}
!16545 = !DILocation(line: 0, scope: !16541, inlinedAt: !16546)
!16546 = distinct !DILocation(line: 946, column: 9, scope: !16534)
!16547 = !DILocation(line: 115, column: 13, scope: !16541, inlinedAt: !16546)
!16548 = !DILocation(line: 946, column: 32, scope: !16534)
!16549 = !DILocation(line: 1031, column: 3, scope: !16550, inlinedAt: !16553)
!16550 = distinct !DISubprogram(name: "__get_IPSR", scope: !7751, file: !7751, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16551)
!16551 = !{!16552}
!16552 = !DILocalVariable(name: "result", scope: !16550, file: !7751, line: 1029, type: !113)
!16553 = distinct !DILocation(line: 48, column: 10, scope: !16554, inlinedAt: !16555)
!16554 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8798, file: !8798, line: 46, type: !8799, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !397)
!16555 = distinct !DILocation(line: 946, column: 36, scope: !16534)
!16556 = !{i64 2873518}
!16557 = !DILocation(line: 0, scope: !16550, inlinedAt: !16553)
!16558 = !DILocation(line: 48, column: 9, scope: !16554, inlinedAt: !16555)
!16559 = !DILocation(line: 946, column: 2, scope: !16534)
!16560 = distinct !DISubprogram(name: "need_swap", scope: !2466, file: !2466, line: 953, type: !8799, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16561)
!16561 = !{!16562}
!16562 = !DILocalVariable(name: "new_thread", scope: !16560, file: !2466, line: 959, type: !2359)
!16563 = !DILocation(line: 962, column: 31, scope: !16560)
!16564 = !DILocation(line: 0, scope: !16560)
!16565 = !DILocation(line: 963, column: 23, scope: !16560)
!16566 = !DILocation(line: 963, column: 20, scope: !16560)
!16567 = !DILocation(line: 963, column: 2, scope: !16560)
!16568 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14260, file: !14260, line: 181, type: !7761, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16569)
!16569 = !{!16570, !16571}
!16570 = !DILocalVariable(name: "key", arg: 1, scope: !16568, file: !14260, line: 181, type: !32)
!16571 = !DILocalVariable(name: "ret", scope: !16568, file: !14260, line: 183, type: !105)
!16572 = !DILocation(line: 0, scope: !16568)
!16573 = !DILocation(line: 185, column: 8, scope: !16568)
!16574 = !DILocation(line: 186, column: 2, scope: !16568)
!16575 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2466, file: !2466, line: 665, type: !15738, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16576)
!16576 = !{!16577, !16578, !16580}
!16577 = !DILocalVariable(name: "thread", arg: 1, scope: !16575, file: !2466, line: 665, type: !2359)
!16578 = !DILocalVariable(name: "__i", scope: !16579, file: !2466, line: 671, type: !15772)
!16579 = distinct !DILexicalBlock(scope: !16575, file: !2466, line: 671, column: 2)
!16580 = !DILocalVariable(name: "__key", scope: !16579, file: !2466, line: 671, type: !15772)
!16581 = !DILocation(line: 0, scope: !16575)
!16582 = !DILocation(line: 669, column: 8, scope: !16575)
!16583 = !DILocation(line: 0, scope: !16579)
!16584 = !DILocation(line: 0, scope: !15780, inlinedAt: !16585)
!16585 = distinct !DILocation(line: 671, column: 2, scope: !16579)
!16586 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !16587)
!16587 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !16585)
!16588 = !DILocation(line: 0, scope: !15789, inlinedAt: !16587)
!16589 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !16585)
!16590 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !16585)
!16591 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !16585)
!16592 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !16585)
!16593 = !DILocation(line: 672, column: 7, scope: !16594)
!16594 = distinct !DILexicalBlock(scope: !16595, file: !2466, line: 672, column: 7)
!16595 = distinct !DILexicalBlock(scope: !16596, file: !2466, line: 671, column: 26)
!16596 = distinct !DILexicalBlock(scope: !16579, file: !2466, line: 671, column: 2)
!16597 = !DILocation(line: 672, column: 7, scope: !16595)
!16598 = !DILocation(line: 0, scope: !15972, inlinedAt: !16599)
!16599 = distinct !DILocation(line: 673, column: 4, scope: !16600)
!16600 = distinct !DILexicalBlock(scope: !16594, file: !2466, line: 672, column: 35)
!16601 = !DILocation(line: 266, column: 15, scope: !15972, inlinedAt: !16599)
!16602 = !DILocation(line: 266, column: 28, scope: !15972, inlinedAt: !16599)
!16603 = !DILocation(line: 0, scope: !15980, inlinedAt: !16604)
!16604 = distinct !DILocation(line: 268, column: 3, scope: !15984, inlinedAt: !16599)
!16605 = !DILocation(line: 234, column: 2, scope: !15980, inlinedAt: !16604)
!16606 = !DILocation(line: 674, column: 3, scope: !16600)
!16607 = !DILocation(line: 675, column: 3, scope: !16595)
!16608 = !DILocation(line: 676, column: 26, scope: !16595)
!16609 = !DILocation(line: 676, column: 23, scope: !16595)
!16610 = !DILocation(line: 676, column: 3, scope: !16595)
!16611 = !DILocation(line: 0, scope: !15814, inlinedAt: !16612)
!16612 = distinct !DILocation(line: 671, column: 2, scope: !16596)
!16613 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !16612)
!16614 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !16612)
!16615 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !16612)
!16616 = !DILocation(line: 0, scope: !15828, inlinedAt: !16617)
!16617 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !16612)
!16618 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !16617)
!16619 = !DILocation(line: 679, column: 16, scope: !16620)
!16620 = distinct !DILexicalBlock(scope: !16575, file: !2466, line: 679, column: 6)
!16621 = !DILocation(line: 679, column: 13, scope: !16620)
!16622 = !DILocation(line: 679, column: 6, scope: !16575)
!16623 = !DILocation(line: 680, column: 3, scope: !16624)
!16624 = distinct !DILexicalBlock(scope: !16620, file: !2466, line: 679, column: 26)
!16625 = !DILocation(line: 681, column: 2, scope: !16624)
!16626 = !DILocation(line: 684, column: 1, scope: !16575)
!16627 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14564, file: !14564, line: 52, type: !15756, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16628)
!16628 = !{!16629}
!16629 = !DILocalVariable(name: "thread", arg: 1, scope: !16627, file: !14564, line: 52, type: !2359)
!16630 = !DILocation(line: 0, scope: !16627)
!16631 = !DILocation(line: 54, column: 39, scope: !16627)
!16632 = !DILocation(line: 54, column: 9, scope: !16627)
!16633 = !DILocation(line: 54, column: 2, scope: !16627)
!16634 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14135, file: !14135, line: 141, type: !15738, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16635)
!16635 = !{!16636}
!16636 = !DILocalVariable(name: "thread", arg: 1, scope: !16634, file: !14135, line: 141, type: !2359)
!16637 = !DILocation(line: 0, scope: !16634)
!16638 = !DILocation(line: 143, column: 15, scope: !16634)
!16639 = !DILocation(line: 143, column: 28, scope: !16634)
!16640 = !DILocation(line: 146, column: 1, scope: !16634)
!16641 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14135, file: !14135, line: 73, type: !266, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !397)
!16642 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !16643)
!16643 = distinct !DILocation(line: 75, column: 30, scope: !16641)
!16644 = !DILocation(line: 0, scope: !15789, inlinedAt: !16643)
!16645 = !DILocation(line: 75, column: 9, scope: !16641)
!16646 = !DILocation(line: 76, column: 1, scope: !16641)
!16647 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2466, file: !2466, line: 977, type: !7846, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16648)
!16648 = !{!16649}
!16649 = !DILocalVariable(name: "key", arg: 1, scope: !16647, file: !2466, line: 977, type: !113)
!16650 = !DILocation(line: 0, scope: !16647)
!16651 = !DILocation(line: 979, column: 6, scope: !16652)
!16652 = distinct !DILexicalBlock(scope: !16647, file: !2466, line: 979, column: 6)
!16653 = !DILocation(line: 979, column: 6, scope: !16647)
!16654 = !DILocation(line: 980, column: 3, scope: !16655)
!16655 = distinct !DILexicalBlock(scope: !16652, file: !2466, line: 979, column: 20)
!16656 = !DILocation(line: 981, column: 2, scope: !16655)
!16657 = !DILocation(line: 0, scope: !15828, inlinedAt: !16658)
!16658 = distinct !DILocation(line: 982, column: 3, scope: !16659)
!16659 = distinct !DILexicalBlock(scope: !16652, file: !2466, line: 981, column: 9)
!16660 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !16658)
!16661 = !DILocation(line: 985, column: 1, scope: !16647)
!16662 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2466, file: !2466, line: 695, type: !15738, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16663)
!16663 = !{!16664, !16665}
!16664 = !DILocalVariable(name: "thread", arg: 1, scope: !16662, file: !2466, line: 695, type: !2359)
!16665 = !DILocalVariable(name: "key", scope: !16662, file: !2466, line: 699, type: !15772)
!16666 = !DILocation(line: 0, scope: !16662)
!16667 = !DILocation(line: 0, scope: !15780, inlinedAt: !16668)
!16668 = distinct !DILocation(line: 699, column: 25, scope: !16662)
!16669 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !16670)
!16670 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !16668)
!16671 = !DILocation(line: 0, scope: !15789, inlinedAt: !16670)
!16672 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !16668)
!16673 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !16668)
!16674 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !16668)
!16675 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !16668)
!16676 = !DILocation(line: 702, column: 7, scope: !16677)
!16677 = distinct !DILexicalBlock(scope: !16662, file: !2466, line: 702, column: 6)
!16678 = !DILocation(line: 702, column: 6, scope: !16662)
!16679 = !DILocation(line: 0, scope: !15814, inlinedAt: !16680)
!16680 = distinct !DILocation(line: 703, column: 3, scope: !16681)
!16681 = distinct !DILexicalBlock(scope: !16677, file: !2466, line: 702, column: 38)
!16682 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !16680)
!16683 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !16680)
!16684 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !16680)
!16685 = !DILocation(line: 0, scope: !15828, inlinedAt: !16686)
!16686 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !16680)
!16687 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !16686)
!16688 = !DILocation(line: 704, column: 3, scope: !16681)
!16689 = !DILocation(line: 707, column: 2, scope: !16662)
!16690 = !DILocation(line: 708, column: 2, scope: !16662)
!16691 = !DILocation(line: 710, column: 2, scope: !16662)
!16692 = !DILocation(line: 713, column: 1, scope: !16662)
!16693 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14135, file: !14135, line: 96, type: !15921, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16694)
!16694 = !{!16695}
!16695 = !DILocalVariable(name: "thread", arg: 1, scope: !16693, file: !14135, line: 96, type: !2359)
!16696 = !DILocation(line: 0, scope: !16693)
!16697 = !DILocation(line: 98, column: 23, scope: !16693)
!16698 = !DILocation(line: 98, column: 36, scope: !16693)
!16699 = !DILocation(line: 98, column: 57, scope: !16693)
!16700 = !DILocation(line: 98, column: 2, scope: !16693)
!16701 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14135, file: !14135, line: 148, type: !15738, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16702)
!16702 = !{!16703}
!16703 = !DILocalVariable(name: "thread", arg: 1, scope: !16701, file: !14135, line: 148, type: !2359)
!16704 = !DILocation(line: 0, scope: !16701)
!16705 = !DILocation(line: 150, column: 15, scope: !16701)
!16706 = !DILocation(line: 150, column: 28, scope: !16701)
!16707 = !DILocation(line: 153, column: 1, scope: !16701)
!16708 = distinct !DISubprogram(name: "z_pend_thread", scope: !2466, file: !2466, line: 770, type: !16709, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16715)
!16709 = !DISubroutineType(types: !16710)
!16710 = !{null, !2359, !2390, !16711}
!16711 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !16712)
!16712 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !16713)
!16713 = !{!16714}
!16714 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16712, file: !108, line: 66, baseType: !107, size: 64)
!16715 = !{!16716, !16717, !16718, !16719, !16721}
!16716 = !DILocalVariable(name: "thread", arg: 1, scope: !16708, file: !2466, line: 770, type: !2359)
!16717 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16708, file: !2466, line: 770, type: !2390)
!16718 = !DILocalVariable(name: "timeout", arg: 3, scope: !16708, file: !2466, line: 771, type: !16711)
!16719 = !DILocalVariable(name: "__i", scope: !16720, file: !2466, line: 774, type: !15772)
!16720 = distinct !DILexicalBlock(scope: !16708, file: !2466, line: 774, column: 2)
!16721 = !DILocalVariable(name: "__key", scope: !16720, file: !2466, line: 774, type: !15772)
!16722 = !DILocation(line: 0, scope: !16708)
!16723 = !DILocation(line: 773, column: 2, scope: !16724)
!16724 = distinct !DILexicalBlock(scope: !16725, file: !2466, line: 773, column: 2)
!16725 = distinct !DILexicalBlock(scope: !16708, file: !2466, line: 773, column: 2)
!16726 = !DILocation(line: 773, column: 2, scope: !16725)
!16727 = !DILocation(line: 773, column: 2, scope: !16728)
!16728 = distinct !DILexicalBlock(scope: !16724, file: !2466, line: 773, column: 2)
!16729 = !DILocation(line: 0, scope: !16720)
!16730 = !DILocation(line: 0, scope: !15780, inlinedAt: !16731)
!16731 = distinct !DILocation(line: 774, column: 2, scope: !16720)
!16732 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !16733)
!16733 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !16731)
!16734 = !DILocation(line: 0, scope: !15789, inlinedAt: !16733)
!16735 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !16731)
!16736 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !16731)
!16737 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !16731)
!16738 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !16731)
!16739 = !DILocation(line: 775, column: 3, scope: !16740)
!16740 = distinct !DILexicalBlock(scope: !16741, file: !2466, line: 774, column: 26)
!16741 = distinct !DILexicalBlock(scope: !16720, file: !2466, line: 774, column: 2)
!16742 = !DILocation(line: 0, scope: !15814, inlinedAt: !16743)
!16743 = distinct !DILocation(line: 774, column: 2, scope: !16741)
!16744 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !16743)
!16745 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !16743)
!16746 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !16743)
!16747 = !DILocation(line: 0, scope: !15828, inlinedAt: !16748)
!16748 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !16743)
!16749 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !16748)
!16750 = !DILocation(line: 777, column: 1, scope: !16708)
!16751 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2466, file: !2466, line: 79, type: !15921, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16752)
!16752 = !{!16753}
!16753 = !DILocalVariable(name: "thread", arg: 1, scope: !16751, file: !2466, line: 79, type: !2359)
!16754 = !DILocation(line: 0, scope: !16751)
!16755 = !DILocation(line: 81, column: 23, scope: !16751)
!16756 = !DILocation(line: 81, column: 36, scope: !16751)
!16757 = !DILocation(line: 81, column: 53, scope: !16751)
!16758 = !DILocation(line: 81, column: 2, scope: !16751)
!16759 = distinct !DISubprogram(name: "pend_locked", scope: !2466, file: !2466, line: 760, type: !16709, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16760)
!16760 = !{!16761, !16762, !16763}
!16761 = !DILocalVariable(name: "thread", arg: 1, scope: !16759, file: !2466, line: 760, type: !2359)
!16762 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16759, file: !2466, line: 760, type: !2390)
!16763 = !DILocalVariable(name: "timeout", arg: 3, scope: !16759, file: !2466, line: 761, type: !16711)
!16764 = !DILocation(line: 0, scope: !16759)
!16765 = !DILocation(line: 766, column: 2, scope: !16759)
!16766 = !DILocation(line: 767, column: 2, scope: !16759)
!16767 = !DILocation(line: 768, column: 1, scope: !16759)
!16768 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2466, file: !2466, line: 740, type: !16769, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16771)
!16769 = !DISubroutineType(types: !16770)
!16770 = !{null, !2359, !2390}
!16771 = !{!16772, !16773}
!16772 = !DILocalVariable(name: "thread", arg: 1, scope: !16768, file: !2466, line: 740, type: !2359)
!16773 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16768, file: !2466, line: 740, type: !2390)
!16774 = !DILocation(line: 0, scope: !16768)
!16775 = !DILocation(line: 742, column: 2, scope: !16768)
!16776 = !DILocation(line: 743, column: 2, scope: !16768)
!16777 = !DILocation(line: 747, column: 13, scope: !16778)
!16778 = distinct !DILexicalBlock(scope: !16768, file: !2466, line: 747, column: 6)
!16779 = !DILocation(line: 747, column: 6, scope: !16768)
!16780 = !DILocation(line: 748, column: 16, scope: !16781)
!16781 = distinct !DILexicalBlock(scope: !16778, file: !2466, line: 747, column: 22)
!16782 = !DILocation(line: 748, column: 26, scope: !16781)
!16783 = !DILocation(line: 749, column: 28, scope: !16781)
!16784 = !DILocation(line: 0, scope: !16003, inlinedAt: !16785)
!16785 = distinct !DILocation(line: 749, column: 3, scope: !16781)
!16786 = !DILocation(line: 186, column: 2, scope: !16013, inlinedAt: !16785)
!16787 = !DILocation(line: 186, column: 2, scope: !16014, inlinedAt: !16785)
!16788 = !DILocation(line: 186, column: 2, scope: !16017, inlinedAt: !16785)
!16789 = !DILocation(line: 188, column: 2, scope: !16019, inlinedAt: !16785)
!16790 = !DILocation(line: 188, column: 2, scope: !16021, inlinedAt: !16785)
!16791 = !DILocation(line: 0, scope: !16019, inlinedAt: !16785)
!16792 = !DILocation(line: 189, column: 7, scope: !16024, inlinedAt: !16785)
!16793 = !DILocation(line: 189, column: 35, scope: !16024, inlinedAt: !16785)
!16794 = !DILocation(line: 189, column: 7, scope: !16025, inlinedAt: !16785)
!16795 = !DILocation(line: 191, column: 21, scope: !16029, inlinedAt: !16785)
!16796 = !DILocation(line: 190, column: 4, scope: !16029, inlinedAt: !16785)
!16797 = !DILocation(line: 192, column: 4, scope: !16029, inlinedAt: !16785)
!16798 = distinct !{!16798, !16789, !16799}
!16799 = !DILocation(line: 194, column: 2, scope: !16019, inlinedAt: !16785)
!16800 = !DILocation(line: 196, column: 37, scope: !16003, inlinedAt: !16785)
!16801 = !DILocation(line: 196, column: 2, scope: !16003, inlinedAt: !16785)
!16802 = !DILocation(line: 197, column: 1, scope: !16003, inlinedAt: !16785)
!16803 = !DILocation(line: 751, column: 1, scope: !16768)
!16804 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2466, file: !2466, line: 753, type: !16805, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16807)
!16805 = !DISubroutineType(types: !16806)
!16806 = !{null, !2359, !16711}
!16807 = !{!16808, !16809}
!16808 = !DILocalVariable(name: "thread", arg: 1, scope: !16804, file: !2466, line: 753, type: !2359)
!16809 = !DILocalVariable(name: "timeout", arg: 2, scope: !16804, file: !2466, line: 753, type: !16711)
!16810 = !DILocation(line: 0, scope: !16804)
!16811 = !DILocation(line: 755, column: 7, scope: !16812)
!16812 = distinct !DILexicalBlock(scope: !16804, file: !2466, line: 755, column: 6)
!16813 = !DILocation(line: 755, column: 6, scope: !16804)
!16814 = !DILocation(line: 756, column: 3, scope: !16815)
!16815 = distinct !DILexicalBlock(scope: !16812, file: !2466, line: 755, column: 41)
!16816 = !DILocation(line: 757, column: 2, scope: !16815)
!16817 = !DILocation(line: 758, column: 1, scope: !16804)
!16818 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14564, file: !14564, line: 47, type: !16805, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16819)
!16819 = !{!16820, !16821}
!16820 = !DILocalVariable(name: "thread", arg: 1, scope: !16818, file: !14564, line: 47, type: !2359)
!16821 = !DILocalVariable(name: "ticks", arg: 2, scope: !16818, file: !14564, line: 47, type: !16711)
!16822 = !DILocation(line: 0, scope: !16818)
!16823 = !DILocation(line: 49, column: 30, scope: !16818)
!16824 = !DILocation(line: 49, column: 2, scope: !16818)
!16825 = !DILocation(line: 50, column: 1, scope: !16818)
!16826 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2466, file: !2466, line: 795, type: !2416, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16827)
!16827 = !{!16828, !16829, !16830, !16832, !16833}
!16828 = !DILocalVariable(name: "timeout", arg: 1, scope: !16826, file: !2466, line: 795, type: !2418)
!16829 = !DILocalVariable(name: "thread", scope: !16826, file: !2466, line: 797, type: !2359)
!16830 = !DILocalVariable(name: "__i", scope: !16831, file: !2466, line: 800, type: !15772)
!16831 = distinct !DILexicalBlock(scope: !16826, file: !2466, line: 800, column: 2)
!16832 = !DILocalVariable(name: "__key", scope: !16831, file: !2466, line: 800, type: !15772)
!16833 = !DILocalVariable(name: "killed", scope: !16834, file: !2466, line: 801, type: !492)
!16834 = distinct !DILexicalBlock(scope: !16835, file: !2466, line: 800, column: 26)
!16835 = distinct !DILexicalBlock(scope: !16831, file: !2466, line: 800, column: 2)
!16836 = !DILocation(line: 0, scope: !16826)
!16837 = !DILocation(line: 797, column: 28, scope: !16826)
!16838 = !DILocation(line: 0, scope: !16831)
!16839 = !DILocation(line: 0, scope: !15780, inlinedAt: !16840)
!16840 = distinct !DILocation(line: 800, column: 2, scope: !16831)
!16841 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !16842)
!16842 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !16840)
!16843 = !DILocation(line: 0, scope: !15789, inlinedAt: !16842)
!16844 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !16840)
!16845 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !16840)
!16846 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !16840)
!16847 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !16840)
!16848 = !DILocation(line: 801, column: 27, scope: !16834)
!16849 = !DILocation(line: 801, column: 32, scope: !16834)
!16850 = !DILocation(line: 801, column: 61, scope: !16834)
!16851 = !DILocation(line: 0, scope: !16834)
!16852 = !DILocation(line: 804, column: 7, scope: !16834)
!16853 = !DILocation(line: 805, column: 21, scope: !16854)
!16854 = distinct !DILexicalBlock(scope: !16855, file: !2466, line: 805, column: 8)
!16855 = distinct !DILexicalBlock(scope: !16856, file: !2466, line: 804, column: 16)
!16856 = distinct !DILexicalBlock(scope: !16834, file: !2466, line: 804, column: 7)
!16857 = !DILocation(line: 805, column: 31, scope: !16854)
!16858 = !DILocation(line: 805, column: 8, scope: !16855)
!16859 = !DILocation(line: 806, column: 5, scope: !16860)
!16860 = distinct !DILexicalBlock(scope: !16854, file: !2466, line: 805, column: 40)
!16861 = !DILocation(line: 807, column: 4, scope: !16860)
!16862 = !DILocation(line: 808, column: 4, scope: !16855)
!16863 = !DILocation(line: 809, column: 4, scope: !16855)
!16864 = !DILocation(line: 810, column: 4, scope: !16855)
!16865 = !DILocation(line: 811, column: 3, scope: !16855)
!16866 = !DILocation(line: 0, scope: !15814, inlinedAt: !16867)
!16867 = distinct !DILocation(line: 800, column: 2, scope: !16835)
!16868 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !16867)
!16869 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !16867)
!16870 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !16867)
!16871 = !DILocation(line: 0, scope: !15828, inlinedAt: !16872)
!16872 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !16867)
!16873 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !16872)
!16874 = !DILocation(line: 813, column: 1, scope: !16826)
!16875 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2466, file: !2466, line: 779, type: !15738, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16876)
!16876 = !{!16877}
!16877 = !DILocalVariable(name: "thread", arg: 1, scope: !16875, file: !2466, line: 779, type: !2359)
!16878 = !DILocation(line: 0, scope: !16875)
!16879 = !DILocation(line: 781, column: 21, scope: !16875)
!16880 = !DILocation(line: 781, column: 2, scope: !16875)
!16881 = !DILocation(line: 782, column: 2, scope: !16875)
!16882 = !DILocation(line: 783, column: 15, scope: !16875)
!16883 = !DILocation(line: 783, column: 25, scope: !16875)
!16884 = !DILocation(line: 784, column: 1, scope: !16875)
!16885 = distinct !DISubprogram(name: "pended_on_thread", scope: !2466, file: !2466, line: 724, type: !16886, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16888)
!16886 = !DISubroutineType(types: !16887)
!16887 = !{!2390, !2359}
!16888 = !{!16889}
!16889 = !DILocalVariable(name: "thread", arg: 1, scope: !16885, file: !2466, line: 724, type: !2359)
!16890 = !DILocation(line: 0, scope: !16885)
!16891 = !DILocation(line: 726, column: 2, scope: !16892)
!16892 = distinct !DILexicalBlock(scope: !16893, file: !2466, line: 726, column: 2)
!16893 = distinct !DILexicalBlock(scope: !16885, file: !2466, line: 726, column: 2)
!16894 = !DILocation(line: 726, column: 2, scope: !16893)
!16895 = !DILocation(line: 726, column: 2, scope: !16896)
!16896 = distinct !DILexicalBlock(scope: !16892, file: !2466, line: 726, column: 2)
!16897 = !DILocation(line: 728, column: 2, scope: !16885)
!16898 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14135, file: !14135, line: 165, type: !15738, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16899)
!16899 = !{!16900}
!16900 = !DILocalVariable(name: "thread", arg: 1, scope: !16898, file: !14135, line: 165, type: !2359)
!16901 = !DILocation(line: 0, scope: !16898)
!16902 = !DILocation(line: 167, column: 15, scope: !16898)
!16903 = !DILocation(line: 167, column: 28, scope: !16898)
!16904 = !DILocation(line: 168, column: 1, scope: !16898)
!16905 = distinct !DISubprogram(name: "unready_thread", scope: !2466, file: !2466, line: 731, type: !15738, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16906)
!16906 = !{!16907}
!16907 = !DILocalVariable(name: "thread", arg: 1, scope: !16905, file: !2466, line: 731, type: !2359)
!16908 = !DILocation(line: 0, scope: !16905)
!16909 = !DILocation(line: 733, column: 6, scope: !16910)
!16910 = distinct !DILexicalBlock(scope: !16905, file: !2466, line: 733, column: 6)
!16911 = !DILocation(line: 733, column: 6, scope: !16905)
!16912 = !DILocation(line: 0, scope: !15972, inlinedAt: !16913)
!16913 = distinct !DILocation(line: 734, column: 3, scope: !16914)
!16914 = distinct !DILexicalBlock(scope: !16910, file: !2466, line: 733, column: 34)
!16915 = !DILocation(line: 266, column: 15, scope: !15972, inlinedAt: !16913)
!16916 = !DILocation(line: 266, column: 28, scope: !15972, inlinedAt: !16913)
!16917 = !DILocation(line: 0, scope: !15980, inlinedAt: !16918)
!16918 = distinct !DILocation(line: 268, column: 3, scope: !15984, inlinedAt: !16913)
!16919 = !DILocation(line: 234, column: 2, scope: !15980, inlinedAt: !16918)
!16920 = !DILocation(line: 735, column: 2, scope: !16914)
!16921 = !DILocation(line: 736, column: 25, scope: !16905)
!16922 = !DILocation(line: 736, column: 22, scope: !16905)
!16923 = !DILocation(line: 736, column: 2, scope: !16905)
!16924 = !DILocation(line: 737, column: 1, scope: !16905)
!16925 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14135, file: !14135, line: 160, type: !15738, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16926)
!16926 = !{!16927}
!16927 = !DILocalVariable(name: "thread", arg: 1, scope: !16925, file: !14135, line: 160, type: !2359)
!16928 = !DILocation(line: 0, scope: !16925)
!16929 = !DILocation(line: 162, column: 15, scope: !16925)
!16930 = !DILocation(line: 162, column: 28, scope: !16925)
!16931 = !DILocation(line: 163, column: 1, scope: !16925)
!16932 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2466, file: !2466, line: 786, type: !15738, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16933)
!16933 = !{!16934, !16935, !16937}
!16934 = !DILocalVariable(name: "thread", arg: 1, scope: !16932, file: !2466, line: 786, type: !2359)
!16935 = !DILocalVariable(name: "__i", scope: !16936, file: !2466, line: 788, type: !15772)
!16936 = distinct !DILexicalBlock(scope: !16932, file: !2466, line: 788, column: 2)
!16937 = !DILocalVariable(name: "__key", scope: !16936, file: !2466, line: 788, type: !15772)
!16938 = !DILocation(line: 0, scope: !16932)
!16939 = !DILocation(line: 0, scope: !16936)
!16940 = !DILocation(line: 0, scope: !15780, inlinedAt: !16941)
!16941 = distinct !DILocation(line: 788, column: 2, scope: !16936)
!16942 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !16943)
!16943 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !16941)
!16944 = !DILocation(line: 0, scope: !15789, inlinedAt: !16943)
!16945 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !16941)
!16946 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !16941)
!16947 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !16941)
!16948 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !16941)
!16949 = !DILocation(line: 789, column: 3, scope: !16950)
!16950 = distinct !DILexicalBlock(scope: !16951, file: !2466, line: 788, column: 26)
!16951 = distinct !DILexicalBlock(scope: !16936, file: !2466, line: 788, column: 2)
!16952 = !DILocation(line: 0, scope: !15814, inlinedAt: !16953)
!16953 = distinct !DILocation(line: 788, column: 2, scope: !16951)
!16954 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !16953)
!16955 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !16953)
!16956 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !16953)
!16957 = !DILocation(line: 0, scope: !15828, inlinedAt: !16958)
!16958 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !16953)
!16959 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !16958)
!16960 = !DILocation(line: 791, column: 1, scope: !16932)
!16961 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2466, file: !2466, line: 816, type: !16962, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !16964)
!16962 = !DISubroutineType(types: !16963)
!16963 = !{!105, !113, !2390, !16711}
!16964 = !{!16965, !16966, !16967, !16968, !16969, !16971}
!16965 = !DILocalVariable(name: "key", arg: 1, scope: !16961, file: !2466, line: 816, type: !113)
!16966 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16961, file: !2466, line: 816, type: !2390)
!16967 = !DILocalVariable(name: "timeout", arg: 3, scope: !16961, file: !2466, line: 816, type: !16711)
!16968 = !DILocalVariable(name: "ret", scope: !16961, file: !2466, line: 828, type: !105)
!16969 = !DILocalVariable(name: "__i", scope: !16970, file: !2466, line: 829, type: !15772)
!16970 = distinct !DILexicalBlock(scope: !16961, file: !2466, line: 829, column: 2)
!16971 = !DILocalVariable(name: "__key", scope: !16970, file: !2466, line: 829, type: !15772)
!16972 = !DILocation(line: 0, scope: !16961)
!16973 = !DILocation(line: 823, column: 14, scope: !16961)
!16974 = !DILocation(line: 823, column: 2, scope: !16961)
!16975 = !DILocation(line: 826, column: 20, scope: !16961)
!16976 = !DILocation(line: 826, column: 18, scope: !16961)
!16977 = !DILocation(line: 828, column: 12, scope: !16961)
!16978 = !DILocation(line: 0, scope: !16970)
!16979 = !DILocation(line: 0, scope: !15780, inlinedAt: !16980)
!16980 = distinct !DILocation(line: 829, column: 2, scope: !16970)
!16981 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !16982)
!16982 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !16980)
!16983 = !DILocation(line: 0, scope: !15789, inlinedAt: !16982)
!16984 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !16980)
!16985 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !16980)
!16986 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !16980)
!16987 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !16980)
!16988 = !DILocation(line: 830, column: 7, scope: !16989)
!16989 = distinct !DILexicalBlock(scope: !16990, file: !2466, line: 830, column: 7)
!16990 = distinct !DILexicalBlock(scope: !16991, file: !2466, line: 829, column: 26)
!16991 = distinct !DILexicalBlock(scope: !16970, file: !2466, line: 829, column: 2)
!16992 = !DILocation(line: 830, column: 26, scope: !16989)
!16993 = !DILocation(line: 830, column: 23, scope: !16989)
!16994 = !DILocation(line: 830, column: 7, scope: !16990)
!16995 = !DILocation(line: 831, column: 20, scope: !16996)
!16996 = distinct !DILexicalBlock(scope: !16989, file: !2466, line: 830, column: 36)
!16997 = !DILocation(line: 832, column: 3, scope: !16996)
!16998 = !DILocation(line: 0, scope: !15814, inlinedAt: !16999)
!16999 = distinct !DILocation(line: 829, column: 2, scope: !16991)
!17000 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !16999)
!17001 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !16999)
!17002 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !16999)
!17003 = !DILocation(line: 0, scope: !15828, inlinedAt: !17004)
!17004 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !16999)
!17005 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !17004)
!17006 = !DILocation(line: 834, column: 2, scope: !16961)
!17007 = distinct !DISubprogram(name: "z_pend_curr", scope: !2466, file: !2466, line: 840, type: !17008, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17010)
!17008 = !DISubroutineType(types: !17009)
!17009 = !{!105, !15783, !15772, !2390, !16711}
!17010 = !{!17011, !17012, !17013, !17014}
!17011 = !DILocalVariable(name: "lock", arg: 1, scope: !17007, file: !2466, line: 840, type: !15783)
!17012 = !DILocalVariable(name: "key", arg: 2, scope: !17007, file: !2466, line: 840, type: !15772)
!17013 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17007, file: !2466, line: 841, type: !2390)
!17014 = !DILocalVariable(name: "timeout", arg: 4, scope: !17007, file: !2466, line: 841, type: !16711)
!17015 = !DILocation(line: 0, scope: !17007)
!17016 = !DILocation(line: 844, column: 20, scope: !17007)
!17017 = !DILocation(line: 844, column: 18, scope: !17007)
!17018 = !DILocation(line: 846, column: 2, scope: !17019)
!17019 = distinct !DILexicalBlock(scope: !17020, file: !2466, line: 846, column: 2)
!17020 = distinct !DILexicalBlock(scope: !17007, file: !2466, line: 846, column: 2)
!17021 = !DILocation(line: 846, column: 2, scope: !17020)
!17022 = !DILocation(line: 846, column: 2, scope: !17023)
!17023 = distinct !DILexicalBlock(scope: !17019, file: !2466, line: 846, column: 2)
!17024 = !DILocation(line: 0, scope: !15780, inlinedAt: !17025)
!17025 = distinct !DILocation(line: 856, column: 9, scope: !17007)
!17026 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !17027)
!17027 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !17025)
!17028 = !DILocation(line: 0, scope: !15789, inlinedAt: !17027)
!17029 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !17025)
!17030 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !17025)
!17031 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !17025)
!17032 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !17025)
!17033 = !DILocation(line: 857, column: 14, scope: !17007)
!17034 = !DILocation(line: 857, column: 2, scope: !17007)
!17035 = !DILocation(line: 0, scope: !16510, inlinedAt: !17036)
!17036 = distinct !DILocation(line: 858, column: 2, scope: !17007)
!17037 = !DILocation(line: 225, column: 2, scope: !16517, inlinedAt: !17036)
!17038 = !DILocation(line: 225, column: 2, scope: !16518, inlinedAt: !17036)
!17039 = !DILocation(line: 225, column: 2, scope: !16521, inlinedAt: !17036)
!17040 = !DILocation(line: 0, scope: !16501, inlinedAt: !17041)
!17041 = distinct !DILocation(line: 859, column: 9, scope: !17007)
!17042 = !DILocation(line: 0, scope: !16510, inlinedAt: !17043)
!17043 = distinct !DILocation(line: 195, column: 2, scope: !16501, inlinedAt: !17041)
!17044 = !DILocation(line: 225, column: 2, scope: !16517, inlinedAt: !17043)
!17045 = !DILocation(line: 225, column: 2, scope: !16518, inlinedAt: !17043)
!17046 = !DILocation(line: 225, column: 2, scope: !16521, inlinedAt: !17043)
!17047 = !DILocation(line: 196, column: 9, scope: !16501, inlinedAt: !17041)
!17048 = !DILocation(line: 859, column: 2, scope: !17007)
!17049 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2466, file: !2466, line: 862, type: !17050, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17052)
!17050 = !DISubroutineType(types: !17051)
!17051 = !{!2359, !2390}
!17052 = !{!17053, !17054, !17055, !17057}
!17053 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17049, file: !2466, line: 862, type: !2390)
!17054 = !DILocalVariable(name: "thread", scope: !17049, file: !2466, line: 864, type: !2359)
!17055 = !DILocalVariable(name: "__i", scope: !17056, file: !2466, line: 866, type: !15772)
!17056 = distinct !DILexicalBlock(scope: !17049, file: !2466, line: 866, column: 2)
!17057 = !DILocalVariable(name: "__key", scope: !17056, file: !2466, line: 866, type: !15772)
!17058 = !DILocation(line: 0, scope: !17049)
!17059 = !DILocation(line: 0, scope: !17056)
!17060 = !DILocation(line: 0, scope: !15780, inlinedAt: !17061)
!17061 = distinct !DILocation(line: 866, column: 2, scope: !17056)
!17062 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !17063)
!17063 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !17061)
!17064 = !DILocation(line: 0, scope: !15789, inlinedAt: !17063)
!17065 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !17061)
!17066 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !17061)
!17067 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !17061)
!17068 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !17061)
!17069 = !DILocation(line: 867, column: 12, scope: !17070)
!17070 = distinct !DILexicalBlock(scope: !17071, file: !2466, line: 866, column: 26)
!17071 = distinct !DILexicalBlock(scope: !17056, file: !2466, line: 866, column: 2)
!17072 = !DILocation(line: 869, column: 14, scope: !17073)
!17073 = distinct !DILexicalBlock(scope: !17070, file: !2466, line: 869, column: 7)
!17074 = !DILocation(line: 869, column: 7, scope: !17070)
!17075 = !DILocation(line: 870, column: 4, scope: !17076)
!17076 = distinct !DILexicalBlock(scope: !17073, file: !2466, line: 869, column: 23)
!17077 = !DILocation(line: 871, column: 3, scope: !17076)
!17078 = !DILocation(line: 0, scope: !15814, inlinedAt: !17079)
!17079 = distinct !DILocation(line: 866, column: 2, scope: !17071)
!17080 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !17079)
!17081 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !17079)
!17082 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !17079)
!17083 = !DILocation(line: 0, scope: !15828, inlinedAt: !17084)
!17084 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !17079)
!17085 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !17084)
!17086 = !DILocation(line: 874, column: 2, scope: !17049)
!17087 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2466, file: !2466, line: 877, type: !17050, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17088)
!17088 = !{!17089, !17090, !17091, !17093}
!17089 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17087, file: !2466, line: 877, type: !2390)
!17090 = !DILocalVariable(name: "thread", scope: !17087, file: !2466, line: 879, type: !2359)
!17091 = !DILocalVariable(name: "__i", scope: !17092, file: !2466, line: 881, type: !15772)
!17092 = distinct !DILexicalBlock(scope: !17087, file: !2466, line: 881, column: 2)
!17093 = !DILocalVariable(name: "__key", scope: !17092, file: !2466, line: 881, type: !15772)
!17094 = !DILocation(line: 0, scope: !17087)
!17095 = !DILocation(line: 0, scope: !17092)
!17096 = !DILocation(line: 0, scope: !15780, inlinedAt: !17097)
!17097 = distinct !DILocation(line: 881, column: 2, scope: !17092)
!17098 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !17099)
!17099 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !17097)
!17100 = !DILocation(line: 0, scope: !15789, inlinedAt: !17099)
!17101 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !17097)
!17102 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !17097)
!17103 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !17097)
!17104 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !17097)
!17105 = !DILocation(line: 882, column: 12, scope: !17106)
!17106 = distinct !DILexicalBlock(scope: !17107, file: !2466, line: 881, column: 26)
!17107 = distinct !DILexicalBlock(scope: !17092, file: !2466, line: 881, column: 2)
!17108 = !DILocation(line: 884, column: 14, scope: !17109)
!17109 = distinct !DILexicalBlock(scope: !17106, file: !2466, line: 884, column: 7)
!17110 = !DILocation(line: 884, column: 7, scope: !17106)
!17111 = !DILocation(line: 885, column: 4, scope: !17112)
!17112 = distinct !DILexicalBlock(scope: !17109, file: !2466, line: 884, column: 23)
!17113 = !DILocation(line: 886, column: 10, scope: !17112)
!17114 = !DILocation(line: 887, column: 3, scope: !17112)
!17115 = !DILocation(line: 0, scope: !15814, inlinedAt: !17116)
!17116 = distinct !DILocation(line: 881, column: 2, scope: !17107)
!17117 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !17116)
!17118 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !17116)
!17119 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !17116)
!17120 = !DILocation(line: 0, scope: !15828, inlinedAt: !17121)
!17121 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !17116)
!17122 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !17121)
!17123 = !DILocation(line: 890, column: 2, scope: !17087)
!17124 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2466, file: !2466, line: 893, type: !15738, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17125)
!17125 = !{!17126}
!17126 = !DILocalVariable(name: "thread", arg: 1, scope: !17124, file: !2466, line: 893, type: !2359)
!17127 = !DILocation(line: 0, scope: !17124)
!17128 = !DILocation(line: 0, scope: !16932, inlinedAt: !17129)
!17129 = distinct !DILocation(line: 895, column: 2, scope: !17124)
!17130 = !DILocation(line: 0, scope: !16936, inlinedAt: !17129)
!17131 = !DILocation(line: 0, scope: !15780, inlinedAt: !17132)
!17132 = distinct !DILocation(line: 788, column: 2, scope: !16936, inlinedAt: !17129)
!17133 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !17134)
!17134 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !17132)
!17135 = !DILocation(line: 0, scope: !15789, inlinedAt: !17134)
!17136 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !17132)
!17137 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !17132)
!17138 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !17132)
!17139 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !17132)
!17140 = !DILocation(line: 789, column: 3, scope: !16950, inlinedAt: !17129)
!17141 = !DILocation(line: 0, scope: !15814, inlinedAt: !17142)
!17142 = distinct !DILocation(line: 788, column: 2, scope: !16951, inlinedAt: !17129)
!17143 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !17142)
!17144 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !17142)
!17145 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !17142)
!17146 = !DILocation(line: 0, scope: !15828, inlinedAt: !17147)
!17147 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !17142)
!17148 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !17147)
!17149 = !DILocation(line: 896, column: 8, scope: !17124)
!17150 = !DILocation(line: 897, column: 1, scope: !17124)
!17151 = distinct !DISubprogram(name: "z_set_prio", scope: !2466, file: !2466, line: 902, type: !16156, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17152)
!17152 = !{!17153, !17154, !17155, !17156, !17158}
!17153 = !DILocalVariable(name: "thread", arg: 1, scope: !17151, file: !2466, line: 902, type: !2359)
!17154 = !DILocalVariable(name: "prio", arg: 2, scope: !17151, file: !2466, line: 902, type: !105)
!17155 = !DILocalVariable(name: "need_sched", scope: !17151, file: !2466, line: 904, type: !492)
!17156 = !DILocalVariable(name: "__i", scope: !17157, file: !2466, line: 906, type: !15772)
!17157 = distinct !DILexicalBlock(scope: !17151, file: !2466, line: 906, column: 2)
!17158 = !DILocalVariable(name: "__key", scope: !17157, file: !2466, line: 906, type: !15772)
!17159 = !DILocation(line: 0, scope: !17151)
!17160 = !DILocation(line: 0, scope: !17157)
!17161 = !DILocation(line: 0, scope: !15780, inlinedAt: !17162)
!17162 = distinct !DILocation(line: 906, column: 2, scope: !17157)
!17163 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !17164)
!17164 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !17162)
!17165 = !DILocation(line: 0, scope: !15789, inlinedAt: !17164)
!17166 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !17162)
!17167 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !17162)
!17168 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !17162)
!17169 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !17162)
!17170 = !DILocation(line: 907, column: 16, scope: !17171)
!17171 = distinct !DILexicalBlock(scope: !17172, file: !2466, line: 906, column: 26)
!17172 = distinct !DILexicalBlock(scope: !17157, file: !2466, line: 906, column: 2)
!17173 = !DILocation(line: 909, column: 7, scope: !17171)
!17174 = !DILocation(line: 0, scope: !15972, inlinedAt: !17175)
!17175 = distinct !DILocation(line: 912, column: 5, scope: !17176)
!17176 = distinct !DILexicalBlock(scope: !17177, file: !2466, line: 911, column: 63)
!17177 = distinct !DILexicalBlock(scope: !17178, file: !2466, line: 911, column: 8)
!17178 = distinct !DILexicalBlock(scope: !17179, file: !2466, line: 909, column: 19)
!17179 = distinct !DILexicalBlock(scope: !17171, file: !2466, line: 909, column: 7)
!17180 = !DILocation(line: 266, column: 28, scope: !15972, inlinedAt: !17175)
!17181 = !DILocation(line: 0, scope: !15980, inlinedAt: !17182)
!17182 = distinct !DILocation(line: 268, column: 3, scope: !15984, inlinedAt: !17175)
!17183 = !DILocation(line: 234, column: 2, scope: !15980, inlinedAt: !17182)
!17184 = !DILocation(line: 913, column: 23, scope: !17176)
!17185 = !DILocation(line: 0, scope: !15989, inlinedAt: !17186)
!17186 = distinct !DILocation(line: 914, column: 5, scope: !17176)
!17187 = !DILocation(line: 252, column: 28, scope: !15989, inlinedAt: !17186)
!17188 = !DILocation(line: 0, scope: !15996, inlinedAt: !17189)
!17189 = distinct !DILocation(line: 254, column: 3, scope: !16000, inlinedAt: !17186)
!17190 = !DILocation(line: 0, scope: !16003, inlinedAt: !17191)
!17191 = distinct !DILocation(line: 229, column: 2, scope: !15996, inlinedAt: !17189)
!17192 = !DILocation(line: 186, column: 2, scope: !16013, inlinedAt: !17191)
!17193 = !DILocation(line: 186, column: 2, scope: !16014, inlinedAt: !17191)
!17194 = !DILocation(line: 186, column: 2, scope: !16017, inlinedAt: !17191)
!17195 = !DILocation(line: 188, column: 2, scope: !16019, inlinedAt: !17191)
!17196 = !DILocation(line: 188, column: 2, scope: !16021, inlinedAt: !17191)
!17197 = !DILocation(line: 0, scope: !16019, inlinedAt: !17191)
!17198 = !DILocation(line: 189, column: 7, scope: !16024, inlinedAt: !17191)
!17199 = !DILocation(line: 189, column: 35, scope: !16024, inlinedAt: !17191)
!17200 = !DILocation(line: 189, column: 7, scope: !16025, inlinedAt: !17191)
!17201 = !DILocation(line: 190, column: 4, scope: !16029, inlinedAt: !17191)
!17202 = !DILocation(line: 192, column: 4, scope: !16029, inlinedAt: !17191)
!17203 = distinct !{!17203, !17195, !17204}
!17204 = !DILocation(line: 194, column: 2, scope: !16019, inlinedAt: !17191)
!17205 = !DILocation(line: 196, column: 2, scope: !16003, inlinedAt: !17191)
!17206 = !DILocation(line: 197, column: 1, scope: !16003, inlinedAt: !17191)
!17207 = !DILocation(line: 918, column: 4, scope: !17178)
!17208 = !DILocation(line: 919, column: 3, scope: !17178)
!17209 = !DILocation(line: 920, column: 22, scope: !17210)
!17210 = distinct !DILexicalBlock(scope: !17179, file: !2466, line: 919, column: 10)
!17211 = !DILocation(line: 0, scope: !15814, inlinedAt: !17212)
!17212 = distinct !DILocation(line: 906, column: 2, scope: !17172)
!17213 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !17212)
!17214 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !17212)
!17215 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !17212)
!17216 = !DILocation(line: 0, scope: !15828, inlinedAt: !17217)
!17217 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !17212)
!17218 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !17217)
!17219 = !DILocation(line: 926, column: 2, scope: !17151)
!17220 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2466, file: !2466, line: 929, type: !17221, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17223)
!17221 = !DISubroutineType(types: !17222)
!17222 = !{null, !2359, !105}
!17223 = !{!17224, !17225, !17226}
!17224 = !DILocalVariable(name: "thread", arg: 1, scope: !17220, file: !2466, line: 929, type: !2359)
!17225 = !DILocalVariable(name: "prio", arg: 2, scope: !17220, file: !2466, line: 929, type: !105)
!17226 = !DILocalVariable(name: "need_sched", scope: !17220, file: !2466, line: 931, type: !492)
!17227 = !DILocation(line: 0, scope: !17220)
!17228 = !DILocation(line: 931, column: 20, scope: !17220)
!17229 = !DILocation(line: 935, column: 17, scope: !17230)
!17230 = distinct !DILexicalBlock(scope: !17220, file: !2466, line: 935, column: 6)
!17231 = !DILocation(line: 935, column: 20, scope: !17230)
!17232 = !DILocation(line: 935, column: 35, scope: !17230)
!17233 = !DILocation(line: 935, column: 48, scope: !17230)
!17234 = !DILocation(line: 935, column: 6, scope: !17220)
!17235 = !DILocation(line: 936, column: 3, scope: !17236)
!17236 = distinct !DILexicalBlock(scope: !17230, file: !2466, line: 935, column: 55)
!17237 = !DILocation(line: 937, column: 2, scope: !17236)
!17238 = !DILocation(line: 938, column: 1, scope: !17220)
!17239 = distinct !DISubprogram(name: "k_sched_lock", scope: !2466, file: !2466, line: 987, type: !266, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17240)
!17240 = !{!17241, !17243}
!17241 = !DILocalVariable(name: "__i", scope: !17242, file: !2466, line: 989, type: !15772)
!17242 = distinct !DILexicalBlock(scope: !17239, file: !2466, line: 989, column: 2)
!17243 = !DILocalVariable(name: "__key", scope: !17242, file: !2466, line: 989, type: !15772)
!17244 = !DILocation(line: 0, scope: !17242)
!17245 = !DILocation(line: 0, scope: !15780, inlinedAt: !17246)
!17246 = distinct !DILocation(line: 989, column: 2, scope: !17242)
!17247 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !17248)
!17248 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !17246)
!17249 = !DILocation(line: 0, scope: !15789, inlinedAt: !17248)
!17250 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !17246)
!17251 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !17246)
!17252 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !17246)
!17253 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !17246)
!17254 = !DILocation(line: 992, column: 3, scope: !17255)
!17255 = distinct !DILexicalBlock(scope: !17256, file: !2466, line: 989, column: 26)
!17256 = distinct !DILexicalBlock(scope: !17242, file: !2466, line: 989, column: 2)
!17257 = !DILocation(line: 0, scope: !15814, inlinedAt: !17258)
!17258 = distinct !DILocation(line: 989, column: 2, scope: !17256)
!17259 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !17258)
!17260 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !17258)
!17261 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !17258)
!17262 = !DILocation(line: 0, scope: !15828, inlinedAt: !17263)
!17263 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !17258)
!17264 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !17263)
!17265 = !DILocation(line: 994, column: 1, scope: !17239)
!17266 = distinct !DISubprogram(name: "z_sched_lock", scope: !14135, file: !14135, line: 251, type: !266, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !397)
!17267 = !DILocation(line: 1031, column: 3, scope: !16550, inlinedAt: !17268)
!17268 = distinct !DILocation(line: 48, column: 10, scope: !16554, inlinedAt: !17269)
!17269 = distinct !DILocation(line: 253, column: 2, scope: !17270)
!17270 = distinct !DILexicalBlock(scope: !17271, file: !14135, line: 253, column: 2)
!17271 = distinct !DILexicalBlock(scope: !17266, file: !14135, line: 253, column: 2)
!17272 = !DILocation(line: 0, scope: !16550, inlinedAt: !17268)
!17273 = !DILocation(line: 48, column: 9, scope: !16554, inlinedAt: !17269)
!17274 = !DILocation(line: 253, column: 2, scope: !17271)
!17275 = !DILocation(line: 253, column: 2, scope: !17276)
!17276 = distinct !DILexicalBlock(scope: !17270, file: !14135, line: 253, column: 2)
!17277 = !DILocation(line: 254, column: 2, scope: !17278)
!17278 = distinct !DILexicalBlock(scope: !17279, file: !14135, line: 254, column: 2)
!17279 = distinct !DILexicalBlock(scope: !17266, file: !14135, line: 254, column: 2)
!17280 = !DILocation(line: 254, column: 2, scope: !17279)
!17281 = !DILocation(line: 254, column: 2, scope: !17282)
!17282 = distinct !DILexicalBlock(scope: !17278, file: !14135, line: 254, column: 2)
!17283 = !DILocation(line: 256, column: 2, scope: !17266)
!17284 = !DILocation(line: 258, column: 2, scope: !17285)
!17285 = distinct !DILexicalBlock(scope: !17266, file: !14135, line: 258, column: 2)
!17286 = !{i64 2154199729}
!17287 = !DILocation(line: 259, column: 1, scope: !17266)
!17288 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2466, file: !2466, line: 996, type: !266, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17289)
!17289 = !{!17290, !17292}
!17290 = !DILocalVariable(name: "__i", scope: !17291, file: !2466, line: 998, type: !15772)
!17291 = distinct !DILexicalBlock(scope: !17288, file: !2466, line: 998, column: 2)
!17292 = !DILocalVariable(name: "__key", scope: !17291, file: !2466, line: 998, type: !15772)
!17293 = !DILocation(line: 0, scope: !17291)
!17294 = !DILocation(line: 0, scope: !15780, inlinedAt: !17295)
!17295 = distinct !DILocation(line: 998, column: 2, scope: !17291)
!17296 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !17297)
!17297 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !17295)
!17298 = !DILocation(line: 0, scope: !15789, inlinedAt: !17297)
!17299 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !17295)
!17300 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !17295)
!17301 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !17295)
!17302 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !17295)
!17303 = !DILocation(line: 999, column: 3, scope: !17304)
!17304 = distinct !DILexicalBlock(scope: !17305, file: !2466, line: 999, column: 3)
!17305 = distinct !DILexicalBlock(scope: !17306, file: !2466, line: 999, column: 3)
!17306 = distinct !DILexicalBlock(scope: !17307, file: !2466, line: 998, column: 26)
!17307 = distinct !DILexicalBlock(scope: !17291, file: !2466, line: 998, column: 2)
!17308 = !DILocation(line: 999, column: 3, scope: !17305)
!17309 = !DILocation(line: 999, column: 3, scope: !17310)
!17310 = distinct !DILexicalBlock(scope: !17304, file: !2466, line: 999, column: 3)
!17311 = !DILocation(line: 1031, column: 3, scope: !16550, inlinedAt: !17312)
!17312 = distinct !DILocation(line: 48, column: 10, scope: !16554, inlinedAt: !17313)
!17313 = distinct !DILocation(line: 1000, column: 3, scope: !17314)
!17314 = distinct !DILexicalBlock(scope: !17315, file: !2466, line: 1000, column: 3)
!17315 = distinct !DILexicalBlock(scope: !17306, file: !2466, line: 1000, column: 3)
!17316 = !DILocation(line: 0, scope: !16550, inlinedAt: !17312)
!17317 = !DILocation(line: 48, column: 9, scope: !16554, inlinedAt: !17313)
!17318 = !DILocation(line: 1000, column: 3, scope: !17315)
!17319 = !DILocation(line: 1000, column: 3, scope: !17320)
!17320 = distinct !DILexicalBlock(scope: !17314, file: !2466, line: 1000, column: 3)
!17321 = !DILocation(line: 1002, column: 5, scope: !17306)
!17322 = !DILocation(line: 1002, column: 20, scope: !17306)
!17323 = !DILocation(line: 1002, column: 3, scope: !17306)
!17324 = !DILocation(line: 1003, column: 3, scope: !17306)
!17325 = !DILocation(line: 0, scope: !15814, inlinedAt: !17326)
!17326 = distinct !DILocation(line: 998, column: 2, scope: !17307)
!17327 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !17326)
!17328 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !17326)
!17329 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !17326)
!17330 = !DILocation(line: 0, scope: !15828, inlinedAt: !17331)
!17331 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !17326)
!17332 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !17331)
!17333 = !DILocation(line: 1011, column: 2, scope: !17288)
!17334 = !DILocation(line: 1012, column: 1, scope: !17288)
!17335 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2466, file: !2466, line: 1014, type: !16129, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !397)
!17336 = !DILocation(line: 1028, column: 25, scope: !17335)
!17337 = !DILocation(line: 1028, column: 2, scope: !17335)
!17338 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2466, file: !2466, line: 1155, type: !17339, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17341)
!17339 = !DISubroutineType(types: !17340)
!17340 = !{!492, !2388, !2388}
!17341 = !{!17342, !17343, !17344, !17345, !17346}
!17342 = !DILocalVariable(name: "a", arg: 1, scope: !17338, file: !2466, line: 1155, type: !2388)
!17343 = !DILocalVariable(name: "b", arg: 2, scope: !17338, file: !2466, line: 1155, type: !2388)
!17344 = !DILocalVariable(name: "thread_a", scope: !17338, file: !2466, line: 1157, type: !2359)
!17345 = !DILocalVariable(name: "thread_b", scope: !17338, file: !2466, line: 1157, type: !2359)
!17346 = !DILocalVariable(name: "cmp", scope: !17338, file: !2466, line: 1158, type: !116)
!17347 = !DILocation(line: 0, scope: !17338)
!17348 = !DILocation(line: 1160, column: 13, scope: !17338)
!17349 = !DILocation(line: 1161, column: 13, scope: !17338)
!17350 = !DILocation(line: 1163, column: 8, scope: !17338)
!17351 = !DILocation(line: 1165, column: 10, scope: !17352)
!17352 = distinct !DILexicalBlock(scope: !17338, file: !2466, line: 1165, column: 6)
!17353 = !DILocation(line: 1165, column: 6, scope: !17338)
!17354 = !DILocation(line: 1167, column: 17, scope: !17355)
!17355 = distinct !DILexicalBlock(scope: !17352, file: !2466, line: 1167, column: 13)
!17356 = !DILocation(line: 1167, column: 13, scope: !17352)
!17357 = !DILocation(line: 1170, column: 25, scope: !17358)
!17358 = distinct !DILexicalBlock(scope: !17355, file: !2466, line: 1169, column: 9)
!17359 = !DILocation(line: 1170, column: 52, scope: !17358)
!17360 = !DILocation(line: 1170, column: 35, scope: !17358)
!17361 = !DILocation(line: 1170, column: 3, scope: !17358)
!17362 = !DILocation(line: 0, scope: !17352)
!17363 = !DILocation(line: 1173, column: 1, scope: !17338)
!17364 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2466, file: !2466, line: 1175, type: !17365, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17380)
!17365 = !DISubroutineType(types: !17366)
!17366 = !{null, !17367, !2359}
!17367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17368, size: 32)
!17368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !17369, line: 37, size: 128, elements: !17370)
!17369 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17370 = !{!17371, !17379}
!17371 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !17368, file: !17369, line: 38, baseType: !17372, size: 96)
!17372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !153, line: 83, size: 96, elements: !17373)
!17373 = !{!17374, !17375, !17378}
!17374 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !17372, file: !153, line: 84, baseType: !2388, size: 32)
!17375 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !17372, file: !153, line: 85, baseType: !17376, size: 32, offset: 32)
!17376 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !153, line: 81, baseType: !17377)
!17377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17339, size: 32)
!17378 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !17372, file: !153, line: 86, baseType: !105, size: 32, offset: 64)
!17379 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !17368, file: !17369, line: 39, baseType: !105, size: 32, offset: 96)
!17380 = !{!17381, !17382, !17383, !17384, !17393}
!17381 = !DILocalVariable(name: "pq", arg: 1, scope: !17364, file: !2466, line: 1175, type: !17367)
!17382 = !DILocalVariable(name: "thread", arg: 2, scope: !17364, file: !2466, line: 1175, type: !2359)
!17383 = !DILocalVariable(name: "t", scope: !17364, file: !2466, line: 1177, type: !2359)
!17384 = !DILocalVariable(name: "__f", scope: !17385, file: !2466, line: 1190, type: !17388)
!17385 = distinct !DILexicalBlock(scope: !17386, file: !2466, line: 1190, column: 3)
!17386 = distinct !DILexicalBlock(scope: !17387, file: !2466, line: 1189, column: 27)
!17387 = distinct !DILexicalBlock(scope: !17364, file: !2466, line: 1189, column: 6)
!17388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !153, line: 155, size: 96, elements: !17389)
!17389 = !{!17390, !17391, !17392}
!17390 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !17388, file: !153, line: 156, baseType: !2461, size: 32)
!17391 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !17388, file: !153, line: 157, baseType: !432, size: 32, offset: 32)
!17392 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !17388, file: !153, line: 158, baseType: !116, size: 32, offset: 64)
!17393 = !DILocalVariable(name: "n", scope: !17394, file: !2466, line: 1190, type: !2388)
!17394 = distinct !DILexicalBlock(scope: !17395, file: !2466, line: 1190, column: 3)
!17395 = distinct !DILexicalBlock(scope: !17385, file: !2466, line: 1190, column: 3)
!17396 = !DILocation(line: 0, scope: !17364)
!17397 = !DILocation(line: 1179, column: 2, scope: !17398)
!17398 = distinct !DILexicalBlock(scope: !17399, file: !2466, line: 1179, column: 2)
!17399 = distinct !DILexicalBlock(scope: !17364, file: !2466, line: 1179, column: 2)
!17400 = !DILocation(line: 1179, column: 2, scope: !17399)
!17401 = !DILocation(line: 1179, column: 2, scope: !17402)
!17402 = distinct !DILexicalBlock(scope: !17398, file: !2466, line: 1179, column: 2)
!17403 = !DILocation(line: 1181, column: 31, scope: !17364)
!17404 = !DILocation(line: 1181, column: 45, scope: !17364)
!17405 = !DILocation(line: 1181, column: 15, scope: !17364)
!17406 = !DILocation(line: 1181, column: 25, scope: !17364)
!17407 = !DILocation(line: 1189, column: 11, scope: !17387)
!17408 = !DILocation(line: 1189, column: 7, scope: !17387)
!17409 = !DILocation(line: 1189, column: 6, scope: !17364)
!17410 = !DILocation(line: 1190, column: 3, scope: !17385)
!17411 = !DILocation(line: 1190, column: 3, scope: !17394)
!17412 = !DILocation(line: 0, scope: !17394)
!17413 = !DILocation(line: 1190, column: 3, scope: !17395)
!17414 = !DILocation(line: 1193, column: 2, scope: !17386)
!17415 = !DILocation(line: 1191, column: 42, scope: !17416)
!17416 = distinct !DILexicalBlock(scope: !17395, file: !2466, line: 1190, column: 54)
!17417 = !DILocation(line: 1191, column: 12, scope: !17416)
!17418 = !DILocation(line: 1191, column: 22, scope: !17416)
!17419 = distinct !{!17419, !17410, !17420}
!17420 = !DILocation(line: 1192, column: 3, scope: !17385)
!17421 = !DILocation(line: 1195, column: 17, scope: !17364)
!17422 = !DILocation(line: 1195, column: 37, scope: !17364)
!17423 = !DILocation(line: 1195, column: 2, scope: !17364)
!17424 = !DILocation(line: 1196, column: 1, scope: !17364)
!17425 = !DISubprogram(name: "z_rb_foreach_next", scope: !153, file: !153, line: 176, type: !17426, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!17426 = !DISubroutineType(types: !17427)
!17427 = !{!2388, !17428, !17429}
!17428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17372, size: 32)
!17429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17388, size: 32)
!17430 = !DISubprogram(name: "rb_insert", scope: !153, file: !153, line: 105, type: !17431, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!17431 = !DISubroutineType(types: !17432)
!17432 = !{null, !17428, !2388}
!17433 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2466, file: !2466, line: 1198, type: !17365, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17434)
!17434 = !{!17435, !17436}
!17435 = !DILocalVariable(name: "pq", arg: 1, scope: !17433, file: !2466, line: 1198, type: !17367)
!17436 = !DILocalVariable(name: "thread", arg: 2, scope: !17433, file: !2466, line: 1198, type: !2359)
!17437 = !DILocation(line: 0, scope: !17433)
!17438 = !DILocation(line: 1200, column: 2, scope: !17439)
!17439 = distinct !DILexicalBlock(scope: !17440, file: !2466, line: 1200, column: 2)
!17440 = distinct !DILexicalBlock(scope: !17433, file: !2466, line: 1200, column: 2)
!17441 = !DILocation(line: 1200, column: 2, scope: !17440)
!17442 = !DILocation(line: 1200, column: 2, scope: !17443)
!17443 = distinct !DILexicalBlock(scope: !17439, file: !2466, line: 1200, column: 2)
!17444 = !DILocation(line: 1202, column: 17, scope: !17433)
!17445 = !DILocation(line: 1202, column: 37, scope: !17433)
!17446 = !DILocation(line: 1202, column: 2, scope: !17433)
!17447 = !DILocation(line: 1204, column: 16, scope: !17448)
!17448 = distinct !DILexicalBlock(scope: !17433, file: !2466, line: 1204, column: 6)
!17449 = !DILocation(line: 1204, column: 7, scope: !17448)
!17450 = !DILocation(line: 1204, column: 6, scope: !17433)
!17451 = !DILocation(line: 1205, column: 7, scope: !17452)
!17452 = distinct !DILexicalBlock(scope: !17448, file: !2466, line: 1204, column: 22)
!17453 = !DILocation(line: 1205, column: 22, scope: !17452)
!17454 = !DILocation(line: 1206, column: 2, scope: !17452)
!17455 = !DILocation(line: 1207, column: 1, scope: !17433)
!17456 = !DISubprogram(name: "rb_remove", scope: !153, file: !153, line: 110, type: !17431, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!17457 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2466, file: !2466, line: 1209, type: !17458, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17460)
!17458 = !DISubroutineType(types: !17459)
!17459 = !{!2359, !17367}
!17460 = !{!17461, !17462, !17463}
!17461 = !DILocalVariable(name: "pq", arg: 1, scope: !17457, file: !2466, line: 1209, type: !17367)
!17462 = !DILocalVariable(name: "thread", scope: !17457, file: !2466, line: 1211, type: !2359)
!17463 = !DILocalVariable(name: "n", scope: !17457, file: !2466, line: 1212, type: !2388)
!17464 = !DILocation(line: 0, scope: !17457)
!17465 = !DILocation(line: 1212, column: 37, scope: !17457)
!17466 = !DILocation(line: 1212, column: 21, scope: !17457)
!17467 = !DILocation(line: 1217, column: 2, scope: !17457)
!17468 = distinct !DISubprogram(name: "rb_get_min", scope: !153, file: !153, line: 115, type: !17469, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17471)
!17469 = !DISubroutineType(types: !17470)
!17470 = !{!2388, !17428}
!17471 = !{!17472}
!17472 = !DILocalVariable(name: "tree", arg: 1, scope: !17468, file: !153, line: 115, type: !17428)
!17473 = !DILocation(line: 0, scope: !17468)
!17474 = !DILocation(line: 117, column: 9, scope: !17468)
!17475 = !DILocation(line: 117, column: 2, scope: !17468)
!17476 = !DISubprogram(name: "z_rb_get_minmax", scope: !153, file: !153, line: 100, type: !17477, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !397)
!17477 = !DISubroutineType(types: !17478)
!17478 = !{!2388, !17428, !169}
!17479 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2466, file: !2466, line: 1246, type: !17480, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17490)
!17480 = !DISubroutineType(types: !17481)
!17481 = !{!2359, !17482}
!17482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17483, size: 32)
!17483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !17369, line: 53, size: 2080, elements: !17484)
!17484 = !{!17485, !17489}
!17485 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !17483, file: !17369, line: 54, baseType: !17486, size: 2048)
!17486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2395, size: 2048, elements: !17487)
!17487 = !{!17488}
!17488 = !DISubrange(count: 32)
!17489 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !17483, file: !17369, line: 55, baseType: !32, size: 32, offset: 2048)
!17490 = !{!17491, !17492, !17493, !17494}
!17491 = !DILocalVariable(name: "pq", arg: 1, scope: !17479, file: !2466, line: 1246, type: !17482)
!17492 = !DILocalVariable(name: "thread", scope: !17479, file: !2466, line: 1252, type: !2359)
!17493 = !DILocalVariable(name: "l", scope: !17479, file: !2466, line: 1253, type: !16006)
!17494 = !DILocalVariable(name: "n", scope: !17479, file: !2466, line: 1254, type: !2462)
!17495 = !DILocation(line: 0, scope: !17479)
!17496 = !DILocation(line: 1248, column: 11, scope: !17497)
!17497 = distinct !DILexicalBlock(scope: !17479, file: !2466, line: 1248, column: 6)
!17498 = !DILocation(line: 1248, column: 7, scope: !17497)
!17499 = !DILocation(line: 1248, column: 6, scope: !17479)
!17500 = !DILocation(line: 1253, column: 31, scope: !17479)
!17501 = !DILocation(line: 1253, column: 20, scope: !17479)
!17502 = !DILocation(line: 1254, column: 19, scope: !17479)
!17503 = !DILocation(line: 1260, column: 1, scope: !17479)
!17504 = distinct !DISubprogram(name: "z_unpend_all", scope: !2466, file: !2466, line: 1262, type: !17505, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17507)
!17505 = !DISubroutineType(types: !17506)
!17506 = !{!105, !2390}
!17507 = !{!17508, !17509, !17510}
!17508 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17504, file: !2466, line: 1262, type: !2390)
!17509 = !DILocalVariable(name: "need_sched", scope: !17504, file: !2466, line: 1264, type: !105)
!17510 = !DILocalVariable(name: "thread", scope: !17504, file: !2466, line: 1265, type: !2359)
!17511 = !DILocation(line: 0, scope: !17504)
!17512 = !DILocation(line: 1267, column: 19, scope: !17504)
!17513 = !DILocation(line: 1267, column: 41, scope: !17504)
!17514 = !DILocation(line: 1267, column: 2, scope: !17504)
!17515 = !DILocation(line: 1268, column: 3, scope: !17516)
!17516 = distinct !DILexicalBlock(scope: !17504, file: !2466, line: 1267, column: 50)
!17517 = !DILocation(line: 1269, column: 3, scope: !17516)
!17518 = distinct !{!17518, !17514, !17519}
!17519 = !DILocation(line: 1271, column: 2, scope: !17504)
!17520 = !DILocation(line: 1273, column: 2, scope: !17504)
!17521 = distinct !DISubprogram(name: "z_waitq_head", scope: !14496, file: !14496, line: 52, type: !17050, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17522)
!17522 = !{!17523}
!17523 = !DILocalVariable(name: "w", arg: 1, scope: !17521, file: !14496, line: 52, type: !2390)
!17524 = !DILocation(line: 0, scope: !17521)
!17525 = !DILocation(line: 54, column: 52, scope: !17521)
!17526 = !DILocation(line: 54, column: 28, scope: !17521)
!17527 = !DILocation(line: 54, column: 9, scope: !17521)
!17528 = !DILocation(line: 54, column: 2, scope: !17521)
!17529 = distinct !DISubprogram(name: "init_ready_q", scope: !2466, file: !2466, line: 1276, type: !17530, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17537)
!17530 = !DISubroutineType(types: !17531)
!17531 = !{null, !17532}
!17532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17533, size: 32)
!17533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !163, line: 83, size: 96, elements: !17534)
!17534 = !{!17535, !17536}
!17535 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !17533, file: !163, line: 86, baseType: !2359, size: 32)
!17536 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !17533, file: !163, line: 90, baseType: !2395, size: 64, offset: 32)
!17537 = !{!17538}
!17538 = !DILocalVariable(name: "rq", arg: 1, scope: !17529, file: !2466, line: 1276, type: !17532)
!17539 = !DILocation(line: 0, scope: !17529)
!17540 = !DILocation(line: 1289, column: 22, scope: !17529)
!17541 = !DILocation(line: 1289, column: 2, scope: !17529)
!17542 = !DILocation(line: 1291, column: 1, scope: !17529)
!17543 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !17544, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17546)
!17544 = !DISubroutineType(types: !17545)
!17545 = !{null, !16006}
!17546 = !{!17547}
!17547 = !DILocalVariable(name: "list", arg: 1, scope: !17543, file: !137, line: 197, type: !16006)
!17548 = !DILocation(line: 0, scope: !17543)
!17549 = !DILocation(line: 199, column: 8, scope: !17543)
!17550 = !DILocation(line: 199, column: 13, scope: !17543)
!17551 = !DILocation(line: 200, column: 8, scope: !17543)
!17552 = !DILocation(line: 200, column: 13, scope: !17543)
!17553 = !DILocation(line: 201, column: 1, scope: !17543)
!17554 = distinct !DISubprogram(name: "z_sched_init", scope: !2466, file: !2466, line: 1293, type: !266, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !397)
!17555 = !DILocation(line: 1302, column: 2, scope: !17554)
!17556 = !DILocation(line: 1306, column: 2, scope: !17554)
!17557 = !DILocation(line: 1309, column: 1, scope: !17554)
!17558 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2466, file: !2466, line: 1311, type: !17559, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17562)
!17559 = !DISubroutineType(types: !17560)
!17560 = !{!105, !17561}
!17561 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !2359)
!17562 = !{!17563}
!17563 = !DILocalVariable(name: "thread", arg: 1, scope: !17558, file: !2466, line: 1311, type: !17561)
!17564 = !DILocation(line: 0, scope: !17558)
!17565 = !DILocation(line: 1313, column: 22, scope: !17558)
!17566 = !DILocation(line: 1313, column: 9, scope: !17558)
!17567 = !DILocation(line: 1313, column: 2, scope: !17558)
!17568 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2466, file: !2466, line: 1325, type: !17569, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17571)
!17569 = !DISubroutineType(types: !17570)
!17570 = !{null, !17561, !105}
!17571 = !{!17572, !17573, !17574}
!17572 = !DILocalVariable(name: "thread", arg: 1, scope: !17568, file: !2466, line: 1325, type: !17561)
!17573 = !DILocalVariable(name: "prio", arg: 2, scope: !17568, file: !2466, line: 1325, type: !105)
!17574 = !DILocalVariable(name: "th", scope: !17568, file: !2466, line: 1334, type: !2359)
!17575 = !DILocation(line: 0, scope: !17568)
!17576 = !DILocation(line: 1331, column: 2, scope: !17577)
!17577 = distinct !DILexicalBlock(scope: !17578, file: !2466, line: 1331, column: 2)
!17578 = distinct !DILexicalBlock(scope: !17579, file: !2466, line: 1331, column: 2)
!17579 = distinct !DILexicalBlock(scope: !17568, file: !2466, line: 1331, column: 2)
!17580 = !DILocation(line: 1331, column: 2, scope: !17581)
!17581 = distinct !DILexicalBlock(scope: !17577, file: !2466, line: 1331, column: 2)
!17582 = !DILocation(line: 1031, column: 3, scope: !16550, inlinedAt: !17583)
!17583 = distinct !DILocation(line: 48, column: 10, scope: !16554, inlinedAt: !17584)
!17584 = distinct !DILocation(line: 1332, column: 2, scope: !17585)
!17585 = distinct !DILexicalBlock(scope: !17586, file: !2466, line: 1332, column: 2)
!17586 = distinct !DILexicalBlock(scope: !17568, file: !2466, line: 1332, column: 2)
!17587 = !DILocation(line: 0, scope: !16550, inlinedAt: !17583)
!17588 = !DILocation(line: 48, column: 9, scope: !16554, inlinedAt: !17584)
!17589 = !DILocation(line: 1332, column: 2, scope: !17586)
!17590 = !DILocation(line: 1332, column: 2, scope: !17591)
!17591 = distinct !DILexicalBlock(scope: !17585, file: !2466, line: 1332, column: 2)
!17592 = !DILocation(line: 1336, column: 2, scope: !17568)
!17593 = !DILocation(line: 1337, column: 1, scope: !17568)
!17594 = distinct !DISubprogram(name: "k_can_yield", scope: !2466, file: !2466, line: 1384, type: !8799, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !397)
!17595 = !DILocation(line: 1386, column: 11, scope: !17594)
!17596 = !DILocation(line: 1386, column: 29, scope: !17594)
!17597 = !DILocation(line: 1386, column: 32, scope: !17594)
!17598 = !DILocation(line: 1386, column: 46, scope: !17594)
!17599 = !DILocation(line: 1387, column: 28, scope: !17594)
!17600 = !DILocation(line: 1387, column: 4, scope: !17594)
!17601 = !DILocation(line: 1386, column: 2, scope: !17594)
!17602 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !122, file: !122, line: 989, type: !8799, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !397)
!17603 = !DILocation(line: 993, column: 10, scope: !17602)
!17604 = !DILocation(line: 993, column: 2, scope: !17602)
!17605 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2466, file: !2466, line: 1390, type: !266, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17606)
!17606 = !{!17607}
!17607 = !DILocalVariable(name: "key", scope: !17605, file: !2466, line: 1396, type: !15772)
!17608 = !DILocation(line: 1031, column: 3, scope: !16550, inlinedAt: !17609)
!17609 = distinct !DILocation(line: 48, column: 10, scope: !16554, inlinedAt: !17610)
!17610 = distinct !DILocation(line: 1392, column: 2, scope: !17611)
!17611 = distinct !DILexicalBlock(scope: !17612, file: !2466, line: 1392, column: 2)
!17612 = distinct !DILexicalBlock(scope: !17605, file: !2466, line: 1392, column: 2)
!17613 = !DILocation(line: 0, scope: !16550, inlinedAt: !17609)
!17614 = !DILocation(line: 48, column: 9, scope: !16554, inlinedAt: !17610)
!17615 = !DILocation(line: 1392, column: 2, scope: !17612)
!17616 = !DILocation(line: 1392, column: 2, scope: !17617)
!17617 = distinct !DILexicalBlock(scope: !17611, file: !2466, line: 1392, column: 2)
!17618 = !DILocation(line: 0, scope: !15780, inlinedAt: !17619)
!17619 = distinct !DILocation(line: 1396, column: 25, scope: !17605)
!17620 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !17621)
!17621 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !17619)
!17622 = !DILocation(line: 0, scope: !15789, inlinedAt: !17621)
!17623 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !17619)
!17624 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !17619)
!17625 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !17619)
!17626 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !17619)
!17627 = !DILocation(line: 0, scope: !17605)
!17628 = !DILocation(line: 1400, column: 18, scope: !17629)
!17629 = distinct !DILexicalBlock(scope: !17630, file: !2466, line: 1399, column: 36)
!17630 = distinct !DILexicalBlock(scope: !17605, file: !2466, line: 1398, column: 6)
!17631 = !DILocation(line: 0, scope: !15972, inlinedAt: !17632)
!17632 = distinct !DILocation(line: 1400, column: 3, scope: !17629)
!17633 = !DILocation(line: 266, column: 15, scope: !15972, inlinedAt: !17632)
!17634 = !DILocation(line: 266, column: 28, scope: !15972, inlinedAt: !17632)
!17635 = !DILocation(line: 0, scope: !15980, inlinedAt: !17636)
!17636 = distinct !DILocation(line: 268, column: 3, scope: !15984, inlinedAt: !17632)
!17637 = !DILocation(line: 234, column: 2, scope: !15980, inlinedAt: !17636)
!17638 = !DILocation(line: 1402, column: 15, scope: !17605)
!17639 = !DILocation(line: 0, scope: !15989, inlinedAt: !17640)
!17640 = distinct !DILocation(line: 1402, column: 2, scope: !17605)
!17641 = !DILocation(line: 252, column: 15, scope: !15989, inlinedAt: !17640)
!17642 = !DILocation(line: 252, column: 28, scope: !15989, inlinedAt: !17640)
!17643 = !DILocation(line: 0, scope: !15996, inlinedAt: !17644)
!17644 = distinct !DILocation(line: 254, column: 3, scope: !16000, inlinedAt: !17640)
!17645 = !DILocation(line: 0, scope: !16003, inlinedAt: !17646)
!17646 = distinct !DILocation(line: 229, column: 2, scope: !15996, inlinedAt: !17644)
!17647 = !DILocation(line: 186, column: 2, scope: !16013, inlinedAt: !17646)
!17648 = !DILocation(line: 186, column: 2, scope: !16014, inlinedAt: !17646)
!17649 = !DILocation(line: 186, column: 2, scope: !16017, inlinedAt: !17646)
!17650 = !DILocation(line: 188, column: 2, scope: !16019, inlinedAt: !17646)
!17651 = !DILocation(line: 188, column: 2, scope: !16021, inlinedAt: !17646)
!17652 = !DILocation(line: 0, scope: !16019, inlinedAt: !17646)
!17653 = !DILocation(line: 189, column: 7, scope: !16024, inlinedAt: !17646)
!17654 = !DILocation(line: 189, column: 35, scope: !16024, inlinedAt: !17646)
!17655 = !DILocation(line: 189, column: 7, scope: !16025, inlinedAt: !17646)
!17656 = !DILocation(line: 191, column: 21, scope: !16029, inlinedAt: !17646)
!17657 = !DILocation(line: 190, column: 4, scope: !16029, inlinedAt: !17646)
!17658 = !DILocation(line: 192, column: 4, scope: !16029, inlinedAt: !17646)
!17659 = distinct !{!17659, !17650, !17660}
!17660 = !DILocation(line: 194, column: 2, scope: !16019, inlinedAt: !17646)
!17661 = !DILocation(line: 196, column: 37, scope: !16003, inlinedAt: !17646)
!17662 = !DILocation(line: 196, column: 2, scope: !16003, inlinedAt: !17646)
!17663 = !DILocation(line: 197, column: 1, scope: !16003, inlinedAt: !17646)
!17664 = !DILocation(line: 1403, column: 2, scope: !17605)
!17665 = !DILocation(line: 0, scope: !16501, inlinedAt: !17666)
!17666 = distinct !DILocation(line: 1404, column: 2, scope: !17605)
!17667 = !DILocation(line: 0, scope: !16510, inlinedAt: !17668)
!17668 = distinct !DILocation(line: 195, column: 2, scope: !16501, inlinedAt: !17666)
!17669 = !DILocation(line: 225, column: 2, scope: !16517, inlinedAt: !17668)
!17670 = !DILocation(line: 225, column: 2, scope: !16518, inlinedAt: !17668)
!17671 = !DILocation(line: 225, column: 2, scope: !16521, inlinedAt: !17668)
!17672 = !DILocation(line: 196, column: 9, scope: !16501, inlinedAt: !17666)
!17673 = !DILocation(line: 1405, column: 1, scope: !17605)
!17674 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2466, file: !2466, line: 1459, type: !17675, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17677)
!17675 = !DISubroutineType(types: !17676)
!17676 = !{!116, !16711}
!17677 = !{!17678, !17679, !17680}
!17678 = !DILocalVariable(name: "timeout", arg: 1, scope: !17674, file: !2466, line: 1459, type: !16711)
!17679 = !DILocalVariable(name: "ticks", scope: !17674, file: !2466, line: 1461, type: !107)
!17680 = !DILocalVariable(name: "ret", scope: !17674, file: !2466, line: 1480, type: !116)
!17681 = !DILocation(line: 0, scope: !17674)
!17682 = !DILocation(line: 1031, column: 3, scope: !16550, inlinedAt: !17683)
!17683 = distinct !DILocation(line: 48, column: 10, scope: !16554, inlinedAt: !17684)
!17684 = distinct !DILocation(line: 1463, column: 2, scope: !17685)
!17685 = distinct !DILexicalBlock(scope: !17686, file: !2466, line: 1463, column: 2)
!17686 = distinct !DILexicalBlock(scope: !17674, file: !2466, line: 1463, column: 2)
!17687 = !DILocation(line: 0, scope: !16550, inlinedAt: !17683)
!17688 = !DILocation(line: 48, column: 9, scope: !16554, inlinedAt: !17684)
!17689 = !DILocation(line: 1463, column: 2, scope: !17686)
!17690 = !DILocation(line: 1463, column: 2, scope: !17691)
!17691 = distinct !DILexicalBlock(scope: !17685, file: !2466, line: 1463, column: 2)
!17692 = !DILocation(line: 1468, column: 6, scope: !17693)
!17693 = distinct !DILexicalBlock(scope: !17674, file: !2466, line: 1468, column: 6)
!17694 = !DILocation(line: 1468, column: 6, scope: !17674)
!17695 = !DILocation(line: 1469, column: 20, scope: !17696)
!17696 = distinct !DILexicalBlock(scope: !17693, file: !2466, line: 1468, column: 40)
!17697 = !DILocation(line: 1469, column: 3, scope: !17696)
!17698 = !DILocation(line: 1473, column: 3, scope: !17696)
!17699 = !DILocation(line: 1478, column: 10, scope: !17674)
!17700 = !DILocation(line: 1480, column: 16, scope: !17674)
!17701 = !DILocation(line: 1485, column: 1, scope: !17674)
!17702 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3414, file: !3414, line: 310, type: !17703, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17705)
!17703 = !DISubroutineType(types: !17704)
!17704 = !{null, !17561}
!17705 = !{!17706}
!17706 = !DILocalVariable(name: "thread", arg: 1, scope: !17702, file: !3414, line: 310, type: !17561)
!17707 = !DILocation(line: 0, scope: !17702)
!17708 = !DILocation(line: 319, column: 2, scope: !17709)
!17709 = distinct !DILexicalBlock(scope: !17702, file: !3414, line: 319, column: 2)
!17710 = !{i64 2154115885}
!17711 = !DILocation(line: 320, column: 2, scope: !17702)
!17712 = !DILocation(line: 321, column: 1, scope: !17702)
!17713 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2466, file: !2466, line: 1415, type: !17714, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17716)
!17714 = !DISubroutineType(types: !17715)
!17715 = !{!116, !107}
!17716 = !{!17717, !17718, !17719, !17720}
!17717 = !DILocalVariable(name: "ticks", arg: 1, scope: !17713, file: !2466, line: 1415, type: !107)
!17718 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17713, file: !2466, line: 1418, type: !113)
!17719 = !DILocalVariable(name: "timeout", scope: !17713, file: !2466, line: 1430, type: !16711)
!17720 = !DILocalVariable(name: "key", scope: !17713, file: !2466, line: 1437, type: !15772)
!17721 = !DILocation(line: 0, scope: !17713)
!17722 = !DILocation(line: 1031, column: 3, scope: !16550, inlinedAt: !17723)
!17723 = distinct !DILocation(line: 48, column: 10, scope: !16554, inlinedAt: !17724)
!17724 = distinct !DILocation(line: 1420, column: 2, scope: !17725)
!17725 = distinct !DILexicalBlock(scope: !17726, file: !2466, line: 1420, column: 2)
!17726 = distinct !DILexicalBlock(scope: !17713, file: !2466, line: 1420, column: 2)
!17727 = !DILocation(line: 0, scope: !16550, inlinedAt: !17723)
!17728 = !DILocation(line: 48, column: 9, scope: !16554, inlinedAt: !17724)
!17729 = !DILocation(line: 1420, column: 2, scope: !17726)
!17730 = !DILocation(line: 1420, column: 2, scope: !17731)
!17731 = distinct !DILexicalBlock(scope: !17725, file: !2466, line: 1420, column: 2)
!17732 = !DILocation(line: 1425, column: 12, scope: !17733)
!17733 = distinct !DILexicalBlock(scope: !17713, file: !2466, line: 1425, column: 6)
!17734 = !DILocation(line: 1425, column: 6, scope: !17713)
!17735 = !DILocation(line: 1426, column: 3, scope: !17736)
!17736 = distinct !DILexicalBlock(scope: !17733, file: !2466, line: 1425, column: 18)
!17737 = !DILocation(line: 1427, column: 3, scope: !17736)
!17738 = !DILocation(line: 1431, column: 24, scope: !17739)
!17739 = distinct !DILexicalBlock(scope: !17713, file: !2466, line: 1431, column: 6)
!17740 = !DILocation(line: 1431, column: 6, scope: !17713)
!17741 = !DILocation(line: 1432, column: 35, scope: !17742)
!17742 = distinct !DILexicalBlock(scope: !17739, file: !2466, line: 1431, column: 30)
!17743 = !DILocation(line: 1432, column: 27, scope: !17742)
!17744 = !DILocation(line: 1433, column: 2, scope: !17742)
!17745 = !DILocation(line: 1434, column: 27, scope: !17746)
!17746 = distinct !DILexicalBlock(scope: !17739, file: !2466, line: 1433, column: 9)
!17747 = !DILocation(line: 0, scope: !17739)
!17748 = !DILocation(line: 0, scope: !15780, inlinedAt: !17749)
!17749 = distinct !DILocation(line: 1437, column: 25, scope: !17713)
!17750 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !17751)
!17751 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !17749)
!17752 = !DILocation(line: 0, scope: !15789, inlinedAt: !17751)
!17753 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !17749)
!17754 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !17749)
!17755 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !17749)
!17756 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !17749)
!17757 = !DILocation(line: 1440, column: 20, scope: !17713)
!17758 = !DILocation(line: 1440, column: 18, scope: !17713)
!17759 = !DILocation(line: 1442, column: 2, scope: !17713)
!17760 = !DILocation(line: 1443, column: 23, scope: !17713)
!17761 = !DILocation(line: 1443, column: 2, scope: !17713)
!17762 = !DILocation(line: 1444, column: 29, scope: !17713)
!17763 = !DILocation(line: 1444, column: 2, scope: !17713)
!17764 = !DILocation(line: 0, scope: !16501, inlinedAt: !17765)
!17765 = distinct !DILocation(line: 1446, column: 8, scope: !17713)
!17766 = !DILocation(line: 0, scope: !16510, inlinedAt: !17767)
!17767 = distinct !DILocation(line: 195, column: 2, scope: !16501, inlinedAt: !17765)
!17768 = !DILocation(line: 225, column: 2, scope: !16517, inlinedAt: !17767)
!17769 = !DILocation(line: 225, column: 2, scope: !16518, inlinedAt: !17767)
!17770 = !DILocation(line: 225, column: 2, scope: !16521, inlinedAt: !17767)
!17771 = !DILocation(line: 196, column: 9, scope: !16501, inlinedAt: !17765)
!17772 = !DILocation(line: 1448, column: 2, scope: !17773)
!17773 = distinct !DILexicalBlock(scope: !17774, file: !2466, line: 1448, column: 2)
!17774 = distinct !DILexicalBlock(scope: !17713, file: !2466, line: 1448, column: 2)
!17775 = !DILocation(line: 1448, column: 2, scope: !17774)
!17776 = !DILocation(line: 1448, column: 2, scope: !17777)
!17777 = distinct !DILexicalBlock(scope: !17773, file: !2466, line: 1448, column: 2)
!17778 = !DILocation(line: 1450, column: 10, scope: !17713)
!17779 = !DILocation(line: 1450, column: 45, scope: !17713)
!17780 = !DILocation(line: 1450, column: 43, scope: !17713)
!17781 = !DILocation(line: 1451, column: 6, scope: !17713)
!17782 = !DILocation(line: 1457, column: 1, scope: !17713)
!17783 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !14752, file: !14752, line: 1103, type: !14753, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17784)
!17784 = !{!17785}
!17785 = !DILocalVariable(name: "t", arg: 1, scope: !17783, file: !14752, line: 1103, type: !114)
!17786 = !DILocation(line: 0, scope: !17783)
!17787 = !DILocation(line: 0, scope: !15840, inlinedAt: !17788)
!17788 = distinct !DILocation(line: 1106, column: 9, scope: !17783)
!17789 = !DILocation(line: 139, column: 13, scope: !17790, inlinedAt: !17788)
!17790 = distinct !DILexicalBlock(scope: !17791, file: !14752, line: 138, column: 10)
!17791 = distinct !DILexicalBlock(scope: !17792, file: !14752, line: 136, column: 7)
!17792 = distinct !DILexicalBlock(scope: !15861, file: !14752, line: 134, column: 17)
!17793 = !DILocation(line: 1106, column: 2, scope: !17783)
!17794 = distinct !DISubprogram(name: "k_yield", scope: !3414, file: !3414, line: 140, type: !266, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !397)
!17795 = !DILocation(line: 148, column: 2, scope: !17796)
!17796 = distinct !DILexicalBlock(scope: !17794, file: !3414, line: 148, column: 2)
!17797 = !{i64 2154115205}
!17798 = !DILocation(line: 149, column: 2, scope: !17794)
!17799 = !DILocation(line: 150, column: 1, scope: !17794)
!17800 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2466, file: !2466, line: 1495, type: !17801, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17803)
!17801 = !DISubroutineType(types: !17802)
!17802 = !{!116, !105}
!17803 = !{!17804, !17805}
!17804 = !DILocalVariable(name: "us", arg: 1, scope: !17800, file: !2466, line: 1495, type: !105)
!17805 = !DILocalVariable(name: "ticks", scope: !17800, file: !2466, line: 1497, type: !116)
!17806 = !DILocation(line: 0, scope: !17800)
!17807 = !DILocation(line: 1501, column: 31, scope: !17800)
!17808 = !DILocation(line: 1501, column: 10, scope: !17800)
!17809 = !DILocation(line: 1502, column: 23, scope: !17800)
!17810 = !DILocation(line: 1502, column: 10, scope: !17800)
!17811 = !DILocation(line: 1506, column: 31, scope: !17800)
!17812 = !DILocation(line: 1506, column: 9, scope: !17800)
!17813 = !DILocation(line: 1506, column: 2, scope: !17800)
!17814 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !14752, file: !14752, line: 571, type: !14753, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17815)
!17815 = !{!17816}
!17816 = !DILocalVariable(name: "t", arg: 1, scope: !17814, file: !14752, line: 571, type: !114)
!17817 = !DILocation(line: 0, scope: !17814)
!17818 = !DILocation(line: 0, scope: !15840, inlinedAt: !17819)
!17819 = distinct !DILocation(line: 574, column: 9, scope: !17814)
!17820 = !DILocation(line: 135, column: 5, scope: !17792, inlinedAt: !17819)
!17821 = !DILocation(line: 139, column: 13, scope: !17790, inlinedAt: !17819)
!17822 = !DILocation(line: 574, column: 2, scope: !17814)
!17823 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !14752, file: !14752, line: 1187, type: !14753, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17824)
!17824 = !{!17825}
!17825 = !DILocalVariable(name: "t", arg: 1, scope: !17823, file: !14752, line: 1187, type: !114)
!17826 = !DILocation(line: 0, scope: !17823)
!17827 = !DILocation(line: 0, scope: !15840, inlinedAt: !17828)
!17828 = distinct !DILocation(line: 1190, column: 9, scope: !17823)
!17829 = !DILocation(line: 145, column: 13, scope: !17830, inlinedAt: !17828)
!17830 = distinct !DILexicalBlock(scope: !15858, file: !14752, line: 144, column: 10)
!17831 = !DILocation(line: 1190, column: 2, scope: !17823)
!17832 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2466, file: !2466, line: 1517, type: !17703, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17833)
!17833 = !{!17834}
!17834 = !DILocalVariable(name: "thread", arg: 1, scope: !17832, file: !2466, line: 1517, type: !17561)
!17835 = !DILocation(line: 0, scope: !17832)
!17836 = !DILocation(line: 1521, column: 6, scope: !17837)
!17837 = distinct !DILexicalBlock(scope: !17832, file: !2466, line: 1521, column: 6)
!17838 = !DILocation(line: 1521, column: 6, scope: !17832)
!17839 = !DILocation(line: 1525, column: 6, scope: !17840)
!17840 = distinct !DILexicalBlock(scope: !17832, file: !2466, line: 1525, column: 6)
!17841 = !DILocation(line: 1525, column: 37, scope: !17840)
!17842 = !DILocation(line: 1525, column: 6, scope: !17832)
!17843 = !DILocation(line: 1527, column: 20, scope: !17844)
!17844 = distinct !DILexicalBlock(scope: !17845, file: !2466, line: 1527, column: 7)
!17845 = distinct !DILexicalBlock(scope: !17840, file: !2466, line: 1525, column: 42)
!17846 = !DILocation(line: 1527, column: 33, scope: !17844)
!17847 = !DILocation(line: 1527, column: 7, scope: !17845)
!17848 = !DILocation(line: 1532, column: 2, scope: !17832)
!17849 = !DILocation(line: 1533, column: 2, scope: !17832)
!17850 = !DILocation(line: 1031, column: 3, scope: !16550, inlinedAt: !17851)
!17851 = distinct !DILocation(line: 48, column: 10, scope: !16554, inlinedAt: !17852)
!17852 = distinct !DILocation(line: 1537, column: 7, scope: !17853)
!17853 = distinct !DILexicalBlock(scope: !17832, file: !2466, line: 1537, column: 6)
!17854 = !DILocation(line: 0, scope: !16550, inlinedAt: !17851)
!17855 = !DILocation(line: 48, column: 9, scope: !16554, inlinedAt: !17852)
!17856 = !DILocation(line: 1537, column: 6, scope: !17832)
!17857 = !DILocation(line: 1538, column: 3, scope: !17858)
!17858 = distinct !DILexicalBlock(scope: !17853, file: !2466, line: 1537, column: 25)
!17859 = !DILocation(line: 1539, column: 2, scope: !17858)
!17860 = !DILocation(line: 1540, column: 1, scope: !17832)
!17861 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14135, file: !14135, line: 101, type: !15921, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17862)
!17862 = !{!17863}
!17863 = !DILocalVariable(name: "thread", arg: 1, scope: !17861, file: !14135, line: 101, type: !2359)
!17864 = !DILocation(line: 0, scope: !17861)
!17865 = !DILocation(line: 103, column: 23, scope: !17861)
!17866 = !DILocation(line: 103, column: 36, scope: !17861)
!17867 = !DILocation(line: 103, column: 55, scope: !17861)
!17868 = !DILocation(line: 103, column: 2, scope: !17861)
!17869 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2466, file: !2466, line: 1567, type: !17870, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17872)
!17870 = !DISubroutineType(types: !17871)
!17871 = !{!17561}
!17872 = !{!17873}
!17873 = !DILocalVariable(name: "ret", scope: !17869, file: !2466, line: 1577, type: !17561)
!17874 = !DILocation(line: 1577, column: 30, scope: !17869)
!17875 = !DILocation(line: 0, scope: !17869)
!17876 = !DILocation(line: 1582, column: 2, scope: !17869)
!17877 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2466, file: !2466, line: 1593, type: !9101, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !397)
!17878 = !DILocation(line: 1031, column: 3, scope: !16550, inlinedAt: !17879)
!17879 = distinct !DILocation(line: 48, column: 10, scope: !16554, inlinedAt: !17880)
!17880 = distinct !DILocation(line: 1595, column: 10, scope: !17877)
!17881 = !DILocation(line: 0, scope: !16550, inlinedAt: !17879)
!17882 = !DILocation(line: 48, column: 9, scope: !16554, inlinedAt: !17880)
!17883 = !DILocation(line: 1595, column: 27, scope: !17877)
!17884 = !DILocation(line: 1595, column: 41, scope: !17877)
!17885 = !DILocation(line: 1595, column: 30, scope: !17877)
!17886 = !DILocation(line: 1595, column: 2, scope: !17877)
!17887 = distinct !DISubprogram(name: "z_thread_abort", scope: !2466, file: !2466, line: 1725, type: !15738, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17888)
!17888 = !{!17889, !17890}
!17889 = !DILocalVariable(name: "thread", arg: 1, scope: !17887, file: !2466, line: 1725, type: !2359)
!17890 = !DILocalVariable(name: "key", scope: !17887, file: !2466, line: 1727, type: !15772)
!17891 = !DILocation(line: 0, scope: !17887)
!17892 = !DILocation(line: 0, scope: !15780, inlinedAt: !17893)
!17893 = distinct !DILocation(line: 1727, column: 25, scope: !17887)
!17894 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !17895)
!17895 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !17893)
!17896 = !DILocation(line: 0, scope: !15789, inlinedAt: !17895)
!17897 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !17893)
!17898 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !17893)
!17899 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !17893)
!17900 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !17893)
!17901 = !DILocation(line: 1729, column: 20, scope: !17902)
!17902 = distinct !DILexicalBlock(scope: !17887, file: !2466, line: 1729, column: 6)
!17903 = !DILocation(line: 1729, column: 33, scope: !17902)
!17904 = !DILocation(line: 1729, column: 48, scope: !17902)
!17905 = !DILocation(line: 1729, column: 6, scope: !17887)
!17906 = !DILocation(line: 0, scope: !15814, inlinedAt: !17907)
!17907 = distinct !DILocation(line: 1730, column: 3, scope: !17908)
!17908 = distinct !DILexicalBlock(scope: !17902, file: !2466, line: 1729, column: 54)
!17909 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !17907)
!17910 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !17907)
!17911 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !17907)
!17912 = !DILocation(line: 0, scope: !15828, inlinedAt: !17913)
!17913 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !17907)
!17914 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !17913)
!17915 = !DILocation(line: 1731, column: 3, scope: !17916)
!17916 = distinct !DILexicalBlock(scope: !17917, file: !2466, line: 1731, column: 3)
!17917 = distinct !DILexicalBlock(scope: !17918, file: !2466, line: 1731, column: 3)
!17918 = distinct !DILexicalBlock(scope: !17908, file: !2466, line: 1731, column: 3)
!17919 = !DILocation(line: 1736, column: 20, scope: !17920)
!17920 = distinct !DILexicalBlock(scope: !17887, file: !2466, line: 1736, column: 6)
!17921 = !DILocation(line: 1736, column: 33, scope: !17920)
!17922 = !DILocation(line: 1736, column: 49, scope: !17920)
!17923 = !DILocation(line: 1736, column: 6, scope: !17887)
!17924 = !DILocation(line: 0, scope: !15814, inlinedAt: !17925)
!17925 = distinct !DILocation(line: 1737, column: 3, scope: !17926)
!17926 = distinct !DILexicalBlock(scope: !17920, file: !2466, line: 1736, column: 56)
!17927 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !17925)
!17928 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !17925)
!17929 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !17925)
!17930 = !DILocation(line: 0, scope: !15828, inlinedAt: !17931)
!17931 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !17925)
!17932 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !17931)
!17933 = !DILocation(line: 1738, column: 3, scope: !17926)
!17934 = !DILocation(line: 1775, column: 2, scope: !17887)
!17935 = !DILocation(line: 1776, column: 16, scope: !17936)
!17936 = distinct !DILexicalBlock(scope: !17887, file: !2466, line: 1776, column: 6)
!17937 = !DILocation(line: 1776, column: 13, scope: !17936)
!17938 = !DILocation(line: 1776, column: 25, scope: !17936)
!17939 = !DILocation(line: 1031, column: 3, scope: !16550, inlinedAt: !17940)
!17940 = distinct !DILocation(line: 48, column: 10, scope: !16554, inlinedAt: !17941)
!17941 = distinct !DILocation(line: 1776, column: 29, scope: !17936)
!17942 = !DILocation(line: 0, scope: !16550, inlinedAt: !17940)
!17943 = !DILocation(line: 48, column: 9, scope: !16554, inlinedAt: !17941)
!17944 = !DILocation(line: 1776, column: 6, scope: !17887)
!17945 = !DILocation(line: 0, scope: !16501, inlinedAt: !17946)
!17946 = distinct !DILocation(line: 1777, column: 3, scope: !17947)
!17947 = distinct !DILexicalBlock(scope: !17936, file: !2466, line: 1776, column: 47)
!17948 = !DILocation(line: 0, scope: !16510, inlinedAt: !17949)
!17949 = distinct !DILocation(line: 195, column: 2, scope: !16501, inlinedAt: !17946)
!17950 = !DILocation(line: 225, column: 2, scope: !16517, inlinedAt: !17949)
!17951 = !DILocation(line: 225, column: 2, scope: !16518, inlinedAt: !17949)
!17952 = !DILocation(line: 225, column: 2, scope: !16521, inlinedAt: !17949)
!17953 = !DILocation(line: 196, column: 9, scope: !16501, inlinedAt: !17946)
!17954 = !DILocation(line: 1778, column: 3, scope: !17955)
!17955 = distinct !DILexicalBlock(scope: !17956, file: !2466, line: 1778, column: 3)
!17956 = distinct !DILexicalBlock(scope: !17957, file: !2466, line: 1778, column: 3)
!17957 = distinct !DILexicalBlock(scope: !17947, file: !2466, line: 1778, column: 3)
!17958 = !DILocation(line: 0, scope: !15814, inlinedAt: !17959)
!17959 = distinct !DILocation(line: 1780, column: 2, scope: !17887)
!17960 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !17959)
!17961 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !17959)
!17962 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !17959)
!17963 = !DILocation(line: 0, scope: !15828, inlinedAt: !17964)
!17964 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !17959)
!17965 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !17964)
!17966 = !DILocation(line: 1781, column: 1, scope: !17887)
!17967 = distinct !DISubprogram(name: "end_thread", scope: !2466, file: !2466, line: 1690, type: !15738, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !17968)
!17968 = !{!17969}
!17969 = !DILocalVariable(name: "thread", arg: 1, scope: !17967, file: !2466, line: 1690, type: !2359)
!17970 = !DILocation(line: 0, scope: !17967)
!17971 = !DILocation(line: 1695, column: 20, scope: !17972)
!17972 = distinct !DILexicalBlock(scope: !17967, file: !2466, line: 1695, column: 6)
!17973 = !DILocation(line: 1695, column: 33, scope: !17972)
!17974 = !DILocation(line: 1695, column: 49, scope: !17972)
!17975 = !DILocation(line: 1695, column: 6, scope: !17967)
!17976 = !DILocation(line: 1697, column: 29, scope: !17977)
!17977 = distinct !DILexicalBlock(scope: !17972, file: !2466, line: 1695, column: 56)
!17978 = !DILocation(line: 1698, column: 7, scope: !17979)
!17979 = distinct !DILexicalBlock(scope: !17977, file: !2466, line: 1698, column: 7)
!17980 = !DILocation(line: 1698, column: 7, scope: !17977)
!17981 = !DILocation(line: 0, scope: !15972, inlinedAt: !17982)
!17982 = distinct !DILocation(line: 1699, column: 4, scope: !17983)
!17983 = distinct !DILexicalBlock(scope: !17979, file: !2466, line: 1698, column: 35)
!17984 = !DILocation(line: 266, column: 28, scope: !15972, inlinedAt: !17982)
!17985 = !DILocation(line: 0, scope: !15980, inlinedAt: !17986)
!17986 = distinct !DILocation(line: 268, column: 3, scope: !15984, inlinedAt: !17982)
!17987 = !DILocation(line: 234, column: 2, scope: !15980, inlinedAt: !17986)
!17988 = !DILocation(line: 1700, column: 3, scope: !17983)
!17989 = !DILocation(line: 1701, column: 20, scope: !17990)
!17990 = distinct !DILexicalBlock(scope: !17977, file: !2466, line: 1701, column: 7)
!17991 = !DILocation(line: 1701, column: 30, scope: !17990)
!17992 = !DILocation(line: 1701, column: 7, scope: !17977)
!17993 = !DILocation(line: 1702, column: 4, scope: !17994)
!17994 = distinct !DILexicalBlock(scope: !17990, file: !2466, line: 1701, column: 39)
!17995 = !DILocation(line: 1703, column: 3, scope: !17994)
!17996 = !DILocation(line: 1704, column: 9, scope: !17977)
!17997 = !DILocation(line: 1705, column: 23, scope: !17977)
!17998 = !DILocation(line: 1705, column: 3, scope: !17977)
!17999 = !DILocation(line: 1706, column: 3, scope: !17977)
!18000 = !DILocation(line: 1722, column: 2, scope: !17977)
!18001 = !DILocation(line: 1723, column: 1, scope: !17967)
!18002 = distinct !DISubprogram(name: "unpend_all", scope: !2466, file: !2466, line: 1674, type: !18003, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !18005)
!18003 = !DISubroutineType(types: !18004)
!18004 = !{null, !2390}
!18005 = !{!18006, !18007}
!18006 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18002, file: !2466, line: 1674, type: !2390)
!18007 = !DILocalVariable(name: "thread", scope: !18002, file: !2466, line: 1676, type: !2359)
!18008 = !DILocation(line: 0, scope: !18002)
!18009 = !DILocation(line: 1678, column: 19, scope: !18002)
!18010 = !DILocation(line: 1678, column: 41, scope: !18002)
!18011 = !DILocation(line: 1678, column: 2, scope: !18002)
!18012 = !DILocation(line: 1679, column: 3, scope: !18013)
!18013 = distinct !DILexicalBlock(scope: !18002, file: !2466, line: 1678, column: 50)
!18014 = !DILocation(line: 1680, column: 9, scope: !18013)
!18015 = !DILocalVariable(name: "thread", arg: 1, scope: !18016, file: !14176, line: 65, type: !2359)
!18016 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14176, file: !14176, line: 65, type: !18017, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !18019)
!18017 = !DISubroutineType(types: !18018)
!18018 = !{null, !2359, !32}
!18019 = !{!18015, !18020}
!18020 = !DILocalVariable(name: "value", arg: 2, scope: !18016, file: !14176, line: 65, type: !32)
!18021 = !DILocation(line: 0, scope: !18016, inlinedAt: !18022)
!18022 = distinct !DILocation(line: 1681, column: 3, scope: !18013)
!18023 = !DILocation(line: 67, column: 15, scope: !18016, inlinedAt: !18022)
!18024 = !DILocation(line: 67, column: 33, scope: !18016, inlinedAt: !18022)
!18025 = !DILocation(line: 1682, column: 3, scope: !18013)
!18026 = distinct !{!18026, !18011, !18027}
!18027 = !DILocation(line: 1683, column: 2, scope: !18002)
!18028 = !DILocation(line: 1684, column: 1, scope: !18002)
!18029 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2466, file: !2466, line: 1794, type: !18030, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !18032)
!18030 = !DISubroutineType(types: !18031)
!18031 = !{!105, !2359, !16711}
!18032 = !{!18033, !18034, !18035, !18036}
!18033 = !DILocalVariable(name: "thread", arg: 1, scope: !18029, file: !2466, line: 1794, type: !2359)
!18034 = !DILocalVariable(name: "timeout", arg: 2, scope: !18029, file: !2466, line: 1794, type: !16711)
!18035 = !DILocalVariable(name: "key", scope: !18029, file: !2466, line: 1796, type: !15772)
!18036 = !DILocalVariable(name: "ret", scope: !18029, file: !2466, line: 1797, type: !105)
!18037 = !DILocation(line: 0, scope: !18029)
!18038 = !DILocation(line: 0, scope: !15780, inlinedAt: !18039)
!18039 = distinct !DILocation(line: 1796, column: 25, scope: !18029)
!18040 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !18041)
!18041 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !18039)
!18042 = !DILocation(line: 0, scope: !15789, inlinedAt: !18041)
!18043 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !18039)
!18044 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !18039)
!18045 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !18039)
!18046 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !18039)
!18047 = !DILocation(line: 1801, column: 20, scope: !18048)
!18048 = distinct !DILexicalBlock(scope: !18029, file: !2466, line: 1801, column: 6)
!18049 = !DILocation(line: 1801, column: 33, scope: !18048)
!18050 = !DILocation(line: 1801, column: 49, scope: !18048)
!18051 = !DILocation(line: 1801, column: 6, scope: !18029)
!18052 = !DILocation(line: 1803, column: 13, scope: !18053)
!18053 = distinct !DILexicalBlock(scope: !18048, file: !2466, line: 1803, column: 13)
!18054 = !DILocation(line: 1803, column: 13, scope: !18048)
!18055 = !DILocation(line: 1805, column: 24, scope: !18056)
!18056 = distinct !DILexicalBlock(scope: !18053, file: !2466, line: 1805, column: 13)
!18057 = !DILocation(line: 1805, column: 21, scope: !18056)
!18058 = !DILocation(line: 1805, column: 34, scope: !18056)
!18059 = !DILocation(line: 1806, column: 20, scope: !18056)
!18060 = !DILocation(line: 1806, column: 44, scope: !18056)
!18061 = !DILocation(line: 1806, column: 30, scope: !18056)
!18062 = !DILocation(line: 1805, column: 13, scope: !18053)
!18063 = !DILocation(line: 1031, column: 3, scope: !16550, inlinedAt: !18064)
!18064 = distinct !DILocation(line: 48, column: 10, scope: !16554, inlinedAt: !18065)
!18065 = distinct !DILocation(line: 1809, column: 3, scope: !18066)
!18066 = distinct !DILexicalBlock(scope: !18067, file: !2466, line: 1809, column: 3)
!18067 = distinct !DILexicalBlock(scope: !18068, file: !2466, line: 1809, column: 3)
!18068 = distinct !DILexicalBlock(scope: !18056, file: !2466, line: 1808, column: 9)
!18069 = !DILocation(line: 0, scope: !16550, inlinedAt: !18064)
!18070 = !DILocation(line: 48, column: 9, scope: !16554, inlinedAt: !18065)
!18071 = !DILocation(line: 1809, column: 3, scope: !18067)
!18072 = !DILocation(line: 1809, column: 3, scope: !18073)
!18073 = distinct !DILexicalBlock(scope: !18066, file: !2466, line: 1809, column: 3)
!18074 = !DILocation(line: 1810, column: 23, scope: !18068)
!18075 = !DILocation(line: 1810, column: 42, scope: !18068)
!18076 = !DILocation(line: 1810, column: 3, scope: !18068)
!18077 = !DILocation(line: 1811, column: 22, scope: !18068)
!18078 = !DILocation(line: 1811, column: 3, scope: !18068)
!18079 = !DILocation(line: 0, scope: !16501, inlinedAt: !18080)
!18080 = distinct !DILocation(line: 1814, column: 9, scope: !18068)
!18081 = !DILocation(line: 0, scope: !16510, inlinedAt: !18082)
!18082 = distinct !DILocation(line: 195, column: 2, scope: !16501, inlinedAt: !18080)
!18083 = !DILocation(line: 225, column: 2, scope: !16517, inlinedAt: !18082)
!18084 = !DILocation(line: 225, column: 2, scope: !16518, inlinedAt: !18082)
!18085 = !DILocation(line: 225, column: 2, scope: !16521, inlinedAt: !18082)
!18086 = !DILocation(line: 196, column: 9, scope: !16501, inlinedAt: !18080)
!18087 = !DILocation(line: 1817, column: 3, scope: !18068)
!18088 = !DILocation(line: 0, scope: !18048)
!18089 = !DILocation(line: 0, scope: !15814, inlinedAt: !18090)
!18090 = distinct !DILocation(line: 1822, column: 2, scope: !18029)
!18091 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !18090)
!18092 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !18090)
!18093 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !18090)
!18094 = !DILocation(line: 0, scope: !15828, inlinedAt: !18095)
!18095 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !18090)
!18096 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !18095)
!18097 = !DILocation(line: 1823, column: 2, scope: !18029)
!18098 = !DILocation(line: 1824, column: 1, scope: !18029)
!18099 = distinct !DISubprogram(name: "z_sched_wake", scope: !2466, file: !2466, line: 1882, type: !18100, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !18102)
!18100 = !DISubroutineType(types: !18101)
!18101 = !{!492, !2390, !105, !104}
!18102 = !{!18103, !18104, !18105, !18106, !18107, !18108, !18110}
!18103 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18099, file: !2466, line: 1882, type: !2390)
!18104 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !18099, file: !2466, line: 1882, type: !105)
!18105 = !DILocalVariable(name: "swap_data", arg: 3, scope: !18099, file: !2466, line: 1882, type: !104)
!18106 = !DILocalVariable(name: "thread", scope: !18099, file: !2466, line: 1884, type: !2359)
!18107 = !DILocalVariable(name: "ret", scope: !18099, file: !2466, line: 1885, type: !492)
!18108 = !DILocalVariable(name: "__i", scope: !18109, file: !2466, line: 1887, type: !15772)
!18109 = distinct !DILexicalBlock(scope: !18099, file: !2466, line: 1887, column: 2)
!18110 = !DILocalVariable(name: "__key", scope: !18109, file: !2466, line: 1887, type: !15772)
!18111 = !DILocation(line: 0, scope: !18099)
!18112 = !DILocation(line: 0, scope: !18109)
!18113 = !DILocation(line: 0, scope: !15780, inlinedAt: !18114)
!18114 = distinct !DILocation(line: 1887, column: 2, scope: !18109)
!18115 = !DILocation(line: 55, column: 2, scope: !15789, inlinedAt: !18116)
!18116 = distinct !DILocation(line: 145, column: 10, scope: !15780, inlinedAt: !18114)
!18117 = !DILocation(line: 0, scope: !15789, inlinedAt: !18116)
!18118 = !DILocation(line: 148, column: 2, scope: !15797, inlinedAt: !18114)
!18119 = !DILocation(line: 148, column: 2, scope: !15798, inlinedAt: !18114)
!18120 = !DILocation(line: 148, column: 2, scope: !15801, inlinedAt: !18114)
!18121 = !DILocation(line: 160, column: 2, scope: !15780, inlinedAt: !18114)
!18122 = !DILocation(line: 1888, column: 12, scope: !18123)
!18123 = distinct !DILexicalBlock(scope: !18124, file: !2466, line: 1887, column: 26)
!18124 = distinct !DILexicalBlock(scope: !18109, file: !2466, line: 1887, column: 2)
!18125 = !DILocation(line: 1890, column: 14, scope: !18126)
!18126 = distinct !DILexicalBlock(scope: !18123, file: !2466, line: 1890, column: 7)
!18127 = !DILocation(line: 1890, column: 7, scope: !18123)
!18128 = !DILocalVariable(name: "thread", arg: 1, scope: !18129, file: !15025, line: 134, type: !2359)
!18129 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15025, file: !15025, line: 134, type: !18130, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !18132)
!18130 = !DISubroutineType(types: !18131)
!18131 = !{null, !2359, !32, !104}
!18132 = !{!18128, !18133, !18134}
!18133 = !DILocalVariable(name: "value", arg: 2, scope: !18129, file: !15025, line: 135, type: !32)
!18134 = !DILocalVariable(name: "data", arg: 3, scope: !18129, file: !15025, line: 136, type: !104)
!18135 = !DILocation(line: 0, scope: !18129, inlinedAt: !18136)
!18136 = distinct !DILocation(line: 1891, column: 4, scope: !18137)
!18137 = distinct !DILexicalBlock(scope: !18126, file: !2466, line: 1890, column: 23)
!18138 = !DILocation(line: 0, scope: !18016, inlinedAt: !18139)
!18139 = distinct !DILocation(line: 138, column: 2, scope: !18129, inlinedAt: !18136)
!18140 = !DILocation(line: 67, column: 15, scope: !18016, inlinedAt: !18139)
!18141 = !DILocation(line: 67, column: 33, scope: !18016, inlinedAt: !18139)
!18142 = !DILocation(line: 139, column: 15, scope: !18129, inlinedAt: !18136)
!18143 = !DILocation(line: 139, column: 25, scope: !18129, inlinedAt: !18136)
!18144 = !DILocation(line: 1894, column: 4, scope: !18137)
!18145 = !DILocation(line: 1895, column: 10, scope: !18137)
!18146 = !DILocation(line: 1896, column: 4, scope: !18137)
!18147 = !DILocation(line: 1898, column: 3, scope: !18137)
!18148 = !DILocation(line: 0, scope: !15814, inlinedAt: !18149)
!18149 = distinct !DILocation(line: 1887, column: 2, scope: !18124)
!18150 = !DILocation(line: 194, column: 2, scope: !15822, inlinedAt: !18149)
!18151 = !DILocation(line: 194, column: 2, scope: !15823, inlinedAt: !18149)
!18152 = !DILocation(line: 194, column: 2, scope: !15826, inlinedAt: !18149)
!18153 = !DILocation(line: 0, scope: !15828, inlinedAt: !18154)
!18154 = distinct !DILocation(line: 215, column: 2, scope: !15814, inlinedAt: !18149)
!18155 = !DILocation(line: 95, column: 2, scope: !15828, inlinedAt: !18154)
!18156 = !DILocation(line: 1901, column: 2, scope: !18099)
!18157 = distinct !DISubprogram(name: "z_sched_wait", scope: !2466, file: !2466, line: 1904, type: !18158, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2356, retainedNodes: !18161)
!18158 = !DISubroutineType(types: !18159)
!18159 = !{!105, !15783, !15772, !2390, !16711, !18160}
!18160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 32)
!18161 = !{!18162, !18163, !18164, !18165, !18166, !18167}
!18162 = !DILocalVariable(name: "lock", arg: 1, scope: !18157, file: !2466, line: 1904, type: !15783)
!18163 = !DILocalVariable(name: "key", arg: 2, scope: !18157, file: !2466, line: 1904, type: !15772)
!18164 = !DILocalVariable(name: "wait_q", arg: 3, scope: !18157, file: !2466, line: 1905, type: !2390)
!18165 = !DILocalVariable(name: "timeout", arg: 4, scope: !18157, file: !2466, line: 1905, type: !16711)
!18166 = !DILocalVariable(name: "data", arg: 5, scope: !18157, file: !2466, line: 1905, type: !18160)
!18167 = !DILocalVariable(name: "ret", scope: !18157, file: !2466, line: 1907, type: !105)
!18168 = !DILocation(line: 0, scope: !18157)
!18169 = !DILocation(line: 1907, column: 12, scope: !18157)
!18170 = !DILocation(line: 1909, column: 11, scope: !18171)
!18171 = distinct !DILexicalBlock(scope: !18157, file: !2466, line: 1909, column: 6)
!18172 = !DILocation(line: 1909, column: 6, scope: !18157)
!18173 = !DILocation(line: 1910, column: 11, scope: !18174)
!18174 = distinct !DILexicalBlock(scope: !18171, file: !2466, line: 1909, column: 20)
!18175 = !DILocation(line: 1910, column: 26, scope: !18174)
!18176 = !DILocation(line: 1910, column: 9, scope: !18174)
!18177 = !DILocation(line: 1911, column: 2, scope: !18174)
!18178 = !DILocation(line: 1912, column: 2, scope: !18157)
!18179 = distinct !DISubprogram(name: "z_data_copy", scope: !18180, file: !18180, line: 22, type: !266, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3251, retainedNodes: !397)
!18180 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18181 = !DILocation(line: 24, column: 2, scope: !18179)
!18182 = !DILocation(line: 27, column: 2, scope: !18179)
!18183 = !DILocation(line: 71, column: 1, scope: !18179)
!18184 = distinct !DISubprogram(name: "z_add_timeout", scope: !2503, file: !2503, line: 88, type: !18185, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18191)
!18185 = !DISubroutineType(types: !18186)
!18186 = !{null, !2476, !2495, !18187}
!18187 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !18188)
!18188 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !18189)
!18189 = !{!18190}
!18190 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18188, file: !108, line: 66, baseType: !107, size: 64)
!18191 = !{!18192, !18193, !18194, !18195, !18201, !18202, !18205, !18208}
!18192 = !DILocalVariable(name: "to", arg: 1, scope: !18184, file: !2503, line: 88, type: !2476)
!18193 = !DILocalVariable(name: "fn", arg: 2, scope: !18184, file: !2503, line: 88, type: !2495)
!18194 = !DILocalVariable(name: "timeout", arg: 3, scope: !18184, file: !2503, line: 89, type: !18187)
!18195 = !DILocalVariable(name: "__i", scope: !18196, file: !2503, line: 102, type: !18197)
!18196 = distinct !DILexicalBlock(scope: !18184, file: !2503, line: 102, column: 2)
!18197 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !18198)
!18198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !18199)
!18199 = !{!18200}
!18200 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18198, file: !236, line: 33, baseType: !105, size: 32)
!18201 = !DILocalVariable(name: "__key", scope: !18196, file: !2503, line: 102, type: !18197)
!18202 = !DILocalVariable(name: "t", scope: !18203, file: !2503, line: 103, type: !2476)
!18203 = distinct !DILexicalBlock(scope: !18204, file: !2503, line: 102, column: 24)
!18204 = distinct !DILexicalBlock(scope: !18196, file: !2503, line: 102, column: 2)
!18205 = !DILocalVariable(name: "ticks", scope: !18206, file: !2503, line: 107, type: !107)
!18206 = distinct !DILexicalBlock(scope: !18207, file: !2503, line: 106, column: 39)
!18207 = distinct !DILexicalBlock(scope: !18203, file: !2503, line: 105, column: 7)
!18208 = !DILocalVariable(name: "next_time", scope: !18209, file: !2503, line: 137, type: !116)
!18209 = distinct !DILexicalBlock(scope: !18210, file: !2503, line: 127, column: 22)
!18210 = distinct !DILexicalBlock(scope: !18203, file: !2503, line: 127, column: 7)
!18211 = !DILocation(line: 0, scope: !18184)
!18212 = !DILocation(line: 91, column: 6, scope: !18213)
!18213 = distinct !DILexicalBlock(scope: !18184, file: !2503, line: 91, column: 6)
!18214 = !DILocation(line: 91, column: 6, scope: !18184)
!18215 = !DILocation(line: 99, column: 2, scope: !18216)
!18216 = distinct !DILexicalBlock(scope: !18217, file: !2503, line: 99, column: 2)
!18217 = distinct !DILexicalBlock(scope: !18184, file: !2503, line: 99, column: 2)
!18218 = !DILocation(line: 99, column: 2, scope: !18217)
!18219 = !DILocation(line: 99, column: 2, scope: !18220)
!18220 = distinct !DILexicalBlock(scope: !18216, file: !2503, line: 99, column: 2)
!18221 = !DILocation(line: 100, column: 6, scope: !18184)
!18222 = !DILocation(line: 100, column: 9, scope: !18184)
!18223 = !DILocation(line: 0, scope: !18196)
!18224 = !DILocalVariable(name: "l", arg: 1, scope: !18225, file: !236, line: 136, type: !18228)
!18225 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !18226, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18229)
!18226 = !DISubroutineType(types: !18227)
!18227 = !{!18197, !18228}
!18228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 32)
!18229 = !{!18224, !18230}
!18230 = !DILocalVariable(name: "k", scope: !18225, file: !236, line: 139, type: !18197)
!18231 = !DILocation(line: 0, scope: !18225, inlinedAt: !18232)
!18232 = distinct !DILocation(line: 102, column: 2, scope: !18196)
!18233 = !DILocation(line: 55, column: 2, scope: !18234, inlinedAt: !18238)
!18234 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7433, file: !7433, line: 42, type: !7434, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18235)
!18235 = !{!18236, !18237}
!18236 = !DILocalVariable(name: "key", scope: !18234, file: !7433, line: 44, type: !32)
!18237 = !DILocalVariable(name: "tmp", scope: !18234, file: !7433, line: 53, type: !32)
!18238 = distinct !DILocation(line: 145, column: 10, scope: !18225, inlinedAt: !18232)
!18239 = !{i64 1957321}
!18240 = !DILocation(line: 0, scope: !18234, inlinedAt: !18238)
!18241 = !DILocation(line: 148, column: 2, scope: !18242, inlinedAt: !18232)
!18242 = distinct !DILexicalBlock(scope: !18243, file: !236, line: 148, column: 2)
!18243 = distinct !DILexicalBlock(scope: !18225, file: !236, line: 148, column: 2)
!18244 = !DILocation(line: 148, column: 2, scope: !18243, inlinedAt: !18232)
!18245 = !DILocation(line: 148, column: 2, scope: !18246, inlinedAt: !18232)
!18246 = distinct !DILexicalBlock(scope: !18242, file: !236, line: 148, column: 2)
!18247 = !DILocation(line: 160, column: 2, scope: !18225, inlinedAt: !18232)
!18248 = !DILocation(line: 106, column: 33, scope: !18207)
!18249 = !DILocation(line: 105, column: 7, scope: !18203)
!18250 = !DILocation(line: 107, column: 50, scope: !18206)
!18251 = !DILocation(line: 107, column: 48, scope: !18206)
!18252 = !DILocation(line: 0, scope: !18206)
!18253 = !DILocation(line: 109, column: 17, scope: !18206)
!18254 = !DILocation(line: 110, column: 3, scope: !18206)
!18255 = !DILocation(line: 111, column: 31, scope: !18256)
!18256 = distinct !DILexicalBlock(scope: !18207, file: !2503, line: 110, column: 10)
!18257 = !DILocation(line: 111, column: 37, scope: !18256)
!18258 = !DILocation(line: 111, column: 35, scope: !18256)
!18259 = !DILocation(line: 0, scope: !18207)
!18260 = !DILocation(line: 109, column: 8, scope: !18206)
!18261 = !DILocation(line: 109, column: 15, scope: !18206)
!18262 = !DILocation(line: 114, column: 12, scope: !18263)
!18263 = distinct !DILexicalBlock(scope: !18203, file: !2503, line: 114, column: 3)
!18264 = !DILocation(line: 0, scope: !18203)
!18265 = !DILocation(line: 114, column: 3, scope: !18263)
!18266 = !DILocation(line: 115, column: 24, scope: !18267)
!18267 = distinct !DILexicalBlock(scope: !18268, file: !2503, line: 115, column: 8)
!18268 = distinct !DILexicalBlock(scope: !18269, file: !2503, line: 114, column: 45)
!18269 = distinct !DILexicalBlock(scope: !18263, file: !2503, line: 114, column: 3)
!18270 = !DILocation(line: 115, column: 11, scope: !18267)
!18271 = !DILocation(line: 115, column: 18, scope: !18267)
!18272 = !DILocation(line: 115, column: 8, scope: !18268)
!18273 = !DILocation(line: 116, column: 15, scope: !18274)
!18274 = distinct !DILexicalBlock(scope: !18267, file: !2503, line: 115, column: 32)
!18275 = !DILocation(line: 117, column: 26, scope: !18274)
!18276 = !DILocation(line: 117, column: 5, scope: !18274)
!18277 = !DILocation(line: 123, column: 7, scope: !18203)
!18278 = !DILocation(line: 120, column: 15, scope: !18268)
!18279 = !DILocation(line: 114, column: 36, scope: !18269)
!18280 = distinct !{!18280, !18265, !18281}
!18281 = !DILocation(line: 121, column: 3, scope: !18263)
!18282 = !DILocation(line: 124, column: 4, scope: !18283)
!18283 = distinct !DILexicalBlock(scope: !18284, file: !2503, line: 123, column: 18)
!18284 = distinct !DILexicalBlock(scope: !18203, file: !2503, line: 123, column: 7)
!18285 = !DILocation(line: 125, column: 3, scope: !18283)
!18286 = !DILocation(line: 127, column: 13, scope: !18210)
!18287 = !DILocation(line: 127, column: 10, scope: !18210)
!18288 = !DILocation(line: 127, column: 7, scope: !18203)
!18289 = !DILocation(line: 137, column: 24, scope: !18209)
!18290 = !DILocation(line: 0, scope: !18209)
!18291 = !DILocation(line: 139, column: 18, scope: !18292)
!18292 = distinct !DILexicalBlock(scope: !18209, file: !2503, line: 139, column: 8)
!18293 = !DILocation(line: 139, column: 23, scope: !18292)
!18294 = !DILocation(line: 141, column: 5, scope: !18295)
!18295 = distinct !DILexicalBlock(scope: !18292, file: !2503, line: 140, column: 48)
!18296 = !DILocation(line: 142, column: 4, scope: !18295)
!18297 = !DILocalVariable(name: "key", arg: 2, scope: !18298, file: !236, line: 190, type: !18197)
!18298 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !18299, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18301)
!18299 = !DISubroutineType(types: !18300)
!18300 = !{null, !18228, !18197}
!18301 = !{!18302, !18297}
!18302 = !DILocalVariable(name: "l", arg: 1, scope: !18298, file: !236, line: 189, type: !18228)
!18303 = !DILocation(line: 0, scope: !18298, inlinedAt: !18304)
!18304 = distinct !DILocation(line: 102, column: 2, scope: !18204)
!18305 = !DILocation(line: 194, column: 2, scope: !18306, inlinedAt: !18304)
!18306 = distinct !DILexicalBlock(scope: !18307, file: !236, line: 194, column: 2)
!18307 = distinct !DILexicalBlock(scope: !18298, file: !236, line: 194, column: 2)
!18308 = !DILocation(line: 194, column: 2, scope: !18307, inlinedAt: !18304)
!18309 = !DILocation(line: 194, column: 2, scope: !18310, inlinedAt: !18304)
!18310 = distinct !DILexicalBlock(scope: !18306, file: !236, line: 194, column: 2)
!18311 = !DILocalVariable(name: "key", arg: 1, scope: !18312, file: !7433, line: 84, type: !32)
!18312 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7433, file: !7433, line: 84, type: !7444, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18313)
!18313 = !{!18311}
!18314 = !DILocation(line: 0, scope: !18312, inlinedAt: !18315)
!18315 = distinct !DILocation(line: 215, column: 2, scope: !18298, inlinedAt: !18304)
!18316 = !DILocation(line: 95, column: 2, scope: !18312, inlinedAt: !18315)
!18317 = !{i64 1958138}
!18318 = !DILocation(line: 148, column: 1, scope: !18184)
!18319 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !137, file: !137, line: 225, type: !18320, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18324)
!18320 = !DISubroutineType(types: !18321)
!18321 = !{!492, !18322}
!18322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18323, size: 32)
!18323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2480)
!18324 = !{!18325}
!18325 = !DILocalVariable(name: "node", arg: 1, scope: !18319, file: !137, line: 225, type: !18322)
!18326 = !DILocation(line: 0, scope: !18319)
!18327 = !DILocation(line: 227, column: 15, scope: !18319)
!18328 = !DILocation(line: 227, column: 20, scope: !18319)
!18329 = !DILocation(line: 227, column: 2, scope: !18319)
!18330 = distinct !DISubprogram(name: "elapsed", scope: !2503, file: !2503, line: 62, type: !18331, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !397)
!18331 = !DISubroutineType(types: !18332)
!18332 = !{!116}
!18333 = !DILocation(line: 64, column: 9, scope: !18330)
!18334 = !DILocation(line: 64, column: 28, scope: !18330)
!18335 = !DILocation(line: 64, column: 35, scope: !18330)
!18336 = !DILocation(line: 64, column: 2, scope: !18330)
!18337 = distinct !DISubprogram(name: "first", scope: !2503, file: !2503, line: 39, type: !18338, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18340)
!18338 = !DISubroutineType(types: !18339)
!18339 = !{!2476}
!18340 = !{!18341}
!18341 = !DILocalVariable(name: "t", scope: !18337, file: !2503, line: 41, type: !18342)
!18342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 32)
!18343 = !DILocation(line: 41, column: 19, scope: !18337)
!18344 = !DILocation(line: 0, scope: !18337)
!18345 = !DILocation(line: 43, column: 9, scope: !18337)
!18346 = !DILocation(line: 43, column: 2, scope: !18337)
!18347 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !137, file: !137, line: 443, type: !18348, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18350)
!18348 = !DISubroutineType(types: !18349)
!18349 = !{null, !18342, !18342}
!18350 = !{!18351, !18352, !18353}
!18351 = !DILocalVariable(name: "successor", arg: 1, scope: !18347, file: !137, line: 443, type: !18342)
!18352 = !DILocalVariable(name: "node", arg: 2, scope: !18347, file: !137, line: 443, type: !18342)
!18353 = !DILocalVariable(name: "prev", scope: !18347, file: !137, line: 445, type: !18354)
!18354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18342)
!18355 = !DILocation(line: 0, scope: !18347)
!18356 = !DILocation(line: 445, column: 39, scope: !18347)
!18357 = !DILocation(line: 447, column: 8, scope: !18347)
!18358 = !DILocation(line: 447, column: 13, scope: !18347)
!18359 = !DILocation(line: 448, column: 8, scope: !18347)
!18360 = !DILocation(line: 448, column: 13, scope: !18347)
!18361 = !DILocation(line: 449, column: 8, scope: !18347)
!18362 = !DILocation(line: 449, column: 13, scope: !18347)
!18363 = !DILocation(line: 450, column: 18, scope: !18347)
!18364 = !DILocation(line: 451, column: 1, scope: !18347)
!18365 = distinct !DISubprogram(name: "next", scope: !2503, file: !2503, line: 46, type: !18366, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18368)
!18366 = !DISubroutineType(types: !18367)
!18367 = !{!2476, !2476}
!18368 = !{!18369, !18370}
!18369 = !DILocalVariable(name: "t", arg: 1, scope: !18365, file: !2503, line: 46, type: !2476)
!18370 = !DILocalVariable(name: "n", scope: !18365, file: !2503, line: 48, type: !18342)
!18371 = !DILocation(line: 0, scope: !18365)
!18372 = !DILocation(line: 48, column: 58, scope: !18365)
!18373 = !DILocation(line: 48, column: 19, scope: !18365)
!18374 = !DILocation(line: 50, column: 9, scope: !18365)
!18375 = !DILocation(line: 50, column: 2, scope: !18365)
!18376 = distinct !DISubprogram(name: "sys_dlist_append", scope: !137, file: !137, line: 404, type: !18377, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18380)
!18377 = !DISubroutineType(types: !18378)
!18378 = !{null, !18379, !18342}
!18379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 32)
!18380 = !{!18381, !18382, !18383}
!18381 = !DILocalVariable(name: "list", arg: 1, scope: !18376, file: !137, line: 404, type: !18379)
!18382 = !DILocalVariable(name: "node", arg: 2, scope: !18376, file: !137, line: 404, type: !18342)
!18383 = !DILocalVariable(name: "tail", scope: !18376, file: !137, line: 406, type: !18354)
!18384 = !DILocation(line: 0, scope: !18376)
!18385 = !DILocation(line: 406, column: 34, scope: !18376)
!18386 = !DILocation(line: 408, column: 8, scope: !18376)
!18387 = !DILocation(line: 408, column: 13, scope: !18376)
!18388 = !DILocation(line: 409, column: 8, scope: !18376)
!18389 = !DILocation(line: 409, column: 13, scope: !18376)
!18390 = !DILocation(line: 411, column: 8, scope: !18376)
!18391 = !DILocation(line: 411, column: 13, scope: !18376)
!18392 = !DILocation(line: 412, column: 13, scope: !18376)
!18393 = !DILocation(line: 413, column: 1, scope: !18376)
!18394 = distinct !DISubprogram(name: "next_timeout", scope: !2503, file: !2503, line: 67, type: !18331, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18395)
!18395 = !{!18396, !18397, !18398}
!18396 = !DILocalVariable(name: "to", scope: !18394, file: !2503, line: 69, type: !2476)
!18397 = !DILocalVariable(name: "ticks_elapsed", scope: !18394, file: !2503, line: 70, type: !116)
!18398 = !DILocalVariable(name: "ret", scope: !18394, file: !2503, line: 71, type: !116)
!18399 = !DILocation(line: 69, column: 24, scope: !18394)
!18400 = !DILocation(line: 0, scope: !18394)
!18401 = !DILocation(line: 70, column: 26, scope: !18394)
!18402 = !DILocation(line: 73, column: 10, scope: !18403)
!18403 = distinct !DILexicalBlock(scope: !18394, file: !2503, line: 73, column: 6)
!18404 = !DILocation(line: 73, column: 19, scope: !18403)
!18405 = !DILocation(line: 74, column: 21, scope: !18403)
!18406 = !DILocation(line: 74, column: 30, scope: !18403)
!18407 = !DILocation(line: 74, column: 28, scope: !18403)
!18408 = !DILocation(line: 74, column: 45, scope: !18403)
!18409 = !DILocation(line: 73, column: 6, scope: !18394)
!18410 = !DILocation(line: 77, column: 9, scope: !18411)
!18411 = distinct !DILexicalBlock(scope: !18403, file: !2503, line: 76, column: 9)
!18412 = !DILocation(line: 0, scope: !18403)
!18413 = !DILocation(line: 81, column: 20, scope: !18414)
!18414 = distinct !DILexicalBlock(scope: !18394, file: !2503, line: 81, column: 6)
!18415 = !DILocation(line: 81, column: 6, scope: !18414)
!18416 = !DILocation(line: 81, column: 32, scope: !18414)
!18417 = !DILocation(line: 85, column: 2, scope: !18394)
!18418 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !137, file: !137, line: 341, type: !18419, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18421)
!18419 = !DISubroutineType(types: !18420)
!18420 = !{!18342, !18379, !18342}
!18421 = !{!18422, !18423}
!18422 = !DILocalVariable(name: "list", arg: 1, scope: !18418, file: !137, line: 341, type: !18379)
!18423 = !DILocalVariable(name: "node", arg: 2, scope: !18418, file: !137, line: 342, type: !18342)
!18424 = !DILocation(line: 0, scope: !18418)
!18425 = !DILocation(line: 344, column: 15, scope: !18418)
!18426 = !DILocation(line: 344, column: 9, scope: !18418)
!18427 = !DILocation(line: 344, column: 26, scope: !18418)
!18428 = !DILocation(line: 344, column: 2, scope: !18418)
!18429 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !137, file: !137, line: 325, type: !18419, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18430)
!18430 = !{!18431, !18432}
!18431 = !DILocalVariable(name: "list", arg: 1, scope: !18429, file: !137, line: 325, type: !18379)
!18432 = !DILocalVariable(name: "node", arg: 2, scope: !18429, file: !137, line: 326, type: !18342)
!18433 = !DILocation(line: 0, scope: !18429)
!18434 = !DILocation(line: 328, column: 24, scope: !18429)
!18435 = !DILocation(line: 328, column: 15, scope: !18429)
!18436 = !DILocation(line: 328, column: 9, scope: !18429)
!18437 = !DILocation(line: 328, column: 45, scope: !18429)
!18438 = !DILocation(line: 328, column: 2, scope: !18429)
!18439 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !18440, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18442)
!18440 = !DISubroutineType(types: !18441)
!18441 = !{!18342, !18379}
!18442 = !{!18443}
!18443 = !DILocalVariable(name: "list", arg: 1, scope: !18439, file: !137, line: 294, type: !18379)
!18444 = !DILocation(line: 0, scope: !18439)
!18445 = !DILocation(line: 296, column: 9, scope: !18439)
!18446 = !DILocation(line: 296, column: 2, scope: !18439)
!18447 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !18448, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18450)
!18448 = !DISubroutineType(types: !18449)
!18449 = !{!492, !18379}
!18450 = !{!18451}
!18451 = !DILocalVariable(name: "list", arg: 1, scope: !18447, file: !137, line: 266, type: !18379)
!18452 = !DILocation(line: 0, scope: !18447)
!18453 = !DILocation(line: 268, column: 15, scope: !18447)
!18454 = !DILocation(line: 268, column: 20, scope: !18447)
!18455 = !DILocation(line: 268, column: 2, scope: !18447)
!18456 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2503, file: !2503, line: 150, type: !18457, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18459)
!18457 = !DISubroutineType(types: !18458)
!18458 = !{!105, !2476}
!18459 = !{!18460, !18461, !18462, !18464}
!18460 = !DILocalVariable(name: "to", arg: 1, scope: !18456, file: !2503, line: 150, type: !2476)
!18461 = !DILocalVariable(name: "ret", scope: !18456, file: !2503, line: 152, type: !105)
!18462 = !DILocalVariable(name: "__i", scope: !18463, file: !2503, line: 154, type: !18197)
!18463 = distinct !DILexicalBlock(scope: !18456, file: !2503, line: 154, column: 2)
!18464 = !DILocalVariable(name: "__key", scope: !18463, file: !2503, line: 154, type: !18197)
!18465 = !DILocation(line: 0, scope: !18456)
!18466 = !DILocation(line: 0, scope: !18463)
!18467 = !DILocation(line: 0, scope: !18225, inlinedAt: !18468)
!18468 = distinct !DILocation(line: 154, column: 2, scope: !18463)
!18469 = !DILocation(line: 55, column: 2, scope: !18234, inlinedAt: !18470)
!18470 = distinct !DILocation(line: 145, column: 10, scope: !18225, inlinedAt: !18468)
!18471 = !DILocation(line: 0, scope: !18234, inlinedAt: !18470)
!18472 = !DILocation(line: 148, column: 2, scope: !18242, inlinedAt: !18468)
!18473 = !DILocation(line: 148, column: 2, scope: !18243, inlinedAt: !18468)
!18474 = !DILocation(line: 148, column: 2, scope: !18246, inlinedAt: !18468)
!18475 = !DILocation(line: 160, column: 2, scope: !18225, inlinedAt: !18468)
!18476 = !DILocation(line: 155, column: 7, scope: !18477)
!18477 = distinct !DILexicalBlock(scope: !18478, file: !2503, line: 155, column: 7)
!18478 = distinct !DILexicalBlock(scope: !18479, file: !2503, line: 154, column: 24)
!18479 = distinct !DILexicalBlock(scope: !18463, file: !2503, line: 154, column: 2)
!18480 = !DILocation(line: 155, column: 7, scope: !18478)
!18481 = !DILocation(line: 156, column: 4, scope: !18482)
!18482 = distinct !DILexicalBlock(scope: !18477, file: !2503, line: 155, column: 39)
!18483 = !DILocation(line: 158, column: 3, scope: !18482)
!18484 = !DILocation(line: 0, scope: !18298, inlinedAt: !18485)
!18485 = distinct !DILocation(line: 154, column: 2, scope: !18479)
!18486 = !DILocation(line: 194, column: 2, scope: !18306, inlinedAt: !18485)
!18487 = !DILocation(line: 194, column: 2, scope: !18307, inlinedAt: !18485)
!18488 = !DILocation(line: 194, column: 2, scope: !18310, inlinedAt: !18485)
!18489 = !DILocation(line: 0, scope: !18312, inlinedAt: !18490)
!18490 = distinct !DILocation(line: 215, column: 2, scope: !18298, inlinedAt: !18485)
!18491 = !DILocation(line: 95, column: 2, scope: !18312, inlinedAt: !18490)
!18492 = !DILocation(line: 161, column: 2, scope: !18456)
!18493 = distinct !DISubprogram(name: "remove_timeout", scope: !2503, file: !2503, line: 53, type: !2497, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18494)
!18494 = !{!18495}
!18495 = !DILocalVariable(name: "t", arg: 1, scope: !18493, file: !2503, line: 53, type: !2476)
!18496 = !DILocation(line: 0, scope: !18493)
!18497 = !DILocation(line: 55, column: 6, scope: !18498)
!18498 = distinct !DILexicalBlock(scope: !18493, file: !2503, line: 55, column: 6)
!18499 = !DILocation(line: 55, column: 14, scope: !18498)
!18500 = !DILocation(line: 55, column: 6, scope: !18493)
!18501 = !DILocation(line: 56, column: 25, scope: !18502)
!18502 = distinct !DILexicalBlock(scope: !18498, file: !2503, line: 55, column: 23)
!18503 = !DILocation(line: 56, column: 12, scope: !18502)
!18504 = !DILocation(line: 56, column: 19, scope: !18502)
!18505 = !DILocation(line: 57, column: 2, scope: !18502)
!18506 = !DILocation(line: 59, column: 23, scope: !18493)
!18507 = !DILocation(line: 59, column: 2, scope: !18493)
!18508 = !DILocation(line: 60, column: 1, scope: !18493)
!18509 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !137, file: !137, line: 496, type: !18510, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18512)
!18510 = !DISubroutineType(types: !18511)
!18511 = !{null, !18342}
!18512 = !{!18513, !18514, !18515}
!18513 = !DILocalVariable(name: "node", arg: 1, scope: !18509, file: !137, line: 496, type: !18342)
!18514 = !DILocalVariable(name: "prev", scope: !18509, file: !137, line: 498, type: !18354)
!18515 = !DILocalVariable(name: "next", scope: !18509, file: !137, line: 499, type: !18354)
!18516 = !DILocation(line: 0, scope: !18509)
!18517 = !DILocation(line: 498, column: 34, scope: !18509)
!18518 = !DILocation(line: 499, column: 34, scope: !18509)
!18519 = !DILocation(line: 501, column: 8, scope: !18509)
!18520 = !DILocation(line: 501, column: 13, scope: !18509)
!18521 = !DILocation(line: 502, column: 8, scope: !18509)
!18522 = !DILocation(line: 502, column: 13, scope: !18509)
!18523 = !DILocation(line: 503, column: 2, scope: !18509)
!18524 = !DILocation(line: 504, column: 1, scope: !18509)
!18525 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !18510, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18526)
!18526 = !{!18527}
!18527 = !DILocalVariable(name: "node", arg: 1, scope: !18525, file: !137, line: 211, type: !18342)
!18528 = !DILocation(line: 0, scope: !18525)
!18529 = !DILocation(line: 213, column: 8, scope: !18525)
!18530 = !DILocation(line: 213, column: 13, scope: !18525)
!18531 = !DILocation(line: 214, column: 8, scope: !18525)
!18532 = !DILocation(line: 214, column: 13, scope: !18525)
!18533 = !DILocation(line: 215, column: 1, scope: !18525)
!18534 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2503, file: !2503, line: 183, type: !18535, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18539)
!18535 = !DISubroutineType(types: !18536)
!18536 = !{!107, !18537}
!18537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18538, size: 32)
!18538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2477)
!18539 = !{!18540, !18541, !18542, !18544}
!18540 = !DILocalVariable(name: "timeout", arg: 1, scope: !18534, file: !2503, line: 183, type: !18537)
!18541 = !DILocalVariable(name: "ticks", scope: !18534, file: !2503, line: 185, type: !107)
!18542 = !DILocalVariable(name: "__i", scope: !18543, file: !2503, line: 187, type: !18197)
!18543 = distinct !DILexicalBlock(scope: !18534, file: !2503, line: 187, column: 2)
!18544 = !DILocalVariable(name: "__key", scope: !18543, file: !2503, line: 187, type: !18197)
!18545 = !DILocation(line: 0, scope: !18534)
!18546 = !DILocation(line: 0, scope: !18543)
!18547 = !DILocation(line: 0, scope: !18225, inlinedAt: !18548)
!18548 = distinct !DILocation(line: 187, column: 2, scope: !18543)
!18549 = !DILocation(line: 55, column: 2, scope: !18234, inlinedAt: !18550)
!18550 = distinct !DILocation(line: 145, column: 10, scope: !18225, inlinedAt: !18548)
!18551 = !DILocation(line: 0, scope: !18234, inlinedAt: !18550)
!18552 = !DILocation(line: 148, column: 2, scope: !18242, inlinedAt: !18548)
!18553 = !DILocation(line: 148, column: 2, scope: !18243, inlinedAt: !18548)
!18554 = !DILocation(line: 148, column: 2, scope: !18246, inlinedAt: !18548)
!18555 = !DILocation(line: 160, column: 2, scope: !18225, inlinedAt: !18548)
!18556 = !DILocation(line: 188, column: 11, scope: !18557)
!18557 = distinct !DILexicalBlock(scope: !18558, file: !2503, line: 187, column: 24)
!18558 = distinct !DILexicalBlock(scope: !18543, file: !2503, line: 187, column: 2)
!18559 = !DILocation(line: 0, scope: !18298, inlinedAt: !18560)
!18560 = distinct !DILocation(line: 187, column: 2, scope: !18558)
!18561 = !DILocation(line: 194, column: 2, scope: !18306, inlinedAt: !18560)
!18562 = !DILocation(line: 194, column: 2, scope: !18307, inlinedAt: !18560)
!18563 = !DILocation(line: 194, column: 2, scope: !18310, inlinedAt: !18560)
!18564 = !DILocation(line: 0, scope: !18312, inlinedAt: !18565)
!18565 = distinct !DILocation(line: 215, column: 2, scope: !18298, inlinedAt: !18560)
!18566 = !DILocation(line: 95, column: 2, scope: !18312, inlinedAt: !18565)
!18567 = !DILocation(line: 191, column: 2, scope: !18534)
!18568 = distinct !DISubprogram(name: "timeout_rem", scope: !2503, file: !2503, line: 165, type: !18535, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18569)
!18569 = !{!18570, !18571, !18572}
!18570 = !DILocalVariable(name: "timeout", arg: 1, scope: !18568, file: !2503, line: 165, type: !18537)
!18571 = !DILocalVariable(name: "ticks", scope: !18568, file: !2503, line: 167, type: !107)
!18572 = !DILocalVariable(name: "t", scope: !18573, file: !2503, line: 173, type: !2476)
!18573 = distinct !DILexicalBlock(scope: !18568, file: !2503, line: 173, column: 2)
!18574 = !DILocation(line: 0, scope: !18568)
!18575 = !DILocation(line: 169, column: 6, scope: !18576)
!18576 = distinct !DILexicalBlock(scope: !18568, file: !2503, line: 169, column: 6)
!18577 = !DILocation(line: 169, column: 6, scope: !18568)
!18578 = !DILocation(line: 173, column: 28, scope: !18573)
!18579 = !DILocation(line: 0, scope: !18573)
!18580 = !DILocation(line: 173, column: 39, scope: !18581)
!18581 = distinct !DILexicalBlock(scope: !18573, file: !2503, line: 173, column: 2)
!18582 = !DILocation(line: 173, column: 2, scope: !18573)
!18583 = !DILocation(line: 174, column: 15, scope: !18584)
!18584 = distinct !DILexicalBlock(scope: !18581, file: !2503, line: 173, column: 61)
!18585 = !DILocation(line: 174, column: 9, scope: !18584)
!18586 = !DILocation(line: 175, column: 15, scope: !18587)
!18587 = distinct !DILexicalBlock(scope: !18584, file: !2503, line: 175, column: 7)
!18588 = !DILocation(line: 175, column: 7, scope: !18584)
!18589 = !DILocation(line: 173, column: 52, scope: !18581)
!18590 = distinct !{!18590, !18582, !18591}
!18591 = !DILocation(line: 178, column: 2, scope: !18573)
!18592 = !DILocation(line: 180, column: 17, scope: !18568)
!18593 = !DILocation(line: 180, column: 15, scope: !18568)
!18594 = !DILocation(line: 180, column: 2, scope: !18568)
!18595 = !DILocation(line: 181, column: 1, scope: !18568)
!18596 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14564, file: !14564, line: 35, type: !18597, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18599)
!18597 = !DISubroutineType(types: !18598)
!18598 = !{!492, !18537}
!18599 = !{!18600}
!18600 = !DILocalVariable(name: "to", arg: 1, scope: !18596, file: !14564, line: 35, type: !18537)
!18601 = !DILocation(line: 0, scope: !18596)
!18602 = !DILocation(line: 37, column: 35, scope: !18596)
!18603 = !DILocation(line: 37, column: 10, scope: !18596)
!18604 = !DILocation(line: 37, column: 9, scope: !18596)
!18605 = !DILocation(line: 37, column: 2, scope: !18596)
!18606 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2503, file: !2503, line: 194, type: !18535, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18607)
!18607 = !{!18608, !18609, !18610, !18612}
!18608 = !DILocalVariable(name: "timeout", arg: 1, scope: !18606, file: !2503, line: 194, type: !18537)
!18609 = !DILocalVariable(name: "ticks", scope: !18606, file: !2503, line: 196, type: !107)
!18610 = !DILocalVariable(name: "__i", scope: !18611, file: !2503, line: 198, type: !18197)
!18611 = distinct !DILexicalBlock(scope: !18606, file: !2503, line: 198, column: 2)
!18612 = !DILocalVariable(name: "__key", scope: !18611, file: !2503, line: 198, type: !18197)
!18613 = !DILocation(line: 0, scope: !18606)
!18614 = !DILocation(line: 0, scope: !18611)
!18615 = !DILocation(line: 0, scope: !18225, inlinedAt: !18616)
!18616 = distinct !DILocation(line: 198, column: 2, scope: !18611)
!18617 = !DILocation(line: 55, column: 2, scope: !18234, inlinedAt: !18618)
!18618 = distinct !DILocation(line: 145, column: 10, scope: !18225, inlinedAt: !18616)
!18619 = !DILocation(line: 0, scope: !18234, inlinedAt: !18618)
!18620 = !DILocation(line: 148, column: 2, scope: !18242, inlinedAt: !18616)
!18621 = !DILocation(line: 148, column: 2, scope: !18243, inlinedAt: !18616)
!18622 = !DILocation(line: 148, column: 2, scope: !18246, inlinedAt: !18616)
!18623 = !DILocation(line: 160, column: 2, scope: !18225, inlinedAt: !18616)
!18624 = !DILocation(line: 199, column: 11, scope: !18625)
!18625 = distinct !DILexicalBlock(scope: !18626, file: !2503, line: 198, column: 24)
!18626 = distinct !DILexicalBlock(scope: !18611, file: !2503, line: 198, column: 2)
!18627 = !DILocation(line: 199, column: 23, scope: !18625)
!18628 = !DILocation(line: 0, scope: !18298, inlinedAt: !18629)
!18629 = distinct !DILocation(line: 198, column: 2, scope: !18626)
!18630 = !DILocation(line: 194, column: 2, scope: !18306, inlinedAt: !18629)
!18631 = !DILocation(line: 194, column: 2, scope: !18307, inlinedAt: !18629)
!18632 = !DILocation(line: 194, column: 2, scope: !18310, inlinedAt: !18629)
!18633 = !DILocation(line: 0, scope: !18312, inlinedAt: !18634)
!18634 = distinct !DILocation(line: 215, column: 2, scope: !18298, inlinedAt: !18629)
!18635 = !DILocation(line: 95, column: 2, scope: !18312, inlinedAt: !18634)
!18636 = !DILocation(line: 199, column: 21, scope: !18625)
!18637 = !DILocation(line: 202, column: 2, scope: !18606)
!18638 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2503, file: !2503, line: 205, type: !18331, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18639)
!18639 = !{!18640, !18641, !18643}
!18640 = !DILocalVariable(name: "ret", scope: !18638, file: !2503, line: 207, type: !116)
!18641 = !DILocalVariable(name: "__i", scope: !18642, file: !2503, line: 209, type: !18197)
!18642 = distinct !DILexicalBlock(scope: !18638, file: !2503, line: 209, column: 2)
!18643 = !DILocalVariable(name: "__key", scope: !18642, file: !2503, line: 209, type: !18197)
!18644 = !DILocation(line: 0, scope: !18638)
!18645 = !DILocation(line: 0, scope: !18642)
!18646 = !DILocation(line: 0, scope: !18225, inlinedAt: !18647)
!18647 = distinct !DILocation(line: 209, column: 2, scope: !18642)
!18648 = !DILocation(line: 55, column: 2, scope: !18234, inlinedAt: !18649)
!18649 = distinct !DILocation(line: 145, column: 10, scope: !18225, inlinedAt: !18647)
!18650 = !DILocation(line: 0, scope: !18234, inlinedAt: !18649)
!18651 = !DILocation(line: 148, column: 2, scope: !18242, inlinedAt: !18647)
!18652 = !DILocation(line: 148, column: 2, scope: !18243, inlinedAt: !18647)
!18653 = !DILocation(line: 148, column: 2, scope: !18246, inlinedAt: !18647)
!18654 = !DILocation(line: 160, column: 2, scope: !18225, inlinedAt: !18647)
!18655 = !DILocation(line: 210, column: 9, scope: !18656)
!18656 = distinct !DILexicalBlock(scope: !18657, file: !2503, line: 209, column: 24)
!18657 = distinct !DILexicalBlock(scope: !18642, file: !2503, line: 209, column: 2)
!18658 = !DILocation(line: 0, scope: !18298, inlinedAt: !18659)
!18659 = distinct !DILocation(line: 209, column: 2, scope: !18657)
!18660 = !DILocation(line: 194, column: 2, scope: !18306, inlinedAt: !18659)
!18661 = !DILocation(line: 194, column: 2, scope: !18307, inlinedAt: !18659)
!18662 = !DILocation(line: 194, column: 2, scope: !18310, inlinedAt: !18659)
!18663 = !DILocation(line: 0, scope: !18312, inlinedAt: !18664)
!18664 = distinct !DILocation(line: 215, column: 2, scope: !18298, inlinedAt: !18659)
!18665 = !DILocation(line: 95, column: 2, scope: !18312, inlinedAt: !18664)
!18666 = !DILocation(line: 212, column: 2, scope: !18638)
!18667 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2503, file: !2503, line: 215, type: !12045, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18668)
!18668 = !{!18669, !18670, !18671, !18673, !18674, !18677, !18678}
!18669 = !DILocalVariable(name: "ticks", arg: 1, scope: !18667, file: !2503, line: 215, type: !116)
!18670 = !DILocalVariable(name: "is_idle", arg: 2, scope: !18667, file: !2503, line: 215, type: !492)
!18671 = !DILocalVariable(name: "__i", scope: !18672, file: !2503, line: 217, type: !18197)
!18672 = distinct !DILexicalBlock(scope: !18667, file: !2503, line: 217, column: 2)
!18673 = !DILocalVariable(name: "__key", scope: !18672, file: !2503, line: 217, type: !18197)
!18674 = !DILocalVariable(name: "next_to", scope: !18675, file: !2503, line: 218, type: !105)
!18675 = distinct !DILexicalBlock(scope: !18676, file: !2503, line: 217, column: 24)
!18676 = distinct !DILexicalBlock(scope: !18672, file: !2503, line: 217, column: 2)
!18677 = !DILocalVariable(name: "sooner", scope: !18675, file: !2503, line: 219, type: !492)
!18678 = !DILocalVariable(name: "imminent", scope: !18675, file: !2503, line: 221, type: !492)
!18679 = !DILocation(line: 0, scope: !18667)
!18680 = !DILocation(line: 0, scope: !18672)
!18681 = !DILocation(line: 0, scope: !18225, inlinedAt: !18682)
!18682 = distinct !DILocation(line: 217, column: 2, scope: !18672)
!18683 = !DILocation(line: 55, column: 2, scope: !18234, inlinedAt: !18684)
!18684 = distinct !DILocation(line: 145, column: 10, scope: !18225, inlinedAt: !18682)
!18685 = !DILocation(line: 0, scope: !18234, inlinedAt: !18684)
!18686 = !DILocation(line: 148, column: 2, scope: !18242, inlinedAt: !18682)
!18687 = !DILocation(line: 148, column: 2, scope: !18243, inlinedAt: !18682)
!18688 = !DILocation(line: 148, column: 2, scope: !18246, inlinedAt: !18682)
!18689 = !DILocation(line: 160, column: 2, scope: !18225, inlinedAt: !18682)
!18690 = !DILocation(line: 218, column: 17, scope: !18675)
!18691 = !DILocation(line: 0, scope: !18675)
!18692 = !DILocation(line: 221, column: 27, scope: !18675)
!18693 = !DILocation(line: 233, column: 17, scope: !18694)
!18694 = distinct !DILexicalBlock(scope: !18675, file: !2503, line: 233, column: 7)
!18695 = !DILocation(line: 234, column: 26, scope: !18696)
!18696 = distinct !DILexicalBlock(scope: !18694, file: !2503, line: 233, column: 56)
!18697 = !DILocation(line: 234, column: 4, scope: !18696)
!18698 = !DILocation(line: 235, column: 3, scope: !18696)
!18699 = !DILocation(line: 0, scope: !18298, inlinedAt: !18700)
!18700 = distinct !DILocation(line: 217, column: 2, scope: !18676)
!18701 = !DILocation(line: 194, column: 2, scope: !18306, inlinedAt: !18700)
!18702 = !DILocation(line: 194, column: 2, scope: !18307, inlinedAt: !18700)
!18703 = !DILocation(line: 194, column: 2, scope: !18310, inlinedAt: !18700)
!18704 = !DILocation(line: 0, scope: !18312, inlinedAt: !18705)
!18705 = distinct !DILocation(line: 215, column: 2, scope: !18298, inlinedAt: !18700)
!18706 = !DILocation(line: 95, column: 2, scope: !18312, inlinedAt: !18705)
!18707 = !DILocation(line: 237, column: 1, scope: !18667)
!18708 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2503, file: !2503, line: 239, type: !18709, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18711)
!18709 = !DISubroutineType(types: !18710)
!18710 = !{null, !116}
!18711 = !{!18712, !18713, !18714, !18716}
!18712 = !DILocalVariable(name: "ticks", arg: 1, scope: !18708, file: !2503, line: 239, type: !116)
!18713 = !DILocalVariable(name: "key", scope: !18708, file: !2503, line: 245, type: !18197)
!18714 = !DILocalVariable(name: "t", scope: !18715, file: !2503, line: 262, type: !2476)
!18715 = distinct !DILexicalBlock(scope: !18708, file: !2503, line: 261, column: 67)
!18716 = !DILocalVariable(name: "dt", scope: !18715, file: !2503, line: 263, type: !105)
!18717 = !DILocation(line: 0, scope: !18708)
!18718 = !DILocation(line: 242, column: 2, scope: !18708)
!18719 = !DILocation(line: 0, scope: !18225, inlinedAt: !18720)
!18720 = distinct !DILocation(line: 245, column: 25, scope: !18708)
!18721 = !DILocation(line: 55, column: 2, scope: !18234, inlinedAt: !18722)
!18722 = distinct !DILocation(line: 145, column: 10, scope: !18225, inlinedAt: !18720)
!18723 = !DILocation(line: 0, scope: !18234, inlinedAt: !18722)
!18724 = !DILocation(line: 148, column: 2, scope: !18242, inlinedAt: !18720)
!18725 = !DILocation(line: 148, column: 2, scope: !18243, inlinedAt: !18720)
!18726 = !DILocation(line: 148, column: 2, scope: !18246, inlinedAt: !18720)
!18727 = !DILocation(line: 160, column: 2, scope: !18225, inlinedAt: !18720)
!18728 = !DILocation(line: 261, column: 9, scope: !18708)
!18729 = !DILocation(line: 261, column: 17, scope: !18708)
!18730 = !DILocation(line: 261, column: 25, scope: !18708)
!18731 = !DILocation(line: 261, column: 37, scope: !18708)
!18732 = !DILocation(line: 261, column: 47, scope: !18708)
!18733 = !DILocation(line: 261, column: 44, scope: !18708)
!18734 = !DILocation(line: 261, column: 2, scope: !18708)
!18735 = !DILocation(line: 0, scope: !18715)
!18736 = !DILocation(line: 263, column: 12, scope: !18715)
!18737 = !DILocation(line: 265, column: 16, scope: !18715)
!18738 = !DILocation(line: 265, column: 13, scope: !18715)
!18739 = !DILocation(line: 266, column: 13, scope: !18715)
!18740 = !DILocation(line: 267, column: 3, scope: !18715)
!18741 = !DILocation(line: 0, scope: !18298, inlinedAt: !18742)
!18742 = distinct !DILocation(line: 269, column: 3, scope: !18715)
!18743 = !DILocation(line: 194, column: 2, scope: !18306, inlinedAt: !18742)
!18744 = !DILocation(line: 194, column: 2, scope: !18307, inlinedAt: !18742)
!18745 = !DILocation(line: 194, column: 2, scope: !18310, inlinedAt: !18742)
!18746 = !DILocation(line: 0, scope: !18312, inlinedAt: !18747)
!18747 = distinct !DILocation(line: 215, column: 2, scope: !18298, inlinedAt: !18742)
!18748 = !DILocation(line: 95, column: 2, scope: !18312, inlinedAt: !18747)
!18749 = !DILocation(line: 270, column: 6, scope: !18715)
!18750 = !DILocation(line: 270, column: 3, scope: !18715)
!18751 = !DILocation(line: 0, scope: !18225, inlinedAt: !18752)
!18752 = distinct !DILocation(line: 271, column: 9, scope: !18715)
!18753 = !DILocation(line: 55, column: 2, scope: !18234, inlinedAt: !18754)
!18754 = distinct !DILocation(line: 145, column: 10, scope: !18225, inlinedAt: !18752)
!18755 = !DILocation(line: 0, scope: !18234, inlinedAt: !18754)
!18756 = !DILocation(line: 148, column: 2, scope: !18242, inlinedAt: !18752)
!18757 = !DILocation(line: 148, column: 2, scope: !18243, inlinedAt: !18752)
!18758 = !DILocation(line: 148, column: 2, scope: !18246, inlinedAt: !18752)
!18759 = !DILocation(line: 160, column: 2, scope: !18225, inlinedAt: !18752)
!18760 = !DILocation(line: 272, column: 22, scope: !18715)
!18761 = distinct !{!18761, !18734, !18762}
!18762 = !DILocation(line: 273, column: 2, scope: !18708)
!18763 = !DILocation(line: 276, column: 19, scope: !18764)
!18764 = distinct !DILexicalBlock(scope: !18765, file: !2503, line: 275, column: 23)
!18765 = distinct !DILexicalBlock(scope: !18708, file: !2503, line: 275, column: 6)
!18766 = !DILocation(line: 277, column: 2, scope: !18764)
!18767 = !DILocation(line: 279, column: 15, scope: !18708)
!18768 = !DILocation(line: 279, column: 12, scope: !18708)
!18769 = !DILocation(line: 280, column: 21, scope: !18708)
!18770 = !DILocation(line: 282, column: 24, scope: !18708)
!18771 = !DILocation(line: 282, column: 2, scope: !18708)
!18772 = !DILocation(line: 0, scope: !18298, inlinedAt: !18773)
!18773 = distinct !DILocation(line: 284, column: 2, scope: !18708)
!18774 = !DILocation(line: 194, column: 2, scope: !18306, inlinedAt: !18773)
!18775 = !DILocation(line: 194, column: 2, scope: !18307, inlinedAt: !18773)
!18776 = !DILocation(line: 194, column: 2, scope: !18310, inlinedAt: !18773)
!18777 = !DILocation(line: 0, scope: !18312, inlinedAt: !18778)
!18778 = distinct !DILocation(line: 215, column: 2, scope: !18298, inlinedAt: !18773)
!18779 = !DILocation(line: 95, column: 2, scope: !18312, inlinedAt: !18778)
!18780 = !DILocation(line: 285, column: 1, scope: !18708)
!18781 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2503, file: !2503, line: 287, type: !18782, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18784)
!18782 = !DISubroutineType(types: !18783)
!18783 = !{!109}
!18784 = !{!18785, !18786, !18788}
!18785 = !DILocalVariable(name: "t", scope: !18781, file: !2503, line: 289, type: !114)
!18786 = !DILocalVariable(name: "__i", scope: !18787, file: !2503, line: 291, type: !18197)
!18787 = distinct !DILexicalBlock(scope: !18781, file: !2503, line: 291, column: 2)
!18788 = !DILocalVariable(name: "__key", scope: !18787, file: !2503, line: 291, type: !18197)
!18789 = !DILocation(line: 0, scope: !18781)
!18790 = !DILocation(line: 0, scope: !18787)
!18791 = !DILocation(line: 0, scope: !18225, inlinedAt: !18792)
!18792 = distinct !DILocation(line: 291, column: 2, scope: !18787)
!18793 = !DILocation(line: 55, column: 2, scope: !18234, inlinedAt: !18794)
!18794 = distinct !DILocation(line: 145, column: 10, scope: !18225, inlinedAt: !18792)
!18795 = !DILocation(line: 0, scope: !18234, inlinedAt: !18794)
!18796 = !DILocation(line: 148, column: 2, scope: !18242, inlinedAt: !18792)
!18797 = !DILocation(line: 148, column: 2, scope: !18243, inlinedAt: !18792)
!18798 = !DILocation(line: 148, column: 2, scope: !18246, inlinedAt: !18792)
!18799 = !DILocation(line: 160, column: 2, scope: !18225, inlinedAt: !18792)
!18800 = !DILocation(line: 292, column: 7, scope: !18801)
!18801 = distinct !DILexicalBlock(scope: !18802, file: !2503, line: 291, column: 24)
!18802 = distinct !DILexicalBlock(scope: !18787, file: !2503, line: 291, column: 2)
!18803 = !DILocation(line: 292, column: 19, scope: !18801)
!18804 = !DILocation(line: 0, scope: !18298, inlinedAt: !18805)
!18805 = distinct !DILocation(line: 291, column: 2, scope: !18802)
!18806 = !DILocation(line: 194, column: 2, scope: !18306, inlinedAt: !18805)
!18807 = !DILocation(line: 194, column: 2, scope: !18307, inlinedAt: !18805)
!18808 = !DILocation(line: 194, column: 2, scope: !18310, inlinedAt: !18805)
!18809 = !DILocation(line: 0, scope: !18312, inlinedAt: !18810)
!18810 = distinct !DILocation(line: 215, column: 2, scope: !18298, inlinedAt: !18805)
!18811 = !DILocation(line: 95, column: 2, scope: !18312, inlinedAt: !18810)
!18812 = !DILocation(line: 292, column: 17, scope: !18801)
!18813 = !DILocation(line: 294, column: 2, scope: !18781)
!18814 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2503, file: !2503, line: 297, type: !395, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !397)
!18815 = !DILocation(line: 300, column: 19, scope: !18814)
!18816 = !DILocation(line: 300, column: 9, scope: !18814)
!18817 = !DILocation(line: 300, column: 2, scope: !18814)
!18818 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2503, file: !2503, line: 306, type: !18782, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !397)
!18819 = !DILocation(line: 308, column: 9, scope: !18818)
!18820 = !DILocation(line: 308, column: 2, scope: !18818)
!18821 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2503, file: !2503, line: 319, type: !7846, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18822)
!18822 = !{!18823, !18824, !18825, !18826}
!18823 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !18821, file: !2503, line: 319, type: !113)
!18824 = !DILocalVariable(name: "start_cycles", scope: !18821, file: !2503, line: 328, type: !113)
!18825 = !DILocalVariable(name: "cycles_to_wait", scope: !18821, file: !2503, line: 331, type: !113)
!18826 = !DILocalVariable(name: "current_cycles", scope: !18827, file: !2503, line: 338, type: !113)
!18827 = distinct !DILexicalBlock(scope: !18828, file: !2503, line: 337, column: 11)
!18828 = distinct !DILexicalBlock(scope: !18829, file: !2503, line: 337, column: 2)
!18829 = distinct !DILexicalBlock(scope: !18821, file: !2503, line: 337, column: 2)
!18830 = !DILocation(line: 0, scope: !18821)
!18831 = !DILocation(line: 322, column: 19, scope: !18832)
!18832 = distinct !DILexicalBlock(scope: !18821, file: !2503, line: 322, column: 6)
!18833 = !DILocation(line: 322, column: 6, scope: !18821)
!18834 = !DILocation(line: 328, column: 26, scope: !18821)
!18835 = !DILocation(line: 333, column: 43, scope: !18821)
!18836 = !DILocation(line: 337, column: 2, scope: !18821)
!18837 = !DILocation(line: 338, column: 29, scope: !18827)
!18838 = !DILocation(line: 0, scope: !18827)
!18839 = !DILocation(line: 341, column: 23, scope: !18840)
!18840 = distinct !DILexicalBlock(scope: !18827, file: !2503, line: 341, column: 7)
!18841 = !DILocation(line: 341, column: 39, scope: !18840)
!18842 = !DILocation(line: 349, column: 1, scope: !18821)
!18843 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !395, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !397)
!18844 = !DILocation(line: 1677, column: 9, scope: !18843)
!18845 = !DILocation(line: 1677, column: 2, scope: !18843)
!18846 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3442, file: !3442, line: 24, type: !395, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !397)
!18847 = !DILocation(line: 26, column: 9, scope: !18846)
!18848 = !DILocation(line: 26, column: 2, scope: !18846)
!18849 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2503, file: !2503, line: 364, type: !18850, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2473, retainedNodes: !18852)
!18850 = !DISubroutineType(types: !18851)
!18851 = !{!114, !18187}
!18852 = !{!18853, !18854}
!18853 = !DILocalVariable(name: "timeout", arg: 1, scope: !18849, file: !2503, line: 364, type: !18187)
!18854 = !DILocalVariable(name: "dt", scope: !18849, file: !2503, line: 366, type: !107)
!18855 = !DILocation(line: 0, scope: !18849)
!18856 = !DILocation(line: 368, column: 6, scope: !18849)
!18857 = !DILocation(line: 371, column: 10, scope: !18858)
!18858 = distinct !DILexicalBlock(scope: !18859, file: !2503, line: 370, column: 47)
!18859 = distinct !DILexicalBlock(scope: !18860, file: !2503, line: 370, column: 13)
!18860 = distinct !DILexicalBlock(scope: !18849, file: !2503, line: 368, column: 6)
!18861 = !DILocation(line: 371, column: 3, scope: !18858)
!18862 = !DILocation(line: 376, column: 58, scope: !18863)
!18863 = distinct !DILexicalBlock(scope: !18864, file: !2503, line: 376, column: 7)
!18864 = distinct !DILexicalBlock(scope: !18859, file: !2503, line: 372, column: 9)
!18865 = !DILocation(line: 376, column: 7, scope: !18864)
!18866 = !DILocation(line: 376, column: 43, scope: !18863)
!18867 = !DILocation(line: 377, column: 4, scope: !18868)
!18868 = distinct !DILexicalBlock(scope: !18863, file: !2503, line: 376, column: 64)
!18869 = !DILocation(line: 379, column: 10, scope: !18864)
!18870 = !DILocation(line: 379, column: 33, scope: !18864)
!18871 = !DILocation(line: 379, column: 31, scope: !18864)
!18872 = !DILocation(line: 379, column: 3, scope: !18864)
!18873 = !DILocation(line: 0, scope: !18860)
!18874 = !DILocation(line: 381, column: 1, scope: !18849)
!18875 = distinct !DISubprogram(name: "boot_banner", scope: !18876, file: !18876, line: 26, type: !266, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3254, retainedNodes: !397)
!18876 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18877 = !DILocation(line: 34, column: 2, scope: !18875)
!18878 = !DILocation(line: 36, column: 1, scope: !18875)
!18879 = distinct !DISubprogram(name: "statics_init", scope: !2533, file: !2533, line: 21, type: !2539, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18880)
!18880 = !{!18881, !18882}
!18881 = !DILocalVariable(name: "unused", arg: 1, scope: !18879, file: !2533, line: 21, type: !2541)
!18882 = !DILocalVariable(name: "h", scope: !18883, file: !2533, line: 24, type: !18884)
!18883 = distinct !DILexicalBlock(scope: !18879, file: !2533, line: 24, column: 2)
!18884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18885, size: 32)
!18885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !18886)
!18886 = !{!18887, !18893, !18899}
!18887 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18885, file: !122, line: 5074, baseType: !18888, size: 96)
!18888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !226, line: 56, size: 96, elements: !18889)
!18889 = !{!18890, !18891, !18892}
!18890 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !18888, file: !226, line: 57, baseType: !229, size: 32)
!18891 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !18888, file: !226, line: 58, baseType: !104, size: 32, offset: 32)
!18892 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !18888, file: !226, line: 59, baseType: !111, size: 32, offset: 64)
!18893 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !18885, file: !122, line: 5075, baseType: !18894, size: 64, offset: 96)
!18894 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !18895)
!18895 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !18896)
!18896 = !{!18897}
!18897 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !18895, file: !163, line: 232, baseType: !18898, size: 64)
!18898 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2519)
!18899 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !18885, file: !122, line: 5076, baseType: !18900, size: 32, offset: 160)
!18900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !236, line: 43, size: 32, elements: !18901)
!18901 = !{!18902}
!18902 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !18900, file: !236, line: 52, baseType: !22, size: 32)
!18903 = !DILocation(line: 0, scope: !18879)
!18904 = !DILocation(line: 0, scope: !18883)
!18905 = !DILocation(line: 24, column: 2, scope: !18906)
!18906 = distinct !DILexicalBlock(scope: !18907, file: !2533, line: 24, column: 2)
!18907 = distinct !DILexicalBlock(scope: !18908, file: !2533, line: 24, column: 2)
!18908 = distinct !DILexicalBlock(scope: !18883, file: !2533, line: 24, column: 2)
!18909 = !DILocation(line: 24, column: 2, scope: !18910)
!18910 = distinct !DILexicalBlock(scope: !18911, file: !2533, line: 24, column: 2)
!18911 = distinct !DILexicalBlock(scope: !18906, file: !2533, line: 24, column: 2)
!18912 = !DILocation(line: 24, column: 2, scope: !18907)
!18913 = !DILocation(line: 24, column: 2, scope: !18883)
!18914 = !DILocation(line: 52, column: 2, scope: !18879)
!18915 = !DILocation(line: 49, column: 27, scope: !18916)
!18916 = distinct !DILexicalBlock(scope: !18917, file: !2533, line: 48, column: 3)
!18917 = distinct !DILexicalBlock(scope: !18908, file: !2533, line: 24, column: 36)
!18918 = !DILocation(line: 49, column: 45, scope: !18916)
!18919 = !DILocation(line: 49, column: 4, scope: !18916)
!18920 = !DILocation(line: 24, column: 2, scope: !18908)
!18921 = !DILocation(line: 24, column: 2, scope: !18911)
!18922 = distinct !{!18922, !18913, !18923}
!18923 = !DILocation(line: 51, column: 2, scope: !18883)
!18924 = distinct !DISubprogram(name: "k_heap_init", scope: !2533, file: !2533, line: 13, type: !18925, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18927)
!18925 = !DISubroutineType(types: !18926)
!18926 = !{null, !18884, !104, !111}
!18927 = !{!18928, !18929, !18930}
!18928 = !DILocalVariable(name: "h", arg: 1, scope: !18924, file: !2533, line: 13, type: !18884)
!18929 = !DILocalVariable(name: "mem", arg: 2, scope: !18924, file: !2533, line: 13, type: !104)
!18930 = !DILocalVariable(name: "bytes", arg: 3, scope: !18924, file: !2533, line: 13, type: !111)
!18931 = !DILocation(line: 0, scope: !18924)
!18932 = !DILocation(line: 15, column: 19, scope: !18924)
!18933 = !DILocation(line: 15, column: 2, scope: !18924)
!18934 = !DILocation(line: 16, column: 20, scope: !18924)
!18935 = !DILocation(line: 16, column: 2, scope: !18924)
!18936 = !DILocation(line: 19, column: 1, scope: !18924)
!18937 = distinct !DISubprogram(name: "z_waitq_init", scope: !14496, file: !14496, line: 47, type: !18938, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18941)
!18938 = !DISubroutineType(types: !18939)
!18939 = !{null, !18940}
!18940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18894, size: 32)
!18941 = !{!18942}
!18942 = !DILocalVariable(name: "w", arg: 1, scope: !18937, file: !14496, line: 47, type: !18940)
!18943 = !DILocation(line: 0, scope: !18937)
!18944 = !DILocation(line: 49, column: 21, scope: !18937)
!18945 = !DILocation(line: 49, column: 2, scope: !18937)
!18946 = !DILocation(line: 50, column: 1, scope: !18937)
!18947 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !18948, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18951)
!18948 = !DISubroutineType(types: !18949)
!18949 = !{null, !18950}
!18950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18898, size: 32)
!18951 = !{!18952}
!18952 = !DILocalVariable(name: "list", arg: 1, scope: !18947, file: !137, line: 197, type: !18950)
!18953 = !DILocation(line: 0, scope: !18947)
!18954 = !DILocation(line: 199, column: 8, scope: !18947)
!18955 = !DILocation(line: 199, column: 13, scope: !18947)
!18956 = !DILocation(line: 200, column: 8, scope: !18947)
!18957 = !DILocation(line: 200, column: 13, scope: !18947)
!18958 = !DILocation(line: 201, column: 1, scope: !18947)
!18959 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2533, file: !2533, line: 64, type: !18960, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18966)
!18960 = !DISubroutineType(types: !18961)
!18961 = !{!104, !18884, !111, !111, !18962}
!18962 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !18963)
!18963 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !18964)
!18964 = !{!18965}
!18965 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18963, file: !108, line: 66, baseType: !107, size: 64)
!18966 = !{!18967, !18968, !18969, !18970, !18971, !18972, !18973, !18974, !18979}
!18967 = !DILocalVariable(name: "h", arg: 1, scope: !18959, file: !2533, line: 64, type: !18884)
!18968 = !DILocalVariable(name: "align", arg: 2, scope: !18959, file: !2533, line: 64, type: !111)
!18969 = !DILocalVariable(name: "bytes", arg: 3, scope: !18959, file: !2533, line: 64, type: !111)
!18970 = !DILocalVariable(name: "timeout", arg: 4, scope: !18959, file: !2533, line: 65, type: !18962)
!18971 = !DILocalVariable(name: "now", scope: !18959, file: !2533, line: 67, type: !109)
!18972 = !DILocalVariable(name: "end", scope: !18959, file: !2533, line: 67, type: !109)
!18973 = !DILocalVariable(name: "ret", scope: !18959, file: !2533, line: 68, type: !104)
!18974 = !DILocalVariable(name: "key", scope: !18959, file: !2533, line: 72, type: !18975)
!18975 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !236, line: 106, baseType: !18976)
!18976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !236, line: 32, size: 32, elements: !18977)
!18977 = !{!18978}
!18978 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18976, file: !236, line: 33, baseType: !105, size: 32)
!18979 = !DILocalVariable(name: "blocked_alloc", scope: !18959, file: !2533, line: 78, type: !492)
!18980 = !DILocation(line: 0, scope: !18959)
!18981 = !DILocation(line: 67, column: 21, scope: !18959)
!18982 = !DILocation(line: 70, column: 8, scope: !18959)
!18983 = !DILocation(line: 72, column: 41, scope: !18959)
!18984 = !DILocalVariable(name: "l", arg: 1, scope: !18985, file: !236, line: 136, type: !18988)
!18985 = distinct !DISubprogram(name: "k_spin_lock", scope: !236, file: !236, line: 136, type: !18986, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18989)
!18986 = !DISubroutineType(types: !18987)
!18987 = !{!18975, !18988}
!18988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18900, size: 32)
!18989 = !{!18984, !18990}
!18990 = !DILocalVariable(name: "k", scope: !18985, file: !236, line: 139, type: !18975)
!18991 = !DILocation(line: 0, scope: !18985, inlinedAt: !18992)
!18992 = distinct !DILocation(line: 72, column: 25, scope: !18959)
!18993 = !DILocation(line: 55, column: 2, scope: !18994, inlinedAt: !18998)
!18994 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7433, file: !7433, line: 42, type: !7434, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !18995)
!18995 = !{!18996, !18997}
!18996 = !DILocalVariable(name: "key", scope: !18994, file: !7433, line: 44, type: !32)
!18997 = !DILocalVariable(name: "tmp", scope: !18994, file: !7433, line: 53, type: !32)
!18998 = distinct !DILocation(line: 145, column: 10, scope: !18985, inlinedAt: !18992)
!18999 = !{i64 1952375}
!19000 = !DILocation(line: 0, scope: !18994, inlinedAt: !18998)
!19001 = !DILocation(line: 148, column: 2, scope: !19002, inlinedAt: !18992)
!19002 = distinct !DILexicalBlock(scope: !19003, file: !236, line: 148, column: 2)
!19003 = distinct !DILexicalBlock(scope: !18985, file: !236, line: 148, column: 2)
!19004 = !DILocation(line: 148, column: 2, scope: !19003, inlinedAt: !18992)
!19005 = !DILocation(line: 148, column: 2, scope: !19006, inlinedAt: !18992)
!19006 = distinct !DILexicalBlock(scope: !19002, file: !236, line: 148, column: 2)
!19007 = !DILocation(line: 160, column: 2, scope: !18985, inlinedAt: !18992)
!19008 = !DILocation(line: 1031, column: 3, scope: !19009, inlinedAt: !19012)
!19009 = distinct !DISubprogram(name: "__get_IPSR", scope: !7751, file: !7751, line: 1027, type: !395, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !19010)
!19010 = !{!19011}
!19011 = !DILocalVariable(name: "result", scope: !19009, file: !7751, line: 1029, type: !113)
!19012 = distinct !DILocation(line: 48, column: 10, scope: !19013, inlinedAt: !19014)
!19013 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8798, file: !8798, line: 46, type: !8799, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !397)
!19014 = distinct !DILocation(line: 76, column: 2, scope: !19015)
!19015 = distinct !DILexicalBlock(scope: !19016, file: !2533, line: 76, column: 2)
!19016 = distinct !DILexicalBlock(scope: !18959, file: !2533, line: 76, column: 2)
!19017 = !{i64 2830114}
!19018 = !DILocation(line: 0, scope: !19009, inlinedAt: !19012)
!19019 = !DILocation(line: 48, column: 9, scope: !19013, inlinedAt: !19014)
!19020 = !DILocation(line: 76, column: 2, scope: !19015)
!19021 = !DILocation(line: 81, column: 9, scope: !19022)
!19022 = distinct !DILexicalBlock(scope: !18959, file: !2533, line: 80, column: 22)
!19023 = !DILocation(line: 83, column: 9, scope: !19022)
!19024 = !DILocation(line: 85, column: 12, scope: !19025)
!19025 = distinct !DILexicalBlock(scope: !19022, file: !2533, line: 84, column: 7)
!19026 = !DILocation(line: 85, column: 21, scope: !19025)
!19027 = !DILocation(line: 76, column: 2, scope: !19028)
!19028 = distinct !DILexicalBlock(scope: !19015, file: !2533, line: 76, column: 2)
!19029 = !DILocation(line: 85, column: 30, scope: !19025)
!19030 = !DILocation(line: 85, column: 37, scope: !19025)
!19031 = !DILocation(line: 84, column: 7, scope: !19022)
!19032 = !DILocation(line: 99, column: 10, scope: !19022)
!19033 = !DILocation(line: 0, scope: !18985, inlinedAt: !19034)
!19034 = distinct !DILocation(line: 101, column: 9, scope: !19022)
!19035 = !DILocation(line: 55, column: 2, scope: !18994, inlinedAt: !19036)
!19036 = distinct !DILocation(line: 145, column: 10, scope: !18985, inlinedAt: !19034)
!19037 = !DILocation(line: 0, scope: !18994, inlinedAt: !19036)
!19038 = !DILocation(line: 148, column: 2, scope: !19002, inlinedAt: !19034)
!19039 = !DILocation(line: 148, column: 2, scope: !19003, inlinedAt: !19034)
!19040 = !DILocation(line: 148, column: 2, scope: !19006, inlinedAt: !19034)
!19041 = !DILocation(line: 160, column: 2, scope: !18985, inlinedAt: !19034)
!19042 = distinct !{!19042, !19043, !19044}
!19043 = !DILocation(line: 80, column: 2, scope: !18959)
!19044 = !DILocation(line: 102, column: 2, scope: !18959)
!19045 = !DILocalVariable(name: "key", arg: 2, scope: !19046, file: !236, line: 190, type: !18975)
!19046 = distinct !DISubprogram(name: "k_spin_unlock", scope: !236, file: !236, line: 189, type: !19047, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !19049)
!19047 = !DISubroutineType(types: !19048)
!19048 = !{null, !18988, !18975}
!19049 = !{!19050, !19045}
!19050 = !DILocalVariable(name: "l", arg: 1, scope: !19046, file: !236, line: 189, type: !18988)
!19051 = !DILocation(line: 0, scope: !19046, inlinedAt: !19052)
!19052 = distinct !DILocation(line: 106, column: 2, scope: !18959)
!19053 = !DILocation(line: 194, column: 2, scope: !19054, inlinedAt: !19052)
!19054 = distinct !DILexicalBlock(scope: !19055, file: !236, line: 194, column: 2)
!19055 = distinct !DILexicalBlock(scope: !19046, file: !236, line: 194, column: 2)
!19056 = !DILocation(line: 194, column: 2, scope: !19055, inlinedAt: !19052)
!19057 = !DILocation(line: 194, column: 2, scope: !19058, inlinedAt: !19052)
!19058 = distinct !DILexicalBlock(scope: !19054, file: !236, line: 194, column: 2)
!19059 = !DILocalVariable(name: "key", arg: 1, scope: !19060, file: !7433, line: 84, type: !32)
!19060 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7433, file: !7433, line: 84, type: !7444, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !19061)
!19061 = !{!19059}
!19062 = !DILocation(line: 0, scope: !19060, inlinedAt: !19063)
!19063 = distinct !DILocation(line: 215, column: 2, scope: !19046, inlinedAt: !19052)
!19064 = !DILocation(line: 95, column: 2, scope: !19060, inlinedAt: !19063)
!19065 = !{i64 1953192}
!19066 = !DILocation(line: 107, column: 2, scope: !18959)
!19067 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2533, file: !2533, line: 110, type: !19068, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !19070)
!19068 = !DISubroutineType(types: !19069)
!19069 = !{!104, !18884, !111, !18962}
!19070 = !{!19071, !19072, !19073, !19074}
!19071 = !DILocalVariable(name: "h", arg: 1, scope: !19067, file: !2533, line: 110, type: !18884)
!19072 = !DILocalVariable(name: "bytes", arg: 2, scope: !19067, file: !2533, line: 110, type: !111)
!19073 = !DILocalVariable(name: "timeout", arg: 3, scope: !19067, file: !2533, line: 110, type: !18962)
!19074 = !DILocalVariable(name: "ret", scope: !19067, file: !2533, line: 114, type: !104)
!19075 = !DILocation(line: 0, scope: !19067)
!19076 = !DILocation(line: 114, column: 14, scope: !19067)
!19077 = !DILocation(line: 118, column: 2, scope: !19067)
!19078 = distinct !DISubprogram(name: "k_heap_free", scope: !2533, file: !2533, line: 121, type: !19079, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !19081)
!19079 = !DISubroutineType(types: !19080)
!19080 = !{null, !18884, !104}
!19081 = !{!19082, !19083, !19084}
!19082 = !DILocalVariable(name: "h", arg: 1, scope: !19078, file: !2533, line: 121, type: !18884)
!19083 = !DILocalVariable(name: "mem", arg: 2, scope: !19078, file: !2533, line: 121, type: !104)
!19084 = !DILocalVariable(name: "key", scope: !19078, file: !2533, line: 123, type: !18975)
!19085 = !DILocation(line: 0, scope: !19078)
!19086 = !DILocation(line: 123, column: 41, scope: !19078)
!19087 = !DILocation(line: 0, scope: !18985, inlinedAt: !19088)
!19088 = distinct !DILocation(line: 123, column: 25, scope: !19078)
!19089 = !DILocation(line: 55, column: 2, scope: !18994, inlinedAt: !19090)
!19090 = distinct !DILocation(line: 145, column: 10, scope: !18985, inlinedAt: !19088)
!19091 = !DILocation(line: 0, scope: !18994, inlinedAt: !19090)
!19092 = !DILocation(line: 148, column: 2, scope: !19002, inlinedAt: !19088)
!19093 = !DILocation(line: 148, column: 2, scope: !19003, inlinedAt: !19088)
!19094 = !DILocation(line: 148, column: 2, scope: !19006, inlinedAt: !19088)
!19095 = !DILocation(line: 160, column: 2, scope: !18985, inlinedAt: !19088)
!19096 = !DILocation(line: 125, column: 20, scope: !19078)
!19097 = !DILocation(line: 125, column: 2, scope: !19078)
!19098 = !DILocation(line: 128, column: 60, scope: !19099)
!19099 = distinct !DILexicalBlock(scope: !19078, file: !2533, line: 128, column: 6)
!19100 = !DILocation(line: 128, column: 43, scope: !19099)
!19101 = !DILocation(line: 128, column: 68, scope: !19099)
!19102 = !DILocation(line: 128, column: 6, scope: !19078)
!19103 = !DILocation(line: 129, column: 3, scope: !19104)
!19104 = distinct !DILexicalBlock(scope: !19099, file: !2533, line: 128, column: 74)
!19105 = !DILocation(line: 130, column: 2, scope: !19104)
!19106 = !DILocation(line: 0, scope: !19046, inlinedAt: !19107)
!19107 = distinct !DILocation(line: 131, column: 3, scope: !19108)
!19108 = distinct !DILexicalBlock(scope: !19099, file: !2533, line: 130, column: 9)
!19109 = !DILocation(line: 194, column: 2, scope: !19054, inlinedAt: !19107)
!19110 = !DILocation(line: 194, column: 2, scope: !19055, inlinedAt: !19107)
!19111 = !DILocation(line: 194, column: 2, scope: !19058, inlinedAt: !19107)
!19112 = !DILocation(line: 0, scope: !19060, inlinedAt: !19113)
!19113 = distinct !DILocation(line: 215, column: 2, scope: !19046, inlinedAt: !19107)
!19114 = !DILocation(line: 95, column: 2, scope: !19060, inlinedAt: !19113)
!19115 = !DILocation(line: 133, column: 1, scope: !19078)
